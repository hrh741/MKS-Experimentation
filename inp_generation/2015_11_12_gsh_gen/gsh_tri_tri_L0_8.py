import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 0],
                        [1, -1, -1],
                        [1, -1, 0],
                        [1, -1, 1],
                        [1, 0, -1],
                        [1, 0, 0],
                        [1, 0, 1],
                        [1, 1, -1],
                        [1, 1, 0],
                        [1, 1, 1],
                        [2, -2, -2],
                        [2, -2, -1],
                        [2, -2, 0],
                        [2, -2, 1],
                        [2, -2, 2],
                        [2, -1, -2],
                        [2, -1, -1],
                        [2, -1, 0],
                        [2, -1, 1],
                        [2, -1, 2],
                        [2, 0, -2],
                        [2, 0, -1],
                        [2, 0, 0],
                        [2, 0, 1],
                        [2, 0, 2],
                        [2, 1, -2],
                        [2, 1, -1],
                        [2, 1, 0],
                        [2, 1, 1],
                        [2, 1, 2],
                        [2, 2, -2],
                        [2, 2, -1],
                        [2, 2, 0],
                        [2, 2, 1],
                        [2, 2, 2],
                        [3, -3, -3],
                        [3, -3, -2],
                        [3, -3, -1],
                        [3, -3, 0],
                        [3, -3, 1],
                        [3, -3, 2],
                        [3, -3, 3],
                        [3, -2, -3],
                        [3, -2, -2],
                        [3, -2, -1],
                        [3, -2, 0],
                        [3, -2, 1],
                        [3, -2, 2],
                        [3, -2, 3],
                        [3, -1, -3],
                        [3, -1, -2],
                        [3, -1, -1],
                        [3, -1, 0],
                        [3, -1, 1],
                        [3, -1, 2],
                        [3, -1, 3],
                        [3, 0, -3],
                        [3, 0, -2],
                        [3, 0, -1],
                        [3, 0, 0],
                        [3, 0, 1],
                        [3, 0, 2],
                        [3, 0, 3],
                        [3, 1, -3],
                        [3, 1, -2],
                        [3, 1, -1],
                        [3, 1, 0],
                        [3, 1, 1],
                        [3, 1, 2],
                        [3, 1, 3],
                        [3, 2, -3],
                        [3, 2, -2],
                        [3, 2, -1],
                        [3, 2, 0],
                        [3, 2, 1],
                        [3, 2, 2],
                        [3, 2, 3],
                        [3, 3, -3],
                        [3, 3, -2],
                        [3, 3, -1],
                        [3, 3, 0],
                        [3, 3, 1],
                        [3, 3, 2],
                        [3, 3, 3],
                        [4, -4, -4],
                        [4, -4, -3],
                        [4, -4, -2],
                        [4, -4, -1],
                        [4, -4, 0],
                        [4, -4, 1],
                        [4, -4, 2],
                        [4, -4, 3],
                        [4, -4, 4],
                        [4, -3, -4],
                        [4, -3, -3],
                        [4, -3, -2],
                        [4, -3, -1],
                        [4, -3, 0],
                        [4, -3, 1],
                        [4, -3, 2],
                        [4, -3, 3],
                        [4, -3, 4],
                        [4, -2, -4],
                        [4, -2, -3],
                        [4, -2, -2],
                        [4, -2, -1],
                        [4, -2, 0],
                        [4, -2, 1],
                        [4, -2, 2],
                        [4, -2, 3],
                        [4, -2, 4],
                        [4, -1, -4],
                        [4, -1, -3],
                        [4, -1, -2],
                        [4, -1, -1],
                        [4, -1, 0],
                        [4, -1, 1],
                        [4, -1, 2],
                        [4, -1, 3],
                        [4, -1, 4],
                        [4, 0, -4],
                        [4, 0, -3],
                        [4, 0, -2],
                        [4, 0, -1],
                        [4, 0, 0],
                        [4, 0, 1],
                        [4, 0, 2],
                        [4, 0, 3],
                        [4, 0, 4],
                        [4, 1, -4],
                        [4, 1, -3],
                        [4, 1, -2],
                        [4, 1, -1],
                        [4, 1, 0],
                        [4, 1, 1],
                        [4, 1, 2],
                        [4, 1, 3],
                        [4, 1, 4],
                        [4, 2, -4],
                        [4, 2, -3],
                        [4, 2, -2],
                        [4, 2, -1],
                        [4, 2, 0],
                        [4, 2, 1],
                        [4, 2, 2],
                        [4, 2, 3],
                        [4, 2, 4],
                        [4, 3, -4],
                        [4, 3, -3],
                        [4, 3, -2],
                        [4, 3, -1],
                        [4, 3, 0],
                        [4, 3, 1],
                        [4, 3, 2],
                        [4, 3, 3],
                        [4, 3, 4],
                        [4, 4, -4],
                        [4, 4, -3],
                        [4, 4, -2],
                        [4, 4, -1],
                        [4, 4, 0],
                        [4, 4, 1],
                        [4, 4, 2],
                        [4, 4, 3],
                        [4, 4, 4],
                        [5, -5, -5],
                        [5, -5, -4],
                        [5, -5, -3],
                        [5, -5, -2],
                        [5, -5, -1],
                        [5, -5, 0],
                        [5, -5, 1],
                        [5, -5, 2],
                        [5, -5, 3],
                        [5, -5, 4],
                        [5, -5, 5],
                        [5, -4, -5],
                        [5, -4, -4],
                        [5, -4, -3],
                        [5, -4, -2],
                        [5, -4, -1],
                        [5, -4, 0],
                        [5, -4, 1],
                        [5, -4, 2],
                        [5, -4, 3],
                        [5, -4, 4],
                        [5, -4, 5],
                        [5, -3, -5],
                        [5, -3, -4],
                        [5, -3, -3],
                        [5, -3, -2],
                        [5, -3, -1],
                        [5, -3, 0],
                        [5, -3, 1],
                        [5, -3, 2],
                        [5, -3, 3],
                        [5, -3, 4],
                        [5, -3, 5],
                        [5, -2, -5],
                        [5, -2, -4],
                        [5, -2, -3],
                        [5, -2, -2],
                        [5, -2, -1],
                        [5, -2, 0],
                        [5, -2, 1],
                        [5, -2, 2],
                        [5, -2, 3],
                        [5, -2, 4],
                        [5, -2, 5],
                        [5, -1, -5],
                        [5, -1, -4],
                        [5, -1, -3],
                        [5, -1, -2],
                        [5, -1, -1],
                        [5, -1, 0],
                        [5, -1, 1],
                        [5, -1, 2],
                        [5, -1, 3],
                        [5, -1, 4],
                        [5, -1, 5],
                        [5, 0, -5],
                        [5, 0, -4],
                        [5, 0, -3],
                        [5, 0, -2],
                        [5, 0, -1],
                        [5, 0, 0],
                        [5, 0, 1],
                        [5, 0, 2],
                        [5, 0, 3],
                        [5, 0, 4],
                        [5, 0, 5],
                        [5, 1, -5],
                        [5, 1, -4],
                        [5, 1, -3],
                        [5, 1, -2],
                        [5, 1, -1],
                        [5, 1, 0],
                        [5, 1, 1],
                        [5, 1, 2],
                        [5, 1, 3],
                        [5, 1, 4],
                        [5, 1, 5],
                        [5, 2, -5],
                        [5, 2, -4],
                        [5, 2, -3],
                        [5, 2, -2],
                        [5, 2, -1],
                        [5, 2, 0],
                        [5, 2, 1],
                        [5, 2, 2],
                        [5, 2, 3],
                        [5, 2, 4],
                        [5, 2, 5],
                        [5, 3, -5],
                        [5, 3, -4],
                        [5, 3, -3],
                        [5, 3, -2],
                        [5, 3, -1],
                        [5, 3, 0],
                        [5, 3, 1],
                        [5, 3, 2],
                        [5, 3, 3],
                        [5, 3, 4],
                        [5, 3, 5],
                        [5, 4, -5],
                        [5, 4, -4],
                        [5, 4, -3],
                        [5, 4, -2],
                        [5, 4, -1],
                        [5, 4, 0],
                        [5, 4, 1],
                        [5, 4, 2],
                        [5, 4, 3],
                        [5, 4, 4],
                        [5, 4, 5],
                        [5, 5, -5],
                        [5, 5, -4],
                        [5, 5, -3],
                        [5, 5, -2],
                        [5, 5, -1],
                        [5, 5, 0],
                        [5, 5, 1],
                        [5, 5, 2],
                        [5, 5, 3],
                        [5, 5, 4],
                        [5, 5, 5],
                        [6, -6, -6],
                        [6, -6, -5],
                        [6, -6, -4],
                        [6, -6, -3],
                        [6, -6, -2],
                        [6, -6, -1],
                        [6, -6, 0],
                        [6, -6, 1],
                        [6, -6, 2],
                        [6, -6, 3],
                        [6, -6, 4],
                        [6, -6, 5],
                        [6, -6, 6],
                        [6, -5, -6],
                        [6, -5, -5],
                        [6, -5, -4],
                        [6, -5, -3],
                        [6, -5, -2],
                        [6, -5, -1],
                        [6, -5, 0],
                        [6, -5, 1],
                        [6, -5, 2],
                        [6, -5, 3],
                        [6, -5, 4],
                        [6, -5, 5],
                        [6, -5, 6],
                        [6, -4, -6],
                        [6, -4, -5],
                        [6, -4, -4],
                        [6, -4, -3],
                        [6, -4, -2],
                        [6, -4, -1],
                        [6, -4, 0],
                        [6, -4, 1],
                        [6, -4, 2],
                        [6, -4, 3],
                        [6, -4, 4],
                        [6, -4, 5],
                        [6, -4, 6],
                        [6, -3, -6],
                        [6, -3, -5],
                        [6, -3, -4],
                        [6, -3, -3],
                        [6, -3, -2],
                        [6, -3, -1],
                        [6, -3, 0],
                        [6, -3, 1],
                        [6, -3, 2],
                        [6, -3, 3],
                        [6, -3, 4],
                        [6, -3, 5],
                        [6, -3, 6],
                        [6, -2, -6],
                        [6, -2, -5],
                        [6, -2, -4],
                        [6, -2, -3],
                        [6, -2, -2],
                        [6, -2, -1],
                        [6, -2, 0],
                        [6, -2, 1],
                        [6, -2, 2],
                        [6, -2, 3],
                        [6, -2, 4],
                        [6, -2, 5],
                        [6, -2, 6],
                        [6, -1, -6],
                        [6, -1, -5],
                        [6, -1, -4],
                        [6, -1, -3],
                        [6, -1, -2],
                        [6, -1, -1],
                        [6, -1, 0],
                        [6, -1, 1],
                        [6, -1, 2],
                        [6, -1, 3],
                        [6, -1, 4],
                        [6, -1, 5],
                        [6, -1, 6],
                        [6, 0, -6],
                        [6, 0, -5],
                        [6, 0, -4],
                        [6, 0, -3],
                        [6, 0, -2],
                        [6, 0, -1],
                        [6, 0, 0],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 0, 3],
                        [6, 0, 4],
                        [6, 0, 5],
                        [6, 0, 6],
                        [6, 1, -6],
                        [6, 1, -5],
                        [6, 1, -4],
                        [6, 1, -3],
                        [6, 1, -2],
                        [6, 1, -1],
                        [6, 1, 0],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 1, 3],
                        [6, 1, 4],
                        [6, 1, 5],
                        [6, 1, 6],
                        [6, 2, -6],
                        [6, 2, -5],
                        [6, 2, -4],
                        [6, 2, -3],
                        [6, 2, -2],
                        [6, 2, -1],
                        [6, 2, 0],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 2, 3],
                        [6, 2, 4],
                        [6, 2, 5],
                        [6, 2, 6],
                        [6, 3, -6],
                        [6, 3, -5],
                        [6, 3, -4],
                        [6, 3, -3],
                        [6, 3, -2],
                        [6, 3, -1],
                        [6, 3, 0],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 3, 3],
                        [6, 3, 4],
                        [6, 3, 5],
                        [6, 3, 6],
                        [6, 4, -6],
                        [6, 4, -5],
                        [6, 4, -4],
                        [6, 4, -3],
                        [6, 4, -2],
                        [6, 4, -1],
                        [6, 4, 0],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 4, 3],
                        [6, 4, 4],
                        [6, 4, 5],
                        [6, 4, 6],
                        [6, 5, -6],
                        [6, 5, -5],
                        [6, 5, -4],
                        [6, 5, -3],
                        [6, 5, -2],
                        [6, 5, -1],
                        [6, 5, 0],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 5, 3],
                        [6, 5, 4],
                        [6, 5, 5],
                        [6, 5, 6],
                        [6, 6, -6],
                        [6, 6, -5],
                        [6, 6, -4],
                        [6, 6, -3],
                        [6, 6, -2],
                        [6, 6, -1],
                        [6, 6, 0],
                        [6, 6, 1],
                        [6, 6, 2],
                        [6, 6, 3],
                        [6, 6, 4],
                        [6, 6, 5],
                        [6, 6, 6],
                        [7, -7, -7],
                        [7, -7, -6],
                        [7, -7, -5],
                        [7, -7, -4],
                        [7, -7, -3],
                        [7, -7, -2],
                        [7, -7, -1],
                        [7, -7, 0],
                        [7, -7, 1],
                        [7, -7, 2],
                        [7, -7, 3],
                        [7, -7, 4],
                        [7, -7, 5],
                        [7, -7, 6],
                        [7, -7, 7],
                        [7, -6, -7],
                        [7, -6, -6],
                        [7, -6, -5],
                        [7, -6, -4],
                        [7, -6, -3],
                        [7, -6, -2],
                        [7, -6, -1],
                        [7, -6, 0],
                        [7, -6, 1],
                        [7, -6, 2],
                        [7, -6, 3],
                        [7, -6, 4],
                        [7, -6, 5],
                        [7, -6, 6],
                        [7, -6, 7],
                        [7, -5, -7],
                        [7, -5, -6],
                        [7, -5, -5],
                        [7, -5, -4],
                        [7, -5, -3],
                        [7, -5, -2],
                        [7, -5, -1],
                        [7, -5, 0],
                        [7, -5, 1],
                        [7, -5, 2],
                        [7, -5, 3],
                        [7, -5, 4],
                        [7, -5, 5],
                        [7, -5, 6],
                        [7, -5, 7],
                        [7, -4, -7],
                        [7, -4, -6],
                        [7, -4, -5],
                        [7, -4, -4],
                        [7, -4, -3],
                        [7, -4, -2],
                        [7, -4, -1],
                        [7, -4, 0],
                        [7, -4, 1],
                        [7, -4, 2],
                        [7, -4, 3],
                        [7, -4, 4],
                        [7, -4, 5],
                        [7, -4, 6],
                        [7, -4, 7],
                        [7, -3, -7],
                        [7, -3, -6],
                        [7, -3, -5],
                        [7, -3, -4],
                        [7, -3, -3],
                        [7, -3, -2],
                        [7, -3, -1],
                        [7, -3, 0],
                        [7, -3, 1],
                        [7, -3, 2],
                        [7, -3, 3],
                        [7, -3, 4],
                        [7, -3, 5],
                        [7, -3, 6],
                        [7, -3, 7],
                        [7, -2, -7],
                        [7, -2, -6],
                        [7, -2, -5],
                        [7, -2, -4],
                        [7, -2, -3],
                        [7, -2, -2],
                        [7, -2, -1],
                        [7, -2, 0],
                        [7, -2, 1],
                        [7, -2, 2],
                        [7, -2, 3],
                        [7, -2, 4],
                        [7, -2, 5],
                        [7, -2, 6],
                        [7, -2, 7],
                        [7, -1, -7],
                        [7, -1, -6],
                        [7, -1, -5],
                        [7, -1, -4],
                        [7, -1, -3],
                        [7, -1, -2],
                        [7, -1, -1],
                        [7, -1, 0],
                        [7, -1, 1],
                        [7, -1, 2],
                        [7, -1, 3],
                        [7, -1, 4],
                        [7, -1, 5],
                        [7, -1, 6],
                        [7, -1, 7],
                        [7, 0, -7],
                        [7, 0, -6],
                        [7, 0, -5],
                        [7, 0, -4],
                        [7, 0, -3],
                        [7, 0, -2],
                        [7, 0, -1],
                        [7, 0, 0],
                        [7, 0, 1],
                        [7, 0, 2],
                        [7, 0, 3],
                        [7, 0, 4],
                        [7, 0, 5],
                        [7, 0, 6],
                        [7, 0, 7],
                        [7, 1, -7],
                        [7, 1, -6],
                        [7, 1, -5],
                        [7, 1, -4],
                        [7, 1, -3],
                        [7, 1, -2],
                        [7, 1, -1],
                        [7, 1, 0],
                        [7, 1, 1],
                        [7, 1, 2],
                        [7, 1, 3],
                        [7, 1, 4],
                        [7, 1, 5],
                        [7, 1, 6],
                        [7, 1, 7],
                        [7, 2, -7],
                        [7, 2, -6],
                        [7, 2, -5],
                        [7, 2, -4],
                        [7, 2, -3],
                        [7, 2, -2],
                        [7, 2, -1],
                        [7, 2, 0],
                        [7, 2, 1],
                        [7, 2, 2],
                        [7, 2, 3],
                        [7, 2, 4],
                        [7, 2, 5],
                        [7, 2, 6],
                        [7, 2, 7],
                        [7, 3, -7],
                        [7, 3, -6],
                        [7, 3, -5],
                        [7, 3, -4],
                        [7, 3, -3],
                        [7, 3, -2],
                        [7, 3, -1],
                        [7, 3, 0],
                        [7, 3, 1],
                        [7, 3, 2],
                        [7, 3, 3],
                        [7, 3, 4],
                        [7, 3, 5],
                        [7, 3, 6],
                        [7, 3, 7],
                        [7, 4, -7],
                        [7, 4, -6],
                        [7, 4, -5],
                        [7, 4, -4],
                        [7, 4, -3],
                        [7, 4, -2],
                        [7, 4, -1],
                        [7, 4, 0],
                        [7, 4, 1],
                        [7, 4, 2],
                        [7, 4, 3],
                        [7, 4, 4],
                        [7, 4, 5],
                        [7, 4, 6],
                        [7, 4, 7],
                        [7, 5, -7],
                        [7, 5, -6],
                        [7, 5, -5],
                        [7, 5, -4],
                        [7, 5, -3],
                        [7, 5, -2],
                        [7, 5, -1],
                        [7, 5, 0],
                        [7, 5, 1],
                        [7, 5, 2],
                        [7, 5, 3],
                        [7, 5, 4],
                        [7, 5, 5],
                        [7, 5, 6],
                        [7, 5, 7],
                        [7, 6, -7],
                        [7, 6, -6],
                        [7, 6, -5],
                        [7, 6, -4],
                        [7, 6, -3],
                        [7, 6, -2],
                        [7, 6, -1],
                        [7, 6, 0],
                        [7, 6, 1],
                        [7, 6, 2],
                        [7, 6, 3],
                        [7, 6, 4],
                        [7, 6, 5],
                        [7, 6, 6],
                        [7, 6, 7],
                        [7, 7, -7],
                        [7, 7, -6],
                        [7, 7, -5],
                        [7, 7, -4],
                        [7, 7, -3],
                        [7, 7, -2],
                        [7, 7, -1],
                        [7, 7, 0],
                        [7, 7, 1],
                        [7, 7, 2],
                        [7, 7, 3],
                        [7, 7, 4],
                        [7, 7, 5],
                        [7, 7, 6],
                        [7, 7, 7],
                        [8, -8, -8],
                        [8, -8, -7],
                        [8, -8, -6],
                        [8, -8, -5],
                        [8, -8, -4],
                        [8, -8, -3],
                        [8, -8, -2],
                        [8, -8, -1],
                        [8, -8, 0],
                        [8, -8, 1],
                        [8, -8, 2],
                        [8, -8, 3],
                        [8, -8, 4],
                        [8, -8, 5],
                        [8, -8, 6],
                        [8, -8, 7],
                        [8, -8, 8],
                        [8, -7, -8],
                        [8, -7, -7],
                        [8, -7, -6],
                        [8, -7, -5],
                        [8, -7, -4],
                        [8, -7, -3],
                        [8, -7, -2],
                        [8, -7, -1],
                        [8, -7, 0],
                        [8, -7, 1],
                        [8, -7, 2],
                        [8, -7, 3],
                        [8, -7, 4],
                        [8, -7, 5],
                        [8, -7, 6],
                        [8, -7, 7],
                        [8, -7, 8],
                        [8, -6, -8],
                        [8, -6, -7],
                        [8, -6, -6],
                        [8, -6, -5],
                        [8, -6, -4],
                        [8, -6, -3],
                        [8, -6, -2],
                        [8, -6, -1],
                        [8, -6, 0],
                        [8, -6, 1],
                        [8, -6, 2],
                        [8, -6, 3],
                        [8, -6, 4],
                        [8, -6, 5],
                        [8, -6, 6],
                        [8, -6, 7],
                        [8, -6, 8],
                        [8, -5, -8],
                        [8, -5, -7],
                        [8, -5, -6],
                        [8, -5, -5],
                        [8, -5, -4],
                        [8, -5, -3],
                        [8, -5, -2],
                        [8, -5, -1],
                        [8, -5, 0],
                        [8, -5, 1],
                        [8, -5, 2],
                        [8, -5, 3],
                        [8, -5, 4],
                        [8, -5, 5],
                        [8, -5, 6],
                        [8, -5, 7],
                        [8, -5, 8],
                        [8, -4, -8],
                        [8, -4, -7],
                        [8, -4, -6],
                        [8, -4, -5],
                        [8, -4, -4],
                        [8, -4, -3],
                        [8, -4, -2],
                        [8, -4, -1],
                        [8, -4, 0],
                        [8, -4, 1],
                        [8, -4, 2],
                        [8, -4, 3],
                        [8, -4, 4],
                        [8, -4, 5],
                        [8, -4, 6],
                        [8, -4, 7],
                        [8, -4, 8],
                        [8, -3, -8],
                        [8, -3, -7],
                        [8, -3, -6],
                        [8, -3, -5],
                        [8, -3, -4],
                        [8, -3, -3],
                        [8, -3, -2],
                        [8, -3, -1],
                        [8, -3, 0],
                        [8, -3, 1],
                        [8, -3, 2],
                        [8, -3, 3],
                        [8, -3, 4],
                        [8, -3, 5],
                        [8, -3, 6],
                        [8, -3, 7],
                        [8, -3, 8],
                        [8, -2, -8],
                        [8, -2, -7],
                        [8, -2, -6],
                        [8, -2, -5],
                        [8, -2, -4],
                        [8, -2, -3],
                        [8, -2, -2],
                        [8, -2, -1],
                        [8, -2, 0],
                        [8, -2, 1],
                        [8, -2, 2],
                        [8, -2, 3],
                        [8, -2, 4],
                        [8, -2, 5],
                        [8, -2, 6],
                        [8, -2, 7],
                        [8, -2, 8],
                        [8, -1, -8],
                        [8, -1, -7],
                        [8, -1, -6],
                        [8, -1, -5],
                        [8, -1, -4],
                        [8, -1, -3],
                        [8, -1, -2],
                        [8, -1, -1],
                        [8, -1, 0],
                        [8, -1, 1],
                        [8, -1, 2],
                        [8, -1, 3],
                        [8, -1, 4],
                        [8, -1, 5],
                        [8, -1, 6],
                        [8, -1, 7],
                        [8, -1, 8],
                        [8, 0, -8],
                        [8, 0, -7],
                        [8, 0, -6],
                        [8, 0, -5],
                        [8, 0, -4],
                        [8, 0, -3],
                        [8, 0, -2],
                        [8, 0, -1],
                        [8, 0, 0],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 0, 3],
                        [8, 0, 4],
                        [8, 0, 5],
                        [8, 0, 6],
                        [8, 0, 7],
                        [8, 0, 8],
                        [8, 1, -8],
                        [8, 1, -7],
                        [8, 1, -6],
                        [8, 1, -5],
                        [8, 1, -4],
                        [8, 1, -3],
                        [8, 1, -2],
                        [8, 1, -1],
                        [8, 1, 0],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 1, 3],
                        [8, 1, 4],
                        [8, 1, 5],
                        [8, 1, 6],
                        [8, 1, 7],
                        [8, 1, 8],
                        [8, 2, -8],
                        [8, 2, -7],
                        [8, 2, -6],
                        [8, 2, -5],
                        [8, 2, -4],
                        [8, 2, -3],
                        [8, 2, -2],
                        [8, 2, -1],
                        [8, 2, 0],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 2, 3],
                        [8, 2, 4],
                        [8, 2, 5],
                        [8, 2, 6],
                        [8, 2, 7],
                        [8, 2, 8],
                        [8, 3, -8],
                        [8, 3, -7],
                        [8, 3, -6],
                        [8, 3, -5],
                        [8, 3, -4],
                        [8, 3, -3],
                        [8, 3, -2],
                        [8, 3, -1],
                        [8, 3, 0],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 3, 3],
                        [8, 3, 4],
                        [8, 3, 5],
                        [8, 3, 6],
                        [8, 3, 7],
                        [8, 3, 8],
                        [8, 4, -8],
                        [8, 4, -7],
                        [8, 4, -6],
                        [8, 4, -5],
                        [8, 4, -4],
                        [8, 4, -3],
                        [8, 4, -2],
                        [8, 4, -1],
                        [8, 4, 0],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 4, 3],
                        [8, 4, 4],
                        [8, 4, 5],
                        [8, 4, 6],
                        [8, 4, 7],
                        [8, 4, 8],
                        [8, 5, -8],
                        [8, 5, -7],
                        [8, 5, -6],
                        [8, 5, -5],
                        [8, 5, -4],
                        [8, 5, -3],
                        [8, 5, -2],
                        [8, 5, -1],
                        [8, 5, 0],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 5, 3],
                        [8, 5, 4],
                        [8, 5, 5],
                        [8, 5, 6],
                        [8, 5, 7],
                        [8, 5, 8],
                        [8, 6, -8],
                        [8, 6, -7],
                        [8, 6, -6],
                        [8, 6, -5],
                        [8, 6, -4],
                        [8, 6, -3],
                        [8, 6, -2],
                        [8, 6, -1],
                        [8, 6, 0],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 6, 3],
                        [8, 6, 4],
                        [8, 6, 5],
                        [8, 6, 6],
                        [8, 6, 7],
                        [8, 6, 8],
                        [8, 7, -8],
                        [8, 7, -7],
                        [8, 7, -6],
                        [8, 7, -5],
                        [8, 7, -4],
                        [8, 7, -3],
                        [8, 7, -2],
                        [8, 7, -1],
                        [8, 7, 0],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 7, 3],
                        [8, 7, 4],
                        [8, 7, 5],
                        [8, 7, 6],
                        [8, 7, 7],
                        [8, 7, 8],
                        [8, 8, -8],
                        [8, 8, -7],
                        [8, 8, -6],
                        [8, 8, -5],
                        [8, 8, -4],
                        [8, 8, -3],
                        [8, 8, -2],
                        [8, 8, -1],
                        [8, 8, 0],
                        [8, 8, 1],
                        [8, 8, 2],
                        [8, 8, 3],
                        [8, 8, 4],
                        [8, 8, 5],
                        [8, 8, 6],
                        [8, 8, 7],
                        [8, 8, 8]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (0.1e1 + np.cos(phi)) * np.exp((-1*1j) * (phi1 + phi2))

        if Bindx == 2:
            t1 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 + t1)) * np.sqrt((1 - t1))

        if Bindx == 3:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (-0.1e1 + np.cos(phi)) * np.exp((-1*1j) * (phi1 - phi2))

        if Bindx == 4:
            t2 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 - t2)) * np.sqrt((1 + t2))

        if Bindx == 5:
            tfunc[..., c] = 0.3e1 * np.cos(phi)

        if Bindx == 6:
            t3 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 - t3)) * np.sqrt((1 + t3))

        if Bindx == 7:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (-0.1e1 + np.cos(phi)) * np.exp((1j) * (phi1 - phi2))

        if Bindx == 8:
            t4 = np.cos(phi)
            tfunc[..., c] = (-0.3e1 / 0.2e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 - t4)) * np.sqrt((1 + t4))

        if Bindx == 9:
            tfunc[..., c] = (0.3e1 / 0.2e1) * (0.1e1 + np.cos(phi)) * np.exp((1j) * (phi1 + phi2))

        if Bindx == 10:
            t5 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (1 + (2 + t5) * t5)

        if Bindx == 11:
            t6 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * ((1 + t6) ** (0.3e1 / 0.2e1)) * np.sqrt((1 - t6))

        if Bindx == 12:
            t7 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.6e1) * t7 ** 2

        if Bindx == 13:
            t8 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t8) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t8))

        if Bindx == 14:
            t9 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (1 + (-2 + t9) * t9)

        if Bindx == 15:
            t10 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt((1 - t10)) * ((1 + t10) ** (0.3e1 / 0.2e1))

        if Bindx == 16:
            t11 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((-1*1j) * (phi1 + phi2)) * (2 * t11 ** 2 + t11 - 1)

        if Bindx == 17:
            t12 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.6e1) * np.sqrt((1 + t12)) * t12 * np.sqrt((1 - t12))

        if Bindx == 18:
            t13 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((-1*1j) * (phi1 - phi2)) * (2 * t13 ** 2 - t13 - 1)

        if Bindx == 19:
            t14 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t14) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t14))

        if Bindx == 20:
            t15 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.6e1) * t15 ** 2

        if Bindx == 21:
            t16 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.6e1) * np.sqrt((1 - t16)) * np.sqrt((1 + t16)) * t16

        if Bindx == 22:
            t17 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t17 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 23:
            t18 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.6e1) * np.sqrt((1 + t18)) * t18 * np.sqrt((1 - t18))

        if Bindx == 24:
            t19 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((2*1j) * phi2) * np.sqrt(0.6e1) * t19 ** 2

        if Bindx == 25:
            t20 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * ((1 - t20) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t20))

        if Bindx == 26:
            t21 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((1j) * (phi1 - phi2)) * (2 * t21 ** 2 - t21 - 1)

        if Bindx == 27:
            t22 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.6e1) * np.sqrt((1 - t22)) * np.sqrt((1 + t22)) * t22

        if Bindx == 28:
            t23 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1) * np.exp((1j) * (phi1 + phi2)) * (2 * t23 ** 2 + t23 - 1)

        if Bindx == 29:
            t24 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt((1 - t24)) * ((1 + t24) ** (0.3e1 / 0.2e1))

        if Bindx == 30:
            t25 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (1 + (-2 + t25) * t25)

        if Bindx == 31:
            t26 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.2e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * ((1 - t26) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t26))

        if Bindx == 32:
            t27 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((2*1j) * phi1) * np.sqrt(0.6e1) * t27 ** 2

        if Bindx == 33:
            t28 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt((1 - t28)) * ((1 + t28) ** (0.3e1 / 0.2e1))

        if Bindx == 34:
            t29 = np.cos(phi)
            tfunc[..., c] = (0.5e1 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (1 + (2 + t29) * t29)

        if Bindx == 35:
            t30 = np.cos(phi)
            t31 = t30 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-3*1j) * (phi1 + phi2)) * (3 * t31 + 1 + (t31 + 3) * t30)

        if Bindx == 36:
            t33 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t33) ** (0.5e1 / 0.2e1)) * np.sqrt((1 - t33))

        if Bindx == 37:
            t34 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.15e2) * t34 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 38:
            t35 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((-3*1j) * phi1) * np.sqrt(0.5e1) * ((1 - t35) ** (0.3e1 / 0.2e1)) * ((1 + t35) ** (0.3e1 / 0.2e1))

        if Bindx == 39:
            t36 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.15e2) * t36 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 40:
            t37 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t37) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t37))

        if Bindx == 41:
            t38 = np.cos(phi)
            t39 = t38 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-3*1j) * (phi1 - phi2)) * (-3 * t39 - 1 + (t39 + 3) * t38)

        if Bindx == 42:
            t41 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t41)) * ((1 + t41) ** (0.5e1 / 0.2e1))

        if Bindx == 43:
            t42 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (-t42 - 2 + (3 * t42 + 4) * t42 ** 2)

        if Bindx == 44:
            t45 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * ((1 + t45) ** (0.3e1 / 0.2e1)) * (1 + (-4 + 3 * t45) * t45) * ((1 - t45) ** (-0.1e1 / 0.2e1))

        if Bindx == 45:
            t46 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.30e2) * t46 ** 2 * np.cos(phi)

        if Bindx == 46:
            t47 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * (1 + 3 * t47) * np.sqrt((1 + t47)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t47) ** (0.3e1 / 0.2e1))

        if Bindx == 47:
            t48 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (-t48 + 2 + (3 * t48 - 4) * t48 ** 2)

        if Bindx == 48:
            t51 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t51) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t51))

        if Bindx == 49:
            t52 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15e2) * t52 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 50:
            t53 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t53)) * ((1 + t53) ** (0.3e1 / 0.2e1)) * (-1 + 3 * t53)

        if Bindx == 51:
            t54 = np.cos(phi)
            t55 = t54 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + phi2)) * (5 * t55 - 1 + (15 * t55 - 11) * t54)

        if Bindx == 52:
            t57 = np.cos(phi)
            t60 = 1 - t57
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.3e1) * np.sqrt((1 + t57)) * (t60 + (5 * t57 - 5) * t57 ** 2) * (t60 ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t61 = np.cos(phi)
            t62 = t61 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - phi2)) * (-5 * t62 + 1 + (15 * t62 - 11) * t61)

        if Bindx == 54:
            t64 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * (1 + 3 * t64) * np.sqrt((1 + t64)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t64) ** (0.3e1 / 0.2e1))

        if Bindx == 55:
            t65 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15e2) * t65 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 56:
            t66 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.5e1) * ((1 - t66) ** (0.3e1 / 0.2e1)) * ((1 + t66) ** (0.3e1 / 0.2e1))

        if Bindx == 57:
            t67 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.30e2) * t67 ** 2 * np.cos(phi)

        if Bindx == 58:
            t68 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.4e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.3e1) * np.sqrt((1 - t68)) * np.sqrt((1 + t68)) * (5 * t68 ** 2 - 1)

        if Bindx == 59:
            t69 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.2e1 * t69 * (5 * t69 ** 2 - 3)

        if Bindx == 60:
            t70 = np.cos(phi)
            t73 = 1 - t70
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.3e1) * np.sqrt((1 + t70)) * (t73 + (5 * t70 - 5) * t70 ** 2) * (t73 ** (-0.1e1 / 0.2e1))

        if Bindx == 61:
            t74 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((2*1j) * phi2) * np.sqrt(0.30e2) * t74 ** 2 * np.cos(phi)

        if Bindx == 62:
            t75 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((3*1j) * phi2) * np.sqrt(0.5e1) * ((1 - t75) ** (0.3e1 / 0.2e1)) * ((1 + t75) ** (0.3e1 / 0.2e1))

        if Bindx == 63:
            t76 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15e2) * t76 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 64:
            t77 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.10e2) * ((1 - t77) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t77)) * (1 + 3 * t77)

        if Bindx == 65:
            t78 = np.cos(phi)
            t79 = t78 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((1j) * (phi1 - phi2)) * (-5 * t79 + 1 + (15 * t79 - 11) * t78)

        if Bindx == 66:
            t81 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.4e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.3e1) * np.sqrt((1 - t81)) * np.sqrt((1 + t81)) * (5 * t81 ** 2 - 1)

        if Bindx == 67:
            t82 = np.cos(phi)
            t83 = t82 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((1j) * (phi1 + phi2)) * (5 * t83 - 1 + (15 * t83 - 11) * t82)

        if Bindx == 68:
            t85 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * ((1 + t85) ** (0.3e1 / 0.2e1)) * (1 + (-4 + 3 * t85) * t85) * ((1 - t85) ** (-0.1e1 / 0.2e1))

        if Bindx == 69:
            t86 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15e2) * t86 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 70:
            t87 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t87) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t87))

        if Bindx == 71:
            t88 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (-t88 + 2 + (3 * t88 - 4) * t88 ** 2)

        if Bindx == 72:
            t91 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.10e2) * ((1 - t91) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t91)) * (1 + 3 * t91)

        if Bindx == 73:
            t92 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.4e1) * np.exp((2*1j) * phi1) * np.sqrt(0.30e2) * t92 ** 2 * np.cos(phi)

        if Bindx == 74:
            t93 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t93)) * ((1 + t93) ** (0.3e1 / 0.2e1)) * (-1 + 3 * t93)

        if Bindx == 75:
            t94 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (-t94 - 2 + (3 * t94 + 4) * t94 ** 2)

        if Bindx == 76:
            t97 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t97)) * ((1 + t97) ** (0.5e1 / 0.2e1))

        if Bindx == 77:
            t98 = np.cos(phi)
            t99 = t98 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((3*1j) * (phi1 - phi2)) * (-3 * t99 - 1 + (t99 + 3) * t98)

        if Bindx == 78:
            t101 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t101) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t101))

        if Bindx == 79:
            t102 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.15e2) * t102 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 80:
            t103 = np.cos(phi)
            tfunc[..., c] = (0.7e1 / 0.4e1*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.5e1) * ((1 - t103) ** (0.3e1 / 0.2e1)) * ((1 + t103) ** (0.3e1 / 0.2e1))

        if Bindx == 81:
            t104 = np.sin(phi)
            tfunc[..., c] = -(0.7e1 / 0.8e1) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.15e2) * t104 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 82:
            t105 = np.cos(phi)
            tfunc[..., c] = (-0.7e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t105)) * ((1 + t105) ** (0.5e1 / 0.2e1))

        if Bindx == 83:
            t106 = np.cos(phi)
            t107 = t106 ** 2
            tfunc[..., c] = (0.7e1 / 0.8e1) * np.exp((3*1j) * (phi1 + phi2)) * (3 * t107 + 1 + (t107 + 3) * t106)

        if Bindx == 84:
            t109 = np.cos(phi)
            t113 = 4 * t109
            t110 = t109 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * (phi1 + phi2)) * (t113 + 1 + (t113 + 6 + t110) * t110)

        if Bindx == 85:
            t114 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t114) ** (0.7e1 / 0.2e1)) * np.sqrt((1 - t114))

        if Bindx == 86:
            t115 = np.cos(phi)
            t118 = 1 + t115
            t116 = t118 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * (-1 + t115) * t118 * t116

        if Bindx == 87:
            t119 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 + phi2)) * np.sqrt(0.14e2) * ((1 - t119) ** (0.3e1 / 0.2e1)) * ((1 + t119) ** (0.5e1 / 0.2e1))

        if Bindx == 88:
            t122 = np.sin(phi)
            t120 = t122 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.70e2) * t120 ** 2

        if Bindx == 89:
            t123 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 - phi2)) * np.sqrt(0.14e2) * ((1 - t123) ** (0.5e1 / 0.2e1)) * ((1 + t123) ** (0.3e1 / 0.2e1))

        if Bindx == 90:
            t124 = np.cos(phi)
            t127 = -1 + t124
            t125 = t127 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.7e1) * t127 * t125 * (1 + t124)

        if Bindx == 91:
            t128 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t128) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t128))

        if Bindx == 92:
            t129 = np.cos(phi)
            t133 = -4 * t129
            t130 = t129 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * (phi1 - phi2)) * (t133 + 1 + (t133 + 6 + t130) * t130)

        if Bindx == 93:
            t134 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t134)) * ((1 + t134) ** (0.7e1 / 0.2e1))

        if Bindx == 94:
            t135 = np.cos(phi)
            t136 = t135 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-3*1j) * (phi1 + phi2)) * (-5 * t135 - 3 + (9 * t135 + 3 + 4 * t136) * t136)

        if Bindx == 95:
            t139 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.14e2) * ((1 + t139) ** (0.5e1 / 0.2e1)) * (1 + (-3 + 2 * t139) * t139) * ((1 - t139) ** (-0.1e1 / 0.2e1))

        if Bindx == 96:
            t141 = np.cos(phi)
            t140 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.7e1) * t140 ** 2 * (-1 + (3 + 4 * t141) * t141)

        if Bindx == 97:
            t142 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * t142 * (1 + (-2 + t142) * t142) * ((1 + t142) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((-3*1j) * phi1) * ((1 - t142) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t144 = np.cos(phi)
            t143 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.7e1) * t143 ** 2 * (-1 + (-3 + 4 * t144) * t144)

        if Bindx == 99:
            t145 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * (1 + 2 * t145) * np.sqrt((1 + t145)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t145) ** (0.5e1 / 0.2e1))

        if Bindx == 100:
            t146 = np.cos(phi)
            t147 = t146 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-3*1j) * (phi1 - phi2)) * (5 * t146 - 3 + (-9 * t146 + 3 + 4 * t147) * t147)

        if Bindx == 101:
            t150 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t150) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t150))

        if Bindx == 102:
            t151 = np.cos(phi)
            t154 = 1 + t151
            t152 = t154 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * (-1 + t151) * t154 * t152

        if Bindx == 103:
            t155 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t155)) * ((1 + t155) ** (0.5e1 / 0.2e1)) * (2 * t155 - 1)

        if Bindx == 104:
            t156 = np.cos(phi)
            t157 = t156 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (-5 * t156 + 1 + (7 * t156 - 6 + 7 * t157) * t157)

        if Bindx == 105:
            t160 = np.cos(phi)
            t161 = t160 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.2e1) * ((1 + t160) ** (0.3e1 / 0.2e1)) * (-21 * t161 + 1 + (14 * t161 + 6) * t160) * ((1 - t160) ** (-0.1e1 / 0.2e1))

        if Bindx == 106:
            t164 = np.cos(phi)
            t163 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.10e2) * t163 ** 2 * (7 * t164 ** 2 - 1)

        if Bindx == 107:
            t165 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * (-1 + (7 + 14 * t165) * t165) * np.sqrt((1 + t165)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t165) ** (0.3e1 / 0.2e1))

        if Bindx == 108:
            t166 = np.cos(phi)
            t167 = t166 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (5 * t166 + 1 + (-7 * t166 - 6 + 7 * t167) * t167)

        if Bindx == 109:
            t170 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * (1 + 2 * t170) * np.sqrt((1 + t170)) * np.sqrt(0.14e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t170) ** (0.5e1 / 0.2e1))

        if Bindx == 110:
            t171 = np.cos(phi)
            t174 = -1 + t171
            t172 = t174 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.7e1) * t174 * t172 * (1 + t171)

        if Bindx == 111:
            t175 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t175) ** (0.3e1 / 0.2e1)) * ((1 + t175) ** (0.5e1 / 0.2e1))

        if Bindx == 112:
            t177 = np.cos(phi)
            t176 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.7e1) * t176 ** 2 * (-1 + (3 + 4 * t177) * t177)

        if Bindx == 113:
            t178 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t178)) * ((1 + t178) ** (0.3e1 / 0.2e1)) * (-1 + (-7 + 14 * t178) * t178)

        if Bindx == 114:
            t179 = np.cos(phi)
            t180 = t179 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 + phi2)) * (-3 * t179 + 3 + (7 * t179 - 27 + 28 * t180) * t180)

        if Bindx == 115:
            t183 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.5e1) * np.sqrt((1 + t183)) * t183 * np.sqrt((1 - t183)) * (7 * t183 ** 2 - 3)

        if Bindx == 116:
            t188 = np.cos(phi)
            t189 = t188 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - phi2)) * (3 * t188 + 3 + (-7 * t188 - 27 + 28 * t189) * t189)

        if Bindx == 117:
            t192 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * (-1 + (7 + 14 * t192) * t192) * np.sqrt((1 + t192)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t192) ** (0.3e1 / 0.2e1))

        if Bindx == 118:
            t194 = np.cos(phi)
            t193 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.7e1) * t193 ** 2 * (-1 + (-3 + 4 * t194) * t194)

        if Bindx == 119:
            t195 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t195) ** (0.5e1 / 0.2e1)) * ((1 + t195) ** (0.3e1 / 0.2e1))

        if Bindx == 120:
            t198 = np.sin(phi)
            t196 = t198 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.70e2) * t196 ** 2

        if Bindx == 121:
            t199 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.35e2) * ((1 - t199) ** (0.3e1 / 0.2e1)) * ((1 + t199) ** (0.3e1 / 0.2e1)) * t199

        if Bindx == 122:
            t201 = np.cos(phi)
            t200 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.10e2) * t200 ** 2 * (7 * t201 ** 2 - 1)

        if Bindx == 123:
            t202 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.5e1) * np.sqrt((1 - t202)) * np.sqrt((1 + t202)) * t202 * (7 * t202 ** 2 - 3)

        if Bindx == 124:
            t203 = np.cos(phi)
            t204 = t203 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t204) * t204

        if Bindx == 125:
            t206 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((1j) * phi2) * np.sqrt(0.5e1) * np.sqrt((1 + t206)) * t206 * np.sqrt((1 - t206)) * (7 * t206 ** 2 - 3)

        if Bindx == 126:
            t212 = np.cos(phi)
            t211 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((2*1j) * phi2) * np.sqrt(0.10e2) * t211 ** 2 * (7 * t212 ** 2 - 1)

        if Bindx == 127:
            t213 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * t213 * ((1 + t213) ** (0.3e1 / 0.2e1)) * (1 + (-2 + t213) * t213) * np.sqrt(0.35e2) * np.exp((3*1j) * phi2) * ((1 - t213) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t216 = np.sin(phi)
            t214 = t216 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * phi2) * np.sqrt(0.70e2) * t214 ** 2

        if Bindx == 129:
            t217 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t217) ** (0.5e1 / 0.2e1)) * ((1 + t217) ** (0.3e1 / 0.2e1))

        if Bindx == 130:
            t219 = np.cos(phi)
            t218 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.7e1) * t218 ** 2 * (-1 + (-3 + 4 * t219) * t219)

        if Bindx == 131:
            t220 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.2e1) * ((1 - t220) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t220)) * (-1 + (7 + 14 * t220) * t220)

        if Bindx == 132:
            t221 = np.cos(phi)
            t222 = t221 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((1j) * (phi1 - phi2)) * (3 * t221 + 3 + (-7 * t221 - 27 + 28 * t222) * t222)

        if Bindx == 133:
            t225 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.5e1) * np.sqrt((1 - t225)) * np.sqrt((1 + t225)) * t225 * (7 * t225 ** 2 - 3)

        if Bindx == 134:
            t226 = np.cos(phi)
            t227 = t226 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((1j) * (phi1 + phi2)) * (-3 * t226 + 3 + (7 * t226 - 27 + 28 * t227) * t227)

        if Bindx == 135:
            t230 = np.cos(phi)
            t231 = t230 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.2e1) * ((1 + t230) ** (0.3e1 / 0.2e1)) * (-21 * t231 + 1 + (14 * t231 + 6) * t230) * ((1 - t230) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t234 = np.cos(phi)
            t233 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.7e1) * t233 ** 2 * (-1 + (3 + 4 * t234) * t234)

        if Bindx == 137:
            t235 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (phi1 + 4 * phi2)) * np.sqrt(0.14e2) * ((1 - t235) ** (0.3e1 / 0.2e1)) * ((1 + t235) ** (0.5e1 / 0.2e1))

        if Bindx == 138:
            t236 = np.cos(phi)
            t239 = -1 + t236
            t237 = t239 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.7e1) * t239 * t237 * (1 + t236)

        if Bindx == 139:
            t240 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.14e2) * ((1 - t240) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t240)) * (1 + 2 * t240)

        if Bindx == 140:
            t241 = np.cos(phi)
            t242 = t241 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (5 * t241 + 1 + (-7 * t241 - 6 + 7 * t242) * t242)

        if Bindx == 141:
            t245 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.2e1) * ((1 - t245) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t245)) * (-1 + (7 + 14 * t245) * t245)

        if Bindx == 142:
            t247 = np.cos(phi)
            t246 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((2*1j) * phi1) * np.sqrt(0.10e2) * t246 ** 2 * (7 * t247 ** 2 - 1)

        if Bindx == 143:
            t248 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t248)) * ((1 + t248) ** (0.3e1 / 0.2e1)) * (-1 + (-7 + 14 * t248) * t248)

        if Bindx == 144:
            t249 = np.cos(phi)
            t250 = t249 ** 2
            tfunc[..., c] = (0.9e1 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (-5 * t249 + 1 + (7 * t249 - 6 + 7 * t250) * t250)

        if Bindx == 145:
            t253 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.14e2) * ((1 + t253) ** (0.5e1 / 0.2e1)) * (1 + (-3 + 2 * t253) * t253) * ((1 - t253) ** (-0.1e1 / 0.2e1))

        if Bindx == 146:
            t254 = np.cos(phi)
            t257 = 1 + t254
            t255 = t257 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * (-1 + t254) * t257 * t255

        if Bindx == 147:
            t258 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t258) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t258))

        if Bindx == 148:
            t259 = np.cos(phi)
            t260 = t259 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((3*1j) * (phi1 - phi2)) * (5 * t259 - 3 + (-9 * t259 + 3 + 4 * t260) * t260)

        if Bindx == 149:
            t263 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.14e2) * ((1 - t263) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t263)) * (1 + 2 * t263)

        if Bindx == 150:
            t265 = np.cos(phi)
            t264 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.7e1) * t264 ** 2 * (-1 + (-3 + 4 * t265) * t265)

        if Bindx == 151:
            t266 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.35e2) * ((1 - t266) ** (0.3e1 / 0.2e1)) * ((1 + t266) ** (0.3e1 / 0.2e1)) * t266

        if Bindx == 152:
            t268 = np.cos(phi)
            t267 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.7e1) * t267 ** 2 * (-1 + (3 + 4 * t268) * t268)

        if Bindx == 153:
            t269 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t269)) * ((1 + t269) ** (0.5e1 / 0.2e1)) * (2 * t269 - 1)

        if Bindx == 154:
            t270 = np.cos(phi)
            t271 = t270 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((3*1j) * (phi1 + phi2)) * (-5 * t270 - 3 + (9 * t270 + 3 + 4 * t271) * t271)

        if Bindx == 155:
            t274 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t274)) * ((1 + t274) ** (0.7e1 / 0.2e1))

        if Bindx == 156:
            t275 = np.cos(phi)
            t279 = -4 * t275
            t276 = t275 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * (phi1 - phi2)) * (t279 + 1 + (t279 + 6 + t276) * t276)

        if Bindx == 157:
            t280 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t280) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t280))

        if Bindx == 158:
            t281 = np.cos(phi)
            t284 = -1 + t281
            t282 = t284 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.7e1) * t284 * t282 * (1 + t281)

        if Bindx == 159:
            t285 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.14e2) * ((1 - t285) ** (0.5e1 / 0.2e1)) * ((1 + t285) ** (0.3e1 / 0.2e1))

        if Bindx == 160:
            t288 = np.sin(phi)
            t286 = t288 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * phi1) * np.sqrt(0.70e2) * t286 ** 2

        if Bindx == 161:
            t289 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.14e2) * ((1 - t289) ** (0.3e1 / 0.2e1)) * ((1 + t289) ** (0.5e1 / 0.2e1))

        if Bindx == 162:
            t290 = np.cos(phi)
            t293 = 1 + t290
            t291 = t293 ** 2
            tfunc[..., c] = (0.9e1 / 0.8e1) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * (-1 + t290) * t293 * t291

        if Bindx == 163:
            t294 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.8e1*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t294)) * ((1 + t294) ** (0.7e1 / 0.2e1))

        if Bindx == 164:
            t295 = np.cos(phi)
            t299 = 4 * t295
            t296 = t295 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * (phi1 + phi2)) * (t299 + 1 + (t299 + 6 + t296) * t296)

        if Bindx == 165:
            t300 = np.cos(phi)
            t301 = t300 ** 2
            t305 = 10 * t301
            t303 = t301 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-5*1j) * (phi1 + phi2)) * (5 * t303 + t305 + 1 + (t303 + t305 + 5) * t300)

        if Bindx == 166:
            t306 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * ((1 + t306) ** (0.9e1 / 0.2e1)) * np.sqrt((1 - t306))

        if Bindx == 167:
            t307 = np.cos(phi)
            t310 = 1 + t307
            t308 = t310 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.5e1) * (-1 + t307) * t308 ** 2

        if Bindx == 168:
            t311 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t311) ** (0.3e1 / 0.2e1)) * ((1 + t311) ** (0.7e1 / 0.2e1))

        if Bindx == 169:
            t314 = np.sin(phi)
            t312 = t314 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.210e3) * t312 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 170:
            t315 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((-5*1j) * phi1) * np.sqrt(0.7e1) * ((1 - t315) ** (0.5e1 / 0.2e1)) * ((1 + t315) ** (0.5e1 / 0.2e1))

        if Bindx == 171:
            t318 = np.sin(phi)
            t316 = t318 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.210e3) * t316 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 172:
            t319 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t319) ** (0.7e1 / 0.2e1)) * ((1 + t319) ** (0.3e1 / 0.2e1))

        if Bindx == 173:
            t320 = np.cos(phi)
            t323 = -1 + t320
            t321 = t323 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.5e1) * t321 ** 2 * (1 + t320)

        if Bindx == 174:
            t324 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * ((1 - t324) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t324))

        if Bindx == 175:
            t325 = np.cos(phi)
            t326 = t325 ** 2
            t328 = t326 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-5*1j) * (phi1 - phi2)) * (-10 * t326 - 5 * t328 - 1 + (10 * t326 + t328 + 5) * t325)

        if Bindx == 176:
            t330 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t330)) * ((1 + t330) ** (0.9e1 / 0.2e1))

        if Bindx == 177:
            t331 = np.cos(phi)
            t332 = t331 ** 2
            t334 = t332 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-4*1j) * (phi1 + phi2)) * (-4 * t332 + 16 * t334 - 4 + (14 * t332 + 5 * t334 - 11) * t331)

        if Bindx == 178:
            t336 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t336) ** (0.7e1 / 0.2e1)) * (3 + (-8 + 5 * t336) * t336) * ((1 - t336) ** (-0.1e1 / 0.2e1))

        if Bindx == 179:
            t338 = np.cos(phi)
            t337 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.3e1) * t337 ** 2 * (t338 - 2 + (5 * t338 + 8) * t338 ** 2)

        if Bindx == 180:
            t341 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (-1 + 5 * t341) * ((1 + t341) ** (0.5e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t341) ** (0.3e1 / 0.2e1))

        if Bindx == 181:
            t344 = np.sin(phi)
            t342 = t344 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.70e2) * t342 ** 2 * np.cos(phi)

        if Bindx == 182:
            t345 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + 5 * t345) * ((1 + t345) ** (0.3e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t345) ** (0.5e1 / 0.2e1))

        if Bindx == 183:
            t347 = np.cos(phi)
            t346 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.3e1) * t346 ** 2 * (t347 + 2 + (5 * t347 - 8) * t347 ** 2)

        if Bindx == 184:
            t350 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * (3 + 5 * t350) * np.sqrt((1 + t350)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t350) ** (0.7e1 / 0.2e1))

        if Bindx == 185:
            t351 = np.cos(phi)
            t352 = t351 ** 2
            t354 = t352 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-4*1j) * (phi1 - phi2)) * (4 * t352 - 16 * t354 + 4 + (14 * t352 + 5 * t354 - 11) * t351)

        if Bindx == 186:
            t356 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.10e2) * ((1 - t356) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t356))

        if Bindx == 187:
            t357 = np.cos(phi)
            t360 = 1 + t357
            t358 = t360 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * (-1 + t357) * t358 ** 2

        if Bindx == 188:
            t361 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.32e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t361)) * ((1 + t361) ** (0.7e1 / 0.2e1)) * (-3 + 5 * t361)

        if Bindx == 189:
            t362 = np.cos(phi)
            t363 = t362 ** 2
            t365 = t363 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-3*1j) * (phi1 + phi2)) * (-78 * t363 + 81 * t365 + 13 + (-14 * t363 + 45 * t365 - 15) * t362)

        if Bindx == 190:
            t367 = np.cos(phi)
            t368 = t367 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t367) ** (0.5e1 / 0.2e1)) * (-27 * t368 - 1 + (15 * t368 + 13) * t367) * ((1 - t367) ** (-0.1e1 / 0.2e1))

        if Bindx == 191:
            t371 = np.cos(phi)
            t372 = t371 ** 2
            t370 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.42e2) * t370 ** 2 * (9 * t372 - 1 + (15 * t372 - 7) * t371)

        if Bindx == 192:
            t374 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (9 * t374 ** 2 - 1) * ((1 + t374) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((-3*1j) * phi1) * ((1 - t374) ** (0.3e1 / 0.2e1))

        if Bindx == 193:
            t376 = np.cos(phi)
            t377 = t376 ** 2
            t375 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.42e2) * t375 ** 2 * (-9 * t377 + 1 + (15 * t377 - 7) * t376)

        if Bindx == 194:
            t379 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + (12 + 15 * t379) * t379) * np.sqrt((1 + t379)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t379) ** (0.5e1 / 0.2e1))

        if Bindx == 195:
            t380 = np.cos(phi)
            t381 = t380 ** 2
            t383 = t381 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-3*1j) * (phi1 - phi2)) * (78 * t381 - 81 * t383 - 13 + (-14 * t381 + 45 * t383 - 15) * t380)

        if Bindx == 196:
            t385 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * (3 + 5 * t385) * np.sqrt((1 + t385)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t385) ** (0.7e1 / 0.2e1))

        if Bindx == 197:
            t386 = np.cos(phi)
            t389 = -1 + t386
            t387 = t389 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t387 ** 2 * (1 + t386)

        if Bindx == 198:
            t390 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t390) ** (0.3e1 / 0.2e1)) * ((1 + t390) ** (0.7e1 / 0.2e1))

        if Bindx == 199:
            t392 = np.cos(phi)
            t391 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3e1) * t391 ** 2 * (t392 - 2 + (5 * t392 + 8) * t392 ** 2)

        if Bindx == 200:
            t395 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t395)) * ((1 + t395) ** (0.5e1 / 0.2e1)) * (1 + (-12 + 15 * t395) * t395)

        if Bindx == 201:
            t396 = np.cos(phi)
            t397 = t396 ** 2
            t399 = t397 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((-2*1j) * (phi1 + phi2)) * (-11 * t397 + 12 * t399 + 1 + (-18 * t397 + 15 * t399 + 5) * t396)

        if Bindx == 202:
            t401 = np.cos(phi)
            t402 = t401 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * ((1 + t401) ** (0.3e1 / 0.2e1)) * (4 * t401 - 1 + (-24 * t401 + 6 + 15 * t402) * t402) * ((1 - t401) ** (-0.1e1 / 0.2e1))

        if Bindx == 203:
            t406 = np.cos(phi)
            t405 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.210e3) * t405 ** 2 * t406 * (3 * t406 ** 2 - 1)

        if Bindx == 204:
            t407 = np.cos(phi)
            t408 = t407 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * (9 * t408 - 1 + (15 * t408 - 3) * t407) * np.sqrt((1 + t407)) * np.sqrt(0.7e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t407) ** (0.3e1 / 0.2e1))

        if Bindx == 205:
            t410 = np.cos(phi)
            t411 = t410 ** 2
            t413 = t411 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((-2*1j) * (phi1 - phi2)) * (11 * t411 - 12 * t413 - 1 + (-18 * t411 + 15 * t413 + 5) * t410)

        if Bindx == 206:
            t415 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + (12 + 15 * t415) * t415) * np.sqrt((1 + t415)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t415) ** (0.5e1 / 0.2e1))

        if Bindx == 207:
            t417 = np.cos(phi)
            t416 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.3e1) * t416 ** 2 * (t417 + 2 + (5 * t417 - 8) * t417 ** 2)

        if Bindx == 208:
            t420 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t420) ** (0.7e1 / 0.2e1)) * ((1 + t420) ** (0.3e1 / 0.2e1))

        if Bindx == 209:
            t423 = np.sin(phi)
            t421 = t423 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.210e3) * t421 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 210:
            t424 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.21e2) * ((1 - t424) ** (0.3e1 / 0.2e1)) * ((1 + t424) ** (0.5e1 / 0.2e1)) * (-1 + 5 * t424)

        if Bindx == 211:
            t426 = np.cos(phi)
            t427 = t426 ** 2
            t425 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.42e2) * t425 ** 2 * (9 * t427 - 1 + (15 * t427 - 7) * t426)

        if Bindx == 212:
            t429 = np.cos(phi)
            t430 = t429 ** 2
            tfunc[..., c] = (-0.11e2 / 0.8e1*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * np.sqrt((1 - t429)) * ((1 + t429) ** (0.3e1 / 0.2e1)) * (-9 * t430 + 1 + (15 * t430 - 3) * t429)

        if Bindx == 213:
            t432 = np.cos(phi)
            t433 = t432 ** 2
            t435 = t433 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-1*1j) * (phi1 + phi2)) * (-14 * t433 + 21 * t435 + 1 + (-126 * t433 + 105 * t435 + 29) * t432)

        if Bindx == 214:
            t437 = np.cos(phi)
            t438 = t437 ** 2
            t443 = (-14 + 21 * t438) * t438
            t442 = 1 - t437
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.30e2) * np.sqrt((1 + t437)) * (t443 * t437 - t442 - t443) * (t442 ** (-0.1e1 / 0.2e1))

        if Bindx == 215:
            t444 = np.cos(phi)
            t445 = t444 ** 2
            t447 = t445 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((-1*1j) * (phi1 - phi2)) * (14 * t445 - 21 * t447 - 1 + (-126 * t445 + 105 * t447 + 29) * t444)

        if Bindx == 216:
            t449 = np.cos(phi)
            t450 = t449 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * (9 * t450 - 1 + (15 * t450 - 3) * t449) * np.sqrt((1 + t449)) * np.sqrt(0.7e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t449) ** (0.3e1 / 0.2e1))

        if Bindx == 217:
            t453 = np.cos(phi)
            t454 = t453 ** 2
            t452 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.42e2) * t452 ** 2 * (-9 * t454 + 1 + (15 * t454 - 7) * t453)

        if Bindx == 218:
            t456 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * (1 + 5 * t456) * ((1 + t456) ** (0.3e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t456) ** (0.5e1 / 0.2e1))

        if Bindx == 219:
            t459 = np.sin(phi)
            t457 = t459 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.210e3) * t457 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 220:
            t460 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.7e1) * ((1 - t460) ** (0.5e1 / 0.2e1)) * ((1 + t460) ** (0.5e1 / 0.2e1))

        if Bindx == 221:
            t463 = np.sin(phi)
            t461 = t463 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.70e2) * t461 ** 2 * np.cos(phi)

        if Bindx == 222:
            t464 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.35e2) * ((1 - t464) ** (0.3e1 / 0.2e1)) * ((1 + t464) ** (0.3e1 / 0.2e1)) * (9 * t464 ** 2 - 1)

        if Bindx == 223:
            t466 = np.cos(phi)
            t465 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((-2*1j) * phi2) * np.sqrt(0.210e3) * t465 ** 2 * t466 * (3 * t466 ** 2 - 1)

        if Bindx == 224:
            t467 = np.cos(phi)
            t468 = t467 ** 2
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.30e2) * np.sqrt((1 - t467)) * np.sqrt((1 + t467)) * (1 + (-14 + 21 * t468) * t468)

        if Bindx == 225:
            t470 = np.cos(phi)
            t471 = t470 ** 2
            tfunc[..., c] = 0.11e2 / 0.8e1 * t470 * (15 + (-70 + 63 * t471) * t471)

        if Bindx == 226:
            t473 = np.cos(phi)
            t474 = t473 ** 2
            t479 = (-14 + 21 * t474) * t474
            t478 = 1 - t473
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.30e2) * np.sqrt((1 + t473)) * (t479 * t473 - t478 - t479) * (t478 ** (-0.1e1 / 0.2e1))

        if Bindx == 227:
            t481 = np.cos(phi)
            t480 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * phi2) * np.sqrt(0.210e3) * t480 ** 2 * t481 * (3 * t481 ** 2 - 1)

        if Bindx == 228:
            t482 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (9 * t482 ** 2 - 1) * ((1 + t482) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((3*1j) * phi2) * ((1 - t482) ** (0.3e1 / 0.2e1))

        if Bindx == 229:
            t485 = np.sin(phi)
            t483 = t485 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((4*1j) * phi2) * np.sqrt(0.70e2) * t483 ** 2 * np.cos(phi)

        if Bindx == 230:
            t486 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((5*1j) * phi2) * np.sqrt(0.7e1) * ((1 - t486) ** (0.5e1 / 0.2e1)) * ((1 + t486) ** (0.5e1 / 0.2e1))

        if Bindx == 231:
            t489 = np.sin(phi)
            t487 = t489 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.210e3) * t487 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 232:
            t490 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.21e2) * ((1 - t490) ** (0.5e1 / 0.2e1)) * ((1 + t490) ** (0.3e1 / 0.2e1)) * (1 + 5 * t490)

        if Bindx == 233:
            t492 = np.cos(phi)
            t493 = t492 ** 2
            t491 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.42e2) * t491 ** 2 * (-9 * t493 + 1 + (15 * t493 - 7) * t492)

        if Bindx == 234:
            t495 = np.cos(phi)
            t496 = t495 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.7e1) * ((1 - t495) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t495)) * (9 * t496 - 1 + (15 * t496 - 3) * t495)

        if Bindx == 235:
            t498 = np.cos(phi)
            t499 = t498 ** 2
            t501 = t499 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((1j) * (phi1 - phi2)) * (14 * t499 - 21 * t501 - 1 + (-126 * t499 + 105 * t501 + 29) * t498)

        if Bindx == 236:
            t503 = np.cos(phi)
            t504 = t503 ** 2
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.30e2) * np.sqrt((1 - t503)) * np.sqrt((1 + t503)) * (1 + (-14 + 21 * t504) * t504)

        if Bindx == 237:
            t506 = np.cos(phi)
            t507 = t506 ** 2
            t509 = t507 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((1j) * (phi1 + phi2)) * (-14 * t507 + 21 * t509 + 1 + (-126 * t507 + 105 * t509 + 29) * t506)

        if Bindx == 238:
            t511 = np.cos(phi)
            t512 = t511 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.7e1) * ((1 + t511) ** (0.3e1 / 0.2e1)) * (4 * t511 - 1 + (-24 * t511 + 6 + 15 * t512) * t512) * ((1 - t511) ** (-0.1e1 / 0.2e1))

        if Bindx == 239:
            t516 = np.cos(phi)
            t517 = t516 ** 2
            t515 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.42e2) * t515 ** 2 * (9 * t517 - 1 + (15 * t517 - 7) * t516)

        if Bindx == 240:
            t519 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * (-1 + 5 * t519) * ((1 + t519) ** (0.5e1 / 0.2e1)) * np.sqrt(0.21e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t519) ** (0.3e1 / 0.2e1))

        if Bindx == 241:
            t522 = np.sin(phi)
            t520 = t522 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.210e3) * t520 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 242:
            t523 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t523) ** (0.7e1 / 0.2e1)) * ((1 + t523) ** (0.3e1 / 0.2e1))

        if Bindx == 243:
            t525 = np.cos(phi)
            t524 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.3e1) * t524 ** 2 * (t525 + 2 + (5 * t525 - 8) * t525 ** 2)

        if Bindx == 244:
            t528 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.6e1) * ((1 - t528) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t528)) * (1 + (12 + 15 * t528) * t528)

        if Bindx == 245:
            t529 = np.cos(phi)
            t530 = t529 ** 2
            t532 = t530 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((2*1j) * (phi1 - phi2)) * (11 * t530 - 12 * t532 - 1 + (-18 * t530 + 15 * t532 + 5) * t529)

        if Bindx == 246:
            t534 = np.cos(phi)
            t535 = t534 ** 2
            tfunc[..., c] = (0.11e2 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.7e1) * ((1 - t534) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t534)) * (9 * t535 - 1 + (15 * t535 - 3) * t534)

        if Bindx == 247:
            t538 = np.cos(phi)
            t537 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * phi1) * np.sqrt(0.210e3) * t537 ** 2 * t538 * (3 * t538 ** 2 - 1)

        if Bindx == 248:
            t539 = np.cos(phi)
            t540 = t539 ** 2
            tfunc[..., c] = (-0.11e2 / 0.8e1*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.7e1) * np.sqrt((1 - t539)) * ((1 + t539) ** (0.3e1 / 0.2e1)) * (-9 * t540 + 1 + (15 * t540 - 3) * t539)

        if Bindx == 249:
            t542 = np.cos(phi)
            t543 = t542 ** 2
            t545 = t543 ** 2
            tfunc[..., c] = (0.11e2 / 0.4e1) * np.exp((2*1j) * (phi1 + phi2)) * (-11 * t543 + 12 * t545 + 1 + (-18 * t543 + 15 * t545 + 5) * t542)

        if Bindx == 250:
            t547 = np.cos(phi)
            t548 = t547 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.6e1) * ((1 + t547) ** (0.5e1 / 0.2e1)) * (-27 * t548 - 1 + (15 * t548 + 13) * t547) * ((1 - t547) ** (-0.1e1 / 0.2e1))

        if Bindx == 251:
            t551 = np.cos(phi)
            t550 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.3e1) * t550 ** 2 * (t551 - 2 + (5 * t551 + 8) * t551 ** 2)

        if Bindx == 252:
            t554 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.30e2) * ((1 - t554) ** (0.3e1 / 0.2e1)) * ((1 + t554) ** (0.7e1 / 0.2e1))

        if Bindx == 253:
            t555 = np.cos(phi)
            t558 = -1 + t555
            t556 = t558 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.5e1) * t556 ** 2 * (1 + t555)

        if Bindx == 254:
            t559 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.2e1) * ((1 - t559) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t559)) * (3 + 5 * t559)

        if Bindx == 255:
            t560 = np.cos(phi)
            t561 = t560 ** 2
            t563 = t561 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((3*1j) * (phi1 - phi2)) * (78 * t561 - 81 * t563 - 13 + (-14 * t561 + 45 * t563 - 15) * t560)

        if Bindx == 256:
            t565 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t565) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t565)) * (1 + (12 + 15 * t565) * t565)

        if Bindx == 257:
            t567 = np.cos(phi)
            t568 = t567 ** 2
            t566 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.42e2) * t566 ** 2 * (-9 * t568 + 1 + (15 * t568 - 7) * t567)

        if Bindx == 258:
            t570 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.35e2) * ((1 - t570) ** (0.3e1 / 0.2e1)) * ((1 + t570) ** (0.3e1 / 0.2e1)) * (9 * t570 ** 2 - 1)

        if Bindx == 259:
            t572 = np.cos(phi)
            t573 = t572 ** 2
            t571 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.42e2) * t571 ** 2 * (9 * t573 - 1 + (15 * t573 - 7) * t572)

        if Bindx == 260:
            t575 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t575)) * ((1 + t575) ** (0.5e1 / 0.2e1)) * (1 + (-12 + 15 * t575) * t575)

        if Bindx == 261:
            t576 = np.cos(phi)
            t577 = t576 ** 2
            t579 = t577 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((3*1j) * (phi1 + phi2)) * (-78 * t577 + 81 * t579 + 13 + (-14 * t577 + 45 * t579 - 15) * t576)

        if Bindx == 262:
            t581 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.2e1) * ((1 + t581) ** (0.7e1 / 0.2e1)) * (3 + (-8 + 5 * t581) * t581) * ((1 - t581) ** (-0.1e1 / 0.2e1))

        if Bindx == 263:
            t582 = np.cos(phi)
            t585 = 1 + t582
            t583 = t585 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.5e1) * (-1 + t582) * t583 ** 2

        if Bindx == 264:
            t586 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.10e2) * ((1 - t586) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t586))

        if Bindx == 265:
            t587 = np.cos(phi)
            t588 = t587 ** 2
            t590 = t588 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((4*1j) * (phi1 - phi2)) * (4 * t588 - 16 * t590 + 4 + (14 * t588 + 5 * t590 - 11) * t587)

        if Bindx == 266:
            t592 = np.cos(phi)
            tfunc[..., c] = (0.33e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t592) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t592)) * (3 + 5 * t592)

        if Bindx == 267:
            t594 = np.cos(phi)
            t593 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.3e1) * t593 ** 2 * (t594 + 2 + (5 * t594 - 8) * t594 ** 2)

        if Bindx == 268:
            t597 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.21e2) * ((1 - t597) ** (0.5e1 / 0.2e1)) * ((1 + t597) ** (0.3e1 / 0.2e1)) * (1 + 5 * t597)

        if Bindx == 269:
            t600 = np.sin(phi)
            t598 = t600 ** 2
            tfunc[..., c] = (0.33e2 / 0.16e2) * np.exp((4*1j) * phi1) * np.sqrt(0.70e2) * t598 ** 2 * np.cos(phi)

        if Bindx == 270:
            t601 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.21e2) * ((1 - t601) ** (0.3e1 / 0.2e1)) * ((1 + t601) ** (0.5e1 / 0.2e1)) * (-1 + 5 * t601)

        if Bindx == 271:
            t603 = np.cos(phi)
            t602 = np.sin(phi)
            tfunc[..., c] = -(0.11e2 / 0.8e1) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.3e1) * t602 ** 2 * (t603 - 2 + (5 * t603 + 8) * t603 ** 2)

        if Bindx == 272:
            t606 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t606)) * ((1 + t606) ** (0.7e1 / 0.2e1)) * (-3 + 5 * t606)

        if Bindx == 273:
            t607 = np.cos(phi)
            t608 = t607 ** 2
            t610 = t608 ** 2
            tfunc[..., c] = (0.11e2 / 0.16e2) * np.exp((4*1j) * (phi1 + phi2)) * (-4 * t608 + 16 * t610 - 4 + (14 * t608 + 5 * t610 - 11) * t607)

        if Bindx == 274:
            t612 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t612)) * ((1 + t612) ** (0.9e1 / 0.2e1))

        if Bindx == 275:
            t613 = np.cos(phi)
            t614 = t613 ** 2
            t616 = t614 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((5*1j) * (phi1 - phi2)) * (-10 * t614 - 5 * t616 - 1 + (10 * t614 + t616 + 5) * t613)

        if Bindx == 276:
            t618 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.10e2) * ((1 - t618) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t618))

        if Bindx == 277:
            t619 = np.cos(phi)
            t622 = -1 + t619
            t620 = t622 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.5e1) * t620 ** 2 * (1 + t619)

        if Bindx == 278:
            t623 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t623) ** (0.7e1 / 0.2e1)) * ((1 + t623) ** (0.3e1 / 0.2e1))

        if Bindx == 279:
            t626 = np.sin(phi)
            t624 = t626 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.210e3) * t624 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 280:
            t627 = np.cos(phi)
            tfunc[..., c] = (-0.33e2 / 0.16e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.7e1) * ((1 - t627) ** (0.5e1 / 0.2e1)) * ((1 + t627) ** (0.5e1 / 0.2e1))

        if Bindx == 281:
            t630 = np.sin(phi)
            t628 = t630 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.210e3) * t628 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 282:
            t631 = np.cos(phi)
            tfunc[..., c] = (0.11e2 / 0.16e2*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.30e2) * ((1 - t631) ** (0.3e1 / 0.2e1)) * ((1 + t631) ** (0.7e1 / 0.2e1))

        if Bindx == 283:
            t632 = np.cos(phi)
            t635 = 1 + t632
            t633 = t635 ** 2
            tfunc[..., c] = (0.33e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.5e1) * (-1 + t632) * t633 ** 2

        if Bindx == 284:
            t636 = np.cos(phi)
            tfunc[..., c] = (-0.11e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t636)) * ((1 + t636) ** (0.9e1 / 0.2e1))

        if Bindx == 285:
            t637 = np.cos(phi)
            t638 = t637 ** 2
            t642 = 10 * t638
            t640 = t638 ** 2
            tfunc[..., c] = (0.11e2 / 0.32e2) * np.exp((5*1j) * (phi1 + phi2)) * (5 * t640 + t642 + 1 + (t640 + t642 + 5) * t637)

        if Bindx == 286:
            t643 = np.cos(phi)
            t649 = 6 * t643
            t644 = t643 ** 2
            t645 = t643 * t644
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (t649 + 1 + (20 + t645) * t645 + (15 + (t649 + 15) * t644) * t644)

        if Bindx == 287:
            t650 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.3e1) * ((1 + t650) ** (0.11e2 / 0.2e1)) * np.sqrt((1 - t650))

        if Bindx == 288:
            t651 = np.cos(phi)
            t655 = 1 + t651
            t652 = t655 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * (-1 + t651) * t655 * t652 ** 2

        if Bindx == 289:
            t656 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.55e2) * ((1 - t656) ** (0.3e1 / 0.2e1)) * ((1 + t656) ** (0.9e1 / 0.2e1))

        if Bindx == 290:
            t658 = np.cos(phi)
            t661 = 1 + t658
            t659 = t661 ** 2
            t657 = -1 + t658
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.55e2) * t657 ** 2 * t659 ** 2

        if Bindx == 291:
            t662 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 + phi2)) * np.sqrt(0.22e2) * ((1 - t662) ** (0.5e1 / 0.2e1)) * ((1 + t662) ** (0.7e1 / 0.2e1))

        if Bindx == 292:
            t666 = np.sin(phi)
            t663 = t666 ** 2
            t664 = t666 * t663
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.231e3) * t664 ** 2

        if Bindx == 293:
            t667 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 - phi2)) * np.sqrt(0.22e2) * ((1 - t667) ** (0.7e1 / 0.2e1)) * ((1 + t667) ** (0.5e1 / 0.2e1))

        if Bindx == 294:
            t669 = np.cos(phi)
            t672 = -1 + t669
            t670 = t672 ** 2
            t668 = 1 + t669
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.55e2) * t670 ** 2 * t668 ** 2

        if Bindx == 295:
            t673 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.55e2) * ((1 - t673) ** (0.9e1 / 0.2e1)) * ((1 + t673) ** (0.3e1 / 0.2e1))

        if Bindx == 296:
            t674 = np.cos(phi)
            t678 = -1 + t674
            t675 = t678 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.66e2) * t678 * t675 ** 2 * (1 + t674)

        if Bindx == 297:
            t679 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.3e1) * ((1 - t679) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t679))

        if Bindx == 298:
            t680 = np.cos(phi)
            t686 = -6 * t680
            t681 = t680 ** 2
            t682 = t680 * t681
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (t686 + 1 + (-20 + t682) * t682 + (15 + (t686 + 15) * t681) * t681)

        if Bindx == 299:
            t687 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t687)) * ((1 + t687) ** (0.11e2 / 0.2e1))

        if Bindx == 300:
            t688 = np.cos(phi)
            t689 = t688 ** 2
            t691 = t689 ** 2
            t690 = t688 * t689
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-5*1j) * (phi1 + phi2)) * (-20 * t689 + 35 * t691 - 5 + (10 + 6 * t690) * t690 + (25 * t691 - 19) * t688)

        if Bindx == 301:
            t694 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.22e2) * ((1 + t694) ** (0.9e1 / 0.2e1)) * (2 + (-5 + 3 * t694) * t694) * ((1 - t694) ** (-0.1e1 / 0.2e1))

        if Bindx == 302:
            t696 = np.cos(phi)
            t697 = t696 ** 2
            t695 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.165e3) * t695 ** 2 * (-t696 - 1 + (5 * t696 + 3 + 2 * t697) * t697)

        if Bindx == 303:
            t700 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-1 + 3 * t700) * ((1 + t700) ** (0.7e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t700) ** (0.3e1 / 0.2e1))

        if Bindx == 304:
            t704 = np.sin(phi)
            t702 = t704 ** 2
            t701 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.66e2) * t702 ** 2 * (-1 + (5 + 6 * t701) * t701)

        if Bindx == 305:
            t705 = np.cos(phi)
            t706 = t705 ** 2
            tfunc[..., c] = (0.39e2 / 0.16e2*1j) * t705 * (-3 * t706 - 1 + (t706 + 3) * t705) * ((1 + t705) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-5*1j) * phi1) * ((1 - t705) ** (-0.1e1 / 0.2e1))

        if Bindx == 306:
            t711 = np.sin(phi)
            t709 = t711 ** 2
            t708 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.66e2) * t709 ** 2 * (-1 + (-5 + 6 * t708) * t708)

        if Bindx == 307:
            t712 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (1 + 3 * t712) * ((1 + t712) ** (0.3e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t712) ** (0.7e1 / 0.2e1))

        if Bindx == 308:
            t714 = np.cos(phi)
            t715 = t714 ** 2
            t713 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.165e3) * t713 ** 2 * (t714 - 1 + (-5 * t714 + 3 + 2 * t715) * t715)

        if Bindx == 309:
            t718 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * (2 + 3 * t718) * np.sqrt((1 + t718)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t718) ** (0.9e1 / 0.2e1))

        if Bindx == 310:
            t719 = np.cos(phi)
            t720 = t719 ** 2
            t722 = t720 ** 2
            t721 = t719 * t720
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-5*1j) * (phi1 - phi2)) * (-20 * t720 + 35 * t722 - 5 + (-10 + 6 * t721) * t721 + (-25 * t722 + 19) * t719)

        if Bindx == 311:
            t725 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.3e1) * ((1 - t725) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t725))

        if Bindx == 312:
            t726 = np.cos(phi)
            t730 = 1 + t726
            t727 = t730 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * (-1 + t726) * t730 * t727 ** 2

        if Bindx == 313:
            t731 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t731)) * ((1 + t731) ** (0.9e1 / 0.2e1)) * (-2 + 3 * t731)

        if Bindx == 314:
            t732 = np.cos(phi)
            t733 = t732 ** 2
            t735 = t733 ** 2
            t734 = t732 * t733
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-4*1j) * (phi1 + phi2)) * (-65 * t733 + 35 * t735 + 13 + (-80 + 33 * t734) * t734 + (88 * t735 + 8) * t732)

        if Bindx == 315:
            t738 = np.cos(phi)
            t739 = t738 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * ((1 + t738) ** (0.7e1 / 0.2e1)) * (-22 * t739 - 2 + (11 * t739 + 13) * t738) * ((1 - t738) ** (-0.1e1 / 0.2e1))

        if Bindx == 316:
            t742 = np.cos(phi)
            t743 = t742 ** 2
            t741 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.30e2) * t741 ** 2 * (-20 * t742 + 1 + (44 * t742 - 10 + 33 * t743) * t743)

        if Bindx == 317:
            t746 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (-2 + (-11 + 33 * t746) * t746) * ((1 + t746) ** (0.5e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t746) ** (0.3e1 / 0.2e1))

        if Bindx == 318:
            t750 = np.sin(phi)
            t748 = t750 ** 2
            t747 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.14e2) * t748 ** 2 * (11 * t747 ** 2 - 1)

        if Bindx == 319:
            t751 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * (-2 + (11 + 33 * t751) * t751) * ((1 + t751) ** (0.3e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t751) ** (0.5e1 / 0.2e1))

        if Bindx == 320:
            t753 = np.cos(phi)
            t754 = t753 ** 2
            t752 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.30e2) * t752 ** 2 * (20 * t753 + 1 + (-44 * t753 - 10 + 33 * t754) * t754)

        if Bindx == 321:
            t757 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (2 + (11 + 11 * t757) * t757) * np.sqrt((1 + t757)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t757) ** (0.7e1 / 0.2e1))

        if Bindx == 322:
            t758 = np.cos(phi)
            t759 = t758 ** 2
            t761 = t759 ** 2
            t760 = t758 * t759
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-4*1j) * (phi1 - phi2)) * (-65 * t759 + 35 * t761 + 13 + (80 + 33 * t760) * t760 + (-88 * t761 - 8) * t758)

        if Bindx == 323:
            t764 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * (2 + 3 * t764) * np.sqrt((1 + t764)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t764) ** (0.9e1 / 0.2e1))

        if Bindx == 324:
            t765 = np.cos(phi)
            t769 = -1 + t765
            t766 = t769 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.66e2) * t769 * t766 ** 2 * (1 + t765)

        if Bindx == 325:
            t770 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t770) ** (0.3e1 / 0.2e1)) * ((1 + t770) ** (0.9e1 / 0.2e1))

        if Bindx == 326:
            t771 = np.cos(phi)
            t774 = 1 + t771
            t772 = t774 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.165e3) * (-1 + t771) * t772 ** 2 * (2 * t771 - 1)

        if Bindx == 327:
            t775 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t775)) * ((1 + t775) ** (0.7e1 / 0.2e1)) * (2 + (-11 + 11 * t775) * t775)

        if Bindx == 328:
            t776 = np.cos(phi)
            t777 = t776 ** 2
            t779 = t777 ** 2
            t778 = t776 * t777
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-3*1j) * (phi1 + phi2)) * (12 * t777 - 105 * t779 - 1 + (-206 + 110 * t778) * t778 + (165 * t779 + 57) * t776)

        if Bindx == 329:
            t782 = np.cos(phi)
            t783 = t782 ** 2
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * ((1 + t782) ** (0.5e1 / 0.2e1)) * (-2 * t782 - 3 + (-110 * t782 + 60 + 55 * t783) * t783) * ((1 - t782) ** (-0.1e1 / 0.2e1))

        if Bindx == 330:
            t787 = np.cos(phi)
            t788 = t787 ** 2
            t786 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.10e2) * t786 ** 2 * (-3 * t787 + 1 + (11 * t787 - 15 + 22 * t788) * t788)

        if Bindx == 331:
            t791 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (11 * t791 ** 2 - 3) * t791 * ((1 + t791) ** (0.3e1 / 0.2e1)) * np.sqrt(0.105e3) * np.exp((-3*1j) * phi1) * ((1 - t791) ** (0.3e1 / 0.2e1))

        if Bindx == 332:
            t793 = np.cos(phi)
            t794 = t793 ** 2
            t792 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.10e2) * t792 ** 2 * (3 * t793 + 1 + (-11 * t793 - 15 + 22 * t794) * t794)

        if Bindx == 333:
            t797 = np.cos(phi)
            t800 = 55 * t797 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * (t800 - 3 + (t800 + 5) * t797) * np.sqrt((1 + t797)) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t797) ** (0.5e1 / 0.2e1))

        if Bindx == 334:
            t801 = np.cos(phi)
            t802 = t801 ** 2
            t804 = t802 ** 2
            t803 = t801 * t802
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-3*1j) * (phi1 - phi2)) * (12 * t802 - 105 * t804 - 1 + (206 + 110 * t803) * t803 + (-165 * t804 - 57) * t801)

        if Bindx == 335:
            t807 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (2 + (11 + 11 * t807) * t807) * np.sqrt((1 + t807)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t807) ** (0.7e1 / 0.2e1))

        if Bindx == 336:
            t809 = np.cos(phi)
            t810 = t809 ** 2
            t808 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.165e3) * t808 ** 2 * (t809 - 1 + (-5 * t809 + 3 + 2 * t810) * t810)

        if Bindx == 337:
            t813 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t813) ** (0.9e1 / 0.2e1)) * ((1 + t813) ** (0.3e1 / 0.2e1))

        if Bindx == 338:
            t815 = np.cos(phi)
            t818 = 1 + t815
            t816 = t818 ** 2
            t814 = -1 + t815
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.55e2) * t814 ** 2 * t816 ** 2

        if Bindx == 339:
            t819 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.165e3) * ((1 - t819) ** (0.3e1 / 0.2e1)) * ((1 + t819) ** (0.7e1 / 0.2e1)) * (-1 + 3 * t819)

        if Bindx == 340:
            t821 = np.cos(phi)
            t822 = t821 ** 2
            t820 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.30e2) * t820 ** 2 * (-20 * t821 + 1 + (44 * t821 - 10 + 33 * t822) * t822)

        if Bindx == 341:
            t825 = np.cos(phi)
            t826 = t825 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt((1 - t825)) * ((1 + t825) ** (0.5e1 / 0.2e1)) * (-55 * t826 + 3 + (55 * t826 + 5) * t825)

        if Bindx == 342:
            t828 = np.cos(phi)
            t829 = t828 ** 2
            t831 = t829 ** 2
            t830 = t828 * t829
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (289 * t829 - 735 * t831 - 17 + (-372 + 495 * t830) * t830 + (330 * t831 + 74) * t828)

        if Bindx == 343:
            t834 = np.cos(phi)
            t835 = t834 ** 2
            t837 = t835 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * ((1 + t834) ** (0.3e1 / 0.2e1)) * (54 * t835 - 165 * t837 - 1 + (30 * t835 + 99 * t837 - 17) * t834) * ((1 - t834) ** (-0.1e1 / 0.2e1))

        if Bindx == 344:
            t840 = np.cos(phi)
            t841 = t840 ** 2
            t839 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.105e3) * t839 ** 2 * (1 + (-18 + 33 * t841) * t841)

        if Bindx == 345:
            t843 = np.cos(phi)
            t844 = t843 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-18 * t843 + 1 + (66 * t843 - 36 + 99 * t844) * t844) * np.sqrt((1 + t843)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t843) ** (0.3e1 / 0.2e1))

        if Bindx == 346:
            t847 = np.cos(phi)
            t848 = t847 ** 2
            t850 = t848 ** 2
            t849 = t847 * t848
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (289 * t848 - 735 * t850 - 17 + (372 + 495 * t849) * t849 + (-330 * t850 - 74) * t847)

        if Bindx == 347:
            t853 = np.cos(phi)
            t856 = 55 * t853 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * (t856 - 3 + (t856 + 5) * t853) * np.sqrt((1 + t853)) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t853) ** (0.5e1 / 0.2e1))

        if Bindx == 348:
            t858 = np.cos(phi)
            t859 = t858 ** 2
            t857 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.30e2) * t857 ** 2 * (20 * t858 + 1 + (-44 * t858 - 10 + 33 * t859) * t859)

        if Bindx == 349:
            t862 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (1 + 3 * t862) * ((1 + t862) ** (0.3e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t862) ** (0.7e1 / 0.2e1))

        if Bindx == 350:
            t864 = np.cos(phi)
            t867 = -1 + t864
            t865 = t867 ** 2
            t863 = 1 + t864
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.55e2) * t865 ** 2 * t863 ** 2

        if Bindx == 351:
            t868 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t868) ** (0.5e1 / 0.2e1)) * ((1 + t868) ** (0.7e1 / 0.2e1))

        if Bindx == 352:
            t872 = np.sin(phi)
            t870 = t872 ** 2
            t869 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.66e2) * t870 ** 2 * (-1 + (5 + 6 * t869) * t869)

        if Bindx == 353:
            t873 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.3e1) * ((1 - t873) ** (0.3e1 / 0.2e1)) * ((1 + t873) ** (0.5e1 / 0.2e1)) * (-2 + (-11 + 33 * t873) * t873)

        if Bindx == 354:
            t875 = np.cos(phi)
            t876 = t875 ** 2
            t874 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.10e2) * t874 ** 2 * (-3 * t875 + 1 + (11 * t875 - 15 + 22 * t876) * t876)

        if Bindx == 355:
            t879 = np.cos(phi)
            t880 = t879 ** 2
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t879)) * ((1 + t879) ** (0.3e1 / 0.2e1)) * (18 * t879 + 1 + (-66 * t879 - 36 + 99 * t880) * t880)

        if Bindx == 356:
            t883 = np.cos(phi)
            t884 = t883 ** 2
            t886 = t884 ** 2
            t885 = t883 * t884
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((-1*1j) * (phi1 + phi2)) * (100 * t884 - 285 * t886 - 5 + (-30 + 198 * t885) * t885 + (33 * t886 + 5) * t883)

        if Bindx == 357:
            t889 = np.cos(phi)
            t890 = t889 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.42e2) * np.sqrt((1 + t889)) * t889 * np.sqrt((1 - t889)) * (5 + (-30 + 33 * t890) * t890)

        if Bindx == 358:
            t896 = np.cos(phi)
            t897 = t896 ** 2
            t899 = t897 ** 2
            t898 = t896 * t897
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((-1*1j) * (phi1 - phi2)) * (100 * t897 - 285 * t899 - 5 + (30 + 198 * t898) * t898 + (-33 * t899 - 5) * t896)

        if Bindx == 359:
            t902 = np.cos(phi)
            t903 = t902 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-18 * t902 + 1 + (66 * t902 - 36 + 99 * t903) * t903) * np.sqrt((1 + t902)) * np.sqrt(0.10e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t902) ** (0.3e1 / 0.2e1))

        if Bindx == 360:
            t907 = np.cos(phi)
            t908 = t907 ** 2
            t906 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.10e2) * t906 ** 2 * (3 * t907 + 1 + (-11 * t907 - 15 + 22 * t908) * t908)

        if Bindx == 361:
            t911 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * (-2 + (11 + 33 * t911) * t911) * ((1 + t911) ** (0.3e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t911) ** (0.5e1 / 0.2e1))

        if Bindx == 362:
            t915 = np.sin(phi)
            t913 = t915 ** 2
            t912 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.66e2) * t913 ** 2 * (-1 + (-5 + 6 * t912) * t912)

        if Bindx == 363:
            t916 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t916) ** (0.7e1 / 0.2e1)) * ((1 + t916) ** (0.5e1 / 0.2e1))

        if Bindx == 364:
            t920 = np.sin(phi)
            t917 = t920 ** 2
            t918 = t920 * t917
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.231e3) * t918 ** 2

        if Bindx == 365:
            t921 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.16e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.77e2) * ((1 - t921) ** (0.5e1 / 0.2e1)) * ((1 + t921) ** (0.5e1 / 0.2e1)) * t921

        if Bindx == 366:
            t925 = np.sin(phi)
            t923 = t925 ** 2
            t922 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.14e2) * t923 ** 2 * (11 * t922 ** 2 - 1)

        if Bindx == 367:
            t926 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.105e3) * ((1 - t926) ** (0.3e1 / 0.2e1)) * ((1 + t926) ** (0.3e1 / 0.2e1)) * t926 * (11 * t926 ** 2 - 3)

        if Bindx == 368:
            t928 = np.cos(phi)
            t929 = t928 ** 2
            t927 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.105e3) * t927 ** 2 * (1 + (-18 + 33 * t929) * t929)

        if Bindx == 369:
            t931 = np.cos(phi)
            t932 = t931 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.42e2) * np.sqrt((1 - t931)) * np.sqrt((1 + t931)) * t931 * (5 + (-30 + 33 * t932) * t932)

        if Bindx == 370:
            t934 = np.cos(phi)
            t935 = t934 ** 2
            t936 = t935 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t936 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t936 + 0.1365e4 / 0.16e2) * t935

        if Bindx == 371:
            t938 = np.cos(phi)
            t939 = t938 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.42e2) * np.sqrt((1 + t938)) * t938 * np.sqrt((1 - t938)) * (5 + (-30 + 33 * t939) * t939)

        if Bindx == 372:
            t946 = np.cos(phi)
            t947 = t946 ** 2
            t945 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((2*1j) * phi2) * np.sqrt(0.105e3) * t945 ** 2 * (1 + (-18 + 33 * t947) * t947)

        if Bindx == 373:
            t949 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (11 * t949 ** 2 - 3) * t949 * ((1 + t949) ** (0.3e1 / 0.2e1)) * np.sqrt(0.105e3) * np.exp((3*1j) * phi2) * ((1 - t949) ** (0.3e1 / 0.2e1))

        if Bindx == 374:
            t953 = np.sin(phi)
            t951 = t953 ** 2
            t950 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((4*1j) * phi2) * np.sqrt(0.14e2) * t951 ** 2 * (11 * t950 ** 2 - 1)

        if Bindx == 375:
            t954 = np.cos(phi)
            t955 = t954 ** 2
            tfunc[..., c] = (0.39e2 / 0.16e2*1j) * t954 * ((1 + t954) ** (0.5e1 / 0.2e1)) * (-3 * t955 - 1 + (t955 + 3) * t954) * np.sqrt(0.77e2) * np.exp((5*1j) * phi2) * ((1 - t954) ** (-0.1e1 / 0.2e1))

        if Bindx == 376:
            t960 = np.sin(phi)
            t957 = t960 ** 2
            t958 = t960 * t957
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((6*1j) * phi2) * np.sqrt(0.231e3) * t958 ** 2

        if Bindx == 377:
            t961 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t961) ** (0.7e1 / 0.2e1)) * ((1 + t961) ** (0.5e1 / 0.2e1))

        if Bindx == 378:
            t965 = np.sin(phi)
            t963 = t965 ** 2
            t962 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.66e2) * t963 ** 2 * (-1 + (-5 + 6 * t962) * t962)

        if Bindx == 379:
            t966 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.3e1) * ((1 - t966) ** (0.5e1 / 0.2e1)) * ((1 + t966) ** (0.3e1 / 0.2e1)) * (-2 + (11 + 33 * t966) * t966)

        if Bindx == 380:
            t968 = np.cos(phi)
            t969 = t968 ** 2
            t967 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.10e2) * t967 ** 2 * (3 * t968 + 1 + (-11 * t968 - 15 + 22 * t969) * t969)

        if Bindx == 381:
            t972 = np.cos(phi)
            t973 = t972 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.10e2) * ((1 - t972) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t972)) * (-18 * t972 + 1 + (66 * t972 - 36 + 99 * t973) * t973)

        if Bindx == 382:
            t976 = np.cos(phi)
            t977 = t976 ** 2
            t979 = t977 ** 2
            t978 = t976 * t977
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((1j) * (phi1 - phi2)) * (100 * t977 - 285 * t979 - 5 + (30 + 198 * t978) * t978 + (-33 * t979 - 5) * t976)

        if Bindx == 383:
            t982 = np.cos(phi)
            t983 = t982 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.42e2) * np.sqrt((1 - t982)) * np.sqrt((1 + t982)) * t982 * (5 + (-30 + 33 * t983) * t983)

        if Bindx == 384:
            t985 = np.cos(phi)
            t986 = t985 ** 2
            t988 = t986 ** 2
            t987 = t985 * t986
            tfunc[..., c] = (0.13e2 / 0.16e2) * np.exp((1j) * (phi1 + phi2)) * (100 * t986 - 285 * t988 - 5 + (-30 + 198 * t987) * t987 + (33 * t988 + 5) * t985)

        if Bindx == 385:
            t991 = np.cos(phi)
            t992 = t991 ** 2
            t994 = t992 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.10e2) * ((1 + t991) ** (0.3e1 / 0.2e1)) * (54 * t992 - 165 * t994 - 1 + (30 * t992 + 99 * t994 - 17) * t991) * ((1 - t991) ** (-0.1e1 / 0.2e1))

        if Bindx == 386:
            t997 = np.cos(phi)
            t998 = t997 ** 2
            t996 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.10e2) * t996 ** 2 * (-3 * t997 + 1 + (11 * t997 - 15 + 22 * t998) * t998)

        if Bindx == 387:
            t1001 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (-2 + (-11 + 33 * t1001) * t1001) * ((1 + t1001) ** (0.5e1 / 0.2e1)) * np.sqrt(0.3e1) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t1001) ** (0.3e1 / 0.2e1))

        if Bindx == 388:
            t1005 = np.sin(phi)
            t1003 = t1005 ** 2
            t1002 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.66e2) * t1003 ** 2 * (-1 + (5 + 6 * t1002) * t1002)

        if Bindx == 389:
            t1006 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (phi1 + 6 * phi2)) * np.sqrt(0.22e2) * ((1 - t1006) ** (0.5e1 / 0.2e1)) * ((1 + t1006) ** (0.7e1 / 0.2e1))

        if Bindx == 390:
            t1008 = np.cos(phi)
            t1011 = -1 + t1008
            t1009 = t1011 ** 2
            t1007 = 1 + t1008
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.55e2) * t1009 ** 2 * t1007 ** 2

        if Bindx == 391:
            t1012 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.165e3) * ((1 - t1012) ** (0.7e1 / 0.2e1)) * ((1 + t1012) ** (0.3e1 / 0.2e1)) * (1 + 3 * t1012)

        if Bindx == 392:
            t1014 = np.cos(phi)
            t1015 = t1014 ** 2
            t1013 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.30e2) * t1013 ** 2 * (20 * t1014 + 1 + (-44 * t1014 - 10 + 33 * t1015) * t1015)

        if Bindx == 393:
            t1018 = np.cos(phi)
            t1021 = 55 * t1018 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * ((1 - t1018) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t1018)) * (t1021 - 3 + (t1021 + 5) * t1018)

        if Bindx == 394:
            t1022 = np.cos(phi)
            t1023 = t1022 ** 2
            t1025 = t1023 ** 2
            t1024 = t1022 * t1023
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (289 * t1023 - 735 * t1025 - 17 + (372 + 495 * t1024) * t1024 + (-330 * t1025 - 74) * t1022)

        if Bindx == 395:
            t1028 = np.cos(phi)
            t1029 = t1028 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.10e2) * ((1 - t1028) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t1028)) * (-18 * t1028 + 1 + (66 * t1028 - 36 + 99 * t1029) * t1029)

        if Bindx == 396:
            t1033 = np.cos(phi)
            t1034 = t1033 ** 2
            t1032 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((2*1j) * phi1) * np.sqrt(0.105e3) * t1032 ** 2 * (1 + (-18 + 33 * t1034) * t1034)

        if Bindx == 397:
            t1036 = np.cos(phi)
            t1037 = t1036 ** 2
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.10e2) * np.sqrt((1 - t1036)) * ((1 + t1036) ** (0.3e1 / 0.2e1)) * (18 * t1036 + 1 + (-66 * t1036 - 36 + 99 * t1037) * t1037)

        if Bindx == 398:
            t1040 = np.cos(phi)
            t1041 = t1040 ** 2
            t1043 = t1041 ** 2
            t1042 = t1040 * t1041
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (289 * t1041 - 735 * t1043 - 17 + (-372 + 495 * t1042) * t1042 + (330 * t1043 + 74) * t1040)

        if Bindx == 399:
            t1046 = np.cos(phi)
            t1047 = t1046 ** 2
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * ((1 + t1046) ** (0.5e1 / 0.2e1)) * (-2 * t1046 - 3 + (-110 * t1046 + 60 + 55 * t1047) * t1047) * ((1 - t1046) ** (-0.1e1 / 0.2e1))

        if Bindx == 400:
            t1051 = np.cos(phi)
            t1052 = t1051 ** 2
            t1050 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.30e2) * t1050 ** 2 * (-20 * t1051 + 1 + (44 * t1051 - 10 + 33 * t1052) * t1052)

        if Bindx == 401:
            t1055 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * (-1 + 3 * t1055) * ((1 + t1055) ** (0.7e1 / 0.2e1)) * np.sqrt(0.165e3) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t1055) ** (0.3e1 / 0.2e1))

        if Bindx == 402:
            t1057 = np.cos(phi)
            t1060 = 1 + t1057
            t1058 = t1060 ** 2
            t1056 = -1 + t1057
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.55e2) * t1056 ** 2 * t1058 ** 2

        if Bindx == 403:
            t1061 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t1061) ** (0.9e1 / 0.2e1)) * ((1 + t1061) ** (0.3e1 / 0.2e1))

        if Bindx == 404:
            t1062 = np.cos(phi)
            t1065 = -1 + t1062
            t1063 = t1065 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.165e3) * t1063 ** 2 * (1 + t1062) * (1 + 2 * t1062)

        if Bindx == 405:
            t1066 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * ((1 - t1066) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t1066)) * (2 + (11 + 11 * t1066) * t1066)

        if Bindx == 406:
            t1067 = np.cos(phi)
            t1068 = t1067 ** 2
            t1070 = t1068 ** 2
            t1069 = t1067 * t1068
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((3*1j) * (phi1 - phi2)) * (12 * t1068 - 105 * t1070 - 1 + (206 + 110 * t1069) * t1069 + (-165 * t1070 - 57) * t1067)

        if Bindx == 407:
            t1073 = np.cos(phi)
            t1076 = 55 * t1073 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * ((1 - t1073) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t1073)) * (t1076 - 3 + (t1076 + 5) * t1073)

        if Bindx == 408:
            t1078 = np.cos(phi)
            t1079 = t1078 ** 2
            t1077 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.10e2) * t1077 ** 2 * (3 * t1078 + 1 + (-11 * t1078 - 15 + 22 * t1079) * t1079)

        if Bindx == 409:
            t1082 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.105e3) * ((1 - t1082) ** (0.3e1 / 0.2e1)) * ((1 + t1082) ** (0.3e1 / 0.2e1)) * t1082 * (11 * t1082 ** 2 - 3)

        if Bindx == 410:
            t1084 = np.cos(phi)
            t1085 = t1084 ** 2
            t1083 = np.sin(phi)
            tfunc[..., c] = -(0.39e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.10e2) * t1083 ** 2 * (-3 * t1084 + 1 + (11 * t1084 - 15 + 22 * t1085) * t1085)

        if Bindx == 411:
            t1088 = np.cos(phi)
            t1089 = t1088 ** 2
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt((1 - t1088)) * ((1 + t1088) ** (0.5e1 / 0.2e1)) * (-55 * t1089 + 3 + (55 * t1089 + 5) * t1088)

        if Bindx == 412:
            t1091 = np.cos(phi)
            t1092 = t1091 ** 2
            t1094 = t1092 ** 2
            t1093 = t1091 * t1092
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((3*1j) * (phi1 + phi2)) * (12 * t1092 - 105 * t1094 - 1 + (-206 + 110 * t1093) * t1093 + (165 * t1094 + 57) * t1091)

        if Bindx == 413:
            t1097 = np.cos(phi)
            t1098 = t1097 ** 2
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * ((1 + t1097) ** (0.7e1 / 0.2e1)) * (-22 * t1098 - 2 + (11 * t1098 + 13) * t1097) * ((1 - t1097) ** (-0.1e1 / 0.2e1))

        if Bindx == 414:
            t1101 = np.cos(phi)
            t1102 = t1101 ** 2
            t1100 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.165e3) * t1100 ** 2 * (-t1101 - 1 + (5 * t1101 + 3 + 2 * t1102) * t1102)

        if Bindx == 415:
            t1105 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.55e2) * ((1 - t1105) ** (0.3e1 / 0.2e1)) * ((1 + t1105) ** (0.9e1 / 0.2e1))

        if Bindx == 416:
            t1106 = np.cos(phi)
            t1110 = -1 + t1106
            t1107 = t1110 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.66e2) * t1110 * t1107 ** 2 * (1 + t1106)

        if Bindx == 417:
            t1111 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.22e2) * ((1 - t1111) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t1111)) * (2 + 3 * t1111)

        if Bindx == 418:
            t1112 = np.cos(phi)
            t1113 = t1112 ** 2
            t1115 = t1113 ** 2
            t1114 = t1112 * t1113
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((4*1j) * (phi1 - phi2)) * (-65 * t1113 + 35 * t1115 + 13 + (80 + 33 * t1114) * t1114 + (-88 * t1115 - 8) * t1112)

        if Bindx == 419:
            t1118 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * ((1 - t1118) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t1118)) * (2 + (11 + 11 * t1118) * t1118)

        if Bindx == 420:
            t1120 = np.cos(phi)
            t1121 = t1120 ** 2
            t1119 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.30e2) * t1119 ** 2 * (20 * t1120 + 1 + (-44 * t1120 - 10 + 33 * t1121) * t1121)

        if Bindx == 421:
            t1124 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.3e1) * ((1 - t1124) ** (0.5e1 / 0.2e1)) * ((1 + t1124) ** (0.3e1 / 0.2e1)) * (-2 + (11 + 33 * t1124) * t1124)

        if Bindx == 422:
            t1128 = np.sin(phi)
            t1126 = t1128 ** 2
            t1125 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((4*1j) * phi1) * np.sqrt(0.14e2) * t1126 ** 2 * (11 * t1125 ** 2 - 1)

        if Bindx == 423:
            t1129 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.3e1) * ((1 - t1129) ** (0.3e1 / 0.2e1)) * ((1 + t1129) ** (0.5e1 / 0.2e1)) * (-2 + (-11 + 33 * t1129) * t1129)

        if Bindx == 424:
            t1131 = np.cos(phi)
            t1132 = t1131 ** 2
            t1130 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.30e2) * t1130 ** 2 * (-20 * t1131 + 1 + (44 * t1131 - 10 + 33 * t1132) * t1132)

        if Bindx == 425:
            t1135 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t1135)) * ((1 + t1135) ** (0.7e1 / 0.2e1)) * (2 + (-11 + 11 * t1135) * t1135)

        if Bindx == 426:
            t1136 = np.cos(phi)
            t1137 = t1136 ** 2
            t1139 = t1137 ** 2
            t1138 = t1136 * t1137
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((4*1j) * (phi1 + phi2)) * (-65 * t1137 + 35 * t1139 + 13 + (-80 + 33 * t1138) * t1138 + (88 * t1139 + 8) * t1136)

        if Bindx == 427:
            t1142 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.22e2) * ((1 + t1142) ** (0.9e1 / 0.2e1)) * (2 + (-5 + 3 * t1142) * t1142) * ((1 - t1142) ** (-0.1e1 / 0.2e1))

        if Bindx == 428:
            t1143 = np.cos(phi)
            t1147 = 1 + t1143
            t1144 = t1147 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * (-1 + t1143) * t1147 * t1144 ** 2

        if Bindx == 429:
            t1148 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.3e1) * ((1 - t1148) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t1148))

        if Bindx == 430:
            t1149 = np.cos(phi)
            t1150 = t1149 ** 2
            t1152 = t1150 ** 2
            t1151 = t1149 * t1150
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((5*1j) * (phi1 - phi2)) * (-20 * t1150 + 35 * t1152 - 5 + (-10 + 6 * t1151) * t1151 + (-25 * t1152 + 19) * t1149)

        if Bindx == 431:
            t1155 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.22e2) * ((1 - t1155) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t1155)) * (2 + 3 * t1155)

        if Bindx == 432:
            t1157 = np.cos(phi)
            t1158 = t1157 ** 2
            t1156 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.165e3) * t1156 ** 2 * (t1157 - 1 + (-5 * t1157 + 3 + 2 * t1158) * t1158)

        if Bindx == 433:
            t1161 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.165e3) * ((1 - t1161) ** (0.7e1 / 0.2e1)) * ((1 + t1161) ** (0.3e1 / 0.2e1)) * (1 + 3 * t1161)

        if Bindx == 434:
            t1165 = np.sin(phi)
            t1163 = t1165 ** 2
            t1162 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.66e2) * t1163 ** 2 * (-1 + (-5 + 6 * t1162) * t1162)

        if Bindx == 435:
            t1166 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.16e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.77e2) * ((1 - t1166) ** (0.5e1 / 0.2e1)) * ((1 + t1166) ** (0.5e1 / 0.2e1)) * t1166

        if Bindx == 436:
            t1170 = np.sin(phi)
            t1168 = t1170 ** 2
            t1167 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.66e2) * t1168 ** 2 * (-1 + (5 + 6 * t1167) * t1167)

        if Bindx == 437:
            t1171 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.165e3) * ((1 - t1171) ** (0.3e1 / 0.2e1)) * ((1 + t1171) ** (0.7e1 / 0.2e1)) * (-1 + 3 * t1171)

        if Bindx == 438:
            t1173 = np.cos(phi)
            t1174 = t1173 ** 2
            t1172 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.165e3) * t1172 ** 2 * (-t1173 - 1 + (5 * t1173 + 3 + 2 * t1174) * t1174)

        if Bindx == 439:
            t1177 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.22e2) * np.sqrt((1 - t1177)) * ((1 + t1177) ** (0.9e1 / 0.2e1)) * (-2 + 3 * t1177)

        if Bindx == 440:
            t1178 = np.cos(phi)
            t1179 = t1178 ** 2
            t1181 = t1179 ** 2
            t1180 = t1178 * t1179
            tfunc[..., c] = (0.13e2 / 0.32e2) * np.exp((5*1j) * (phi1 + phi2)) * (-20 * t1179 + 35 * t1181 - 5 + (10 + 6 * t1180) * t1180 + (25 * t1181 - 19) * t1178)

        if Bindx == 441:
            t1184 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t1184)) * ((1 + t1184) ** (0.11e2 / 0.2e1))

        if Bindx == 442:
            t1185 = np.cos(phi)
            t1191 = -6 * t1185
            t1186 = t1185 ** 2
            t1187 = t1185 * t1186
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (t1191 + 1 + (-20 + t1187) * t1187 + (15 + (t1191 + 15) * t1186) * t1186)

        if Bindx == 443:
            t1192 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.3e1) * ((1 - t1192) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t1192))

        if Bindx == 444:
            t1193 = np.cos(phi)
            t1197 = -1 + t1193
            t1194 = t1197 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.66e2) * t1197 * t1194 ** 2 * (1 + t1193)

        if Bindx == 445:
            t1198 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.55e2) * ((1 - t1198) ** (0.9e1 / 0.2e1)) * ((1 + t1198) ** (0.3e1 / 0.2e1))

        if Bindx == 446:
            t1200 = np.cos(phi)
            t1203 = -1 + t1200
            t1201 = t1203 ** 2
            t1199 = 1 + t1200
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.55e2) * t1201 ** 2 * t1199 ** 2

        if Bindx == 447:
            t1204 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.22e2) * ((1 - t1204) ** (0.7e1 / 0.2e1)) * ((1 + t1204) ** (0.5e1 / 0.2e1))

        if Bindx == 448:
            t1208 = np.sin(phi)
            t1205 = t1208 ** 2
            t1206 = t1208 * t1205
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((6*1j) * phi1) * np.sqrt(0.231e3) * t1206 ** 2

        if Bindx == 449:
            t1209 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.22e2) * ((1 - t1209) ** (0.5e1 / 0.2e1)) * ((1 + t1209) ** (0.7e1 / 0.2e1))

        if Bindx == 450:
            t1211 = np.cos(phi)
            t1214 = 1 + t1211
            t1212 = t1214 ** 2
            t1210 = -1 + t1211
            tfunc[..., c] = (0.39e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.55e2) * t1210 ** 2 * t1212 ** 2

        if Bindx == 451:
            t1215 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.32e2*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.55e2) * ((1 - t1215) ** (0.3e1 / 0.2e1)) * ((1 + t1215) ** (0.9e1 / 0.2e1))

        if Bindx == 452:
            t1216 = np.cos(phi)
            t1220 = 1 + t1216
            t1217 = t1220 ** 2
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * (-1 + t1216) * t1220 * t1217 ** 2

        if Bindx == 453:
            t1221 = np.cos(phi)
            tfunc[..., c] = (-0.13e2 / 0.32e2*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.3e1) * np.sqrt((1 - t1221)) * ((1 + t1221) ** (0.11e2 / 0.2e1))

        if Bindx == 454:
            t1222 = np.cos(phi)
            t1228 = 6 * t1222
            t1223 = t1222 ** 2
            t1224 = t1222 * t1223
            tfunc[..., c] = (0.13e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (t1228 + 1 + (20 + t1224) * t1224 + (15 + (t1228 + 15) * t1223) * t1223)

        if Bindx == 455:
            t1229 = np.cos(phi)
            t1230 = t1229 ** 2
            t1231 = t1229 * t1230
            t1234 = t1231 ** 2
            t1232 = t1230 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-7*1j) * (phi1 + phi2)) * (21 * t1230 + 35 * t1231 + 35 * t1232 + 7 * t1234 + 1 + (21 * t1232 + t1234 + 7) * t1229)

        if Bindx == 456:
            t1236 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.14e2) * ((1 + t1236) ** (0.13e2 / 0.2e1)) * np.sqrt((1 - t1236))

        if Bindx == 457:
            t1237 = np.cos(phi)
            t1241 = 1 + t1237
            t1238 = t1241 ** 2
            t1239 = t1241 * t1238
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.91e2) * (-1 + t1237) * t1239 ** 2

        if Bindx == 458:
            t1242 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t1242) ** (0.3e1 / 0.2e1)) * ((1 + t1242) ** (0.11e2 / 0.2e1))

        if Bindx == 459:
            t1244 = np.cos(phi)
            t1248 = 1 + t1244
            t1245 = t1248 ** 2
            t1243 = -1 + t1244
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.1001e4) * t1243 ** 2 * t1248 * t1245 ** 2

        if Bindx == 460:
            t1249 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t1249) ** (0.5e1 / 0.2e1)) * ((1 + t1249) ** (0.9e1 / 0.2e1))

        if Bindx == 461:
            t1253 = np.sin(phi)
            t1250 = t1253 ** 2
            t1251 = t1253 * t1250
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.3003e4) * t1251 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 462:
            t1254 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-7*1j) * phi1) * np.sqrt(0.858e3) * ((1 - t1254) ** (0.7e1 / 0.2e1)) * ((1 + t1254) ** (0.7e1 / 0.2e1))

        if Bindx == 463:
            t1258 = np.sin(phi)
            t1255 = t1258 ** 2
            t1256 = t1258 * t1255
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.3003e4) * t1256 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 464:
            t1259 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t1259) ** (0.9e1 / 0.2e1)) * ((1 + t1259) ** (0.5e1 / 0.2e1))

        if Bindx == 465:
            t1261 = np.cos(phi)
            t1265 = -1 + t1261
            t1262 = t1265 ** 2
            t1260 = 1 + t1261
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.1001e4) * t1265 * t1262 ** 2 * t1260 ** 2

        if Bindx == 466:
            t1266 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t1266) ** (0.11e2 / 0.2e1)) * ((1 + t1266) ** (0.3e1 / 0.2e1))

        if Bindx == 467:
            t1267 = np.cos(phi)
            t1271 = -1 + t1267
            t1268 = t1271 ** 2
            t1269 = t1271 * t1268
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.91e2) * t1269 ** 2 * (1 + t1267)

        if Bindx == 468:
            t1272 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.14e2) * ((1 - t1272) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t1272))

        if Bindx == 469:
            t1273 = np.cos(phi)
            t1274 = t1273 ** 2
            t1275 = t1273 * t1274
            t1278 = t1275 ** 2
            t1276 = t1274 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-7*1j) * (phi1 - phi2)) * (-21 * t1274 + 35 * t1275 - 35 * t1276 - 7 * t1278 - 1 + (21 * t1276 + t1278 + 7) * t1273)

        if Bindx == 470:
            t1280 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t1280)) * ((1 + t1280) ** (0.13e2 / 0.2e1))

        if Bindx == 471:
            t1281 = np.cos(phi)
            t1282 = t1281 ** 2
            t1283 = t1281 * t1282
            t1286 = t1283 ** 2
            t1284 = t1282 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (-48 * t1282 - 15 * t1283 + 50 * t1284 + 36 * t1286 - 6 + (69 * t1284 + 7 * t1286 - 29) * t1281)

        if Bindx == 472:
            t1288 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.26e2) * ((1 + t1288) ** (0.11e2 / 0.2e1)) * (5 + (-12 + 7 * t1288) * t1288) * ((1 - t1288) ** (-0.1e1 / 0.2e1))

        if Bindx == 473:
            t1290 = np.cos(phi)
            t1291 = t1290 ** 2
            t1293 = t1291 ** 2
            t1289 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.26e2) * t1289 ** 2 * (4 * t1291 + 24 * t1293 - 4 + (26 * t1291 + 7 * t1293 - 9) * t1290)

        if Bindx == 474:
            t1295 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-3 + 7 * t1295) * ((1 + t1295) ** (0.9e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t1295) ** (0.3e1 / 0.2e1))

        if Bindx == 475:
            t1301 = np.sin(phi)
            t1299 = t1301 ** 2
            t1296 = np.cos(phi)
            t1297 = t1296 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.143e3) * t1299 ** 2 * (12 * t1297 - 2 + (7 * t1297 + 3) * t1296)

        if Bindx == 476:
            t1302 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-1 + 7 * t1302) * ((1 + t1302) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t1302) ** (0.5e1 / 0.2e1))

        if Bindx == 477:
            t1306 = np.sin(phi)
            t1303 = t1306 ** 2
            t1304 = t1306 * t1303
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.3003e4) * t1304 ** 2 * np.cos(phi)

        if Bindx == 478:
            t1307 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + 7 * t1307) * ((1 + t1307) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t1307) ** (0.7e1 / 0.2e1))

        if Bindx == 479:
            t1313 = np.sin(phi)
            t1311 = t1313 ** 2
            t1308 = np.cos(phi)
            t1309 = t1308 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.143e3) * t1311 ** 2 * (-12 * t1309 + 2 + (7 * t1309 + 3) * t1308)

        if Bindx == 480:
            t1314 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (3 + 7 * t1314) * ((1 + t1314) ** (0.3e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t1314) ** (0.9e1 / 0.2e1))

        if Bindx == 481:
            t1316 = np.cos(phi)
            t1317 = t1316 ** 2
            t1319 = t1317 ** 2
            t1315 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.26e2) * t1315 ** 2 * (-4 * t1317 - 24 * t1319 + 4 + (26 * t1317 + 7 * t1319 - 9) * t1316)

        if Bindx == 482:
            t1321 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (5 + 7 * t1321) * np.sqrt((1 + t1321)) * np.sqrt(0.26e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t1321) ** (0.11e2 / 0.2e1))

        if Bindx == 483:
            t1322 = np.cos(phi)
            t1323 = t1322 ** 2
            t1324 = t1322 * t1323
            t1327 = t1324 ** 2
            t1325 = t1323 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (48 * t1323 - 15 * t1324 - 50 * t1325 - 36 * t1327 + 6 + (69 * t1325 + 7 * t1327 - 29) * t1322)

        if Bindx == 484:
            t1329 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t1329) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t1329))

        if Bindx == 485:
            t1330 = np.cos(phi)
            t1334 = 1 + t1330
            t1331 = t1334 ** 2
            t1332 = t1334 * t1331
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * (-1 + t1330) * t1332 ** 2

        if Bindx == 486:
            t1335 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t1335)) * ((1 + t1335) ** (0.11e2 / 0.2e1)) * (-5 + 7 * t1335)

        if Bindx == 487:
            t1336 = np.cos(phi)
            t1337 = t1336 ** 2
            t1338 = t1336 * t1337
            t1341 = t1338 ** 2
            t1339 = t1337 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-5*1j) * (phi1 + phi2)) * (-129 * t1337 - 415 * t1338 - 175 * t1339 + 325 * t1341 + 43 + (303 * t1339 + 91 * t1341 + 85) * t1336)

        if Bindx == 488:
            t1343 = np.cos(phi)
            t1344 = t1343 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * ((1 + t1343) ** (0.9e1 / 0.2e1)) * (-195 * t1344 - 25 + (91 * t1344 + 129) * t1343) * ((1 - t1343) ** (-0.1e1 / 0.2e1))

        if Bindx == 489:
            t1347 = np.cos(phi)
            t1348 = t1347 ** 2
            t1350 = t1348 ** 2
            t1346 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * t1346 ** 2 * (-110 * t1348 + 195 * t1350 + 11 + (50 * t1348 + 91 * t1350 - 45) * t1347)

        if Bindx == 490:
            t1352 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (-52 + 91 * t1352) * t1352) * ((1 + t1352) ** (0.7e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t1352) ** (0.3e1 / 0.2e1))

        if Bindx == 491:
            t1358 = np.sin(phi)
            t1356 = t1358 ** 2
            t1353 = np.cos(phi)
            t1354 = t1353 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.33e2) * t1356 ** 2 * (65 * t1354 - 5 + (91 * t1354 - 31) * t1353)

        if Bindx == 492:
            t1359 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (13 * t1359 ** 2 - 1) * ((1 + t1359) ** (0.5e1 / 0.2e1)) * np.sqrt(0.462e3) * np.exp((-5*1j) * phi1) * ((1 - t1359) ** (0.5e1 / 0.2e1))

        if Bindx == 493:
            t1365 = np.sin(phi)
            t1363 = t1365 ** 2
            t1360 = np.cos(phi)
            t1361 = t1360 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.33e2) * t1363 ** 2 * (-65 * t1361 + 5 + (91 * t1361 - 31) * t1360)

        if Bindx == 494:
            t1366 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (52 + 91 * t1366) * t1366) * ((1 + t1366) ** (0.3e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t1366) ** (0.7e1 / 0.2e1))

        if Bindx == 495:
            t1368 = np.cos(phi)
            t1369 = t1368 ** 2
            t1371 = t1369 ** 2
            t1367 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * t1367 ** 2 * (110 * t1369 - 195 * t1371 - 11 + (50 * t1369 + 91 * t1371 - 45) * t1368)

        if Bindx == 496:
            t1373 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (25 + (104 + 91 * t1373) * t1373) * np.sqrt((1 + t1373)) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t1373) ** (0.9e1 / 0.2e1))

        if Bindx == 497:
            t1374 = np.cos(phi)
            t1375 = t1374 ** 2
            t1376 = t1374 * t1375
            t1379 = t1376 ** 2
            t1377 = t1375 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-5*1j) * (phi1 - phi2)) * (129 * t1375 - 415 * t1376 + 175 * t1377 - 325 * t1379 - 43 + (303 * t1377 + 91 * t1379 + 85) * t1374)

        if Bindx == 498:
            t1381 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (5 + 7 * t1381) * np.sqrt((1 + t1381)) * np.sqrt(0.26e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t1381) ** (0.11e2 / 0.2e1))

        if Bindx == 499:
            t1382 = np.cos(phi)
            t1386 = -1 + t1382
            t1383 = t1386 ** 2
            t1384 = t1386 * t1383
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * t1384 ** 2 * (1 + t1382)

        if Bindx == 500:
            t1387 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t1387) ** (0.3e1 / 0.2e1)) * ((1 + t1387) ** (0.11e2 / 0.2e1))

        if Bindx == 501:
            t1388 = np.cos(phi)
            t1392 = 1 + t1388
            t1389 = t1392 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.26e2) * (-1 + t1388) * t1392 * t1389 ** 2 * (-4 + 7 * t1388)

        if Bindx == 502:
            t1393 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt((1 - t1393)) * ((1 + t1393) ** (0.9e1 / 0.2e1)) * (25 + (-104 + 91 * t1393) * t1393)

        if Bindx == 503:
            t1394 = np.cos(phi)
            t1395 = t1394 ** 2
            t1396 = t1394 * t1395
            t1399 = t1396 ** 2
            t1397 = t1395 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * (phi1 + phi2)) * (96 * t1395 - 115 * t1396 - 280 * t1397 + 208 * t1399 - 8 + (-3 * t1397 + 91 * t1399 + 43) * t1394)

        if Bindx == 504:
            t1401 = np.cos(phi)
            t1402 = t1401 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * ((1 + t1401) ** (0.7e1 / 0.2e1)) * (-32 * t1401 - 1 + (-208 * t1401 + 150 + 91 * t1402) * t1402) * ((1 - t1401) ** (-0.1e1 / 0.2e1))

        if Bindx == 505:
            t1406 = np.cos(phi)
            t1407 = t1406 ** 2
            t1409 = t1407 ** 2
            t1405 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.22e2) * t1405 ** 2 * (-68 * t1407 + 104 * t1409 + 4 + (-62 * t1407 + 91 * t1409 + 11) * t1406)

        if Bindx == 506:
            t1411 = np.cos(phi)
            t1412 = t1411 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (-39 * t1412 + 3 + (91 * t1412 - 15) * t1411) * ((1 + t1411) ** (0.5e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t1411) ** (0.3e1 / 0.2e1))

        if Bindx == 507:
            t1417 = np.sin(phi)
            t1415 = t1417 ** 2
            t1414 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.462e3) * t1415 ** 2 * t1414 * (13 * t1414 ** 2 - 3)

        if Bindx == 508:
            t1418 = np.cos(phi)
            t1419 = t1418 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (39 * t1419 - 3 + (91 * t1419 - 15) * t1418) * ((1 + t1418) ** (0.3e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t1418) ** (0.5e1 / 0.2e1))

        if Bindx == 509:
            t1422 = np.cos(phi)
            t1423 = t1422 ** 2
            t1425 = t1423 ** 2
            t1421 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.22e2) * t1421 ** 2 * (68 * t1423 - 104 * t1425 - 4 + (-62 * t1423 + 91 * t1425 + 11) * t1422)

        if Bindx == 510:
            t1427 = np.cos(phi)
            t1428 = t1427 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (117 * t1428 - 1 + (91 * t1428 + 33) * t1427) * np.sqrt((1 + t1427)) * np.sqrt(0.11e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t1427) ** (0.7e1 / 0.2e1))

        if Bindx == 511:
            t1430 = np.cos(phi)
            t1431 = t1430 ** 2
            t1432 = t1430 * t1431
            t1435 = t1432 ** 2
            t1433 = t1431 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * (phi1 - phi2)) * (-96 * t1431 - 115 * t1432 + 280 * t1433 - 208 * t1435 + 8 + (-3 * t1433 + 91 * t1435 + 43) * t1430)

        if Bindx == 512:
            t1437 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (25 + (104 + 91 * t1437) * t1437) * np.sqrt((1 + t1437)) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t1437) ** (0.9e1 / 0.2e1))

        if Bindx == 513:
            t1439 = np.cos(phi)
            t1440 = t1439 ** 2
            t1442 = t1440 ** 2
            t1438 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.26e2) * t1438 ** 2 * (-4 * t1440 - 24 * t1442 + 4 + (26 * t1440 + 7 * t1442 - 9) * t1439)

        if Bindx == 514:
            t1444 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t1444) ** (0.11e2 / 0.2e1)) * ((1 + t1444) ** (0.3e1 / 0.2e1))

        if Bindx == 515:
            t1446 = np.cos(phi)
            t1450 = 1 + t1446
            t1447 = t1450 ** 2
            t1445 = -1 + t1446
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.1001e4) * t1445 ** 2 * t1450 * t1447 ** 2

        if Bindx == 516:
            t1451 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.286e3) * ((1 - t1451) ** (0.3e1 / 0.2e1)) * ((1 + t1451) ** (0.9e1 / 0.2e1)) * (-3 + 7 * t1451)

        if Bindx == 517:
            t1453 = np.cos(phi)
            t1454 = t1453 ** 2
            t1456 = t1454 ** 2
            t1452 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.11e2) * t1452 ** 2 * (-110 * t1454 + 195 * t1456 + 11 + (50 * t1454 + 91 * t1456 - 45) * t1453)

        if Bindx == 518:
            t1458 = np.cos(phi)
            t1459 = t1458 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.11e2) * np.sqrt((1 - t1458)) * ((1 + t1458) ** (0.7e1 / 0.2e1)) * (-117 * t1459 + 1 + (91 * t1459 + 33) * t1458)

        if Bindx == 519:
            t1461 = np.cos(phi)
            t1462 = t1461 ** 2
            t1463 = t1461 * t1462
            t1466 = t1463 ** 2
            t1464 = t1462 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-3*1j) * (phi1 + phi2)) * (741 * t1462 + 555 * t1463 - 1925 * t1464 + 1287 * t1466 - 39 + (-1419 * t1464 + 1001 * t1466 - 73) * t1461)

        if Bindx == 520:
            t1468 = np.cos(phi)
            t1469 = t1468 ** 2
            t1471 = t1469 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2e1) * ((1 + t1468) ** (0.5e1 / 0.2e1)) * (110 * t1469 - 2145 * t1471 + 19 + (1210 * t1469 + 1001 * t1471 - 195) * t1468) * ((1 - t1468) ** (-0.1e1 / 0.2e1))

        if Bindx == 521:
            t1474 = np.cos(phi)
            t1475 = t1474 ** 2
            t1477 = t1475 ** 2
            t1473 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.3e1) * t1473 ** 2 * (-198 * t1475 + 429 * t1477 + 9 + (-902 * t1475 + 1001 * t1477 + 141) * t1474)

        if Bindx == 522:
            t1479 = np.cos(phi)
            t1480 = t1479 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (3 + (-66 + 143 * t1480) * t1480) * ((1 + t1479) ** (0.3e1 / 0.2e1)) * np.sqrt(0.42e2) * np.exp((-3*1j) * phi1) * ((1 - t1479) ** (0.3e1 / 0.2e1))

        if Bindx == 523:
            t1483 = np.cos(phi)
            t1484 = t1483 ** 2
            t1486 = t1484 ** 2
            t1482 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.3e1) * t1482 ** 2 * (198 * t1484 - 429 * t1486 - 9 + (-902 * t1484 + 1001 * t1486 + 141) * t1483)

        if Bindx == 524:
            t1488 = np.cos(phi)
            t1489 = t1488 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-176 * t1488 - 19 + (1144 * t1488 + 66 + 1001 * t1489) * t1489) * np.sqrt((1 + t1488)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t1488) ** (0.5e1 / 0.2e1))

        if Bindx == 525:
            t1492 = np.cos(phi)
            t1493 = t1492 ** 2
            t1494 = t1492 * t1493
            t1497 = t1494 ** 2
            t1495 = t1493 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-3*1j) * (phi1 - phi2)) * (-741 * t1493 + 555 * t1494 + 1925 * t1495 - 1287 * t1497 + 39 + (-1419 * t1495 + 1001 * t1497 - 73) * t1492)

        if Bindx == 526:
            t1499 = np.cos(phi)
            t1500 = t1499 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (117 * t1500 - 1 + (91 * t1500 + 33) * t1499) * np.sqrt((1 + t1499)) * np.sqrt(0.11e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t1499) ** (0.7e1 / 0.2e1))

        if Bindx == 527:
            t1503 = np.cos(phi)
            t1504 = t1503 ** 2
            t1506 = t1504 ** 2
            t1502 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.11e2) * t1502 ** 2 * (110 * t1504 - 195 * t1506 - 11 + (50 * t1504 + 91 * t1506 - 45) * t1503)

        if Bindx == 528:
            t1508 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (3 + 7 * t1508) * ((1 + t1508) ** (0.3e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t1508) ** (0.9e1 / 0.2e1))

        if Bindx == 529:
            t1510 = np.cos(phi)
            t1514 = -1 + t1510
            t1511 = t1514 ** 2
            t1509 = 1 + t1510
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.1001e4) * t1514 * t1511 ** 2 * t1509 ** 2

        if Bindx == 530:
            t1515 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t1515) ** (0.5e1 / 0.2e1)) * ((1 + t1515) ** (0.9e1 / 0.2e1))

        if Bindx == 531:
            t1521 = np.sin(phi)
            t1519 = t1521 ** 2
            t1516 = np.cos(phi)
            t1517 = t1516 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.143e3) * t1519 ** 2 * (12 * t1517 - 2 + (7 * t1517 + 3) * t1516)

        if Bindx == 532:
            t1522 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.22e2) * ((1 - t1522) ** (0.3e1 / 0.2e1)) * ((1 + t1522) ** (0.7e1 / 0.2e1)) * (1 + (-52 + 91 * t1522) * t1522)

        if Bindx == 533:
            t1524 = np.cos(phi)
            t1525 = t1524 ** 2
            t1527 = t1525 ** 2
            t1523 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.22e2) * t1523 ** 2 * (-68 * t1525 + 104 * t1527 + 4 + (-62 * t1525 + 91 * t1527 + 11) * t1524)

        if Bindx == 534:
            t1529 = np.cos(phi)
            t1530 = t1529 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t1529)) * ((1 + t1529) ** (0.5e1 / 0.2e1)) * (176 * t1529 - 19 + (-1144 * t1529 + 66 + 1001 * t1530) * t1530)

        if Bindx == 535:
            t1533 = np.cos(phi)
            t1534 = t1533 ** 2
            t1535 = t1533 * t1534
            t1538 = t1535 ** 2
            t1536 = t1534 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (240 * t1534 + 895 * t1535 - 770 * t1536 + 572 * t1538 - 10 + (-1749 * t1536 + 1001 * t1538 - 115) * t1533)

        if Bindx == 536:
            t1540 = np.cos(phi)
            t1541 = t1540 ** 2
            t1543 = t1541 ** 2
            t1542 = t1540 * t1541
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.6e1) * ((1 + t1540) ** (0.3e1 / 0.2e1)) * (-285 * t1541 + 165 * t1543 + 15 + (880 + 1001 * t1542) * t1542 + (-1716 * t1543 - 60) * t1540) * ((1 - t1540) ** (-0.1e1 / 0.2e1))

        if Bindx == 537:
            t1547 = np.cos(phi)
            t1548 = t1547 ** 2
            t1546 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.21e2) * t1546 ** 2 * t1547 * (15 + (-110 + 143 * t1548) * t1548)

        if Bindx == 538:
            t1550 = np.cos(phi)
            t1551 = t1550 ** 2
            t1553 = t1551 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-330 * t1551 + 715 * t1553 + 15 + (-550 * t1551 + 1001 * t1553 + 45) * t1550) * np.sqrt((1 + t1550)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t1550) ** (0.3e1 / 0.2e1))

        if Bindx == 539:
            t1555 = np.cos(phi)
            t1556 = t1555 ** 2
            t1557 = t1555 * t1556
            t1560 = t1557 ** 2
            t1558 = t1556 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (-240 * t1556 + 895 * t1557 + 770 * t1558 - 572 * t1560 + 10 + (-1749 * t1558 + 1001 * t1560 - 115) * t1555)

        if Bindx == 540:
            t1562 = np.cos(phi)
            t1563 = t1562 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-176 * t1562 - 19 + (1144 * t1562 + 66 + 1001 * t1563) * t1563) * np.sqrt((1 + t1562)) * np.sqrt(0.2e1) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t1562) ** (0.5e1 / 0.2e1))

        if Bindx == 541:
            t1567 = np.cos(phi)
            t1568 = t1567 ** 2
            t1570 = t1568 ** 2
            t1566 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.22e2) * t1566 ** 2 * (68 * t1568 - 104 * t1570 - 4 + (-62 * t1568 + 91 * t1570 + 11) * t1567)

        if Bindx == 542:
            t1572 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (52 + 91 * t1572) * t1572) * ((1 + t1572) ** (0.3e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t1572) ** (0.7e1 / 0.2e1))

        if Bindx == 543:
            t1578 = np.sin(phi)
            t1576 = t1578 ** 2
            t1573 = np.cos(phi)
            t1574 = t1573 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.143e3) * t1576 ** 2 * (-12 * t1574 + 2 + (7 * t1574 + 3) * t1573)

        if Bindx == 544:
            t1579 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t1579) ** (0.9e1 / 0.2e1)) * ((1 + t1579) ** (0.5e1 / 0.2e1))

        if Bindx == 545:
            t1583 = np.sin(phi)
            t1580 = t1583 ** 2
            t1581 = t1583 * t1580
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.3003e4) * t1581 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 546:
            t1584 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t1584) ** (0.5e1 / 0.2e1)) * ((1 + t1584) ** (0.7e1 / 0.2e1)) * (-1 + 7 * t1584)

        if Bindx == 547:
            t1590 = np.sin(phi)
            t1588 = t1590 ** 2
            t1585 = np.cos(phi)
            t1586 = t1585 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.33e2) * t1588 ** 2 * (65 * t1586 - 5 + (91 * t1586 - 31) * t1585)

        if Bindx == 548:
            t1591 = np.cos(phi)
            t1592 = t1591 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.33e2) * ((1 - t1591) ** (0.3e1 / 0.2e1)) * ((1 + t1591) ** (0.5e1 / 0.2e1)) * (-39 * t1592 + 3 + (91 * t1592 - 15) * t1591)

        if Bindx == 549:
            t1595 = np.cos(phi)
            t1596 = t1595 ** 2
            t1598 = t1596 ** 2
            t1594 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.3e1) * t1594 ** 2 * (-198 * t1596 + 429 * t1598 + 9 + (-902 * t1596 + 1001 * t1598 + 141) * t1595)

        if Bindx == 550:
            t1600 = np.cos(phi)
            t1601 = t1600 ** 2
            t1603 = t1601 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t1600)) * ((1 + t1600) ** (0.3e1 / 0.2e1)) * (330 * t1601 - 715 * t1603 - 15 + (-550 * t1601 + 1001 * t1603 + 45) * t1600)

        if Bindx == 551:
            t1605 = np.cos(phi)
            t1606 = t1605 ** 2
            t1607 = t1605 * t1606
            t1610 = t1607 ** 2
            t1608 = t1606 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + phi2)) * (135 * t1606 + 2385 * t1607 - 495 * t1608 + 429 * t1610 - 5 + (-5049 * t1608 + 3003 * t1610 - 275) * t1605)

        if Bindx == 552:
            t1612 = np.cos(phi)
            t1613 = t1612 ** 2
            t1614 = t1612 * t1613
            t1619 = -495 * t1613 ** 2 + 429 * t1614 ** 2 - 5
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.14e2) * np.sqrt((1 + t1612)) * (t1619 * t1612 - 135 * t1613 + 135 * t1614 - t1619) * ((1 - t1612) ** (-0.1e1 / 0.2e1))

        if Bindx == 553:
            t1620 = np.cos(phi)
            t1621 = t1620 ** 2
            t1622 = t1620 * t1621
            t1625 = t1622 ** 2
            t1623 = t1621 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - phi2)) * (-135 * t1621 + 2385 * t1622 + 495 * t1623 - 429 * t1625 + 5 + (-5049 * t1623 + 3003 * t1625 - 275) * t1620)

        if Bindx == 554:
            t1627 = np.cos(phi)
            t1628 = t1627 ** 2
            t1630 = t1628 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-330 * t1628 + 715 * t1630 + 15 + (-550 * t1628 + 1001 * t1630 + 45) * t1627) * np.sqrt((1 + t1627)) * np.sqrt(0.6e1) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t1627) ** (0.3e1 / 0.2e1))

        if Bindx == 555:
            t1633 = np.cos(phi)
            t1634 = t1633 ** 2
            t1636 = t1634 ** 2
            t1632 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.3e1) * t1632 ** 2 * (198 * t1634 - 429 * t1636 - 9 + (-902 * t1634 + 1001 * t1636 + 141) * t1633)

        if Bindx == 556:
            t1638 = np.cos(phi)
            t1639 = t1638 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (39 * t1639 - 3 + (91 * t1639 - 15) * t1638) * ((1 + t1638) ** (0.3e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t1638) ** (0.5e1 / 0.2e1))

        if Bindx == 557:
            t1646 = np.sin(phi)
            t1644 = t1646 ** 2
            t1641 = np.cos(phi)
            t1642 = t1641 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.33e2) * t1644 ** 2 * (-65 * t1642 + 5 + (91 * t1642 - 31) * t1641)

        if Bindx == 558:
            t1647 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + 7 * t1647) * ((1 + t1647) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t1647) ** (0.7e1 / 0.2e1))

        if Bindx == 559:
            t1651 = np.sin(phi)
            t1648 = t1651 ** 2
            t1649 = t1651 * t1648
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.3003e4) * t1649 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 560:
            t1652 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.858e3) * ((1 - t1652) ** (0.7e1 / 0.2e1)) * ((1 + t1652) ** (0.7e1 / 0.2e1))

        if Bindx == 561:
            t1656 = np.sin(phi)
            t1653 = t1656 ** 2
            t1654 = t1656 * t1653
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.3003e4) * t1654 ** 2 * np.cos(phi)

        if Bindx == 562:
            t1657 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.462e3) * ((1 - t1657) ** (0.5e1 / 0.2e1)) * ((1 + t1657) ** (0.5e1 / 0.2e1)) * (13 * t1657 ** 2 - 1)

        if Bindx == 563:
            t1661 = np.sin(phi)
            t1659 = t1661 ** 2
            t1658 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((-4*1j) * phi2) * np.sqrt(0.462e3) * t1659 ** 2 * t1658 * (13 * t1658 ** 2 - 3)

        if Bindx == 564:
            t1662 = np.cos(phi)
            t1663 = t1662 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.42e2) * ((1 - t1662) ** (0.3e1 / 0.2e1)) * ((1 + t1662) ** (0.3e1 / 0.2e1)) * (3 + (-66 + 143 * t1663) * t1663)

        if Bindx == 565:
            t1666 = np.cos(phi)
            t1667 = t1666 ** 2
            t1665 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.21e2) * t1665 ** 2 * t1666 * (15 + (-110 + 143 * t1667) * t1667)

        if Bindx == 566:
            t1669 = np.cos(phi)
            t1670 = t1669 ** 2
            t1671 = t1670 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.14e2) * np.sqrt((1 - t1669)) * np.sqrt((1 + t1669)) * (-495 * t1671 - 5 + (429 * t1671 + 135) * t1670)

        if Bindx == 567:
            t1673 = np.cos(phi)
            t1674 = t1673 ** 2
            t1675 = t1674 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * t1673 * (-693 * t1675 - 35 + (429 * t1675 + 315) * t1674)

        if Bindx == 568:
            t1677 = np.cos(phi)
            t1678 = t1677 ** 2
            t1679 = t1677 * t1678
            t1684 = -495 * t1678 ** 2 + 429 * t1679 ** 2 - 5
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.14e2) * np.sqrt((1 + t1677)) * (t1684 * t1677 - 135 * t1678 + 135 * t1679 - t1684) * ((1 - t1677) ** (-0.1e1 / 0.2e1))

        if Bindx == 569:
            t1686 = np.cos(phi)
            t1687 = t1686 ** 2
            t1685 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((2*1j) * phi2) * np.sqrt(0.21e2) * t1685 ** 2 * t1686 * (15 + (-110 + 143 * t1687) * t1687)

        if Bindx == 570:
            t1689 = np.cos(phi)
            t1690 = t1689 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (3 + (-66 + 143 * t1690) * t1690) * ((1 + t1689) ** (0.3e1 / 0.2e1)) * np.sqrt(0.42e2) * np.exp((3*1j) * phi2) * ((1 - t1689) ** (0.3e1 / 0.2e1))

        if Bindx == 571:
            t1695 = np.sin(phi)
            t1693 = t1695 ** 2
            t1692 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * phi2) * np.sqrt(0.462e3) * t1693 ** 2 * t1692 * (13 * t1692 ** 2 - 3)

        if Bindx == 572:
            t1696 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * (13 * t1696 ** 2 - 1) * ((1 + t1696) ** (0.5e1 / 0.2e1)) * np.sqrt(0.462e3) * np.exp((5*1j) * phi2) * ((1 - t1696) ** (0.5e1 / 0.2e1))

        if Bindx == 573:
            t1700 = np.sin(phi)
            t1697 = t1700 ** 2
            t1698 = t1700 * t1697
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((6*1j) * phi2) * np.sqrt(0.3003e4) * t1698 ** 2 * np.cos(phi)

        if Bindx == 574:
            t1701 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((7*1j) * phi2) * np.sqrt(0.858e3) * ((1 - t1701) ** (0.7e1 / 0.2e1)) * ((1 + t1701) ** (0.7e1 / 0.2e1))

        if Bindx == 575:
            t1705 = np.sin(phi)
            t1702 = t1705 ** 2
            t1703 = t1705 * t1702
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.3003e4) * t1703 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 576:
            t1706 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t1706) ** (0.7e1 / 0.2e1)) * ((1 + t1706) ** (0.5e1 / 0.2e1)) * (1 + 7 * t1706)

        if Bindx == 577:
            t1712 = np.sin(phi)
            t1710 = t1712 ** 2
            t1707 = np.cos(phi)
            t1708 = t1707 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.33e2) * t1710 ** 2 * (-65 * t1708 + 5 + (91 * t1708 - 31) * t1707)

        if Bindx == 578:
            t1713 = np.cos(phi)
            t1714 = t1713 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.33e2) * ((1 - t1713) ** (0.5e1 / 0.2e1)) * ((1 + t1713) ** (0.3e1 / 0.2e1)) * (39 * t1714 - 3 + (91 * t1714 - 15) * t1713)

        if Bindx == 579:
            t1717 = np.cos(phi)
            t1718 = t1717 ** 2
            t1720 = t1718 ** 2
            t1716 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.3e1) * t1716 ** 2 * (198 * t1718 - 429 * t1720 - 9 + (-902 * t1718 + 1001 * t1720 + 141) * t1717)

        if Bindx == 580:
            t1722 = np.cos(phi)
            t1723 = t1722 ** 2
            t1725 = t1723 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.6e1) * ((1 - t1722) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t1722)) * (-330 * t1723 + 715 * t1725 + 15 + (-550 * t1723 + 1001 * t1725 + 45) * t1722)

        if Bindx == 581:
            t1727 = np.cos(phi)
            t1728 = t1727 ** 2
            t1729 = t1727 * t1728
            t1732 = t1729 ** 2
            t1730 = t1728 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 - phi2)) * (-135 * t1728 + 2385 * t1729 + 495 * t1730 - 429 * t1732 + 5 + (-5049 * t1730 + 3003 * t1732 - 275) * t1727)

        if Bindx == 582:
            t1734 = np.cos(phi)
            t1735 = t1734 ** 2
            t1736 = t1735 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.14e2) * np.sqrt((1 - t1734)) * np.sqrt((1 + t1734)) * (-495 * t1736 - 5 + (429 * t1736 + 135) * t1735)

        if Bindx == 583:
            t1738 = np.cos(phi)
            t1739 = t1738 ** 2
            t1740 = t1738 * t1739
            t1743 = t1740 ** 2
            t1741 = t1739 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + phi2)) * (135 * t1739 + 2385 * t1740 - 495 * t1741 + 429 * t1743 - 5 + (-5049 * t1741 + 3003 * t1743 - 275) * t1738)

        if Bindx == 584:
            t1745 = np.cos(phi)
            t1746 = t1745 ** 2
            t1748 = t1746 ** 2
            t1747 = t1745 * t1746
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.6e1) * ((1 + t1745) ** (0.3e1 / 0.2e1)) * (-285 * t1746 + 165 * t1748 + 15 + (880 + 1001 * t1747) * t1747 + (-1716 * t1748 - 60) * t1745) * ((1 - t1745) ** (-0.1e1 / 0.2e1))

        if Bindx == 585:
            t1752 = np.cos(phi)
            t1753 = t1752 ** 2
            t1755 = t1753 ** 2
            t1751 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.3e1) * t1751 ** 2 * (-198 * t1753 + 429 * t1755 + 9 + (-902 * t1753 + 1001 * t1755 + 141) * t1752)

        if Bindx == 586:
            t1757 = np.cos(phi)
            t1758 = t1757 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * (-39 * t1758 + 3 + (91 * t1758 - 15) * t1757) * ((1 + t1757) ** (0.5e1 / 0.2e1)) * np.sqrt(0.33e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t1757) ** (0.3e1 / 0.2e1))

        if Bindx == 587:
            t1765 = np.sin(phi)
            t1763 = t1765 ** 2
            t1760 = np.cos(phi)
            t1761 = t1760 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.33e2) * t1763 ** 2 * (65 * t1761 - 5 + (91 * t1761 - 31) * t1760)

        if Bindx == 588:
            t1766 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * (-1 + 7 * t1766) * ((1 + t1766) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t1766) ** (0.5e1 / 0.2e1))

        if Bindx == 589:
            t1770 = np.sin(phi)
            t1767 = t1770 ** 2
            t1768 = t1770 * t1767
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.3003e4) * t1768 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 590:
            t1771 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t1771) ** (0.9e1 / 0.2e1)) * ((1 + t1771) ** (0.5e1 / 0.2e1))

        if Bindx == 591:
            t1777 = np.sin(phi)
            t1775 = t1777 ** 2
            t1772 = np.cos(phi)
            t1773 = t1772 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.143e3) * t1775 ** 2 * (-12 * t1773 + 2 + (7 * t1773 + 3) * t1772)

        if Bindx == 592:
            t1778 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.22e2) * ((1 - t1778) ** (0.7e1 / 0.2e1)) * ((1 + t1778) ** (0.3e1 / 0.2e1)) * (1 + (52 + 91 * t1778) * t1778)

        if Bindx == 593:
            t1780 = np.cos(phi)
            t1781 = t1780 ** 2
            t1783 = t1781 ** 2
            t1779 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.22e2) * t1779 ** 2 * (68 * t1781 - 104 * t1783 - 4 + (-62 * t1781 + 91 * t1783 + 11) * t1780)

        if Bindx == 594:
            t1785 = np.cos(phi)
            t1786 = t1785 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.2e1) * ((1 - t1785) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t1785)) * (-176 * t1785 - 19 + (1144 * t1785 + 66 + 1001 * t1786) * t1786)

        if Bindx == 595:
            t1789 = np.cos(phi)
            t1790 = t1789 ** 2
            t1791 = t1789 * t1790
            t1794 = t1791 ** 2
            t1792 = t1790 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (-240 * t1790 + 895 * t1791 + 770 * t1792 - 572 * t1794 + 10 + (-1749 * t1792 + 1001 * t1794 - 115) * t1789)

        if Bindx == 596:
            t1796 = np.cos(phi)
            t1797 = t1796 ** 2
            t1799 = t1797 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.6e1) * ((1 - t1796) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t1796)) * (-330 * t1797 + 715 * t1799 + 15 + (-550 * t1797 + 1001 * t1799 + 45) * t1796)

        if Bindx == 597:
            t1802 = np.cos(phi)
            t1803 = t1802 ** 2
            t1801 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((2*1j) * phi1) * np.sqrt(0.21e2) * t1801 ** 2 * t1802 * (15 + (-110 + 143 * t1803) * t1803)

        if Bindx == 598:
            t1805 = np.cos(phi)
            t1806 = t1805 ** 2
            t1808 = t1806 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.6e1) * np.sqrt((1 - t1805)) * ((1 + t1805) ** (0.3e1 / 0.2e1)) * (330 * t1806 - 715 * t1808 - 15 + (-550 * t1806 + 1001 * t1808 + 45) * t1805)

        if Bindx == 599:
            t1810 = np.cos(phi)
            t1811 = t1810 ** 2
            t1812 = t1810 * t1811
            t1815 = t1812 ** 2
            t1813 = t1811 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (240 * t1811 + 895 * t1812 - 770 * t1813 + 572 * t1815 - 10 + (-1749 * t1813 + 1001 * t1815 - 115) * t1810)

        if Bindx == 600:
            t1817 = np.cos(phi)
            t1818 = t1817 ** 2
            t1820 = t1818 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.2e1) * ((1 + t1817) ** (0.5e1 / 0.2e1)) * (110 * t1818 - 2145 * t1820 + 19 + (1210 * t1818 + 1001 * t1820 - 195) * t1817) * ((1 - t1817) ** (-0.1e1 / 0.2e1))

        if Bindx == 601:
            t1823 = np.cos(phi)
            t1824 = t1823 ** 2
            t1826 = t1824 ** 2
            t1822 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.22e2) * t1822 ** 2 * (-68 * t1824 + 104 * t1826 + 4 + (-62 * t1824 + 91 * t1826 + 11) * t1823)

        if Bindx == 602:
            t1828 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (1 + (-52 + 91 * t1828) * t1828) * ((1 + t1828) ** (0.7e1 / 0.2e1)) * np.sqrt(0.22e2) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t1828) ** (0.3e1 / 0.2e1))

        if Bindx == 603:
            t1834 = np.sin(phi)
            t1832 = t1834 ** 2
            t1829 = np.cos(phi)
            t1830 = t1829 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.143e3) * t1832 ** 2 * (12 * t1830 - 2 + (7 * t1830 + 3) * t1829)

        if Bindx == 604:
            t1835 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t1835) ** (0.5e1 / 0.2e1)) * ((1 + t1835) ** (0.9e1 / 0.2e1))

        if Bindx == 605:
            t1837 = np.cos(phi)
            t1841 = -1 + t1837
            t1838 = t1841 ** 2
            t1836 = 1 + t1837
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.1001e4) * t1841 * t1838 ** 2 * t1836 ** 2

        if Bindx == 606:
            t1842 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.286e3) * ((1 - t1842) ** (0.9e1 / 0.2e1)) * ((1 + t1842) ** (0.3e1 / 0.2e1)) * (3 + 7 * t1842)

        if Bindx == 607:
            t1844 = np.cos(phi)
            t1845 = t1844 ** 2
            t1847 = t1845 ** 2
            t1843 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.11e2) * t1843 ** 2 * (110 * t1845 - 195 * t1847 - 11 + (50 * t1845 + 91 * t1847 - 45) * t1844)

        if Bindx == 608:
            t1849 = np.cos(phi)
            t1850 = t1849 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.11e2) * ((1 - t1849) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t1849)) * (117 * t1850 - 1 + (91 * t1850 + 33) * t1849)

        if Bindx == 609:
            t1852 = np.cos(phi)
            t1853 = t1852 ** 2
            t1854 = t1852 * t1853
            t1857 = t1854 ** 2
            t1855 = t1853 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((3*1j) * (phi1 - phi2)) * (-741 * t1853 + 555 * t1854 + 1925 * t1855 - 1287 * t1857 + 39 + (-1419 * t1855 + 1001 * t1857 - 73) * t1852)

        if Bindx == 610:
            t1859 = np.cos(phi)
            t1860 = t1859 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.2e1) * ((1 - t1859) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t1859)) * (-176 * t1859 - 19 + (1144 * t1859 + 66 + 1001 * t1860) * t1860)

        if Bindx == 611:
            t1864 = np.cos(phi)
            t1865 = t1864 ** 2
            t1867 = t1865 ** 2
            t1863 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.3e1) * t1863 ** 2 * (198 * t1865 - 429 * t1867 - 9 + (-902 * t1865 + 1001 * t1867 + 141) * t1864)

        if Bindx == 612:
            t1869 = np.cos(phi)
            t1870 = t1869 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.42e2) * ((1 - t1869) ** (0.3e1 / 0.2e1)) * ((1 + t1869) ** (0.3e1 / 0.2e1)) * (3 + (-66 + 143 * t1870) * t1870)

        if Bindx == 613:
            t1873 = np.cos(phi)
            t1874 = t1873 ** 2
            t1876 = t1874 ** 2
            t1872 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.3e1) * t1872 ** 2 * (-198 * t1874 + 429 * t1876 + 9 + (-902 * t1874 + 1001 * t1876 + 141) * t1873)

        if Bindx == 614:
            t1878 = np.cos(phi)
            t1879 = t1878 ** 2
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.2e1) * np.sqrt((1 - t1878)) * ((1 + t1878) ** (0.5e1 / 0.2e1)) * (176 * t1878 - 19 + (-1144 * t1878 + 66 + 1001 * t1879) * t1879)

        if Bindx == 615:
            t1882 = np.cos(phi)
            t1883 = t1882 ** 2
            t1884 = t1882 * t1883
            t1887 = t1884 ** 2
            t1885 = t1883 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((3*1j) * (phi1 + phi2)) * (741 * t1883 + 555 * t1884 - 1925 * t1885 + 1287 * t1887 - 39 + (-1419 * t1885 + 1001 * t1887 - 73) * t1882)

        if Bindx == 616:
            t1889 = np.cos(phi)
            t1890 = t1889 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.11e2) * ((1 + t1889) ** (0.7e1 / 0.2e1)) * (-32 * t1889 - 1 + (-208 * t1889 + 150 + 91 * t1890) * t1890) * ((1 - t1889) ** (-0.1e1 / 0.2e1))

        if Bindx == 617:
            t1894 = np.cos(phi)
            t1895 = t1894 ** 2
            t1897 = t1895 ** 2
            t1893 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.11e2) * t1893 ** 2 * (-110 * t1895 + 195 * t1897 + 11 + (50 * t1895 + 91 * t1897 - 45) * t1894)

        if Bindx == 618:
            t1899 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * (-3 + 7 * t1899) * ((1 + t1899) ** (0.9e1 / 0.2e1)) * np.sqrt(0.286e3) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t1899) ** (0.3e1 / 0.2e1))

        if Bindx == 619:
            t1901 = np.cos(phi)
            t1905 = 1 + t1901
            t1902 = t1905 ** 2
            t1900 = -1 + t1901
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.1001e4) * t1900 ** 2 * t1905 * t1902 ** 2

        if Bindx == 620:
            t1906 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t1906) ** (0.11e2 / 0.2e1)) * ((1 + t1906) ** (0.3e1 / 0.2e1))

        if Bindx == 621:
            t1907 = np.cos(phi)
            t1911 = -1 + t1907
            t1908 = t1911 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.26e2) * t1911 * t1908 ** 2 * (1 + t1907) * (4 + 7 * t1907)

        if Bindx == 622:
            t1912 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * ((1 - t1912) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t1912)) * (25 + (104 + 91 * t1912) * t1912)

        if Bindx == 623:
            t1913 = np.cos(phi)
            t1914 = t1913 ** 2
            t1915 = t1913 * t1914
            t1918 = t1915 ** 2
            t1916 = t1914 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * (phi1 - phi2)) * (-96 * t1914 - 115 * t1915 + 280 * t1916 - 208 * t1918 + 8 + (-3 * t1916 + 91 * t1918 + 43) * t1913)

        if Bindx == 624:
            t1920 = np.cos(phi)
            t1921 = t1920 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * ((1 - t1920) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t1920)) * (117 * t1921 - 1 + (91 * t1921 + 33) * t1920)

        if Bindx == 625:
            t1924 = np.cos(phi)
            t1925 = t1924 ** 2
            t1927 = t1925 ** 2
            t1923 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.22e2) * t1923 ** 2 * (68 * t1925 - 104 * t1927 - 4 + (-62 * t1925 + 91 * t1927 + 11) * t1924)

        if Bindx == 626:
            t1929 = np.cos(phi)
            t1930 = t1929 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.33e2) * ((1 - t1929) ** (0.5e1 / 0.2e1)) * ((1 + t1929) ** (0.3e1 / 0.2e1)) * (39 * t1930 - 3 + (91 * t1930 - 15) * t1929)

        if Bindx == 627:
            t1935 = np.sin(phi)
            t1933 = t1935 ** 2
            t1932 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * phi1) * np.sqrt(0.462e3) * t1933 ** 2 * t1932 * (13 * t1932 ** 2 - 3)

        if Bindx == 628:
            t1936 = np.cos(phi)
            t1937 = t1936 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.33e2) * ((1 - t1936) ** (0.3e1 / 0.2e1)) * ((1 + t1936) ** (0.5e1 / 0.2e1)) * (-39 * t1937 + 3 + (91 * t1937 - 15) * t1936)

        if Bindx == 629:
            t1940 = np.cos(phi)
            t1941 = t1940 ** 2
            t1943 = t1941 ** 2
            t1939 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.22e2) * t1939 ** 2 * (-68 * t1941 + 104 * t1943 + 4 + (-62 * t1941 + 91 * t1943 + 11) * t1940)

        if Bindx == 630:
            t1945 = np.cos(phi)
            t1946 = t1945 ** 2
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * np.sqrt((1 - t1945)) * ((1 + t1945) ** (0.7e1 / 0.2e1)) * (-117 * t1946 + 1 + (91 * t1946 + 33) * t1945)

        if Bindx == 631:
            t1948 = np.cos(phi)
            t1949 = t1948 ** 2
            t1950 = t1948 * t1949
            t1953 = t1950 ** 2
            t1951 = t1949 ** 2
            tfunc[..., c] = (0.15e2 / 0.32e2) * np.exp((4*1j) * (phi1 + phi2)) * (96 * t1949 - 115 * t1950 - 280 * t1951 + 208 * t1953 - 8 + (-3 * t1951 + 91 * t1953 + 43) * t1948)

        if Bindx == 632:
            t1955 = np.cos(phi)
            t1956 = t1955 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * ((1 + t1955) ** (0.9e1 / 0.2e1)) * (-195 * t1956 - 25 + (91 * t1956 + 129) * t1955) * ((1 - t1955) ** (-0.1e1 / 0.2e1))

        if Bindx == 633:
            t1959 = np.cos(phi)
            t1960 = t1959 ** 2
            t1962 = t1960 ** 2
            t1958 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.26e2) * t1958 ** 2 * (4 * t1960 + 24 * t1962 - 4 + (26 * t1960 + 7 * t1962 - 9) * t1959)

        if Bindx == 634:
            t1964 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * ((1 - t1964) ** (0.3e1 / 0.2e1)) * ((1 + t1964) ** (0.11e2 / 0.2e1))

        if Bindx == 635:
            t1965 = np.cos(phi)
            t1969 = -1 + t1965
            t1966 = t1969 ** 2
            t1967 = t1969 * t1966
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.91e2) * t1967 ** 2 * (1 + t1965)

        if Bindx == 636:
            t1970 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.26e2) * ((1 - t1970) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t1970)) * (5 + 7 * t1970)

        if Bindx == 637:
            t1971 = np.cos(phi)
            t1972 = t1971 ** 2
            t1973 = t1971 * t1972
            t1976 = t1973 ** 2
            t1974 = t1972 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((5*1j) * (phi1 - phi2)) * (129 * t1972 - 415 * t1973 + 175 * t1974 - 325 * t1976 - 43 + (303 * t1974 + 91 * t1976 + 85) * t1971)

        if Bindx == 638:
            t1978 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * ((1 - t1978) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t1978)) * (25 + (104 + 91 * t1978) * t1978)

        if Bindx == 639:
            t1980 = np.cos(phi)
            t1981 = t1980 ** 2
            t1983 = t1981 ** 2
            t1979 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.11e2) * t1979 ** 2 * (110 * t1981 - 195 * t1983 - 11 + (50 * t1981 + 91 * t1983 - 45) * t1980)

        if Bindx == 640:
            t1985 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.22e2) * ((1 - t1985) ** (0.7e1 / 0.2e1)) * ((1 + t1985) ** (0.3e1 / 0.2e1)) * (1 + (52 + 91 * t1985) * t1985)

        if Bindx == 641:
            t1991 = np.sin(phi)
            t1989 = t1991 ** 2
            t1986 = np.cos(phi)
            t1987 = t1986 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.33e2) * t1989 ** 2 * (-65 * t1987 + 5 + (91 * t1987 - 31) * t1986)

        if Bindx == 642:
            t1992 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.462e3) * ((1 - t1992) ** (0.5e1 / 0.2e1)) * ((1 + t1992) ** (0.5e1 / 0.2e1)) * (13 * t1992 ** 2 - 1)

        if Bindx == 643:
            t1998 = np.sin(phi)
            t1996 = t1998 ** 2
            t1993 = np.cos(phi)
            t1994 = t1993 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.33e2) * t1996 ** 2 * (65 * t1994 - 5 + (91 * t1994 - 31) * t1993)

        if Bindx == 644:
            t1999 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.22e2) * ((1 - t1999) ** (0.3e1 / 0.2e1)) * ((1 + t1999) ** (0.7e1 / 0.2e1)) * (1 + (-52 + 91 * t1999) * t1999)

        if Bindx == 645:
            t2001 = np.cos(phi)
            t2002 = t2001 ** 2
            t2004 = t2002 ** 2
            t2000 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.11e2) * t2000 ** 2 * (-110 * t2002 + 195 * t2004 + 11 + (50 * t2002 + 91 * t2004 - 45) * t2001)

        if Bindx == 646:
            t2006 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt((1 - t2006)) * ((1 + t2006) ** (0.9e1 / 0.2e1)) * (25 + (-104 + 91 * t2006) * t2006)

        if Bindx == 647:
            t2007 = np.cos(phi)
            t2008 = t2007 ** 2
            t2009 = t2007 * t2008
            t2012 = t2009 ** 2
            t2010 = t2008 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((5*1j) * (phi1 + phi2)) * (-129 * t2008 - 415 * t2009 - 175 * t2010 + 325 * t2012 + 43 + (303 * t2010 + 91 * t2012 + 85) * t2007)

        if Bindx == 648:
            t2014 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.26e2) * ((1 + t2014) ** (0.11e2 / 0.2e1)) * (5 + (-12 + 7 * t2014) * t2014) * ((1 - t2014) ** (-0.1e1 / 0.2e1))

        if Bindx == 649:
            t2015 = np.cos(phi)
            t2019 = 1 + t2015
            t2016 = t2019 ** 2
            t2017 = t2019 * t2016
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.91e2) * (-1 + t2015) * t2017 ** 2

        if Bindx == 650:
            t2020 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.14e2) * ((1 - t2020) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t2020))

        if Bindx == 651:
            t2021 = np.cos(phi)
            t2022 = t2021 ** 2
            t2023 = t2021 * t2022
            t2026 = t2023 ** 2
            t2024 = t2022 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (48 * t2022 - 15 * t2023 - 50 * t2024 - 36 * t2026 + 6 + (69 * t2024 + 7 * t2026 - 29) * t2021)

        if Bindx == 652:
            t2028 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.26e2) * ((1 - t2028) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t2028)) * (5 + 7 * t2028)

        if Bindx == 653:
            t2030 = np.cos(phi)
            t2031 = t2030 ** 2
            t2033 = t2031 ** 2
            t2029 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.26e2) * t2029 ** 2 * (-4 * t2031 - 24 * t2033 + 4 + (26 * t2031 + 7 * t2033 - 9) * t2030)

        if Bindx == 654:
            t2035 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.286e3) * ((1 - t2035) ** (0.9e1 / 0.2e1)) * ((1 + t2035) ** (0.3e1 / 0.2e1)) * (3 + 7 * t2035)

        if Bindx == 655:
            t2041 = np.sin(phi)
            t2039 = t2041 ** 2
            t2036 = np.cos(phi)
            t2037 = t2036 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.143e3) * t2039 ** 2 * (-12 * t2037 + 2 + (7 * t2037 + 3) * t2036)

        if Bindx == 656:
            t2042 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.858e3) * ((1 - t2042) ** (0.7e1 / 0.2e1)) * ((1 + t2042) ** (0.5e1 / 0.2e1)) * (1 + 7 * t2042)

        if Bindx == 657:
            t2046 = np.sin(phi)
            t2043 = t2046 ** 2
            t2044 = t2046 * t2043
            tfunc[..., c] = -(0.15e2 / 0.32e2) * np.exp((6*1j) * phi1) * np.sqrt(0.3003e4) * t2044 ** 2 * np.cos(phi)

        if Bindx == 658:
            t2047 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.858e3) * ((1 - t2047) ** (0.5e1 / 0.2e1)) * ((1 + t2047) ** (0.7e1 / 0.2e1)) * (-1 + 7 * t2047)

        if Bindx == 659:
            t2053 = np.sin(phi)
            t2051 = t2053 ** 2
            t2048 = np.cos(phi)
            t2049 = t2048 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.143e3) * t2051 ** 2 * (12 * t2049 - 2 + (7 * t2049 + 3) * t2048)

        if Bindx == 660:
            t2054 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.286e3) * ((1 - t2054) ** (0.3e1 / 0.2e1)) * ((1 + t2054) ** (0.9e1 / 0.2e1)) * (-3 + 7 * t2054)

        if Bindx == 661:
            t2056 = np.cos(phi)
            t2057 = t2056 ** 2
            t2059 = t2057 ** 2
            t2055 = np.sin(phi)
            tfunc[..., c] = -(0.15e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.26e2) * t2055 ** 2 * (4 * t2057 + 24 * t2059 - 4 + (26 * t2057 + 7 * t2059 - 9) * t2056)

        if Bindx == 662:
            t2061 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.26e2) * np.sqrt((1 - t2061)) * ((1 + t2061) ** (0.11e2 / 0.2e1)) * (-5 + 7 * t2061)

        if Bindx == 663:
            t2062 = np.cos(phi)
            t2063 = t2062 ** 2
            t2064 = t2062 * t2063
            t2067 = t2064 ** 2
            t2065 = t2063 ** 2
            tfunc[..., c] = (0.15e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (-48 * t2063 - 15 * t2064 + 50 * t2065 + 36 * t2067 - 6 + (69 * t2065 + 7 * t2067 - 29) * t2062)

        if Bindx == 664:
            t2069 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t2069)) * ((1 + t2069) ** (0.13e2 / 0.2e1))

        if Bindx == 665:
            t2070 = np.cos(phi)
            t2071 = t2070 ** 2
            t2072 = t2070 * t2071
            t2075 = t2072 ** 2
            t2073 = t2071 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((7*1j) * (phi1 - phi2)) * (-21 * t2071 + 35 * t2072 - 35 * t2073 - 7 * t2075 - 1 + (21 * t2073 + t2075 + 7) * t2070)

        if Bindx == 666:
            t2077 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.14e2) * ((1 - t2077) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t2077))

        if Bindx == 667:
            t2078 = np.cos(phi)
            t2082 = -1 + t2078
            t2079 = t2082 ** 2
            t2080 = t2082 * t2079
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.91e2) * t2080 ** 2 * (1 + t2078)

        if Bindx == 668:
            t2083 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t2083) ** (0.11e2 / 0.2e1)) * ((1 + t2083) ** (0.3e1 / 0.2e1))

        if Bindx == 669:
            t2085 = np.cos(phi)
            t2089 = -1 + t2085
            t2086 = t2089 ** 2
            t2084 = 1 + t2085
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.1001e4) * t2089 * t2086 ** 2 * t2084 ** 2

        if Bindx == 670:
            t2090 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t2090) ** (0.9e1 / 0.2e1)) * ((1 + t2090) ** (0.5e1 / 0.2e1))

        if Bindx == 671:
            t2094 = np.sin(phi)
            t2091 = t2094 ** 2
            t2092 = t2094 * t2091
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.3003e4) * t2092 ** 2 * (-0.1e1 + np.cos(phi))

        if Bindx == 672:
            t2095 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.858e3) * ((1 - t2095) ** (0.7e1 / 0.2e1)) * ((1 + t2095) ** (0.7e1 / 0.2e1))

        if Bindx == 673:
            t2099 = np.sin(phi)
            t2096 = t2099 ** 2
            t2097 = t2099 * t2096
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.3003e4) * t2097 ** 2 * (0.1e1 + np.cos(phi))

        if Bindx == 674:
            t2100 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t2100) ** (0.5e1 / 0.2e1)) * ((1 + t2100) ** (0.9e1 / 0.2e1))

        if Bindx == 675:
            t2102 = np.cos(phi)
            t2106 = 1 + t2102
            t2103 = t2106 ** 2
            t2101 = -1 + t2102
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.1001e4) * t2101 ** 2 * t2106 * t2103 ** 2

        if Bindx == 676:
            t2107 = np.cos(phi)
            tfunc[..., c] = (0.15e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.91e2) * ((1 - t2107) ** (0.3e1 / 0.2e1)) * ((1 + t2107) ** (0.11e2 / 0.2e1))

        if Bindx == 677:
            t2108 = np.cos(phi)
            t2112 = 1 + t2108
            t2109 = t2112 ** 2
            t2110 = t2112 * t2109
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.91e2) * (-1 + t2108) * t2110 ** 2

        if Bindx == 678:
            t2113 = np.cos(phi)
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.14e2) * np.sqrt((1 - t2113)) * ((1 + t2113) ** (0.13e2 / 0.2e1))

        if Bindx == 679:
            t2114 = np.cos(phi)
            t2115 = t2114 ** 2
            t2116 = t2114 * t2115
            t2119 = t2116 ** 2
            t2117 = t2115 ** 2
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.exp((7*1j) * (phi1 + phi2)) * (21 * t2115 + 35 * t2116 + 35 * t2117 + 7 * t2119 + 1 + (21 * t2117 + t2119 + 7) * t2114)

        if Bindx == 680:
            t2121 = np.cos(phi)
            t2129 = 8 * t2121
            t2122 = t2121 ** 2
            t2124 = t2122 ** 2
            t2123 = t2121 * t2122
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((-8*1j) * (phi1 + phi2)) * (28 * t2122 + t2129 + 1 + (56 * t2121 + 70 + t2124) * t2124 + (56 + (t2129 + 28) * t2123) * t2123)

        if Bindx == 681:
            t2130 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + 7 * phi2)) * ((1 + t2130) ** (0.15e2 / 0.2e1)) * np.sqrt((1 - t2130))

        if Bindx == 682:
            t2131 = np.cos(phi)
            t2136 = 1 + t2131
            t2132 = t2136 ** 2
            t2133 = t2136 * t2132
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * (-1 + t2131) * t2136 * t2133 ** 2

        if Bindx == 683:
            t2137 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t2137) ** (0.3e1 / 0.2e1)) * ((1 + t2137) ** (0.13e2 / 0.2e1))

        if Bindx == 684:
            t2139 = np.cos(phi)
            t2143 = 1 + t2139
            t2140 = t2143 ** 2
            t2141 = t2143 * t2140
            t2138 = -1 + t2139
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.455e3) * t2138 ** 2 * t2141 ** 2

        if Bindx == 685:
            t2144 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t2144) ** (0.5e1 / 0.2e1)) * ((1 + t2144) ** (0.11e2 / 0.2e1))

        if Bindx == 686:
            t2145 = np.cos(phi)
            t2152 = -1 + t2145
            t2151 = 1 + t2145
            t2148 = t2151 ** 2
            t2146 = t2152 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.2002e4) * t2152 * t2146 * t2151 * t2148 ** 2

        if Bindx == 687:
            t2153 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 + phi2)) * np.sqrt(0.715e3) * ((1 - t2153) ** (0.7e1 / 0.2e1)) * ((1 + t2153) ** (0.9e1 / 0.2e1))

        if Bindx == 688:
            t2157 = np.sin(phi)
            t2154 = t2157 ** 2
            t2155 = t2154 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.1430e4) * t2155 ** 2

        if Bindx == 689:
            t2158 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - phi2)) * np.sqrt(0.715e3) * ((1 - t2158) ** (0.9e1 / 0.2e1)) * ((1 + t2158) ** (0.7e1 / 0.2e1))

        if Bindx == 690:
            t2159 = np.cos(phi)
            t2166 = -1 + t2159
            t2165 = 1 + t2159
            t2163 = t2165 ** 2
            t2160 = t2166 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.2002e4) * t2166 * t2160 ** 2 * t2165 * t2163

        if Bindx == 691:
            t2167 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t2167) ** (0.11e2 / 0.2e1)) * ((1 + t2167) ** (0.5e1 / 0.2e1))

        if Bindx == 692:
            t2169 = np.cos(phi)
            t2173 = -1 + t2169
            t2170 = t2173 ** 2
            t2171 = t2173 * t2170
            t2168 = 1 + t2169
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.455e3) * t2171 ** 2 * t2168 ** 2

        if Bindx == 693:
            t2174 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t2174) ** (0.13e2 / 0.2e1)) * ((1 + t2174) ** (0.3e1 / 0.2e1))

        if Bindx == 694:
            t2175 = np.cos(phi)
            t2180 = -1 + t2175
            t2176 = t2180 ** 2
            t2177 = t2180 * t2176
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * t2180 * t2177 ** 2 * (1 + t2175)

        if Bindx == 695:
            t2181 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (8 * phi1 - 7 * phi2)) * ((1 - t2181) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t2181))

        if Bindx == 696:
            t2182 = np.cos(phi)
            t2190 = -8 * t2182
            t2183 = t2182 ** 2
            t2185 = t2183 ** 2
            t2184 = t2182 * t2183
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((-8*1j) * (phi1 - phi2)) * (28 * t2183 + t2190 + 1 + (-56 * t2182 + 70 + t2185) * t2185 + (-56 + (t2190 + 28) * t2184) * t2184)

        if Bindx == 697:
            t2191 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 + 8 * phi2)) * np.sqrt((1 - t2191)) * ((1 + t2191) ** (0.15e2 / 0.2e1))

        if Bindx == 698:
            t2192 = np.cos(phi)
            t2193 = t2192 ** 2
            t2194 = t2192 * t2193
            t2197 = t2194 ** 2
            t2195 = t2193 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-7*1j) * (phi1 + phi2)) * (-91 * t2193 - 77 * t2194 + 119 * t2197 - 7 + (35 + 8 * t2195) * t2195 + (133 * t2195 + 49 * t2197 - 41) * t2192)

        if Bindx == 699:
            t2200 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.30e2) * ((1 + t2200) ** (0.13e2 / 0.2e1)) * (3 + (-7 + 4 * t2200) * t2200) * ((1 - t2200) ** (-0.1e1 / 0.2e1))

        if Bindx == 700:
            t2202 = np.cos(phi)
            t2203 = t2202 ** 2
            t2205 = t2203 ** 2
            t2204 = t2202 * t2203
            t2201 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * t2201 ** 2 * (-10 * t2203 + 55 * t2205 - 5 + (30 + 8 * t2204) * t2204 + (35 * t2205 - 17) * t2202)

        if Bindx == 701:
            t2208 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (2 * t2208 - 1) * ((1 + t2208) ** (0.11e2 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((-1*1j) * (7 * phi1 + 4 * phi2)) * ((1 - t2208) ** (0.3e1 / 0.2e1))

        if Bindx == 702:
            t2215 = np.sin(phi)
            t2213 = t2215 ** 2
            t2209 = np.cos(phi)
            t2210 = t2209 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * t2213 ** 2 * (-t2209 - 3 + (21 * t2209 + 15 + 8 * t2210) * t2210)

        if Bindx == 703:
            t2216 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + 4 * t2216) * ((1 + t2216) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-1*1j) * (7 * phi1 + 2 * phi2)) * ((1 - t2216) ** (0.5e1 / 0.2e1))

        if Bindx == 704:
            t2221 = np.sin(phi)
            t2218 = t2221 ** 2
            t2219 = t2221 * t2218
            t2217 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 + phi2)) * np.sqrt(0.715e3) * t2219 ** 2 * (-1 + (7 + 8 * t2217) * t2217)

        if Bindx == 705:
            t2222 = np.cos(phi)
            t2226 = -4 * t2222
            t2223 = t2222 ** 2
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * t2222 * (t2226 + 1 + (t2226 + 6 + t2223) * t2223) * ((1 + t2222) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-7*1j) * phi1) * ((1 - t2222) ** (-0.1e1 / 0.2e1))

        if Bindx == 706:
            t2231 = np.sin(phi)
            t2228 = t2231 ** 2
            t2229 = t2231 * t2228
            t2227 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - phi2)) * np.sqrt(0.715e3) * t2229 ** 2 * (-1 + (-7 + 8 * t2227) * t2227)

        if Bindx == 707:
            t2232 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + 4 * t2232) * ((1 + t2232) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-1*1j) * (7 * phi1 - 2 * phi2)) * ((1 - t2232) ** (0.9e1 / 0.2e1))

        if Bindx == 708:
            t2239 = np.sin(phi)
            t2237 = t2239 ** 2
            t2233 = np.cos(phi)
            t2234 = t2233 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * t2237 ** 2 * (t2233 - 3 + (-21 * t2233 + 15 + 8 * t2234) * t2234)

        if Bindx == 709:
            t2240 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (1 + 2 * t2240) * ((1 + t2240) ** (0.3e1 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((-1*1j) * (7 * phi1 - 4 * phi2)) * ((1 - t2240) ** (0.11e2 / 0.2e1))

        if Bindx == 710:
            t2242 = np.cos(phi)
            t2243 = t2242 ** 2
            t2245 = t2243 ** 2
            t2244 = t2242 * t2243
            t2241 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * t2241 ** 2 * (-10 * t2243 + 55 * t2245 - 5 + (-30 + 8 * t2244) * t2244 + (-35 * t2245 + 17) * t2242)

        if Bindx == 711:
            t2248 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (3 + 4 * t2248) * np.sqrt((1 + t2248)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (7 * phi1 - 6 * phi2)) * ((1 - t2248) ** (0.13e2 / 0.2e1))

        if Bindx == 712:
            t2249 = np.cos(phi)
            t2250 = t2249 ** 2
            t2251 = t2249 * t2250
            t2254 = t2251 ** 2
            t2252 = t2250 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-7*1j) * (phi1 - phi2)) * (-91 * t2250 + 77 * t2251 + 119 * t2254 - 7 + (35 + 8 * t2252) * t2252 + (-133 * t2252 - 49 * t2254 + 41) * t2249)

        if Bindx == 713:
            t2257 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (7 * phi1 - 8 * phi2)) * ((1 - t2257) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t2257))

        if Bindx == 714:
            t2258 = np.cos(phi)
            t2263 = 1 + t2258
            t2259 = t2263 ** 2
            t2260 = t2263 * t2259
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * (-1 + t2258) * t2263 * t2260 ** 2

        if Bindx == 715:
            t2264 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t2264)) * ((1 + t2264) ** (0.13e2 / 0.2e1)) * (-3 + 4 * t2264)

        if Bindx == 716:
            t2265 = np.cos(phi)
            t2266 = t2265 ** 2
            t2267 = t2265 * t2266
            t2270 = t2267 ** 2
            t2268 = t2266 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-6*1j) * (phi1 + phi2)) * (-175 * t2267 + 196 * t2270 + 16 + (-210 + 30 * t2268) * t2268 + (21 * t2268 + 135 * t2270 + 51) * t2265)

        if Bindx == 717:
            t2273 = np.cos(phi)
            t2274 = t2273 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.42e2) * ((1 + t2273) ** (0.11e2 / 0.2e1)) * (-45 * t2274 - 7 + (20 * t2274 + 32) * t2273) * ((1 - t2273) ** (-0.1e1 / 0.2e1))

        if Bindx == 718:
            t2277 = np.cos(phi)
            t2278 = t2277 ** 2
            t2279 = t2277 * t2278
            t2276 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.546e3) * t2276 ** 2 * (-t2277 + 1 + (-6 + 5 * t2279) * t2279 + (-9 + (15 * t2277 + 11) * t2278) * t2278)

        if Bindx == 719:
            t2283 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (-9 + 12 * t2283) * t2283) * ((1 + t2283) ** (0.9e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((-3*1j) * (2 * phi1 + phi2)) * ((1 - t2283) ** (0.3e1 / 0.2e1))

        if Bindx == 720:
            t2289 = np.sin(phi)
            t2287 = t2289 ** 2
            t2284 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.15015e5) * t2287 ** 2 * t2284 * (-1 + (2 * t2284 + 3) * t2284 ** 2)

        if Bindx == 721:
            t2290 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + (-5 + 20 * t2290) * t2290) * ((1 + t2290) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 + phi2)) * ((1 - t2290) ** (0.5e1 / 0.2e1))

        if Bindx == 722:
            t2295 = np.sin(phi)
            t2292 = t2295 ** 2
            t2293 = t2295 * t2292
            t2291 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.429e3) * t2293 ** 2 * (15 * t2291 ** 2 - 1)

        if Bindx == 723:
            t2296 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (5 + 20 * t2296) * t2296) * ((1 + t2296) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (6 * phi1 - phi2)) * ((1 - t2296) ** (0.7e1 / 0.2e1))

        if Bindx == 724:
            t2302 = np.sin(phi)
            t2300 = t2302 ** 2
            t2297 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.15015e5) * t2300 ** 2 * t2297 * (1 + (2 * t2297 - 3) * t2297 ** 2)

        if Bindx == 725:
            t2303 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + (9 + 12 * t2303) * t2303) * ((1 + t2303) ** (0.3e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((-3*1j) * (2 * phi1 - phi2)) * ((1 - t2303) ** (0.9e1 / 0.2e1))

        if Bindx == 726:
            t2305 = np.cos(phi)
            t2306 = t2305 ** 2
            t2307 = t2305 * t2306
            t2304 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.546e3) * t2304 ** 2 * (t2305 + 1 + (6 + 5 * t2307) * t2307 + (-9 + (-15 * t2305 + 11) * t2306) * t2306)

        if Bindx == 727:
            t2311 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (7 + (25 + 20 * t2311) * t2311) * np.sqrt((1 + t2311)) * np.sqrt(0.42e2) * np.exp((-1*1j) * (6 * phi1 - 5 * phi2)) * ((1 - t2311) ** (0.11e2 / 0.2e1))

        if Bindx == 728:
            t2312 = np.cos(phi)
            t2313 = t2312 ** 2
            t2314 = t2312 * t2313
            t2317 = t2314 ** 2
            t2315 = t2313 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-6*1j) * (phi1 - phi2)) * (175 * t2314 + 196 * t2317 + 16 + (-210 + 30 * t2315) * t2315 + (-21 * t2315 - 135 * t2317 - 51) * t2312)

        if Bindx == 729:
            t2320 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (3 + 4 * t2320) * np.sqrt((1 + t2320)) * np.sqrt(0.30e2) * np.exp((-1*1j) * (6 * phi1 - 7 * phi2)) * ((1 - t2320) ** (0.13e2 / 0.2e1))

        if Bindx == 730:
            t2321 = np.cos(phi)
            t2326 = -1 + t2321
            t2322 = t2326 ** 2
            t2323 = t2326 * t2322
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * t2326 * t2323 ** 2 * (1 + t2321)

        if Bindx == 731:
            t2327 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t2327) ** (0.3e1 / 0.2e1)) * ((1 + t2327) ** (0.13e2 / 0.2e1))

        if Bindx == 732:
            t2328 = np.cos(phi)
            t2332 = 1 + t2328
            t2329 = t2332 ** 2
            t2330 = t2332 * t2329
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.35e2) * (-1 + t2328) * t2330 ** 2 * (-5 + 8 * t2328)

        if Bindx == 733:
            t2333 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.42e2) * np.sqrt((1 - t2333)) * ((1 + t2333) ** (0.11e2 / 0.2e1)) * (7 + (-25 + 20 * t2333) * t2333)

        if Bindx == 734:
            t2334 = np.cos(phi)
            t2335 = t2334 ** 2
            t2336 = t2334 * t2335
            t2339 = t2336 ** 2
            t2337 = t2335 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-5*1j) * (phi1 + phi2)) * (495 * t2335 + 145 * t2336 + 469 * t2339 - 45 + (-1135 + 280 * t2337) * t2337 + (-1025 * t2337 + 875 * t2339 + 69) * t2334)

        if Bindx == 735:
            t2342 = np.cos(phi)
            t2343 = t2342 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.13e2) * ((1 + t2342) ** (0.9e1 / 0.2e1)) * (-45 * t2342 + 3 + (-175 * t2342 + 147 + 70 * t2343) * t2343) * ((1 - t2342) ** (-0.1e1 / 0.2e1))

        if Bindx == 736:
            t2347 = np.cos(phi)
            t2348 = t2347 ** 2
            t2350 = t2348 ** 2
            t2349 = t2347 * t2348
            t2346 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.195e3) * t2346 ** 2 * (-18 * t2348 - 7 * t2350 + 1 + (-90 + 56 * t2349) * t2349 + (105 * t2350 + 17) * t2347)

        if Bindx == 737:
            t2353 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (28 * t2353 - 21) * t2353 ** 2) * ((1 + t2353) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-1*1j) * (5 * phi1 + 2 * phi2)) * ((1 - t2353) ** (0.3e1 / 0.2e1))

        if Bindx == 738:
            t2362 = np.sin(phi)
            t2360 = t2362 ** 2
            t2356 = np.cos(phi)
            t2357 = t2356 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 + phi2)) * np.sqrt(0.1001e4) * t2360 ** 2 * (-5 * t2356 + 1 + (25 * t2356 - 21 + 40 * t2357) * t2357)

        if Bindx == 739:
            t2363 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * (5 * t2363 ** 2 - 1) * t2363 * ((1 + t2363) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-5*1j) * phi1) * ((1 - t2363) ** (0.5e1 / 0.2e1))

        if Bindx == 740:
            t2370 = np.sin(phi)
            t2368 = t2370 ** 2
            t2364 = np.cos(phi)
            t2365 = t2364 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - phi2)) * np.sqrt(0.1001e4) * t2368 ** 2 * (5 * t2364 + 1 + (-25 * t2364 - 21 + 40 * t2365) * t2365)

        if Bindx == 741:
            t2371 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (28 * t2371 + 21) * t2371 ** 2) * ((1 + t2371) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-1*1j) * (5 * phi1 - 2 * phi2)) * ((1 - t2371) ** (0.7e1 / 0.2e1))

        if Bindx == 742:
            t2375 = np.cos(phi)
            t2376 = t2375 ** 2
            t2378 = t2376 ** 2
            t2377 = t2375 * t2376
            t2374 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.195e3) * t2374 ** 2 * (-18 * t2376 - 7 * t2378 + 1 + (90 + 56 * t2377) * t2377 + (-105 * t2378 - 17) * t2375)

        if Bindx == 743:
            t2381 = np.cos(phi)
            t2382 = t2381 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (105 * t2382 + 3 + (70 * t2382 + 42) * t2381) * np.sqrt((1 + t2381)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (5 * phi1 - 4 * phi2)) * ((1 - t2381) ** (0.9e1 / 0.2e1))

        if Bindx == 744:
            t2384 = np.cos(phi)
            t2385 = t2384 ** 2
            t2386 = t2384 * t2385
            t2389 = t2386 ** 2
            t2387 = t2385 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-5*1j) * (phi1 - phi2)) * (495 * t2385 - 145 * t2386 + 469 * t2389 - 45 + (-1135 + 280 * t2387) * t2387 + (1025 * t2387 - 875 * t2389 - 69) * t2384)

        if Bindx == 745:
            t2392 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (7 + (25 + 20 * t2392) * t2392) * np.sqrt((1 + t2392)) * np.sqrt(0.42e2) * np.exp((-1*1j) * (5 * phi1 - 6 * phi2)) * ((1 - t2392) ** (0.11e2 / 0.2e1))

        if Bindx == 746:
            t2394 = np.cos(phi)
            t2395 = t2394 ** 2
            t2397 = t2395 ** 2
            t2396 = t2394 * t2395
            t2393 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.35e2) * t2393 ** 2 * (-10 * t2395 + 55 * t2397 - 5 + (-30 + 8 * t2396) * t2396 + (-35 * t2397 + 17) * t2394)

        if Bindx == 747:
            t2400 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t2400) ** (0.13e2 / 0.2e1)) * ((1 + t2400) ** (0.3e1 / 0.2e1))

        if Bindx == 748:
            t2402 = np.cos(phi)
            t2406 = 1 + t2402
            t2403 = t2406 ** 2
            t2404 = t2406 * t2403
            t2401 = -1 + t2402
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.455e3) * t2401 ** 2 * t2404 ** 2

        if Bindx == 749:
            t2407 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 7 * phi2)) * np.sqrt(0.455e3) * ((1 - t2407) ** (0.3e1 / 0.2e1)) * ((1 + t2407) ** (0.11e2 / 0.2e1)) * (2 * t2407 - 1)

        if Bindx == 750:
            t2409 = np.cos(phi)
            t2410 = t2409 ** 2
            t2411 = t2409 * t2410
            t2408 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.546e3) * t2408 ** 2 * (-t2409 + 1 + (-6 + 5 * t2411) * t2411 + (-9 + (15 * t2409 + 11) * t2410) * t2410)

        if Bindx == 751:
            t2415 = np.cos(phi)
            t2416 = t2415 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.13e2) * np.sqrt((1 - t2415)) * ((1 + t2415) ** (0.9e1 / 0.2e1)) * (-105 * t2416 - 3 + (70 * t2416 + 42) * t2415)

        if Bindx == 752:
            t2418 = np.cos(phi)
            t2419 = t2418 ** 2
            t2420 = t2418 * t2419
            t2423 = t2420 ** 2
            t2421 = t2419 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-4*1j) * (phi1 + phi2)) * (180 * t2419 + 770 * t2420 - 364 * t2423 - 9 + (-230 + 455 * t2421) * t2421 + (-1534 * t2421 + 910 * t2423 - 114) * t2418)

        if Bindx == 753:
            t2426 = np.cos(phi)
            t2427 = t2426 ** 2
            t2429 = t2427 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.15e2) * ((1 + t2426) ** (0.7e1 / 0.2e1)) * (-78 * t2427 - 455 * t2429 + 5 + (364 * t2427 + 182 * t2429 - 18) * t2426) * ((1 - t2426) ** (-0.1e1 / 0.2e1))

        if Bindx == 754:
            t2432 = np.cos(phi)
            t2433 = t2432 ** 2
            t2435 = t2433 ** 2
            t2434 = t2432 * t2433
            t2431 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.110e3) * t2431 ** 2 * (25 * t2433 - 91 * t2435 - 1 + (-78 + 91 * t2434) * t2434 + (91 * t2435 + 11) * t2432)

        if Bindx == 755:
            t2438 = np.cos(phi)
            t2439 = t2438 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (13 * t2438 + 1 + (-65 * t2438 - 39 + 130 * t2439) * t2439) * ((1 + t2438) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-1*1j) * (4 * phi1 + phi2)) * ((1 - t2438) ** (0.3e1 / 0.2e1))

        if Bindx == 756:
            t2447 = np.sin(phi)
            t2445 = t2447 ** 2
            t2442 = np.cos(phi)
            t2443 = t2442 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.154e3) * t2445 ** 2 * (1 + (-26 + 65 * t2443) * t2443)

        if Bindx == 757:
            t2448 = np.cos(phi)
            t2449 = t2448 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (-13 * t2448 + 1 + (65 * t2448 - 39 + 130 * t2449) * t2449) * ((1 + t2448) ** (0.3e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-1*1j) * (4 * phi1 - phi2)) * ((1 - t2448) ** (0.5e1 / 0.2e1))

        if Bindx == 758:
            t2453 = np.cos(phi)
            t2454 = t2453 ** 2
            t2459 = -91 * t2454 ** 2
            t2455 = t2453 * t2454
            t2452 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.110e3) * t2452 ** 2 * (25 * t2454 + t2459 - 1 + (78 + 91 * t2455) * t2455 + (t2459 - 11) * t2453)

        if Bindx == 759:
            t2460 = np.cos(phi)
            t2461 = t2460 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (-13 * t2460 - 5 + (273 * t2460 + 91 + 182 * t2461) * t2461) * np.sqrt((1 + t2460)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (4 * phi1 - 3 * phi2)) * ((1 - t2460) ** (0.7e1 / 0.2e1))

        if Bindx == 760:
            t2464 = np.cos(phi)
            t2465 = t2464 ** 2
            t2466 = t2464 * t2465
            t2469 = t2466 ** 2
            t2467 = t2465 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-4*1j) * (phi1 - phi2)) * (180 * t2465 - 770 * t2466 - 364 * t2469 - 9 + (-230 + 455 * t2467) * t2467 + (1534 * t2467 - 910 * t2469 + 114) * t2464)

        if Bindx == 761:
            t2472 = np.cos(phi)
            t2473 = t2472 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (105 * t2473 + 3 + (70 * t2473 + 42) * t2472) * np.sqrt((1 + t2472)) * np.sqrt(0.13e2) * np.exp((-1*1j) * (4 * phi1 - 5 * phi2)) * ((1 - t2472) ** (0.9e1 / 0.2e1))

        if Bindx == 762:
            t2476 = np.cos(phi)
            t2477 = t2476 ** 2
            t2478 = t2476 * t2477
            t2475 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.546e3) * t2475 ** 2 * (t2476 + 1 + (6 + 5 * t2478) * t2478 + (-9 + (-15 * t2476 + 11) * t2477) * t2477)

        if Bindx == 763:
            t2482 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (1 + 2 * t2482) * ((1 + t2482) ** (0.3e1 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((-1*1j) * (4 * phi1 - 7 * phi2)) * ((1 - t2482) ** (0.11e2 / 0.2e1))

        if Bindx == 764:
            t2484 = np.cos(phi)
            t2488 = -1 + t2484
            t2485 = t2488 ** 2
            t2486 = t2488 * t2485
            t2483 = 1 + t2484
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.455e3) * t2486 ** 2 * t2483 ** 2

        if Bindx == 765:
            t2489 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t2489) ** (0.5e1 / 0.2e1)) * ((1 + t2489) ** (0.11e2 / 0.2e1))

        if Bindx == 766:
            t2491 = np.cos(phi)
            t2495 = 1 + t2491
            t2492 = t2495 ** 2
            t2490 = -1 + t2491
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.273e3) * t2490 ** 2 * t2495 * t2492 ** 2 * (-3 + 8 * t2491)

        if Bindx == 767:
            t2496 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-3*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.910e3) * ((1 - t2496) ** (0.3e1 / 0.2e1)) * ((1 + t2496) ** (0.9e1 / 0.2e1)) * (1 + (-9 + 12 * t2496) * t2496)

        if Bindx == 768:
            t2498 = np.cos(phi)
            t2499 = t2498 ** 2
            t2501 = t2499 ** 2
            t2500 = t2498 * t2499
            t2497 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.195e3) * t2497 ** 2 * (-18 * t2499 - 7 * t2501 + 1 + (-90 + 56 * t2500) * t2500 + (105 * t2501 + 17) * t2498)

        if Bindx == 769:
            t2504 = np.cos(phi)
            t2505 = t2504 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t2504)) * ((1 + t2504) ** (0.7e1 / 0.2e1)) * (13 * t2504 - 5 + (-273 * t2504 + 91 + 182 * t2505) * t2505)

        if Bindx == 770:
            t2508 = np.cos(phi)
            t2509 = t2508 ** 2
            t2510 = t2508 * t2509
            t2513 = t2510 ** 2
            t2511 = t2509 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-3*1j) * (phi1 + phi2)) * (-459 * t2509 + 2107 * t2510 - 3913 * t2513 + 17 + (2235 + 2184 * t2511) * t2511 + (-4251 * t2511 + 2457 * t2513 - 249) * t2508)

        if Bindx == 771:
            t2516 = np.cos(phi)
            t2517 = t2516 ** 2
            t2519 = t2517 ** 2
            t2518 = t2516 * t2517
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * ((1 + t2516) ** (0.5e1 / 0.2e1)) * (-150 * t2517 + 455 * t2519 + 3 + (130 + 364 * t2518) * t2518 + (-819 * t2519 + 17) * t2516) * ((1 - t2516) ** (-0.1e1 / 0.2e1))

        if Bindx == 772:
            t2523 = np.cos(phi)
            t2524 = t2523 ** 2
            t2526 = t2524 ** 2
            t2525 = t2523 * t2524
            t2522 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 + phi2)) * np.sqrt(0.1155e4) * t2522 ** 2 * (30 * t2524 - 117 * t2526 - 1 + (-26 + 104 * t2525) * t2525 + (39 * t2526 + 3) * t2523)

        if Bindx == 773:
            t2529 = np.cos(phi)
            t2530 = t2529 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (3 + (-26 + 39 * t2530) * t2530) * t2529 * ((1 + t2529) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2310e4) * np.exp((-3*1j) * phi1) * ((1 - t2529) ** (0.3e1 / 0.2e1))

        if Bindx == 774:
            t2533 = np.cos(phi)
            t2534 = t2533 ** 2
            t2536 = t2534 ** 2
            t2535 = t2533 * t2534
            t2532 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - phi2)) * np.sqrt(0.1155e4) * t2532 ** 2 * (30 * t2534 - 117 * t2536 - 1 + (26 + 104 * t2535) * t2535 + (-39 * t2536 - 3) * t2533)

        if Bindx == 775:
            t2539 = np.cos(phi)
            t2540 = t2539 ** 2
            t2541 = t2540 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-130 * t2540 + 455 * t2541 + 3 + (364 * t2541 - 20) * t2539) * np.sqrt((1 + t2539)) * np.sqrt(0.66e2) * np.exp((-1*1j) * (3 * phi1 - 2 * phi2)) * ((1 - t2539) ** (0.5e1 / 0.2e1))

        if Bindx == 776:
            t2543 = np.cos(phi)
            t2544 = t2543 ** 2
            t2545 = t2543 * t2544
            t2548 = t2545 ** 2
            t2546 = t2544 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-3*1j) * (phi1 - phi2)) * (-459 * t2544 - 2107 * t2545 - 3913 * t2548 + 17 + (2235 + 2184 * t2546) * t2546 + (4251 * t2546 - 2457 * t2548 + 249) * t2543)

        if Bindx == 777:
            t2551 = np.cos(phi)
            t2552 = t2551 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (-13 * t2551 - 5 + (273 * t2551 + 91 + 182 * t2552) * t2552) * np.sqrt((1 + t2551)) * np.sqrt(0.15e2) * np.exp((-1*1j) * (3 * phi1 - 4 * phi2)) * ((1 - t2551) ** (0.7e1 / 0.2e1))

        if Bindx == 778:
            t2556 = np.cos(phi)
            t2557 = t2556 ** 2
            t2559 = t2557 ** 2
            t2558 = t2556 * t2557
            t2555 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.195e3) * t2555 ** 2 * (-18 * t2557 - 7 * t2559 + 1 + (90 + 56 * t2558) * t2558 + (-105 * t2559 - 17) * t2556)

        if Bindx == 779:
            t2562 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + (9 + 12 * t2562) * t2562) * ((1 + t2562) ** (0.3e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((-3*1j) * (phi1 - 2 * phi2)) * ((1 - t2562) ** (0.9e1 / 0.2e1))

        if Bindx == 780:
            t2569 = np.sin(phi)
            t2567 = t2569 ** 2
            t2563 = np.cos(phi)
            t2564 = t2563 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.273e3) * t2567 ** 2 * (t2563 - 3 + (-21 * t2563 + 15 + 8 * t2564) * t2564)

        if Bindx == 781:
            t2570 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t2570) ** (0.11e2 / 0.2e1)) * ((1 + t2570) ** (0.5e1 / 0.2e1))

        if Bindx == 782:
            t2571 = np.cos(phi)
            t2578 = -1 + t2571
            t2577 = 1 + t2571
            t2574 = t2577 ** 2
            t2572 = t2578 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.2002e4) * t2578 * t2572 * t2577 * t2574 ** 2

        if Bindx == 783:
            t2579 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t2579) ** (0.5e1 / 0.2e1)) * ((1 + t2579) ** (0.9e1 / 0.2e1)) * (-1 + 4 * t2579)

        if Bindx == 784:
            t2585 = np.sin(phi)
            t2583 = t2585 ** 2
            t2580 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15015e5) * t2583 ** 2 * t2580 * (-1 + (2 * t2580 + 3) * t2580 ** 2)

        if Bindx == 785:
            t2586 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 5 * phi2)) * np.sqrt(0.1430e4) * ((1 - t2586) ** (0.3e1 / 0.2e1)) * ((1 + t2586) ** (0.7e1 / 0.2e1)) * (1 + (28 * t2586 - 21) * t2586 ** 2)

        if Bindx == 786:
            t2590 = np.cos(phi)
            t2591 = t2590 ** 2
            t2593 = t2591 ** 2
            t2592 = t2590 * t2591
            t2589 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.110e3) * t2589 ** 2 * (25 * t2591 - 91 * t2593 - 1 + (-78 + 91 * t2592) * t2592 + (91 * t2593 + 11) * t2590)

        if Bindx == 787:
            t2596 = np.cos(phi)
            t2597 = t2596 ** 2
            t2598 = t2597 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * np.sqrt((1 - t2596)) * ((1 + t2596) ** (0.5e1 / 0.2e1)) * (130 * t2597 - 455 * t2598 - 3 + (364 * t2598 - 20) * t2596)

        if Bindx == 788:
            t2600 = np.cos(phi)
            t2601 = t2600 ** 2
            t2602 = t2600 * t2601
            t2605 = t2602 ** 2
            t2603 = t2601 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 + phi2)) * (-512 * t2601 + 671 * t2602 - 4004 * t2605 + 16 + (2530 + 2002 * t2603) * t2603 + (-1573 * t2603 + 1001 * t2605 - 67) * t2600)

        if Bindx == 789:
            t2608 = np.cos(phi)
            t2609 = t2608 ** 2
            t2610 = t2608 * t2609
            t2612 = t2610 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (2 * phi1 + phi2)) * np.sqrt(0.70e2) * ((1 + t2608) ** (0.3e1 / 0.2e1)) * (-220 * t2610 - 1001 * t2612 + 1 + (-99 + 715 * t2609) * t2609 + (572 * t2612 + 32) * t2608) * ((1 - t2608) ** (-0.1e1 / 0.2e1))

        if Bindx == 790:
            t2615 = np.cos(phi)
            t2616 = t2615 ** 2
            t2617 = t2616 ** 2
            t2614 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.35e2) * t2614 ** 2 * (-143 * t2617 - 1 + (143 * t2617 + 33) * t2616)

        if Bindx == 791:
            t2619 = np.cos(phi)
            t2620 = t2619 ** 2
            t2622 = t2620 ** 2
            t2621 = t2619 * t2620
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (66 * t2620 - 429 * t2622 - 1 + (-286 + 572 * t2621) * t2621 + (429 * t2622 + 33) * t2619) * np.sqrt((1 + t2619)) * np.sqrt(0.70e2) * np.exp((-1*1j) * (2 * phi1 - phi2)) * ((1 - t2619) ** (0.3e1 / 0.2e1))

        if Bindx == 792:
            t2625 = np.cos(phi)
            t2626 = t2625 ** 2
            t2627 = t2625 * t2626
            t2630 = t2627 ** 2
            t2628 = t2626 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - phi2)) * (-512 * t2626 - 671 * t2627 - 4004 * t2630 + 16 + (2530 + 2002 * t2628) * t2628 + (1573 * t2628 - 1001 * t2630 + 67) * t2625)

        if Bindx == 793:
            t2633 = np.cos(phi)
            t2634 = t2633 ** 2
            t2635 = t2634 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-130 * t2634 + 455 * t2635 + 3 + (364 * t2635 - 20) * t2633) * np.sqrt((1 + t2633)) * np.sqrt(0.66e2) * np.exp((-1*1j) * (2 * phi1 - 3 * phi2)) * ((1 - t2633) ** (0.5e1 / 0.2e1))

        if Bindx == 794:
            t2638 = np.cos(phi)
            t2639 = t2638 ** 2
            t2644 = -91 * t2639 ** 2
            t2640 = t2638 * t2639
            t2637 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.110e3) * t2637 ** 2 * (25 * t2639 + t2644 - 1 + (78 + 91 * t2640) * t2640 + (t2644 - 11) * t2638)

        if Bindx == 795:
            t2645 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (28 * t2645 + 21) * t2645 ** 2) * ((1 + t2645) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-1*1j) * (2 * phi1 - 5 * phi2)) * ((1 - t2645) ** (0.7e1 / 0.2e1))

        if Bindx == 796:
            t2653 = np.sin(phi)
            t2651 = t2653 ** 2
            t2648 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((-2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15015e5) * t2651 ** 2 * t2648 * (1 + (2 * t2648 - 3) * t2648 ** 2)

        if Bindx == 797:
            t2654 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (1 + 4 * t2654) * ((1 + t2654) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-1*1j) * (2 * phi1 - 7 * phi2)) * ((1 - t2654) ** (0.9e1 / 0.2e1))

        if Bindx == 798:
            t2655 = np.cos(phi)
            t2662 = -1 + t2655
            t2661 = 1 + t2655
            t2659 = t2661 ** 2
            t2656 = t2662 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.2002e4) * t2662 * t2656 ** 2 * t2661 * t2659

        if Bindx == 799:
            t2663 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 + 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t2663) ** (0.7e1 / 0.2e1)) * ((1 + t2663) ** (0.9e1 / 0.2e1))

        if Bindx == 800:
            t2668 = np.sin(phi)
            t2665 = t2668 ** 2
            t2666 = t2668 * t2665
            t2664 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 7 * phi2)) * np.sqrt(0.715e3) * t2666 ** 2 * (-1 + (7 + 8 * t2664) * t2664)

        if Bindx == 801:
            t2669 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t2669) ** (0.5e1 / 0.2e1)) * ((1 + t2669) ** (0.7e1 / 0.2e1)) * (-1 + (-5 + 20 * t2669) * t2669)

        if Bindx == 802:
            t2676 = np.sin(phi)
            t2674 = t2676 ** 2
            t2670 = np.cos(phi)
            t2671 = t2670 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 5 * phi2)) * np.sqrt(0.1001e4) * t2674 ** 2 * (-5 * t2670 + 1 + (25 * t2670 - 21 + 40 * t2671) * t2671)

        if Bindx == 803:
            t2677 = np.cos(phi)
            t2678 = t2677 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.77e2) * ((1 - t2677) ** (0.3e1 / 0.2e1)) * ((1 + t2677) ** (0.5e1 / 0.2e1)) * (13 * t2677 + 1 + (-65 * t2677 - 39 + 130 * t2678) * t2678)

        if Bindx == 804:
            t2682 = np.cos(phi)
            t2683 = t2682 ** 2
            t2685 = t2683 ** 2
            t2684 = t2682 * t2683
            t2681 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.1155e4) * t2681 ** 2 * (30 * t2683 - 117 * t2685 - 1 + (-26 + 104 * t2684) * t2684 + (39 * t2685 + 3) * t2682)

        if Bindx == 805:
            t2688 = np.cos(phi)
            t2689 = t2688 ** 2
            t2694 = -429 * t2689 ** 2
            t2690 = t2688 * t2689
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((-1*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.70e2) * np.sqrt((1 - t2688)) * ((1 + t2688) ** (0.3e1 / 0.2e1)) * (66 * t2689 + t2694 - 1 + (286 + 572 * t2690) * t2690 + (t2694 - 33) * t2688)

        if Bindx == 806:
            t2695 = np.cos(phi)
            t2696 = t2695 ** 2
            t2697 = t2695 * t2696
            t2700 = t2697 ** 2
            t2698 = t2696 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 + phi2)) * (-1225 * t2696 + 385 * t2697 - 11011 * t2700 + 35 + (6545 + 5720 * t2698) * t2698 + (-1001 * t2698 + 715 * t2700 - 35) * t2695)

        if Bindx == 807:
            t2703 = np.cos(phi)
            t2704 = t2703 ** 2
            t2705 = t2703 * t2704
            t2710 = -1001 * t2704 ** 2 + 715 * t2705 ** 2 - 35
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 + t2703)) * t2703 * (t2710 * t2703 - 385 * t2704 + 385 * t2705 - t2710) * ((1 - t2703) ** (-0.1e1 / 0.2e1))

        if Bindx == 808:
            t2711 = np.cos(phi)
            t2712 = t2711 ** 2
            t2713 = t2711 * t2712
            t2716 = t2713 ** 2
            t2714 = t2712 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - phi2)) * (-1225 * t2712 - 385 * t2713 - 11011 * t2716 + 35 + (6545 + 5720 * t2714) * t2714 + (1001 * t2714 - 715 * t2716 + 35) * t2711)

        if Bindx == 809:
            t2719 = np.cos(phi)
            t2720 = t2719 ** 2
            t2722 = t2720 ** 2
            t2721 = t2719 * t2720
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (66 * t2720 - 429 * t2722 - 1 + (-286 + 572 * t2721) * t2721 + (429 * t2722 + 33) * t2719) * np.sqrt((1 + t2719)) * np.sqrt(0.70e2) * np.exp((-1*1j) * (phi1 - 2 * phi2)) * ((1 - t2719) ** (0.3e1 / 0.2e1))

        if Bindx == 810:
            t2726 = np.cos(phi)
            t2727 = t2726 ** 2
            t2729 = t2727 ** 2
            t2728 = t2726 * t2727
            t2725 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.1155e4) * t2725 ** 2 * (30 * t2727 - 117 * t2729 - 1 + (26 + 104 * t2728) * t2728 + (-39 * t2729 - 3) * t2726)

        if Bindx == 811:
            t2732 = np.cos(phi)
            t2733 = t2732 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * (-13 * t2732 + 1 + (65 * t2732 - 39 + 130 * t2733) * t2733) * ((1 + t2732) ** (0.3e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-1*1j) * (phi1 - 4 * phi2)) * ((1 - t2732) ** (0.5e1 / 0.2e1))

        if Bindx == 812:
            t2742 = np.sin(phi)
            t2740 = t2742 ** 2
            t2736 = np.cos(phi)
            t2737 = t2736 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 5 * phi2)) * np.sqrt(0.1001e4) * t2740 ** 2 * (5 * t2736 + 1 + (-25 * t2736 - 21 + 40 * t2737) * t2737)

        if Bindx == 813:
            t2743 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (-1 + (5 + 20 * t2743) * t2743) * ((1 + t2743) ** (0.5e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((-1*1j) * (phi1 - 6 * phi2)) * ((1 - t2743) ** (0.7e1 / 0.2e1))

        if Bindx == 814:
            t2748 = np.sin(phi)
            t2745 = t2748 ** 2
            t2746 = t2748 * t2745
            t2744 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((-1*1j) * (phi1 - 7 * phi2)) * np.sqrt(0.715e3) * t2746 ** 2 * (-1 + (-7 + 8 * t2744) * t2744)

        if Bindx == 815:
            t2749 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((-1*1j) * (phi1 - 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t2749) ** (0.9e1 / 0.2e1)) * ((1 + t2749) ** (0.7e1 / 0.2e1))

        if Bindx == 816:
            t2753 = np.sin(phi)
            t2750 = t2753 ** 2
            t2751 = t2750 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((-8*1j) * phi2) * np.sqrt(0.1430e4) * t2751 ** 2

        if Bindx == 817:
            t2754 = np.cos(phi)
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((-7*1j) * phi2) * np.sqrt(0.1430e4) * ((1 - t2754) ** (0.7e1 / 0.2e1)) * ((1 + t2754) ** (0.7e1 / 0.2e1)) * t2754

        if Bindx == 818:
            t2759 = np.sin(phi)
            t2756 = t2759 ** 2
            t2757 = t2759 * t2756
            t2755 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-6*1j) * phi2) * np.sqrt(0.429e3) * t2757 ** 2 * (15 * t2755 ** 2 - 1)

        if Bindx == 819:
            t2760 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((-5*1j) * phi2) * np.sqrt(0.2002e4) * ((1 - t2760) ** (0.5e1 / 0.2e1)) * ((1 + t2760) ** (0.5e1 / 0.2e1)) * t2760 * (5 * t2760 ** 2 - 1)

        if Bindx == 820:
            t2766 = np.sin(phi)
            t2764 = t2766 ** 2
            t2761 = np.cos(phi)
            t2762 = t2761 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((-4*1j) * phi2) * np.sqrt(0.154e3) * t2764 ** 2 * (1 + (-26 + 65 * t2762) * t2762)

        if Bindx == 821:
            t2767 = np.cos(phi)
            t2768 = t2767 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((-3*1j) * phi2) * np.sqrt(0.2310e4) * ((1 - t2767) ** (0.3e1 / 0.2e1)) * ((1 + t2767) ** (0.3e1 / 0.2e1)) * t2767 * (3 + (-26 + 39 * t2768) * t2768)

        if Bindx == 822:
            t2771 = np.cos(phi)
            t2772 = t2771 ** 2
            t2773 = t2772 ** 2
            t2770 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((-2*1j) * phi2) * np.sqrt(0.35e2) * t2770 ** 2 * (-143 * t2773 - 1 + (143 * t2773 + 33) * t2772)

        if Bindx == 823:
            t2775 = np.cos(phi)
            t2776 = t2775 ** 2
            t2777 = t2776 ** 2
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((-1*1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 - t2775)) * np.sqrt((1 + t2775)) * t2775 * (-1001 * t2777 - 35 + (715 * t2777 + 385) * t2776)

        if Bindx == 824:
            t2779 = np.cos(phi)
            t2780 = t2779 ** 2
            t2781 = t2780 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t2780 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t2780 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t2781) * t2781

        if Bindx == 825:
            t2784 = np.cos(phi)
            t2785 = t2784 ** 2
            t2786 = t2784 * t2785
            t2791 = -1001 * t2785 ** 2 + 715 * t2786 ** 2 - 35
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((1j) * phi2) * np.sqrt(0.2e1) * np.sqrt((1 + t2784)) * t2784 * (t2791 * t2784 - 385 * t2785 + 385 * t2786 - t2791) * ((1 - t2784) ** (-0.1e1 / 0.2e1))

        if Bindx == 826:
            t2793 = np.cos(phi)
            t2794 = t2793 ** 2
            t2795 = t2794 ** 2
            t2792 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((2*1j) * phi2) * np.sqrt(0.35e2) * t2792 ** 2 * (-143 * t2795 - 1 + (143 * t2795 + 33) * t2794)

        if Bindx == 827:
            t2797 = np.cos(phi)
            t2798 = t2797 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (3 + (-26 + 39 * t2798) * t2798) * t2797 * ((1 + t2797) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2310e4) * np.exp((3*1j) * phi2) * ((1 - t2797) ** (0.3e1 / 0.2e1))

        if Bindx == 828:
            t2805 = np.sin(phi)
            t2803 = t2805 ** 2
            t2800 = np.cos(phi)
            t2801 = t2800 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((4*1j) * phi2) * np.sqrt(0.154e3) * t2803 ** 2 * (1 + (-26 + 65 * t2801) * t2801)

        if Bindx == 829:
            t2806 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * (5 * t2806 ** 2 - 1) * t2806 * ((1 + t2806) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((5*1j) * phi2) * ((1 - t2806) ** (0.5e1 / 0.2e1))

        if Bindx == 830:
            t2811 = np.sin(phi)
            t2808 = t2811 ** 2
            t2809 = t2811 * t2808
            t2807 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((6*1j) * phi2) * np.sqrt(0.429e3) * t2809 ** 2 * (15 * t2807 ** 2 - 1)

        if Bindx == 831:
            t2812 = np.cos(phi)
            t2816 = -4 * t2812
            t2813 = t2812 ** 2
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * t2812 * (t2816 + 1 + (t2816 + 6 + t2813) * t2813) * ((1 + t2812) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((7*1j) * phi2) * ((1 - t2812) ** (-0.1e1 / 0.2e1))

        if Bindx == 832:
            t2820 = np.sin(phi)
            t2817 = t2820 ** 2
            t2818 = t2817 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((8*1j) * phi2) * np.sqrt(0.1430e4) * t2818 ** 2

        if Bindx == 833:
            t2821 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (phi1 - 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t2821) ** (0.9e1 / 0.2e1)) * ((1 + t2821) ** (0.7e1 / 0.2e1))

        if Bindx == 834:
            t2826 = np.sin(phi)
            t2823 = t2826 ** 2
            t2824 = t2826 * t2823
            t2822 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - 7 * phi2)) * np.sqrt(0.715e3) * t2824 ** 2 * (-1 + (-7 + 8 * t2822) * t2822)

        if Bindx == 835:
            t2827 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 6 * phi2)) * np.sqrt(0.858e3) * ((1 - t2827) ** (0.7e1 / 0.2e1)) * ((1 + t2827) ** (0.5e1 / 0.2e1)) * (-1 + (5 + 20 * t2827) * t2827)

        if Bindx == 836:
            t2834 = np.sin(phi)
            t2832 = t2834 ** 2
            t2828 = np.cos(phi)
            t2829 = t2828 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - 5 * phi2)) * np.sqrt(0.1001e4) * t2832 ** 2 * (5 * t2828 + 1 + (-25 * t2828 - 21 + 40 * t2829) * t2829)

        if Bindx == 837:
            t2835 = np.cos(phi)
            t2836 = t2835 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (phi1 - 4 * phi2)) * np.sqrt(0.77e2) * ((1 - t2835) ** (0.5e1 / 0.2e1)) * ((1 + t2835) ** (0.3e1 / 0.2e1)) * (-13 * t2835 + 1 + (65 * t2835 - 39 + 130 * t2836) * t2836)

        if Bindx == 838:
            t2840 = np.cos(phi)
            t2841 = t2840 ** 2
            t2843 = t2841 ** 2
            t2842 = t2840 * t2841
            t2839 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - 3 * phi2)) * np.sqrt(0.1155e4) * t2839 ** 2 * (30 * t2841 - 117 * t2843 - 1 + (26 + 104 * t2842) * t2842 + (-39 * t2843 - 3) * t2840)

        if Bindx == 839:
            t2846 = np.cos(phi)
            t2847 = t2846 ** 2
            t2849 = t2847 ** 2
            t2848 = t2846 * t2847
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (phi1 - 2 * phi2)) * np.sqrt(0.70e2) * ((1 - t2846) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t2846)) * (66 * t2847 - 429 * t2849 - 1 + (-286 + 572 * t2848) * t2848 + (429 * t2849 + 33) * t2846)

        if Bindx == 840:
            t2852 = np.cos(phi)
            t2853 = t2852 ** 2
            t2854 = t2852 * t2853
            t2857 = t2854 ** 2
            t2855 = t2853 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 - phi2)) * (-1225 * t2853 - 385 * t2854 - 11011 * t2857 + 35 + (6545 + 5720 * t2855) * t2855 + (1001 * t2855 - 715 * t2857 + 35) * t2852)

        if Bindx == 841:
            t2860 = np.cos(phi)
            t2861 = t2860 ** 2
            t2862 = t2861 ** 2
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 - t2860)) * np.sqrt((1 + t2860)) * t2860 * (-1001 * t2862 - 35 + (715 * t2862 + 385) * t2861)

        if Bindx == 842:
            t2864 = np.cos(phi)
            t2865 = t2864 ** 2
            t2866 = t2864 * t2865
            t2869 = t2866 ** 2
            t2867 = t2865 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + phi2)) * (-1225 * t2865 + 385 * t2866 - 11011 * t2869 + 35 + (6545 + 5720 * t2867) * t2867 + (-1001 * t2867 + 715 * t2869 - 35) * t2864)

        if Bindx == 843:
            t2872 = np.cos(phi)
            t2873 = t2872 ** 2
            t2874 = t2872 * t2873
            t2876 = t2874 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (phi1 + 2 * phi2)) * np.sqrt(0.70e2) * ((1 + t2872) ** (0.3e1 / 0.2e1)) * (-220 * t2874 - 1001 * t2876 + 1 + (-99 + 715 * t2873) * t2873 + (572 * t2876 + 32) * t2872) * ((1 - t2872) ** (-0.1e1 / 0.2e1))

        if Bindx == 844:
            t2879 = np.cos(phi)
            t2880 = t2879 ** 2
            t2882 = t2880 ** 2
            t2881 = t2879 * t2880
            t2878 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + 3 * phi2)) * np.sqrt(0.1155e4) * t2878 ** 2 * (30 * t2880 - 117 * t2882 - 1 + (-26 + 104 * t2881) * t2881 + (39 * t2882 + 3) * t2879)

        if Bindx == 845:
            t2885 = np.cos(phi)
            t2886 = t2885 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (13 * t2885 + 1 + (-65 * t2885 - 39 + 130 * t2886) * t2886) * ((1 + t2885) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((1j) * (phi1 + 4 * phi2)) * ((1 - t2885) ** (0.3e1 / 0.2e1))

        if Bindx == 846:
            t2895 = np.sin(phi)
            t2893 = t2895 ** 2
            t2889 = np.cos(phi)
            t2890 = t2889 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + 5 * phi2)) * np.sqrt(0.1001e4) * t2893 ** 2 * (-5 * t2889 + 1 + (25 * t2889 - 21 + 40 * t2890) * t2890)

        if Bindx == 847:
            t2896 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + (-5 + 20 * t2896) * t2896) * ((1 + t2896) ** (0.7e1 / 0.2e1)) * np.sqrt(0.858e3) * np.exp((1j) * (phi1 + 6 * phi2)) * ((1 - t2896) ** (0.5e1 / 0.2e1))

        if Bindx == 848:
            t2901 = np.sin(phi)
            t2898 = t2901 ** 2
            t2899 = t2901 * t2898
            t2897 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (phi1 + 7 * phi2)) * np.sqrt(0.715e3) * t2899 ** 2 * (-1 + (7 + 8 * t2897) * t2897)

        if Bindx == 849:
            t2902 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (phi1 + 8 * phi2)) * np.sqrt(0.715e3) * ((1 - t2902) ** (0.7e1 / 0.2e1)) * ((1 + t2902) ** (0.9e1 / 0.2e1))

        if Bindx == 850:
            t2903 = np.cos(phi)
            t2910 = -1 + t2903
            t2909 = 1 + t2903
            t2907 = t2909 ** 2
            t2904 = t2910 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (phi1 - 4 * phi2)) * np.sqrt(0.2002e4) * t2910 * t2904 ** 2 * t2909 * t2907

        if Bindx == 851:
            t2911 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 7 * phi2)) * np.sqrt(0.2002e4) * ((1 - t2911) ** (0.9e1 / 0.2e1)) * ((1 + t2911) ** (0.5e1 / 0.2e1)) * (1 + 4 * t2911)

        if Bindx == 852:
            t2917 = np.sin(phi)
            t2915 = t2917 ** 2
            t2912 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 3 * phi2)) * np.sqrt(0.15015e5) * t2915 ** 2 * t2912 * (1 + (2 * t2912 - 3) * t2912 ** 2)

        if Bindx == 853:
            t2918 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 5 * phi2)) * np.sqrt(0.1430e4) * ((1 - t2918) ** (0.7e1 / 0.2e1)) * ((1 + t2918) ** (0.3e1 / 0.2e1)) * (-1 + (28 * t2918 + 21) * t2918 ** 2)

        if Bindx == 854:
            t2922 = np.cos(phi)
            t2923 = t2922 ** 2
            t2928 = -91 * t2923 ** 2
            t2924 = t2922 * t2923
            t2921 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.110e3) * t2921 ** 2 * (25 * t2923 + t2928 - 1 + (78 + 91 * t2924) * t2924 + (t2928 - 11) * t2922)

        if Bindx == 855:
            t2929 = np.cos(phi)
            t2930 = t2929 ** 2
            t2931 = t2930 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.66e2) * ((1 - t2929) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t2929)) * (-130 * t2930 + 455 * t2931 + 3 + (364 * t2931 - 20) * t2929)

        if Bindx == 856:
            t2933 = np.cos(phi)
            t2934 = t2933 ** 2
            t2935 = t2933 * t2934
            t2938 = t2935 ** 2
            t2936 = t2934 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 - phi2)) * (-512 * t2934 - 671 * t2935 - 4004 * t2938 + 16 + (2530 + 2002 * t2936) * t2936 + (1573 * t2936 - 1001 * t2938 + 67) * t2933)

        if Bindx == 857:
            t2941 = np.cos(phi)
            t2942 = t2941 ** 2
            t2944 = t2942 ** 2
            t2943 = t2941 * t2942
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 - phi2)) * np.sqrt(0.70e2) * ((1 - t2941) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t2941)) * (66 * t2942 - 429 * t2944 - 1 + (-286 + 572 * t2943) * t2943 + (429 * t2944 + 33) * t2941)

        if Bindx == 858:
            t2948 = np.cos(phi)
            t2949 = t2948 ** 2
            t2950 = t2949 ** 2
            t2947 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((2*1j) * phi1) * np.sqrt(0.35e2) * t2947 ** 2 * (-143 * t2950 - 1 + (143 * t2950 + 33) * t2949)

        if Bindx == 859:
            t2952 = np.cos(phi)
            t2953 = t2952 ** 2
            t2958 = -429 * t2953 ** 2
            t2954 = t2952 * t2953
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + phi2)) * np.sqrt(0.70e2) * np.sqrt((1 - t2952)) * ((1 + t2952) ** (0.3e1 / 0.2e1)) * (66 * t2953 + t2958 - 1 + (286 + 572 * t2954) * t2954 + (t2958 - 33) * t2952)

        if Bindx == 860:
            t2959 = np.cos(phi)
            t2960 = t2959 ** 2
            t2961 = t2959 * t2960
            t2964 = t2961 ** 2
            t2962 = t2960 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 + phi2)) * (-512 * t2960 + 671 * t2961 - 4004 * t2964 + 16 + (2530 + 2002 * t2962) * t2962 + (-1573 * t2962 + 1001 * t2964 - 67) * t2959)

        if Bindx == 861:
            t2967 = np.cos(phi)
            t2968 = t2967 ** 2
            t2970 = t2968 ** 2
            t2969 = t2967 * t2968
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.66e2) * ((1 + t2967) ** (0.5e1 / 0.2e1)) * (-150 * t2968 + 455 * t2970 + 3 + (130 + 364 * t2969) * t2969 + (-819 * t2970 + 17) * t2967) * ((1 - t2967) ** (-0.1e1 / 0.2e1))

        if Bindx == 862:
            t2974 = np.cos(phi)
            t2975 = t2974 ** 2
            t2977 = t2975 ** 2
            t2976 = t2974 * t2975
            t2973 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.110e3) * t2973 ** 2 * (25 * t2975 - 91 * t2977 - 1 + (-78 + 91 * t2976) * t2976 + (91 * t2977 + 11) * t2974)

        if Bindx == 863:
            t2980 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (28 * t2980 - 21) * t2980 ** 2) * ((1 + t2980) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((1j) * (2 * phi1 + 5 * phi2)) * ((1 - t2980) ** (0.3e1 / 0.2e1))

        if Bindx == 864:
            t2988 = np.sin(phi)
            t2986 = t2988 ** 2
            t2983 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (phi1 + 3 * phi2)) * np.sqrt(0.15015e5) * t2986 ** 2 * t2983 * (-1 + (2 * t2983 + 3) * t2983 ** 2)

        if Bindx == 865:
            t2989 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * (-1 + 4 * t2989) * ((1 + t2989) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((1j) * (2 * phi1 + 7 * phi2)) * ((1 - t2989) ** (0.5e1 / 0.2e1))

        if Bindx == 866:
            t2990 = np.cos(phi)
            t2997 = -1 + t2990
            t2996 = 1 + t2990
            t2993 = t2996 ** 2
            t2991 = t2997 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (phi1 + 4 * phi2)) * np.sqrt(0.2002e4) * t2997 * t2991 * t2996 * t2993 ** 2

        if Bindx == 867:
            t2998 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t2998) ** (0.11e2 / 0.2e1)) * ((1 + t2998) ** (0.5e1 / 0.2e1))

        if Bindx == 868:
            t3000 = np.cos(phi)
            t3004 = -1 + t3000
            t3001 = t3004 ** 2
            t2999 = 1 + t3000
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 7 * phi2)) * np.sqrt(0.273e3) * t3004 * t3001 ** 2 * t2999 ** 2 * (3 + 8 * t3000)

        if Bindx == 869:
            t3005 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((3*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.910e3) * ((1 - t3005) ** (0.9e1 / 0.2e1)) * ((1 + t3005) ** (0.3e1 / 0.2e1)) * (1 + (9 + 12 * t3005) * t3005)

        if Bindx == 870:
            t3007 = np.cos(phi)
            t3008 = t3007 ** 2
            t3010 = t3008 ** 2
            t3009 = t3007 * t3008
            t3006 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - 5 * phi2)) * np.sqrt(0.195e3) * t3006 ** 2 * (-18 * t3008 - 7 * t3010 + 1 + (90 + 56 * t3009) * t3009 + (-105 * t3010 - 17) * t3007)

        if Bindx == 871:
            t3013 = np.cos(phi)
            t3014 = t3013 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.15e2) * ((1 - t3013) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t3013)) * (-13 * t3013 - 5 + (273 * t3013 + 91 + 182 * t3014) * t3014)

        if Bindx == 872:
            t3017 = np.cos(phi)
            t3018 = t3017 ** 2
            t3019 = t3017 * t3018
            t3022 = t3019 ** 2
            t3020 = t3018 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((3*1j) * (phi1 - phi2)) * (-459 * t3018 - 2107 * t3019 - 3913 * t3022 + 17 + (2235 + 2184 * t3020) * t3020 + (4251 * t3020 - 2457 * t3022 + 249) * t3017)

        if Bindx == 873:
            t3025 = np.cos(phi)
            t3026 = t3025 ** 2
            t3027 = t3026 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.66e2) * ((1 - t3025) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t3025)) * (-130 * t3026 + 455 * t3027 + 3 + (364 * t3027 - 20) * t3025)

        if Bindx == 874:
            t3030 = np.cos(phi)
            t3031 = t3030 ** 2
            t3033 = t3031 ** 2
            t3032 = t3030 * t3031
            t3029 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 - phi2)) * np.sqrt(0.1155e4) * t3029 ** 2 * (30 * t3031 - 117 * t3033 - 1 + (26 + 104 * t3032) * t3032 + (-39 * t3033 - 3) * t3030)

        if Bindx == 875:
            t3036 = np.cos(phi)
            t3037 = t3036 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.2310e4) * ((1 - t3036) ** (0.3e1 / 0.2e1)) * ((1 + t3036) ** (0.3e1 / 0.2e1)) * t3036 * (3 + (-26 + 39 * t3037) * t3037)

        if Bindx == 876:
            t3040 = np.cos(phi)
            t3041 = t3040 ** 2
            t3043 = t3041 ** 2
            t3042 = t3040 * t3041
            t3039 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + phi2)) * np.sqrt(0.1155e4) * t3039 ** 2 * (30 * t3041 - 117 * t3043 - 1 + (-26 + 104 * t3042) * t3042 + (39 * t3043 + 3) * t3040)

        if Bindx == 877:
            t3046 = np.cos(phi)
            t3047 = t3046 ** 2
            t3048 = t3047 ** 2
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.66e2) * np.sqrt((1 - t3046)) * ((1 + t3046) ** (0.5e1 / 0.2e1)) * (130 * t3047 - 455 * t3048 - 3 + (364 * t3048 - 20) * t3046)

        if Bindx == 878:
            t3050 = np.cos(phi)
            t3051 = t3050 ** 2
            t3052 = t3050 * t3051
            t3055 = t3052 ** 2
            t3053 = t3051 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((3*1j) * (phi1 + phi2)) * (-459 * t3051 + 2107 * t3052 - 3913 * t3055 + 17 + (2235 + 2184 * t3053) * t3053 + (-4251 * t3053 + 2457 * t3055 - 249) * t3050)

        if Bindx == 879:
            t3058 = np.cos(phi)
            t3059 = t3058 ** 2
            t3061 = t3059 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.15e2) * ((1 + t3058) ** (0.7e1 / 0.2e1)) * (-78 * t3059 - 455 * t3061 + 5 + (364 * t3059 + 182 * t3061 - 18) * t3058) * ((1 - t3058) ** (-0.1e1 / 0.2e1))

        if Bindx == 880:
            t3064 = np.cos(phi)
            t3065 = t3064 ** 2
            t3067 = t3065 ** 2
            t3066 = t3064 * t3065
            t3063 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 5 * phi2)) * np.sqrt(0.195e3) * t3063 ** 2 * (-18 * t3065 - 7 * t3067 + 1 + (-90 + 56 * t3066) * t3066 + (105 * t3067 + 17) * t3064)

        if Bindx == 881:
            t3070 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * (1 + (-9 + 12 * t3070) * t3070) * ((1 + t3070) ** (0.9e1 / 0.2e1)) * np.sqrt(0.910e3) * np.exp((3*1j) * (phi1 + 2 * phi2)) * ((1 - t3070) ** (0.3e1 / 0.2e1))

        if Bindx == 882:
            t3077 = np.sin(phi)
            t3075 = t3077 ** 2
            t3071 = np.cos(phi)
            t3072 = t3071 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (3 * phi1 + 7 * phi2)) * np.sqrt(0.273e3) * t3075 ** 2 * (-t3071 - 3 + (21 * t3071 + 15 + 8 * t3072) * t3072)

        if Bindx == 883:
            t3078 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (3 * phi1 + 8 * phi2)) * np.sqrt(0.273e3) * ((1 - t3078) ** (0.5e1 / 0.2e1)) * ((1 + t3078) ** (0.11e2 / 0.2e1))

        if Bindx == 884:
            t3080 = np.cos(phi)
            t3084 = -1 + t3080
            t3081 = t3084 ** 2
            t3082 = t3084 * t3081
            t3079 = 1 + t3080
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (phi1 - 2 * phi2)) * np.sqrt(0.455e3) * t3082 ** 2 * t3079 ** 2

        if Bindx == 885:
            t3085 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 7 * phi2)) * np.sqrt(0.455e3) * ((1 - t3085) ** (0.11e2 / 0.2e1)) * ((1 + t3085) ** (0.3e1 / 0.2e1)) * (1 + 2 * t3085)

        if Bindx == 886:
            t3087 = np.cos(phi)
            t3088 = t3087 ** 2
            t3089 = t3087 * t3088
            t3086 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - 3 * phi2)) * np.sqrt(0.546e3) * t3086 ** 2 * (t3087 + 1 + (6 + 5 * t3089) * t3089 + (-9 + (-15 * t3087 + 11) * t3088) * t3088)

        if Bindx == 887:
            t3093 = np.cos(phi)
            t3094 = t3093 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 5 * phi2)) * np.sqrt(0.13e2) * ((1 - t3093) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t3093)) * (105 * t3094 + 3 + (70 * t3094 + 42) * t3093)

        if Bindx == 888:
            t3096 = np.cos(phi)
            t3097 = t3096 ** 2
            t3098 = t3096 * t3097
            t3101 = t3098 ** 2
            t3099 = t3097 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((4*1j) * (phi1 - phi2)) * (180 * t3097 - 770 * t3098 - 364 * t3101 - 9 + (-230 + 455 * t3099) * t3099 + (1534 * t3099 - 910 * t3101 + 114) * t3096)

        if Bindx == 889:
            t3104 = np.cos(phi)
            t3105 = t3104 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.15e2) * ((1 - t3104) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t3104)) * (-13 * t3104 - 5 + (273 * t3104 + 91 + 182 * t3105) * t3105)

        if Bindx == 890:
            t3109 = np.cos(phi)
            t3110 = t3109 ** 2
            t3115 = -91 * t3110 ** 2
            t3111 = t3109 * t3110
            t3108 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 - phi2)) * np.sqrt(0.110e3) * t3108 ** 2 * (25 * t3110 + t3115 - 1 + (78 + 91 * t3111) * t3111 + (t3115 - 11) * t3109)

        if Bindx == 891:
            t3116 = np.cos(phi)
            t3117 = t3116 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 - phi2)) * np.sqrt(0.77e2) * ((1 - t3116) ** (0.5e1 / 0.2e1)) * ((1 + t3116) ** (0.3e1 / 0.2e1)) * (-13 * t3116 + 1 + (65 * t3116 - 39 + 130 * t3117) * t3117)

        if Bindx == 892:
            t3125 = np.sin(phi)
            t3123 = t3125 ** 2
            t3120 = np.cos(phi)
            t3121 = t3120 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((4*1j) * phi1) * np.sqrt(0.154e3) * t3123 ** 2 * (1 + (-26 + 65 * t3121) * t3121)

        if Bindx == 893:
            t3126 = np.cos(phi)
            t3127 = t3126 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + phi2)) * np.sqrt(0.77e2) * ((1 - t3126) ** (0.3e1 / 0.2e1)) * ((1 + t3126) ** (0.5e1 / 0.2e1)) * (13 * t3126 + 1 + (-65 * t3126 - 39 + 130 * t3127) * t3127)

        if Bindx == 894:
            t3131 = np.cos(phi)
            t3132 = t3131 ** 2
            t3134 = t3132 ** 2
            t3133 = t3131 * t3132
            t3130 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + phi2)) * np.sqrt(0.110e3) * t3130 ** 2 * (25 * t3132 - 91 * t3134 - 1 + (-78 + 91 * t3133) * t3133 + (91 * t3134 + 11) * t3131)

        if Bindx == 895:
            t3137 = np.cos(phi)
            t3138 = t3137 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.15e2) * np.sqrt((1 - t3137)) * ((1 + t3137) ** (0.7e1 / 0.2e1)) * (13 * t3137 - 5 + (-273 * t3137 + 91 + 182 * t3138) * t3138)

        if Bindx == 896:
            t3141 = np.cos(phi)
            t3142 = t3141 ** 2
            t3143 = t3141 * t3142
            t3146 = t3143 ** 2
            t3144 = t3142 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((4*1j) * (phi1 + phi2)) * (180 * t3142 + 770 * t3143 - 364 * t3146 - 9 + (-230 + 455 * t3144) * t3144 + (-1534 * t3144 + 910 * t3146 - 114) * t3141)

        if Bindx == 897:
            t3149 = np.cos(phi)
            t3150 = t3149 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (4 * phi1 + 5 * phi2)) * np.sqrt(0.13e2) * ((1 + t3149) ** (0.9e1 / 0.2e1)) * (-45 * t3149 + 3 + (-175 * t3149 + 147 + 70 * t3150) * t3150) * ((1 - t3149) ** (-0.1e1 / 0.2e1))

        if Bindx == 898:
            t3154 = np.cos(phi)
            t3155 = t3154 ** 2
            t3156 = t3154 * t3155
            t3153 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (2 * phi1 + 3 * phi2)) * np.sqrt(0.546e3) * t3153 ** 2 * (-t3154 + 1 + (-6 + 5 * t3156) * t3156 + (-9 + (15 * t3154 + 11) * t3155) * t3155)

        if Bindx == 899:
            t3160 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (2 * t3160 - 1) * ((1 + t3160) ** (0.11e2 / 0.2e1)) * np.sqrt(0.455e3) * np.exp((1j) * (4 * phi1 + 7 * phi2)) * ((1 - t3160) ** (0.3e1 / 0.2e1))

        if Bindx == 900:
            t3162 = np.cos(phi)
            t3166 = 1 + t3162
            t3163 = t3166 ** 2
            t3164 = t3166 * t3163
            t3161 = -1 + t3162
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (phi1 + 2 * phi2)) * np.sqrt(0.455e3) * t3161 ** 2 * t3164 ** 2

        if Bindx == 901:
            t3167 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t3167) ** (0.13e2 / 0.2e1)) * ((1 + t3167) ** (0.3e1 / 0.2e1))

        if Bindx == 902:
            t3168 = np.cos(phi)
            t3172 = -1 + t3168
            t3169 = t3172 ** 2
            t3170 = t3172 * t3169
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 7 * phi2)) * np.sqrt(0.35e2) * t3170 ** 2 * (1 + t3168) * (5 + 8 * t3168)

        if Bindx == 903:
            t3173 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 6 * phi2)) * np.sqrt(0.42e2) * ((1 - t3173) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t3173)) * (7 + (25 + 20 * t3173) * t3173)

        if Bindx == 904:
            t3174 = np.cos(phi)
            t3175 = t3174 ** 2
            t3176 = t3174 * t3175
            t3179 = t3176 ** 2
            t3177 = t3175 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((5*1j) * (phi1 - phi2)) * (495 * t3175 - 145 * t3176 + 469 * t3179 - 45 + (-1135 + 280 * t3177) * t3177 + (1025 * t3177 - 875 * t3179 - 69) * t3174)

        if Bindx == 905:
            t3182 = np.cos(phi)
            t3183 = t3182 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 - 4 * phi2)) * np.sqrt(0.13e2) * ((1 - t3182) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t3182)) * (105 * t3183 + 3 + (70 * t3183 + 42) * t3182)

        if Bindx == 906:
            t3186 = np.cos(phi)
            t3187 = t3186 ** 2
            t3189 = t3187 ** 2
            t3188 = t3186 * t3187
            t3185 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - 3 * phi2)) * np.sqrt(0.195e3) * t3185 ** 2 * (-18 * t3187 - 7 * t3189 + 1 + (90 + 56 * t3188) * t3188 + (-105 * t3189 - 17) * t3186)

        if Bindx == 907:
            t3192 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 - 2 * phi2)) * np.sqrt(0.1430e4) * ((1 - t3192) ** (0.7e1 / 0.2e1)) * ((1 + t3192) ** (0.3e1 / 0.2e1)) * (-1 + (28 * t3192 + 21) * t3192 ** 2)

        if Bindx == 908:
            t3201 = np.sin(phi)
            t3199 = t3201 ** 2
            t3195 = np.cos(phi)
            t3196 = t3195 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 - phi2)) * np.sqrt(0.1001e4) * t3199 ** 2 * (5 * t3195 + 1 + (-25 * t3195 - 21 + 40 * t3196) * t3196)

        if Bindx == 909:
            t3202 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.2002e4) * ((1 - t3202) ** (0.5e1 / 0.2e1)) * ((1 + t3202) ** (0.5e1 / 0.2e1)) * t3202 * (5 * t3202 ** 2 - 1)

        if Bindx == 910:
            t3209 = np.sin(phi)
            t3207 = t3209 ** 2
            t3203 = np.cos(phi)
            t3204 = t3203 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + phi2)) * np.sqrt(0.1001e4) * t3207 ** 2 * (-5 * t3203 + 1 + (25 * t3203 - 21 + 40 * t3204) * t3204)

        if Bindx == 911:
            t3210 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 2 * phi2)) * np.sqrt(0.1430e4) * ((1 - t3210) ** (0.3e1 / 0.2e1)) * ((1 + t3210) ** (0.7e1 / 0.2e1)) * (1 + (28 * t3210 - 21) * t3210 ** 2)

        if Bindx == 912:
            t3214 = np.cos(phi)
            t3215 = t3214 ** 2
            t3217 = t3215 ** 2
            t3216 = t3214 * t3215
            t3213 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 3 * phi2)) * np.sqrt(0.195e3) * t3213 ** 2 * (-18 * t3215 - 7 * t3217 + 1 + (-90 + 56 * t3216) * t3216 + (105 * t3217 + 17) * t3214)

        if Bindx == 913:
            t3220 = np.cos(phi)
            t3221 = t3220 ** 2
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 4 * phi2)) * np.sqrt(0.13e2) * np.sqrt((1 - t3220)) * ((1 + t3220) ** (0.9e1 / 0.2e1)) * (-105 * t3221 - 3 + (70 * t3221 + 42) * t3220)

        if Bindx == 914:
            t3223 = np.cos(phi)
            t3224 = t3223 ** 2
            t3225 = t3223 * t3224
            t3228 = t3225 ** 2
            t3226 = t3224 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((5*1j) * (phi1 + phi2)) * (495 * t3224 + 145 * t3225 + 469 * t3228 - 45 + (-1135 + 280 * t3226) * t3226 + (-1025 * t3226 + 875 * t3228 + 69) * t3223)

        if Bindx == 915:
            t3231 = np.cos(phi)
            t3232 = t3231 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (5 * phi1 + 6 * phi2)) * np.sqrt(0.42e2) * ((1 + t3231) ** (0.11e2 / 0.2e1)) * (-45 * t3232 - 7 + (20 * t3232 + 32) * t3231) * ((1 - t3231) ** (-0.1e1 / 0.2e1))

        if Bindx == 916:
            t3235 = np.cos(phi)
            t3236 = t3235 ** 2
            t3238 = t3236 ** 2
            t3237 = t3235 * t3236
            t3234 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (5 * phi1 + 7 * phi2)) * np.sqrt(0.35e2) * t3234 ** 2 * (-10 * t3236 + 55 * t3238 - 5 + (30 + 8 * t3237) * t3237 + (35 * t3238 - 17) * t3235)

        if Bindx == 917:
            t3241 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (5 * phi1 + 8 * phi2)) * np.sqrt(0.35e2) * ((1 - t3241) ** (0.3e1 / 0.2e1)) * ((1 + t3241) ** (0.13e2 / 0.2e1))

        if Bindx == 918:
            t3242 = np.cos(phi)
            t3247 = -1 + t3242
            t3243 = t3247 ** 2
            t3244 = t3247 * t3243
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (3 * phi1 - 4 * phi2)) * np.sqrt(0.30e2) * t3247 * t3244 ** 2 * (1 + t3242)

        if Bindx == 919:
            t3248 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 7 * phi2)) * np.sqrt(0.30e2) * ((1 - t3248) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t3248)) * (3 + 4 * t3248)

        if Bindx == 920:
            t3249 = np.cos(phi)
            t3250 = t3249 ** 2
            t3251 = t3249 * t3250
            t3254 = t3251 ** 2
            t3252 = t3250 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((6*1j) * (phi1 - phi2)) * (175 * t3251 + 196 * t3254 + 16 + (-210 + 30 * t3252) * t3252 + (-21 * t3252 - 135 * t3254 - 51) * t3249)

        if Bindx == 921:
            t3257 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - 5 * phi2)) * np.sqrt(0.42e2) * ((1 - t3257) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t3257)) * (7 + (25 + 20 * t3257) * t3257)

        if Bindx == 922:
            t3259 = np.cos(phi)
            t3260 = t3259 ** 2
            t3261 = t3259 * t3260
            t3258 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - 2 * phi2)) * np.sqrt(0.546e3) * t3258 ** 2 * (t3259 + 1 + (6 + 5 * t3261) * t3261 + (-9 + (-15 * t3259 + 11) * t3260) * t3260)

        if Bindx == 923:
            t3265 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 - phi2)) * np.sqrt(0.910e3) * ((1 - t3265) ** (0.9e1 / 0.2e1)) * ((1 + t3265) ** (0.3e1 / 0.2e1)) * (1 + (9 + 12 * t3265) * t3265)

        if Bindx == 924:
            t3271 = np.sin(phi)
            t3269 = t3271 ** 2
            t3266 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 - phi2)) * np.sqrt(0.15015e5) * t3269 ** 2 * t3266 * (1 + (2 * t3266 - 3) * t3266 ** 2)

        if Bindx == 925:
            t3272 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 - phi2)) * np.sqrt(0.858e3) * ((1 - t3272) ** (0.7e1 / 0.2e1)) * ((1 + t3272) ** (0.5e1 / 0.2e1)) * (-1 + (5 + 20 * t3272) * t3272)

        if Bindx == 926:
            t3277 = np.sin(phi)
            t3274 = t3277 ** 2
            t3275 = t3277 * t3274
            t3273 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((6*1j) * phi1) * np.sqrt(0.429e3) * t3275 ** 2 * (15 * t3273 ** 2 - 1)

        if Bindx == 927:
            t3278 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + phi2)) * np.sqrt(0.858e3) * ((1 - t3278) ** (0.5e1 / 0.2e1)) * ((1 + t3278) ** (0.7e1 / 0.2e1)) * (-1 + (-5 + 20 * t3278) * t3278)

        if Bindx == 928:
            t3284 = np.sin(phi)
            t3282 = t3284 ** 2
            t3279 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + phi2)) * np.sqrt(0.15015e5) * t3282 ** 2 * t3279 * (-1 + (2 * t3279 + 3) * t3279 ** 2)

        if Bindx == 929:
            t3285 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((3*1j) * (2 * phi1 + phi2)) * np.sqrt(0.910e3) * ((1 - t3285) ** (0.3e1 / 0.2e1)) * ((1 + t3285) ** (0.9e1 / 0.2e1)) * (1 + (-9 + 12 * t3285) * t3285)

        if Bindx == 930:
            t3287 = np.cos(phi)
            t3288 = t3287 ** 2
            t3289 = t3287 * t3288
            t3286 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((2*1j) * (3 * phi1 + 2 * phi2)) * np.sqrt(0.546e3) * t3286 ** 2 * (-t3287 + 1 + (-6 + 5 * t3289) * t3289 + (-9 + (15 * t3287 + 11) * t3288) * t3288)

        if Bindx == 931:
            t3293 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 5 * phi2)) * np.sqrt(0.42e2) * np.sqrt((1 - t3293)) * ((1 + t3293) ** (0.11e2 / 0.2e1)) * (7 + (-25 + 20 * t3293) * t3293)

        if Bindx == 932:
            t3294 = np.cos(phi)
            t3295 = t3294 ** 2
            t3296 = t3294 * t3295
            t3299 = t3296 ** 2
            t3297 = t3295 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2) * np.exp((6*1j) * (phi1 + phi2)) * (-175 * t3296 + 196 * t3299 + 16 + (-210 + 30 * t3297) * t3297 + (21 * t3297 + 135 * t3299 + 51) * t3294)

        if Bindx == 933:
            t3302 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.exp((1j) * (6 * phi1 + 7 * phi2)) * np.sqrt(0.30e2) * ((1 + t3302) ** (0.13e2 / 0.2e1)) * (3 + (-7 + 4 * t3302) * t3302) * ((1 - t3302) ** (-0.1e1 / 0.2e1))

        if Bindx == 934:
            t3303 = np.cos(phi)
            t3308 = 1 + t3303
            t3304 = t3308 ** 2
            t3305 = t3308 * t3304
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (3 * phi1 + 4 * phi2)) * np.sqrt(0.30e2) * (-1 + t3303) * t3308 * t3305 ** 2

        if Bindx == 935:
            t3309 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 - 8 * phi2)) * ((1 - t3309) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t3309))

        if Bindx == 936:
            t3310 = np.cos(phi)
            t3311 = t3310 ** 2
            t3312 = t3310 * t3311
            t3315 = t3312 ** 2
            t3313 = t3311 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((7*1j) * (phi1 - phi2)) * (-91 * t3311 + 77 * t3312 + 119 * t3315 - 7 + (35 + 8 * t3313) * t3313 + (-133 * t3313 - 49 * t3315 + 41) * t3310)

        if Bindx == 937:
            t3318 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 6 * phi2)) * np.sqrt(0.30e2) * ((1 - t3318) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t3318)) * (3 + 4 * t3318)

        if Bindx == 938:
            t3320 = np.cos(phi)
            t3321 = t3320 ** 2
            t3323 = t3321 ** 2
            t3322 = t3320 * t3321
            t3319 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * t3319 ** 2 * (-10 * t3321 + 55 * t3323 - 5 + (-30 + 8 * t3322) * t3322 + (-35 * t3323 + 17) * t3320)

        if Bindx == 939:
            t3326 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 - 4 * phi2)) * np.sqrt(0.455e3) * ((1 - t3326) ** (0.11e2 / 0.2e1)) * ((1 + t3326) ** (0.3e1 / 0.2e1)) * (1 + 2 * t3326)

        if Bindx == 940:
            t3333 = np.sin(phi)
            t3331 = t3333 ** 2
            t3327 = np.cos(phi)
            t3328 = t3327 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * t3331 ** 2 * (t3327 - 3 + (-21 * t3327 + 15 + 8 * t3328) * t3328)

        if Bindx == 941:
            t3334 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 - 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t3334) ** (0.9e1 / 0.2e1)) * ((1 + t3334) ** (0.5e1 / 0.2e1)) * (1 + 4 * t3334)

        if Bindx == 942:
            t3339 = np.sin(phi)
            t3336 = t3339 ** 2
            t3337 = t3339 * t3336
            t3335 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 - phi2)) * np.sqrt(0.715e3) * t3337 ** 2 * (-1 + (-7 + 8 * t3335) * t3335)

        if Bindx == 943:
            t3340 = np.cos(phi)
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.1430e4) * ((1 - t3340) ** (0.7e1 / 0.2e1)) * ((1 + t3340) ** (0.7e1 / 0.2e1)) * t3340

        if Bindx == 944:
            t3345 = np.sin(phi)
            t3342 = t3345 ** 2
            t3343 = t3345 * t3342
            t3341 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + phi2)) * np.sqrt(0.715e3) * t3343 ** 2 * (-1 + (7 + 8 * t3341) * t3341)

        if Bindx == 945:
            t3346 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 2 * phi2)) * np.sqrt(0.2002e4) * ((1 - t3346) ** (0.5e1 / 0.2e1)) * ((1 + t3346) ** (0.9e1 / 0.2e1)) * (-1 + 4 * t3346)

        if Bindx == 946:
            t3353 = np.sin(phi)
            t3351 = t3353 ** 2
            t3347 = np.cos(phi)
            t3348 = t3347 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * t3351 ** 2 * (-t3347 - 3 + (21 * t3347 + 15 + 8 * t3348) * t3348)

        if Bindx == 947:
            t3354 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 + 4 * phi2)) * np.sqrt(0.455e3) * ((1 - t3354) ** (0.3e1 / 0.2e1)) * ((1 + t3354) ** (0.11e2 / 0.2e1)) * (2 * t3354 - 1)

        if Bindx == 948:
            t3356 = np.cos(phi)
            t3357 = t3356 ** 2
            t3359 = t3357 ** 2
            t3358 = t3356 * t3357
            t3355 = np.sin(phi)
            tfunc[..., c] = -(0.17e2 / 0.128e3) * np.exp((1j) * (7 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * t3355 ** 2 * (-10 * t3357 + 55 * t3359 - 5 + (30 + 8 * t3358) * t3358 + (35 * t3359 - 17) * t3356)

        if Bindx == 949:
            t3362 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.exp((1j) * (7 * phi1 + 6 * phi2)) * np.sqrt(0.30e2) * np.sqrt((1 - t3362)) * ((1 + t3362) ** (0.13e2 / 0.2e1)) * (-3 + 4 * t3362)

        if Bindx == 950:
            t3363 = np.cos(phi)
            t3364 = t3363 ** 2
            t3365 = t3363 * t3364
            t3368 = t3365 ** 2
            t3366 = t3364 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((7*1j) * (phi1 + phi2)) * (-91 * t3364 - 77 * t3365 + 119 * t3368 - 7 + (35 + 8 * t3366) * t3366 + (133 * t3366 + 49 * t3368 - 41) * t3363)

        if Bindx == 951:
            t3371 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (7 * phi1 + 8 * phi2)) * np.sqrt((1 - t3371)) * ((1 + t3371) ** (0.15e2 / 0.2e1))

        if Bindx == 952:
            t3372 = np.cos(phi)
            t3380 = -8 * t3372
            t3373 = t3372 ** 2
            t3375 = t3373 ** 2
            t3374 = t3372 * t3373
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((8*1j) * (phi1 - phi2)) * (28 * t3373 + t3380 + 1 + (-56 * t3372 + 70 + t3375) * t3375 + (-56 + (t3380 + 28) * t3374) * t3374)

        if Bindx == 953:
            t3381 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - 7 * phi2)) * ((1 - t3381) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t3381))

        if Bindx == 954:
            t3382 = np.cos(phi)
            t3387 = -1 + t3382
            t3383 = t3387 ** 2
            t3384 = t3387 * t3383
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 - 3 * phi2)) * np.sqrt(0.30e2) * t3387 * t3384 ** 2 * (1 + t3382)

        if Bindx == 955:
            t3388 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t3388) ** (0.13e2 / 0.2e1)) * ((1 + t3388) ** (0.3e1 / 0.2e1))

        if Bindx == 956:
            t3390 = np.cos(phi)
            t3394 = -1 + t3390
            t3391 = t3394 ** 2
            t3392 = t3394 * t3391
            t3389 = 1 + t3390
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (2 * phi1 - phi2)) * np.sqrt(0.455e3) * t3392 ** 2 * t3389 ** 2

        if Bindx == 957:
            t3395 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t3395) ** (0.11e2 / 0.2e1)) * ((1 + t3395) ** (0.5e1 / 0.2e1))

        if Bindx == 958:
            t3396 = np.cos(phi)
            t3403 = -1 + t3396
            t3402 = 1 + t3396
            t3400 = t3402 ** 2
            t3397 = t3403 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 - phi2)) * np.sqrt(0.2002e4) * t3403 * t3397 ** 2 * t3402 * t3400

        if Bindx == 959:
            t3404 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 - phi2)) * np.sqrt(0.715e3) * ((1 - t3404) ** (0.9e1 / 0.2e1)) * ((1 + t3404) ** (0.7e1 / 0.2e1))

        if Bindx == 960:
            t3408 = np.sin(phi)
            t3405 = t3408 ** 2
            t3406 = t3405 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((8*1j) * phi1) * np.sqrt(0.1430e4) * t3406 ** 2

        if Bindx == 961:
            t3409 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + phi2)) * np.sqrt(0.715e3) * ((1 - t3409) ** (0.7e1 / 0.2e1)) * ((1 + t3409) ** (0.9e1 / 0.2e1))

        if Bindx == 962:
            t3410 = np.cos(phi)
            t3417 = -1 + t3410
            t3416 = 1 + t3410
            t3413 = t3416 ** 2
            t3411 = t3417 ** 2
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 + phi2)) * np.sqrt(0.2002e4) * t3417 * t3411 * t3416 * t3413 ** 2

        if Bindx == 963:
            t3418 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + 3 * phi2)) * np.sqrt(0.273e3) * ((1 - t3418) ** (0.5e1 / 0.2e1)) * ((1 + t3418) ** (0.11e2 / 0.2e1))

        if Bindx == 964:
            t3420 = np.cos(phi)
            t3424 = 1 + t3420
            t3421 = t3424 ** 2
            t3422 = t3424 * t3421
            t3419 = -1 + t3420
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((4*1j) * (2 * phi1 + phi2)) * np.sqrt(0.455e3) * t3419 ** 2 * t3422 ** 2

        if Bindx == 965:
            t3425 = np.cos(phi)
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + 5 * phi2)) * np.sqrt(0.35e2) * ((1 - t3425) ** (0.3e1 / 0.2e1)) * ((1 + t3425) ** (0.13e2 / 0.2e1))

        if Bindx == 966:
            t3426 = np.cos(phi)
            t3431 = 1 + t3426
            t3427 = t3431 ** 2
            t3428 = t3431 * t3427
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.exp((2*1j) * (4 * phi1 + 3 * phi2)) * np.sqrt(0.30e2) * (-1 + t3426) * t3431 * t3428 ** 2

        if Bindx == 967:
            t3432 = np.cos(phi)
            tfunc[..., c] = (-0.17e2 / 0.64e2*1j) * np.exp((1j) * (8 * phi1 + 7 * phi2)) * np.sqrt((1 - t3432)) * ((1 + t3432) ** (0.15e2 / 0.2e1))

        if Bindx == 968:
            t3433 = np.cos(phi)
            t3441 = 8 * t3433
            t3434 = t3433 ** 2
            t3436 = t3434 ** 2
            t3435 = t3433 * t3434
            tfunc[..., c] = (0.17e2 / 0.256e3) * np.exp((8*1j) * (phi1 + phi2)) * (28 * t3434 + t3441 + 1 + (56 * t3433 + 70 + t3436) * t3436 + (56 + (t3441 + 28) * t3435) * t3435)

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

