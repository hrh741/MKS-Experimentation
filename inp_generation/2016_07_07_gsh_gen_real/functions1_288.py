        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t1 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 2:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t3 * t2 ** 2 * np.sin(phi1) * ((1 + t3) ** (-0.1e1 / 0.2e1)) * ((1 - t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t4 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t4 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 4:
            t5 = np.cos(phi)
            t6 = t5 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t6) * t6

        if Bindx == 5:
            t9 = np.cos(phi)
            t8 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t9 * t8 ** 2 * (7 * t9 ** 2 - 3) * np.sin(phi1) * ((1 + t9) ** (-0.1e1 / 0.2e1)) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            t10 = np.cos(phi)
            t11 = t10 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t11) * t11) * np.cos((2 * phi1))

        if Bindx == 7:
            t16 = np.sin(phi)
            t14 = t16 ** 2
            t13 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13 * t14 ** 2 * np.sin((3 * phi1)) * ((1 + t13) ** (-0.1e1 / 0.2e1)) * ((1 - t13) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t18) * t18)

        if Bindx == 9:
            t20 = np.cos(phi)
            t21 = t20 ** 2
            t22 = t21 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t22 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t22 + 0.1365e4 / 0.16e2) * t21

        if Bindx == 10:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            t26 = t25 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t26 - 1 + (t26 + 3) * t25)

        if Bindx == 11:
            t29 = np.cos(phi)
            t30 = t29 ** 2
            t28 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t29 * t28 ** 2 * (5 + (-30 + 33 * t30) * t30) * np.sin(phi1) * ((1 + t29) ** (-0.1e1 / 0.2e1)) * ((1 - t29) ** (-0.1e1 / 0.2e1))

        if Bindx == 12:
            t38 = np.cos(phi)
            t37 = t38 ** 2
            t44 = 1 + (-2 + t37) * t37
            t42 = t44 * t38
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.22e2) * np.sqrt((1 - t38)) * np.sqrt((1 + t38)) * ((t42 - t44) * np.sin((phi1 - 6 * phi2)) + (t42 + t44) * np.sin((phi1 + 6 * phi2)))

        if Bindx == 13:
            t45 = np.cos(phi)
            t46 = t45 ** 2
            t47 = t46 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t47 - 1 + (33 * t47 + 19) * t46) * np.cos((2 * phi1))

        if Bindx == 14:
            t56 = np.cos(phi)
            t55 = t56 ** 2
            t58 = t56 * t55
            t59 = t55 ** 2
            t63 = -2 * t56 * t59 - 2 * t56 + 4 * t58
            t62 = t58 ** 2 - t55 - t59 + 1
            t57 = 2 * phi1
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.55e2) * ((t62 + t63) * np.cos((-t57 + 6 * phi2)) + (t62 - t63) * np.cos((t57 + 6 * phi2)))

        if Bindx == 15:
            t67 = np.sin(phi)
            t65 = t67 ** 2
            t64 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t64 * t65 ** 2 * (11 * t64 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t64) ** (-0.1e1 / 0.2e1)) * ((1 - t64) ** (-0.1e1 / 0.2e1))

        if Bindx == 16:
            t74 = np.cos(phi)
            t73 = t74 ** 2
            t81 = 2 * t73
            t77 = t73 ** 2
            t80 = 1 + t81 - 3 * t77
            t79 = (t77 + t81 - 3) * t74
            t75 = 3 * phi1
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.55e2) * np.sqrt((1 - t74)) * np.sqrt((1 + t74)) * (-(t79 + t80) * np.sin((-t75 + 6 * phi2)) + (t79 - t80) * np.sin((t75 + 6 * phi2)))

        if Bindx == 17:
            t82 = np.cos(phi)
            t83 = t82 ** 2
            t84 = t83 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t84 - 1 + (11 * t84 + 13) * t83) * np.cos((4 * phi1))

        if Bindx == 18:
            t92 = np.cos(phi)
            t91 = t92 ** 2
            t94 = t91 ** 2
            t95 = t92 * t94
            t98 = 4 * t92 - 4 * t95
            t97 = t92 * t95 - 5 * t91 + 5 * t94 - 1
            t93 = 4 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.66e2) * ((t97 + t98) * np.cos((-t93 + 6 * phi2)) + (t97 - t98) * np.cos((t93 + 6 * phi2)))

        if Bindx == 19:
            t103 = np.sin(phi)
            t100 = t103 ** 2
            t101 = t103 * t100
            t99 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t99 * t101 ** 2 * np.sin((5 * phi1)) * ((1 + t99) ** (-0.1e1 / 0.2e1)) * ((1 - t99) ** (-0.1e1 / 0.2e1))

        if Bindx == 20:
            t110 = np.cos(phi)
            t109 = t110 ** 2
            t113 = t109 ** 2
            t116 = -1 - 10 * t109 - 5 * t113
            t115 = (10 * t109 + t113 + 5) * t110
            t111 = 5 * phi1
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.3e1) * np.sqrt((1 - t110)) * np.sqrt((1 + t110)) * (-(t115 + t116) * np.sin((-t111 + 6 * phi2)) + (t115 - t116) * np.sin((t111 + 6 * phi2)))

        if Bindx == 21:
            t117 = np.cos(phi)
            t118 = t117 ** 2
            t119 = t118 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t119 - 1 + (t119 + 3) * t118)

        if Bindx == 22:
            t128 = np.cos(phi)
            t135 = -0.39e2 / 0.32e2 * t128
            t127 = t128 ** 2
            t129 = t128 * t127
            t130 = t127 ** 2
            t134 = -0.65e2 / 0.16e2 * t129 + t130 * t135 + t135
            t133 = 0.13e2 / 0.64e2 * t129 ** 2 + 0.13e2 / 0.64e2 + 0.195e3 / 0.64e2 * t130 + 0.195e3 / 0.64e2 * t127
            tfunc[..., c] = (t133 + t134) * np.cos((6 * phi1 - 6 * phi2)) + (t133 - t134) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 23:
            t136 = np.cos(phi)
            t137 = t136 ** 2
            t138 = t137 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * t136 * np.cos((6 * phi2)) * (-3 * t138 - 1 + (t138 + 3) * t137)

        if Bindx == 24:
            t149 = np.cos(phi)
            t148 = t149 ** 2
            t150 = t149 * t148
            t151 = t148 ** 2
            t153 = t150 ** 2
            t157 = 18 * t150 + 6 * (-3 * t151 + t153 - 1) * t149
            t156 = 10 * t148 + 22 * t153 - 1 + (-24 - 7 * t151) * t151
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.858e3) * ((t156 + t157) * np.sin((phi1 - 6 * phi2)) + (-t156 + t157) * np.sin((phi1 + 6 * phi2))) * ((1 + t149) ** (-0.1e1 / 0.2e1)) * ((1 - t149) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t166 = np.cos(phi)
            t165 = t166 ** 2
            t169 = t165 ** 2
            t168 = t166 * t165
            t171 = t168 ** 2
            t174 = 2 - 16 * t165 + 26 * t169 - 12 * t171
            t173 = -t168 + (11 * t169 - 7 * t171 - 3) * t166
            t167 = 2 * phi1
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.143e3) * ((-t173 + t174) * np.cos((-t167 + 6 * phi2)) + (t173 + t174) * np.cos((t167 + 6 * phi2)))

        if Bindx == 26:
            t184 = np.cos(phi)
            t183 = t184 ** 2
            t186 = t184 * t183
            t187 = t183 ** 2
            t189 = t186 ** 2
            t193 = 22 * t186 + (-38 * t187 + 18 * t189 - 2) * t184
            t192 = -18 * t183 + 2 * t189 + 3 + (20 - 7 * t187) * t187
            t185 = 3 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.286e3) * (-(t192 + t193) * np.sin((-t185 + 6 * phi2)) + (-t192 + t193) * np.sin((t185 + 6 * phi2))) * ((1 + t184) ** (-0.1e1 / 0.2e1)) * ((1 - t184) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t202 = np.cos(phi)
            t201 = t202 ** 2
            t205 = t201 ** 2
            t204 = t202 * t201
            t207 = t204 ** 2
            t210 = -4 + 8 * t201 + 20 * t205 - 24 * t207
            t209 = 35 * t204 + (-19 * t205 - 7 * t207 - 9) * t202
            t203 = 4 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.26e2) * ((-t209 + t210) * np.cos((-t203 + 6 * phi2)) + (t209 + t210) * np.cos((t203 + 6 * phi2)))

        if Bindx == 28:
            t220 = np.cos(phi)
            t219 = t220 ** 2
            t222 = t220 * t219
            t223 = t219 ** 2
            t225 = t222 ** 2
            t229 = -38 * t222 + (-10 * t223 + 30 * t225 + 18) * t220
            t228 = -10 * t219 - 38 * t225 - 5 + (60 - 7 * t223) * t223
            t221 = 5 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.26e2) * (-(t228 + t229) * np.sin((-t221 + 6 * phi2)) + (-t228 + t229) * np.sin((t221 + 6 * phi2))) * ((1 + t220) ** (-0.1e1 / 0.2e1)) * ((1 - t220) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t238 = np.cos(phi)
            t237 = t238 ** 2
            t240 = t237 ** 2
            t239 = t238 * t237
            t242 = t239 ** 2
            t245 = 0.375e3 / 0.32e2 * t240 + 0.135e3 / 0.16e2 * t242 - 0.45e2 / 0.4e1 * t237 - 0.45e2 / 0.32e2
            t244 = 0.225e3 / 0.64e2 * t239 + (-0.1035e4 / 0.64e2 * t240 - 0.105e3 / 0.64e2 * t242 + 0.435e3 / 0.64e2) * t238
            tfunc[..., c] = (t244 + t245) * np.cos((6 * phi1 - 6 * phi2)) + (-t244 + t245) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 30:
            t254 = np.cos(phi)
            t253 = t254 ** 2
            t263 = 14 * t253
            t256 = t254 * t253
            t258 = t256 ** 2
            t259 = t254 * t258
            t262 = -t254 * t259 - 14 * t258 + t263 + 1
            t261 = -6 * t254 + 6 * t259 + (t263 - 14) * t256
            t255 = 7 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.14e2) * (-(t261 + t262) * np.sin((-t255 + 6 * phi2)) + (t261 - t262) * np.sin((t255 + 6 * phi2))) * ((1 + t254) ** (-0.1e1 / 0.2e1)) * ((1 - t254) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t264 = np.cos(phi)
            t265 = t264 ** 2
            t266 = t265 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t265 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t265 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t266) * t266

        if Bindx == 32:
            t269 = np.cos(phi)
            t270 = t269 ** 2
            t271 = t270 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t270 + 1 + (-46 * t270 + 48 + 15 * t271) * t271) * np.cos((6 * phi2))

        if Bindx == 33:
            t275 = np.cos(phi)
            t276 = t275 ** 2
            t277 = t276 ** 2
            t274 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t275 * t274 ** 2 * (-1001 * t277 - 35 + (715 * t277 + 385) * t276) * np.sin(phi1) * ((1 + t275) ** (-0.1e1 / 0.2e1)) * ((1 - t275) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t289 = np.cos(phi)
            t288 = t289 ** 2
            t291 = t288 ** 2
            t290 = t289 * t288
            t293 = t290 ** 2
            t295 = t291 ** 2
            t298 = -1 + 18 * t288 - 48 * t291 + 46 * t293 - 15 * t295
            t297 = -38 * t290 + (78 * t291 - 66 * t293 + 20 * t295 + 6) * t289
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.858e3) * ((t297 + t298) * np.sin((phi1 - 6 * phi2)) + (t297 - t298) * np.sin((phi1 + 6 * phi2))) * ((1 + t289) ** (-0.1e1 / 0.2e1)) * ((1 - t289) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t299 = np.cos(phi)
            t300 = t299 ** 2
            t301 = t300 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t300 + 1 + (-286 * t300 + 176 + 143 * t301) * t301) * np.cos((2 * phi1))

        if Bindx == 36:
            t312 = np.cos(phi)
            t311 = t312 ** 2
            t314 = t312 * t311
            t315 = t311 ** 2
            t317 = t314 ** 2
            t320 = 2 * t314 + 2 * (-2 * t315 + t317) * t312
            t319 = 1 - 5 * t311 + 7 * t315 - 3 * t317
            t313 = 2 * phi1
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15015e5) * t312 * ((t319 + t320) * np.cos((-t313 + 6 * phi2)) + (-t319 + t320) * np.cos((t313 + 6 * phi2)))

        if Bindx == 37:
            t326 = np.sin(phi)
            t324 = t326 ** 2
            t321 = np.cos(phi)
            t322 = t321 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t321 * t324 ** 2 * (3 + (-26 + 39 * t322) * t322) * np.sin((3 * phi1)) * ((1 + t321) ** (-0.1e1 / 0.2e1)) * ((1 - t321) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t337 = np.cos(phi)
            t336 = t337 ** 2
            t340 = t336 ** 2
            t339 = t337 * t336
            t342 = t339 ** 2
            t344 = t340 ** 2
            t347 = -1 + 14 * t336 - 52 * t340 + 66 * t342 - 27 * t344
            t346 = 22 * t339 - 14 * (t340 + t342) * t337 + (12 * t344 - 6) * t337
            t338 = 3 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.910e3) * (-(t346 + t347) * np.sin((-t338 + 6 * phi2)) + (t346 - t347) * np.sin((t338 + 6 * phi2))) * ((1 + t337) ** (-0.1e1 / 0.2e1)) * ((1 - t337) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t349 = np.cos(phi)
            t350 = t349 ** 2
            t351 = t350 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t350 + 1 + (-156 * t350 + 118 + 65 * t351) * t351) * np.cos((4 * phi1))

        if Bindx == 40:
            t363 = np.cos(phi)
            t362 = t363 ** 2
            t365 = t363 * t362
            t366 = t362 ** 2
            t368 = t365 ** 2
            t372 = -5 * t365 + (21 * t366 - 15 * t368 - 1) * t363
            t371 = 10 * t362 + 6 * t368 - 1 + (-20 + 5 * t366) * t366
            t364 = 4 * phi1
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.546e3) * ((t371 + t372) * np.cos((-t364 + 6 * phi2)) + (t371 - t372) * np.cos((t364 + 6 * phi2)))

        if Bindx == 41:
            t377 = np.sin(phi)
            t374 = t377 ** 2
            t375 = t377 * t374
            t373 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t373 * t375 ** 2 * (5 * t373 ** 2 - 1) * np.sin((5 * phi1)) * ((1 - t373) ** (-0.1e1 / 0.2e1)) * ((1 + t373) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t388 = np.cos(phi)
            t387 = t388 ** 2
            t391 = t387 ** 2
            t390 = t388 * t387
            t393 = t390 ** 2
            t395 = t391 ** 2
            t398 = 7 - 42 * t387 + 20 * t391 + 90 * t393 - 75 * t395
            t397 = 90 * t390 + (-162 * t391 + 62 * t393 + 20 * t395 - 10) * t388
            t389 = 5 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.42e2) * (-(t397 + t398) * np.sin((-t389 + 6 * phi2)) + (t397 - t398) * np.sin((t389 + 6 * phi2))) * ((1 - t388) ** (-0.1e1 / 0.2e1)) * ((1 + t388) ** (-0.1e1 / 0.2e1))

        if Bindx == 43:
            t399 = np.cos(phi)
            t400 = t399 ** 2
            t401 = t400 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t400 + 1 + (-46 * t400 + 48 + 15 * t401) * t401) * np.cos((6 * phi1))

        if Bindx == 44:
            t412 = np.cos(phi)
            t413 = t412 ** 2
            t415 = t413 ** 2
            t414 = t412 * t413
            t417 = t414 ** 2
            t421 = 0.833e3 / 0.16e2 * t417 + 0.17e2 / 0.4e1 + (-0.1785e4 / 0.32e2 + 0.255e3 / 0.32e2 * t415) * t415
            t420 = 0.2975e4 / 0.64e2 * t414 + (-0.2295e4 / 0.64e2 * t417 - 0.357e3 / 0.64e2 * t415 - 0.867e3 / 0.64e2) * t412
            tfunc[..., c] = (t420 + t421) * np.cos((6 * phi1 - 6 * phi2)) + (-t420 + t421) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 45:
            t426 = np.sin(phi)
            t423 = t426 ** 2
            t424 = t423 ** 2
            t422 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t422 * t424 ** 2 * np.sin((7 * phi1)) * ((1 - t422) ** (-0.1e1 / 0.2e1)) * ((1 + t422) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t437 = np.cos(phi)
            t436 = t437 ** 2
            t440 = t436 ** 2
            t439 = t437 * t436
            t442 = t439 ** 2
            t444 = t440 ** 2
            t447 = -3 - 18 * t436 + 56 * t440 - 14 * t442 - 21 * t444
            t446 = -14 * t439 + (-42 * t440 + 38 * t442 + 4 * t444 + 14) * t437
            t438 = 7 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.30e2) * (-(t446 + t447) * np.sin((-t438 + 6 * phi2)) + (t446 - t447) * np.sin((t438 + 6 * phi2))) * ((1 - t437) ** (-0.1e1 / 0.2e1)) * ((1 + t437) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t448 = np.cos(phi)
            t449 = t448 ** 2
            t453 = -4 * t449
            t450 = t449 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t453 + 1 + (t453 + 6 + t450) * t450)

        if Bindx == 48:
            t462 = np.cos(phi)
            t461 = t462 ** 2
            t471 = -14 * t461
            t464 = t462 * t461
            t466 = t464 ** 2
            t467 = t462 * t466
            t470 = t462 * t467 + 14 * t466 + t471 - 1
            t469 = 6 * t462 - 6 * t467 + (t471 + 14) * t464
            t463 = 8 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.30e2) * ((t469 + t470) * np.cos((-t463 + 6 * phi2)) + (-t469 + t470) * np.cos((t463 + 6 * phi2)))

        if Bindx == 49:
            t472 = np.cos(phi)
            t473 = t472 ** 2
            t474 = t473 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t472 * (-26 * t473 + 3 + (-54 * t473 + 60 + 17 * t474) * t474) * np.cos((6 * phi2))

        if Bindx == 50:
            t488 = np.cos(phi)
            t487 = t488 ** 2
            t489 = t488 * t487
            t490 = t487 ** 2
            t491 = t488 * t490
            t492 = t489 ** 2
            t494 = t490 ** 2
            t498 = -52 * t489 + 120 * t491 + (-108 * t492 + 34 * t494 + 6) * t488
            t497 = -51 * t491 ** 2 - 27 * t487 + 126 * t490 - 226 * t492 + 177 * t494 + 1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.858e3) * ((t497 + t498) * np.sin((phi1 - 6 * phi2)) + (-t497 + t498) * np.sin((phi1 + 6 * phi2))) * ((1 - t488) ** (-0.1e1 / 0.2e1)) * ((1 + t488) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t509 = np.cos(phi)
            t508 = t509 ** 2
            t512 = t508 ** 2
            t511 = t509 * t508
            t514 = t511 ** 2
            t516 = t512 ** 2
            t519 = 3 - 75 * t508 + 277 * t512 - 341 * t514 + 136 * t516
            t518 = 44 * t511 + (-178 * t512 + 240 * t514 - 102 * t516 - 4) * t509
            t510 = 2 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * ((t518 + t519) * np.cos((-t510 + 6 * phi2)) + (-t518 + t519) * np.cos((t510 + 6 * phi2)))

        if Bindx == 52:
            t531 = np.cos(phi)
            t530 = t531 ** 2
            t533 = t531 * t530
            t534 = t530 ** 2
            t535 = t531 * t534
            t536 = t533 ** 2
            t538 = t534 ** 2
            t542 = -98 * t533 + 262 * t535 + (-278 * t536 + 102 * t538 + 12) * t531
            t541 = -51 * t535 ** 2 + 23 * t530 - 52 * t534 - 12 * t536 + 93 * t538 - 1
            t532 = 3 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.91e2) * (-(t541 + t542) * np.sin((-t532 + 6 * phi2)) + (-t541 + t542) * np.sin((t532 + 6 * phi2))) * ((1 - t531) ** (-0.1e1 / 0.2e1)) * ((1 + t531) ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t553 = np.cos(phi)
            t552 = t553 ** 2
            t556 = t552 ** 2
            t555 = t553 * t552
            t558 = t555 ** 2
            t560 = t556 ** 2
            t563 = 1 - 19 * t552 + 131 * t556 - 249 * t558 + 136 * t560
            t562 = -106 * t555 + (144 * t556 - 6 * t558 - 51 * t560 + 19) * t553
            t554 = 4 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.42e2) * ((t562 + t563) * np.cos((-t554 + 6 * phi2)) + (-t562 + t563) * np.cos((t554 + 6 * phi2)))

        if Bindx == 54:
            t575 = np.cos(phi)
            t574 = t575 ** 2
            t577 = t575 * t574
            t578 = t574 ** 2
            t579 = t575 * t578
            t580 = t577 ** 2
            t582 = t578 ** 2
            t586 = 30 * t577 + 126 * t579 + (-310 * t580 + 170 * t582 - 16) * t575
            t585 = -51 * t579 ** 2 + 75 * t574 - 280 * t578 + 336 * t580 - 75 * t582 - 5
            t576 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * (-(t585 + t586) * np.sin((-t576 + 6 * phi2)) + (-t585 + t586) * np.sin((t576 + 6 * phi2))) * ((1 - t575) ** (-0.1e1 / 0.2e1)) * ((1 + t575) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t597 = np.cos(phi)
            t596 = t597 ** 2
            t599 = t596 ** 2
            t598 = t597 * t596
            t601 = t598 ** 2
            t603 = t599 ** 2
            t606 = 0.3933e4 / 0.64e2 * t596 - 0.5187e4 / 0.64e2 * t599 - 0.5453e4 / 0.64e2 * t601 + 0.969e3 / 0.8e1 * t603 - 0.437e3 / 0.64e2
            t605 = -0.1463e4 / 0.16e2 * t598 + (0.7581e4 / 0.32e2 * t599 - 0.513e3 / 0.4e1 * t601 - 0.969e3 / 0.32e2 * t603 + 0.57e2 / 0.16e2) * t597
            tfunc[..., c] = (t605 + t606) * np.cos((6 * phi1 - 6 * phi2)) + (-t605 + t606) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 56:
            t618 = np.cos(phi)
            t617 = t618 ** 2
            t620 = t618 * t617
            t621 = t617 ** 2
            t622 = t618 * t621
            t623 = t620 ** 2
            t625 = t621 ** 2
            t629 = 352 * t620 - 420 * t622 + (-112 * t623 + 238 * t625 - 58) * t618
            t628 = -51 * t622 ** 2 - 63 * t617 - 238 * t621 + 658 * t623 - 327 * t625 + 21
            t619 = 7 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.3e1) * (-(t628 + t629) * np.sin((-t619 + 6 * phi2)) + (-t628 + t629) * np.sin((t619 + 6 * phi2))) * ((1 - t618) ** (-0.1e1 / 0.2e1)) * ((1 + t618) ** (-0.1e1 / 0.2e1))

        if Bindx == 57:
            t640 = np.cos(phi)
            t639 = t640 ** 2
            t643 = t639 ** 2
            t642 = t640 * t639
            t645 = t642 ** 2
            t647 = t643 ** 2
            t650 = -2 - 10 * t639 + 42 * t643 - 14 * t645 - 16 * t647
            t649 = 14 * t642 + (28 * t643 - 30 * t645 - 3 * t647 - 9) * t640
            t641 = 8 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.102e3) * ((-t649 + t650) * np.cos((-t641 + 6 * phi2)) + (t649 + t650) * np.cos((t641 + 6 * phi2)))

        if Bindx == 58:
            t659 = np.cos(phi)
            t658 = t659 ** 2
            t668 = 14 * t658
            t661 = t659 * t658
            t663 = t661 ** 2
            t664 = t659 * t663
            t667 = -t659 * t664 - 14 * t663 + t668 + 1
            t666 = -6 * t659 + 6 * t664 + (t668 - 14) * t661
            t660 = 9 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.51e2) * np.sqrt((1 - t659)) * np.sqrt((1 + t659)) * (-(t666 + t667) * np.sin((-t660 + 6 * phi2)) + (t666 - t667) * np.sin((t660 + 6 * phi2)))

        if Bindx == 59:
            t669 = np.cos(phi)
            t670 = t669 ** 2
            t671 = t670 ** 2
            t673 = t671 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t673 - 0.315315e6 / 0.128e3 * t671 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t673 + 0.945945e6 / 0.128e3 * t671 + 0.72765e5 / 0.256e3) * t670

        if Bindx == 60:
            t675 = np.cos(phi)
            t676 = t675 ** 2
            t677 = t676 ** 2
            t679 = t677 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t677 - 1071 * t679 - 3 + (1278 * t677 + 323 * t679 + 111) * t676) * np.cos((6 * phi2))

        if Bindx == 61:
            t682 = np.cos(phi)
            t683 = t682 ** 2
            t684 = t683 ** 2
            t681 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t682 * t681 ** 2 * (-1092 * t683 + 63 + (-7956 * t683 + 4914 + 4199 * t684) * t684) * np.sin(phi1) * ((1 - t682) ** (-0.1e1 / 0.2e1)) * ((1 + t682) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t699 = np.cos(phi)
            t698 = t699 ** 2
            t701 = t698 ** 2
            t700 = t699 * t698
            t703 = t700 ** 2
            t705 = t701 ** 2
            t702 = t699 * t701
            t707 = t702 ** 2
            t710 = 9 - 333 * t698 + 1914 * t701 - 3834 * t703 + 3213 * t705 - 969 * t707
            t709 = 1387 * t700 - 5110 * t702 + (8118 * t703 - 5899 * t705 + 1615 * t707 - 111) * t699
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.78e2) * ((t709 + t710) * np.sin((phi1 - 6 * phi2)) + (t709 - t710) * np.sin((phi1 + 6 * phi2))) * ((1 - t699) ** (-0.1e1 / 0.2e1)) * ((1 + t699) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t711 = np.cos(phi)
            t712 = t711 ** 2
            t713 = t712 ** 2
            t715 = t713 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t713 - 10387 * t715 - 7 + (8918 * t713 + 4199 * t715 + 371) * t712) * np.cos((2 * phi1))

        if Bindx == 64:
            t728 = np.cos(phi)
            t727 = t728 ** 2
            t730 = t728 * t727
            t731 = t727 ** 2
            t732 = t728 * t731
            t733 = t730 ** 2
            t735 = t731 ** 2
            t739 = 4888 * t730 - 14276 * t732 + (15640 * t733 - 5814 * t735 - 438) * t728
            t738 = 4845 * t732 ** 2 + 665 * t727 - 4486 * t731 + 11898 * t733 - 12903 * t735 - 19
            t729 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.26e2) * ((t738 + t739) * np.cos((-t729 + 6 * phi2)) + (t738 - t739) * np.cos((t729 + 6 * phi2)))

        if Bindx == 65:
            t746 = np.sin(phi)
            t744 = t746 ** 2
            t740 = np.cos(phi)
            t741 = t740 ** 2
            t742 = t741 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t740 * t744 ** 2 * (-357 * t742 - 7 + (323 * t742 + 105) * t741) * np.sin((3 * phi1)) * ((1 - t740) ** (-0.1e1 / 0.2e1)) * ((1 + t740) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t759 = np.cos(phi)
            t758 = t759 ** 2
            t762 = t758 ** 2
            t761 = t759 * t758
            t764 = t761 ** 2
            t766 = t762 ** 2
            t763 = t759 * t762
            t768 = t763 ** 2
            t771 = 69 - 2277 * t758 + 12898 * t762 - 27962 * t764 + 25993 * t766 - 8721 * t768
            t770 = -1423 * t761 + 662 * t763 + (7122 * t764 - 11373 * t766 + 4845 * t768 + 167) * t759
            t760 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.256e3 * (-(t770 + t771) * np.sin((-t760 + 6 * phi2)) + (t770 - t771) * np.sin((t760 + 6 * phi2))) * ((1 - t759) ** (-0.1e1 / 0.2e1)) * ((1 + t759) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t772 = np.cos(phi)
            t773 = t772 ** 2
            t774 = t773 ** 2
            t776 = t774 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t774 - 901 * t776 - 1 + (878 * t774 + 323 * t776 + 47) * t773) * np.cos((4 * phi1))

        if Bindx == 68:
            t789 = np.cos(phi)
            t788 = t789 ** 2
            t791 = t789 * t788
            t792 = t788 ** 2
            t793 = t789 * t792
            t794 = t791 ** 2
            t796 = t792 ** 2
            t800 = 5032 * t791 - 18368 * t793 + (25432 * t794 - 11628 * t796 - 468) * t789
            t799 = 4845 * t793 ** 2 - 2407 * t788 + 8918 * t792 - 8022 * t794 - 3417 * t796 + 83
            t790 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * ((t799 + t800) * np.cos((-t790 + 6 * phi2)) + (t799 - t800) * np.cos((t790 + 6 * phi2)))

        if Bindx == 69:
            t807 = np.sin(phi)
            t804 = t807 ** 2
            t805 = t807 * t804
            t801 = np.cos(phi)
            t802 = t801 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t801 * t805 ** 2 * (15 + (-170 + 323 * t802) * t802) * np.sin((5 * phi1)) * ((1 - t801) ** (-0.1e1 / 0.2e1)) * ((1 + t801) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t820 = np.cos(phi)
            t819 = t820 ** 2
            t823 = t819 ** 2
            t822 = t820 * t819
            t825 = t822 ** 2
            t827 = t823 ** 2
            t824 = t820 * t823
            t829 = t824 ** 2
            t832 = -1 + 25 * t819 + 1110 * t823 - 4942 * t825 + 6715 * t827 - 2907 * t829
            t831 = -2035 * t822 + 5278 * t824 + (-4710 * t825 + 255 * t827 + 969 * t829 + 243) * t820
            t821 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.5e1) * (-(t831 + t832) * np.sin((-t821 + 6 * phi2)) + (t831 - t832) * np.sin((t821 + 6 * phi2))) * ((1 - t820) ** (-0.1e1 / 0.2e1)) * ((1 + t820) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t833 = np.cos(phi)
            t834 = t833 ** 2
            t835 = t834 ** 2
            t837 = t835 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t835 - 1071 * t837 - 3 + (1278 * t835 + 323 * t837 + 111) * t834) * np.cos((6 * phi1))

        if Bindx == 72:
            t850 = np.cos(phi)
            t849 = t850 ** 2
            t851 = t850 * t849
            t852 = t849 ** 2
            t853 = t850 * t852
            t854 = t851 ** 2
            t856 = t852 ** 2
            t860 = -0.16191e5 / 0.128e3 * t851 - 0.10143e5 / 0.256e3 * t853 + (0.61761e5 / 0.128e3 * t854 - 0.183141e6 / 0.512e3 * t856 + 0.15771e5 / 0.512e3) * t850
            t859 = 0.101745e6 / 0.1024e4 * t853 ** 2 - 0.94563e5 / 0.1024e4 * t849 + 0.235641e6 / 0.512e3 * t852 - 0.366471e6 / 0.512e3 * t854 + 0.260253e6 / 0.1024e4 * t856 + 0.4977e4 / 0.1024e4
            tfunc[..., c] = (t859 + t860) * np.cos((6 * phi1 - 6 * phi2)) + (t859 - t860) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 73:
            t865 = np.sin(phi)
            t862 = t865 ** 2
            t863 = t862 ** 2
            t861 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t861 * t863 ** 2 * (19 * t861 ** 2 - 3) * np.sin((7 * phi1)) * ((1 - t861) ** (-0.1e1 / 0.2e1)) * ((1 + t861) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t878 = np.cos(phi)
            t877 = t878 ** 2
            t881 = t877 ** 2
            t880 = t878 * t877
            t883 = t880 ** 2
            t885 = t881 ** 2
            t882 = t878 * t881
            t887 = t882 ** 2
            t890 = -43 + 559 * t877 - 1566 * t881 + 686 * t883 + 1561 * t885 - 1197 * t887
            t889 = -511 * t880 + 2590 * t882 + (-3534 * t883 + 1191 * t885 + 285 * t887 - 21) * t878
            t879 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * (-(t889 + t890) * np.sin((-t879 + 6 * phi2)) + (t889 - t890) * np.sin((t879 + 6 * phi2))) * ((1 - t878) ** (-0.1e1 / 0.2e1)) * ((1 + t878) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t891 = np.cos(phi)
            t892 = t891 ** 2
            t893 = t892 ** 2
            t895 = t893 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t893 - 77 * t895 - 1 + (118 * t893 + 19 * t895 + 23) * t892) * np.cos((8 * phi1))

        if Bindx == 76:
            t908 = np.cos(phi)
            t907 = t908 ** 2
            t910 = t908 * t907
            t911 = t907 ** 2
            t912 = t908 * t911
            t913 = t910 ** 2
            t915 = t911 ** 2
            t919 = -592 * t910 + 896 * t912 + (80 * t913 - 456 * t915 + 72) * t908
            t918 = 95 * t912 ** 2 + 155 * t907 + 266 * t911 - 1162 * t913 + 677 * t915 - 31
            t909 = 8 * phi1
            tfunc[..., c] = -0.21e2 / 0.1024e4 * np.sqrt(0.102e3) * ((t918 + t919) * np.cos((-t909 + 6 * phi2)) + (t918 - t919) * np.cos((t909 + 6 * phi2)))

        if Bindx == 77:
            t925 = np.sin(phi)
            t921 = t925 ** 2
            t923 = t925 * t921 ** 2
            t920 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t920 * t923 ** 2 * np.sin((9 * phi1)) * ((1 - t920) ** (-0.1e1 / 0.2e1)) * ((1 + t920) ** (-0.1e1 / 0.2e1))

        if Bindx == 78:
            t938 = np.cos(phi)
            t937 = t938 ** 2
            t941 = t937 ** 2
            t940 = t938 * t937
            t943 = t940 ** 2
            t945 = t941 ** 2
            t942 = t938 * t941
            t947 = t942 ** 2
            t950 = 3 + 9 * t937 - 82 * t941 + 98 * t943 - t945 - 27 * t947
            t949 = 41 * t940 + 14 * t942 + (-94 * t943 + 47 * t945 + 5 * t947 - 13) * t938
            t939 = 9 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.969e3) * (-(t949 + t950) * np.sin((-t939 + 6 * phi2)) + (t949 - t950) * np.sin((t939 + 6 * phi2))) * ((1 - t938) ** (-0.1e1 / 0.2e1)) * ((1 + t938) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t951 = np.cos(phi)
            t952 = t951 ** 2
            t953 = t952 ** 2
            t955 = t953 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t953 - 5 * t955 - 1 + (10 * t953 + t955 + 5) * t952)

        if Bindx == 80:
            t968 = np.cos(phi)
            t980 = -6 * t968
            t967 = t968 ** 2
            t970 = t968 * t967
            t971 = t967 ** 2
            t972 = t968 * t971
            t973 = t970 ** 2
            t975 = t971 ** 2
            t979 = -8 * t968 * t973 + t975 * t980 - 8 * t970 + 28 * t972 + t980
            t978 = t972 ** 2 + 13 * t967 - 14 * t971 - 14 * t973 + 13 * t975 + 1
            t969 = 10 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.4845e4) * ((t978 + t979) * np.cos((-t969 + 6 * phi2)) + (t978 - t979) * np.cos((t969 + 6 * phi2)))

        if Bindx == 81:
            t981 = np.cos(phi)
            t982 = t981 ** 2
            t983 = t982 ** 2
            t985 = t983 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7293e4) * t981 * (-1014 * t983 - 1387 * t985 - 15 + (1782 * t983 + 399 * t985 + 235) * t982) * np.cos((6 * phi2))

        if Bindx == 82:
            t1000 = np.cos(phi)
            t999 = t1000 ** 2
            t1001 = t1000 * t999
            t1002 = t999 ** 2
            t1003 = t1000 * t1002
            t1004 = t1001 ** 2
            t1006 = t1002 ** 2
            t1008 = t1003 ** 2
            t1012 = 470 * t1001 - 2028 * t1003 + (3564 * t1004 - 2774 * t1006 + 798 * t1008 - 30) * t1000
            t1011 = -1925 * t1002 - 8319 * t1006 + 5624 * t1008 + 240 * t999 - 5 + (5848 - 1463 * t1004) * t1004
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.221e3) * ((t1011 + t1012) * np.sin((phi1 - 6 * phi2)) + (-t1011 + t1012) * np.sin((phi1 + 6 * phi2))) * ((1 - t1000) ** (-0.1e1 / 0.2e1)) * ((1 + t1000) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t1025 = np.cos(phi)
            t1024 = t1025 ** 2
            t1028 = t1024 ** 2
            t1027 = t1025 * t1024
            t1030 = t1027 ** 2
            t1032 = t1028 ** 2
            t1029 = t1025 * t1028
            t1034 = t1029 ** 2
            t1037 = -6 + 276 * t1024 - 1940 * t1028 + 4672 * t1030 - 4598 * t1032 + 1596 * t1034
            t1036 = -459 * t1027 + 2218 * t1029 + (-4638 * t1030 + 4313 * t1032 - 1463 * t1034 + 29) * t1025
            t1026 = 2 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.170e3) * ((t1036 + t1037) * np.cos((-t1026 + 6 * phi2)) + (-t1036 + t1037) * np.cos((t1026 + 6 * phi2)))

        if Bindx == 84:
            t1051 = np.cos(phi)
            t1050 = t1051 ** 2
            t1053 = t1051 * t1050
            t1054 = t1050 ** 2
            t1055 = t1051 * t1054
            t1056 = t1053 ** 2
            t1058 = t1054 ** 2
            t1060 = t1055 ** 2
            t1064 = 1502 * t1053 - 6460 * t1055 + (11900 * t1056 - 9918 * t1058 + 3078 * t1060 - 102) * t1051
            t1063 = -44 * t1050 + 13 * t1054 - 4917 * t1058 + 5244 * t1060 + 1 + (1584 - 1881 * t1056) * t1056
            t1052 = 3 * phi1
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.595e3) * (-(t1063 + t1064) * np.sin((-t1052 + 6 * phi2)) + (-t1063 + t1064) * np.sin((t1052 + 6 * phi2))) * ((1 + t1051) ** (-0.1e1 / 0.2e1)) * ((1 - t1051) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t1077 = np.cos(phi)
            t1076 = t1077 ** 2
            t1080 = t1076 ** 2
            t1079 = t1077 * t1076
            t1082 = t1079 ** 2
            t1084 = t1080 ** 2
            t1081 = t1077 * t1080
            t1086 = t1081 ** 2
            t1089 = -4 + 160 * t1076 - 1120 * t1080 + 3016 * t1082 - 3420 * t1084 + 1368 * t1086
            t1088 = 345 * t1079 - 874 * t1081 + (330 * t1082 + 855 * t1084 - 627 * t1086 - 29) * t1077
            t1078 = 4 * phi1
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.714e3) * ((t1088 + t1089) * np.cos((-t1078 + 6 * phi2)) + (-t1088 + t1089) * np.cos((t1078 + 6 * phi2)))

        if Bindx == 86:
            t1103 = np.cos(phi)
            t1102 = t1103 ** 2
            t1105 = t1103 * t1102
            t1106 = t1102 ** 2
            t1107 = t1103 * t1106
            t1108 = t1105 ** 2
            t1110 = t1106 ** 2
            t1112 = t1107 ** 2
            t1116 = 2090 * t1105 - 12852 * t1107 + (31412 * t1108 - 32490 * t1110 + 11970 * t1112 - 130) * t1103
            t1115 = -1908 * t1102 + 10745 * t1106 + 13815 * t1110 + 2964 * t1112 + 53 + (-21280 - 4389 * t1108) * t1108
            t1104 = 5 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.102e3) * (-(t1115 + t1116) * np.sin((-t1104 + 6 * phi2)) + (-t1115 + t1116) * np.sin((t1104 + 6 * phi2))) * ((1 - t1103) ** (-0.1e1 / 0.2e1)) * ((1 + t1103) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t1129 = np.cos(phi)
            t1128 = t1129 ** 2
            t1131 = t1128 ** 2
            t1130 = t1129 * t1128
            t1133 = t1130 ** 2
            t1135 = t1131 ** 2
            t1132 = t1129 * t1131
            t1137 = t1132 ** 2
            t1140 = -0.16215e5 / 0.256e3 * t1128 + 0.2415e4 / 0.256e3 * t1131 + 0.28819e5 / 0.32e2 * t1133 - 0.924255e6 / 0.512e3 * t1135 + 0.247779e6 / 0.256e3 * t1137 + 0.1081e4 / 0.512e3
            t1139 = 0.501515e6 / 0.1024e4 * t1130 - 0.803229e6 / 0.512e3 * t1132 + (0.915975e6 / 0.512e3 * t1133 - 0.386745e6 / 0.1024e4 * t1135 - 0.302841e6 / 0.1024e4 * t1137 - 0.49197e5 / 0.1024e4) * t1129
            tfunc[..., c] = (t1139 + t1140) * np.cos((6 * phi1 - 6 * phi2)) + (-t1139 + t1140) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 88:
            t1154 = np.cos(phi)
            t1153 = t1154 ** 2
            t1156 = t1154 * t1153
            t1157 = t1153 ** 2
            t1158 = t1154 * t1157
            t1159 = t1156 ** 2
            t1161 = t1157 ** 2
            t1163 = t1158 ** 2
            t1167 = -2694 * t1156 + 3948 * t1158 + (3668 * t1159 - 10906 * t1161 + 5586 * t1163 + 398) * t1154
            t1166 = -840 * t1153 + 6251 * t1157 + 15849 * t1161 - 3648 * t1163 + 35 + (-16184 - 1463 * t1159) * t1159
            t1155 = 7 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.10e2) * (-(t1166 + t1167) * np.sin((-t1155 + 6 * phi2)) + (-t1166 + t1167) * np.sin((t1155 + 6 * phi2))) * ((1 + t1154) ** (-0.1e1 / 0.2e1)) * ((1 - t1154) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t1180 = np.cos(phi)
            t1179 = t1180 ** 2
            t1183 = t1179 ** 2
            t1182 = t1180 * t1179
            t1185 = t1182 ** 2
            t1187 = t1183 ** 2
            t1184 = t1180 * t1183
            t1189 = t1184 ** 2
            t1192 = -8 + 128 * t1179 - 448 * t1183 + 336 * t1185 + 328 * t1187 - 336 * t1189
            t1191 = 63 * t1182 - 574 * t1184 + (958 * t1185 - 383 * t1187 - 77 * t1189 + 13) * t1180
            t1181 = 8 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.190e3) * ((-t1191 + t1192) * np.cos((-t1181 + 6 * phi2)) + (t1191 + t1192) * np.cos((t1181 + 6 * phi2)))

        if Bindx == 90:
            t1206 = np.cos(phi)
            t1205 = t1206 ** 2
            t1208 = t1206 * t1205
            t1209 = t1205 ** 2
            t1210 = t1206 * t1209
            t1211 = t1208 ** 2
            t1213 = t1209 ** 2
            t1215 = t1210 ** 2
            t1219 = -1402 * t1208 + 3668 * t1210 + (-2452 * t1211 - 1062 * t1213 + 1134 * t1215 + 114) * t1206
            t1218 = 488 * t1205 - 133 * t1209 + 4457 * t1213 - 1552 * t1215 - 61 + (-2968 - 231 * t1211) * t1211
            t1207 = 9 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1218 + t1219) * np.sin((-t1207 + 6 * phi2)) + (-t1218 + t1219) * np.sin((t1207 + 6 * phi2))) * ((1 - t1206) ** (-0.1e1 / 0.2e1)) * ((1 + t1206) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t1232 = np.cos(phi)
            t1231 = t1232 ** 2
            t1235 = t1231 ** 2
            t1234 = t1232 * t1231
            t1237 = t1234 ** 2
            t1239 = t1235 ** 2
            t1236 = t1232 * t1235
            t1241 = t1236 ** 2
            t1244 = 6 + 12 * t1231 - 172 * t1235 + 224 * t1237 - 10 * t1239 - 60 * t1241
            t1243 = -95 * t1234 - 14 * t1236 + (202 * t1237 - 107 * t1239 - 11 * t1241 + 25) * t1232
            t1233 = 10 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.133e3) * ((-t1243 + t1244) * np.cos((-t1233 + 6 * phi2)) + (t1243 + t1244) * np.cos((t1233 + 6 * phi2)))

        if Bindx == 92:
            t1256 = np.cos(phi)
            t1268 = 6 * t1256
            t1255 = t1256 ** 2
            t1258 = t1256 * t1255
            t1259 = t1255 ** 2
            t1260 = t1256 * t1259
            t1261 = t1258 ** 2
            t1263 = t1259 ** 2
            t1267 = 8 * t1256 * t1261 + t1263 * t1268 + 8 * t1258 - 28 * t1260 + t1268
            t1266 = -t1260 ** 2 - 13 * t1255 + 14 * t1259 + 14 * t1261 - 13 * t1263 - 1
            t1257 = 11 * phi1
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.2926e4) * np.sqrt((1 - t1256)) * np.sqrt((1 + t1256)) * (-(t1266 + t1267) * np.sin((-t1257 + 6 * phi2)) + (-t1266 + t1267) * np.sin((t1257 + 6 * phi2)))

        if Bindx == 93:
            t1269 = np.cos(phi)
            t1270 = t1269 ** 2
            t1271 = t1270 ** 2
            t1273 = t1271 ** 2
            t1272 = t1270 * t1271
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t1273 + 0.5630625e7 / 0.1024e4 * t1271 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t1272) * t1272 + (-0.24249225e8 / 0.512e3 * t1273 - 0.225225e6 / 0.512e3) * t1270

        if Bindx == 94:
            t1276 = np.cos(phi)
            t1277 = t1276 ** 2
            t1278 = t1277 ** 2
            t1280 = t1278 ** 2
            t1279 = t1277 * t1278
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1278 + 15447 * t1280 + 5 + (-9904 + 3059 * t1279) * t1279 + (-11172 * t1280 - 300) * t1277) * np.cos((6 * phi2))

        if Bindx == 95:
            t1283 = np.cos(phi)
            t1284 = t1283 ** 2
            t1290 = -6 * t1284
            t1285 = t1284 ** 2
            t1286 = t1284 * t1285
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t1290 + 1 + (-20 + t1286) * t1286 + (15 + (t1290 + 15) * t1285) * t1285)

        if Bindx == 96:
            t1292 = np.cos(phi)
            t1293 = t1292 ** 2
            t1294 = t1293 ** 2
            t1296 = t1294 ** 2
            t1291 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t1292 * t1291 ** 2 * (-39270 * t1294 - 124355 * t1296 - 231 + (106590 * t1294 + 52003 * t1296 + 5775) * t1293) * np.sin(phi1) * ((1 - t1292) ** (-0.1e1 / 0.2e1)) * ((1 + t1292) ** (-0.1e1 / 0.2e1))

        if Bindx == 97:
            t1312 = np.cos(phi)
            t1311 = t1312 ** 2
            t1314 = t1311 ** 2
            t1313 = t1312 * t1311
            t1316 = t1313 ** 2
            t1318 = t1314 ** 2
            t1315 = t1312 * t1314
            t1320 = t1315 ** 2
            t1322 = t1316 ** 2
            t1325 = -5 + 300 * t1311 - 2865 * t1314 + 9904 * t1316 - 15447 * t1318 + 11172 * t1320 - 3059 * t1322
            t1324 = -2010 * t1313 + 11814 * t1315 + (-30500 * t1316 + 39216 * t1318 - 24738 * t1320 + 6118 * t1322 + 100) * t1312
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.561e3) * ((t1324 + t1325) * np.sin((phi1 - 6 * phi2)) + (t1324 - t1325) * np.sin((phi1 + 6 * phi2))) * ((1 - t1312) ** (-0.1e1 / 0.2e1)) * ((1 + t1312) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t1338 = np.cos(phi)
            t1337 = t1338 ** 2
            t1339 = t1338 * t1337
            t1340 = t1337 ** 2
            t1341 = t1338 * t1340
            t1350 = 10 * t1339 ** 2 - 5 * t1340 ** 2 + t1341 ** 2 - 1
            t1349 = -5 * t1337 + 10 * t1340 - t1350
            t1348 = t1350 * t1338 + 5 * t1339 - 10 * t1341
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.156009e6) * np.sqrt((1 - t1338)) * np.sqrt((1 + t1338)) * ((t1348 + t1349) * np.sin((phi1 - 12 * phi2)) + (t1348 - t1349) * np.sin((phi1 + 12 * phi2)))

        if Bindx == 99:
            t1351 = np.cos(phi)
            t1352 = t1351 ** 2
            t1353 = t1352 ** 2
            t1355 = t1353 ** 2
            t1354 = t1352 * t1353
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t1353 + 24225 * t1355 + 3 + (-12240 + 7429 * t1354) * t1354 + (-21964 * t1355 - 228) * t1352) * np.cos((2 * phi1))

        if Bindx == 100:
            t1371 = np.cos(phi)
            t1370 = t1371 ** 2
            t1373 = t1371 * t1370
            t1374 = t1370 ** 2
            t1375 = t1371 * t1374
            t1376 = t1373 ** 2
            t1378 = t1374 ** 2
            t1380 = t1375 ** 2
            t1384 = -1595 * t1373 + 8122 * t1375 + (-16606 * t1376 + 14801 * t1378 - 4807 * t1380 + 85) * t1371
            t1383 = -290 * t1370 + 2845 * t1374 + 18791 * t1378 - 15466 * t1380 + 5 + (-10692 + 4807 * t1376) * t1376
            t1372 = 2 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.714e3) * ((t1383 + t1384) * np.cos((-t1372 + 6 * phi2)) + (t1383 - t1384) * np.cos((t1372 + 6 * phi2)))

        if Bindx == 101:
            t1397 = np.cos(phi)
            t1396 = t1397 ** 2
            t1400 = t1396 ** 2
            t1410 = 5 * t1400 ** 2
            t1401 = t1397 * t1400
            t1405 = t1401 ** 2
            t1406 = t1397 * t1405
            t1409 = t1397 * t1406 + 4 * t1396 - 5 * t1400 - 4 * t1405 + t1410 - 1
            t1408 = 2 * t1397 * t1410 + 2 * t1397 + 20 * t1401 - 2 * t1406 + 2 * (-5 * t1397 - 10 * t1401) * t1396
            t1398 = 2 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.490314e6) * ((t1408 + t1409) * np.cos((-t1398 + 12 * phi2)) + (-t1408 + t1409) * np.cos((t1398 + 12 * phi2)))

        if Bindx == 102:
            t1418 = np.sin(phi)
            t1416 = t1418 ** 2
            t1411 = np.cos(phi)
            t1412 = t1411 ** 2
            t1413 = t1412 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t1411 * t1416 ** 2 * (-1020 * t1412 + 45 + (-11628 * t1412 + 5814 + 7429 * t1413) * t1413) * np.sin((3 * phi1)) * ((1 - t1411) ** (-0.1e1 / 0.2e1)) * ((1 + t1411) ** (-0.1e1 / 0.2e1))

        if Bindx == 103:
            t1433 = np.cos(phi)
            t1432 = t1433 ** 2
            t1436 = t1432 ** 2
            t1435 = t1433 * t1432
            t1438 = t1435 ** 2
            t1440 = t1436 ** 2
            t1437 = t1433 * t1436
            t1442 = t1437 ** 2
            t1444 = t1438 ** 2
            t1447 = -23 + 1288 * t1432 - 11855 * t1436 + 40952 * t1438 - 65797 * t1440 + 49856 * t1442 - 14421 * t1444
            t1446 = -362 * t1435 + 4222 * t1437 + (-18692 * t1438 + 35720 * t1440 - 30514 * t1442 + 9614 * t1444 + 12) * t1433
            t1434 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.119e3) * (-(t1446 + t1447) * np.sin((-t1434 + 6 * phi2)) + (t1446 - t1447) * np.sin((t1434 + 6 * phi2))) * ((1 - t1433) ** (-0.1e1 / 0.2e1)) * ((1 + t1433) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t1460 = np.cos(phi)
            t1459 = t1460 ** 2
            t1463 = t1459 ** 2
            t1462 = t1460 * t1459
            t1465 = t1462 ** 2
            t1467 = t1463 ** 2
            t1464 = t1460 * t1463
            t1469 = t1464 ** 2
            t1472 = -1 + t1459 + 6 * t1463 - 14 * t1465 + 11 * t1467 - 3 * t1469
            t1471 = -11 * t1462 + 14 * t1464 + (-6 * t1465 - t1467 + t1469 + 3) * t1460
            t1461 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.81719e5) * np.sqrt((1 - t1460)) * np.sqrt((1 + t1460)) * (-(t1471 + t1472) * np.sin((-t1461 + 12 * phi2)) + (t1471 - t1472) * np.sin((t1461 + 12 * phi2)))

        if Bindx == 105:
            t1473 = np.cos(phi)
            t1474 = t1473 ** 2
            t1475 = t1474 ** 2
            t1477 = t1475 ** 2
            t1476 = t1474 * t1475
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t1475 + 28747 * t1477 + 5 + (-15844 + 7429 * t1476) * t1476 + (-23902 * t1477 - 350) * t1474) * np.cos((4 * phi1))

        if Bindx == 106:
            t1493 = np.cos(phi)
            t1492 = t1493 ** 2
            t1495 = t1493 * t1492
            t1496 = t1492 ** 2
            t1497 = t1493 * t1496
            t1498 = t1495 ** 2
            t1500 = t1496 ** 2
            t1502 = t1497 ** 2
            t1506 = -2470 * t1495 + 12588 * t1497 + (-27436 * t1498 + 26790 * t1500 - 9614 * t1502 + 142) * t1493
            t1505 = 364 * t1492 - 2435 * t1496 + 2755 * t1500 - 9196 * t1502 - 7 + (3712 + 4807 * t1498) * t1498
            t1494 = 4 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.119e3) * ((t1505 + t1506) * np.cos((-t1494 + 6 * phi2)) + (t1505 - t1506) * np.cos((t1494 + 6 * phi2)))

        if Bindx == 107:
            t1520 = np.cos(phi)
            t1519 = t1520 ** 2
            t1522 = t1520 * t1519
            t1523 = t1519 ** 2
            t1524 = t1520 * t1523
            t1525 = t1522 ** 2
            t1527 = t1523 ** 2
            t1529 = t1524 ** 2
            t1533 = 12 * t1522 - 8 * t1524 + 4 * (-2 * t1525 + 3 * t1527 - t1529 - 1) * t1520
            t1532 = 2 * t1519 - 17 * t1523 - 17 * t1527 + 2 * t1529 + 1 + (28 + t1525) * t1525
            t1521 = 4 * phi1
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.81719e5) * ((t1532 + t1533) * np.cos((-t1521 + 12 * phi2)) + (t1532 - t1533) * np.cos((t1521 + 12 * phi2)))

        if Bindx == 108:
            t1541 = np.sin(phi)
            t1538 = t1541 ** 2
            t1539 = t1541 * t1538
            t1534 = np.cos(phi)
            t1535 = t1534 ** 2
            t1536 = t1535 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t1534 * t1539 ** 2 * (-399 * t1536 - 5 + (437 * t1536 + 95) * t1535) * np.sin((5 * phi1)) * ((1 - t1534) ** (-0.1e1 / 0.2e1)) * ((1 + t1534) ** (-0.1e1 / 0.2e1))

        if Bindx == 109:
            t1556 = np.cos(phi)
            t1555 = t1556 ** 2
            t1559 = t1555 ** 2
            t1558 = t1556 * t1555
            t1561 = t1558 ** 2
            t1563 = t1559 ** 2
            t1560 = t1556 * t1559
            t1565 = t1560 ** 2
            t1567 = t1561 ** 2
            t1570 = -25 + 1200 * t1555 - 11465 * t1559 + 45592 * t1561 - 84987 * t1563 + 73720 * t1565 - 24035 * t1567
            t1569 = 5958 * t1558 - 24450 * t1560 + (37500 * t1561 - 14440 * t1563 - 13794 * t1565 + 9614 * t1567 - 388) * t1556
            t1557 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.14e2) * (-(t1569 + t1570) * np.sin((-t1557 + 6 * phi2)) + (t1569 - t1570) * np.sin((t1557 + 6 * phi2))) * ((1 - t1556) ** (-0.1e1 / 0.2e1)) * ((1 + t1556) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t1583 = np.cos(phi)
            t1582 = t1583 ** 2
            t1586 = t1582 ** 2
            t1585 = t1583 * t1582
            t1588 = t1585 ** 2
            t1590 = t1586 ** 2
            t1587 = t1583 * t1586
            t1592 = t1587 ** 2
            t1595 = 1 + 7 * t1582 - 22 * t1586 + 14 * t1588 + 5 * t1590 - 5 * t1592
            t1594 = 5 * t1585 + 14 * t1587 + (-22 * t1588 + 7 * t1590 + t1592 - 5) * t1583
            t1584 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.9614e4) * np.sqrt((1 - t1583)) * np.sqrt((1 + t1583)) * (-(t1594 + t1595) * np.sin((-t1584 + 12 * phi2)) + (t1594 - t1595) * np.sin((t1584 + 12 * phi2)))

        if Bindx == 111:
            t1596 = np.cos(phi)
            t1597 = t1596 ** 2
            t1598 = t1597 ** 2
            t1600 = t1598 ** 2
            t1599 = t1597 * t1598
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1598 + 15447 * t1600 + 5 + (-9904 + 3059 * t1599) * t1599 + (-11172 * t1600 - 300) * t1597) * np.cos((6 * phi1))

        if Bindx == 112:
            t1616 = np.cos(phi)
            t1615 = t1616 ** 2
            t1617 = t1616 * t1615
            t1618 = t1615 ** 2
            t1619 = t1616 * t1618
            t1620 = t1617 ** 2
            t1622 = t1618 ** 2
            t1624 = t1619 ** 2
            t1628 = -0.67375e5 / 0.1024e4 * t1617 + 0.615825e6 / 0.512e3 * t1619 + (-0.2227275e7 / 0.512e3 * t1620 + 0.5802125e7 / 0.1024e4 * t1622 - 0.2523675e7 / 0.1024e4 * t1624 - 0.975e3 / 0.1024e4) * t1616
            t1627 = 0.141225e6 / 0.512e3 * t1615 - 0.1882125e7 / 0.1024e4 * t1618 - 0.3954375e7 / 0.1024e4 * t1622 + 0.109725e6 / 0.512e3 * t1624 - 0.6725e4 / 0.1024e4 + (0.1128225e7 / 0.256e3 + 0.841225e6 / 0.1024e4 * t1620) * t1620
            tfunc[..., c] = (t1627 + t1628) * np.cos((6 * phi1 - 6 * phi2)) + (t1627 - t1628) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 113:
            t1641 = np.cos(phi)
            t1640 = t1641 ** 2
            t1644 = t1640 ** 2
            t1647 = t1644 ** 2
            t1645 = t1641 * t1644
            t1649 = t1645 ** 2
            t1650 = t1641 * t1649
            t1653 = t1641 * t1650 - 12 * t1640 + 27 * t1644 - 27 * t1647 + 12 * t1649 - 1
            t1652 = -6 * t1650 + 2 * (18 * t1640 - 18) * t1645 + 2 * (t1640 - t1647 + 3) * t1641
            t1642 = 6 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1652 + t1653) * np.cos((-t1642 + 12 * phi2)) + (-t1652 + t1653) * np.cos((t1642 + 12 * phi2)))

        if Bindx == 114:
            t1660 = np.sin(phi)
            t1657 = t1660 ** 2
            t1658 = t1657 ** 2
            t1654 = np.cos(phi)
            t1655 = t1654 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t1654 * t1658 ** 2 * (5 + (-70 + 161 * t1655) * t1655) * np.sin((7 * phi1)) * ((1 - t1654) ** (-0.1e1 / 0.2e1)) * ((1 + t1654) ** (-0.1e1 / 0.2e1))

        if Bindx == 115:
            t1675 = np.cos(phi)
            t1674 = t1675 ** 2
            t1678 = t1674 ** 2
            t1677 = t1675 * t1674
            t1680 = t1677 ** 2
            t1682 = t1678 ** 2
            t1679 = t1675 * t1678
            t1684 = t1679 ** 2
            t1686 = t1680 ** 2
            t1689 = 29 - 1044 * t1674 + 3745 * t1678 + 2016 * t1680 - 23121 * t1682 + 30772 * t1684 - 12397 * t1686
            t1688 = 4774 * t1677 - 21546 * t1679 + (40956 * t1680 - 31520 * t1682 + 4158 * t1684 + 3542 * t1686 - 364) * t1675
            t1676 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1688 + t1689) * np.sin((-t1676 + 6 * phi2)) + (t1688 - t1689) * np.sin((t1676 + 6 * phi2))) * ((1 - t1675) ** (-0.1e1 / 0.2e1)) * ((1 + t1675) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t1702 = np.cos(phi)
            t1701 = t1702 ** 2
            t1705 = t1701 ** 2
            t1704 = t1702 * t1701
            t1707 = t1704 ** 2
            t1709 = t1705 ** 2
            t1706 = t1702 * t1705
            t1711 = t1706 ** 2
            t1714 = -1 - 19 * t1701 + 6 * t1705 + 42 * t1707 - 21 * t1709 - 7 * t1711
            t1713 = 21 * t1704 - 42 * t1706 + (-6 * t1707 + 19 * t1709 + t1711 + 7) * t1702
            t1703 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.10626e5) * np.sqrt((1 - t1702)) * np.sqrt((1 + t1702)) * (-(t1713 + t1714) * np.sin((-t1703 + 12 * phi2)) + (t1713 - t1714) * np.sin((t1703 + 12 * phi2)))

        if Bindx == 117:
            t1715 = np.cos(phi)
            t1716 = t1715 ** 2
            t1717 = t1716 ** 2
            t1719 = t1717 ** 2
            t1718 = t1716 * t1717
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t1717 + 1135 * t1719 + 1 + (-900 + 161 * t1718) * t1718 + (-686 * t1719 - 46) * t1716) * np.cos((8 * phi1))

        if Bindx == 118:
            t1735 = np.cos(phi)
            t1734 = t1735 ** 2
            t1737 = t1735 * t1734
            t1738 = t1734 ** 2
            t1739 = t1735 * t1738
            t1740 = t1737 ** 2
            t1742 = t1738 ** 2
            t1744 = t1739 ** 2
            t1748 = 3332 * t1737 - 6888 * t1739 + (-408 * t1740 + 11452 * t1742 - 7084 * t1744 - 404) * t1735
            t1747 = 532 * t1734 - 5607 * t1738 - 20337 * t1742 + 5852 * t1744 - 19 + (17808 + 1771 * t1740) * t1740
            t1736 = 8 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * ((t1747 + t1748) * np.cos((-t1736 + 6 * phi2)) + (t1747 - t1748) * np.cos((t1736 + 6 * phi2)))

        if Bindx == 119:
            t1762 = np.cos(phi)
            t1761 = t1762 ** 2
            t1764 = t1762 * t1761
            t1765 = t1761 ** 2
            t1766 = t1762 * t1765
            t1767 = t1764 ** 2
            t1769 = t1765 ** 2
            t1771 = t1766 ** 2
            t1775 = -40 * t1764 + 48 * t1766 + 8 * (6 * t1767 - 5 * t1769 - t1771 - 1) * t1762
            t1774 = 26 * t1761 + 15 * t1765 + 15 * t1769 + 26 * t1771 + 1 + (-84 + t1767) * t1767
            t1763 = 8 * phi1
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.10626e5) * ((t1774 + t1775) * np.cos((-t1763 + 12 * phi2)) + (t1774 - t1775) * np.cos((t1763 + 12 * phi2)))

        if Bindx == 120:
            t1781 = np.sin(phi)
            t1777 = t1781 ** 2
            t1779 = t1781 * t1777 ** 2
            t1776 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t1776 * t1779 ** 2 * (23 * t1776 ** 2 - 3) * np.sin((9 * phi1)) * ((1 - t1776) ** (-0.1e1 / 0.2e1)) * ((1 + t1776) ** (-0.1e1 / 0.2e1))

        if Bindx == 121:
            t1796 = np.cos(phi)
            t1795 = t1796 ** 2
            t1799 = t1795 ** 2
            t1798 = t1796 * t1795
            t1801 = t1798 ** 2
            t1803 = t1799 ** 2
            t1800 = t1796 * t1799
            t1805 = t1800 ** 2
            t1807 = t1801 ** 2
            t1810 = 37 - 740 * t1795 + 3673 * t1799 - 5952 * t1801 + 1383 * t1803 + 3876 * t1805 - 2277 * t1807
            t1809 = -54 * t1798 - 3078 * t1800 + (9252 * t1801 - 9088 * t1803 + 2354 * t1805 + 506 * t1807 + 108) * t1796
            t1797 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.266e3) * (-(t1809 + t1810) * np.sin((-t1797 + 6 * phi2)) + (t1809 - t1810) * np.sin((t1797 + 6 * phi2))) * ((1 - t1796) ** (-0.1e1 / 0.2e1)) * ((1 + t1796) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t1823 = np.cos(phi)
            t1822 = t1823 ** 2
            t1826 = t1822 ** 2
            t1825 = t1823 * t1822
            t1828 = t1825 ** 2
            t1830 = t1826 ** 2
            t1827 = t1823 * t1826
            t1832 = t1827 ** 2
            t1835 = 1 + 35 * t1822 + 90 * t1826 - 42 * t1828 - 75 * t1830 - 9 * t1832
            t1834 = -75 * t1825 - 42 * t1827 + (90 * t1828 + 35 * t1830 + t1832 - 9) * t1823
            t1824 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.506e3) * np.sqrt((1 - t1823)) * np.sqrt((1 + t1823)) * (-(t1834 + t1835) * np.sin((-t1824 + 12 * phi2)) + (t1834 - t1835) * np.sin((t1824 + 12 * phi2)))

        if Bindx == 123:
            t1836 = np.cos(phi)
            t1837 = t1836 ** 2
            t1838 = t1837 ** 2
            t1840 = t1838 ** 2
            t1839 = t1837 * t1838
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t1838 + 235 * t1840 + 1 + (-240 + 23 * t1839) * t1839 + (-116 * t1840 - 28) * t1837) * np.cos((10 * phi1))

        if Bindx == 124:
            t1856 = np.cos(phi)
            t1855 = t1856 ** 2
            t1858 = t1856 * t1855
            t1859 = t1855 ** 2
            t1860 = t1856 * t1859
            t1861 = t1858 ** 2
            t1863 = t1859 ** 2
            t1865 = t1860 ** 2
            t1869 = 121 * t1858 - 366 * t1860 + (282 * t1861 + 85 * t1863 - 115 * t1865 - 7) * t1856
            t1868 = -50 * t1855 + 45 * t1859 - 441 * t1863 + 166 * t1865 + 5 + (252 + 23 * t1861) * t1861
            t1857 = 10 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.4389e4) * ((t1868 + t1869) * np.cos((-t1857 + 6 * phi2)) + (t1868 - t1869) * np.cos((t1857 + 6 * phi2)))

        if Bindx == 125:
            t1882 = np.cos(phi)
            t1881 = t1882 ** 2
            t1885 = t1881 ** 2
            t1888 = t1885 ** 2
            t1886 = t1882 * t1885
            t1890 = t1886 ** 2
            t1891 = t1882 * t1890
            t1894 = t1882 * t1891 - 44 * t1881 - 165 * t1885 + 165 * t1888 + 44 * t1890 - 1
            t1893 = -10 * t1891 + (-132 * t1881 + 132) * t1886 + (110 * t1881 - 110 * t1888 + 10) * t1882
            t1883 = 10 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.69e2) * ((t1893 + t1894) * np.cos((-t1883 + 12 * phi2)) + (-t1893 + t1894) * np.cos((t1883 + 12 * phi2)))

        if Bindx == 126:
            t1900 = np.sin(phi)
            t1896 = t1900 ** 2
            t1897 = t1900 * t1896
            t1898 = t1897 ** 2
            t1895 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t1895 * t1898 ** 2 * np.sin((11 * phi1)) * ((1 - t1895) ** (-0.1e1 / 0.2e1)) * ((1 + t1895) ** (-0.1e1 / 0.2e1))

        if Bindx == 127:
            t1914 = np.cos(phi)
            t1916 = t1914 ** 2
            t1918 = t1916 ** 2
            t1917 = t1914 * t1916
            t1920 = t1917 ** 2
            t1922 = t1918 ** 2
            t1919 = t1914 * t1918
            t1924 = t1919 ** 2
            t1926 = t1920 ** 2
            t1929 = -1 + 31 * t1918 - 72 * t1920 + 45 * t1922 + 8 * t1924 - 11 * t1926
            t1928 = -22 * t1917 + 18 * t1919 + (36 * t1920 - 56 * t1922 + 18 * t1924 + 2 * t1926 + 4) * t1914
            t1915 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.201894e6) * (-(t1928 + t1929) * np.sin((-t1915 + 6 * phi2)) + (t1928 - t1929) * np.sin((t1915 + 6 * phi2))) * ((1 - t1914) ** (-0.1e1 / 0.2e1)) * ((1 + t1914) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1942 = np.cos(phi)
            t1941 = t1942 ** 2
            t1945 = t1941 ** 2
            t1944 = t1942 * t1941
            t1947 = t1944 ** 2
            t1949 = t1945 ** 2
            t1946 = t1942 * t1945
            t1951 = t1946 ** 2
            t1954 = -1 - 55 * t1941 - 330 * t1945 - 462 * t1947 - 165 * t1949 - 11 * t1951
            t1953 = 165 * t1944 + 462 * t1946 + (330 * t1947 + 55 * t1949 + t1951 + 11) * t1942
            t1943 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6e1) * np.sqrt((1 - t1942)) * np.sqrt((1 + t1942)) * (-(t1953 + t1954) * np.sin((-t1943 + 12 * phi2)) + (t1953 - t1954) * np.sin((t1943 + 12 * phi2)))

        if Bindx == 129:
            t1955 = np.cos(phi)
            t1956 = t1955 ** 2
            t1962 = -6 * t1956
            t1957 = t1956 ** 2
            t1958 = t1956 * t1957
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t1962 + 1 + (-20 + t1958) * t1958 + (15 + (t1962 + 15) * t1957) * t1957)

        if Bindx == 130:
            t1975 = np.cos(phi)
            t1974 = t1975 ** 2
            t1978 = t1974 ** 2
            t1981 = t1978 ** 2
            t1979 = t1975 * t1978
            t1983 = t1979 ** 2
            t1984 = t1975 * t1983
            t1987 = t1975 * t1984 - 12 * t1974 + 27 * t1978 - 27 * t1981 + 12 * t1983 - 1
            t1986 = -6 * t1984 + 2 * (18 * t1974 - 18) * t1979 + 2 * (t1974 - t1981 + 3) * t1975
            t1976 = 12 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1986 + t1987) * np.cos((-t1976 + 6 * phi2)) + (-t1986 + t1987) * np.cos((t1976 + 6 * phi2)))

        if Bindx == 131:
            t2001 = np.cos(phi)
            t2000 = t2001 ** 2
            t2002 = t2001 * t2000
            t2003 = t2000 ** 2
            t2004 = t2001 * t2003
            t2005 = t2002 ** 2
            t2007 = t2003 ** 2
            t2009 = t2004 ** 2
            t2013 = -0.75e2 / 0.1024e4 * (t2009 + 1) * t2001 - 0.2475e4 / 0.512e3 * t2001 * t2005 - 0.2475e4 / 0.512e3 * t2004 - 0.1375e4 / 0.1024e4 * t2001 * t2007 - 0.1375e4 / 0.1024e4 * t2002
            t2012 = 0.25e2 / 0.4096e4 + 0.12375e5 / 0.4096e4 * t2007 + 0.12375e5 / 0.4096e4 * t2003 + 0.825e3 / 0.2048e4 * t2009 + 0.825e3 / 0.2048e4 * t2000 + (0.5775e4 / 0.1024e4 + 0.25e2 / 0.4096e4 * t2005) * t2005
            tfunc[..., c] = (t2012 + t2013) * np.cos((12 * phi1 - 12 * phi2)) + (t2012 - t2013) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 132:
            t2015 = np.cos(phi)
            t2016 = t2015 ** 2
            t2017 = t2016 ** 2
            t2019 = t2017 ** 2
            t2018 = t2016 * t2017
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t2015 * (813 * t2017 + 3279 * t2019 + 5 + (-2344 + 575 * t2018) * t2018 + (-2208 * t2019 - 120) * t2016) * np.cos((6 * phi2))

        if Bindx == 133:
            t2022 = np.cos(phi)
            t2023 = t2022 ** 2
            t2029 = -6 * t2023
            t2024 = t2023 ** 2
            t2025 = t2023 * t2024
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t2022 * np.cos((12 * phi2)) * (t2029 + 1 + (-20 + t2025) * t2025 + (15 + (t2029 + 15) * t2024) * t2024)

        if Bindx == 134:
            t2045 = np.cos(phi)
            t2044 = t2045 ** 2
            t2046 = t2045 * t2044
            t2047 = t2044 ** 2
            t2048 = t2045 * t2047
            t2049 = t2046 ** 2
            t2050 = t2045 * t2049
            t2051 = t2047 ** 2
            t2053 = t2048 ** 2
            t2055 = t2049 ** 2
            t2059 = -720 * t2046 + 4878 * t2048 - 14064 * t2050 + (19674 * t2051 - 13248 * t2053 + 3450 * t2055 + 30) * t2045
            t2058 = -7475 * t2050 ** 2 - 365 * t2044 + 4425 * t2047 - 20473 * t2049 + 45919 * t2051 - 53799 * t2053 + 31763 * t2055 + 5
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.7106e4) * ((t2058 + t2059) * np.sin((phi1 - 6 * phi2)) + (-t2058 + t2059) * np.sin((phi1 + 6 * phi2))) * ((1 - t2045) ** (-0.1e1 / 0.2e1)) * ((1 + t2045) ** (-0.1e1 / 0.2e1))

        if Bindx == 135:
            t2075 = np.cos(phi)
            t2074 = t2075 ** 2
            t2076 = t2075 * t2074
            t2077 = t2074 ** 2
            t2078 = t2075 * t2077
            t2079 = t2076 ** 2
            t2080 = t2075 * t2079
            t2081 = t2077 ** 2
            t2083 = t2078 ** 2
            t2085 = t2079 ** 2
            t2089 = -72 * t2076 + 180 * t2078 - 240 * t2080 + 12 * (15 * t2081 - 6 * t2083 + t2085 + 1) * t2075
            t2088 = -13 * t2080 ** 2 - 19 * t2074 + 93 * t2077 - 215 * t2079 + 275 * t2081 - 201 * t2083 + 79 * t2085 + 1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.14858e5) * ((t2088 + t2089) * np.sin((phi1 - 12 * phi2)) + (-t2088 + t2089) * np.sin((phi1 + 12 * phi2))) * ((1 - t2075) ** (-0.1e1 / 0.2e1)) * ((1 + t2075) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t2104 = np.cos(phi)
            t2103 = t2104 ** 2
            t2107 = t2103 ** 2
            t2106 = t2104 * t2103
            t2109 = t2106 ** 2
            t2111 = t2107 ** 2
            t2108 = t2104 * t2107
            t2113 = t2108 ** 2
            t2115 = t2109 ** 2
            t2118 = -1 + 71 * t2103 - 790 * t2107 + 3142 * t2109 - 5573 * t2111 + 4531 * t2113 - 1380 * t2115
            t2117 = 214 * t2106 - 1493 * t2108 + (4588 * t2109 - 7003 * t2111 + 5198 * t2113 - 1495 * t2115 - 9) * t2104
            t2105 = 2 * phi1
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.35530e5) * ((-t2117 + t2118) * np.cos((-t2105 + 6 * phi2)) + (t2117 + t2118) * np.cos((t2105 + 6 * phi2)))

        if Bindx == 137:
            t2133 = np.cos(phi)
            t2132 = t2133 ** 2
            t2136 = t2132 ** 2
            t2135 = t2133 * t2132
            t2138 = t2135 ** 2
            t2140 = t2136 ** 2
            t2137 = t2133 * t2136
            t2142 = t2137 ** 2
            t2144 = t2138 ** 2
            t2147 = -2 + 34 * t2132 - 140 * t2136 + 260 * t2138 - 250 * t2140 + 122 * t2142 - 24 * t2144
            t2146 = -32 * t2135 + 25 * t2137 + (40 * t2138 - 85 * t2140 + 56 * t2142 - 13 * t2144 + 9) * t2133
            t2134 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.74290e5) * ((-t2146 + t2147) * np.cos((-t2134 + 12 * phi2)) + (t2146 + t2147) * np.cos((t2134 + 12 * phi2)))

        if Bindx == 138:
            t2163 = np.cos(phi)
            t2162 = t2163 ** 2
            t2166 = t2162 ** 2
            t2165 = t2163 * t2162
            t2168 = t2165 ** 2
            t2169 = t2163 * t2168
            t2170 = t2166 ** 2
            t2167 = t2163 * t2166
            t2172 = t2167 ** 2
            t2174 = t2168 ** 2
            t2178 = -16445 * t2169 ** 2 - 207 * t2162 + 2939 * t2166 - 17743 * t2168 + 52529 * t2170 - 79013 * t2172 + 57937 * t2174 + 3
            t2177 = -4444 * t2165 + 29390 * t2167 - 84680 * t2169 + (120766 * t2170 - 83996 * t2172 + 22770 * t2174 + 194) * t2163
            t2164 = 3 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.3230e4) * (-(t2177 + t2178) * np.sin((-t2164 + 6 * phi2)) + (t2177 - t2178) * np.sin((t2164 + 6 * phi2))) * ((1 + t2163) ** (-0.1e1 / 0.2e1)) * ((1 - t2163) ** (-0.1e1 / 0.2e1))

        if Bindx == 139:
            t2194 = np.cos(phi)
            t2193 = t2194 ** 2
            t2196 = t2194 * t2193
            t2197 = t2193 ** 2
            t2198 = t2194 * t2197
            t2199 = t2196 ** 2
            t2200 = t2194 * t2199
            t2201 = t2197 ** 2
            t2203 = t2198 ** 2
            t2205 = t2199 ** 2
            t2209 = -16 * t2196 + 140 * t2198 - 320 * t2200 + (340 * t2201 - 176 * t2203 + 36 * t2205 - 4) * t2194
            t2208 = -13 * t2200 ** 2 + 45 * t2193 - 167 * t2197 + 265 * t2199 - 185 * t2201 + 23 * t2203 + 35 * t2205 - 3
            t2195 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.817190e6) * (-(t2208 + t2209) * np.sin((-t2195 + 12 * phi2)) + (-t2208 + t2209) * np.sin((t2195 + 12 * phi2))) * ((1 + t2194) ** (-0.1e1 / 0.2e1)) * ((1 - t2194) ** (-0.1e1 / 0.2e1))

        if Bindx == 140:
            t2224 = np.cos(phi)
            t2223 = t2224 ** 2
            t2226 = t2224 * t2223
            t2227 = t2223 ** 2
            t2228 = t2224 * t2227
            t2229 = t2226 ** 2
            t2231 = t2227 ** 2
            t2233 = t2228 ** 2
            t2235 = t2229 ** 2
            t2238 = 7280 * t2226 - 27661 * t2228 + (-1480 * t2229 + 136345 * t2231 - 196328 * t2233 + 82225 * t2235 - 381) * t2224
            t2237 = -6890 * t2223 + 73180 * t2227 - 291124 * t2229 + 536930 * t2231 - 464002 * t2233 + 151800 * t2235 + 106
            t2225 = 4 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * ((t2237 - t2238) * np.cos((-t2225 + 6 * phi2)) + (t2237 + t2238) * np.cos((t2225 + 6 * phi2)))

        if Bindx == 141:
            t2253 = np.cos(phi)
            t2252 = t2253 ** 2
            t2256 = t2252 ** 2
            t2255 = t2253 * t2252
            t2258 = t2255 ** 2
            t2260 = t2256 ** 2
            t2257 = t2253 * t2256
            t2262 = t2257 ** 2
            t2264 = t2258 ** 2
            t2267 = -4 + 44 * t2252 - 88 * t2256 - 8 * t2258 + 172 * t2260 - 164 * t2262 + 48 * t2264
            t2266 = -74 * t2255 + 253 * t2257 + (-332 * t2258 + 173 * t2260 - 10 * t2262 - 13 * t2264 + 3) * t2253
            t2254 = 4 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * ((t2266 + t2267) * np.cos((-t2254 + 12 * phi2)) + (-t2266 + t2267) * np.cos((t2254 + 12 * phi2)))

        if Bindx == 142:
            t2283 = np.cos(phi)
            t2282 = t2283 ** 2
            t2286 = t2282 ** 2
            t2285 = t2283 * t2282
            t2288 = t2285 ** 2
            t2289 = t2283 * t2288
            t2290 = t2286 ** 2
            t2287 = t2283 * t2286
            t2292 = t2287 ** 2
            t2294 = t2288 ** 2
            t2298 = 82225 * t2289 ** 2 - 6893 * t2282 + 63345 * t2286 - 196005 * t2288 + 221115 * t2290 + 6369 * t2292 - 170269 * t2294 + 113
            t2297 = -26140 * t2285 + 175642 * t2287 - 542952 * t2289 + (845090 * t2290 - 642620 * t2292 + 189750 * t2294 + 1230) * t2283
            t2284 = 5 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.38e2) * (-(t2297 - t2298) * np.sin((-t2284 + 6 * phi2)) + (t2297 + t2298) * np.sin((t2284 + 6 * phi2))) * ((1 + t2283) ** (-0.1e1 / 0.2e1)) * ((1 - t2283) ** (-0.1e1 / 0.2e1))

        if Bindx == 143:
            t2314 = np.cos(phi)
            t2313 = t2314 ** 2
            t2316 = t2314 * t2313
            t2317 = t2313 ** 2
            t2318 = t2314 * t2317
            t2319 = t2316 ** 2
            t2320 = t2314 * t2319
            t2321 = t2317 ** 2
            t2323 = t2318 ** 2
            t2325 = t2319 ** 2
            t2329 = -128 * t2316 + 332 * t2318 - 288 * t2320 + (-28 * t2321 + 160 * t2323 - 60 * t2325 + 12) * t2314
            t2328 = -13 * t2320 ** 2 - 35 * t2313 - 15 * t2317 + 297 * t2319 - 513 * t2321 + 327 * t2323 - 53 * t2325 + 5
            t2315 = 5 * phi1
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.9614e4) * (-(-t2328 + t2329) * np.sin((-t2315 + 12 * phi2)) + (t2328 + t2329) * np.sin((t2315 + 12 * phi2))) * ((1 + t2314) ** (-0.1e1 / 0.2e1)) * ((1 - t2314) ** (-0.1e1 / 0.2e1))

        if Bindx == 144:
            t2344 = np.cos(phi)
            t2343 = t2344 ** 2
            t2346 = t2343 ** 2
            t2345 = t2344 * t2343
            t2348 = t2345 ** 2
            t2350 = t2346 ** 2
            t2347 = t2344 * t2346
            t2352 = t2347 ** 2
            t2354 = t2348 ** 2
            t2357 = -0.102465e6 / 0.1024e4 * t2343 + 0.657045e6 / 0.512e3 * t2346 - 0.3475629e7 / 0.512e3 * t2348 + 0.16073235e8 / 0.1024e4 * t2350 - 0.16469541e8 / 0.1024e4 * t2352 + 0.1536975e7 / 0.256e3 * t2354 + 0.1863e4 / 0.1024e4
            t2356 = -0.611145e6 / 0.512e3 * t2345 + 0.5875983e7 / 0.1024e4 * t2347 + (-0.2772225e7 / 0.256e3 * t2348 + 0.7301745e7 / 0.1024e4 * t2350 + 0.635283e6 / 0.512e3 * t2352 - 0.2220075e7 / 0.1024e4 * t2354 + 0.69147e5 / 0.1024e4) * t2344
            tfunc[..., c] = (t2356 + t2357) * np.cos((6 * phi1 - 6 * phi2)) + (-t2356 + t2357) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 145:
            t2372 = np.cos(phi)
            t2371 = t2372 ** 2
            t2375 = t2371 ** 2
            t2374 = t2372 * t2371
            t2377 = t2374 ** 2
            t2379 = t2375 ** 2
            t2376 = t2372 * t2375
            t2381 = t2376 ** 2
            t2383 = t2377 ** 2
            t2386 = 6 - 6 * t2371 - 188 * t2375 + 468 * t2377 - 306 * t2379 - 46 * t2381 + 72 * t2383
            t2385 = 144 * t2374 - 135 * t2376 + (-216 * t2377 + 363 * t2379 - 120 * t2381 - 13 * t2383 - 23) * t2372
            t2373 = 6 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2385 + t2386) * np.cos((-t2373 + 12 * phi2)) + (-t2385 + t2386) * np.cos((t2373 + 12 * phi2)))

        if Bindx == 146:
            t2402 = np.cos(phi)
            t2401 = t2402 ** 2
            t2404 = t2402 * t2401
            t2405 = t2401 ** 2
            t2406 = t2402 * t2405
            t2407 = t2404 ** 2
            t2408 = t2402 * t2407
            t2409 = t2405 ** 2
            t2411 = t2406 ** 2
            t2413 = t2407 ** 2
            t2417 = 2632 * t2404 + 4046 * t2406 - 65664 * t2408 + (161938 * t2409 - 155848 * t2411 + 53130 * t2413 - 234) * t2402
            t2416 = 16445 * t2408 ** 2 - 4165 * t2401 + 35553 * t2405 - 120057 * t2407 + 183327 * t2409 - 112959 * t2411 + 1771 * t2413 + 85
            t2403 = 7 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.35e2) * (-(-t2416 + t2417) * np.sin((-t2403 + 6 * phi2)) + (t2416 + t2417) * np.sin((t2403 + 6 * phi2))) * ((1 + t2402) ** (-0.1e1 / 0.2e1)) * ((1 - t2402) ** (-0.1e1 / 0.2e1))

        if Bindx == 147:
            t2433 = np.cos(phi)
            t2432 = t2433 ** 2
            t2435 = t2433 * t2432
            t2436 = t2432 ** 2
            t2437 = t2433 * t2436
            t2438 = t2435 ** 2
            t2439 = t2433 * t2438
            t2440 = t2436 ** 2
            t2442 = t2437 ** 2
            t2444 = t2438 ** 2
            t2448 = 136 * t2435 + 116 * t2437 - 720 * t2439 + (644 * t2440 - 56 * t2442 - 84 * t2444 - 36) * t2433
            t2447 = -13 * t2439 ** 2 - 35 * t2432 + 357 * t2436 - 567 * t2438 + 27 * t2440 + 423 * t2442 - 185 * t2444 - 7
            t2434 = 7 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-(-t2447 + t2448) * np.sin((-t2434 + 12 * phi2)) + (t2447 + t2448) * np.sin((t2434 + 12 * phi2))) * ((1 + t2433) ** (-0.1e1 / 0.2e1)) * ((1 - t2433) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t2463 = np.cos(phi)
            t2462 = t2463 ** 2
            t2466 = t2462 ** 2
            t2465 = t2463 * t2462
            t2468 = t2465 ** 2
            t2470 = t2466 ** 2
            t2467 = t2463 * t2466
            t2472 = t2467 ** 2
            t2474 = t2468 ** 2
            t2477 = -5084 * t2462 + 24904 * t2466 - 20568 * t2468 - 69204 * t2470 + 130548 * t2472 - 60720 * t2474 + 124
            t2476 = 15864 * t2465 - 84537 * t2467 + (185544 * t2468 - 164659 * t2470 + 32384 * t2472 + 16445 * t2474 - 1041) * t2463
            t2464 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.10e2) * ((t2476 + t2477) * np.cos((-t2464 + 6 * phi2)) + (-t2476 + t2477) * np.cos((t2464 + 6 * phi2)))

        if Bindx == 149:
            t2492 = np.cos(phi)
            t2491 = t2492 ** 2
            t2495 = t2491 ** 2
            t2494 = t2492 * t2491
            t2497 = t2494 ** 2
            t2499 = t2495 ** 2
            t2496 = t2492 * t2495
            t2501 = t2496 ** 2
            t2503 = t2497 ** 2
            t2506 = -8 - 104 * t2491 + 400 * t2495 + 48 * t2497 - 744 * t2499 + 312 * t2501 + 96 * t2503
            t2505 = -18 * t2494 - 579 * t2496 + (708 * t2497 + 125 * t2499 - 274 * t2501 - 13 * t2503 + 51) * t2492
            t2493 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2530e4) * ((t2505 + t2506) * np.cos((-t2493 + 12 * phi2)) + (-t2505 + t2506) * np.cos((t2493 + 12 * phi2)))

        if Bindx == 150:
            t2522 = np.cos(phi)
            t2521 = t2522 ** 2
            t2524 = t2522 * t2521
            t2525 = t2521 ** 2
            t2526 = t2522 * t2525
            t2527 = t2524 ** 2
            t2528 = t2522 * t2527
            t2529 = t2525 ** 2
            t2531 = t2526 ** 2
            t2533 = t2527 ** 2
            t2537 = 14936 * t2524 - 48274 * t2526 + 47136 * t2528 + (28866 * t2529 - 72312 * t2531 + 31050 * t2533 - 1402) * t2522
            t2536 = -7475 * t2528 ** 2 + 891 * t2521 - 17631 * t2525 + 83799 * t2527 - 155601 * t2529 + 118561 * t2531 - 22517 * t2533 - 27
            t2523 = 9 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.11e2) * (-(t2536 + t2537) * np.sin((-t2523 + 6 * phi2)) + (-t2536 + t2537) * np.sin((t2523 + 6 * phi2))) * ((1 + t2522) ** (-0.1e1 / 0.2e1)) * ((1 - t2522) ** (-0.1e1 / 0.2e1))

        if Bindx == 151:
            t2553 = np.cos(phi)
            t2552 = t2553 ** 2
            t2555 = t2553 * t2552
            t2556 = t2552 ** 2
            t2557 = t2553 * t2556
            t2558 = t2555 ** 2
            t2559 = t2553 * t2558
            t2560 = t2556 ** 2
            t2562 = t2557 ** 2
            t2564 = t2558 ** 2
            t2568 = 152 * t2555 - 1012 * t2557 + 528 * t2559 + (924 * t2560 - 552 * t2562 - 108 * t2564 + 68) * t2553
            t2567 = -13 * t2559 ** 2 + 189 * t2552 - 363 * t2556 - 759 * t2558 + 1419 * t2560 - 121 * t2562 - 361 * t2564 + 9
            t2554 = 9 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.23e2) * (-(-t2567 + t2568) * np.sin((-t2554 + 12 * phi2)) + (t2567 + t2568) * np.sin((t2554 + 12 * phi2))) * ((1 + t2553) ** (-0.1e1 / 0.2e1)) * ((1 - t2553) ** (-0.1e1 / 0.2e1))

        if Bindx == 152:
            t2583 = np.cos(phi)
            t2582 = t2583 ** 2
            t2586 = t2582 ** 2
            t2585 = t2583 * t2582
            t2588 = t2585 ** 2
            t2590 = t2586 ** 2
            t2587 = t2583 * t2586
            t2592 = t2587 ** 2
            t2594 = t2588 ** 2
            t2597 = 17 - 391 * t2582 + 2246 * t2586 - 4182 * t2588 + 1605 * t2590 + 2205 * t2592 - 1500 * t2594
            t2596 = 210 * t2585 + 1377 * t2587 + (-5436 * t2588 + 5951 * t2590 - 1702 * t2592 - 325 * t2594 - 75) * t2583
            t2584 = 10 * phi1
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.253e3) * ((-t2596 + t2597) * np.cos((-t2584 + 6 * phi2)) + (t2596 + t2597) * np.cos((t2584 + 6 * phi2)))

        if Bindx == 153:
            t2612 = np.cos(phi)
            t2611 = t2612 ** 2
            t2615 = t2611 ** 2
            t2614 = t2612 * t2611
            t2617 = t2614 ** 2
            t2619 = t2615 ** 2
            t2616 = t2612 * t2615
            t2621 = t2616 ** 2
            t2623 = t2617 ** 2
            t2626 = -0.20925e5 / 0.1024e4 * t2611 - 0.7425e4 / 0.512e3 * t2615 + 0.57915e5 / 0.512e3 * t2617 - 0.4455e4 / 0.1024e4 * t2619 - 0.66825e5 / 0.1024e4 * t2621 - 0.2025e4 / 0.256e3 * t2623 - 0.675e3 / 0.1024e4
            t2625 = -0.4455e4 / 0.128e3 * t2614 + 0.111375e6 / 0.2048e4 * t2616 + (0.22275e5 / 0.256e3 * t2617 - 0.141075e6 / 0.2048e4 * t2619 - 0.7965e4 / 0.256e3 * t2621 - 0.1755e4 / 0.2048e4 * t2623 - 0.11745e5 / 0.2048e4) * t2612
            t2613 = 10 * phi1
            tfunc[..., c] = (-t2625 + t2626) * np.cos((-t2613 + 12 * phi2)) + (t2625 + t2626) * np.cos((t2613 + 12 * phi2))

        if Bindx == 154:
            t2642 = np.cos(phi)
            t2641 = t2642 ** 2
            t2644 = t2642 * t2641
            t2645 = t2641 ** 2
            t2646 = t2642 * t2645
            t2647 = t2644 ** 2
            t2648 = t2642 * t2647
            t2649 = t2645 ** 2
            t2651 = t2646 ** 2
            t2653 = t2647 ** 2
            t2657 = -1532 * t2644 + 6626 * t2646 - 9576 * t2648 + (3482 * t2649 + 2596 * t2651 - 1650 * t2653 + 54) * t2642
            t2656 = -325 * t2648 ** 2 - 767 * t2641 + 1707 * t2645 + 2025 * t2647 - 9207 * t2649 + 8667 * t2651 - 2159 * t2653 + 59
            t2643 = 11 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.506e3) * (-(-t2656 + t2657) * np.sin((-t2643 + 6 * phi2)) + (t2656 + t2657) * np.sin((t2643 + 6 * phi2))) * ((1 + t2642) ** (-0.1e1 / 0.2e1)) * ((1 - t2642) ** (-0.1e1 / 0.2e1))

        if Bindx == 155:
            t2673 = np.cos(phi)
            t2672 = t2673 ** 2
            t2675 = t2673 * t2672
            t2676 = t2672 ** 2
            t2677 = t2673 * t2676
            t2678 = t2675 ** 2
            t2679 = t2673 * t2678
            t2680 = t2676 ** 2
            t2682 = t2677 ** 2
            t2684 = t2678 ** 2
            t2688 = 992 * t2675 - 308 * t2677 - 3168 * t2679 + (836 * t2680 + 1408 * t2682 + 132 * t2684 + 108) * t2673
            t2687 = -13 * t2679 ** 2 - 451 * t2672 - 1023 * t2676 + 2409 * t2678 + 1551 * t2680 - 1881 * t2682 - 581 * t2684 - 11
            t2674 = 11 * phi1
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * (-(t2687 + t2688) * np.sin((-t2674 + 12 * phi2)) + (-t2687 + t2688) * np.sin((t2674 + 12 * phi2))) * ((1 + t2673) ** (-0.1e1 / 0.2e1)) * ((1 - t2673) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t2703 = np.cos(phi)
            t2702 = t2703 ** 2
            t2706 = t2702 ** 2
            t2705 = t2703 * t2702
            t2708 = t2705 ** 2
            t2710 = t2706 ** 2
            t2707 = t2703 * t2706
            t2712 = t2707 ** 2
            t2714 = t2708 ** 2
            t2717 = 6 - 6 * t2702 - 188 * t2706 + 468 * t2708 - 306 * t2710 - 46 * t2712 + 72 * t2714
            t2716 = 144 * t2705 - 135 * t2707 + (-216 * t2708 + 363 * t2710 - 120 * t2712 - 13 * t2714 - 23) * t2703
            t2704 = 12 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2716 + t2717) * np.cos((-t2704 + 6 * phi2)) + (-t2716 + t2717) * np.cos((t2704 + 6 * phi2)))

        if Bindx == 157:
            t2732 = np.cos(phi)
            t2731 = t2732 ** 2
            t2734 = t2731 ** 2
            t2733 = t2732 * t2731
            t2736 = t2733 ** 2
            t2738 = t2734 ** 2
            t2735 = t2732 * t2734
            t2740 = t2735 ** 2
            t2742 = t2736 ** 2
            t2745 = -0.4293e4 / 0.1024e4 * t2731 - 0.10395e5 / 0.512e3 * t2734 - 0.2673e4 / 0.512e3 * t2736 + 0.29403e5 / 0.1024e4 * t2738 + 0.13959e5 / 0.1024e4 * t2740 + 0.243e3 / 0.256e3 * t2742 - 0.81e2 / 0.1024e4
            t2744 = 0.24057e5 / 0.2048e4 * t2733 + 0.82863e5 / 0.4096e4 * t2735 + (-0.16929e5 / 0.1024e4 * t2736 - 0.102465e6 / 0.4096e4 * t2738 - 0.9639e4 / 0.2048e4 * t2740 - 0.351e3 / 0.4096e4 * t2742 + 0.3537e4 / 0.4096e4) * t2732
            tfunc[..., c] = (t2744 + t2745) * np.cos((12 * phi1 - 12 * phi2)) + (-t2744 + t2745) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 158:
            t2758 = np.cos(phi)
            t2757 = t2758 ** 2
            t2761 = t2757 ** 2
            t2764 = t2761 ** 2
            t2762 = t2758 * t2761
            t2766 = t2762 ** 2
            t2767 = t2758 * t2766
            t2770 = -t2758 * t2767 + 12 * t2757 - 27 * t2761 + 27 * t2764 - 12 * t2766 + 1
            t2769 = -6 * t2767 + 2 * (18 * t2757 - 18) * t2762 + 2 * (t2757 - t2764 + 3) * t2758
            t2759 = 13 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.6578e4) * np.sqrt((1 - t2758)) * np.sqrt((1 + t2758)) * (-(t2769 - t2770) * np.sin((-t2759 + 6 * phi2)) + (t2769 + t2770) * np.sin((t2759 + 6 * phi2)))

        if Bindx == 159:
            t2785 = np.cos(phi)
            t2784 = t2785 ** 2
            t2787 = t2785 * t2784
            t2788 = t2784 ** 2
            t2789 = t2785 * t2788
            t2791 = t2788 ** 2
            t2793 = t2789 ** 2
            t2790 = t2787 ** 2
            t2795 = t2790 ** 2
            t2796 = t2785 * t2795
            t2799 = -208 * t2787 - 572 * t2789 + 12 * t2796 + (572 * t2791 + 208 * t2793 - 12) * t2785
            t2798 = -t2785 * t2796 + 65 * t2784 + 429 * t2788 + 429 * t2790 - 429 * t2791 - 429 * t2793 - 65 * t2795 + 1
            t2786 = 13 * phi1
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.26e2) * (-(t2798 + t2799) * np.sin((-t2786 + 12 * phi2)) + (-t2798 + t2799) * np.sin((t2786 + 12 * phi2))) * ((1 + t2785) ** (-0.1e1 / 0.2e1)) * ((1 - t2785) ** (-0.1e1 / 0.2e1))

        if Bindx == 160:
            t2800 = np.cos(phi)
            t2801 = t2800 ** 2
            t2802 = t2801 ** 2
            t2803 = t2801 * t2802
            t2806 = t2803 ** 2
            t2804 = t2802 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t2806 - 0.421936515e9 / 0.2048e4 * t2804 + 0.140645505e9 / 0.2048e4 * t2803 - 0.22207185e8 / 0.2048e4 * t2802 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t2806 + 0.646969323e9 / 0.2048e4 * t2804 + 0.1306305e7 / 0.2048e4) * t2801

        if Bindx == 161:
            t2808 = np.cos(phi)
            t2809 = t2808 ** 2
            t2810 = t2809 ** 2
            t2811 = t2809 * t2810
            t2814 = t2811 ** 2
            t2812 = t2810 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t2810 + 6371 * t2811 - 15747 * t2812 - 12535 * t2814 - 1 + (19941 * t2812 + 3105 * t2814 + 87) * t2809) * np.cos((6 * phi2))

        if Bindx == 162:
            t2816 = np.cos(phi)
            t2817 = t2816 ** 2
            t2818 = t2817 ** 2
            t2819 = t2817 * t2818
            t2822 = t2819 ** 2
            t2820 = t2818 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t2818 + 425 * t2819 - 555 * t2820 - 163 * t2822 - 1 + (411 * t2820 + 27 * t2822 + 33) * t2817) * np.cos((12 * phi2))

        if Bindx == 163:
            t2825 = np.cos(phi)
            t2826 = t2825 ** 2
            t2827 = t2826 ** 2
            t2829 = t2827 ** 2
            t2828 = t2826 * t2827
            t2824 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t2825 * t2824 ** 2 * (138567 * t2827 + 1062347 * t2829 + 429 + (-554268 + 334305 * t2828) * t2828 + (-965770 * t2829 - 14586) * t2826) * np.sin(phi1) * ((1 + t2825) ** (-0.1e1 / 0.2e1)) * ((1 - t2825) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t2848 = np.cos(phi)
            t2847 = t2848 ** 2
            t2850 = t2847 ** 2
            t2849 = t2848 * t2847
            t2852 = t2849 ** 2
            t2854 = t2850 ** 2
            t2851 = t2848 * t2850
            t2856 = t2851 ** 2
            t2858 = t2852 ** 2
            t2853 = t2848 * t2852
            t2860 = t2853 ** 2
            t2863 = 1 - 87 * t2847 + 1221 * t2850 - 6371 * t2852 + 15747 * t2854 - 19941 * t2856 + 12535 * t2858 - 3105 * t2860
            t2862 = 843 * t2849 - 7185 * t2851 + 27367 * t2853 + (-54231 * t2854 + 58305 * t2856 - 32315 * t2858 + 7245 * t2860 - 29) * t2848
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.138567e6) * ((t2862 + t2863) * np.sin((phi1 - 6 * phi2)) + (t2862 - t2863) * np.sin((phi1 + 6 * phi2))) * ((1 + t2848) ** (-0.1e1 / 0.2e1)) * ((1 - t2848) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t2880 = np.cos(phi)
            t2879 = t2880 ** 2
            t2882 = t2879 ** 2
            t2881 = t2880 * t2879
            t2884 = t2881 ** 2
            t2886 = t2882 ** 2
            t2883 = t2880 * t2882
            t2888 = t2883 ** 2
            t2890 = t2884 ** 2
            t2885 = t2880 * t2884
            t2892 = t2885 ** 2
            t2895 = 2 - 66 * t2879 + 354 * t2882 - 850 * t2884 + 1110 * t2886 - 822 * t2888 + 326 * t2890 - 54 * t2892
            t2894 = 129 * t2881 - 543 * t2883 + 1165 * t2885 + (-1425 * t2886 + 1011 * t2888 - 389 * t2890 + 63 * t2892 - 11) * t2880
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.222870e6) * ((t2894 + t2895) * np.sin((phi1 - 12 * phi2)) + (t2894 - t2895) * np.sin((phi1 + 12 * phi2))) * ((1 + t2880) ** (-0.1e1 / 0.2e1)) * ((1 - t2880) ** (-0.1e1 / 0.2e1))

        if Bindx == 166:
            t2896 = np.cos(phi)
            t2897 = t2896 ** 2
            t2898 = t2897 ** 2
            t2899 = t2897 * t2898
            t2902 = t2899 ** 2
            t2900 = t2898 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t2898 + 351747 * t2899 - 1033923 * t2900 - 1151495 * t2902 - 33 + (1552661 * t2900 + 334305 * t2902 + 3399) * t2897) * np.cos((2 * phi1))

        if Bindx == 167:
            t2919 = np.cos(phi)
            t2918 = t2919 ** 2
            t2921 = t2919 * t2918
            t2922 = t2918 ** 2
            t2923 = t2919 * t2922
            t2924 = t2921 ** 2
            t2925 = t2919 * t2924
            t2926 = t2922 ** 2
            t2928 = t2923 ** 2
            t2930 = t2924 ** 2
            t2934 = -9596 * t2921 + 74182 * t2923 - 241480 * t2925 + (377798 * t2926 - 281980 * t2928 + 80730 * t2930 + 346) * t2919
            t2933 = 94185 * t2925 ** 2 + 1955 * t2918 - 27487 * t2922 + 147411 * t2924 - 383021 * t2926 + 518305 * t2928 - 351325 * t2930 - 23
            t2920 = 2 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.10659e5) * ((t2933 - t2934) * np.cos((-t2920 + 6 * phi2)) + (t2933 + t2934) * np.cos((t2920 + 6 * phi2)))

        if Bindx == 168:
            t2950 = np.cos(phi)
            t2949 = t2950 ** 2
            t2953 = t2949 ** 2
            t2952 = t2950 * t2949
            t2955 = t2952 ** 2
            t2956 = t2950 * t2955
            t2957 = t2953 ** 2
            t2954 = t2950 * t2953
            t2959 = t2954 ** 2
            t2961 = t2955 ** 2
            t2965 = 63 * t2956 ** 2 - 31 * t2949 + 77 * t2953 + 45 * t2955 - 365 * t2957 + 499 * t2959 - 289 * t2961 + 1
            t2964 = 208 * t2952 - 740 * t2954 + 1280 * t2956 + (-1180 * t2957 + 560 * t2959 - 108 * t2961 - 20) * t2950
            t2951 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.2897310e7) * ((t2964 + t2965) * np.cos((-t2951 + 12 * phi2)) + (-t2964 + t2965) * np.cos((t2951 + 12 * phi2)))

        if Bindx == 169:
            t2974 = np.sin(phi)
            t2972 = t2974 ** 2
            t2966 = np.cos(phi)
            t2967 = t2966 ** 2
            t2968 = t2967 ** 2
            t2970 = t2968 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t2966 * t2972 ** 2 * (-26334 * t2968 - 120175 * t2970 - 99 + (86526 * t2968 + 58995 * t2970 + 3135) * t2967) * np.sin((3 * phi1)) * ((1 - t2966) ** (-0.1e1 / 0.2e1)) * ((1 + t2966) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t2991 = np.cos(phi)
            t2990 = t2991 ** 2
            t2994 = t2990 ** 2
            t2993 = t2991 * t2990
            t2996 = t2993 ** 2
            t2998 = t2994 ** 2
            t2995 = t2991 * t2994
            t3000 = t2995 ** 2
            t3002 = t2996 ** 2
            t2997 = t2991 * t2996
            t3004 = t2997 ** 2
            t3007 = 10043 * t2990 - 136357 * t2994 + 699343 * t2996 - 1726427 * t2998 + 2214049 * t3000 - 1423815 * t3002 + 363285 * t3004 - 121
            t3006 = 13093 * t2993 - 123587 * t2995 + 551233 * t2997 + (-1303597 * t2998 + 1667615 * t3000 - 1086865 * t3002 + 282555 * t3004 - 447) * t2991
            t2992 = 3 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.209e3) * (-(t3006 - t3007) * np.sin((-t2992 + 6 * phi2)) + (t3006 + t3007) * np.sin((t2992 + 6 * phi2))) * ((1 - t2991) ** (-0.1e1 / 0.2e1)) * ((1 + t2991) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t3024 = np.cos(phi)
            t3023 = t3024 ** 2
            t3027 = t3023 ** 2
            t3026 = t3024 * t3023
            t3029 = t3026 ** 2
            t3031 = t3027 ** 2
            t3028 = t3024 * t3027
            t3033 = t3028 ** 2
            t3035 = t3029 ** 2
            t3030 = t3024 * t3029
            t3037 = t3030 ** 2
            t3040 = 2 - 58 * t3023 + 746 * t3027 - 2930 * t3029 + 5350 * t3031 - 5102 * t3033 + 2478 * t3035 - 486 * t3037
            t3039 = -701 * t3026 + 2191 * t3028 - 3065 * t3030 + (1745 * t3031 + 185 * t3033 - 619 * t3035 + 189 * t3037 + 75) * t3024
            t3025 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.56810e5) * (-(t3039 + t3040) * np.sin((-t3025 + 12 * phi2)) + (t3039 - t3040) * np.sin((t3025 + 12 * phi2))) * ((1 - t3024) ** (-0.1e1 / 0.2e1)) * ((1 + t3024) ** (-0.1e1 / 0.2e1))

        if Bindx == 172:
            t3041 = np.cos(phi)
            t3042 = t3041 ** 2
            t3043 = t3042 ** 2
            t3044 = t3042 * t3043
            t3047 = t3044 ** 2
            t3045 = t3043 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t3043 + 8873 * t3044 - 24491 * t3045 - 24035 * t3047 - 1 + (34523 * t3045 + 6555 * t3047 + 97) * t3042) * np.cos((4 * phi1))

        if Bindx == 173:
            t3064 = np.cos(phi)
            t3063 = t3064 ** 2
            t3067 = t3063 ** 2
            t3066 = t3064 * t3063
            t3069 = t3066 ** 2
            t3070 = t3064 * t3069
            t3071 = t3067 ** 2
            t3068 = t3064 * t3067
            t3073 = t3068 ** 2
            t3075 = t3069 ** 2
            t3079 = 345345 * t3070 ** 2 - 2449 * t3063 + 21251 * t3067 - 2509 * t3069 - 338899 * t3071 + 947485 * t3073 - 970255 * t3075 + 31
            t3078 = 64624 * t3066 - 483996 * t3068 + 1573504 * t3070 + (-2522916 * t3071 + 1963280 * t3073 - 592020 * t3075 - 2476) * t3064
            t3065 = 4 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.38e2) * ((t3078 + t3079) * np.cos((-t3065 + 6 * phi2)) + (-t3078 + t3079) * np.cos((t3065 + 6 * phi2)))

        if Bindx == 174:
            t3095 = np.cos(phi)
            t3094 = t3095 ** 2
            t3097 = t3095 * t3094
            t3098 = t3094 ** 2
            t3099 = t3095 * t3098
            t3100 = t3097 ** 2
            t3101 = t3095 * t3100
            t3102 = t3098 ** 2
            t3104 = t3099 ** 2
            t3106 = t3100 ** 2
            t3110 = -48 * t3097 + 40 * t3099 + 160 * t3101 + (-360 * t3102 + 272 * t3104 - 72 * t3106 + 8) * t3095
            t3109 = 21 * t3101 ** 2 - 25 * t3094 + 169 * t3098 - 425 * t3100 + 475 * t3102 - 211 * t3104 - 5 * t3106 + 1
            t3096 = 4 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.312455e6) * ((t3109 + t3110) * np.cos((-t3096 + 12 * phi2)) + (t3109 - t3110) * np.cos((t3096 + 12 * phi2)))

        if Bindx == 175:
            t3119 = np.sin(phi)
            t3116 = t3119 ** 2
            t3117 = t3119 * t3116
            t3111 = np.cos(phi)
            t3112 = t3111 ** 2
            t3113 = t3112 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t3111 * t3117 ** 2 * (-140 * t3112 + 5 + (-2300 * t3112 + 966 + 1725 * t3113) * t3113) * np.sin((5 * phi1)) * ((1 - t3111) ** (-0.1e1 / 0.2e1)) * ((1 + t3111) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t3136 = np.cos(phi)
            t3135 = t3136 ** 2
            t3139 = t3135 ** 2
            t3138 = t3136 * t3135
            t3141 = t3138 ** 2
            t3143 = t3139 ** 2
            t3140 = t3136 * t3139
            t3145 = t3140 ** 2
            t3147 = t3141 ** 2
            t3142 = t3136 * t3141
            t3149 = t3142 ** 2
            t3152 = 17175 * t3135 - 222785 * t3139 + 1148347 * t3141 - 2946015 * t3143 + 3989557 * t3145 - 2726075 * t3147 + 740025 * t3149 - 229
            t3151 = -46785 * t3138 + 291903 * t3140 - 673485 * t3142 + (430705 * t3143 + 554829 * t3145 - 904475 * t3147 + 345345 * t3149 + 1963) * t3136
            t3137 = 5 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.5e1) * (-(t3151 - t3152) * np.sin((-t3137 + 6 * phi2)) + (t3151 + t3152) * np.sin((t3137 + 6 * phi2))) * ((1 - t3136) ** (-0.1e1 / 0.2e1)) * ((1 + t3136) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t3169 = np.cos(phi)
            t3168 = t3169 ** 2
            t3172 = t3168 ** 2
            t3171 = t3169 * t3168
            t3174 = t3171 ** 2
            t3176 = t3172 ** 2
            t3173 = t3169 * t3172
            t3178 = t3173 ** 2
            t3180 = t3174 ** 2
            t3175 = t3169 * t3174
            t3182 = t3175 ** 2
            t3185 = -2 + 42 * t3168 - 218 * t3172 + 402 * t3174 - 198 * t3176 - 226 * t3178 + 290 * t3180 - 90 * t3182
            t3184 = -5 * t3171 + 207 * t3173 - 657 * t3175 + (833 * t3176 - 447 * t3178 + 53 * t3180 + 21 * t3182 - 5) * t3169
            t3170 = 5 * phi1
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.6578e4) * (-(t3184 + t3185) * np.sin((-t3170 + 12 * phi2)) + (t3184 - t3185) * np.sin((t3170 + 12 * phi2))) * ((1 - t3169) ** (-0.1e1 / 0.2e1)) * ((1 + t3169) ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t3186 = np.cos(phi)
            t3187 = t3186 ** 2
            t3188 = t3187 ** 2
            t3189 = t3187 * t3188
            t3192 = t3189 ** 2
            t3190 = t3188 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t3188 + 6371 * t3189 - 15747 * t3190 - 12535 * t3192 - 1 + (19941 * t3190 + 3105 * t3192 + 87) * t3187) * np.cos((6 * phi1))

        if Bindx == 179:
            t3209 = np.cos(phi)
            t3208 = t3209 ** 2
            t3210 = t3209 * t3208
            t3211 = t3208 ** 2
            t3212 = t3209 * t3211
            t3213 = t3210 ** 2
            t3214 = t3209 * t3213
            t3215 = t3211 ** 2
            t3217 = t3212 ** 2
            t3219 = t3213 ** 2
            t3223 = 0.3773857e7 / 0.4096e4 * t3210 - 0.60502149e8 / 0.8192e4 * t3212 + 0.55660599e8 / 0.2048e4 * t3214 + (-0.403806469e9 / 0.8192e4 * t3215 + 0.175097505e9 / 0.4096e4 * t3217 - 0.115887915e9 / 0.8192e4 * t3219 - 0.307371e6 / 0.8192e4) * t3209
            t3222 = 0.90135045e8 / 0.16384e5 * t3214 ** 2 - 0.6677337e7 / 0.16384e5 * t3208 + 0.70342893e8 / 0.16384e5 * t3211 - 0.257721753e9 / 0.16384e5 * t3213 + 0.386829927e9 / 0.16384e5 * t3215 - 0.167833875e9 / 0.16384e5 * t3217 - 0.114934105e9 / 0.16384e5 * t3219 + 0.96773e5 / 0.16384e5
            tfunc[..., c] = (t3222 + t3223) * np.cos((6 * phi1 - 6 * phi2)) + (t3222 - t3223) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 180:
            t3239 = np.cos(phi)
            t3238 = t3239 ** 2
            t3241 = t3239 * t3238
            t3242 = t3238 ** 2
            t3243 = t3239 * t3242
            t3244 = t3241 ** 2
            t3245 = t3239 * t3244
            t3246 = t3242 ** 2
            t3248 = t3243 ** 2
            t3250 = t3244 ** 2
            t3254 = -752 * t3241 + 3708 * t3243 - 5760 * t3245 + (2372 * t3246 + 1392 * t3248 - 972 * t3250 + 12) * t3239
            t3253 = 189 * t3245 ** 2 + 435 * t3238 - 1161 * t3242 - 729 * t3244 + 5049 * t3246 - 5079 * t3248 + 1325 * t3250 - 29
            t3240 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3253 + t3254) * np.cos((-t3240 + 12 * phi2)) + (t3253 - t3254) * np.cos((t3240 + 12 * phi2)))

        if Bindx == 181:
            t3262 = np.sin(phi)
            t3259 = t3262 ** 2
            t3260 = t3259 ** 2
            t3255 = np.cos(phi)
            t3256 = t3255 ** 2
            t3257 = t3256 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t3255 * t3260 ** 2 * (-805 * t3257 - 7 + (1035 * t3257 + 161) * t3256) * np.sin((7 * phi1)) * ((1 - t3255) ** (-0.1e1 / 0.2e1)) * ((1 + t3255) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t3279 = np.cos(phi)
            t3278 = t3279 ** 2
            t3282 = t3278 ** 2
            t3281 = t3279 * t3278
            t3284 = t3281 ** 2
            t3286 = t3282 ** 2
            t3283 = t3279 * t3282
            t3288 = t3283 ** 2
            t3290 = t3284 ** 2
            t3285 = t3279 * t3284
            t3292 = t3285 ** 2
            t3295 = -441 * t3278 + 28259 * t3282 - 297549 * t3284 + 1106901 * t3286 - 1871947 * t3288 + 1478785 * t3290 - 444015 * t3292 + 7
            t3294 = -70861 * t3281 + 437535 * t3283 - 1183569 * t3285 + (1497881 * t3286 - 717255 * t3288 - 115115 * t3290 + 148005 * t3292 + 3379) * t3279
            t3280 = 7 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.42e2) * (-(t3294 + t3295) * np.sin((-t3280 + 6 * phi2)) + (t3294 - t3295) * np.sin((t3280 + 6 * phi2))) * ((1 - t3279) ** (-0.1e1 / 0.2e1)) * ((1 + t3279) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t3312 = np.cos(phi)
            t3311 = t3312 ** 2
            t3315 = t3311 ** 2
            t3314 = t3312 * t3311
            t3317 = t3314 ** 2
            t3319 = t3315 ** 2
            t3316 = t3312 * t3315
            t3321 = t3316 ** 2
            t3323 = t3317 ** 2
            t3318 = t3312 * t3317
            t3325 = t3318 ** 2
            t3328 = 2 - 18 * t3311 - 14 * t3315 + 270 * t3317 - 522 * t3319 + 314 * t3321 + 22 * t3323 - 54 * t3325
            t3327 = 71 * t3314 - 225 * t3316 + 171 * t3318 + (193 * t3319 - 315 * t3321 + 101 * t3323 + 9 * t3325 - 5) * t3312
            t3313 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.345345e6) * (-(t3327 + t3328) * np.sin((-t3313 + 12 * phi2)) + (t3327 - t3328) * np.sin((t3313 + 12 * phi2))) * ((1 - t3312) ** (-0.1e1 / 0.2e1)) * ((1 + t3312) ** (-0.1e1 / 0.2e1))

        if Bindx == 184:
            t3329 = np.cos(phi)
            t3330 = t3329 ** 2
            t3331 = t3330 ** 2
            t3332 = t3330 * t3331
            t3335 = t3332 ** 2
            t3333 = t3331 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t3331 + 3753 * t3332 - 7867 * t3333 - 4715 * t3335 - 1 + (8579 * t3333 + 1035 * t3335 + 73) * t3330) * np.cos((8 * phi1))

        if Bindx == 185:
            t3352 = np.cos(phi)
            t3351 = t3352 ** 2
            t3354 = t3352 * t3351
            t3355 = t3351 ** 2
            t3356 = t3352 * t3355
            t3357 = t3354 ** 2
            t3358 = t3352 * t3357
            t3359 = t3355 ** 2
            t3361 = t3356 ** 2
            t3363 = t3357 ** 2
            t3367 = -26848 * t3354 + 59784 * t3356 + 165120 * t3358 + (-719624 * t3359 + 842720 * t3361 - 322920 * t3363 + 1768) * t3352
            t3366 = 94185 * t3358 ** 2 - 17105 * t3351 + 164979 * t3355 - 631173 * t3357 + 1090533 * t3359 - 783955 * t3361 + 82225 * t3363 + 311
            t3353 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.33e2) * ((t3366 + t3367) * np.cos((-t3353 + 6 * phi2)) + (t3366 - t3367) * np.cos((t3353 + 6 * phi2)))

        if Bindx == 186:
            t3383 = np.cos(phi)
            t3382 = t3383 ** 2
            t3385 = t3383 * t3382
            t3386 = t3382 ** 2
            t3387 = t3383 * t3386
            t3388 = t3385 ** 2
            t3389 = t3383 * t3388
            t3390 = t3386 ** 2
            t3392 = t3387 ** 2
            t3394 = t3388 ** 2
            t3398 = 608 * t3385 - 528 * t3387 - 2112 * t3389 + (3344 * t3390 - 800 * t3392 - 432 * t3394 - 80) * t3383
            t3397 = 63 * t3389 ** 2 - 19 * t3382 - 957 * t3386 + 2805 * t3388 - 1551 * t3390 - 1441 * t3392 + 1081 * t3394 + 19
            t3384 = 8 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.8970e4) * ((t3397 + t3398) * np.cos((-t3384 + 12 * phi2)) + (t3397 - t3398) * np.cos((t3384 + 12 * phi2)))

        if Bindx == 187:
            t3406 = np.sin(phi)
            t3402 = t3406 ** 2
            t3404 = t3406 * t3402 ** 2
            t3399 = np.cos(phi)
            t3400 = t3399 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t3399 * t3404 ** 2 * (3 + (-50 + 135 * t3400) * t3400) * np.sin((9 * phi1)) * ((1 - t3399) ** (-0.1e1 / 0.2e1)) * ((1 + t3399) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t3423 = np.cos(phi)
            t3422 = t3423 ** 2
            t3426 = t3422 ** 2
            t3425 = t3423 * t3422
            t3428 = t3425 ** 2
            t3430 = t3426 ** 2
            t3427 = t3423 * t3426
            t3432 = t3427 ** 2
            t3434 = t3428 ** 2
            t3429 = t3423 * t3428
            t3436 = t3429 ** 2
            t3439 = 3713 * t3422 - 25099 * t3426 + 53301 * t3428 - 5037 * t3430 - 114909 * t3432 + 135495 * t3434 - 47385 * t3436 - 79
            t3438 = -8613 * t3425 + 60183 * t3427 - 183753 * t3429 + (264289 * t3430 - 165455 * t3432 + 20605 * t3434 + 12285 * t3436 + 459) * t3423
            t3424 = 9 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.506e3) * (-(t3438 + t3439) * np.sin((-t3424 + 6 * phi2)) + (t3438 - t3439) * np.sin((t3424 + 6 * phi2))) * ((1 - t3423) ** (-0.1e1 / 0.2e1)) * ((1 + t3423) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t3456 = np.cos(phi)
            t3455 = t3456 ** 2
            t3459 = t3455 ** 2
            t3458 = t3456 * t3455
            t3461 = t3458 ** 2
            t3463 = t3459 ** 2
            t3460 = t3456 * t3459
            t3465 = t3460 ** 2
            t3467 = t3461 ** 2
            t3462 = t3456 * t3461
            t3469 = t3462 ** 2
            t3472 = -74 - 518 * t3455 + 5542 * t3459 - 8646 * t3461 - 4686 * t3463 + 14718 * t3465 - 4878 * t3467 - 1458 * t3469
            t3471 = -1677 * t3458 - 3333 * t3460 + 16071 * t3462 + (-12859 * t3463 - 3127 * t3465 + 4313 * t3467 + 189 * t3469 + 423) * t3456
            t3457 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.65e2) * (-(t3471 + t3472) * np.sin((-t3457 + 12 * phi2)) + (t3471 - t3472) * np.sin((t3457 + 12 * phi2))) * ((1 - t3456) ** (-0.1e1 / 0.2e1)) * ((1 + t3456) ** (-0.1e1 / 0.2e1))

        if Bindx == 190:
            t3473 = np.cos(phi)
            t3474 = t3473 ** 2
            t3475 = t3474 ** 2
            t3476 = t3474 * t3475
            t3479 = t3476 ** 2
            t3477 = t3475 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t3475 + 1635 * t3476 - 2755 * t3477 - 1175 * t3479 - 1 + (2501 * t3477 + 225 * t3479 + 55) * t3474) * np.cos((10 * phi1))

        if Bindx == 191:
            t3496 = np.cos(phi)
            t3495 = t3496 ** 2
            t3498 = t3496 * t3495
            t3499 = t3495 ** 2
            t3500 = t3496 * t3499
            t3501 = t3498 ** 2
            t3502 = t3496 * t3501
            t3503 = t3499 ** 2
            t3505 = t3500 ** 2
            t3507 = t3501 ** 2
            t3511 = -7532 * t3498 + 27822 * t3500 - 34152 * t3502 + (-5714 * t3503 + 36500 * t3505 - 17550 * t3507 + 626) * t3496
            t3510 = 4095 * t3502 ** 2 + 37 * t3495 + 6039 * t3499 - 38331 * t3501 + 81477 * t3503 - 68201 * t3505 + 14885 * t3507 - 1
            t3497 = 10 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.3795e4) * ((t3510 + t3511) * np.cos((-t3497 + 6 * phi2)) + (t3510 - t3511) * np.cos((t3497 + 6 * phi2)))

        if Bindx == 192:
            t3527 = np.cos(phi)
            t3526 = t3527 ** 2
            t3529 = t3527 * t3526
            t3530 = t3526 ** 2
            t3531 = t3527 * t3530
            t3532 = t3529 ** 2
            t3533 = t3527 * t3532
            t3534 = t3530 ** 2
            t3536 = t3531 ** 2
            t3538 = t3532 ** 2
            t3542 = 80 * t3529 - 3828 * t3531 + 4224 * t3533 + (3124 * t3534 - 3280 * t3536 - 540 * t3538 + 220) * t3527
            t3541 = 63 * t3533 ** 2 - 527 * t3526 + 2013 * t3530 + 1485 * t3532 - 6765 * t3534 + 1859 * t3536 + 1903 * t3538 - 31
            t3528 = 10 * phi1
            tfunc[..., c] = -0.145e3 / 0.16384e5 * np.sqrt(0.78e2) * ((t3541 + t3542) * np.cos((-t3528 + 12 * phi2)) + (t3541 - t3542) * np.cos((t3528 + 12 * phi2)))

        if Bindx == 193:
            t3548 = np.sin(phi)
            t3544 = t3548 ** 2
            t3545 = t3548 * t3544
            t3546 = t3545 ** 2
            t3543 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t3543 * t3546 ** 2 * (9 * t3543 ** 2 - 1) * np.sin((11 * phi1)) * ((1 - t3543) ** (-0.1e1 / 0.2e1)) * ((1 + t3543) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t3565 = np.cos(phi)
            t3564 = t3565 ** 2
            t3568 = t3564 ** 2
            t3567 = t3565 * t3564
            t3570 = t3567 ** 2
            t3572 = t3568 ** 2
            t3569 = t3565 * t3568
            t3574 = t3569 ** 2
            t3576 = t3570 ** 2
            t3571 = t3565 * t3570
            t3578 = t3571 ** 2
            t3581 = -31 + 837 * t3564 - 6131 * t3568 + 16497 * t3570 - 16749 * t3572 + 671 * t3574 + 8767 * t3576 - 3861 * t3578
            t3580 = 1037 * t3567 + 1341 * t3569 - 14679 * t3571 + (27667 * t3572 - 19881 * t3574 + 3887 * t3576 + 819 * t3578 - 191) * t3565
            t3566 = 11 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.3795e4) * (-(t3580 + t3581) * np.sin((-t3566 + 6 * phi2)) + (t3580 - t3581) * np.sin((t3566 + 6 * phi2))) * ((1 - t3565) ** (-0.1e1 / 0.2e1)) * ((1 + t3565) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t3598 = np.cos(phi)
            t3597 = t3598 ** 2
            t3601 = t3597 ** 2
            t3600 = t3598 * t3597
            t3603 = t3600 ** 2
            t3605 = t3601 ** 2
            t3602 = t3598 * t3601
            t3607 = t3602 ** 2
            t3609 = t3603 ** 2
            t3604 = t3598 * t3603
            t3611 = t3604 ** 2
            t3614 = 38 + 1026 * t3597 - 1394 * t3601 - 7062 * t3603 + 10098 * t3605 + 2662 * t3607 - 4774 * t3609 - 594 * t3611
            t3613 = -1199 * t3600 + 6237 * t3602 - 627 * t3604 + (-10637 * t3605 + 4131 * t3607 + 2351 * t3609 + 63 * t3611 - 319) * t3598
            t3599 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.78e2) * (-(t3613 + t3614) * np.sin((-t3599 + 12 * phi2)) + (t3613 - t3614) * np.sin((t3599 + 12 * phi2))) * ((1 - t3598) ** (-0.1e1 / 0.2e1)) * ((1 + t3598) ** (-0.1e1 / 0.2e1))

        if Bindx == 196:
            t3615 = np.cos(phi)
            t3616 = t3615 ** 2
            t3617 = t3616 ** 2
            t3618 = t3616 * t3617
            t3621 = t3618 ** 2
            t3619 = t3617 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t3617 + 425 * t3618 - 555 * t3619 - 163 * t3621 - 1 + (411 * t3619 + 27 * t3621 + 33) * t3616) * np.cos((12 * phi1))

        if Bindx == 197:
            t3638 = np.cos(phi)
            t3637 = t3638 ** 2
            t3640 = t3638 * t3637
            t3641 = t3637 ** 2
            t3642 = t3638 * t3641
            t3643 = t3640 ** 2
            t3644 = t3638 * t3643
            t3645 = t3641 ** 2
            t3647 = t3642 ** 2
            t3649 = t3643 ** 2
            t3653 = -752 * t3640 + 3708 * t3642 - 5760 * t3644 + (2372 * t3645 + 1392 * t3647 - 972 * t3649 + 12) * t3638
            t3652 = 189 * t3644 ** 2 + 435 * t3637 - 1161 * t3641 - 729 * t3643 + 5049 * t3645 - 5079 * t3647 + 1325 * t3649 - 29
            t3639 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3652 + t3653) * np.cos((-t3639 + 6 * phi2)) + (t3652 - t3653) * np.cos((t3639 + 6 * phi2)))

        if Bindx == 198:
            t3669 = np.cos(phi)
            t3668 = t3669 ** 2
            t3670 = t3669 * t3668
            t3671 = t3668 ** 2
            t3672 = t3669 * t3671
            t3673 = t3670 ** 2
            t3674 = t3669 * t3673
            t3675 = t3671 ** 2
            t3677 = t3672 ** 2
            t3679 = t3673 ** 2
            t3683 = -0.19981e5 / 0.512e3 * t3670 + 0.37323e5 / 0.1024e4 * t3672 + 0.37323e5 / 0.256e3 * t3674 + (-0.70499e5 / 0.1024e4 * t3675 - 0.39585e5 / 0.512e3 * t3677 - 0.7047e4 / 0.1024e4 * t3679 - 0.4785e4 / 0.1024e4) * t3669
            t3682 = 0.5481e4 / 0.8192e4 * t3674 ** 2 + 0.154947e6 / 0.8192e4 * t3668 + 0.261261e6 / 0.8192e4 * t3671 - 0.1057485e7 / 0.8192e4 * t3673 - 0.410553e6 / 0.8192e4 * t3675 + 0.908193e6 / 0.8192e4 * t3677 + 0.252967e6 / 0.8192e4 * t3679 + 0.3973e4 / 0.8192e4
            tfunc[..., c] = (t3682 + t3683) * np.cos((12 * phi1 - 12 * phi2)) + (t3682 - t3683) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 199:
            t3690 = np.sin(phi)
            t3685 = t3690 ** 2
            t3686 = t3690 * t3685
            t3688 = t3690 * t3686 ** 2
            t3684 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t3684 * t3688 ** 2 * np.sin((13 * phi1)) * ((1 - t3684) ** (-0.1e1 / 0.2e1)) * ((1 + t3684) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t3707 = np.cos(phi)
            t3706 = t3707 ** 2
            t3710 = t3706 ** 2
            t3709 = t3707 * t3706
            t3712 = t3709 ** 2
            t3714 = t3710 ** 2
            t3711 = t3707 * t3710
            t3716 = t3711 ** 2
            t3718 = t3712 ** 2
            t3713 = t3707 * t3712
            t3720 = t3713 ** 2
            t3723 = 3 - 9 * t3706 - 89 * t3710 + 347 * t3712 - 423 * t3714 + 149 * t3716 + 61 * t3718 - 39 * t3720
            t3722 = 89 * t3709 - 159 * t3711 - 27 * t3713 + (303 * t3714 - 261 * t3716 + 59 * t3718 + 7 * t3720 - 11) * t3707
            t3708 = 13 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.49335e5) * (-(t3722 + t3723) * np.sin((-t3708 + 6 * phi2)) + (t3722 - t3723) * np.sin((t3708 + 6 * phi2))) * ((1 - t3707) ** (-0.1e1 / 0.2e1)) * ((1 + t3707) ** (-0.1e1 / 0.2e1))

        if Bindx == 201:
            t3740 = np.cos(phi)
            t3739 = t3740 ** 2
            t3743 = t3739 ** 2
            t3742 = t3740 * t3739
            t3745 = t3742 ** 2
            t3747 = t3743 ** 2
            t3744 = t3740 * t3743
            t3749 = t3744 ** 2
            t3751 = t3745 ** 2
            t3746 = t3740 * t3745
            t3753 = t3746 ** 2
            t3756 = -6 - 306 * t3739 - 1118 * t3743 + 1430 * t3745 + 2574 * t3747 - 1430 * t3749 - 1066 * t3751 - 78 * t3753
            t3755 = 793 * t3742 + 429 * t3744 - 3003 * t3746 + (-429 * t3747 + 1755 * t3749 + 383 * t3751 + 7 * t3753 + 65) * t3740
            t3741 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.6e1) * (-(t3755 + t3756) * np.sin((-t3741 + 12 * phi2)) + (t3755 - t3756) * np.sin((t3741 + 12 * phi2))) * ((1 - t3740) ** (-0.1e1 / 0.2e1)) * ((1 + t3740) ** (-0.1e1 / 0.2e1))

        if Bindx == 202:
            t3757 = np.cos(phi)
            t3758 = t3757 ** 2
            t3759 = t3758 ** 2
            t3760 = t3758 * t3759
            t3763 = t3760 ** 2
            t3761 = t3759 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t3759 + 35 * t3760 - 35 * t3761 - 7 * t3763 - 1 + (21 * t3761 + t3763 + 7) * t3758)

        if Bindx == 203:
            t3780 = np.cos(phi)
            t3796 = -6 * t3780
            t3779 = t3780 ** 2
            t3782 = t3780 * t3779
            t3783 = t3779 ** 2
            t3784 = t3780 * t3783
            t3785 = t3782 ** 2
            t3786 = t3780 * t3785
            t3787 = t3783 ** 2
            t3789 = t3784 ** 2
            t3791 = t3785 ** 2
            t3795 = t3791 * t3796 + 4 * t3782 + 38 * t3784 - 72 * t3786 + t3796 + (38 * t3787 + 4 * t3789) * t3780
            t3794 = t3786 ** 2 + 11 * t3779 - 39 * t3783 + 27 * t3785 + 27 * t3787 - 39 * t3789 + 11 * t3791 + 1
            t3781 = 14 * phi1
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.345345e6) * ((t3794 + t3795) * np.cos((-t3781 + 6 * phi2)) + (t3794 - t3795) * np.cos((t3781 + 6 * phi2)))

        if Bindx == 204:
            t3811 = np.cos(phi)
            t3810 = t3811 ** 2
            t3813 = t3811 * t3810
            t3814 = t3810 ** 2
            t3815 = t3811 * t3814
            t3817 = t3814 ** 2
            t3819 = t3815 ** 2
            t3816 = t3813 ** 2
            t3821 = t3816 ** 2
            t3822 = t3811 * t3821
            t3825 = 208 * t3813 + 572 * t3815 - 12 * t3822 + (-572 * t3817 - 208 * t3819 + 12) * t3811
            t3824 = t3811 * t3822 - 65 * t3810 - 429 * t3814 - 429 * t3816 + 429 * t3817 + 429 * t3819 + 65 * t3821 - 1
            t3812 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.42e2) * ((t3824 + t3825) * np.cos((-t3812 + 12 * phi2)) + (t3824 - t3825) * np.cos((t3812 + 12 * phi2)))

        if Bindx == 205:
            t3826 = np.cos(phi)
            t3827 = t3826 ** 2
            t3828 = t3827 ** 2
            t3829 = t3827 * t3828
            t3832 = t3829 ** 2
            t3830 = t3828 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t3826 * np.sqrt(0.692835e6) * (-6825 * t3828 + 28863 * t3829 - 62399 * t3830 - 42435 * t3832 - 21 + (72105 * t3830 + 10005 * t3832 + 707) * t3827) * np.cos((6 * phi2))

        if Bindx == 206:
            t3834 = np.cos(phi)
            t3835 = t3834 ** 2
            t3836 = t3835 ** 2
            t3837 = t3835 * t3836
            t3840 = t3837 ** 2
            t3838 = t3836 ** 2
            tfunc[..., c] = 0.465e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * t3834 * (-219 * t3836 + 495 * t3837 - 625 * t3838 - 177 * t3840 - 3 + (453 * t3838 + 29 * t3840 + 47) * t3835) * np.cos((12 * phi2))

        if Bindx == 207:
            t3859 = np.cos(phi)
            t3858 = t3859 ** 2
            t3860 = t3859 * t3858
            t3861 = t3858 ** 2
            t3862 = t3859 * t3861
            t3863 = t3860 ** 2
            t3864 = t3859 * t3863
            t3865 = t3861 ** 2
            t3867 = t3862 ** 2
            t3869 = t3863 ** 2
            t3871 = t3864 ** 2
            t3875 = 1414 * t3860 - 13650 * t3862 + 57726 * t3864 + (-124798 * t3865 + 144210 * t3867 - 84870 * t3869 + 20010 * t3871 - 42) * t3859
            t3874 = 714 * t3858 - 12082 * t3861 + 78722 * t3863 + 451582 * t3867 - 448270 * t3869 + 233910 * t3871 - 7 + (-254544 - 50025 * t3865) * t3865
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.92378e5) * ((t3874 + t3875) * np.sin((phi1 - 6 * phi2)) + (-t3874 + t3875) * np.sin((phi1 + 6 * phi2))) * ((1 - t3859) ** (-0.1e1 / 0.2e1)) * ((1 + t3859) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t3893 = np.cos(phi)
            t3892 = t3893 ** 2
            t3894 = t3893 * t3892
            t3895 = t3892 ** 2
            t3896 = t3893 * t3895
            t3897 = t3894 ** 2
            t3898 = t3893 * t3897
            t3899 = t3895 ** 2
            t3901 = t3896 ** 2
            t3903 = t3897 ** 2
            t3905 = t3898 ** 2
            t3909 = 188 * t3894 - 876 * t3896 + 1980 * t3898 + (-2500 * t3899 + 1812 * t3901 - 708 * t3903 + 116 * t3905 - 12) * t3893
            t3908 = 48 * t3892 - 412 * t3895 + 1520 * t3897 + 3536 * t3901 - 2428 * t3903 + 912 * t3905 - 1 + (-3030 - 145 * t3899) * t3899
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.780045e6) * ((t3908 + t3909) * np.sin((phi1 - 12 * phi2)) + (-t3908 + t3909) * np.sin((phi1 + 12 * phi2))) * ((1 + t3893) ** (-0.1e1 / 0.2e1)) * ((1 - t3893) ** (-0.1e1 / 0.2e1))

        if Bindx == 209:
            t3926 = np.cos(phi)
            t3925 = t3926 ** 2
            t3929 = t3925 ** 2
            t3928 = t3926 * t3925
            t3931 = t3928 ** 2
            t3933 = t3929 ** 2
            t3930 = t3926 * t3929
            t3935 = t3930 ** 2
            t3937 = t3931 ** 2
            t3932 = t3926 * t3931
            t3939 = t3932 ** 2
            t3942 = -600 * t3925 + 9554 * t3929 - 55972 * t3931 + 153962 * t3933 - 215280 * t3935 + 148350 * t3937 - 40020 * t3939 + 6
            t3941 = 2763 * t3928 - 26851 * t3930 + 116355 * t3932 + (-261809 * t3933 + 318665 * t3935 - 199065 * t3937 + 50025 * t3939 - 83) * t3926
            t3927 = 2 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.19019e5) * ((t3941 + t3942) * np.cos((-t3927 + 6 * phi2)) + (-t3941 + t3942) * np.cos((t3927 + 6 * phi2)))

        if Bindx == 210:
            t3959 = np.cos(phi)
            t3958 = t3959 ** 2
            t3961 = t3959 * t3958
            t3962 = t3958 ** 2
            t3963 = t3959 * t3962
            t3964 = t3961 ** 2
            t3965 = t3959 * t3964
            t3966 = t3962 ** 2
            t3968 = t3963 ** 2
            t3970 = t3964 ** 2
            t3972 = t3965 ** 2
            t3975 = 279 * t3961 - 5 * t3963 - 3285 * t3965 + (8485 * t3966 - 9355 * t3968 + 4921 * t3970 - 1015 * t3972 - 25) * t3959
            t3974 = 12 - 552 * t3958 + 4204 * t3962 - 13160 * t3964 + 21220 * t3966 - 18712 * t3968 + 8612 * t3970 - 1624 * t3972
            t3960 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t3974 - t3975) * np.cos((-t3960 + 12 * phi2)) + (t3974 + t3975) * np.cos((t3960 + 12 * phi2)))

        if Bindx == 211:
            t3993 = np.cos(phi)
            t3992 = t3993 ** 2
            t3995 = t3993 * t3992
            t3996 = t3992 ** 2
            t3997 = t3993 * t3996
            t3998 = t3995 ** 2
            t3999 = t3993 * t3998
            t4000 = t3996 ** 2
            t4002 = t3997 ** 2
            t4004 = t3998 ** 2
            t4006 = t3999 ** 2
            t4010 = 54794 * t3995 - 516046 * t3997 + 2153714 * t3999 + (-4647426 * t4000 + 5414430 * t4002 - 3238170 * t4004 + 780390 * t4006 - 1686) * t3993
            t4009 = 4606 * t3992 - 79694 * t3996 + 559206 * t3998 + 4046298 * t4002 - 4565730 * t4004 + 2699970 * t4006 - 47 + (-2014284 - 650325 * t4000) * t4000
            t3994 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2926e4) * (-(t4009 + t4010) * np.sin((-t3994 + 6 * phi2)) + (-t4009 + t4010) * np.sin((t3994 + 6 * phi2))) * ((1 + t3993) ** (-0.1e1 / 0.2e1)) * ((1 - t3993) ** (-0.1e1 / 0.2e1))

        if Bindx == 212:
            t4028 = np.cos(phi)
            t4027 = t4028 ** 2
            t4030 = t4028 * t4027
            t4031 = t4027 ** 2
            t4032 = t4028 * t4031
            t4033 = t4030 ** 2
            t4034 = t4028 * t4033
            t4035 = t4031 ** 2
            t4037 = t4032 ** 2
            t4039 = t4033 ** 2
            t4041 = t4034 ** 2
            t4045 = 1036 * t4030 - 6716 * t4032 + 20140 * t4034 + (-32020 * t4035 + 28100 * t4037 - 12916 * t4039 + 2436 * t4041 - 60) * t4028
            t4044 = -572 * t4027 + 3904 * t4031 - 10380 * t4033 - 4788 * t4037 - 3448 * t4039 + 3836 * t4041 + 13 + (12450 - 1015 * t4035) * t4035
            t4029 = 3 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.85215e5) * (-(t4044 + t4045) * np.sin((-t4029 + 12 * phi2)) + (-t4044 + t4045) * np.sin((t4029 + 12 * phi2))) * ((1 + t4028) ** (-0.1e1 / 0.2e1)) * ((1 - t4028) ** (-0.1e1 / 0.2e1))

        if Bindx == 213:
            t4062 = np.cos(phi)
            t4061 = t4062 ** 2
            t4064 = t4062 * t4061
            t4065 = t4061 ** 2
            t4066 = t4062 * t4065
            t4067 = t4064 ** 2
            t4068 = t4062 * t4067
            t4069 = t4065 ** 2
            t4071 = t4066 ** 2
            t4073 = t4067 ** 2
            t4075 = t4068 ** 2
            t4078 = 1509 * t4064 + 23089 * t4066 - 336111 * t4068 + (1383519 * t4069 - 2498145 * t4071 + 2076555 * t4073 - 650325 * t4075 - 91) * t4062
            t4077 = 15416 * t4061 - 234884 * t4065 + 1344056 * t4067 - 3687084 * t4069 + 5235720 * t4071 - 3713580 * t4073 + 1040520 * t4075 - 164
            t4063 = 4 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.462e3) * ((t4077 + t4078) * np.cos((-t4063 + 6 * phi2)) + (t4077 - t4078) * np.cos((t4063 + 6 * phi2)))

        if Bindx == 214:
            t4095 = np.cos(phi)
            t4094 = t4095 ** 2
            t4098 = t4094 ** 2
            t4097 = t4095 * t4094
            t4100 = t4097 ** 2
            t4102 = t4098 ** 2
            t4099 = t4095 * t4098
            t4104 = t4099 ** 2
            t4106 = t4100 ** 2
            t4101 = t4095 * t4100
            t4108 = t4101 ** 2
            t4111 = -8 + 320 * t4094 - 872 * t4098 - 2800 * t4100 + 13800 * t4102 - 20512 * t4104 + 13320 * t4106 - 3248 * t4108
            t4110 = 2091 * t4097 - 9815 * t4099 + 20355 * t4101 + (-19805 * t4102 + 7241 * t4104 + 1099 * t4106 - 1015 * t4108 - 151) * t4095
            t4096 = 4 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.1495e4) * ((-t4110 + t4111) * np.cos((-t4096 + 12 * phi2)) + (t4110 + t4111) * np.cos((t4096 + 12 * phi2)))

        if Bindx == 215:
            t4129 = np.cos(phi)
            t4128 = t4129 ** 2
            t4131 = t4129 * t4128
            t4132 = t4128 ** 2
            t4133 = t4129 * t4132
            t4134 = t4131 ** 2
            t4135 = t4129 * t4134
            t4136 = t4132 ** 2
            t4138 = t4133 ** 2
            t4140 = t4134 ** 2
            t4142 = t4135 ** 2
            t4146 = 179930 * t4131 - 1640574 * t4133 + 6840290 * t4135 + (-15081330 * t4136 + 18193230 * t4138 - 11347050 * t4140 + 2861430 * t4142 - 5926) * t4129
            t4145 = -19350 * t4128 + 258470 * t4132 - 1137694 * t4134 + 596574 * t4138 - 4440150 * t4140 + 4440150 * t4142 + 215 + (1732500 - 1430715 * t4136) * t4136
            t4130 = 5 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.210e3) * (-(t4145 + t4146) * np.sin((-t4130 + 6 * phi2)) + (-t4145 + t4146) * np.sin((t4130 + 6 * phi2))) * ((1 + t4129) ** (-0.1e1 / 0.2e1)) * ((1 - t4129) ** (-0.1e1 / 0.2e1))

        if Bindx == 216:
            t4164 = np.cos(phi)
            t4163 = t4164 ** 2
            t4166 = t4164 * t4163
            t4167 = t4163 ** 2
            t4168 = t4164 * t4167
            t4169 = t4166 ** 2
            t4170 = t4164 * t4169
            t4171 = t4167 ** 2
            t4173 = t4168 ** 2
            t4175 = t4169 ** 2
            t4177 = t4170 ** 2
            t4181 = 508 * t4166 - 1836 * t4168 + 2332 * t4170 + (412 * t4171 - 3564 * t4173 + 3004 * t4175 - 812 * t4177 - 44) * t4164
            t4180 = -36 * t4163 + 664 * t4167 - 3380 * t4169 - 7724 * t4173 + 3568 * t4175 - 252 * t4177 + 1 + (7362 - 203 * t4171) * t4171
            t4165 = 5 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.3289e4) * (-(-t4180 + t4181) * np.sin((-t4165 + 12 * phi2)) + (t4180 + t4181) * np.sin((t4165 + 12 * phi2))) * ((1 + t4164) ** (-0.1e1 / 0.2e1)) * ((1 - t4164) ** (-0.1e1 / 0.2e1))

        if Bindx == 217:
            t4198 = np.cos(phi)
            t4197 = t4198 ** 2
            t4200 = t4197 ** 2
            t4199 = t4198 * t4197
            t4202 = t4199 ** 2
            t4204 = t4200 ** 2
            t4201 = t4198 * t4200
            t4206 = t4201 ** 2
            t4208 = t4202 ** 2
            t4203 = t4198 * t4202
            t4210 = t4203 ** 2
            t4213 = 0.754509e6 / 0.2048e4 * t4197 - 0.44351979e8 / 0.8192e4 * t4200 + 0.130558267e9 / 0.4096e4 * t4202 - 0.763257231e9 / 0.8192e4 * t4204 + 0.145762155e9 / 0.1024e4 * t4206 - 0.888572685e9 / 0.8192e4 * t4208 + 0.133056495e9 / 0.4096e4 * t4210 - 0.35929e5 / 0.8192e4
            t4212 = 0.30427957e8 / 0.16384e5 * t4199 - 0.219938397e9 / 0.16384e5 * t4201 + 0.631038573e9 / 0.16384e5 * t4203 + (-0.732763647e9 / 0.16384e5 * t4204 + 0.96351255e8 / 0.16384e5 * t4206 + 0.417522105e9 / 0.16384e5 * t4208 - 0.221760825e9 / 0.16384e5 * t4210 - 0.1130973e7 / 0.16384e5) * t4198
            tfunc[..., c] = (t4212 + t4213) * np.cos((6 * phi1 - 6 * phi2)) + (-t4212 + t4213) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 218:
            t4230 = np.cos(phi)
            t4229 = t4230 ** 2
            t4233 = t4229 ** 2
            t4232 = t4230 * t4229
            t4235 = t4232 ** 2
            t4237 = t4233 ** 2
            t4234 = t4230 * t4233
            t4239 = t4234 ** 2
            t4241 = t4235 ** 2
            t4236 = t4230 * t4235
            t4243 = t4236 ** 2
            t4246 = 4 - 120 * t4229 + 996 * t4233 - 2936 * t4235 + 3276 * t4237 - 456 * t4239 - 1460 * t4241 + 696 * t4243
            t4245 = -223 * t4232 - 3 * t4234 + 2205 * t4236 + (-4717 * t4237 + 3603 * t4239 - 753 * t4241 - 145 * t4243 + 33) * t4230
            t4231 = 6 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((t4245 + t4246) * np.cos((-t4231 + 12 * phi2)) + (-t4245 + t4246) * np.cos((t4231 + 12 * phi2)))

        if Bindx == 219:
            t4264 = np.cos(phi)
            t4263 = t4264 ** 2
            t4266 = t4264 * t4263
            t4267 = t4263 ** 2
            t4268 = t4264 * t4267
            t4269 = t4266 ** 2
            t4270 = t4264 * t4269
            t4271 = t4267 ** 2
            t4273 = t4268 ** 2
            t4275 = t4269 ** 2
            t4277 = t4270 ** 2
            t4281 = 48258 * t4266 - 533190 * t4268 + 2745482 * t4270 + (-7161418 * t4271 + 9800070 * t4273 - 6718530 * t4275 + 1820910 * t4277 - 1582) * t4264
            t4280 = -39702 * t4263 + 501998 * t4267 - 2388638 * t4269 - 5621154 * t4273 + 1862770 * t4275 + 995670 * t4277 + 509 + (5338872 - 650325 * t4271) * t4271
            t4265 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.22e2) * (-(t4280 + t4281) * np.sin((-t4265 + 6 * phi2)) + (-t4280 + t4281) * np.sin((t4265 + 6 * phi2))) * ((1 + t4264) ** (-0.1e1 / 0.2e1)) * ((1 - t4264) ** (-0.1e1 / 0.2e1))

        if Bindx == 220:
            t4299 = np.cos(phi)
            t4298 = t4299 ** 2
            t4301 = t4299 * t4298
            t4302 = t4298 ** 2
            t4303 = t4299 * t4302
            t4304 = t4301 ** 2
            t4305 = t4299 * t4304
            t4306 = t4302 ** 2
            t4308 = t4303 ** 2
            t4310 = t4304 ** 2
            t4312 = t4305 ** 2
            t4316 = 92 * t4301 - 1740 * t4303 + 5852 * t4305 + (-7524 * t4306 + 3060 * t4308 + 1052 * t4310 - 812 * t4312 + 20) * t4299
            t4315 = 216 * t4298 - 1252 * t4302 + 2200 * t4304 - 5368 * t4308 + 5036 * t4310 - 1272 * t4312 - 9 + (594 - 145 * t4306) * t4306
            t4300 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.31395e5) * (-(-t4315 + t4316) * np.sin((-t4300 + 12 * phi2)) + (t4315 + t4316) * np.sin((t4300 + 12 * phi2))) * ((1 + t4299) ** (-0.1e1 / 0.2e1)) * ((1 - t4299) ** (-0.1e1 / 0.2e1))

        if Bindx == 221:
            t4333 = np.cos(phi)
            t4332 = t4333 ** 2
            t4336 = t4332 ** 2
            t4335 = t4333 * t4332
            t4338 = t4335 ** 2
            t4340 = t4336 ** 2
            t4337 = t4333 * t4336
            t4342 = t4337 ** 2
            t4344 = t4338 ** 2
            t4339 = t4333 * t4338
            t4346 = t4339 ** 2
            t4349 = -560 * t4332 + 2632 * t4336 + 20496 * t4338 - 140776 * t4340 + 300720 * t4342 - 273000 * t4344 + 90480 * t4346 + 8
            t4348 = -10731 * t4335 + 73633 * t4337 - 222055 * t4339 + (316967 * t4340 - 185185 * t4342 - 1365 * t4344 + 28275 * t4346 + 461) * t4333
            t4334 = 8 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.253e3) * ((-t4348 + t4349) * np.cos((-t4334 + 6 * phi2)) + (t4348 + t4349) * np.cos((t4334 + 6 * phi2)))

        if Bindx == 222:
            t4366 = np.cos(phi)
            t4365 = t4366 ** 2
            t4369 = t4365 ** 2
            t4368 = t4366 * t4365
            t4371 = t4368 ** 2
            t4373 = t4369 ** 2
            t4370 = t4366 * t4369
            t4375 = t4370 ** 2
            t4377 = t4371 ** 2
            t4372 = t4366 * t4371
            t4379 = t4372 ** 2
            t4382 = -16 + 256 * t4365 - 592 * t4369 - 1760 * t4371 + 6864 * t4373 - 6336 * t4375 + 656 * t4377 + 928 * t4379
            t4381 = -587 * t4368 + 3047 * t4370 - 4587 * t4372 + (-11 * t4373 + 4295 * t4375 - 2027 * t4377 - 145 * t4379 + 15) * t4366
            t4367 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2730e4) * ((t4381 + t4382) * np.cos((-t4367 + 12 * phi2)) + (-t4381 + t4382) * np.cos((t4367 + 12 * phi2)))

        if Bindx == 223:
            t4400 = np.cos(phi)
            t4399 = t4400 ** 2
            t4402 = t4400 * t4399
            t4403 = t4399 ** 2
            t4404 = t4400 * t4403
            t4405 = t4402 ** 2
            t4406 = t4400 * t4405
            t4407 = t4403 ** 2
            t4409 = t4404 ** 2
            t4411 = t4405 ** 2
            t4413 = t4406 ** 2
            t4417 = -10222 * t4402 + 44042 * t4404 - 35302 * t4406 + (-157914 * t4407 + 395190 * t4409 - 338130 * t4411 + 101790 * t4413 + 546) * t4400
            t4416 = -3658 * t4399 + 42674 * t4403 - 208066 * t4405 - 594046 * t4409 + 310830 * t4411 - 15990 * t4413 + 59 + (496472 - 28275 * t4407) * t4407
            t4401 = 9 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.10626e5) * (-(t4416 + t4417) * np.sin((-t4401 + 6 * phi2)) + (-t4416 + t4417) * np.sin((t4401 + 6 * phi2))) * ((1 + t4400) ** (-0.1e1 / 0.2e1)) * ((1 - t4400) ** (-0.1e1 / 0.2e1))

        if Bindx == 224:
            t4435 = np.cos(phi)
            t4434 = t4435 ** 2
            t4437 = t4435 * t4434
            t4438 = t4434 ** 2
            t4439 = t4435 * t4438
            t4440 = t4437 ** 2
            t4441 = t4435 * t4440
            t4442 = t4438 ** 2
            t4444 = t4439 ** 2
            t4446 = t4440 ** 2
            t4448 = t4441 ** 2
            t4452 = -7876 * t4437 + 23636 * t4439 - 3652 * t4441 + (-63492 * t4442 + 72084 * t4444 - 13956 * t4446 - 7308 * t4448 + 564) * t4435
            t4451 = -1416 * t4434 - 5196 * t4438 + 44088 * t4440 + 28776 * t4444 + 31364 * t4446 - 19096 * t4448 + 177 + (-77682 - 1015 * t4442) * t4442
            t4436 = 9 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(-t4451 + t4452) * np.sin((-t4436 + 12 * phi2)) + (t4451 + t4452) * np.sin((t4436 + 12 * phi2))) * ((1 + t4435) ** (-0.1e1 / 0.2e1)) * ((1 - t4435) ** (-0.1e1 / 0.2e1))

        if Bindx == 225:
            t4469 = np.cos(phi)
            t4468 = t4469 ** 2
            t4472 = t4468 ** 2
            t4471 = t4469 * t4468
            t4474 = t4471 ** 2
            t4476 = t4472 ** 2
            t4473 = t4469 * t4472
            t4478 = t4473 ** 2
            t4480 = t4474 ** 2
            t4475 = t4469 * t4474
            t4482 = t4475 ** 2
            t4485 = -6 + 312 * t4468 - 2386 * t4472 + 6116 * t4474 - 3562 * t4476 - 7728 * t4478 + 11778 * t4480 - 4524 * t4482
            t4484 = 511 * t4471 - 4343 * t4473 + 15175 * t4475 + (-24125 * t4476 + 16549 * t4478 - 2613 * t4480 - 1131 * t4482 - 23) * t4469
            t4470 = 10 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.1771e4) * ((-t4484 + t4485) * np.cos((-t4470 + 6 * phi2)) + (t4484 + t4485) * np.cos((t4470 + 6 * phi2)))

        if Bindx == 226:
            t4502 = np.cos(phi)
            t4501 = t4502 ** 2
            t4505 = t4501 ** 2
            t4504 = t4502 * t4501
            t4507 = t4504 ** 2
            t4509 = t4505 ** 2
            t4506 = t4502 * t4505
            t4511 = t4506 ** 2
            t4513 = t4507 ** 2
            t4508 = t4502 * t4507
            t4515 = t4508 ** 2
            t4518 = -52 - 104 * t4501 + 4076 * t4505 - 10472 * t4507 + 1188 * t4509 + 13992 * t4511 - 7004 * t4513 - 1624 * t4515
            t4517 = 1819 * t4504 + 143 * t4506 - 13233 * t4508 + (16577 * t4509 + 289 * t4511 - 5131 * t4513 - 203 * t4515 - 261) * t4502
            t4503 = 10 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.390e3) * ((-t4517 + t4518) * np.cos((-t4503 + 12 * phi2)) + (t4517 + t4518) * np.cos((t4503 + 12 * phi2)))

        if Bindx == 227:
            t4536 = np.cos(phi)
            t4535 = t4536 ** 2
            t4538 = t4536 * t4535
            t4539 = t4535 ** 2
            t4540 = t4536 * t4539
            t4541 = t4538 ** 2
            t4542 = t4536 * t4541
            t4543 = t4539 ** 2
            t4545 = t4540 ** 2
            t4547 = t4541 ** 2
            t4549 = t4542 ** 2
            t4553 = -778 * t4538 + 3726 * t4540 - 7314 * t4542 + (4642 * t4543 + 3234 * t4545 - 5478 * t4547 + 1914 * t4549 + 54) * t4536
            t4552 = 42 * t4535 + 294 * t4539 - 3678 * t4541 - 15714 * t4545 + 9322 * t4547 - 1386 * t4549 - 1 + (11556 - 435 * t4543) * t4543
            t4537 = 11 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.230230e6) * (-(t4552 + t4553) * np.sin((-t4537 + 6 * phi2)) + (-t4552 + t4553) * np.sin((t4537 + 6 * phi2))) * ((1 - t4536) ** (-0.1e1 / 0.2e1)) * ((1 + t4536) ** (-0.1e1 / 0.2e1))

        if Bindx == 228:
            t4571 = np.cos(phi)
            t4570 = t4571 ** 2
            t4573 = t4571 * t4570
            t4574 = t4570 ** 2
            t4575 = t4571 * t4574
            t4576 = t4573 ** 2
            t4577 = t4571 * t4576
            t4578 = t4574 ** 2
            t4580 = t4575 ** 2
            t4582 = t4576 ** 2
            t4584 = t4577 ** 2
            t4588 = -6356 * t4573 - 40092 * t4575 + 126412 * t4577 + (-56628 * t4578 - 87516 * t4580 + 52844 * t4582 + 8932 * t4584 + 2404) * t4571
            t4587 = 4356 * t4570 - 35464 * t4574 + 33748 * t4576 - 148148 * t4580 + 17056 * t4582 + 31836 * t4584 + 363 + (95238 + 1015 * t4578) * t4578
            t4572 = 11 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.3e1) * (-(-t4587 + t4588) * np.sin((-t4572 + 12 * phi2)) + (t4587 + t4588) * np.sin((t4572 + 12 * phi2))) * ((1 + t4571) ** (-0.1e1 / 0.2e1)) * ((1 - t4571) ** (-0.1e1 / 0.2e1))

        if Bindx == 229:
            t4605 = np.cos(phi)
            t4604 = t4605 ** 2
            t4608 = t4604 ** 2
            t4607 = t4605 * t4604
            t4610 = t4607 ** 2
            t4612 = t4608 ** 2
            t4609 = t4605 * t4608
            t4614 = t4609 ** 2
            t4616 = t4610 ** 2
            t4611 = t4605 * t4610
            t4618 = t4611 ** 2
            t4621 = -4 + 120 * t4604 - 996 * t4608 + 2936 * t4610 - 3276 * t4612 + 456 * t4614 + 1460 * t4616 - 696 * t4618
            t4620 = -223 * t4607 - 3 * t4609 + 2205 * t4611 + (-4717 * t4612 + 3603 * t4614 - 753 * t4616 - 145 * t4618 + 33) * t4605
            t4606 = 12 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4620 + t4621) * np.cos((-t4606 + 6 * phi2)) + (t4620 + t4621) * np.cos((t4606 + 6 * phi2)))

        if Bindx == 230:
            t4638 = np.cos(phi)
            t4637 = t4638 ** 2
            t4640 = t4637 ** 2
            t4639 = t4638 * t4637
            t4642 = t4639 ** 2
            t4644 = t4640 ** 2
            t4641 = t4638 * t4640
            t4646 = t4641 ** 2
            t4648 = t4642 ** 2
            t4643 = t4638 * t4642
            t4650 = t4643 ** 2
            t4653 = -0.5673e4 / 0.128e3 * t4637 + 0.117273e6 / 0.1024e4 * t4640 + 0.155155e6 / 0.512e3 * t4642 - 0.678249e6 / 0.1024e4 * t4644 - 0.13299e5 / 0.256e3 * t4646 + 0.329251e6 / 0.1024e4 * t4648 + 0.18879e5 / 0.512e3 * t4650 - 0.1891e4 / 0.1024e4
            t4652 = 0.292981e6 / 0.8192e4 * t4639 - 0.2806089e7 / 0.8192e4 * t4641 + 0.1476189e7 / 0.8192e4 * t4643 + (0.4738877e7 / 0.8192e4 * t4644 - 0.2690025e7 / 0.8192e4 * t4646 - 0.1229739e7 / 0.8192e4 * t4648 - 0.31465e5 / 0.8192e4 * t4650 + 0.122295e6 / 0.8192e4) * t4638
            tfunc[..., c] = (t4652 + t4653) * np.cos((12 * phi1 - 12 * phi2)) + (-t4652 + t4653) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 231:
            t4671 = np.cos(phi)
            t4670 = t4671 ** 2
            t4673 = t4671 * t4670
            t4674 = t4670 ** 2
            t4675 = t4671 * t4674
            t4676 = t4673 ** 2
            t4677 = t4671 * t4676
            t4678 = t4674 ** 2
            t4680 = t4675 ** 2
            t4682 = t4676 ** 2
            t4684 = t4677 ** 2
            t4688 = 482 * t4673 - 3222 * t4675 + 7274 * t4677 + (-6586 * t4678 + 1062 * t4680 + 1742 * t4682 - 754 * t4684 + 2) * t4671
            t4687 = 342 * t4670 - 1318 * t4674 + 734 * t4676 - 7582 * t4680 + 4982 * t4682 - 918 * t4684 - 19 + (3924 - 145 * t4678) * t4678
            t4672 = 13 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.32890e5) * (-(-t4687 + t4688) * np.sin((-t4672 + 6 * phi2)) + (t4687 + t4688) * np.sin((t4672 + 6 * phi2))) * ((1 + t4671) ** (-0.1e1 / 0.2e1)) * ((1 - t4671) ** (-0.1e1 / 0.2e1))

        if Bindx == 232:
            t4706 = np.cos(phi)
            t4705 = t4706 ** 2
            t4708 = t4706 * t4705
            t4709 = t4705 ** 2
            t4710 = t4706 * t4709
            t4711 = t4708 ** 2
            t4712 = t4706 * t4711
            t4713 = t4709 ** 2
            t4715 = t4710 ** 2
            t4717 = t4711 ** 2
            t4719 = t4712 ** 2
            t4723 = -5588 * t4708 + 17316 * t4710 + 16588 * t4712 + (-47476 * t4713 + 2340 * t4715 + 16172 * t4717 + 1508 * t4719 - 860) * t4706
            t4722 = 3276 * t4705 + 208 * t4709 - 31460 * t4711 + 31460 * t4715 - 19864 * t4717 - 6732 * t4719 + 91 + (23166 - 145 * t4713) * t4713
            t4707 = 13 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.21e2) * (-(t4722 + t4723) * np.sin((-t4707 + 12 * phi2)) + (-t4722 + t4723) * np.sin((t4707 + 12 * phi2))) * ((1 + t4706) ** (-0.1e1 / 0.2e1)) * ((1 - t4706) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t4740 = np.cos(phi)
            t4739 = t4740 ** 2
            t4743 = t4739 ** 2
            t4742 = t4740 * t4739
            t4745 = t4742 ** 2
            t4747 = t4743 ** 2
            t4744 = t4740 * t4743
            t4749 = t4744 ** 2
            t4751 = t4745 ** 2
            t4746 = t4740 * t4745
            t4753 = t4746 ** 2
            t4756 = 2 - 8 * t4739 - 58 * t4743 + 244 * t4745 - 306 * t4747 + 112 * t4749 + 42 * t4751 - 28 * t4753
            t4755 = -63 * t4742 + 119 * t4744 + 9 * t4746 + (-211 * t4747 + 187 * t4749 - 43 * t4751 - 5 * t4753 + 7) * t4740
            t4741 = 14 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.476905e6) * ((-t4755 + t4756) * np.cos((-t4741 + 6 * phi2)) + (t4755 + t4756) * np.cos((t4741 + 6 * phi2)))

        if Bindx == 234:
            t4773 = np.cos(phi)
            t4772 = t4773 ** 2
            t4776 = t4772 ** 2
            t4775 = t4773 * t4772
            t4778 = t4775 ** 2
            t4780 = t4776 ** 2
            t4777 = t4773 * t4776
            t4782 = t4777 ** 2
            t4784 = t4778 ** 2
            t4779 = t4773 * t4778
            t4786 = t4779 ** 2
            t4789 = -4 - 200 * t4772 - 676 * t4776 + 1144 * t4778 + 1716 * t4780 - 1144 * t4782 - 780 * t4784 - 56 * t4786
            t4788 = -507 * t4775 - 143 * t4777 + 2145 * t4779 + (143 * t4780 - 1313 * t4782 - 277 * t4784 - 5 * t4786 - 43) * t4773
            t4774 = 14 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1218e4) * ((-t4788 + t4789) * np.cos((-t4774 + 12 * phi2)) + (t4788 + t4789) * np.cos((t4774 + 12 * phi2)))

        if Bindx == 235:
            t4805 = np.cos(phi)
            t4821 = -6 * t4805
            t4804 = t4805 ** 2
            t4807 = t4805 * t4804
            t4808 = t4804 ** 2
            t4809 = t4805 * t4808
            t4810 = t4807 ** 2
            t4811 = t4805 * t4810
            t4812 = t4808 ** 2
            t4814 = t4809 ** 2
            t4816 = t4810 ** 2
            t4820 = t4816 * t4821 + 4 * t4807 + 38 * t4809 - 72 * t4811 + t4821 + (38 * t4812 + 4 * t4814) * t4805
            t4819 = -t4811 ** 2 - 11 * t4804 + 39 * t4808 - 27 * t4810 - 27 * t4812 + 39 * t4814 - 11 * t4816 - 1
            t4806 = 15 * phi1
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.572286e6) * np.sqrt((1 - t4805)) * np.sqrt((1 + t4805)) * (-(-t4819 + t4820) * np.sin((-t4806 + 6 * phi2)) + (t4819 + t4820) * np.sin((t4806 + 6 * phi2)))

        if Bindx == 236:
            t4836 = np.cos(phi)
            t4835 = t4836 ** 2
            t4838 = t4836 * t4835
            t4839 = t4835 ** 2
            t4840 = t4836 * t4839
            t4842 = t4839 ** 2
            t4844 = t4840 ** 2
            t4841 = t4838 ** 2
            t4846 = t4841 ** 2
            t4847 = t4836 * t4846
            t4850 = -208 * t4838 - 572 * t4840 + 12 * t4847 + (572 * t4842 + 208 * t4844 - 12) * t4836
            t4849 = -t4836 * t4847 + 65 * t4835 + 429 * t4839 + 429 * t4841 - 429 * t4842 - 429 * t4844 - 65 * t4846 + 1
            t4837 = 15 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1015e4) * np.sqrt((1 - t4836)) * np.sqrt((1 + t4836)) * (-(t4849 + t4850) * np.sin((-t4837 + 12 * phi2)) + (-t4849 + t4850) * np.sin((t4837 + 12 * phi2)))

        if Bindx == 237:
            t4851 = np.cos(phi)
            t4852 = t4851 ** 2
            t4853 = t4852 ** 2
            t4854 = t4852 * t4853
            t4857 = t4854 ** 2
            t4855 = t4853 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t4857 - 0.672188517e9 / 0.4096e4 * t4854 + 0.160044885e9 / 0.8192e4 * t4853 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t4855) * t4855 + (-0.4798948275e10 / 0.4096e4 * t4857 - 0.6135053925e10 / 0.4096e4 * t4855 - 0.3610035e7 / 0.4096e4) * t4852

        if Bindx == 238:
            t4860 = np.cos(phi)
            t4861 = t4860 ** 2
            t4862 = t4861 ** 2
            t4863 = t4861 * t4862
            t4866 = t4863 ** 2
            t4864 = t4862 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t4862 - 345366 * t4863 + 2498490 * t4866 + 21 + (1225440 + 310155 * t4864) * t4864 + (-2353130 * t4864 - 1380690 * t4866 - 2478) * t4861) * np.cos((6 * phi2))

        if Bindx == 239:
            t4869 = np.cos(phi)
            t4870 = t4869 ** 2
            t4871 = t4870 ** 2
            t4872 = t4870 * t4871
            t4875 = t4872 ** 2
            t4873 = t4871 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t4871 - 8064 * t4872 + 14532 * t4875 + 3 + (17010 + 899 * t4873) * t4873 + (-20608 * t4873 - 5568 * t4875 - 192) * t4870) * np.cos((12 * phi2))

        if Bindx == 240:
            t4879 = np.cos(phi)
            t4880 = t4879 ** 2
            t4881 = t4880 ** 2
            t4882 = t4880 * t4881
            t4885 = t4882 ** 2
            t4883 = t4881 ** 2
            t4878 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * t4879 * t4878 ** 2 * (-3594591 * t4881 + 19684665 * t4882 - 54679625 * t4883 - 59879925 * t4885 - 6435 + (80528175 * t4883 + 17678835 * t4885 + 285285) * t4880) * np.sin(phi1) * ((1 + t4879) ** (-0.1e1 / 0.2e1)) * ((1 - t4879) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t4905 = np.cos(phi)
            t4904 = t4905 ** 2
            t4907 = t4904 ** 2
            t4906 = t4905 * t4904
            t4909 = t4906 ** 2
            t4911 = t4907 ** 2
            t4908 = t4905 * t4907
            t4913 = t4908 ** 2
            t4915 = t4909 ** 2
            t4910 = t4905 * t4909
            t4917 = t4910 ** 2
            t4919 = t4911 ** 2
            t4922 = 7434 * t4904 - 142674 * t4907 + 1036098 * t4909 - 3676320 * t4911 + 7059390 * t4913 - 7495470 * t4915 + 4142070 * t4917 - 930465 * t4919 - 63
            t4921 = -97594 * t4906 + 1131214 * t4908 - 5937858 * t4910 + (16667410 * t4911 - 26756590 * t4913 + 24655770 * t4915 - 12146070 * t4917 + 2481240 * t4919 + 2478) * t4905
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.1482e4) * ((t4921 + t4922) * np.sin((phi1 - 6 * phi2)) + (t4921 - t4922) * np.sin((phi1 + 6 * phi2))) * ((1 + t4905) ** (-0.1e1 / 0.2e1)) * ((1 - t4905) ** (-0.1e1 / 0.2e1))

        if Bindx == 242:
            t4941 = np.cos(phi)
            t4940 = t4941 ** 2
            t4943 = t4940 ** 2
            t4942 = t4941 * t4940
            t4945 = t4942 ** 2
            t4947 = t4943 ** 2
            t4944 = t4941 * t4943
            t4949 = t4944 ** 2
            t4951 = t4945 ** 2
            t4946 = t4941 * t4945
            t4953 = t4946 ** 2
            t4955 = t4947 ** 2
            t4958 = -9 + 576 * t4940 - 5964 * t4943 + 24192 * t4945 - 51030 * t4947 + 61824 * t4949 - 43596 * t4951 + 16704 * t4953 - 2697 * t4955
            t4957 = -2084 * t4942 + 14084 * t4944 - 46116 * t4946 + (85540 * t4947 - 95116 * t4949 + 63084 * t4951 - 23084 * t4953 + 3596 * t4955 + 96) * t4941
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.437e3) * ((t4957 + t4958) * np.sin((phi1 - 12 * phi2)) + (t4957 - t4958) * np.sin((phi1 + 12 * phi2))) * ((1 + t4941) ** (-0.1e1 / 0.2e1)) * ((1 - t4941) ** (-0.1e1 / 0.2e1))

        if Bindx == 243:
            t4959 = np.cos(phi)
            t4960 = t4959 ** 2
            t4961 = t4960 ** 2
            t4962 = t4960 * t4961
            t4965 = t4962 ** 2
            t4963 = t4961 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t4961 - 3461458 * t4962 + 36983310 * t4965 + 143 + (13997984 + 5892945 * t4963) * t4963 + (-30620590 * t4963 - 23191590 * t4965 - 19162) * t4960) * np.cos((2 * phi1))

        if Bindx == 244:
            t4985 = np.cos(phi)
            t4984 = t4985 ** 2
            t4987 = t4985 * t4984
            t4988 = t4984 ** 2
            t4989 = t4985 * t4988
            t4990 = t4987 ** 2
            t4991 = t4985 * t4990
            t4992 = t4988 ** 2
            t4994 = t4989 ** 2
            t4996 = t4990 ** 2
            t4998 = t4991 ** 2
            t5002 = -37555 * t4987 + 405419 * t4989 - 1900651 * t4991 + (4521225 * t4992 - 5710785 * t4994 + 3651825 * t4996 - 930465 * t4998 + 987) * t4985
            t5001 = -8120 * t4984 + 155134 * t4988 - 1136268 * t4990 - 8169600 * t4994 + 9042450 * t4996 - 5242620 * t4998 + 70 + (4118334 + 1240620 * t4992) * t4992
            t4986 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * ((t5001 + t5002) * np.cos((-t4986 + 6 * phi2)) + (t5001 - t5002) * np.cos((t4986 + 6 * phi2)))

        if Bindx == 245:
            t5020 = np.cos(phi)
            t5019 = t5020 ** 2
            t5023 = t5019 ** 2
            t5022 = t5020 * t5019
            t5025 = t5022 ** 2
            t5027 = t5023 ** 2
            t5024 = t5020 * t5023
            t5029 = t5024 ** 2
            t5031 = t5025 ** 2
            t5026 = t5020 * t5025
            t5033 = t5026 ** 2
            t5037 = 124 * t5019 + 280 * t5023 - 12180 * t5025 - 98028 * t5029 + 94136 * t5031 - 45820 * t5033 - 2 + (52500 + 8990 * t5027) * t5027
            t5036 = -7763 * t5022 + 46585 * t5024 - 129815 * t5026 + (195335 * t5027 - 164521 * t5029 + 73283 * t5031 - 13485 * t5033 + 381) * t5020
            t5021 = 2 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t5036 + t5037) * np.cos((-t5021 + 12 * phi2)) + (-t5036 + t5037) * np.cos((t5021 + 12 * phi2)))

        if Bindx == 246:
            t5047 = np.sin(phi)
            t5045 = t5047 ** 2
            t5038 = np.cos(phi)
            t5039 = t5038 ** 2
            t5040 = t5039 ** 2
            t5042 = t5040 ** 2
            t5041 = t5039 * t5040
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t5038 * t5045 ** 2 * (69069 * t5040 + 740025 * t5042 + 143 + (-328900 + 310155 * t5041) * t5041 + (-780390 * t5042 - 6006) * t5039) * np.sin((3 * phi1)) * ((1 + t5038) ** (-0.1e1 / 0.2e1)) * ((1 - t5038) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t5066 = np.cos(phi)
            t5065 = t5066 ** 2
            t5069 = t5065 ** 2
            t5068 = t5066 * t5065
            t5071 = t5068 ** 2
            t5073 = t5069 ** 2
            t5070 = t5066 * t5069
            t5075 = t5070 ** 2
            t5077 = t5071 ** 2
            t5072 = t5066 * t5071
            t5079 = t5072 ** 2
            t5081 = t5073 ** 2
            t5084 = 22914 * t5065 - 427922 * t5069 + 3048346 * t5071 - 10700612 * t5073 + 20497830 * t5075 - 21875070 * t5077 + 12226110 * t5079 - 2791395 * t5081 - 201
            t5083 = -56458 * t5068 + 670766 * t5070 - 3726834 * t5072 + (11325522 * t5073 - 19943070 * t5075 + 20272890 * t5077 - 11025510 * t5079 + 2481240 * t5081 + 1454) * t5066
            t5067 = 3 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.910e3) * (-(t5083 + t5084) * np.sin((-t5067 + 6 * phi2)) + (t5083 - t5084) * np.sin((t5067 + 6 * phi2))) * ((1 + t5066) ** (-0.1e1 / 0.2e1)) * ((1 - t5066) ** (-0.1e1 / 0.2e1))

        if Bindx == 248:
            t5103 = np.cos(phi)
            t5102 = t5103 ** 2
            t5105 = t5103 * t5102
            t5106 = t5102 ** 2
            t5107 = t5103 * t5106
            t5108 = t5105 ** 2
            t5109 = t5103 * t5108
            t5110 = t5106 ** 2
            t5112 = t5107 ** 2
            t5114 = t5108 ** 2
            t5116 = t5109 ** 2
            t5118 = t5110 ** 2
            t5121 = 13148 * t5105 - 69340 * t5107 + 155580 * t5109 + (-149820 * t5110 + 8628 * t5112 + 100492 * t5114 - 75980 * t5116 + 17980 * t5118 - 688) * t5103
            t5120 = -3060 * t5102 + 34864 * t5106 - 170660 * t5108 + 433870 * t5110 - 621916 * t5112 + 509000 * t5114 - 222604 * t5116 + 40455 * t5118 + 51
            t5104 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2415e4) * (-(-t5120 + t5121) * np.sin((-t5104 + 12 * phi2)) + (t5120 + t5121) * np.sin((t5104 + 12 * phi2))) * ((1 + t5103) ** (-0.1e1 / 0.2e1)) * ((1 - t5103) ** (-0.1e1 / 0.2e1))

        if Bindx == 249:
            t5122 = np.cos(phi)
            t5123 = t5122 ** 2
            t5124 = t5123 ** 2
            t5125 = t5123 * t5124
            t5128 = t5125 ** 2
            t5126 = t5124 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t5124 - 231616 * t5125 + 2143140 * t5128 + 11 + (893090 + 310155 * t5126) * t5126 + (-1862080 * t5126 - 1280640 * t5128 - 1408) * t5123) * np.cos((4 * phi1))

        if Bindx == 250:
            t5148 = np.cos(phi)
            t5147 = t5148 ** 2
            t5150 = t5148 * t5147
            t5151 = t5147 ** 2
            t5152 = t5148 * t5151
            t5153 = t5150 ** 2
            t5154 = t5148 * t5153
            t5155 = t5151 ** 2
            t5157 = t5152 ** 2
            t5159 = t5153 ** 2
            t5161 = t5154 ** 2
            t5165 = -487715 * t5150 + 5090953 * t5152 - 23424695 * t5154 + (55508775 * t5155 - 70777785 * t5157 + 46173075 * t5159 - 12096045 * t5161 + 13437) * t5148
            t5164 = -6820 * t5147 + 175640 * t5151 - 1941492 * t5153 - 27968460 * t5157 + 40006200 * t5159 - 28614300 * t5161 + 62 + (10285140 + 8064030 * t5155) * t5155
            t5149 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.14e2) * ((t5164 + t5165) * np.cos((-t5149 + 6 * phi2)) + (t5164 - t5165) * np.cos((t5149 + 6 * phi2)))

        if Bindx == 251:
            t5183 = np.cos(phi)
            t5182 = t5183 ** 2
            t5185 = t5183 * t5182
            t5186 = t5182 ** 2
            t5187 = t5183 * t5186
            t5188 = t5185 ** 2
            t5189 = t5183 * t5188
            t5190 = t5186 ** 2
            t5192 = t5187 ** 2
            t5194 = t5188 ** 2
            t5196 = t5189 ** 2
            t5200 = 85 * t5185 + 823 * t5187 - 6659 * t5189 + (17021 * t5190 - 20425 * t5192 + 11861 * t5194 - 2697 * t5196 - 9) * t5183
            t5199 = 280 * t5182 - 2612 * t5186 + 9720 * t5188 + 14664 * t5192 - 4036 * t5194 - 1624 * t5196 - 5 + (-17286 + 899 * t5190) * t5190
            t5184 = 4 * phi1
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.6279e4) * ((t5199 + t5200) * np.cos((-t5184 + 12 * phi2)) + (t5199 - t5200) * np.cos((t5184 + 12 * phi2)))

        if Bindx == 252:
            t5210 = np.sin(phi)
            t5207 = t5210 ** 2
            t5208 = t5210 * t5207
            t5201 = np.cos(phi)
            t5202 = t5201 ** 2
            t5203 = t5202 ** 2
            t5205 = t5203 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t5201 * t5208 ** 2 * (-88550 * t5203 - 550275 * t5205 - 231 + (341550 * t5203 + 310155 * t5205 + 8855) * t5202) * np.sin((5 * phi1)) * ((1 + t5201) ** (-0.1e1 / 0.2e1)) * ((1 - t5201) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t5229 = np.cos(phi)
            t5228 = t5229 ** 2
            t5232 = t5228 ** 2
            t5231 = t5229 * t5228
            t5234 = t5231 ** 2
            t5236 = t5232 ** 2
            t5233 = t5229 * t5232
            t5238 = t5233 ** 2
            t5240 = t5234 ** 2
            t5235 = t5229 * t5234
            t5242 = t5235 ** 2
            t5244 = t5236 ** 2
            t5247 = 487918 * t5228 - 8673630 * t5232 + 60237590 * t5234 - 210521300 * t5236 + 407970090 * t5238 - 445243890 * t5240 + 256228050 * t5242 - 60480225 * t5244 - 4603
            t5246 = 745790 * t5231 - 6298922 * t5233 + 18128022 * t5235 + (-4075830 * t5236 - 74406150 * t5238 + 147870450 * t5240 - 114197070 * t5242 + 32256120 * t5244 - 22410) * t5229
            t5230 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-(t5246 + t5247) * np.sin((-t5230 + 6 * phi2)) + (t5246 - t5247) * np.sin((t5230 + 6 * phi2))) * ((1 + t5229) ** (-0.1e1 / 0.2e1)) * ((1 - t5229) ** (-0.1e1 / 0.2e1))

        if Bindx == 254:
            t5266 = np.cos(phi)
            t5265 = t5266 ** 2
            t5269 = t5265 ** 2
            t5268 = t5266 * t5265
            t5271 = t5268 ** 2
            t5273 = t5269 ** 2
            t5270 = t5266 * t5269
            t5275 = t5270 ** 2
            t5277 = t5271 ** 2
            t5272 = t5266 * t5271
            t5279 = t5272 ** 2
            t5281 = t5273 ** 2
            t5284 = 23 - 1196 * t5265 + 9048 * t5269 - 23068 * t5271 + 11422 * t5273 + 44604 * t5275 - 82912 * t5277 + 55564 * t5279 - 13485 * t5281
            t5283 = 2956 * t5268 - 22732 * t5270 + 79212 * t5272 + (-140012 * t5273 + 127172 * t5275 - 50628 * t5277 + 580 * t5279 + 3596 * t5281 - 144) * t5266
            t5267 = 5 * phi1
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.897e3) * (-(t5283 + t5284) * np.sin((-t5267 + 12 * phi2)) + (t5283 - t5284) * np.sin((t5267 + 12 * phi2))) * ((1 + t5266) ** (-0.1e1 / 0.2e1)) * ((1 - t5266) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t5285 = np.cos(phi)
            t5286 = t5285 ** 2
            t5287 = t5286 ** 2
            t5288 = t5286 * t5287
            t5291 = t5288 ** 2
            t5289 = t5287 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t5287 - 345366 * t5288 + 2498490 * t5291 + 21 + (1225440 + 310155 * t5289) * t5289 + (-2353130 * t5289 - 1380690 * t5291 - 2478) * t5286) * np.cos((6 * phi1))

        if Bindx == 256:
            t5311 = np.cos(phi)
            t5310 = t5311 ** 2
            t5312 = t5311 * t5310
            t5313 = t5310 ** 2
            t5314 = t5311 * t5313
            t5315 = t5312 ** 2
            t5316 = t5311 * t5315
            t5317 = t5313 ** 2
            t5319 = t5314 ** 2
            t5321 = t5315 ** 2
            t5323 = t5316 ** 2
            t5327 = -0.41181525e8 / 0.16384e5 * t5312 + 0.418245597e9 / 0.16384e5 * t5314 - 0.1944857805e10 / 0.16384e5 * t5316 + (0.4769574975e10 / 0.16384e5 * t5317 - 0.6362290935e10 / 0.16384e5 * t5319 + 0.4356527175e10 / 0.16384e5 * t5321 - 0.1197508455e10 / 0.16384e5 * t5323 + 0.1220637e7 / 0.16384e5) * t5311
            t5326 = 0.938025e6 / 0.2048e4 * t5310 - 0.57222165e8 / 0.8192e4 * t5313 + 0.152147457e9 / 0.4096e4 * t5315 + 0.34189155e8 / 0.512e3 * t5319 + 0.264188925e9 / 0.8192e4 * t5321 - 0.321910875e9 / 0.4096e4 * t5323 - 0.37521e5 / 0.8192e4 + (-0.684158805e9 / 0.8192e4 + 0.133056495e9 / 0.4096e4 * t5317) * t5317
            tfunc[..., c] = (t5326 + t5327) * np.cos((6 * phi1 - 6 * phi2)) + (t5326 - t5327) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 257:
            t5345 = np.cos(phi)
            t5344 = t5345 ** 2
            t5347 = t5345 * t5344
            t5348 = t5344 ** 2
            t5349 = t5345 * t5348
            t5350 = t5347 ** 2
            t5351 = t5345 * t5350
            t5352 = t5348 ** 2
            t5354 = t5349 ** 2
            t5356 = t5350 ** 2
            t5358 = t5351 ** 2
            t5362 = 2859 * t5347 - 15009 * t5349 + 32351 * t5351 + (-24783 * t5352 - 8751 * t5354 + 21605 * t5356 - 8091 * t5358 - 181) * t5345
            t5361 = -276 * t5344 - 104 * t5348 + 11484 * t5350 + 63844 * t5354 - 40200 * t5356 + 6612 * t5358 + 6 + (-43164 + 1798 * t5352) * t5352
            t5346 = 6 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5361 + t5362) * np.cos((-t5346 + 12 * phi2)) + (t5361 - t5362) * np.cos((t5346 + 12 * phi2)))

        if Bindx == 258:
            t5371 = np.sin(phi)
            t5368 = t5371 ** 2
            t5369 = t5368 ** 2
            t5363 = np.cos(phi)
            t5364 = t5363 ** 2
            t5365 = t5364 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t5363 * t5369 ** 2 * (-700 * t5364 + 21 + (-15660 * t5364 + 5670 + 13485 * t5365) * t5365) * np.sin((7 * phi1)) * ((1 + t5363) ** (-0.1e1 / 0.2e1)) * ((1 - t5363) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t5390 = np.cos(phi)
            t5389 = t5390 ** 2
            t5393 = t5389 ** 2
            t5392 = t5390 * t5389
            t5395 = t5392 ** 2
            t5397 = t5393 ** 2
            t5394 = t5390 * t5393
            t5399 = t5394 ** 2
            t5401 = t5395 ** 2
            t5396 = t5390 * t5395
            t5403 = t5396 ** 2
            t5405 = t5397 ** 2
            t5408 = 19082 * t5389 - 337554 * t5393 + 2514946 * t5395 - 9660376 * t5397 + 20482110 * t5399 - 24141390 * t5401 + 14804790 * t5403 - 3681405 * t5405 - 203
            t5407 = 177826 * t5392 - 1563142 * t5394 + 5959338 * t5396 + (-11144826 * t5397 + 9541350 * t5399 - 1302210 * t5401 - 3065010 * t5403 + 1402440 * t5405 - 5766) * t5390
            t5391 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.230e3) * (-(t5407 + t5408) * np.sin((-t5391 + 6 * phi2)) + (t5407 - t5408) * np.sin((t5391 + 6 * phi2))) * ((1 + t5390) ** (-0.1e1 / 0.2e1)) * ((1 - t5390) ** (-0.1e1 / 0.2e1))

        if Bindx == 260:
            t5427 = np.cos(phi)
            t5426 = t5427 ** 2
            t5430 = t5426 ** 2
            t5429 = t5427 * t5426
            t5432 = t5429 ** 2
            t5434 = t5430 ** 2
            t5431 = t5427 * t5430
            t5436 = t5431 ** 2
            t5438 = t5432 ** 2
            t5433 = t5427 * t5432
            t5440 = t5433 ** 2
            t5442 = t5434 ** 2
            t5445 = -4360 * t5426 + 67716 * t5430 - 349256 * t5432 + 773366 * t5434 - 744216 * t5436 + 157780 * t5438 + 193256 * t5440 - 94395 * t5442 + 109
            t5444 = -32788 * t5429 + 111412 * t5431 - 42900 * t5433 + (-427372 * t5434 + 842788 * t5436 - 593028 * t5438 + 121220 * t5440 + 17980 * t5442 + 2688) * t5427
            t5428 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.195e3) * (-(t5444 + t5445) * np.sin((-t5428 + 12 * phi2)) + (t5444 - t5445) * np.sin((t5428 + 12 * phi2))) * ((1 + t5427) ** (-0.1e1 / 0.2e1)) * ((1 - t5427) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t5446 = np.cos(phi)
            t5447 = t5446 ** 2
            t5448 = t5447 ** 2
            t5449 = t5447 * t5448
            t5452 = t5449 ** 2
            t5450 = t5448 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t5448 - 78568 * t5449 + 398340 * t5452 + 7 + (246122 + 40455 * t5450) * t5450 + (-419560 * t5450 - 198360 * t5452 - 728) * t5447) * np.cos((8 * phi1))

        if Bindx == 262:
            t5472 = np.cos(phi)
            t5471 = t5472 ** 2
            t5474 = t5472 * t5471
            t5475 = t5471 ** 2
            t5476 = t5472 * t5475
            t5477 = t5474 ** 2
            t5478 = t5472 * t5477
            t5479 = t5475 ** 2
            t5481 = t5476 ** 2
            t5483 = t5477 ** 2
            t5485 = t5478 ** 2
            t5489 = -2317 * t5474 + 58247 * t5476 - 448657 * t5478 + (1467345 * t5479 - 2330055 * t5481 + 1781325 * t5483 - 525915 * t5485 + 27) * t5472
            t5488 = 8342 * t5471 - 115990 * t5475 + 607838 * t5477 + 1811810 * t5481 - 832650 * t5483 - 147030 * t5485 - 97 + (-1507528 + 175305 * t5479) * t5479
            t5473 = 8 * phi1
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * ((t5488 + t5489) * np.cos((-t5473 + 6 * phi2)) + (t5488 - t5489) * np.cos((t5473 + 6 * phi2)))

        if Bindx == 263:
            t5507 = np.cos(phi)
            t5506 = t5507 ** 2
            t5510 = t5506 ** 2
            t5509 = t5507 * t5506
            t5512 = t5509 ** 2
            t5514 = t5510 ** 2
            t5511 = t5507 * t5510
            t5516 = t5511 ** 2
            t5518 = t5512 ** 2
            t5513 = t5507 * t5512
            t5520 = t5513 ** 2
            t5524 = -3552 * t5506 + 29940 * t5510 - 85536 * t5512 + 85536 * t5516 - 146252 * t5518 + 51040 * t5520 + 111 + (64218 + 4495 * t5514) * t5514
            t5523 = 3454 * t5509 + 17002 * t5511 - 121154 * t5513 + (228030 * t5514 - 146838 * t5516 - 6786 * t5518 + 26970 * t5520 - 678) * t5507
            t5508 = 8 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.130e3) * ((-t5523 + t5524) * np.cos((-t5508 + 12 * phi2)) + (t5523 + t5524) * np.cos((t5508 + 12 * phi2)))

        if Bindx == 264:
            t5533 = np.sin(phi)
            t5529 = t5533 ** 2
            t5531 = t5533 * t5529 ** 2
            t5525 = np.cos(phi)
            t5526 = t5525 ** 2
            t5527 = t5526 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t5525 * t5531 ** 2 * (-5481 * t5527 - 35 + (8091 * t5527 + 945) * t5526) * np.sin((9 * phi1)) * ((1 - t5525) ** (-0.1e1 / 0.2e1)) * ((1 + t5525) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t5552 = np.cos(phi)
            t5551 = t5552 ** 2
            t5555 = t5551 ** 2
            t5554 = t5552 * t5551
            t5557 = t5554 ** 2
            t5559 = t5555 ** 2
            t5556 = t5552 * t5555
            t5561 = t5556 ** 2
            t5563 = t5557 ** 2
            t5558 = t5552 * t5557
            t5565 = t5558 ** 2
            t5567 = t5559 ** 2
            t5570 = -8658 * t5551 + 83258 * t5555 - 136234 * t5557 - 742456 * t5559 + 3245418 * t5561 - 5030298 * t5563 + 3535506 * t5565 - 946647 * t5567 + 111
            t5569 = 85562 * t5554 - 706510 * t5556 + 2707298 * t5558 + (-5384434 * t5559 + 5519150 * t5561 - 2392026 * t5563 - 106314 * t5565 + 280488 * t5567 - 3214) * t5552
            t5553 = 9 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.690e3) * (-(t5569 + t5570) * np.sin((-t5553 + 6 * phi2)) + (t5569 - t5570) * np.sin((t5553 + 6 * phi2))) * ((1 - t5552) ** (-0.1e1 / 0.2e1)) * ((1 + t5552) ** (-0.1e1 / 0.2e1))

        if Bindx == 266:
            t5589 = np.cos(phi)
            t5588 = t5589 ** 2
            t5592 = t5588 ** 2
            t5591 = t5589 * t5588
            t5594 = t5591 ** 2
            t5596 = t5592 ** 2
            t5593 = t5589 * t5592
            t5598 = t5593 ** 2
            t5600 = t5594 ** 2
            t5595 = t5589 * t5594
            t5602 = t5595 ** 2
            t5604 = t5596 ** 2
            t5607 = -4824 * t5588 + 25700 * t5592 - 22936 * t5594 - 116050 * t5596 + 286968 * t5598 - 210732 * t5600 + 17400 * t5602 + 24273 * t5604 + 201
            t5606 = -5700 * t5591 + 59748 * t5593 - 179652 * t5595 + (188100 * t5596 + 16404 * t5598 - 138100 * t5600 + 55796 * t5602 + 3596 * t5604 - 192) * t5589
            t5590 = 9 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t5606 - t5607) * np.sin((-t5590 + 12 * phi2)) + (t5606 + t5607) * np.sin((t5590 + 12 * phi2))) * ((1 - t5589) ** (-0.1e1 / 0.2e1)) * ((1 + t5589) ** (-0.1e1 / 0.2e1))

        if Bindx == 267:
            t5608 = np.cos(phi)
            t5609 = t5608 ** 2
            t5610 = t5609 ** 2
            t5611 = t5609 * t5610
            t5614 = t5611 ** 2
            t5612 = t5610 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t5610 - 31766 * t5611 + 100890 * t5614 + 5 + (83680 + 8091 * t5612) * t5612 + (-122090 * t5612 - 44370 * t5614 - 430) * t5609) * np.cos((10 * phi1))

        if Bindx == 268:
            t5634 = np.cos(phi)
            t5633 = t5634 ** 2
            t5636 = t5634 * t5633
            t5637 = t5633 ** 2
            t5638 = t5634 * t5637
            t5639 = t5636 ** 2
            t5640 = t5634 * t5639
            t5641 = t5637 ** 2
            t5643 = t5638 ** 2
            t5645 = t5639 ** 2
            t5647 = t5640 ** 2
            t5651 = -4075 * t5636 + 20963 * t5638 - 32659 * t5640 + (-25311 * t5641 + 124407 * t5643 - 123975 * t5645 + 40455 * t5647 + 195) * t5634
            t5650 = 952 * t5633 - 12422 * t5637 + 67804 * t5639 + 232672 * t5643 - 134346 * t5645 + 12876 * t5647 - 14 + (-178310 + 10788 * t5641) * t5641
            t5635 = 10 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * ((t5650 - t5651) * np.cos((-t5635 + 6 * phi2)) + (t5650 + t5651) * np.cos((t5635 + 6 * phi2)))

        if Bindx == 269:
            t5669 = np.cos(phi)
            t5668 = t5669 ** 2
            t5671 = t5669 * t5668
            t5672 = t5668 ** 2
            t5673 = t5669 * t5672
            t5674 = t5671 ** 2
            t5675 = t5669 * t5674
            t5676 = t5672 ** 2
            t5678 = t5673 ** 2
            t5680 = t5674 ** 2
            t5682 = t5675 ** 2
            t5686 = 9091 * t5671 - 40937 * t5673 + 40183 * t5675 + (67353 * t5676 - 127335 * t5678 + 38541 * t5680 + 13485 * t5682 - 381) * t5669
            t5685 = 2604 * t5668 - 936 * t5672 - 49764 * t5674 - 87516 * t5678 - 36296 * t5680 + 38164 * t5682 - 186 + (132132 + 1798 * t5676) * t5676
            t5670 = 10 * phi1
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.70e2) * ((t5685 - t5686) * np.cos((-t5670 + 12 * phi2)) + (t5685 + t5686) * np.cos((t5670 + 12 * phi2)))

        if Bindx == 270:
            t5694 = np.sin(phi)
            t5690 = t5694 ** 2
            t5691 = t5694 * t5690
            t5692 = t5691 ** 2
            t5687 = np.cos(phi)
            t5688 = t5687 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t5687 * t5692 ** 2 * (15 + (-290 + 899 * t5688) * t5688) * np.sin((11 * phi1)) * ((1 - t5687) ** (-0.1e1 / 0.2e1)) * ((1 + t5687) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t5713 = np.cos(phi)
            t5712 = t5713 ** 2
            t5716 = t5712 ** 2
            t5715 = t5713 * t5712
            t5718 = t5715 ** 2
            t5720 = t5716 ** 2
            t5717 = t5713 * t5716
            t5722 = t5717 ** 2
            t5724 = t5718 ** 2
            t5719 = t5713 * t5718
            t5726 = t5719 ** 2
            t5728 = t5720 ** 2
            t5731 = -1798 * t5712 + 16758 * t5716 - 58958 * t5718 + 82676 * t5720 - 5874 * t5722 - 103334 * t5724 + 100166 * t5726 - 29667 * t5728 + 31
            t5730 = 1958 * t5715 - 22946 * t5717 + 106590 * t5719 + (-235774 * t5720 + 262066 * t5722 - 132534 * t5724 + 13514 * t5726 + 7192 * t5728 - 66) * t5713
            t5714 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.62790e5) * (-(t5730 + t5731) * np.sin((-t5714 + 6 * phi2)) + (t5730 - t5731) * np.sin((t5714 + 6 * phi2))) * ((1 - t5713) ** (-0.1e1 / 0.2e1)) * ((1 + t5713) ** (-0.1e1 / 0.2e1))

        if Bindx == 272:
            t5750 = np.cos(phi)
            t5749 = t5750 ** 2
            t5752 = t5750 * t5749
            t5753 = t5749 ** 2
            t5754 = t5750 * t5753
            t5755 = t5752 ** 2
            t5756 = t5750 * t5755
            t5757 = t5753 ** 2
            t5759 = t5754 ** 2
            t5761 = t5755 ** 2
            t5763 = t5756 ** 2
            t5765 = t5757 ** 2
            t5768 = 30668 * t5752 - 62348 * t5754 - 125268 * t5756 + (473044 * t5757 - 364156 * t5759 - 48132 * t5761 + 95236 * t5763 + 3596 * t5765 - 2640) * t5750
            t5767 = 2468 * t5749 + 43272 * t5753 - 224588 * t5755 + 286286 * t5757 + 94380 * t5759 - 354640 * t5761 + 123772 * t5763 + 29667 * t5765 - 617
            t5751 = 11 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.35e2) * (-(-t5767 + t5768) * np.sin((-t5751 + 12 * phi2)) + (t5767 + t5768) * np.sin((t5751 + 12 * phi2))) * ((1 + t5750) ** (-0.1e1 / 0.2e1)) * ((1 - t5750) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t5769 = np.cos(phi)
            t5770 = t5769 ** 2
            t5771 = t5770 ** 2
            t5772 = t5770 * t5771
            t5775 = t5772 ** 2
            t5773 = t5771 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t5771 - 8064 * t5772 + 14532 * t5775 + 3 + (17010 + 899 * t5773) * t5773 + (-20608 * t5773 - 5568 * t5775 - 192) * t5770) * np.cos((12 * phi1))

        if Bindx == 274:
            t5795 = np.cos(phi)
            t5794 = t5795 ** 2
            t5797 = t5795 * t5794
            t5798 = t5794 ** 2
            t5799 = t5795 * t5798
            t5800 = t5797 ** 2
            t5801 = t5795 * t5800
            t5802 = t5798 ** 2
            t5804 = t5799 ** 2
            t5806 = t5800 ** 2
            t5808 = t5801 ** 2
            t5812 = 2859 * t5797 - 15009 * t5799 + 32351 * t5801 + (-24783 * t5802 - 8751 * t5804 + 21605 * t5806 - 8091 * t5808 - 181) * t5795
            t5811 = -276 * t5794 - 104 * t5798 + 11484 * t5800 + 63844 * t5804 - 40200 * t5806 + 6612 * t5808 + 6 + (-43164 + 1798 * t5802) * t5802
            t5796 = 12 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5811 + t5812) * np.cos((-t5796 + 6 * phi2)) + (t5811 - t5812) * np.cos((t5796 + 6 * phi2)))

        if Bindx == 275:
            t5830 = np.cos(phi)
            t5829 = t5830 ** 2
            t5831 = t5830 * t5829
            t5832 = t5829 ** 2
            t5833 = t5830 * t5832
            t5834 = t5831 ** 2
            t5835 = t5830 * t5834
            t5836 = t5832 ** 2
            t5838 = t5833 ** 2
            t5840 = t5834 ** 2
            t5842 = t5835 ** 2
            t5846 = 0.1163547e7 / 0.8192e4 * t5831 + 0.3252249e7 / 0.8192e4 * t5833 - 0.16927053e8 / 0.8192e4 * t5835 + (0.12670515e8 / 0.8192e4 * t5836 + 0.10171161e8 / 0.8192e4 * t5838 - 0.8889573e7 / 0.8192e4 * t5840 - 0.1335015e7 / 0.8192e4 * t5842 - 0.240999e6 / 0.8192e4) * t5830
            t5845 = -0.1066065e7 / 0.2048e4 * t5832 + 0.891891e6 / 0.1024e4 * t5834 - 0.2741739e7 / 0.1024e4 * t5838 + 0.1252251e7 / 0.2048e4 * t5840 + 0.617265e6 / 0.1024e4 * t5842 + 0.39303e5 / 0.1024e4 * t5829 + 0.39303e5 / 0.8192e4 + (0.4374513e7 / 0.4096e4 + 0.148335e6 / 0.8192e4 * t5836) * t5836
            tfunc[..., c] = (t5845 + t5846) * np.cos((12 * phi1 - 12 * phi2)) + (t5845 - t5846) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 276:
            t5853 = np.sin(phi)
            t5848 = t5853 ** 2
            t5849 = t5853 * t5848
            t5851 = t5853 * t5849 ** 2
            t5847 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t5847 * t5851 ** 2 * (31 * t5847 ** 2 - 3) * np.sin((13 * phi1)) * ((1 + t5847) ** (-0.1e1 / 0.2e1)) * ((1 - t5847) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t5872 = np.cos(phi)
            t5871 = t5872 ** 2
            t5875 = t5871 ** 2
            t5874 = t5872 * t5871
            t5877 = t5874 ** 2
            t5879 = t5875 ** 2
            t5876 = t5872 * t5875
            t5881 = t5876 ** 2
            t5883 = t5877 ** 2
            t5878 = t5872 * t5877
            t5885 = t5878 ** 2
            t5887 = t5879 ** 2
            t5890 = 5 - 170 * t5871 + 1722 * t5875 - 6562 * t5877 + 11044 * t5879 - 7326 * t5881 - 1066 * t5883 + 3562 * t5885 - 1209 * t5887
            t5889 = -482 * t5874 + 758 * t5876 + 2838 * t5878 + (-10934 * t5879 + 14042 * t5881 - 7662 * t5883 + 1138 * t5885 + 248 * t5887 + 54) * t5872
            t5873 = 13 * phi1
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.52026e5) * (-(t5889 + t5890) * np.sin((-t5873 + 6 * phi2)) + (t5889 - t5890) * np.sin((t5873 + 6 * phi2))) * ((1 + t5872) ** (-0.1e1 / 0.2e1)) * ((1 - t5872) ** (-0.1e1 / 0.2e1))

        if Bindx == 278:
            t5909 = np.cos(phi)
            t5908 = t5909 ** 2
            t5911 = t5909 * t5908
            t5912 = t5908 ** 2
            t5913 = t5909 * t5912
            t5914 = t5911 ** 2
            t5915 = t5909 * t5914
            t5916 = t5912 ** 2
            t5918 = t5913 ** 2
            t5920 = t5914 ** 2
            t5922 = t5915 ** 2
            t5924 = t5916 ** 2
            t5927 = -52 * t5911 - 49868 * t5913 + 94380 * t5915 + (33748 * t5916 - 144508 * t5918 + 39228 * t5920 + 24580 * t5922 + 620 * t5924 + 1872) * t5909
            t5926 = -4820 * t5908 + 25536 * t5912 + 10556 * t5914 - 140426 * t5916 + 118404 * t5918 + 47320 * t5920 - 50284 * t5922 - 6045 * t5924 - 241
            t5910 = 13 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * (-(t5926 + t5927) * np.sin((-t5910 + 12 * phi2)) + (-t5926 + t5927) * np.sin((t5910 + 12 * phi2))) * ((1 + t5909) ** (-0.1e1 / 0.2e1)) * ((1 - t5909) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t5928 = np.cos(phi)
            t5929 = t5928 ** 2
            t5930 = t5929 ** 2
            t5931 = t5929 * t5930
            t5934 = t5931 ** 2
            t5932 = t5930 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t5930 - 686 * t5931 + 658 * t5934 + 1 + (1120 + 31 * t5932) * t5932 + (-1106 * t5932 - 218 * t5934 - 38) * t5929) * np.cos((14 * phi1))

        if Bindx == 280:
            t5954 = np.cos(phi)
            t5953 = t5954 ** 2
            t5956 = t5954 * t5953
            t5957 = t5953 ** 2
            t5958 = t5954 * t5957
            t5959 = t5956 ** 2
            t5960 = t5954 * t5959
            t5961 = t5957 ** 2
            t5963 = t5958 ** 2
            t5965 = t5959 ** 2
            t5967 = t5960 ** 2
            t5971 = 335 * t5956 - 2599 * t5958 + 6215 * t5960 + (-5885 * t5961 + 1141 * t5963 + 1435 * t5965 - 651 * t5967 + 9) * t5954
            t5970 = -280 * t5953 + 1190 * t5957 - 924 * t5959 + 6336 * t5963 - 4310 * t5965 + 820 * t5967 + 14 + (-2970 + 124 * t5961) * t5961
            t5955 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * ((t5970 + t5971) * np.cos((-t5955 + 6 * phi2)) + (t5970 - t5971) * np.cos((t5955 + 6 * phi2)))

        if Bindx == 281:
            t5989 = np.cos(phi)
            t5988 = t5989 ** 2
            t5991 = t5989 * t5988
            t5992 = t5988 ** 2
            t5993 = t5989 * t5992
            t5994 = t5991 ** 2
            t5995 = t5989 * t5994
            t5996 = t5992 ** 2
            t5998 = t5993 ** 2
            t6000 = t5994 ** 2
            t6002 = t5995 ** 2
            t6006 = 1771 * t5991 - 7553 * t5993 - 4433 * t5995 + (20449 * t5996 - 2639 * t5998 - 7259 * t6000 - 651 * t6002 + 315) * t5989
            t6005 = -1156 * t5988 + 728 * t5992 + 12012 * t5994 - 12012 * t5998 + 9464 * t6000 + 2948 * t6002 - 34 + (-12012 + 62 * t5996) * t5996
            t5990 = 14 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.290e3) * ((t6005 + t6006) * np.cos((-t5990 + 12 * phi2)) + (t6005 - t6006) * np.cos((t5990 + 12 * phi2)))

        if Bindx == 282:
            t6012 = np.sin(phi)
            t6008 = t6012 ** 2
            t6009 = t6008 ** 2
            t6010 = t6009 ** 2
            t6007 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t6007 * t6010 ** 2 * np.sin((15 * phi1)) * ((1 - t6007) ** (-0.1e1 / 0.2e1)) * ((1 + t6007) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t6031 = np.cos(phi)
            t6030 = t6031 ** 2
            t6034 = t6030 ** 2
            t6033 = t6031 * t6030
            t6036 = t6033 ** 2
            t6038 = t6034 ** 2
            t6035 = t6031 * t6034
            t6040 = t6035 ** 2
            t6042 = t6036 ** 2
            t6037 = t6031 * t6036
            t6044 = t6037 ** 2
            t6046 = t6038 ** 2
            t6049 = -3 + 18 * t6030 + 70 * t6034 - 470 * t6036 + 880 * t6038 - 682 * t6040 + 122 * t6042 + 110 * t6044 - 45 * t6046
            t6048 = -110 * t6033 + 298 * t6035 - 198 * t6037 + (-330 * t6038 + 630 * t6040 - 370 * t6042 + 62 * t6044 + 8 * t6046 + 10) * t6031
            t6032 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8064030e7) * (-(t6048 + t6049) * np.sin((-t6032 + 6 * phi2)) + (t6048 - t6049) * np.sin((t6032 + 6 * phi2))) * ((1 - t6031) ** (-0.1e1 / 0.2e1)) * ((1 + t6031) ** (-0.1e1 / 0.2e1))

        if Bindx == 284:
            t6068 = np.cos(phi)
            t6067 = t6068 ** 2
            t6071 = t6067 ** 2
            t6070 = t6068 * t6067
            t6073 = t6070 ** 2
            t6075 = t6071 ** 2
            t6072 = t6068 * t6071
            t6077 = t6072 ** 2
            t6079 = t6073 ** 2
            t6074 = t6068 * t6073
            t6081 = t6074 ** 2
            t6083 = t6075 ** 2
            t6086 = 3 + 144 * t6067 + 308 * t6071 - 1456 * t6073 - 286 * t6075 + 2288 * t6077 - 364 * t6079 - 592 * t6081 - 45 * t6083
            t6085 = -332 * t6070 + 364 * t6072 + 1716 * t6074 + (-1716 * t6075 - 1092 * t6077 + 868 * t6079 + 220 * t6081 + 4 * t6083 - 32) * t6068
            t6069 = 15 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * (-(t6085 + t6086) * np.sin((-t6069 + 12 * phi2)) + (t6085 - t6086) * np.sin((t6069 + 12 * phi2))) * ((1 - t6068) ** (-0.1e1 / 0.2e1)) * ((1 + t6068) ** (-0.1e1 / 0.2e1))

        if Bindx == 285:
            t6087 = np.cos(phi)
            t6088 = t6087 ** 2
            t6096 = -8 * t6088
            t6089 = t6088 ** 2
            t6091 = t6089 ** 2
            t6090 = t6088 * t6089
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t6089 + t6096 + 1 + (-56 * t6088 + 70 + t6091) * t6091 + (-56 + (t6096 + 28) * t6090) * t6090)

        if Bindx == 286:
            t6113 = np.cos(phi)
            t6112 = t6113 ** 2
            t6116 = t6112 ** 2
            t6115 = t6113 * t6112
            t6118 = t6115 ** 2
            t6117 = t6113 * t6116
            t6121 = t6117 ** 2
            t6123 = t6118 ** 2
            t6119 = t6113 * t6118
            t6125 = t6119 ** 2
            t6126 = t6113 * t6125
            t6129 = t6113 * t6126 - 10 * t6112 + 50 * t6116 - 66 * t6118 + 66 * t6121 - 50 * t6123 + 10 * t6125 - 1
            t6128 = -10 * t6115 - 34 * t6117 - 6 * t6126 + (-110 * t6112 + 110) * t6119 + (34 * t6121 + 10 * t6123 + 6) * t6113
            t6114 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * ((t6128 + t6129) * np.cos((-t6114 + 6 * phi2)) + (-t6128 + t6129) * np.cos((t6114 + 6 * phi2)))

        if Bindx == 287:
            t6145 = np.cos(phi)
            t6162 = -12 * t6145
            t6144 = t6145 ** 2
            t6148 = t6144 ** 2
            t6151 = t6148 ** 2
            t6152 = t6145 * t6151
            t6153 = t6144 * t6152
            t6154 = t6145 * t6153
            t6149 = t6145 * t6148
            t6150 = t6144 * t6149
            t6156 = t6150 ** 2
            t6160 = 64 * t6144 + 364 * t6148 + 364 * t6154 + 64 * t6156 + 1 + (-858 + t6151) * t6151
            t6159 = t6156 * t6162 - 364 * t6149 + 572 * t6150 + 572 * t6152 - 364 * t6153 + t6162 - 196 * (t6144 + t6154) * t6145
            t6146 = 16 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8990e4) * ((t6159 + t6160) * np.cos((-t6146 + 12 * phi2)) + (-t6159 + t6160) * np.cos((t6146 + 12 * phi2)))


