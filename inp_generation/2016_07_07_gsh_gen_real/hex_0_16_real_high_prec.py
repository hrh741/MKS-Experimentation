import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [2, 0, 1],
                        [2, 1, 1],
                        [2, 2, 1],
                        [4, 0, 1],
                        [4, 1, 1],
                        [4, 2, 1],
                        [4, 3, 1],
                        [4, 4, 1],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 6, 1],
                        [6, 6, 2],
                        [7, 0, 1],
                        [7, 1, 1],
                        [7, 2, 1],
                        [7, 3, 1],
                        [7, 4, 1],
                        [7, 5, 1],
                        [7, 6, 1],
                        [7, 7, 1],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 8, 1],
                        [8, 8, 2],
                        [9, 0, 1],
                        [9, 1, 1],
                        [9, 2, 1],
                        [9, 3, 1],
                        [9, 4, 1],
                        [9, 5, 1],
                        [9, 6, 1],
                        [9, 7, 1],
                        [9, 8, 1],
                        [9, 9, 1],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 10, 1],
                        [10, 10, 2],
                        [11, 0, 1],
                        [11, 1, 1],
                        [11, 2, 1],
                        [11, 3, 1],
                        [11, 4, 1],
                        [11, 5, 1],
                        [11, 6, 1],
                        [11, 7, 1],
                        [11, 8, 1],
                        [11, 9, 1],
                        [11, 10, 1],
                        [11, 11, 1],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [13, 0, 1],
                        [13, 0, 2],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 13, 1],
                        [13, 13, 2],
                        [14, 0, 1],
                        [14, 0, 2],
                        [14, 0, 3],
                        [14, 1, 1],
                        [14, 1, 2],
                        [14, 1, 3],
                        [14, 2, 1],
                        [14, 2, 2],
                        [14, 2, 3],
                        [14, 3, 1],
                        [14, 3, 2],
                        [14, 3, 3],
                        [14, 4, 1],
                        [14, 4, 2],
                        [14, 4, 3],
                        [14, 5, 1],
                        [14, 5, 2],
                        [14, 5, 3],
                        [14, 6, 1],
                        [14, 6, 2],
                        [14, 6, 3],
                        [14, 7, 1],
                        [14, 7, 2],
                        [14, 7, 3],
                        [14, 8, 1],
                        [14, 8, 2],
                        [14, 8, 3],
                        [14, 9, 1],
                        [14, 9, 2],
                        [14, 9, 3],
                        [14, 10, 1],
                        [14, 10, 2],
                        [14, 10, 3],
                        [14, 11, 1],
                        [14, 11, 2],
                        [14, 11, 3],
                        [14, 12, 1],
                        [14, 12, 2],
                        [14, 12, 3],
                        [14, 13, 1],
                        [14, 13, 2],
                        [14, 13, 3],
                        [14, 14, 1],
                        [14, 14, 2],
                        [14, 14, 3],
                        [15, 0, 1],
                        [15, 0, 2],
                        [15, 1, 1],
                        [15, 1, 2],
                        [15, 2, 1],
                        [15, 2, 2],
                        [15, 3, 1],
                        [15, 3, 2],
                        [15, 4, 1],
                        [15, 4, 2],
                        [15, 5, 1],
                        [15, 5, 2],
                        [15, 6, 1],
                        [15, 6, 2],
                        [15, 7, 1],
                        [15, 7, 2],
                        [15, 8, 1],
                        [15, 8, 2],
                        [15, 9, 1],
                        [15, 9, 2],
                        [15, 10, 1],
                        [15, 10, 2],
                        [15, 11, 1],
                        [15, 11, 2],
                        [15, 12, 1],
                        [15, 12, 2],
                        [15, 13, 1],
                        [15, 13, 2],
                        [15, 14, 1],
                        [15, 14, 2],
                        [15, 15, 1],
                        [15, 15, 2],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 0, 3],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 1, 3],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 2, 3],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 3, 3],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 4, 3],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 5, 3],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 6, 3],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 7, 3],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 8, 3],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 9, 3],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 10, 3],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 11, 3],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 12, 3],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 13, 3],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 14, 3],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 15, 3],
                        [16, 16, 1],
                        [16, 16, 2],
                        [16, 16, 3]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t1 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 2:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t3 * t2 ** 2 * np.sin(phi1) * ((1 + t3) ** (-0.1e1 / 0.2e1)) * ((1 - t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t4 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t4 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 4:
            t5 = np.cos(phi)
            t6 = t5 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t6) * t6

        if Bindx == 5:
            t9 = np.cos(phi)
            t8 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t9 * t8 ** 2 * (7 * t9 ** 2 - 3) * np.sin(phi1) * ((1 + t9) ** (-0.1e1 / 0.2e1)) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            t10 = np.cos(phi)
            t11 = t10 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t11) * t11) * np.cos((2 * phi1))

        if Bindx == 7:
            t16 = np.sin(phi)
            t14 = t16 ** 2
            t13 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13 * t14 ** 2 * np.sin((3 * phi1)) * ((1 + t13) ** (-0.1e1 / 0.2e1)) * ((1 - t13) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t18) * t18)

        if Bindx == 9:
            t20 = np.cos(phi)
            t21 = t20 ** 2
            t22 = t21 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t22 - 1 + (t22 + 3) * t21)

        if Bindx == 10:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            t26 = t25 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t26 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t26 + 0.1365e4 / 0.16e2) * t25

        if Bindx == 11:
            t34 = np.cos(phi)
            t33 = t34 ** 2
            t40 = 1 + (-2 + t33) * t33
            t38 = t40 * t34
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.22e2) * np.sqrt((1 - t34)) * np.sqrt((1 + t34)) * ((t38 - t40) * np.sin((phi1 - 6 * phi2)) + (t38 + t40) * np.sin((phi1 + 6 * phi2)))

        if Bindx == 12:
            t42 = np.cos(phi)
            t43 = t42 ** 2
            t41 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t42 * t41 ** 2 * (5 + (-30 + 33 * t43) * t43) * np.sin(phi1) * ((1 + t42) ** (-0.1e1 / 0.2e1)) * ((1 - t42) ** (-0.1e1 / 0.2e1))

        if Bindx == 13:
            t52 = np.cos(phi)
            t51 = t52 ** 2
            t54 = t52 * t51
            t55 = t51 ** 2
            t59 = -2 * t52 * t55 - 2 * t52 + 4 * t54
            t58 = t54 ** 2 - t51 - t55 + 1
            t53 = 2 * phi1
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.55e2) * ((t58 + t59) * np.cos((-t53 + 6 * phi2)) + (t58 - t59) * np.cos((t53 + 6 * phi2)))

        if Bindx == 14:
            t60 = np.cos(phi)
            t61 = t60 ** 2
            t62 = t61 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t62 - 1 + (33 * t62 + 19) * t61) * np.cos((2 * phi1))

        if Bindx == 15:
            t70 = np.cos(phi)
            t69 = t70 ** 2
            t77 = 2 * t69
            t73 = t69 ** 2
            t76 = 1 + t77 - 3 * t73
            t75 = (t73 + t77 - 3) * t70
            t71 = 3 * phi1
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.55e2) * np.sqrt((1 - t70)) * np.sqrt((1 + t70)) * (-(t75 + t76) * np.sin((-t71 + 6 * phi2)) + (t75 - t76) * np.sin((t71 + 6 * phi2)))

        if Bindx == 16:
            t81 = np.sin(phi)
            t79 = t81 ** 2
            t78 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t78 * t79 ** 2 * (11 * t78 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t78) ** (-0.1e1 / 0.2e1)) * ((1 - t78) ** (-0.1e1 / 0.2e1))

        if Bindx == 17:
            t88 = np.cos(phi)
            t87 = t88 ** 2
            t90 = t87 ** 2
            t91 = t88 * t90
            t94 = 4 * t88 - 4 * t91
            t93 = t88 * t91 - 5 * t87 + 5 * t90 - 1
            t89 = 4 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.66e2) * ((t93 + t94) * np.cos((-t89 + 6 * phi2)) + (t93 - t94) * np.cos((t89 + 6 * phi2)))

        if Bindx == 18:
            t95 = np.cos(phi)
            t96 = t95 ** 2
            t97 = t96 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t97 - 1 + (11 * t97 + 13) * t96) * np.cos((4 * phi1))

        if Bindx == 19:
            t105 = np.cos(phi)
            t104 = t105 ** 2
            t108 = t104 ** 2
            t111 = -1 - 10 * t104 - 5 * t108
            t110 = (10 * t104 + t108 + 5) * t105
            t106 = 5 * phi1
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.3e1) * np.sqrt((1 + t105)) * np.sqrt((1 - t105)) * ((t110 - t111) * np.sin((t106 + 6 * phi2)) - (t110 + t111) * np.sin((-t106 + 6 * phi2)))

        if Bindx == 20:
            t116 = np.sin(phi)
            t113 = t116 ** 2
            t114 = t116 * t113
            t112 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t112 * t114 ** 2 * np.sin((5 * phi1)) * ((1 + t112) ** (-0.1e1 / 0.2e1)) * ((1 - t112) ** (-0.1e1 / 0.2e1))

        if Bindx == 21:
            t124 = np.cos(phi)
            t131 = -0.39e2 / 0.32e2 * t124
            t123 = t124 ** 2
            t125 = t124 * t123
            t126 = t123 ** 2
            t130 = -0.65e2 / 0.16e2 * t125 + t126 * t131 + t131
            t129 = 0.13e2 / 0.64e2 * t125 ** 2 + 0.13e2 / 0.64e2 + 0.195e3 / 0.64e2 * t126 + 0.195e3 / 0.64e2 * t123
            tfunc[..., c] = (t129 + t130) * np.cos((6 * phi1 - 6 * phi2)) + (t129 - t130) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 22:
            t132 = np.cos(phi)
            t133 = t132 ** 2
            t134 = t133 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t134 - 1 + (t134 + 3) * t133)

        if Bindx == 23:
            tfunc[..., c] = 0

        if Bindx == 24:
            t145 = np.cos(phi)
            t144 = t145 ** 2
            t146 = t145 * t144
            t147 = t144 ** 2
            t149 = t146 ** 2
            t153 = -18 * t146 + 6 * (3 * t147 - t149 + 1) * t145
            t152 = 10 * t144 + 22 * t149 - 1 + (-24 - 7 * t147) * t147
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.858e3) * ((-t152 + t153) * np.sin((phi1 - 6 * phi2)) + (t152 + t153) * np.sin((phi1 + 6 * phi2))) * ((1 + t145) ** (-0.1e1 / 0.2e1)) * ((1 - t145) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t162 = np.cos(phi)
            t161 = t162 ** 2
            t165 = t161 ** 2
            t164 = t162 * t161
            t167 = t164 ** 2
            t170 = 2 - 16 * t161 + 26 * t165 - 12 * t167
            t169 = -t164 + (11 * t165 - 7 * t167 - 3) * t162
            t163 = 2 * phi1
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.143e3) * ((-t169 + t170) * np.cos((-t163 + 6 * phi2)) + (t169 + t170) * np.cos((t163 + 6 * phi2)))

        if Bindx == 26:
            t180 = np.cos(phi)
            t179 = t180 ** 2
            t182 = t180 * t179
            t183 = t179 ** 2
            t185 = t182 ** 2
            t189 = 22 * t182 + (-38 * t183 + 18 * t185 - 2) * t180
            t188 = -18 * t179 + 2 * t185 + 3 + (20 - 7 * t183) * t183
            t181 = 3 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.286e3) * (-(t188 + t189) * np.sin((-t181 + 6 * phi2)) + (-t188 + t189) * np.sin((t181 + 6 * phi2))) * ((1 + t180) ** (-0.1e1 / 0.2e1)) * ((1 - t180) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t198 = np.cos(phi)
            t197 = t198 ** 2
            t201 = t197 ** 2
            t200 = t198 * t197
            t203 = t200 ** 2
            t206 = -4 + 8 * t197 + 20 * t201 - 24 * t203
            t205 = 35 * t200 + (-19 * t201 - 7 * t203 - 9) * t198
            t199 = 4 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.26e2) * ((-t205 + t206) * np.cos((-t199 + 6 * phi2)) + (t205 + t206) * np.cos((t199 + 6 * phi2)))

        if Bindx == 28:
            t216 = np.cos(phi)
            t215 = t216 ** 2
            t218 = t216 * t215
            t219 = t215 ** 2
            t221 = t218 ** 2
            t225 = -38 * t218 + (-10 * t219 + 30 * t221 + 18) * t216
            t224 = -10 * t215 - 38 * t221 - 5 + (60 - 7 * t219) * t219
            t217 = 5 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.26e2) * (-(t224 + t225) * np.sin((-t217 + 6 * phi2)) + (-t224 + t225) * np.sin((t217 + 6 * phi2))) * ((1 + t216) ** (-0.1e1 / 0.2e1)) * ((1 - t216) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t234 = np.cos(phi)
            t233 = t234 ** 2
            t236 = t233 ** 2
            t235 = t234 * t233
            t238 = t235 ** 2
            t241 = 0.375e3 / 0.32e2 * t236 + 0.135e3 / 0.16e2 * t238 - 0.45e2 / 0.4e1 * t233 - 0.45e2 / 0.32e2
            t240 = 0.225e3 / 0.64e2 * t235 + (-0.1035e4 / 0.64e2 * t236 - 0.105e3 / 0.64e2 * t238 + 0.435e3 / 0.64e2) * t234
            tfunc[..., c] = (t240 + t241) * np.cos((6 * phi1 - 6 * phi2)) + (-t240 + t241) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 30:
            t250 = np.cos(phi)
            t249 = t250 ** 2
            t259 = 14 * t249
            t252 = t250 * t249
            t254 = t252 ** 2
            t255 = t250 * t254
            t258 = -t250 * t255 - 14 * t254 + t259 + 1
            t257 = -6 * t250 + 6 * t255 + (t259 - 14) * t252
            t251 = 7 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.14e2) * (-(t257 + t258) * np.sin((-t251 + 6 * phi2)) + (t257 - t258) * np.sin((t251 + 6 * phi2))) * ((1 + t250) ** (-0.1e1 / 0.2e1)) * ((1 - t250) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t260 = np.cos(phi)
            t261 = t260 ** 2
            t262 = t261 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.429e3) * (-18 * t261 + 1 + (-46 * t261 + 48 + 15 * t262) * t262) * np.cos((6 * phi2))

        if Bindx == 32:
            t265 = np.cos(phi)
            t266 = t265 ** 2
            t267 = t266 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t266 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t266 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t267) * t267

        if Bindx == 33:
            t280 = np.cos(phi)
            t279 = t280 ** 2
            t282 = t279 ** 2
            t281 = t280 * t279
            t284 = t281 ** 2
            t286 = t282 ** 2
            t289 = -1 + 18 * t279 - 48 * t282 + 46 * t284 - 15 * t286
            t288 = -38 * t281 + (78 * t282 - 66 * t284 + 20 * t286 + 6) * t280
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.858e3) * ((t288 + t289) * np.sin((phi1 - 6 * phi2)) + (t288 - t289) * np.sin((phi1 + 6 * phi2))) * ((1 + t280) ** (-0.1e1 / 0.2e1)) * ((1 - t280) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t291 = np.cos(phi)
            t292 = t291 ** 2
            t293 = t292 ** 2
            t290 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t291 * t290 ** 2 * (-1001 * t293 - 35 + (715 * t293 + 385) * t292) * np.sin(phi1) * ((1 + t291) ** (-0.1e1 / 0.2e1)) * ((1 - t291) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t303 = np.cos(phi)
            t302 = t303 ** 2
            t305 = t303 * t302
            t306 = t302 ** 2
            t308 = t305 ** 2
            t311 = 2 * t305 + 2 * (-2 * t306 + t308) * t303
            t310 = 1 - 5 * t302 + 7 * t306 - 3 * t308
            t304 = 2 * phi1
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15015e5) * t303 * ((t310 + t311) * np.cos((-t304 + 6 * phi2)) + (-t310 + t311) * np.cos((t304 + 6 * phi2)))

        if Bindx == 36:
            t312 = np.cos(phi)
            t313 = t312 ** 2
            t314 = t313 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t313 + 1 + (-286 * t313 + 176 + 143 * t314) * t314) * np.cos((2 * phi1))

        if Bindx == 37:
            t327 = np.cos(phi)
            t326 = t327 ** 2
            t330 = t326 ** 2
            t329 = t327 * t326
            t332 = t329 ** 2
            t334 = t330 ** 2
            t337 = -1 + 14 * t326 - 52 * t330 + 66 * t332 - 27 * t334
            t336 = 22 * t329 - 14 * (t330 + t332) * t327 + (12 * t334 - 6) * t327
            t328 = 3 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.910e3) * (-(t336 + t337) * np.sin((-t328 + 6 * phi2)) + (t336 - t337) * np.sin((t328 + 6 * phi2))) * ((1 + t327) ** (-0.1e1 / 0.2e1)) * ((1 - t327) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t344 = np.sin(phi)
            t342 = t344 ** 2
            t339 = np.cos(phi)
            t340 = t339 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t339 * t342 ** 2 * (3 + (-26 + 39 * t340) * t340) * np.sin((3 * phi1)) * ((1 + t339) ** (-0.1e1 / 0.2e1)) * ((1 - t339) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t354 = np.cos(phi)
            t353 = t354 ** 2
            t356 = t354 * t353
            t357 = t353 ** 2
            t359 = t356 ** 2
            t363 = -5 * t356 + (21 * t357 - 15 * t359 - 1) * t354
            t362 = 10 * t353 + 6 * t359 - 1 + (-20 + 5 * t357) * t357
            t355 = 4 * phi1
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.546e3) * ((t362 + t363) * np.cos((-t355 + 6 * phi2)) + (t362 - t363) * np.cos((t355 + 6 * phi2)))

        if Bindx == 40:
            t364 = np.cos(phi)
            t365 = t364 ** 2
            t366 = t365 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t365 + 1 + (-156 * t365 + 118 + 65 * t366) * t366) * np.cos((4 * phi1))

        if Bindx == 41:
            t379 = np.cos(phi)
            t378 = t379 ** 2
            t382 = t378 ** 2
            t381 = t379 * t378
            t384 = t381 ** 2
            t386 = t382 ** 2
            t389 = 7 - 42 * t378 + 20 * t382 + 90 * t384 - 75 * t386
            t388 = 90 * t381 + (-162 * t382 + 62 * t384 + 20 * t386 - 10) * t379
            t380 = 5 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.42e2) * (-(t388 + t389) * np.sin((-t380 + 6 * phi2)) + (t388 - t389) * np.sin((t380 + 6 * phi2))) * ((1 + t379) ** (-0.1e1 / 0.2e1)) * ((1 - t379) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t394 = np.sin(phi)
            t391 = t394 ** 2
            t392 = t394 * t391
            t390 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t390 * t392 ** 2 * (5 * t390 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t390) ** (-0.1e1 / 0.2e1)) * ((1 - t390) ** (-0.1e1 / 0.2e1))

        if Bindx == 43:
            t403 = np.cos(phi)
            t404 = t403 ** 2
            t406 = t404 ** 2
            t405 = t403 * t404
            t408 = t405 ** 2
            t412 = 0.833e3 / 0.16e2 * t408 + 0.17e2 / 0.4e1 + (-0.1785e4 / 0.32e2 + 0.255e3 / 0.32e2 * t406) * t406
            t411 = 0.2975e4 / 0.64e2 * t405 + (-0.2295e4 / 0.64e2 * t408 - 0.357e3 / 0.64e2 * t406 - 0.867e3 / 0.64e2) * t403
            tfunc[..., c] = (t411 + t412) * np.cos((6 * phi1 - 6 * phi2)) + (-t411 + t412) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 44:
            t413 = np.cos(phi)
            t414 = t413 ** 2
            t415 = t414 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t414 + 1 + (-46 * t414 + 48 + 15 * t415) * t415) * np.cos((6 * phi1))

        if Bindx == 45:
            t428 = np.cos(phi)
            t427 = t428 ** 2
            t431 = t427 ** 2
            t430 = t428 * t427
            t433 = t430 ** 2
            t435 = t431 ** 2
            t438 = -3 - 18 * t427 + 56 * t431 - 14 * t433 - 21 * t435
            t437 = -14 * t430 + (-42 * t431 + 38 * t433 + 4 * t435 + 14) * t428
            t429 = 7 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.30e2) * (-(t437 + t438) * np.sin((-t429 + 6 * phi2)) + (t437 - t438) * np.sin((t429 + 6 * phi2))) * ((1 + t428) ** (-0.1e1 / 0.2e1)) * ((1 - t428) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t443 = np.sin(phi)
            t440 = t443 ** 2
            t441 = t440 ** 2
            t439 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t439 * t441 ** 2 * np.sin((7 * phi1)) * ((1 + t439) ** (-0.1e1 / 0.2e1)) * ((1 - t439) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t452 = np.cos(phi)
            t451 = t452 ** 2
            t461 = -14 * t451
            t454 = t452 * t451
            t456 = t454 ** 2
            t457 = t452 * t456
            t460 = t452 * t457 + 14 * t456 + t461 - 1
            t459 = 6 * t452 - 6 * t457 + (t461 + 14) * t454
            t453 = 8 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.30e2) * ((t459 + t460) * np.cos((-t453 + 6 * phi2)) + (-t459 + t460) * np.cos((t453 + 6 * phi2)))

        if Bindx == 48:
            t462 = np.cos(phi)
            t463 = t462 ** 2
            t467 = -4 * t463
            t464 = t463 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t467 + 1 + (t467 + 6 + t464) * t464)

        if Bindx == 49:
            tfunc[..., c] = 0

        if Bindx == 50:
            t479 = np.cos(phi)
            t478 = t479 ** 2
            t480 = t479 * t478
            t481 = t478 ** 2
            t482 = t479 * t481
            t483 = t480 ** 2
            t485 = t481 ** 2
            t489 = -52 * t480 + 120 * t482 + (-108 * t483 + 34 * t485 + 6) * t479
            t488 = -51 * t482 ** 2 - 27 * t478 + 126 * t481 - 226 * t483 + 177 * t485 + 1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.858e3) * ((t488 + t489) * np.sin((phi1 - 6 * phi2)) + (-t488 + t489) * np.sin((phi1 + 6 * phi2))) * ((1 + t479) ** (-0.1e1 / 0.2e1)) * ((1 - t479) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t500 = np.cos(phi)
            t499 = t500 ** 2
            t503 = t499 ** 2
            t502 = t500 * t499
            t505 = t502 ** 2
            t507 = t503 ** 2
            t510 = -3 + 75 * t499 - 277 * t503 + 341 * t505 - 136 * t507
            t509 = 44 * t502 + (-178 * t503 + 240 * t505 - 102 * t507 - 4) * t500
            t501 = 2 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.39e2) * ((-t509 + t510) * np.cos((-t501 + 6 * phi2)) + (t509 + t510) * np.cos((t501 + 6 * phi2)))

        if Bindx == 52:
            t522 = np.cos(phi)
            t521 = t522 ** 2
            t524 = t522 * t521
            t525 = t521 ** 2
            t526 = t522 * t525
            t527 = t524 ** 2
            t529 = t525 ** 2
            t533 = -98 * t524 + 262 * t526 + (-278 * t527 + 102 * t529 + 12) * t522
            t532 = -51 * t526 ** 2 + 23 * t521 - 52 * t525 - 12 * t527 + 93 * t529 - 1
            t523 = 3 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.91e2) * (-(t532 + t533) * np.sin((-t523 + 6 * phi2)) + (-t532 + t533) * np.sin((t523 + 6 * phi2))) * ((1 + t522) ** (-0.1e1 / 0.2e1)) * ((1 - t522) ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t544 = np.cos(phi)
            t543 = t544 ** 2
            t547 = t543 ** 2
            t546 = t544 * t543
            t549 = t546 ** 2
            t551 = t547 ** 2
            t554 = -1 + 19 * t543 - 131 * t547 + 249 * t549 - 136 * t551
            t553 = -106 * t546 + (144 * t547 - 6 * t549 - 51 * t551 + 19) * t544
            t545 = 4 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.42e2) * ((-t553 + t554) * np.cos((-t545 + 6 * phi2)) + (t553 + t554) * np.cos((t545 + 6 * phi2)))

        if Bindx == 54:
            t566 = np.cos(phi)
            t565 = t566 ** 2
            t568 = t566 * t565
            t569 = t565 ** 2
            t570 = t566 * t569
            t571 = t568 ** 2
            t573 = t569 ** 2
            t577 = 30 * t568 + 126 * t570 + (-310 * t571 + 170 * t573 - 16) * t566
            t576 = -51 * t570 ** 2 + 75 * t565 - 280 * t569 + 336 * t571 - 75 * t573 - 5
            t567 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * (-(t576 + t577) * np.sin((-t567 + 6 * phi2)) + (-t576 + t577) * np.sin((t567 + 6 * phi2))) * ((1 + t566) ** (-0.1e1 / 0.2e1)) * ((1 - t566) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t588 = np.cos(phi)
            t587 = t588 ** 2
            t590 = t587 ** 2
            t589 = t588 * t587
            t592 = t589 ** 2
            t594 = t590 ** 2
            t597 = 0.3933e4 / 0.64e2 * t587 - 0.5187e4 / 0.64e2 * t590 - 0.5453e4 / 0.64e2 * t592 + 0.969e3 / 0.8e1 * t594 - 0.437e3 / 0.64e2
            t596 = -0.1463e4 / 0.16e2 * t589 + (0.7581e4 / 0.32e2 * t590 - 0.513e3 / 0.4e1 * t592 - 0.969e3 / 0.32e2 * t594 + 0.57e2 / 0.16e2) * t588
            tfunc[..., c] = (t596 + t597) * np.cos((6 * phi1 - 6 * phi2)) + (-t596 + t597) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 56:
            t609 = np.cos(phi)
            t608 = t609 ** 2
            t611 = t609 * t608
            t612 = t608 ** 2
            t613 = t609 * t612
            t614 = t611 ** 2
            t616 = t612 ** 2
            t620 = 352 * t611 - 420 * t613 + (-112 * t614 + 238 * t616 - 58) * t609
            t619 = -51 * t613 ** 2 - 63 * t608 - 238 * t612 + 658 * t614 - 327 * t616 + 21
            t610 = 7 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.3e1) * (-(t619 + t620) * np.sin((-t610 + 6 * phi2)) + (-t619 + t620) * np.sin((t610 + 6 * phi2))) * ((1 + t609) ** (-0.1e1 / 0.2e1)) * ((1 - t609) ** (-0.1e1 / 0.2e1))

        if Bindx == 57:
            t631 = np.cos(phi)
            t630 = t631 ** 2
            t634 = t630 ** 2
            t633 = t631 * t630
            t636 = t633 ** 2
            t638 = t634 ** 2
            t641 = -2 - 10 * t630 + 42 * t634 - 14 * t636 - 16 * t638
            t640 = 14 * t633 + (28 * t634 - 30 * t636 - 3 * t638 - 9) * t631
            t632 = 8 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.102e3) * ((-t640 + t641) * np.cos((-t632 + 6 * phi2)) + (t640 + t641) * np.cos((t632 + 6 * phi2)))

        if Bindx == 58:
            t650 = np.cos(phi)
            t649 = t650 ** 2
            t659 = 14 * t649
            t652 = t650 * t649
            t654 = t652 ** 2
            t655 = t650 * t654
            t658 = -t650 * t655 - 14 * t654 + t659 + 1
            t657 = -6 * t650 + 6 * t655 + (t659 - 14) * t652
            t651 = 9 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.51e2) * np.sqrt((1 - t650)) * np.sqrt((1 + t650)) * (-(t657 + t658) * np.sin((-t651 + 6 * phi2)) + (t657 - t658) * np.sin((t651 + 6 * phi2)))

        if Bindx == 59:
            t660 = np.cos(phi)
            t661 = t660 ** 2
            t662 = t661 ** 2
            t664 = t662 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2145e4) * (-638 * t662 - 1071 * t664 - 3 + (1278 * t662 + 323 * t664 + 111) * t661) * np.cos((6 * phi2))

        if Bindx == 60:
            t666 = np.cos(phi)
            t667 = t666 ** 2
            t668 = t667 ** 2
            t670 = t668 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t670 - 0.315315e6 / 0.128e3 * t668 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t670 + 0.945945e6 / 0.128e3 * t668 + 0.72765e5 / 0.256e3) * t667

        if Bindx == 61:
            t684 = np.cos(phi)
            t683 = t684 ** 2
            t686 = t683 ** 2
            t685 = t684 * t683
            t688 = t685 ** 2
            t690 = t686 ** 2
            t687 = t684 * t686
            t692 = t687 ** 2
            t695 = 9 - 333 * t683 + 1914 * t686 - 3834 * t688 + 3213 * t690 - 969 * t692
            t694 = 1387 * t685 - 5110 * t687 + (8118 * t688 - 5899 * t690 + 1615 * t692 - 111) * t684
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.78e2) * ((t694 + t695) * np.sin((phi1 - 6 * phi2)) + (t694 - t695) * np.sin((phi1 + 6 * phi2))) * ((1 + t684) ** (-0.1e1 / 0.2e1)) * ((1 - t684) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t697 = np.cos(phi)
            t698 = t697 ** 2
            t699 = t698 ** 2
            t696 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t697 * t696 ** 2 * (-1092 * t698 + 63 + (-7956 * t698 + 4914 + 4199 * t699) * t699) * np.sin(phi1) * ((1 + t697) ** (-0.1e1 / 0.2e1)) * ((1 - t697) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t713 = np.cos(phi)
            t712 = t713 ** 2
            t715 = t713 * t712
            t716 = t712 ** 2
            t717 = t713 * t716
            t718 = t715 ** 2
            t720 = t716 ** 2
            t724 = 4888 * t715 - 14276 * t717 + (15640 * t718 - 5814 * t720 - 438) * t713
            t723 = 4845 * t717 ** 2 + 665 * t712 - 4486 * t716 + 11898 * t718 - 12903 * t720 - 19
            t714 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.26e2) * ((t723 + t724) * np.cos((-t714 + 6 * phi2)) + (t723 - t724) * np.cos((t714 + 6 * phi2)))

        if Bindx == 64:
            t725 = np.cos(phi)
            t726 = t725 ** 2
            t727 = t726 ** 2
            t729 = t727 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t727 - 10387 * t729 - 7 + (8918 * t727 + 4199 * t729 + 371) * t726) * np.cos((2 * phi1))

        if Bindx == 65:
            t743 = np.cos(phi)
            t742 = t743 ** 2
            t746 = t742 ** 2
            t745 = t743 * t742
            t748 = t745 ** 2
            t750 = t746 ** 2
            t747 = t743 * t746
            t752 = t747 ** 2
            t755 = 69 - 2277 * t742 + 12898 * t746 - 27962 * t748 + 25993 * t750 - 8721 * t752
            t754 = -1423 * t745 + 662 * t747 + (7122 * t748 - 11373 * t750 + 4845 * t752 + 167) * t743
            t744 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.256e3 * (-(t754 + t755) * np.sin((-t744 + 6 * phi2)) + (t754 - t755) * np.sin((t744 + 6 * phi2))) * ((1 + t743) ** (-0.1e1 / 0.2e1)) * ((1 - t743) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t762 = np.sin(phi)
            t760 = t762 ** 2
            t756 = np.cos(phi)
            t757 = t756 ** 2
            t758 = t757 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t756 * t760 ** 2 * (-357 * t758 - 7 + (323 * t758 + 105) * t757) * np.sin((3 * phi1)) * ((1 + t756) ** (-0.1e1 / 0.2e1)) * ((1 - t756) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t774 = np.cos(phi)
            t773 = t774 ** 2
            t776 = t774 * t773
            t777 = t773 ** 2
            t778 = t774 * t777
            t779 = t776 ** 2
            t781 = t777 ** 2
            t785 = 5032 * t776 - 18368 * t778 + (25432 * t779 - 11628 * t781 - 468) * t774
            t784 = 4845 * t778 ** 2 - 2407 * t773 + 8918 * t777 - 8022 * t779 - 3417 * t781 + 83
            t775 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * ((t784 + t785) * np.cos((-t775 + 6 * phi2)) + (t784 - t785) * np.cos((t775 + 6 * phi2)))

        if Bindx == 68:
            t786 = np.cos(phi)
            t787 = t786 ** 2
            t788 = t787 ** 2
            t790 = t788 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t788 - 901 * t790 - 1 + (878 * t788 + 323 * t790 + 47) * t787) * np.cos((4 * phi1))

        if Bindx == 69:
            t804 = np.cos(phi)
            t803 = t804 ** 2
            t807 = t803 ** 2
            t806 = t804 * t803
            t809 = t806 ** 2
            t811 = t807 ** 2
            t808 = t804 * t807
            t813 = t808 ** 2
            t816 = -1 + 25 * t803 + 1110 * t807 - 4942 * t809 + 6715 * t811 - 2907 * t813
            t815 = -2035 * t806 + 5278 * t808 + (-4710 * t809 + 255 * t811 + 969 * t813 + 243) * t804
            t805 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.5e1) * (-(t815 + t816) * np.sin((-t805 + 6 * phi2)) + (t815 - t816) * np.sin((t805 + 6 * phi2))) * ((1 + t804) ** (-0.1e1 / 0.2e1)) * ((1 - t804) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t823 = np.sin(phi)
            t820 = t823 ** 2
            t821 = t823 * t820
            t817 = np.cos(phi)
            t818 = t817 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t817 * t821 ** 2 * (15 + (-170 + 323 * t818) * t818) * np.sin((5 * phi1)) * ((1 + t817) ** (-0.1e1 / 0.2e1)) * ((1 - t817) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t835 = np.cos(phi)
            t834 = t835 ** 2
            t836 = t835 * t834
            t837 = t834 ** 2
            t838 = t835 * t837
            t839 = t836 ** 2
            t841 = t837 ** 2
            t845 = -0.16191e5 / 0.128e3 * t836 - 0.10143e5 / 0.256e3 * t838 + (0.61761e5 / 0.128e3 * t839 - 0.183141e6 / 0.512e3 * t841 + 0.15771e5 / 0.512e3) * t835
            t844 = 0.101745e6 / 0.1024e4 * t838 ** 2 - 0.94563e5 / 0.1024e4 * t834 + 0.235641e6 / 0.512e3 * t837 - 0.366471e6 / 0.512e3 * t839 + 0.260253e6 / 0.1024e4 * t841 + 0.4977e4 / 0.1024e4
            tfunc[..., c] = (t844 + t845) * np.cos((6 * phi1 - 6 * phi2)) + (t844 - t845) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 72:
            t846 = np.cos(phi)
            t847 = t846 ** 2
            t848 = t847 ** 2
            t850 = t848 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t848 - 1071 * t850 - 3 + (1278 * t848 + 323 * t850 + 111) * t847) * np.cos((6 * phi1))

        if Bindx == 73:
            t864 = np.cos(phi)
            t863 = t864 ** 2
            t867 = t863 ** 2
            t866 = t864 * t863
            t869 = t866 ** 2
            t871 = t867 ** 2
            t868 = t864 * t867
            t873 = t868 ** 2
            t876 = -43 + 559 * t863 - 1566 * t867 + 686 * t869 + 1561 * t871 - 1197 * t873
            t875 = -511 * t866 + 2590 * t868 + (-3534 * t869 + 1191 * t871 + 285 * t873 - 21) * t864
            t865 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * (-(t875 + t876) * np.sin((-t865 + 6 * phi2)) + (t875 - t876) * np.sin((t865 + 6 * phi2))) * ((1 + t864) ** (-0.1e1 / 0.2e1)) * ((1 - t864) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t881 = np.sin(phi)
            t878 = t881 ** 2
            t879 = t878 ** 2
            t877 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t877 * t879 ** 2 * (19 * t877 ** 2 - 3) * np.sin((7 * phi1)) * ((1 + t877) ** (-0.1e1 / 0.2e1)) * ((1 - t877) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t893 = np.cos(phi)
            t892 = t893 ** 2
            t895 = t893 * t892
            t896 = t892 ** 2
            t897 = t893 * t896
            t898 = t895 ** 2
            t900 = t896 ** 2
            t904 = -592 * t895 + 896 * t897 + (80 * t898 - 456 * t900 + 72) * t893
            t903 = 95 * t897 ** 2 + 155 * t892 + 266 * t896 - 1162 * t898 + 677 * t900 - 31
            t894 = 8 * phi1
            tfunc[..., c] = -0.21e2 / 0.1024e4 * np.sqrt(0.102e3) * ((t903 + t904) * np.cos((-t894 + 6 * phi2)) + (t903 - t904) * np.cos((t894 + 6 * phi2)))

        if Bindx == 76:
            t905 = np.cos(phi)
            t906 = t905 ** 2
            t907 = t906 ** 2
            t909 = t907 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t907 - 77 * t909 - 1 + (118 * t907 + 19 * t909 + 23) * t906) * np.cos((8 * phi1))

        if Bindx == 77:
            t923 = np.cos(phi)
            t922 = t923 ** 2
            t926 = t922 ** 2
            t925 = t923 * t922
            t928 = t925 ** 2
            t930 = t926 ** 2
            t927 = t923 * t926
            t932 = t927 ** 2
            t935 = 3 + 9 * t922 - 82 * t926 + 98 * t928 - t930 - 27 * t932
            t934 = 41 * t925 + 14 * t927 + (-94 * t928 + 47 * t930 + 5 * t932 - 13) * t923
            t924 = 9 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.969e3) * (-(t934 + t935) * np.sin((-t924 + 6 * phi2)) + (t934 - t935) * np.sin((t924 + 6 * phi2))) * ((1 + t923) ** (-0.1e1 / 0.2e1)) * ((1 - t923) ** (-0.1e1 / 0.2e1))

        if Bindx == 78:
            t941 = np.sin(phi)
            t937 = t941 ** 2
            t939 = t941 * t937 ** 2
            t936 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t936 * t939 ** 2 * np.sin((9 * phi1)) * ((1 + t936) ** (-0.1e1 / 0.2e1)) * ((1 - t936) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t953 = np.cos(phi)
            t965 = -6 * t953
            t952 = t953 ** 2
            t955 = t953 * t952
            t956 = t952 ** 2
            t957 = t953 * t956
            t958 = t955 ** 2
            t960 = t956 ** 2
            t964 = -8 * t953 * t958 + t960 * t965 - 8 * t955 + 28 * t957 + t965
            t963 = t957 ** 2 + 13 * t952 - 14 * t956 - 14 * t958 + 13 * t960 + 1
            t954 = 10 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.4845e4) * ((t963 + t964) * np.cos((-t954 + 6 * phi2)) + (t963 - t964) * np.cos((t954 + 6 * phi2)))

        if Bindx == 80:
            t966 = np.cos(phi)
            t967 = t966 ** 2
            t968 = t967 ** 2
            t970 = t968 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t968 - 5 * t970 - 1 + (10 * t968 + t970 + 5) * t967)

        if Bindx == 81:
            tfunc[..., c] = 0

        if Bindx == 82:
            t985 = np.cos(phi)
            t984 = t985 ** 2
            t986 = t985 * t984
            t987 = t984 ** 2
            t988 = t985 * t987
            t989 = t986 ** 2
            t991 = t987 ** 2
            t993 = t988 ** 2
            t997 = 470 * t986 - 2028 * t988 + (3564 * t989 - 2774 * t991 + 798 * t993 - 30) * t985
            t996 = 240 * t984 - 1925 * t987 - 8319 * t991 + 5624 * t993 - 5 + (5848 - 1463 * t989) * t989
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.221e3) * ((t996 + t997) * np.sin((phi1 - 6 * phi2)) + (-t996 + t997) * np.sin((phi1 + 6 * phi2))) * ((1 + t985) ** (-0.1e1 / 0.2e1)) * ((1 - t985) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t1010 = np.cos(phi)
            t1009 = t1010 ** 2
            t1013 = t1009 ** 2
            t1012 = t1010 * t1009
            t1015 = t1012 ** 2
            t1017 = t1013 ** 2
            t1014 = t1010 * t1013
            t1019 = t1014 ** 2
            t1022 = 6 - 276 * t1009 + 1940 * t1013 - 4672 * t1015 + 4598 * t1017 - 1596 * t1019
            t1021 = -459 * t1012 + 2218 * t1014 + (-4638 * t1015 + 4313 * t1017 - 1463 * t1019 + 29) * t1010
            t1011 = 2 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.170e3) * ((-t1021 + t1022) * np.cos((-t1011 + 6 * phi2)) + (t1021 + t1022) * np.cos((t1011 + 6 * phi2)))

        if Bindx == 84:
            t1036 = np.cos(phi)
            t1035 = t1036 ** 2
            t1038 = t1036 * t1035
            t1039 = t1035 ** 2
            t1040 = t1036 * t1039
            t1041 = t1038 ** 2
            t1043 = t1039 ** 2
            t1045 = t1040 ** 2
            t1049 = -1502 * t1038 + 6460 * t1040 + (-11900 * t1041 + 9918 * t1043 - 3078 * t1045 + 102) * t1036
            t1048 = -44 * t1035 + 13 * t1039 - 4917 * t1043 + 5244 * t1045 + 1 + (1584 - 1881 * t1041) * t1041
            t1037 = 3 * phi1
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.595e3) * (-(-t1048 + t1049) * np.sin((-t1037 + 6 * phi2)) + (t1048 + t1049) * np.sin((t1037 + 6 * phi2))) * ((1 + t1036) ** (-0.1e1 / 0.2e1)) * ((1 - t1036) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t1062 = np.cos(phi)
            t1061 = t1062 ** 2
            t1065 = t1061 ** 2
            t1064 = t1062 * t1061
            t1067 = t1064 ** 2
            t1069 = t1065 ** 2
            t1066 = t1062 * t1065
            t1071 = t1066 ** 2
            t1074 = -4 + 160 * t1061 - 1120 * t1065 + 3016 * t1067 - 3420 * t1069 + 1368 * t1071
            t1073 = 345 * t1064 - 874 * t1066 + (330 * t1067 + 855 * t1069 - 627 * t1071 - 29) * t1062
            t1063 = 4 * phi1
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.714e3) * ((t1073 + t1074) * np.cos((-t1063 + 6 * phi2)) + (-t1073 + t1074) * np.cos((t1063 + 6 * phi2)))

        if Bindx == 86:
            t1088 = np.cos(phi)
            t1087 = t1088 ** 2
            t1090 = t1088 * t1087
            t1091 = t1087 ** 2
            t1092 = t1088 * t1091
            t1093 = t1090 ** 2
            t1095 = t1091 ** 2
            t1097 = t1092 ** 2
            t1101 = 2090 * t1090 - 12852 * t1092 + (31412 * t1093 - 32490 * t1095 + 11970 * t1097 - 130) * t1088
            t1100 = -1908 * t1087 + 10745 * t1091 + 13815 * t1095 + 2964 * t1097 + 53 + (-21280 - 4389 * t1093) * t1093
            t1089 = 5 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.102e3) * (-(t1100 + t1101) * np.sin((-t1089 + 6 * phi2)) + (-t1100 + t1101) * np.sin((t1089 + 6 * phi2))) * ((1 + t1088) ** (-0.1e1 / 0.2e1)) * ((1 - t1088) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t1114 = np.cos(phi)
            t1113 = t1114 ** 2
            t1116 = t1113 ** 2
            t1115 = t1114 * t1113
            t1118 = t1115 ** 2
            t1120 = t1116 ** 2
            t1117 = t1114 * t1116
            t1122 = t1117 ** 2
            t1125 = -0.16215e5 / 0.256e3 * t1113 + 0.2415e4 / 0.256e3 * t1116 + 0.28819e5 / 0.32e2 * t1118 - 0.924255e6 / 0.512e3 * t1120 + 0.247779e6 / 0.256e3 * t1122 + 0.1081e4 / 0.512e3
            t1124 = 0.501515e6 / 0.1024e4 * t1115 - 0.803229e6 / 0.512e3 * t1117 + (0.915975e6 / 0.512e3 * t1118 - 0.386745e6 / 0.1024e4 * t1120 - 0.302841e6 / 0.1024e4 * t1122 - 0.49197e5 / 0.1024e4) * t1114
            tfunc[..., c] = (t1124 + t1125) * np.cos((6 * phi1 - 6 * phi2)) + (-t1124 + t1125) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 88:
            t1139 = np.cos(phi)
            t1138 = t1139 ** 2
            t1141 = t1139 * t1138
            t1142 = t1138 ** 2
            t1143 = t1139 * t1142
            t1144 = t1141 ** 2
            t1146 = t1142 ** 2
            t1148 = t1143 ** 2
            t1152 = 2694 * t1141 - 3948 * t1143 + (-3668 * t1144 + 10906 * t1146 - 5586 * t1148 - 398) * t1139
            t1151 = -840 * t1138 + 6251 * t1142 + 15849 * t1146 - 3648 * t1148 + 35 + (-16184 - 1463 * t1144) * t1144
            t1140 = 7 * phi1
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.10e2) * (-(-t1151 + t1152) * np.sin((-t1140 + 6 * phi2)) + (t1151 + t1152) * np.sin((t1140 + 6 * phi2))) * ((1 + t1139) ** (-0.1e1 / 0.2e1)) * ((1 - t1139) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t1165 = np.cos(phi)
            t1164 = t1165 ** 2
            t1168 = t1164 ** 2
            t1167 = t1165 * t1164
            t1170 = t1167 ** 2
            t1172 = t1168 ** 2
            t1169 = t1165 * t1168
            t1174 = t1169 ** 2
            t1177 = -8 + 128 * t1164 - 448 * t1168 + 336 * t1170 + 328 * t1172 - 336 * t1174
            t1176 = 63 * t1167 - 574 * t1169 + (958 * t1170 - 383 * t1172 - 77 * t1174 + 13) * t1165
            t1166 = 8 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.190e3) * ((-t1176 + t1177) * np.cos((-t1166 + 6 * phi2)) + (t1176 + t1177) * np.cos((t1166 + 6 * phi2)))

        if Bindx == 90:
            t1191 = np.cos(phi)
            t1190 = t1191 ** 2
            t1193 = t1191 * t1190
            t1194 = t1190 ** 2
            t1195 = t1191 * t1194
            t1196 = t1193 ** 2
            t1198 = t1194 ** 2
            t1200 = t1195 ** 2
            t1204 = -1402 * t1193 + 3668 * t1195 + (-2452 * t1196 - 1062 * t1198 + 1134 * t1200 + 114) * t1191
            t1203 = 488 * t1190 - 133 * t1194 + 4457 * t1198 - 1552 * t1200 - 61 + (-2968 - 231 * t1196) * t1196
            t1192 = 9 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1203 + t1204) * np.sin((-t1192 + 6 * phi2)) + (-t1203 + t1204) * np.sin((t1192 + 6 * phi2))) * ((1 + t1191) ** (-0.1e1 / 0.2e1)) * ((1 - t1191) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t1217 = np.cos(phi)
            t1216 = t1217 ** 2
            t1220 = t1216 ** 2
            t1219 = t1217 * t1216
            t1222 = t1219 ** 2
            t1224 = t1220 ** 2
            t1221 = t1217 * t1220
            t1226 = t1221 ** 2
            t1229 = 6 + 12 * t1216 - 172 * t1220 + 224 * t1222 - 10 * t1224 - 60 * t1226
            t1228 = -95 * t1219 - 14 * t1221 + (202 * t1222 - 107 * t1224 - 11 * t1226 + 25) * t1217
            t1218 = 10 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.133e3) * ((-t1228 + t1229) * np.cos((-t1218 + 6 * phi2)) + (t1228 + t1229) * np.cos((t1218 + 6 * phi2)))

        if Bindx == 92:
            t1241 = np.cos(phi)
            t1253 = 6 * t1241
            t1240 = t1241 ** 2
            t1243 = t1241 * t1240
            t1244 = t1240 ** 2
            t1245 = t1241 * t1244
            t1246 = t1243 ** 2
            t1248 = t1244 ** 2
            t1252 = 8 * t1241 * t1246 + t1248 * t1253 + 8 * t1243 - 28 * t1245 + t1253
            t1251 = -t1245 ** 2 - 13 * t1240 + 14 * t1244 + 14 * t1246 - 13 * t1248 - 1
            t1242 = 11 * phi1
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.2926e4) * np.sqrt((1 - t1241)) * np.sqrt((1 + t1241)) * (-(t1251 + t1252) * np.sin((-t1242 + 6 * phi2)) + (-t1251 + t1252) * np.sin((t1242 + 6 * phi2)))

        if Bindx == 93:
            t1254 = np.cos(phi)
            t1255 = t1254 ** 2
            t1261 = -6 * t1255
            t1256 = t1255 ** 2
            t1257 = t1255 * t1256
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t1261 + 1 + (-20 + t1257) * t1257 + (15 + (t1261 + 15) * t1256) * t1256)

        if Bindx == 94:
            t1262 = np.cos(phi)
            t1263 = t1262 ** 2
            t1264 = t1263 ** 2
            t1266 = t1264 ** 2
            t1265 = t1263 * t1264
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2431e4) * (2865 * t1264 + 15447 * t1266 + 5 + (-9904 + 3059 * t1265) * t1265 + (-11172 * t1266 - 300) * t1263) * np.cos((6 * phi2))

        if Bindx == 95:
            t1269 = np.cos(phi)
            t1270 = t1269 ** 2
            t1271 = t1270 ** 2
            t1273 = t1271 ** 2
            t1272 = t1270 * t1271
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t1273 + 0.5630625e7 / 0.1024e4 * t1271 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t1272) * t1272 + (-0.24249225e8 / 0.512e3 * t1273 - 0.225225e6 / 0.512e3) * t1270

        if Bindx == 96:
            t1288 = np.cos(phi)
            t1287 = t1288 ** 2
            t1289 = t1288 * t1287
            t1290 = t1287 ** 2
            t1291 = t1288 * t1290
            t1300 = 10 * t1289 ** 2 - 5 * t1290 ** 2 + t1291 ** 2 - 1
            t1299 = -5 * t1287 + 10 * t1290 - t1300
            t1298 = t1288 * t1300 + 5 * t1289 - 10 * t1291
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.156009e6) * np.sqrt((1 - t1288)) * np.sqrt((1 + t1288)) * ((t1298 + t1299) * np.sin((phi1 - 12 * phi2)) + (t1298 - t1299) * np.sin((phi1 + 12 * phi2)))

        if Bindx == 97:
            t1315 = np.cos(phi)
            t1314 = t1315 ** 2
            t1317 = t1314 ** 2
            t1316 = t1315 * t1314
            t1319 = t1316 ** 2
            t1321 = t1317 ** 2
            t1318 = t1315 * t1317
            t1323 = t1318 ** 2
            t1325 = t1319 ** 2
            t1328 = -5 + 300 * t1314 - 2865 * t1317 + 9904 * t1319 - 15447 * t1321 + 11172 * t1323 - 3059 * t1325
            t1327 = -2010 * t1316 + 11814 * t1318 + (-30500 * t1319 + 39216 * t1321 - 24738 * t1323 + 6118 * t1325 + 100) * t1315
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.561e3) * ((t1327 + t1328) * np.sin((phi1 - 6 * phi2)) + (t1327 - t1328) * np.sin((phi1 + 6 * phi2))) * ((1 + t1315) ** (-0.1e1 / 0.2e1)) * ((1 - t1315) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t1330 = np.cos(phi)
            t1331 = t1330 ** 2
            t1332 = t1331 ** 2
            t1334 = t1332 ** 2
            t1329 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t1330 * t1329 ** 2 * (-39270 * t1332 - 124355 * t1334 - 231 + (106590 * t1332 + 52003 * t1334 + 5775) * t1331) * np.sin(phi1) * ((1 + t1330) ** (-0.1e1 / 0.2e1)) * ((1 - t1330) ** (-0.1e1 / 0.2e1))

        if Bindx == 99:
            t1348 = np.cos(phi)
            t1347 = t1348 ** 2
            t1351 = t1347 ** 2
            t1361 = 5 * t1351 ** 2
            t1352 = t1348 * t1351
            t1356 = t1352 ** 2
            t1357 = t1348 * t1356
            t1360 = t1348 * t1357 + 4 * t1347 - 5 * t1351 - 4 * t1356 + t1361 - 1
            t1359 = 2 * t1348 * t1361 + 2 * t1348 + 20 * t1352 - 2 * t1357 + 2 * (-5 * t1348 - 10 * t1352) * t1347
            t1349 = 2 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.490314e6) * ((t1359 + t1360) * np.cos((-t1349 + 12 * phi2)) + (-t1359 + t1360) * np.cos((t1349 + 12 * phi2)))

        if Bindx == 100:
            t1375 = np.cos(phi)
            t1374 = t1375 ** 2
            t1377 = t1375 * t1374
            t1378 = t1374 ** 2
            t1379 = t1375 * t1378
            t1380 = t1377 ** 2
            t1382 = t1378 ** 2
            t1384 = t1379 ** 2
            t1388 = -1595 * t1377 + 8122 * t1379 + (-16606 * t1380 + 14801 * t1382 - 4807 * t1384 + 85) * t1375
            t1387 = -290 * t1374 + 2845 * t1378 + 18791 * t1382 - 15466 * t1384 + 5 + (-10692 + 4807 * t1380) * t1380
            t1376 = 2 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.714e3) * ((t1387 + t1388) * np.cos((-t1376 + 6 * phi2)) + (t1387 - t1388) * np.cos((t1376 + 6 * phi2)))

        if Bindx == 101:
            t1389 = np.cos(phi)
            t1390 = t1389 ** 2
            t1391 = t1390 ** 2
            t1393 = t1391 ** 2
            t1392 = t1390 * t1391
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t1391 + 24225 * t1393 + 3 + (-12240 + 7429 * t1392) * t1392 + (-21964 * t1393 - 228) * t1390) * np.cos((2 * phi1))

        if Bindx == 102:
            t1408 = np.cos(phi)
            t1407 = t1408 ** 2
            t1411 = t1407 ** 2
            t1410 = t1408 * t1407
            t1413 = t1410 ** 2
            t1415 = t1411 ** 2
            t1412 = t1408 * t1411
            t1417 = t1412 ** 2
            t1420 = -1 + t1407 + 6 * t1411 - 14 * t1413 + 11 * t1415 - 3 * t1417
            t1419 = -11 * t1410 + 14 * t1412 + (-6 * t1413 - t1415 + t1417 + 3) * t1408
            t1409 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.81719e5) * np.sqrt((1 - t1408)) * np.sqrt((1 + t1408)) * (-(t1419 + t1420) * np.sin((-t1409 + 12 * phi2)) + (t1419 - t1420) * np.sin((t1409 + 12 * phi2)))

        if Bindx == 103:
            t1435 = np.cos(phi)
            t1434 = t1435 ** 2
            t1438 = t1434 ** 2
            t1437 = t1435 * t1434
            t1440 = t1437 ** 2
            t1442 = t1438 ** 2
            t1439 = t1435 * t1438
            t1444 = t1439 ** 2
            t1446 = t1440 ** 2
            t1449 = -23 + 1288 * t1434 - 11855 * t1438 + 40952 * t1440 - 65797 * t1442 + 49856 * t1444 - 14421 * t1446
            t1448 = -362 * t1437 + 4222 * t1439 + (-18692 * t1440 + 35720 * t1442 - 30514 * t1444 + 9614 * t1446 + 12) * t1435
            t1436 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.119e3) * (-(t1448 + t1449) * np.sin((-t1436 + 6 * phi2)) + (t1448 - t1449) * np.sin((t1436 + 6 * phi2))) * ((1 + t1435) ** (-0.1e1 / 0.2e1)) * ((1 - t1435) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t1457 = np.sin(phi)
            t1455 = t1457 ** 2
            t1450 = np.cos(phi)
            t1451 = t1450 ** 2
            t1452 = t1451 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t1450 * t1455 ** 2 * (-1020 * t1451 + 45 + (-11628 * t1451 + 5814 + 7429 * t1452) * t1452) * np.sin((3 * phi1)) * ((1 + t1450) ** (-0.1e1 / 0.2e1)) * ((1 - t1450) ** (-0.1e1 / 0.2e1))

        if Bindx == 105:
            t1471 = np.cos(phi)
            t1470 = t1471 ** 2
            t1473 = t1471 * t1470
            t1474 = t1470 ** 2
            t1475 = t1471 * t1474
            t1476 = t1473 ** 2
            t1478 = t1474 ** 2
            t1480 = t1475 ** 2
            t1484 = 12 * t1473 - 8 * t1475 + 4 * (-2 * t1476 + 3 * t1478 - t1480 - 1) * t1471
            t1483 = 2 * t1470 - 17 * t1474 - 17 * t1478 + 2 * t1480 + 1 + (28 + t1476) * t1476
            t1472 = 4 * phi1
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.81719e5) * ((t1483 + t1484) * np.cos((-t1472 + 12 * phi2)) + (t1483 - t1484) * np.cos((t1472 + 12 * phi2)))

        if Bindx == 106:
            t1498 = np.cos(phi)
            t1497 = t1498 ** 2
            t1500 = t1498 * t1497
            t1501 = t1497 ** 2
            t1502 = t1498 * t1501
            t1503 = t1500 ** 2
            t1505 = t1501 ** 2
            t1507 = t1502 ** 2
            t1511 = -2470 * t1500 + 12588 * t1502 + (-27436 * t1503 + 26790 * t1505 - 9614 * t1507 + 142) * t1498
            t1510 = 364 * t1497 - 2435 * t1501 + 2755 * t1505 - 9196 * t1507 - 7 + (3712 + 4807 * t1503) * t1503
            t1499 = 4 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.119e3) * ((t1510 + t1511) * np.cos((-t1499 + 6 * phi2)) + (t1510 - t1511) * np.cos((t1499 + 6 * phi2)))

        if Bindx == 107:
            t1512 = np.cos(phi)
            t1513 = t1512 ** 2
            t1514 = t1513 ** 2
            t1516 = t1514 ** 2
            t1515 = t1513 * t1514
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t1514 + 28747 * t1516 + 5 + (-15844 + 7429 * t1515) * t1515 + (-23902 * t1516 - 350) * t1513) * np.cos((4 * phi1))

        if Bindx == 108:
            t1531 = np.cos(phi)
            t1530 = t1531 ** 2
            t1534 = t1530 ** 2
            t1533 = t1531 * t1530
            t1536 = t1533 ** 2
            t1538 = t1534 ** 2
            t1535 = t1531 * t1534
            t1540 = t1535 ** 2
            t1543 = 1 + 7 * t1530 - 22 * t1534 + 14 * t1536 + 5 * t1538 - 5 * t1540
            t1542 = 5 * t1533 + 14 * t1535 + (-22 * t1536 + 7 * t1538 + t1540 - 5) * t1531
            t1532 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.9614e4) * np.sqrt((1 - t1531)) * np.sqrt((1 + t1531)) * (-(t1542 + t1543) * np.sin((-t1532 + 12 * phi2)) + (t1542 - t1543) * np.sin((t1532 + 12 * phi2)))

        if Bindx == 109:
            t1558 = np.cos(phi)
            t1557 = t1558 ** 2
            t1561 = t1557 ** 2
            t1560 = t1558 * t1557
            t1563 = t1560 ** 2
            t1565 = t1561 ** 2
            t1562 = t1558 * t1561
            t1567 = t1562 ** 2
            t1569 = t1563 ** 2
            t1572 = -25 + 1200 * t1557 - 11465 * t1561 + 45592 * t1563 - 84987 * t1565 + 73720 * t1567 - 24035 * t1569
            t1571 = 5958 * t1560 - 24450 * t1562 + (37500 * t1563 - 14440 * t1565 - 13794 * t1567 + 9614 * t1569 - 388) * t1558
            t1559 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.14e2) * (-(t1571 + t1572) * np.sin((-t1559 + 6 * phi2)) + (t1571 - t1572) * np.sin((t1559 + 6 * phi2))) * ((1 + t1558) ** (-0.1e1 / 0.2e1)) * ((1 - t1558) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t1580 = np.sin(phi)
            t1577 = t1580 ** 2
            t1578 = t1580 * t1577
            t1573 = np.cos(phi)
            t1574 = t1573 ** 2
            t1575 = t1574 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t1573 * t1578 ** 2 * (-399 * t1575 - 5 + (437 * t1575 + 95) * t1574) * np.sin((5 * phi1)) * ((1 + t1573) ** (-0.1e1 / 0.2e1)) * ((1 - t1573) ** (-0.1e1 / 0.2e1))

        if Bindx == 111:
            t1593 = np.cos(phi)
            t1592 = t1593 ** 2
            t1596 = t1592 ** 2
            t1599 = t1596 ** 2
            t1597 = t1593 * t1596
            t1601 = t1597 ** 2
            t1602 = t1593 * t1601
            t1605 = t1593 * t1602 - 12 * t1592 + 27 * t1596 - 27 * t1599 + 12 * t1601 - 1
            t1604 = -6 * t1602 + 2 * (18 * t1592 - 18) * t1597 + 2 * (t1592 - t1599 + 3) * t1593
            t1594 = 6 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1604 + t1605) * np.cos((-t1594 + 12 * phi2)) + (-t1604 + t1605) * np.cos((t1594 + 12 * phi2)))

        if Bindx == 112:
            t1619 = np.cos(phi)
            t1618 = t1619 ** 2
            t1620 = t1619 * t1618
            t1621 = t1618 ** 2
            t1622 = t1619 * t1621
            t1623 = t1620 ** 2
            t1625 = t1621 ** 2
            t1627 = t1622 ** 2
            t1631 = -0.67375e5 / 0.1024e4 * t1620 + 0.615825e6 / 0.512e3 * t1622 + (-0.2227275e7 / 0.512e3 * t1623 + 0.5802125e7 / 0.1024e4 * t1625 - 0.2523675e7 / 0.1024e4 * t1627 - 0.975e3 / 0.1024e4) * t1619
            t1630 = 0.141225e6 / 0.512e3 * t1618 - 0.1882125e7 / 0.1024e4 * t1621 - 0.3954375e7 / 0.1024e4 * t1625 + 0.109725e6 / 0.512e3 * t1627 - 0.6725e4 / 0.1024e4 + (0.1128225e7 / 0.256e3 + 0.841225e6 / 0.1024e4 * t1623) * t1623
            tfunc[..., c] = (t1630 + t1631) * np.cos((6 * phi1 - 6 * phi2)) + (t1630 - t1631) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 113:
            t1632 = np.cos(phi)
            t1633 = t1632 ** 2
            t1634 = t1633 ** 2
            t1636 = t1634 ** 2
            t1635 = t1633 * t1634
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1634 + 15447 * t1636 + 5 + (-9904 + 3059 * t1635) * t1635 + (-11172 * t1636 - 300) * t1633) * np.cos((6 * phi1))

        if Bindx == 114:
            t1651 = np.cos(phi)
            t1650 = t1651 ** 2
            t1654 = t1650 ** 2
            t1653 = t1651 * t1650
            t1656 = t1653 ** 2
            t1658 = t1654 ** 2
            t1655 = t1651 * t1654
            t1660 = t1655 ** 2
            t1663 = -1 - 19 * t1650 + 6 * t1654 + 42 * t1656 - 21 * t1658 - 7 * t1660
            t1662 = 21 * t1653 - 42 * t1655 + (-6 * t1656 + 19 * t1658 + t1660 + 7) * t1651
            t1652 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.10626e5) * np.sqrt((1 - t1651)) * np.sqrt((1 + t1651)) * (-(t1662 + t1663) * np.sin((-t1652 + 12 * phi2)) + (t1662 - t1663) * np.sin((t1652 + 12 * phi2)))

        if Bindx == 115:
            t1678 = np.cos(phi)
            t1677 = t1678 ** 2
            t1681 = t1677 ** 2
            t1680 = t1678 * t1677
            t1683 = t1680 ** 2
            t1685 = t1681 ** 2
            t1682 = t1678 * t1681
            t1687 = t1682 ** 2
            t1689 = t1683 ** 2
            t1692 = 29 - 1044 * t1677 + 3745 * t1681 + 2016 * t1683 - 23121 * t1685 + 30772 * t1687 - 12397 * t1689
            t1691 = 4774 * t1680 - 21546 * t1682 + (40956 * t1683 - 31520 * t1685 + 4158 * t1687 + 3542 * t1689 - 364) * t1678
            t1679 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1691 + t1692) * np.sin((-t1679 + 6 * phi2)) + (t1691 - t1692) * np.sin((t1679 + 6 * phi2))) * ((1 + t1678) ** (-0.1e1 / 0.2e1)) * ((1 - t1678) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t1699 = np.sin(phi)
            t1696 = t1699 ** 2
            t1697 = t1696 ** 2
            t1693 = np.cos(phi)
            t1694 = t1693 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t1693 * t1697 ** 2 * (5 + (-70 + 161 * t1694) * t1694) * np.sin((7 * phi1)) * ((1 + t1693) ** (-0.1e1 / 0.2e1)) * ((1 - t1693) ** (-0.1e1 / 0.2e1))

        if Bindx == 117:
            t1713 = np.cos(phi)
            t1712 = t1713 ** 2
            t1715 = t1713 * t1712
            t1716 = t1712 ** 2
            t1717 = t1713 * t1716
            t1718 = t1715 ** 2
            t1720 = t1716 ** 2
            t1722 = t1717 ** 2
            t1726 = -40 * t1715 + 48 * t1717 + 8 * (6 * t1718 - 5 * t1720 - t1722 - 1) * t1713
            t1725 = 26 * t1712 + 15 * t1716 + 15 * t1720 + 26 * t1722 + 1 + (-84 + t1718) * t1718
            t1714 = 8 * phi1
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.10626e5) * ((t1725 + t1726) * np.cos((-t1714 + 12 * phi2)) + (t1725 - t1726) * np.cos((t1714 + 12 * phi2)))

        if Bindx == 118:
            t1740 = np.cos(phi)
            t1739 = t1740 ** 2
            t1742 = t1740 * t1739
            t1743 = t1739 ** 2
            t1744 = t1740 * t1743
            t1745 = t1742 ** 2
            t1747 = t1743 ** 2
            t1749 = t1744 ** 2
            t1753 = 3332 * t1742 - 6888 * t1744 + (-408 * t1745 + 11452 * t1747 - 7084 * t1749 - 404) * t1740
            t1752 = 532 * t1739 - 5607 * t1743 - 20337 * t1747 + 5852 * t1749 - 19 + (17808 + 1771 * t1745) * t1745
            t1741 = 8 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * ((t1752 + t1753) * np.cos((-t1741 + 6 * phi2)) + (t1752 - t1753) * np.cos((t1741 + 6 * phi2)))

        if Bindx == 119:
            t1754 = np.cos(phi)
            t1755 = t1754 ** 2
            t1756 = t1755 ** 2
            t1758 = t1756 ** 2
            t1757 = t1755 * t1756
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t1756 + 1135 * t1758 + 1 + (-900 + 161 * t1757) * t1757 + (-686 * t1758 - 46) * t1755) * np.cos((8 * phi1))

        if Bindx == 120:
            t1773 = np.cos(phi)
            t1772 = t1773 ** 2
            t1776 = t1772 ** 2
            t1775 = t1773 * t1772
            t1778 = t1775 ** 2
            t1780 = t1776 ** 2
            t1777 = t1773 * t1776
            t1782 = t1777 ** 2
            t1785 = 1 + 35 * t1772 + 90 * t1776 - 42 * t1778 - 75 * t1780 - 9 * t1782
            t1784 = -75 * t1775 - 42 * t1777 + (90 * t1778 + 35 * t1780 + t1782 - 9) * t1773
            t1774 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.506e3) * np.sqrt((1 - t1773)) * np.sqrt((1 + t1773)) * (-(t1784 + t1785) * np.sin((-t1774 + 12 * phi2)) + (t1784 - t1785) * np.sin((t1774 + 12 * phi2)))

        if Bindx == 121:
            t1800 = np.cos(phi)
            t1799 = t1800 ** 2
            t1803 = t1799 ** 2
            t1802 = t1800 * t1799
            t1805 = t1802 ** 2
            t1807 = t1803 ** 2
            t1804 = t1800 * t1803
            t1809 = t1804 ** 2
            t1811 = t1805 ** 2
            t1814 = 37 - 740 * t1799 + 3673 * t1803 - 5952 * t1805 + 1383 * t1807 + 3876 * t1809 - 2277 * t1811
            t1813 = -54 * t1802 - 3078 * t1804 + (9252 * t1805 - 9088 * t1807 + 2354 * t1809 + 506 * t1811 + 108) * t1800
            t1801 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.266e3) * (-(t1813 + t1814) * np.sin((-t1801 + 6 * phi2)) + (t1813 - t1814) * np.sin((t1801 + 6 * phi2))) * ((1 - t1800) ** (-0.1e1 / 0.2e1)) * ((1 + t1800) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t1820 = np.sin(phi)
            t1816 = t1820 ** 2
            t1818 = t1820 * t1816 ** 2
            t1815 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t1815 * t1818 ** 2 * (23 * t1815 ** 2 - 3) * np.sin((9 * phi1)) * ((1 - t1815) ** (-0.1e1 / 0.2e1)) * ((1 + t1815) ** (-0.1e1 / 0.2e1))

        if Bindx == 123:
            t1833 = np.cos(phi)
            t1832 = t1833 ** 2
            t1836 = t1832 ** 2
            t1839 = t1836 ** 2
            t1837 = t1833 * t1836
            t1841 = t1837 ** 2
            t1842 = t1833 * t1841
            t1845 = t1833 * t1842 - 44 * t1832 - 165 * t1836 + 165 * t1839 + 44 * t1841 - 1
            t1844 = -10 * t1842 + (-132 * t1832 + 132) * t1837 + (110 * t1832 - 110 * t1839 + 10) * t1833
            t1834 = 10 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.69e2) * ((t1844 + t1845) * np.cos((-t1834 + 12 * phi2)) + (-t1844 + t1845) * np.cos((t1834 + 12 * phi2)))

        if Bindx == 124:
            t1859 = np.cos(phi)
            t1858 = t1859 ** 2
            t1861 = t1859 * t1858
            t1862 = t1858 ** 2
            t1863 = t1859 * t1862
            t1864 = t1861 ** 2
            t1866 = t1862 ** 2
            t1868 = t1863 ** 2
            t1872 = 121 * t1861 - 366 * t1863 + (282 * t1864 + 85 * t1866 - 115 * t1868 - 7) * t1859
            t1871 = -50 * t1858 + 45 * t1862 - 441 * t1866 + 166 * t1868 + 5 + (252 + 23 * t1864) * t1864
            t1860 = 10 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.4389e4) * ((t1871 + t1872) * np.cos((-t1860 + 6 * phi2)) + (t1871 - t1872) * np.cos((t1860 + 6 * phi2)))

        if Bindx == 125:
            t1873 = np.cos(phi)
            t1874 = t1873 ** 2
            t1875 = t1874 ** 2
            t1877 = t1875 ** 2
            t1876 = t1874 * t1875
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t1875 + 235 * t1877 + 1 + (-240 + 23 * t1876) * t1876 + (-116 * t1877 - 28) * t1874) * np.cos((10 * phi1))

        if Bindx == 126:
            t1892 = np.cos(phi)
            t1891 = t1892 ** 2
            t1895 = t1891 ** 2
            t1894 = t1892 * t1891
            t1897 = t1894 ** 2
            t1899 = t1895 ** 2
            t1896 = t1892 * t1895
            t1901 = t1896 ** 2
            t1904 = -1 - 55 * t1891 - 330 * t1895 - 462 * t1897 - 165 * t1899 - 11 * t1901
            t1903 = 165 * t1894 + 462 * t1896 + (330 * t1897 + 55 * t1899 + t1901 + 11) * t1892
            t1893 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6e1) * np.sqrt((1 - t1892)) * np.sqrt((1 + t1892)) * (-(t1903 + t1904) * np.sin((-t1893 + 12 * phi2)) + (t1903 - t1904) * np.sin((t1893 + 12 * phi2)))

        if Bindx == 127:
            t1918 = np.cos(phi)
            t1920 = t1918 ** 2
            t1922 = t1920 ** 2
            t1921 = t1918 * t1920
            t1924 = t1921 ** 2
            t1926 = t1922 ** 2
            t1923 = t1918 * t1922
            t1928 = t1923 ** 2
            t1930 = t1924 ** 2
            t1933 = -1 + 31 * t1922 - 72 * t1924 + 45 * t1926 + 8 * t1928 - 11 * t1930
            t1932 = -22 * t1921 + 18 * t1923 + (36 * t1924 - 56 * t1926 + 18 * t1928 + 2 * t1930 + 4) * t1918
            t1919 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.201894e6) * (-(t1932 + t1933) * np.sin((-t1919 + 6 * phi2)) + (t1932 - t1933) * np.sin((t1919 + 6 * phi2))) * ((1 - t1918) ** (-0.1e1 / 0.2e1)) * ((1 + t1918) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1939 = np.sin(phi)
            t1935 = t1939 ** 2
            t1936 = t1939 * t1935
            t1937 = t1936 ** 2
            t1934 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t1934 * t1937 ** 2 * np.sin((11 * phi1)) * ((1 - t1934) ** (-0.1e1 / 0.2e1)) * ((1 + t1934) ** (-0.1e1 / 0.2e1))

        if Bindx == 129:
            t1953 = np.cos(phi)
            t1952 = t1953 ** 2
            t1954 = t1953 * t1952
            t1955 = t1952 ** 2
            t1956 = t1953 * t1955
            t1957 = t1954 ** 2
            t1959 = t1955 ** 2
            t1961 = t1956 ** 2
            t1965 = -0.75e2 / 0.1024e4 * (t1961 + 1) * t1953 - 0.2475e4 / 0.512e3 * t1953 * t1957 - 0.2475e4 / 0.512e3 * t1956 - 0.1375e4 / 0.1024e4 * t1953 * t1959 - 0.1375e4 / 0.1024e4 * t1954
            t1964 = 0.25e2 / 0.4096e4 + 0.12375e5 / 0.4096e4 * t1959 + 0.12375e5 / 0.4096e4 * t1955 + 0.825e3 / 0.2048e4 * t1961 + 0.825e3 / 0.2048e4 * t1952 + (0.5775e4 / 0.1024e4 + 0.25e2 / 0.4096e4 * t1957) * t1957
            tfunc[..., c] = (t1964 + t1965) * np.cos((12 * phi1 - 12 * phi2)) + (t1964 - t1965) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 130:
            t1979 = np.cos(phi)
            t1978 = t1979 ** 2
            t1982 = t1978 ** 2
            t1985 = t1982 ** 2
            t1983 = t1979 * t1982
            t1987 = t1983 ** 2
            t1988 = t1979 * t1987
            t1991 = t1979 * t1988 - 12 * t1978 + 27 * t1982 - 27 * t1985 + 12 * t1987 - 1
            t1990 = -6 * t1988 + 2 * (18 * t1978 - 18) * t1983 + 2 * (t1978 - t1985 + 3) * t1979
            t1980 = 12 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1990 + t1991) * np.cos((-t1980 + 6 * phi2)) + (-t1990 + t1991) * np.cos((t1980 + 6 * phi2)))

        if Bindx == 131:
            t1992 = np.cos(phi)
            t1993 = t1992 ** 2
            t1999 = -6 * t1993
            t1994 = t1993 ** 2
            t1995 = t1993 * t1994
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t1999 + 1 + (-20 + t1995) * t1995 + (15 + (t1999 + 15) * t1994) * t1994)

        if Bindx == 132:
            tfunc[..., c] = 0

        if Bindx == 133:
            tfunc[..., c] = 0

        if Bindx == 134:
            t2015 = np.cos(phi)
            t2014 = t2015 ** 2
            t2016 = t2015 * t2014
            t2017 = t2014 ** 2
            t2018 = t2015 * t2017
            t2019 = t2016 ** 2
            t2020 = t2015 * t2019
            t2021 = t2017 ** 2
            t2023 = t2018 ** 2
            t2025 = t2019 ** 2
            t2029 = -720 * t2016 + 4878 * t2018 - 14064 * t2020 + (19674 * t2021 - 13248 * t2023 + 3450 * t2025 + 30) * t2015
            t2028 = -7475 * t2020 ** 2 - 365 * t2014 + 4425 * t2017 - 20473 * t2019 + 45919 * t2021 - 53799 * t2023 + 31763 * t2025 + 5
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.7106e4) * ((t2028 + t2029) * np.sin((phi1 - 6 * phi2)) + (-t2028 + t2029) * np.sin((phi1 + 6 * phi2))) * ((1 - t2015) ** (-0.1e1 / 0.2e1)) * ((1 + t2015) ** (-0.1e1 / 0.2e1))

        if Bindx == 135:
            t2045 = np.cos(phi)
            t2044 = t2045 ** 2
            t2046 = t2045 * t2044
            t2047 = t2044 ** 2
            t2048 = t2045 * t2047
            t2049 = t2046 ** 2
            t2050 = t2045 * t2049
            t2051 = t2047 ** 2
            t2053 = t2048 ** 2
            t2055 = t2049 ** 2
            t2059 = 72 * t2046 - 180 * t2048 + 240 * t2050 + 12 * (-15 * t2051 + 6 * t2053 - t2055 - 1) * t2045
            t2058 = -13 * t2050 ** 2 - 19 * t2044 + 93 * t2047 - 215 * t2049 + 275 * t2051 - 201 * t2053 + 79 * t2055 + 1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.14858e5) * ((-t2058 + t2059) * np.sin((phi1 - 12 * phi2)) + (t2058 + t2059) * np.sin((phi1 + 12 * phi2))) * ((1 - t2045) ** (-0.1e1 / 0.2e1)) * ((1 + t2045) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t2074 = np.cos(phi)
            t2073 = t2074 ** 2
            t2077 = t2073 ** 2
            t2076 = t2074 * t2073
            t2079 = t2076 ** 2
            t2081 = t2077 ** 2
            t2078 = t2074 * t2077
            t2083 = t2078 ** 2
            t2085 = t2079 ** 2
            t2088 = 1 - 71 * t2073 + 790 * t2077 - 3142 * t2079 + 5573 * t2081 - 4531 * t2083 + 1380 * t2085
            t2087 = 214 * t2076 - 1493 * t2078 + (4588 * t2079 - 7003 * t2081 + 5198 * t2083 - 1495 * t2085 - 9) * t2074
            t2075 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.35530e5) * ((t2087 + t2088) * np.cos((-t2075 + 6 * phi2)) + (-t2087 + t2088) * np.cos((t2075 + 6 * phi2)))

        if Bindx == 137:
            t2103 = np.cos(phi)
            t2102 = t2103 ** 2
            t2106 = t2102 ** 2
            t2105 = t2103 * t2102
            t2108 = t2105 ** 2
            t2110 = t2106 ** 2
            t2107 = t2103 * t2106
            t2112 = t2107 ** 2
            t2114 = t2108 ** 2
            t2117 = -2 + 34 * t2102 - 140 * t2106 + 260 * t2108 - 250 * t2110 + 122 * t2112 - 24 * t2114
            t2116 = -32 * t2105 + 25 * t2107 + (40 * t2108 - 85 * t2110 + 56 * t2112 - 13 * t2114 + 9) * t2103
            t2104 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.74290e5) * ((-t2116 + t2117) * np.cos((-t2104 + 12 * phi2)) + (t2116 + t2117) * np.cos((t2104 + 12 * phi2)))

        if Bindx == 138:
            t2133 = np.cos(phi)
            t2132 = t2133 ** 2
            t2136 = t2132 ** 2
            t2135 = t2133 * t2132
            t2138 = t2135 ** 2
            t2139 = t2133 * t2138
            t2140 = t2136 ** 2
            t2137 = t2133 * t2136
            t2142 = t2137 ** 2
            t2144 = t2138 ** 2
            t2148 = -16445 * t2139 ** 2 - 207 * t2132 + 2939 * t2136 - 17743 * t2138 + 52529 * t2140 - 79013 * t2142 + 57937 * t2144 + 3
            t2147 = -4444 * t2135 + 29390 * t2137 - 84680 * t2139 + (120766 * t2140 - 83996 * t2142 + 22770 * t2144 + 194) * t2133
            t2134 = 3 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.3230e4) * (-(t2147 + t2148) * np.sin((-t2134 + 6 * phi2)) + (t2147 - t2148) * np.sin((t2134 + 6 * phi2))) * ((1 + t2133) ** (-0.1e1 / 0.2e1)) * ((1 - t2133) ** (-0.1e1 / 0.2e1))

        if Bindx == 139:
            t2164 = np.cos(phi)
            t2163 = t2164 ** 2
            t2166 = t2164 * t2163
            t2167 = t2163 ** 2
            t2168 = t2164 * t2167
            t2169 = t2166 ** 2
            t2170 = t2164 * t2169
            t2171 = t2167 ** 2
            t2173 = t2168 ** 2
            t2175 = t2169 ** 2
            t2179 = -16 * t2166 + 140 * t2168 - 320 * t2170 + (340 * t2171 - 176 * t2173 + 36 * t2175 - 4) * t2164
            t2178 = -13 * t2170 ** 2 + 45 * t2163 - 167 * t2167 + 265 * t2169 - 185 * t2171 + 23 * t2173 + 35 * t2175 - 3
            t2165 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.817190e6) * (-(t2178 + t2179) * np.sin((-t2165 + 12 * phi2)) + (-t2178 + t2179) * np.sin((t2165 + 12 * phi2))) * ((1 + t2164) ** (-0.1e1 / 0.2e1)) * ((1 - t2164) ** (-0.1e1 / 0.2e1))

        if Bindx == 140:
            t2194 = np.cos(phi)
            t2193 = t2194 ** 2
            t2196 = t2194 * t2193
            t2197 = t2193 ** 2
            t2198 = t2194 * t2197
            t2199 = t2196 ** 2
            t2201 = t2197 ** 2
            t2203 = t2198 ** 2
            t2205 = t2199 ** 2
            t2208 = 7280 * t2196 - 27661 * t2198 + (-1480 * t2199 + 136345 * t2201 - 196328 * t2203 + 82225 * t2205 - 381) * t2194
            t2207 = -6890 * t2193 + 73180 * t2197 - 291124 * t2199 + 536930 * t2201 - 464002 * t2203 + 151800 * t2205 + 106
            t2195 = 4 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * ((t2207 - t2208) * np.cos((-t2195 + 6 * phi2)) + (t2207 + t2208) * np.cos((t2195 + 6 * phi2)))

        if Bindx == 141:
            t2223 = np.cos(phi)
            t2222 = t2223 ** 2
            t2226 = t2222 ** 2
            t2225 = t2223 * t2222
            t2228 = t2225 ** 2
            t2230 = t2226 ** 2
            t2227 = t2223 * t2226
            t2232 = t2227 ** 2
            t2234 = t2228 ** 2
            t2237 = -4 + 44 * t2222 - 88 * t2226 - 8 * t2228 + 172 * t2230 - 164 * t2232 + 48 * t2234
            t2236 = -74 * t2225 + 253 * t2227 + (-332 * t2228 + 173 * t2230 - 10 * t2232 - 13 * t2234 + 3) * t2223
            t2224 = 4 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * ((t2236 + t2237) * np.cos((-t2224 + 12 * phi2)) + (-t2236 + t2237) * np.cos((t2224 + 12 * phi2)))

        if Bindx == 142:
            t2253 = np.cos(phi)
            t2252 = t2253 ** 2
            t2256 = t2252 ** 2
            t2255 = t2253 * t2252
            t2258 = t2255 ** 2
            t2259 = t2253 * t2258
            t2260 = t2256 ** 2
            t2257 = t2253 * t2256
            t2262 = t2257 ** 2
            t2264 = t2258 ** 2
            t2268 = 82225 * t2259 ** 2 - 6893 * t2252 + 63345 * t2256 - 196005 * t2258 + 221115 * t2260 + 6369 * t2262 - 170269 * t2264 + 113
            t2267 = -26140 * t2255 + 175642 * t2257 - 542952 * t2259 + (845090 * t2260 - 642620 * t2262 + 189750 * t2264 + 1230) * t2253
            t2254 = 5 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.38e2) * (-(t2267 - t2268) * np.sin((-t2254 + 6 * phi2)) + (t2267 + t2268) * np.sin((t2254 + 6 * phi2))) * ((1 + t2253) ** (-0.1e1 / 0.2e1)) * ((1 - t2253) ** (-0.1e1 / 0.2e1))

        if Bindx == 143:
            t2284 = np.cos(phi)
            t2283 = t2284 ** 2
            t2286 = t2284 * t2283
            t2287 = t2283 ** 2
            t2288 = t2284 * t2287
            t2289 = t2286 ** 2
            t2290 = t2284 * t2289
            t2291 = t2287 ** 2
            t2293 = t2288 ** 2
            t2295 = t2289 ** 2
            t2299 = 128 * t2286 - 332 * t2288 + 288 * t2290 + (28 * t2291 - 160 * t2293 + 60 * t2295 - 12) * t2284
            t2298 = -13 * t2290 ** 2 - 35 * t2283 - 15 * t2287 + 297 * t2289 - 513 * t2291 + 327 * t2293 - 53 * t2295 + 5
            t2285 = 5 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.9614e4) * (-(t2298 + t2299) * np.sin((-t2285 + 12 * phi2)) + (-t2298 + t2299) * np.sin((t2285 + 12 * phi2))) * ((1 + t2284) ** (-0.1e1 / 0.2e1)) * ((1 - t2284) ** (-0.1e1 / 0.2e1))

        if Bindx == 144:
            t2314 = np.cos(phi)
            t2313 = t2314 ** 2
            t2316 = t2313 ** 2
            t2315 = t2314 * t2313
            t2318 = t2315 ** 2
            t2320 = t2316 ** 2
            t2317 = t2314 * t2316
            t2322 = t2317 ** 2
            t2324 = t2318 ** 2
            t2327 = -0.102465e6 / 0.1024e4 * t2313 + 0.657045e6 / 0.512e3 * t2316 - 0.3475629e7 / 0.512e3 * t2318 + 0.16073235e8 / 0.1024e4 * t2320 - 0.16469541e8 / 0.1024e4 * t2322 + 0.1536975e7 / 0.256e3 * t2324 + 0.1863e4 / 0.1024e4
            t2326 = -0.611145e6 / 0.512e3 * t2315 + 0.5875983e7 / 0.1024e4 * t2317 + (-0.2772225e7 / 0.256e3 * t2318 + 0.7301745e7 / 0.1024e4 * t2320 + 0.635283e6 / 0.512e3 * t2322 - 0.2220075e7 / 0.1024e4 * t2324 + 0.69147e5 / 0.1024e4) * t2314
            tfunc[..., c] = (t2326 + t2327) * np.cos((6 * phi1 - 6 * phi2)) + (-t2326 + t2327) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 145:
            t2342 = np.cos(phi)
            t2341 = t2342 ** 2
            t2345 = t2341 ** 2
            t2344 = t2342 * t2341
            t2347 = t2344 ** 2
            t2349 = t2345 ** 2
            t2346 = t2342 * t2345
            t2351 = t2346 ** 2
            t2353 = t2347 ** 2
            t2356 = -6 + 6 * t2341 + 188 * t2345 - 468 * t2347 + 306 * t2349 + 46 * t2351 - 72 * t2353
            t2355 = 144 * t2344 - 135 * t2346 + (-216 * t2347 + 363 * t2349 - 120 * t2351 - 13 * t2353 - 23) * t2342
            t2343 = 6 * phi1
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((-t2355 + t2356) * np.cos((-t2343 + 12 * phi2)) + (t2355 + t2356) * np.cos((t2343 + 12 * phi2)))

        if Bindx == 146:
            t2372 = np.cos(phi)
            t2371 = t2372 ** 2
            t2374 = t2372 * t2371
            t2375 = t2371 ** 2
            t2376 = t2372 * t2375
            t2377 = t2374 ** 2
            t2378 = t2372 * t2377
            t2379 = t2375 ** 2
            t2381 = t2376 ** 2
            t2383 = t2377 ** 2
            t2387 = 2632 * t2374 + 4046 * t2376 - 65664 * t2378 + (161938 * t2379 - 155848 * t2381 + 53130 * t2383 - 234) * t2372
            t2386 = 16445 * t2378 ** 2 - 4165 * t2371 + 35553 * t2375 - 120057 * t2377 + 183327 * t2379 - 112959 * t2381 + 1771 * t2383 + 85
            t2373 = 7 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.35e2) * (-(-t2386 + t2387) * np.sin((-t2373 + 6 * phi2)) + (t2386 + t2387) * np.sin((t2373 + 6 * phi2))) * ((1 - t2372) ** (-0.1e1 / 0.2e1)) * ((1 + t2372) ** (-0.1e1 / 0.2e1))

        if Bindx == 147:
            t2403 = np.cos(phi)
            t2402 = t2403 ** 2
            t2405 = t2403 * t2402
            t2406 = t2402 ** 2
            t2407 = t2403 * t2406
            t2408 = t2405 ** 2
            t2409 = t2403 * t2408
            t2410 = t2406 ** 2
            t2412 = t2407 ** 2
            t2414 = t2408 ** 2
            t2418 = -136 * t2405 - 116 * t2407 + 720 * t2409 + (-644 * t2410 + 56 * t2412 + 84 * t2414 + 36) * t2403
            t2417 = -13 * t2409 ** 2 - 35 * t2402 + 357 * t2406 - 567 * t2408 + 27 * t2410 + 423 * t2412 - 185 * t2414 - 7
            t2404 = 7 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-(t2417 + t2418) * np.sin((-t2404 + 12 * phi2)) + (-t2417 + t2418) * np.sin((t2404 + 12 * phi2))) * ((1 - t2403) ** (-0.1e1 / 0.2e1)) * ((1 + t2403) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t2433 = np.cos(phi)
            t2432 = t2433 ** 2
            t2436 = t2432 ** 2
            t2435 = t2433 * t2432
            t2438 = t2435 ** 2
            t2440 = t2436 ** 2
            t2437 = t2433 * t2436
            t2442 = t2437 ** 2
            t2444 = t2438 ** 2
            t2447 = -5084 * t2432 + 24904 * t2436 - 20568 * t2438 - 69204 * t2440 + 130548 * t2442 - 60720 * t2444 + 124
            t2446 = 15864 * t2435 - 84537 * t2437 + (185544 * t2438 - 164659 * t2440 + 32384 * t2442 + 16445 * t2444 - 1041) * t2433
            t2434 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.10e2) * ((t2446 + t2447) * np.cos((-t2434 + 6 * phi2)) + (-t2446 + t2447) * np.cos((t2434 + 6 * phi2)))

        if Bindx == 149:
            t2462 = np.cos(phi)
            t2461 = t2462 ** 2
            t2465 = t2461 ** 2
            t2464 = t2462 * t2461
            t2467 = t2464 ** 2
            t2469 = t2465 ** 2
            t2466 = t2462 * t2465
            t2471 = t2466 ** 2
            t2473 = t2467 ** 2
            t2476 = 8 + 104 * t2461 - 400 * t2465 - 48 * t2467 + 744 * t2469 - 312 * t2471 - 96 * t2473
            t2475 = -18 * t2464 - 579 * t2466 + (708 * t2467 + 125 * t2469 - 274 * t2471 - 13 * t2473 + 51) * t2462
            t2463 = 8 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2530e4) * ((-t2475 + t2476) * np.cos((-t2463 + 12 * phi2)) + (t2475 + t2476) * np.cos((t2463 + 12 * phi2)))

        if Bindx == 150:
            t2492 = np.cos(phi)
            t2491 = t2492 ** 2
            t2494 = t2492 * t2491
            t2495 = t2491 ** 2
            t2496 = t2492 * t2495
            t2497 = t2494 ** 2
            t2498 = t2492 * t2497
            t2499 = t2495 ** 2
            t2501 = t2496 ** 2
            t2503 = t2497 ** 2
            t2507 = 14936 * t2494 - 48274 * t2496 + 47136 * t2498 + (28866 * t2499 - 72312 * t2501 + 31050 * t2503 - 1402) * t2492
            t2506 = -7475 * t2498 ** 2 + 891 * t2491 - 17631 * t2495 + 83799 * t2497 - 155601 * t2499 + 118561 * t2501 - 22517 * t2503 - 27
            t2493 = 9 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.11e2) * (-(t2506 + t2507) * np.sin((-t2493 + 6 * phi2)) + (-t2506 + t2507) * np.sin((t2493 + 6 * phi2))) * ((1 + t2492) ** (-0.1e1 / 0.2e1)) * ((1 - t2492) ** (-0.1e1 / 0.2e1))

        if Bindx == 151:
            t2523 = np.cos(phi)
            t2522 = t2523 ** 2
            t2525 = t2523 * t2522
            t2526 = t2522 ** 2
            t2527 = t2523 * t2526
            t2528 = t2525 ** 2
            t2529 = t2523 * t2528
            t2530 = t2526 ** 2
            t2532 = t2527 ** 2
            t2534 = t2528 ** 2
            t2538 = 152 * t2525 - 1012 * t2527 + 528 * t2529 + (924 * t2530 - 552 * t2532 - 108 * t2534 + 68) * t2523
            t2537 = -13 * t2529 ** 2 + 189 * t2522 - 363 * t2526 - 759 * t2528 + 1419 * t2530 - 121 * t2532 - 361 * t2534 + 9
            t2524 = 9 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.23e2) * (-(-t2537 + t2538) * np.sin((-t2524 + 12 * phi2)) + (t2537 + t2538) * np.sin((t2524 + 12 * phi2))) * ((1 - t2523) ** (-0.1e1 / 0.2e1)) * ((1 + t2523) ** (-0.1e1 / 0.2e1))

        if Bindx == 152:
            t2553 = np.cos(phi)
            t2552 = t2553 ** 2
            t2556 = t2552 ** 2
            t2555 = t2553 * t2552
            t2558 = t2555 ** 2
            t2560 = t2556 ** 2
            t2557 = t2553 * t2556
            t2562 = t2557 ** 2
            t2564 = t2558 ** 2
            t2567 = 17 - 391 * t2552 + 2246 * t2556 - 4182 * t2558 + 1605 * t2560 + 2205 * t2562 - 1500 * t2564
            t2566 = 210 * t2555 + 1377 * t2557 + (-5436 * t2558 + 5951 * t2560 - 1702 * t2562 - 325 * t2564 - 75) * t2553
            t2554 = 10 * phi1
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.253e3) * ((-t2566 + t2567) * np.cos((-t2554 + 6 * phi2)) + (t2566 + t2567) * np.cos((t2554 + 6 * phi2)))

        if Bindx == 153:
            t2582 = np.cos(phi)
            t2581 = t2582 ** 2
            t2585 = t2581 ** 2
            t2584 = t2582 * t2581
            t2587 = t2584 ** 2
            t2589 = t2585 ** 2
            t2586 = t2582 * t2585
            t2591 = t2586 ** 2
            t2593 = t2587 ** 2
            t2596 = -0.20925e5 / 0.1024e4 * t2581 - 0.7425e4 / 0.512e3 * t2585 + 0.57915e5 / 0.512e3 * t2587 - 0.4455e4 / 0.1024e4 * t2589 - 0.66825e5 / 0.1024e4 * t2591 - 0.2025e4 / 0.256e3 * t2593 - 0.675e3 / 0.1024e4
            t2595 = -0.4455e4 / 0.128e3 * t2584 + 0.111375e6 / 0.2048e4 * t2586 + (0.22275e5 / 0.256e3 * t2587 - 0.141075e6 / 0.2048e4 * t2589 - 0.7965e4 / 0.256e3 * t2591 - 0.1755e4 / 0.2048e4 * t2593 - 0.11745e5 / 0.2048e4) * t2582
            t2583 = 10 * phi1
            tfunc[..., c] = (-t2595 + t2596) * np.cos((-t2583 + 12 * phi2)) + (t2595 + t2596) * np.cos((t2583 + 12 * phi2))

        if Bindx == 154:
            t2612 = np.cos(phi)
            t2611 = t2612 ** 2
            t2614 = t2612 * t2611
            t2615 = t2611 ** 2
            t2616 = t2612 * t2615
            t2617 = t2614 ** 2
            t2618 = t2612 * t2617
            t2619 = t2615 ** 2
            t2621 = t2616 ** 2
            t2623 = t2617 ** 2
            t2627 = 1532 * t2614 - 6626 * t2616 + 9576 * t2618 + (-3482 * t2619 - 2596 * t2621 + 1650 * t2623 - 54) * t2612
            t2626 = -325 * t2618 ** 2 - 767 * t2611 + 1707 * t2615 + 2025 * t2617 - 9207 * t2619 + 8667 * t2621 - 2159 * t2623 + 59
            t2613 = 11 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.506e3) * (-(t2626 + t2627) * np.sin((-t2613 + 6 * phi2)) + (-t2626 + t2627) * np.sin((t2613 + 6 * phi2))) * ((1 - t2612) ** (-0.1e1 / 0.2e1)) * ((1 + t2612) ** (-0.1e1 / 0.2e1))

        if Bindx == 155:
            t2643 = np.cos(phi)
            t2642 = t2643 ** 2
            t2645 = t2643 * t2642
            t2646 = t2642 ** 2
            t2647 = t2643 * t2646
            t2648 = t2645 ** 2
            t2649 = t2643 * t2648
            t2650 = t2646 ** 2
            t2652 = t2647 ** 2
            t2654 = t2648 ** 2
            t2658 = -992 * t2645 + 308 * t2647 + 3168 * t2649 + (-836 * t2650 - 1408 * t2652 - 132 * t2654 - 108) * t2643
            t2657 = -13 * t2649 ** 2 - 451 * t2642 - 1023 * t2646 + 2409 * t2648 + 1551 * t2650 - 1881 * t2652 - 581 * t2654 - 11
            t2644 = 11 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * (-(-t2657 + t2658) * np.sin((-t2644 + 12 * phi2)) + (t2657 + t2658) * np.sin((t2644 + 12 * phi2))) * ((1 + t2643) ** (-0.1e1 / 0.2e1)) * ((1 - t2643) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t2673 = np.cos(phi)
            t2672 = t2673 ** 2
            t2676 = t2672 ** 2
            t2675 = t2673 * t2672
            t2678 = t2675 ** 2
            t2680 = t2676 ** 2
            t2677 = t2673 * t2676
            t2682 = t2677 ** 2
            t2684 = t2678 ** 2
            t2687 = 6 - 6 * t2672 - 188 * t2676 + 468 * t2678 - 306 * t2680 - 46 * t2682 + 72 * t2684
            t2686 = 144 * t2675 - 135 * t2677 + (-216 * t2678 + 363 * t2680 - 120 * t2682 - 13 * t2684 - 23) * t2673
            t2674 = 12 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2686 + t2687) * np.cos((-t2674 + 6 * phi2)) + (-t2686 + t2687) * np.cos((t2674 + 6 * phi2)))

        if Bindx == 157:
            t2702 = np.cos(phi)
            t2701 = t2702 ** 2
            t2704 = t2701 ** 2
            t2703 = t2702 * t2701
            t2706 = t2703 ** 2
            t2708 = t2704 ** 2
            t2705 = t2702 * t2704
            t2710 = t2705 ** 2
            t2712 = t2706 ** 2
            t2715 = -0.4293e4 / 0.1024e4 * t2701 - 0.10395e5 / 0.512e3 * t2704 - 0.2673e4 / 0.512e3 * t2706 + 0.29403e5 / 0.1024e4 * t2708 + 0.13959e5 / 0.1024e4 * t2710 + 0.243e3 / 0.256e3 * t2712 - 0.81e2 / 0.1024e4
            t2714 = 0.24057e5 / 0.2048e4 * t2703 + 0.82863e5 / 0.4096e4 * t2705 + (-0.16929e5 / 0.1024e4 * t2706 - 0.102465e6 / 0.4096e4 * t2708 - 0.9639e4 / 0.2048e4 * t2710 - 0.351e3 / 0.4096e4 * t2712 + 0.3537e4 / 0.4096e4) * t2702
            tfunc[..., c] = (t2714 + t2715) * np.cos((12 * phi1 - 12 * phi2)) + (-t2714 + t2715) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 158:
            t2728 = np.cos(phi)
            t2727 = t2728 ** 2
            t2731 = t2727 ** 2
            t2734 = t2731 ** 2
            t2732 = t2728 * t2731
            t2736 = t2732 ** 2
            t2737 = t2728 * t2736
            t2740 = -t2728 * t2737 + 12 * t2727 - 27 * t2731 + 27 * t2734 - 12 * t2736 + 1
            t2739 = -6 * t2737 + 2 * (18 * t2727 - 18) * t2732 + 2 * (t2727 - t2734 + 3) * t2728
            t2729 = 13 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.6578e4) * np.sqrt((1 - t2728)) * np.sqrt((1 + t2728)) * (-(t2739 - t2740) * np.sin((-t2729 + 6 * phi2)) + (t2739 + t2740) * np.sin((t2729 + 6 * phi2)))

        if Bindx == 159:
            t2755 = np.cos(phi)
            t2754 = t2755 ** 2
            t2757 = t2755 * t2754
            t2758 = t2754 ** 2
            t2759 = t2755 * t2758
            t2761 = t2758 ** 2
            t2763 = t2759 ** 2
            t2760 = t2757 ** 2
            t2765 = t2760 ** 2
            t2766 = t2755 * t2765
            t2769 = 208 * t2757 + 572 * t2759 - 12 * t2766 + (-572 * t2761 - 208 * t2763 + 12) * t2755
            t2768 = -t2755 * t2766 + 65 * t2754 + 429 * t2758 + 429 * t2760 - 429 * t2761 - 429 * t2763 - 65 * t2765 + 1
            t2756 = 13 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.26e2) * (-(-t2768 + t2769) * np.sin((-t2756 + 12 * phi2)) + (t2768 + t2769) * np.sin((t2756 + 12 * phi2))) * ((1 - t2755) ** (-0.1e1 / 0.2e1)) * ((1 + t2755) ** (-0.1e1 / 0.2e1))

        if Bindx == 160:
            t2770 = np.cos(phi)
            t2771 = t2770 ** 2
            t2772 = t2771 ** 2
            t2773 = t2771 * t2772
            t2776 = t2773 ** 2
            t2774 = t2772 ** 2
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.52003e5) * (-177 * t2772 + 425 * t2773 - 555 * t2774 - 163 * t2776 - 1 + (411 * t2774 + 27 * t2776 + 33) * t2771) * np.cos((12 * phi2))

        if Bindx == 161:
            t2778 = np.cos(phi)
            t2779 = t2778 ** 2
            t2780 = t2779 ** 2
            t2781 = t2779 * t2780
            t2784 = t2781 ** 2
            t2782 = t2780 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.3233230e7) * (-1221 * t2780 + 6371 * t2781 - 15747 * t2782 - 12535 * t2784 - 1 + (19941 * t2782 + 3105 * t2784 + 87) * t2779) * np.cos((6 * phi2))

        if Bindx == 162:
            t2786 = np.cos(phi)
            t2787 = t2786 ** 2
            t2788 = t2787 ** 2
            t2789 = t2787 * t2788
            t2792 = t2789 ** 2
            t2790 = t2788 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t2792 - 0.421936515e9 / 0.2048e4 * t2790 + 0.140645505e9 / 0.2048e4 * t2789 - 0.22207185e8 / 0.2048e4 * t2788 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t2792 + 0.646969323e9 / 0.2048e4 * t2790 + 0.1306305e7 / 0.2048e4) * t2787

        if Bindx == 163:
            t2810 = np.cos(phi)
            t2809 = t2810 ** 2
            t2812 = t2809 ** 2
            t2811 = t2810 * t2809
            t2814 = t2811 ** 2
            t2816 = t2812 ** 2
            t2813 = t2810 * t2812
            t2818 = t2813 ** 2
            t2820 = t2814 ** 2
            t2815 = t2810 * t2814
            t2822 = t2815 ** 2
            t2825 = 2 - 66 * t2809 + 354 * t2812 - 850 * t2814 + 1110 * t2816 - 822 * t2818 + 326 * t2820 - 54 * t2822
            t2824 = 129 * t2811 - 543 * t2813 + 1165 * t2815 + (-1425 * t2816 + 1011 * t2818 - 389 * t2820 + 63 * t2822 - 11) * t2810
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.222870e6) * ((t2824 + t2825) * np.sin((phi1 - 12 * phi2)) + (t2824 - t2825) * np.sin((phi1 + 12 * phi2))) * ((1 + t2810) ** (-0.1e1 / 0.2e1)) * ((1 - t2810) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t2842 = np.cos(phi)
            t2841 = t2842 ** 2
            t2844 = t2841 ** 2
            t2843 = t2842 * t2841
            t2846 = t2843 ** 2
            t2848 = t2844 ** 2
            t2845 = t2842 * t2844
            t2850 = t2845 ** 2
            t2852 = t2846 ** 2
            t2847 = t2842 * t2846
            t2854 = t2847 ** 2
            t2857 = 1 - 87 * t2841 + 1221 * t2844 - 6371 * t2846 + 15747 * t2848 - 19941 * t2850 + 12535 * t2852 - 3105 * t2854
            t2856 = 843 * t2843 - 7185 * t2845 + 27367 * t2847 + (-54231 * t2848 + 58305 * t2850 - 32315 * t2852 + 7245 * t2854 - 29) * t2842
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.138567e6) * ((t2856 + t2857) * np.sin((phi1 - 6 * phi2)) + (t2856 - t2857) * np.sin((phi1 + 6 * phi2))) * ((1 + t2842) ** (-0.1e1 / 0.2e1)) * ((1 - t2842) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t2859 = np.cos(phi)
            t2860 = t2859 ** 2
            t2861 = t2860 ** 2
            t2863 = t2861 ** 2
            t2862 = t2860 * t2861
            t2858 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t2859 * t2858 ** 2 * (138567 * t2861 + 1062347 * t2863 + 429 + (-554268 + 334305 * t2862) * t2862 + (-965770 * t2863 - 14586) * t2860) * np.sin(phi1) * ((1 + t2859) ** (-0.1e1 / 0.2e1)) * ((1 - t2859) ** (-0.1e1 / 0.2e1))

        if Bindx == 166:
            t2881 = np.cos(phi)
            t2880 = t2881 ** 2
            t2884 = t2880 ** 2
            t2883 = t2881 * t2880
            t2886 = t2883 ** 2
            t2887 = t2881 * t2886
            t2888 = t2884 ** 2
            t2885 = t2881 * t2884
            t2890 = t2885 ** 2
            t2892 = t2886 ** 2
            t2896 = 63 * t2887 ** 2 - 31 * t2880 + 77 * t2884 + 45 * t2886 - 365 * t2888 + 499 * t2890 - 289 * t2892 + 1
            t2895 = 208 * t2883 - 740 * t2885 + 1280 * t2887 + (-1180 * t2888 + 560 * t2890 - 108 * t2892 - 20) * t2881
            t2882 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.2897310e7) * ((t2895 + t2896) * np.cos((-t2882 + 12 * phi2)) + (-t2895 + t2896) * np.cos((t2882 + 12 * phi2)))

        if Bindx == 167:
            t2912 = np.cos(phi)
            t2911 = t2912 ** 2
            t2914 = t2912 * t2911
            t2915 = t2911 ** 2
            t2916 = t2912 * t2915
            t2917 = t2914 ** 2
            t2918 = t2912 * t2917
            t2919 = t2915 ** 2
            t2921 = t2916 ** 2
            t2923 = t2917 ** 2
            t2927 = -9596 * t2914 + 74182 * t2916 - 241480 * t2918 + (377798 * t2919 - 281980 * t2921 + 80730 * t2923 + 346) * t2912
            t2926 = 94185 * t2918 ** 2 + 1955 * t2911 - 27487 * t2915 + 147411 * t2917 - 383021 * t2919 + 518305 * t2921 - 351325 * t2923 - 23
            t2913 = 2 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.10659e5) * ((t2926 - t2927) * np.cos((-t2913 + 6 * phi2)) + (t2926 + t2927) * np.cos((t2913 + 6 * phi2)))

        if Bindx == 168:
            t2928 = np.cos(phi)
            t2929 = t2928 ** 2
            t2930 = t2929 ** 2
            t2931 = t2929 * t2930
            t2934 = t2931 ** 2
            t2932 = t2930 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t2930 + 351747 * t2931 - 1033923 * t2932 - 1151495 * t2934 - 33 + (1552661 * t2932 + 334305 * t2934 + 3399) * t2929) * np.cos((2 * phi1))

        if Bindx == 169:
            t2952 = np.cos(phi)
            t2951 = t2952 ** 2
            t2955 = t2951 ** 2
            t2954 = t2952 * t2951
            t2957 = t2954 ** 2
            t2959 = t2955 ** 2
            t2956 = t2952 * t2955
            t2961 = t2956 ** 2
            t2963 = t2957 ** 2
            t2958 = t2952 * t2957
            t2965 = t2958 ** 2
            t2968 = 2 - 58 * t2951 + 746 * t2955 - 2930 * t2957 + 5350 * t2959 - 5102 * t2961 + 2478 * t2963 - 486 * t2965
            t2967 = -701 * t2954 + 2191 * t2956 - 3065 * t2958 + (1745 * t2959 + 185 * t2961 - 619 * t2963 + 189 * t2965 + 75) * t2952
            t2953 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.56810e5) * (-(t2967 + t2968) * np.sin((-t2953 + 12 * phi2)) + (t2967 - t2968) * np.sin((t2953 + 12 * phi2))) * ((1 + t2952) ** (-0.1e1 / 0.2e1)) * ((1 - t2952) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t2985 = np.cos(phi)
            t2984 = t2985 ** 2
            t2988 = t2984 ** 2
            t2987 = t2985 * t2984
            t2990 = t2987 ** 2
            t2992 = t2988 ** 2
            t2989 = t2985 * t2988
            t2994 = t2989 ** 2
            t2996 = t2990 ** 2
            t2991 = t2985 * t2990
            t2998 = t2991 ** 2
            t3001 = 10043 * t2984 - 136357 * t2988 + 699343 * t2990 - 1726427 * t2992 + 2214049 * t2994 - 1423815 * t2996 + 363285 * t2998 - 121
            t3000 = 13093 * t2987 - 123587 * t2989 + 551233 * t2991 + (-1303597 * t2992 + 1667615 * t2994 - 1086865 * t2996 + 282555 * t2998 - 447) * t2985
            t2986 = 3 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.209e3) * (-(t3000 - t3001) * np.sin((-t2986 + 6 * phi2)) + (t3000 + t3001) * np.sin((t2986 + 6 * phi2))) * ((1 + t2985) ** (-0.1e1 / 0.2e1)) * ((1 - t2985) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t3010 = np.sin(phi)
            t3008 = t3010 ** 2
            t3002 = np.cos(phi)
            t3003 = t3002 ** 2
            t3004 = t3003 ** 2
            t3006 = t3004 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t3002 * t3008 ** 2 * (-26334 * t3004 - 120175 * t3006 - 99 + (86526 * t3004 + 58995 * t3006 + 3135) * t3003) * np.sin((3 * phi1)) * ((1 + t3002) ** (-0.1e1 / 0.2e1)) * ((1 - t3002) ** (-0.1e1 / 0.2e1))

        if Bindx == 172:
            t3026 = np.cos(phi)
            t3025 = t3026 ** 2
            t3028 = t3026 * t3025
            t3029 = t3025 ** 2
            t3030 = t3026 * t3029
            t3031 = t3028 ** 2
            t3032 = t3026 * t3031
            t3033 = t3029 ** 2
            t3035 = t3030 ** 2
            t3037 = t3031 ** 2
            t3041 = -48 * t3028 + 40 * t3030 + 160 * t3032 + (-360 * t3033 + 272 * t3035 - 72 * t3037 + 8) * t3026
            t3040 = 21 * t3032 ** 2 - 25 * t3025 + 169 * t3029 - 425 * t3031 + 475 * t3033 - 211 * t3035 - 5 * t3037 + 1
            t3027 = 4 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.312455e6) * ((t3040 + t3041) * np.cos((-t3027 + 12 * phi2)) + (t3040 - t3041) * np.cos((t3027 + 12 * phi2)))

        if Bindx == 173:
            t3057 = np.cos(phi)
            t3056 = t3057 ** 2
            t3060 = t3056 ** 2
            t3059 = t3057 * t3056
            t3062 = t3059 ** 2
            t3063 = t3057 * t3062
            t3064 = t3060 ** 2
            t3061 = t3057 * t3060
            t3066 = t3061 ** 2
            t3068 = t3062 ** 2
            t3072 = 345345 * t3063 ** 2 - 2449 * t3056 + 21251 * t3060 - 2509 * t3062 - 338899 * t3064 + 947485 * t3066 - 970255 * t3068 + 31
            t3071 = 64624 * t3059 - 483996 * t3061 + 1573504 * t3063 + (-2522916 * t3064 + 1963280 * t3066 - 592020 * t3068 - 2476) * t3057
            t3058 = 4 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.38e2) * ((t3071 + t3072) * np.cos((-t3058 + 6 * phi2)) + (-t3071 + t3072) * np.cos((t3058 + 6 * phi2)))

        if Bindx == 174:
            t3073 = np.cos(phi)
            t3074 = t3073 ** 2
            t3075 = t3074 ** 2
            t3076 = t3074 * t3075
            t3079 = t3076 ** 2
            t3077 = t3075 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t3075 + 8873 * t3076 - 24491 * t3077 - 24035 * t3079 - 1 + (34523 * t3077 + 6555 * t3079 + 97) * t3074) * np.cos((4 * phi1))

        if Bindx == 175:
            t3097 = np.cos(phi)
            t3096 = t3097 ** 2
            t3100 = t3096 ** 2
            t3099 = t3097 * t3096
            t3102 = t3099 ** 2
            t3104 = t3100 ** 2
            t3101 = t3097 * t3100
            t3106 = t3101 ** 2
            t3108 = t3102 ** 2
            t3103 = t3097 * t3102
            t3110 = t3103 ** 2
            t3113 = -2 + 42 * t3096 - 218 * t3100 + 402 * t3102 - 198 * t3104 - 226 * t3106 + 290 * t3108 - 90 * t3110
            t3112 = -5 * t3099 + 207 * t3101 - 657 * t3103 + (833 * t3104 - 447 * t3106 + 53 * t3108 + 21 * t3110 - 5) * t3097
            t3098 = 5 * phi1
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.6578e4) * (-(t3112 + t3113) * np.sin((-t3098 + 12 * phi2)) + (t3112 - t3113) * np.sin((t3098 + 12 * phi2))) * ((1 + t3097) ** (-0.1e1 / 0.2e1)) * ((1 - t3097) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t3130 = np.cos(phi)
            t3129 = t3130 ** 2
            t3133 = t3129 ** 2
            t3132 = t3130 * t3129
            t3135 = t3132 ** 2
            t3137 = t3133 ** 2
            t3134 = t3130 * t3133
            t3139 = t3134 ** 2
            t3141 = t3135 ** 2
            t3136 = t3130 * t3135
            t3143 = t3136 ** 2
            t3146 = 17175 * t3129 - 222785 * t3133 + 1148347 * t3135 - 2946015 * t3137 + 3989557 * t3139 - 2726075 * t3141 + 740025 * t3143 - 229
            t3145 = -46785 * t3132 + 291903 * t3134 - 673485 * t3136 + (430705 * t3137 + 554829 * t3139 - 904475 * t3141 + 345345 * t3143 + 1963) * t3130
            t3131 = 5 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.5e1) * (-(t3145 - t3146) * np.sin((-t3131 + 6 * phi2)) + (t3145 + t3146) * np.sin((t3131 + 6 * phi2))) * ((1 + t3130) ** (-0.1e1 / 0.2e1)) * ((1 - t3130) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t3155 = np.sin(phi)
            t3152 = t3155 ** 2
            t3153 = t3155 * t3152
            t3147 = np.cos(phi)
            t3148 = t3147 ** 2
            t3149 = t3148 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t3147 * t3153 ** 2 * (-140 * t3148 + 5 + (-2300 * t3148 + 966 + 1725 * t3149) * t3149) * np.sin((5 * phi1)) * ((1 + t3147) ** (-0.1e1 / 0.2e1)) * ((1 - t3147) ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t3171 = np.cos(phi)
            t3170 = t3171 ** 2
            t3173 = t3171 * t3170
            t3174 = t3170 ** 2
            t3175 = t3171 * t3174
            t3176 = t3173 ** 2
            t3177 = t3171 * t3176
            t3178 = t3174 ** 2
            t3180 = t3175 ** 2
            t3182 = t3176 ** 2
            t3186 = -752 * t3173 + 3708 * t3175 - 5760 * t3177 + (2372 * t3178 + 1392 * t3180 - 972 * t3182 + 12) * t3171
            t3185 = 189 * t3177 ** 2 + 435 * t3170 - 1161 * t3174 - 729 * t3176 + 5049 * t3178 - 5079 * t3180 + 1325 * t3182 - 29
            t3172 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3185 + t3186) * np.cos((-t3172 + 12 * phi2)) + (t3185 - t3186) * np.cos((t3172 + 12 * phi2)))

        if Bindx == 179:
            t3202 = np.cos(phi)
            t3201 = t3202 ** 2
            t3203 = t3202 * t3201
            t3204 = t3201 ** 2
            t3205 = t3202 * t3204
            t3206 = t3203 ** 2
            t3207 = t3202 * t3206
            t3208 = t3204 ** 2
            t3210 = t3205 ** 2
            t3212 = t3206 ** 2
            t3216 = 0.3773857e7 / 0.4096e4 * t3203 - 0.60502149e8 / 0.8192e4 * t3205 + 0.55660599e8 / 0.2048e4 * t3207 + (-0.403806469e9 / 0.8192e4 * t3208 + 0.175097505e9 / 0.4096e4 * t3210 - 0.115887915e9 / 0.8192e4 * t3212 - 0.307371e6 / 0.8192e4) * t3202
            t3215 = 0.90135045e8 / 0.16384e5 * t3207 ** 2 - 0.6677337e7 / 0.16384e5 * t3201 + 0.70342893e8 / 0.16384e5 * t3204 - 0.257721753e9 / 0.16384e5 * t3206 + 0.386829927e9 / 0.16384e5 * t3208 - 0.167833875e9 / 0.16384e5 * t3210 - 0.114934105e9 / 0.16384e5 * t3212 + 0.96773e5 / 0.16384e5
            tfunc[..., c] = (t3215 + t3216) * np.cos((6 * phi1 - 6 * phi2)) + (t3215 - t3216) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 180:
            t3217 = np.cos(phi)
            t3218 = t3217 ** 2
            t3219 = t3218 ** 2
            t3220 = t3218 * t3219
            t3223 = t3220 ** 2
            t3221 = t3219 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t3219 + 6371 * t3220 - 15747 * t3221 - 12535 * t3223 - 1 + (19941 * t3221 + 3105 * t3223 + 87) * t3218) * np.cos((6 * phi1))

        if Bindx == 181:
            t3241 = np.cos(phi)
            t3240 = t3241 ** 2
            t3244 = t3240 ** 2
            t3243 = t3241 * t3240
            t3246 = t3243 ** 2
            t3248 = t3244 ** 2
            t3245 = t3241 * t3244
            t3250 = t3245 ** 2
            t3252 = t3246 ** 2
            t3247 = t3241 * t3246
            t3254 = t3247 ** 2
            t3257 = 2 - 18 * t3240 - 14 * t3244 + 270 * t3246 - 522 * t3248 + 314 * t3250 + 22 * t3252 - 54 * t3254
            t3256 = 71 * t3243 - 225 * t3245 + 171 * t3247 + (193 * t3248 - 315 * t3250 + 101 * t3252 + 9 * t3254 - 5) * t3241
            t3242 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.345345e6) * (-(t3256 + t3257) * np.sin((-t3242 + 12 * phi2)) + (t3256 - t3257) * np.sin((t3242 + 12 * phi2))) * ((1 + t3241) ** (-0.1e1 / 0.2e1)) * ((1 - t3241) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t3274 = np.cos(phi)
            t3273 = t3274 ** 2
            t3277 = t3273 ** 2
            t3276 = t3274 * t3273
            t3279 = t3276 ** 2
            t3281 = t3277 ** 2
            t3278 = t3274 * t3277
            t3283 = t3278 ** 2
            t3285 = t3279 ** 2
            t3280 = t3274 * t3279
            t3287 = t3280 ** 2
            t3290 = -441 * t3273 + 28259 * t3277 - 297549 * t3279 + 1106901 * t3281 - 1871947 * t3283 + 1478785 * t3285 - 444015 * t3287 + 7
            t3289 = -70861 * t3276 + 437535 * t3278 - 1183569 * t3280 + (1497881 * t3281 - 717255 * t3283 - 115115 * t3285 + 148005 * t3287 + 3379) * t3274
            t3275 = 7 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.42e2) * (-(t3289 + t3290) * np.sin((-t3275 + 6 * phi2)) + (t3289 - t3290) * np.sin((t3275 + 6 * phi2))) * ((1 + t3274) ** (-0.1e1 / 0.2e1)) * ((1 - t3274) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t3298 = np.sin(phi)
            t3295 = t3298 ** 2
            t3296 = t3295 ** 2
            t3291 = np.cos(phi)
            t3292 = t3291 ** 2
            t3293 = t3292 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t3291 * t3296 ** 2 * (-805 * t3293 - 7 + (1035 * t3293 + 161) * t3292) * np.sin((7 * phi1)) * ((1 + t3291) ** (-0.1e1 / 0.2e1)) * ((1 - t3291) ** (-0.1e1 / 0.2e1))

        if Bindx == 184:
            t3314 = np.cos(phi)
            t3313 = t3314 ** 2
            t3316 = t3314 * t3313
            t3317 = t3313 ** 2
            t3318 = t3314 * t3317
            t3319 = t3316 ** 2
            t3320 = t3314 * t3319
            t3321 = t3317 ** 2
            t3323 = t3318 ** 2
            t3325 = t3319 ** 2
            t3329 = 608 * t3316 - 528 * t3318 - 2112 * t3320 + (3344 * t3321 - 800 * t3323 - 432 * t3325 - 80) * t3314
            t3328 = 63 * t3320 ** 2 - 19 * t3313 - 957 * t3317 + 2805 * t3319 - 1551 * t3321 - 1441 * t3323 + 1081 * t3325 + 19
            t3315 = 8 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.8970e4) * ((t3328 + t3329) * np.cos((-t3315 + 12 * phi2)) + (t3328 - t3329) * np.cos((t3315 + 12 * phi2)))

        if Bindx == 185:
            t3345 = np.cos(phi)
            t3344 = t3345 ** 2
            t3347 = t3345 * t3344
            t3348 = t3344 ** 2
            t3349 = t3345 * t3348
            t3350 = t3347 ** 2
            t3351 = t3345 * t3350
            t3352 = t3348 ** 2
            t3354 = t3349 ** 2
            t3356 = t3350 ** 2
            t3360 = -26848 * t3347 + 59784 * t3349 + 165120 * t3351 + (-719624 * t3352 + 842720 * t3354 - 322920 * t3356 + 1768) * t3345
            t3359 = 94185 * t3351 ** 2 - 17105 * t3344 + 164979 * t3348 - 631173 * t3350 + 1090533 * t3352 - 783955 * t3354 + 82225 * t3356 + 311
            t3346 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.33e2) * ((t3359 + t3360) * np.cos((-t3346 + 6 * phi2)) + (t3359 - t3360) * np.cos((t3346 + 6 * phi2)))

        if Bindx == 186:
            t3361 = np.cos(phi)
            t3362 = t3361 ** 2
            t3363 = t3362 ** 2
            t3364 = t3362 * t3363
            t3367 = t3364 ** 2
            t3365 = t3363 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t3363 + 3753 * t3364 - 7867 * t3365 - 4715 * t3367 - 1 + (8579 * t3365 + 1035 * t3367 + 73) * t3362) * np.cos((8 * phi1))

        if Bindx == 187:
            t3385 = np.cos(phi)
            t3384 = t3385 ** 2
            t3388 = t3384 ** 2
            t3387 = t3385 * t3384
            t3390 = t3387 ** 2
            t3392 = t3388 ** 2
            t3389 = t3385 * t3388
            t3394 = t3389 ** 2
            t3396 = t3390 ** 2
            t3391 = t3385 * t3390
            t3398 = t3391 ** 2
            t3401 = -74 - 518 * t3384 + 5542 * t3388 - 8646 * t3390 - 4686 * t3392 + 14718 * t3394 - 4878 * t3396 - 1458 * t3398
            t3400 = -1677 * t3387 - 3333 * t3389 + 16071 * t3391 + (-12859 * t3392 - 3127 * t3394 + 4313 * t3396 + 189 * t3398 + 423) * t3385
            t3386 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.65e2) * (-(t3400 + t3401) * np.sin((-t3386 + 12 * phi2)) + (t3400 - t3401) * np.sin((t3386 + 12 * phi2))) * ((1 + t3385) ** (-0.1e1 / 0.2e1)) * ((1 - t3385) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t3418 = np.cos(phi)
            t3417 = t3418 ** 2
            t3421 = t3417 ** 2
            t3420 = t3418 * t3417
            t3423 = t3420 ** 2
            t3425 = t3421 ** 2
            t3422 = t3418 * t3421
            t3427 = t3422 ** 2
            t3429 = t3423 ** 2
            t3424 = t3418 * t3423
            t3431 = t3424 ** 2
            t3434 = 3713 * t3417 - 25099 * t3421 + 53301 * t3423 - 5037 * t3425 - 114909 * t3427 + 135495 * t3429 - 47385 * t3431 - 79
            t3433 = -8613 * t3420 + 60183 * t3422 - 183753 * t3424 + (264289 * t3425 - 165455 * t3427 + 20605 * t3429 + 12285 * t3431 + 459) * t3418
            t3419 = 9 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.506e3) * (-(t3433 + t3434) * np.sin((-t3419 + 6 * phi2)) + (t3433 - t3434) * np.sin((t3419 + 6 * phi2))) * ((1 + t3418) ** (-0.1e1 / 0.2e1)) * ((1 - t3418) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t3442 = np.sin(phi)
            t3438 = t3442 ** 2
            t3440 = t3442 * t3438 ** 2
            t3435 = np.cos(phi)
            t3436 = t3435 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t3435 * t3440 ** 2 * (3 + (-50 + 135 * t3436) * t3436) * np.sin((9 * phi1)) * ((1 + t3435) ** (-0.1e1 / 0.2e1)) * ((1 - t3435) ** (-0.1e1 / 0.2e1))

        if Bindx == 190:
            t3458 = np.cos(phi)
            t3457 = t3458 ** 2
            t3460 = t3458 * t3457
            t3461 = t3457 ** 2
            t3462 = t3458 * t3461
            t3463 = t3460 ** 2
            t3464 = t3458 * t3463
            t3465 = t3461 ** 2
            t3467 = t3462 ** 2
            t3469 = t3463 ** 2
            t3473 = 80 * t3460 - 3828 * t3462 + 4224 * t3464 + (3124 * t3465 - 3280 * t3467 - 540 * t3469 + 220) * t3458
            t3472 = 63 * t3464 ** 2 - 527 * t3457 + 2013 * t3461 + 1485 * t3463 - 6765 * t3465 + 1859 * t3467 + 1903 * t3469 - 31
            t3459 = 10 * phi1
            tfunc[..., c] = -0.145e3 / 0.16384e5 * np.sqrt(0.78e2) * ((t3472 + t3473) * np.cos((-t3459 + 12 * phi2)) + (t3472 - t3473) * np.cos((t3459 + 12 * phi2)))

        if Bindx == 191:
            t3489 = np.cos(phi)
            t3488 = t3489 ** 2
            t3491 = t3489 * t3488
            t3492 = t3488 ** 2
            t3493 = t3489 * t3492
            t3494 = t3491 ** 2
            t3495 = t3489 * t3494
            t3496 = t3492 ** 2
            t3498 = t3493 ** 2
            t3500 = t3494 ** 2
            t3504 = -7532 * t3491 + 27822 * t3493 - 34152 * t3495 + (-5714 * t3496 + 36500 * t3498 - 17550 * t3500 + 626) * t3489
            t3503 = 4095 * t3495 ** 2 + 37 * t3488 + 6039 * t3492 - 38331 * t3494 + 81477 * t3496 - 68201 * t3498 + 14885 * t3500 - 1
            t3490 = 10 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.3795e4) * ((t3503 + t3504) * np.cos((-t3490 + 6 * phi2)) + (t3503 - t3504) * np.cos((t3490 + 6 * phi2)))

        if Bindx == 192:
            t3505 = np.cos(phi)
            t3506 = t3505 ** 2
            t3507 = t3506 ** 2
            t3508 = t3506 * t3507
            t3511 = t3508 ** 2
            t3509 = t3507 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t3507 + 1635 * t3508 - 2755 * t3509 - 1175 * t3511 - 1 + (2501 * t3509 + 225 * t3511 + 55) * t3506) * np.cos((10 * phi1))

        if Bindx == 193:
            t3529 = np.cos(phi)
            t3528 = t3529 ** 2
            t3532 = t3528 ** 2
            t3531 = t3529 * t3528
            t3534 = t3531 ** 2
            t3536 = t3532 ** 2
            t3533 = t3529 * t3532
            t3538 = t3533 ** 2
            t3540 = t3534 ** 2
            t3535 = t3529 * t3534
            t3542 = t3535 ** 2
            t3545 = 38 + 1026 * t3528 - 1394 * t3532 - 7062 * t3534 + 10098 * t3536 + 2662 * t3538 - 4774 * t3540 - 594 * t3542
            t3544 = -1199 * t3531 + 6237 * t3533 - 627 * t3535 + (-10637 * t3536 + 4131 * t3538 + 2351 * t3540 + 63 * t3542 - 319) * t3529
            t3530 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.78e2) * (-(t3544 + t3545) * np.sin((-t3530 + 12 * phi2)) + (t3544 - t3545) * np.sin((t3530 + 12 * phi2))) * ((1 + t3529) ** (-0.1e1 / 0.2e1)) * ((1 - t3529) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t3562 = np.cos(phi)
            t3561 = t3562 ** 2
            t3565 = t3561 ** 2
            t3564 = t3562 * t3561
            t3567 = t3564 ** 2
            t3569 = t3565 ** 2
            t3566 = t3562 * t3565
            t3571 = t3566 ** 2
            t3573 = t3567 ** 2
            t3568 = t3562 * t3567
            t3575 = t3568 ** 2
            t3578 = -31 + 837 * t3561 - 6131 * t3565 + 16497 * t3567 - 16749 * t3569 + 671 * t3571 + 8767 * t3573 - 3861 * t3575
            t3577 = 1037 * t3564 + 1341 * t3566 - 14679 * t3568 + (27667 * t3569 - 19881 * t3571 + 3887 * t3573 + 819 * t3575 - 191) * t3562
            t3563 = 11 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.3795e4) * (-(t3577 + t3578) * np.sin((-t3563 + 6 * phi2)) + (t3577 - t3578) * np.sin((t3563 + 6 * phi2))) * ((1 + t3562) ** (-0.1e1 / 0.2e1)) * ((1 - t3562) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t3584 = np.sin(phi)
            t3580 = t3584 ** 2
            t3581 = t3584 * t3580
            t3582 = t3581 ** 2
            t3579 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t3579 * t3582 ** 2 * (9 * t3579 ** 2 - 1) * np.sin((11 * phi1)) * ((1 + t3579) ** (-0.1e1 / 0.2e1)) * ((1 - t3579) ** (-0.1e1 / 0.2e1))

        if Bindx == 196:
            t3600 = np.cos(phi)
            t3599 = t3600 ** 2
            t3601 = t3600 * t3599
            t3602 = t3599 ** 2
            t3603 = t3600 * t3602
            t3604 = t3601 ** 2
            t3605 = t3600 * t3604
            t3606 = t3602 ** 2
            t3608 = t3603 ** 2
            t3610 = t3604 ** 2
            t3614 = -0.19981e5 / 0.512e3 * t3601 + 0.37323e5 / 0.1024e4 * t3603 + 0.37323e5 / 0.256e3 * t3605 + (-0.70499e5 / 0.1024e4 * t3606 - 0.39585e5 / 0.512e3 * t3608 - 0.7047e4 / 0.1024e4 * t3610 - 0.4785e4 / 0.1024e4) * t3600
            t3613 = 0.5481e4 / 0.8192e4 * t3605 ** 2 + 0.154947e6 / 0.8192e4 * t3599 + 0.261261e6 / 0.8192e4 * t3602 - 0.1057485e7 / 0.8192e4 * t3604 - 0.410553e6 / 0.8192e4 * t3606 + 0.908193e6 / 0.8192e4 * t3608 + 0.252967e6 / 0.8192e4 * t3610 + 0.3973e4 / 0.8192e4
            tfunc[..., c] = (t3613 + t3614) * np.cos((12 * phi1 - 12 * phi2)) + (t3613 - t3614) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 197:
            t3630 = np.cos(phi)
            t3629 = t3630 ** 2
            t3632 = t3630 * t3629
            t3633 = t3629 ** 2
            t3634 = t3630 * t3633
            t3635 = t3632 ** 2
            t3636 = t3630 * t3635
            t3637 = t3633 ** 2
            t3639 = t3634 ** 2
            t3641 = t3635 ** 2
            t3645 = -752 * t3632 + 3708 * t3634 - 5760 * t3636 + (2372 * t3637 + 1392 * t3639 - 972 * t3641 + 12) * t3630
            t3644 = 189 * t3636 ** 2 + 435 * t3629 - 1161 * t3633 - 729 * t3635 + 5049 * t3637 - 5079 * t3639 + 1325 * t3641 - 29
            t3631 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3644 + t3645) * np.cos((-t3631 + 6 * phi2)) + (t3644 - t3645) * np.cos((t3631 + 6 * phi2)))

        if Bindx == 198:
            t3646 = np.cos(phi)
            t3647 = t3646 ** 2
            t3648 = t3647 ** 2
            t3649 = t3647 * t3648
            t3652 = t3649 ** 2
            t3650 = t3648 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t3648 + 425 * t3649 - 555 * t3650 - 163 * t3652 - 1 + (411 * t3650 + 27 * t3652 + 33) * t3647) * np.cos((12 * phi1))

        if Bindx == 199:
            t3670 = np.cos(phi)
            t3669 = t3670 ** 2
            t3673 = t3669 ** 2
            t3672 = t3670 * t3669
            t3675 = t3672 ** 2
            t3677 = t3673 ** 2
            t3674 = t3670 * t3673
            t3679 = t3674 ** 2
            t3681 = t3675 ** 2
            t3676 = t3670 * t3675
            t3683 = t3676 ** 2
            t3686 = -6 - 306 * t3669 - 1118 * t3673 + 1430 * t3675 + 2574 * t3677 - 1430 * t3679 - 1066 * t3681 - 78 * t3683
            t3685 = 793 * t3672 + 429 * t3674 - 3003 * t3676 + (-429 * t3677 + 1755 * t3679 + 383 * t3681 + 7 * t3683 + 65) * t3670
            t3671 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.6e1) * (-(t3685 + t3686) * np.sin((-t3671 + 12 * phi2)) + (t3685 - t3686) * np.sin((t3671 + 12 * phi2))) * ((1 - t3670) ** (-0.1e1 / 0.2e1)) * ((1 + t3670) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t3703 = np.cos(phi)
            t3702 = t3703 ** 2
            t3706 = t3702 ** 2
            t3705 = t3703 * t3702
            t3708 = t3705 ** 2
            t3710 = t3706 ** 2
            t3707 = t3703 * t3706
            t3712 = t3707 ** 2
            t3714 = t3708 ** 2
            t3709 = t3703 * t3708
            t3716 = t3709 ** 2
            t3719 = 3 - 9 * t3702 - 89 * t3706 + 347 * t3708 - 423 * t3710 + 149 * t3712 + 61 * t3714 - 39 * t3716
            t3718 = 89 * t3705 - 159 * t3707 - 27 * t3709 + (303 * t3710 - 261 * t3712 + 59 * t3714 + 7 * t3716 - 11) * t3703
            t3704 = 13 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.49335e5) * (-(t3718 + t3719) * np.sin((-t3704 + 6 * phi2)) + (t3718 - t3719) * np.sin((t3704 + 6 * phi2))) * ((1 - t3703) ** (-0.1e1 / 0.2e1)) * ((1 + t3703) ** (-0.1e1 / 0.2e1))

        if Bindx == 201:
            t3726 = np.sin(phi)
            t3721 = t3726 ** 2
            t3722 = t3726 * t3721
            t3724 = t3726 * t3722 ** 2
            t3720 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t3720 * t3724 ** 2 * np.sin((13 * phi1)) * ((1 - t3720) ** (-0.1e1 / 0.2e1)) * ((1 + t3720) ** (-0.1e1 / 0.2e1))

        if Bindx == 202:
            t3741 = np.cos(phi)
            t3740 = t3741 ** 2
            t3743 = t3741 * t3740
            t3744 = t3740 ** 2
            t3745 = t3741 * t3744
            t3747 = t3744 ** 2
            t3749 = t3745 ** 2
            t3746 = t3743 ** 2
            t3751 = t3746 ** 2
            t3752 = t3741 * t3751
            t3755 = 208 * t3743 + 572 * t3745 - 12 * t3752 + (-572 * t3747 - 208 * t3749 + 12) * t3741
            t3754 = t3741 * t3752 - 65 * t3740 - 429 * t3744 - 429 * t3746 + 429 * t3747 + 429 * t3749 + 65 * t3751 - 1
            t3742 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.42e2) * ((t3754 + t3755) * np.cos((-t3742 + 12 * phi2)) + (t3754 - t3755) * np.cos((t3742 + 12 * phi2)))

        if Bindx == 203:
            t3771 = np.cos(phi)
            t3787 = -6 * t3771
            t3770 = t3771 ** 2
            t3773 = t3771 * t3770
            t3774 = t3770 ** 2
            t3775 = t3771 * t3774
            t3776 = t3773 ** 2
            t3777 = t3771 * t3776
            t3778 = t3774 ** 2
            t3780 = t3775 ** 2
            t3782 = t3776 ** 2
            t3786 = t3782 * t3787 + 4 * t3773 + 38 * t3775 - 72 * t3777 + t3787 + (38 * t3778 + 4 * t3780) * t3771
            t3785 = t3777 ** 2 + 11 * t3770 - 39 * t3774 + 27 * t3776 + 27 * t3778 - 39 * t3780 + 11 * t3782 + 1
            t3772 = 14 * phi1
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.345345e6) * ((t3785 + t3786) * np.cos((-t3772 + 6 * phi2)) + (t3785 - t3786) * np.cos((t3772 + 6 * phi2)))

        if Bindx == 204:
            t3788 = np.cos(phi)
            t3789 = t3788 ** 2
            t3790 = t3789 ** 2
            t3791 = t3789 * t3790
            t3794 = t3791 ** 2
            t3792 = t3790 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t3790 + 35 * t3791 - 35 * t3792 - 7 * t3794 - 1 + (21 * t3792 + t3794 + 7) * t3789)

        if Bindx == 205:
            tfunc[..., c] = 0

        if Bindx == 206:
            tfunc[..., c] = 0

        if Bindx == 207:
            t3813 = np.cos(phi)
            t3812 = t3813 ** 2
            t3814 = t3813 * t3812
            t3815 = t3812 ** 2
            t3816 = t3813 * t3815
            t3817 = t3814 ** 2
            t3818 = t3813 * t3817
            t3819 = t3815 ** 2
            t3821 = t3816 ** 2
            t3823 = t3817 ** 2
            t3825 = t3818 ** 2
            t3829 = -1414 * t3814 + 13650 * t3816 - 57726 * t3818 + (124798 * t3819 - 144210 * t3821 + 84870 * t3823 - 20010 * t3825 + 42) * t3813
            t3828 = 714 * t3812 - 12082 * t3815 + 78722 * t3817 + 451582 * t3821 - 448270 * t3823 + 233910 * t3825 - 7 + (-254544 - 50025 * t3819) * t3819
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.92378e5) * ((-t3828 + t3829) * np.sin((phi1 - 6 * phi2)) + (t3828 + t3829) * np.sin((phi1 + 6 * phi2))) * ((1 + t3813) ** (-0.1e1 / 0.2e1)) * ((1 - t3813) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t3847 = np.cos(phi)
            t3846 = t3847 ** 2
            t3848 = t3847 * t3846
            t3849 = t3846 ** 2
            t3850 = t3847 * t3849
            t3851 = t3848 ** 2
            t3852 = t3847 * t3851
            t3853 = t3849 ** 2
            t3855 = t3850 ** 2
            t3857 = t3851 ** 2
            t3859 = t3852 ** 2
            t3863 = 188 * t3848 - 876 * t3850 + 1980 * t3852 + (-2500 * t3853 + 1812 * t3855 - 708 * t3857 + 116 * t3859 - 12) * t3847
            t3862 = 48 * t3846 - 412 * t3849 + 1520 * t3851 + 3536 * t3855 - 2428 * t3857 + 912 * t3859 - 1 + (-3030 - 145 * t3853) * t3853
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.780045e6) * ((t3862 + t3863) * np.sin((phi1 - 12 * phi2)) + (-t3862 + t3863) * np.sin((phi1 + 12 * phi2))) * ((1 + t3847) ** (-0.1e1 / 0.2e1)) * ((1 - t3847) ** (-0.1e1 / 0.2e1))

        if Bindx == 209:
            t3880 = np.cos(phi)
            t3879 = t3880 ** 2
            t3883 = t3879 ** 2
            t3882 = t3880 * t3879
            t3885 = t3882 ** 2
            t3887 = t3883 ** 2
            t3884 = t3880 * t3883
            t3889 = t3884 ** 2
            t3891 = t3885 ** 2
            t3886 = t3880 * t3885
            t3893 = t3886 ** 2
            t3896 = 600 * t3879 - 9554 * t3883 + 55972 * t3885 - 153962 * t3887 + 215280 * t3889 - 148350 * t3891 + 40020 * t3893 - 6
            t3895 = 2763 * t3882 - 26851 * t3884 + 116355 * t3886 + (-261809 * t3887 + 318665 * t3889 - 199065 * t3891 + 50025 * t3893 - 83) * t3880
            t3881 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.19019e5) * ((-t3895 + t3896) * np.cos((-t3881 + 6 * phi2)) + (t3895 + t3896) * np.cos((t3881 + 6 * phi2)))

        if Bindx == 210:
            t3913 = np.cos(phi)
            t3912 = t3913 ** 2
            t3915 = t3913 * t3912
            t3916 = t3912 ** 2
            t3917 = t3913 * t3916
            t3918 = t3915 ** 2
            t3919 = t3913 * t3918
            t3920 = t3916 ** 2
            t3922 = t3917 ** 2
            t3924 = t3918 ** 2
            t3926 = t3919 ** 2
            t3929 = 279 * t3915 - 5 * t3917 - 3285 * t3919 + (8485 * t3920 - 9355 * t3922 + 4921 * t3924 - 1015 * t3926 - 25) * t3913
            t3928 = 12 - 552 * t3912 + 4204 * t3916 - 13160 * t3918 + 21220 * t3920 - 18712 * t3922 + 8612 * t3924 - 1624 * t3926
            t3914 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t3928 - t3929) * np.cos((-t3914 + 12 * phi2)) + (t3928 + t3929) * np.cos((t3914 + 12 * phi2)))

        if Bindx == 211:
            t3947 = np.cos(phi)
            t3946 = t3947 ** 2
            t3949 = t3947 * t3946
            t3950 = t3946 ** 2
            t3951 = t3947 * t3950
            t3952 = t3949 ** 2
            t3953 = t3947 * t3952
            t3954 = t3950 ** 2
            t3956 = t3951 ** 2
            t3958 = t3952 ** 2
            t3960 = t3953 ** 2
            t3964 = 54794 * t3949 - 516046 * t3951 + 2153714 * t3953 + (-4647426 * t3954 + 5414430 * t3956 - 3238170 * t3958 + 780390 * t3960 - 1686) * t3947
            t3963 = 4606 * t3946 - 79694 * t3950 + 559206 * t3952 + 4046298 * t3956 - 4565730 * t3958 + 2699970 * t3960 - 47 + (-2014284 - 650325 * t3954) * t3954
            t3948 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2926e4) * (-(t3963 + t3964) * np.sin((-t3948 + 6 * phi2)) + (-t3963 + t3964) * np.sin((t3948 + 6 * phi2))) * ((1 + t3947) ** (-0.1e1 / 0.2e1)) * ((1 - t3947) ** (-0.1e1 / 0.2e1))

        if Bindx == 212:
            t3982 = np.cos(phi)
            t3981 = t3982 ** 2
            t3984 = t3982 * t3981
            t3985 = t3981 ** 2
            t3986 = t3982 * t3985
            t3987 = t3984 ** 2
            t3988 = t3982 * t3987
            t3989 = t3985 ** 2
            t3991 = t3986 ** 2
            t3993 = t3987 ** 2
            t3995 = t3988 ** 2
            t3999 = 1036 * t3984 - 6716 * t3986 + 20140 * t3988 + (-32020 * t3989 + 28100 * t3991 - 12916 * t3993 + 2436 * t3995 - 60) * t3982
            t3998 = -572 * t3981 + 3904 * t3985 - 10380 * t3987 - 4788 * t3991 - 3448 * t3993 + 3836 * t3995 + 13 + (12450 - 1015 * t3989) * t3989
            t3983 = 3 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.85215e5) * (-(t3998 + t3999) * np.sin((-t3983 + 12 * phi2)) + (-t3998 + t3999) * np.sin((t3983 + 12 * phi2))) * ((1 + t3982) ** (-0.1e1 / 0.2e1)) * ((1 - t3982) ** (-0.1e1 / 0.2e1))

        if Bindx == 213:
            t4016 = np.cos(phi)
            t4015 = t4016 ** 2
            t4018 = t4016 * t4015
            t4019 = t4015 ** 2
            t4020 = t4016 * t4019
            t4021 = t4018 ** 2
            t4022 = t4016 * t4021
            t4023 = t4019 ** 2
            t4025 = t4020 ** 2
            t4027 = t4021 ** 2
            t4029 = t4022 ** 2
            t4032 = 1509 * t4018 + 23089 * t4020 - 336111 * t4022 + (1383519 * t4023 - 2498145 * t4025 + 2076555 * t4027 - 650325 * t4029 - 91) * t4016
            t4031 = -15416 * t4015 + 234884 * t4019 - 1344056 * t4021 + 3687084 * t4023 - 5235720 * t4025 + 3713580 * t4027 - 1040520 * t4029 + 164
            t4017 = 4 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.462e3) * ((t4031 - t4032) * np.cos((-t4017 + 6 * phi2)) + (t4031 + t4032) * np.cos((t4017 + 6 * phi2)))

        if Bindx == 214:
            t4049 = np.cos(phi)
            t4048 = t4049 ** 2
            t4052 = t4048 ** 2
            t4051 = t4049 * t4048
            t4054 = t4051 ** 2
            t4056 = t4052 ** 2
            t4053 = t4049 * t4052
            t4058 = t4053 ** 2
            t4060 = t4054 ** 2
            t4055 = t4049 * t4054
            t4062 = t4055 ** 2
            t4065 = 8 - 320 * t4048 + 872 * t4052 + 2800 * t4054 - 13800 * t4056 + 20512 * t4058 - 13320 * t4060 + 3248 * t4062
            t4064 = 2091 * t4051 - 9815 * t4053 + 20355 * t4055 + (-19805 * t4056 + 7241 * t4058 + 1099 * t4060 - 1015 * t4062 - 151) * t4049
            t4050 = 4 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.1495e4) * ((t4064 + t4065) * np.cos((-t4050 + 12 * phi2)) + (-t4064 + t4065) * np.cos((t4050 + 12 * phi2)))

        if Bindx == 215:
            t4083 = np.cos(phi)
            t4082 = t4083 ** 2
            t4085 = t4083 * t4082
            t4086 = t4082 ** 2
            t4087 = t4083 * t4086
            t4088 = t4085 ** 2
            t4089 = t4083 * t4088
            t4090 = t4086 ** 2
            t4092 = t4087 ** 2
            t4094 = t4088 ** 2
            t4096 = t4089 ** 2
            t4100 = -179930 * t4085 + 1640574 * t4087 - 6840290 * t4089 + (15081330 * t4090 - 18193230 * t4092 + 11347050 * t4094 - 2861430 * t4096 + 5926) * t4083
            t4099 = -19350 * t4082 + 258470 * t4086 - 1137694 * t4088 + 596574 * t4092 - 4440150 * t4094 + 4440150 * t4096 + 215 + (1732500 - 1430715 * t4090) * t4090
            t4084 = 5 * phi1
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.210e3) * (-(-t4099 + t4100) * np.sin((-t4084 + 6 * phi2)) + (t4099 + t4100) * np.sin((t4084 + 6 * phi2))) * ((1 + t4083) ** (-0.1e1 / 0.2e1)) * ((1 - t4083) ** (-0.1e1 / 0.2e1))

        if Bindx == 216:
            t4118 = np.cos(phi)
            t4117 = t4118 ** 2
            t4120 = t4118 * t4117
            t4121 = t4117 ** 2
            t4122 = t4118 * t4121
            t4123 = t4120 ** 2
            t4124 = t4118 * t4123
            t4125 = t4121 ** 2
            t4127 = t4122 ** 2
            t4129 = t4123 ** 2
            t4131 = t4124 ** 2
            t4135 = 508 * t4120 - 1836 * t4122 + 2332 * t4124 + (412 * t4125 - 3564 * t4127 + 3004 * t4129 - 812 * t4131 - 44) * t4118
            t4134 = -36 * t4117 + 664 * t4121 - 3380 * t4123 - 7724 * t4127 + 3568 * t4129 - 252 * t4131 + 1 + (7362 - 203 * t4125) * t4125
            t4119 = 5 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.3289e4) * (-(-t4134 + t4135) * np.sin((-t4119 + 12 * phi2)) + (t4134 + t4135) * np.sin((t4119 + 12 * phi2))) * ((1 + t4118) ** (-0.1e1 / 0.2e1)) * ((1 - t4118) ** (-0.1e1 / 0.2e1))

        if Bindx == 217:
            t4152 = np.cos(phi)
            t4151 = t4152 ** 2
            t4154 = t4151 ** 2
            t4153 = t4152 * t4151
            t4156 = t4153 ** 2
            t4158 = t4154 ** 2
            t4155 = t4152 * t4154
            t4160 = t4155 ** 2
            t4162 = t4156 ** 2
            t4157 = t4152 * t4156
            t4164 = t4157 ** 2
            t4167 = 0.754509e6 / 0.2048e4 * t4151 - 0.44351979e8 / 0.8192e4 * t4154 + 0.130558267e9 / 0.4096e4 * t4156 - 0.763257231e9 / 0.8192e4 * t4158 + 0.145762155e9 / 0.1024e4 * t4160 - 0.888572685e9 / 0.8192e4 * t4162 + 0.133056495e9 / 0.4096e4 * t4164 - 0.35929e5 / 0.8192e4
            t4166 = 0.30427957e8 / 0.16384e5 * t4153 - 0.219938397e9 / 0.16384e5 * t4155 + 0.631038573e9 / 0.16384e5 * t4157 + (-0.732763647e9 / 0.16384e5 * t4158 + 0.96351255e8 / 0.16384e5 * t4160 + 0.417522105e9 / 0.16384e5 * t4162 - 0.221760825e9 / 0.16384e5 * t4164 - 0.1130973e7 / 0.16384e5) * t4152
            tfunc[..., c] = (t4166 + t4167) * np.cos((6 * phi1 - 6 * phi2)) + (-t4166 + t4167) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 218:
            t4184 = np.cos(phi)
            t4183 = t4184 ** 2
            t4187 = t4183 ** 2
            t4186 = t4184 * t4183
            t4189 = t4186 ** 2
            t4191 = t4187 ** 2
            t4188 = t4184 * t4187
            t4193 = t4188 ** 2
            t4195 = t4189 ** 2
            t4190 = t4184 * t4189
            t4197 = t4190 ** 2
            t4200 = -4 + 120 * t4183 - 996 * t4187 + 2936 * t4189 - 3276 * t4191 + 456 * t4193 + 1460 * t4195 - 696 * t4197
            t4199 = -223 * t4186 - 3 * t4188 + 2205 * t4190 + (-4717 * t4191 + 3603 * t4193 - 753 * t4195 - 145 * t4197 + 33) * t4184
            t4185 = 6 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4199 + t4200) * np.cos((-t4185 + 12 * phi2)) + (t4199 + t4200) * np.cos((t4185 + 12 * phi2)))

        if Bindx == 219:
            t4218 = np.cos(phi)
            t4217 = t4218 ** 2
            t4220 = t4218 * t4217
            t4221 = t4217 ** 2
            t4222 = t4218 * t4221
            t4223 = t4220 ** 2
            t4224 = t4218 * t4223
            t4225 = t4221 ** 2
            t4227 = t4222 ** 2
            t4229 = t4223 ** 2
            t4231 = t4224 ** 2
            t4235 = 48258 * t4220 - 533190 * t4222 + 2745482 * t4224 + (-7161418 * t4225 + 9800070 * t4227 - 6718530 * t4229 + 1820910 * t4231 - 1582) * t4218
            t4234 = -39702 * t4217 + 501998 * t4221 - 2388638 * t4223 - 5621154 * t4227 + 1862770 * t4229 + 995670 * t4231 + 509 + (5338872 - 650325 * t4225) * t4225
            t4219 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.22e2) * (-(t4234 + t4235) * np.sin((-t4219 + 6 * phi2)) + (-t4234 + t4235) * np.sin((t4219 + 6 * phi2))) * ((1 + t4218) ** (-0.1e1 / 0.2e1)) * ((1 - t4218) ** (-0.1e1 / 0.2e1))

        if Bindx == 220:
            t4253 = np.cos(phi)
            t4252 = t4253 ** 2
            t4255 = t4253 * t4252
            t4256 = t4252 ** 2
            t4257 = t4253 * t4256
            t4258 = t4255 ** 2
            t4259 = t4253 * t4258
            t4260 = t4256 ** 2
            t4262 = t4257 ** 2
            t4264 = t4258 ** 2
            t4266 = t4259 ** 2
            t4270 = 92 * t4255 - 1740 * t4257 + 5852 * t4259 + (-7524 * t4260 + 3060 * t4262 + 1052 * t4264 - 812 * t4266 + 20) * t4253
            t4269 = 216 * t4252 - 1252 * t4256 + 2200 * t4258 - 5368 * t4262 + 5036 * t4264 - 1272 * t4266 - 9 + (594 - 145 * t4260) * t4260
            t4254 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.31395e5) * (-(-t4269 + t4270) * np.sin((-t4254 + 12 * phi2)) + (t4269 + t4270) * np.sin((t4254 + 12 * phi2))) * ((1 + t4253) ** (-0.1e1 / 0.2e1)) * ((1 - t4253) ** (-0.1e1 / 0.2e1))

        if Bindx == 221:
            t4287 = np.cos(phi)
            t4286 = t4287 ** 2
            t4290 = t4286 ** 2
            t4289 = t4287 * t4286
            t4292 = t4289 ** 2
            t4294 = t4290 ** 2
            t4291 = t4287 * t4290
            t4296 = t4291 ** 2
            t4298 = t4292 ** 2
            t4293 = t4287 * t4292
            t4300 = t4293 ** 2
            t4303 = 560 * t4286 - 2632 * t4290 - 20496 * t4292 + 140776 * t4294 - 300720 * t4296 + 273000 * t4298 - 90480 * t4300 - 8
            t4302 = -10731 * t4289 + 73633 * t4291 - 222055 * t4293 + (316967 * t4294 - 185185 * t4296 - 1365 * t4298 + 28275 * t4300 + 461) * t4287
            t4288 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.253e3) * ((t4302 + t4303) * np.cos((-t4288 + 6 * phi2)) + (-t4302 + t4303) * np.cos((t4288 + 6 * phi2)))

        if Bindx == 222:
            t4320 = np.cos(phi)
            t4319 = t4320 ** 2
            t4323 = t4319 ** 2
            t4322 = t4320 * t4319
            t4325 = t4322 ** 2
            t4327 = t4323 ** 2
            t4324 = t4320 * t4323
            t4329 = t4324 ** 2
            t4331 = t4325 ** 2
            t4326 = t4320 * t4325
            t4333 = t4326 ** 2
            t4336 = -16 + 256 * t4319 - 592 * t4323 - 1760 * t4325 + 6864 * t4327 - 6336 * t4329 + 656 * t4331 + 928 * t4333
            t4335 = -587 * t4322 + 3047 * t4324 - 4587 * t4326 + (-11 * t4327 + 4295 * t4329 - 2027 * t4331 - 145 * t4333 + 15) * t4320
            t4321 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2730e4) * ((t4335 + t4336) * np.cos((-t4321 + 12 * phi2)) + (-t4335 + t4336) * np.cos((t4321 + 12 * phi2)))

        if Bindx == 223:
            t4354 = np.cos(phi)
            t4353 = t4354 ** 2
            t4356 = t4354 * t4353
            t4357 = t4353 ** 2
            t4358 = t4354 * t4357
            t4359 = t4356 ** 2
            t4360 = t4354 * t4359
            t4361 = t4357 ** 2
            t4363 = t4358 ** 2
            t4365 = t4359 ** 2
            t4367 = t4360 ** 2
            t4371 = -10222 * t4356 + 44042 * t4358 - 35302 * t4360 + (-157914 * t4361 + 395190 * t4363 - 338130 * t4365 + 101790 * t4367 + 546) * t4354
            t4370 = -3658 * t4353 + 42674 * t4357 - 208066 * t4359 - 594046 * t4363 + 310830 * t4365 - 15990 * t4367 + 59 + (496472 - 28275 * t4361) * t4361
            t4355 = 9 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.10626e5) * (-(t4370 + t4371) * np.sin((-t4355 + 6 * phi2)) + (-t4370 + t4371) * np.sin((t4355 + 6 * phi2))) * ((1 - t4354) ** (-0.1e1 / 0.2e1)) * ((1 + t4354) ** (-0.1e1 / 0.2e1))

        if Bindx == 224:
            t4389 = np.cos(phi)
            t4388 = t4389 ** 2
            t4391 = t4389 * t4388
            t4392 = t4388 ** 2
            t4393 = t4389 * t4392
            t4394 = t4391 ** 2
            t4395 = t4389 * t4394
            t4396 = t4392 ** 2
            t4398 = t4393 ** 2
            t4400 = t4394 ** 2
            t4402 = t4395 ** 2
            t4406 = -7876 * t4391 + 23636 * t4393 - 3652 * t4395 + (-63492 * t4396 + 72084 * t4398 - 13956 * t4400 - 7308 * t4402 + 564) * t4389
            t4405 = -1416 * t4388 - 5196 * t4392 + 44088 * t4394 + 28776 * t4398 + 31364 * t4400 - 19096 * t4402 + 177 + (-77682 - 1015 * t4396) * t4396
            t4390 = 9 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(-t4405 + t4406) * np.sin((-t4390 + 12 * phi2)) + (t4405 + t4406) * np.sin((t4390 + 12 * phi2))) * ((1 - t4389) ** (-0.1e1 / 0.2e1)) * ((1 + t4389) ** (-0.1e1 / 0.2e1))

        if Bindx == 225:
            t4423 = np.cos(phi)
            t4422 = t4423 ** 2
            t4426 = t4422 ** 2
            t4425 = t4423 * t4422
            t4428 = t4425 ** 2
            t4430 = t4426 ** 2
            t4427 = t4423 * t4426
            t4432 = t4427 ** 2
            t4434 = t4428 ** 2
            t4429 = t4423 * t4428
            t4436 = t4429 ** 2
            t4439 = -6 + 312 * t4422 - 2386 * t4426 + 6116 * t4428 - 3562 * t4430 - 7728 * t4432 + 11778 * t4434 - 4524 * t4436
            t4438 = 511 * t4425 - 4343 * t4427 + 15175 * t4429 + (-24125 * t4430 + 16549 * t4432 - 2613 * t4434 - 1131 * t4436 - 23) * t4423
            t4424 = 10 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.1771e4) * ((-t4438 + t4439) * np.cos((-t4424 + 6 * phi2)) + (t4438 + t4439) * np.cos((t4424 + 6 * phi2)))

        if Bindx == 226:
            t4456 = np.cos(phi)
            t4455 = t4456 ** 2
            t4459 = t4455 ** 2
            t4458 = t4456 * t4455
            t4461 = t4458 ** 2
            t4463 = t4459 ** 2
            t4460 = t4456 * t4459
            t4465 = t4460 ** 2
            t4467 = t4461 ** 2
            t4462 = t4456 * t4461
            t4469 = t4462 ** 2
            t4472 = 52 + 104 * t4455 - 4076 * t4459 + 10472 * t4461 - 1188 * t4463 - 13992 * t4465 + 7004 * t4467 + 1624 * t4469
            t4471 = 1819 * t4458 + 143 * t4460 - 13233 * t4462 + (16577 * t4463 + 289 * t4465 - 5131 * t4467 - 203 * t4469 - 261) * t4456
            t4457 = 10 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.390e3) * ((t4471 + t4472) * np.cos((-t4457 + 12 * phi2)) + (-t4471 + t4472) * np.cos((t4457 + 12 * phi2)))

        if Bindx == 227:
            t4490 = np.cos(phi)
            t4489 = t4490 ** 2
            t4492 = t4490 * t4489
            t4493 = t4489 ** 2
            t4494 = t4490 * t4493
            t4495 = t4492 ** 2
            t4496 = t4490 * t4495
            t4497 = t4493 ** 2
            t4499 = t4494 ** 2
            t4501 = t4495 ** 2
            t4503 = t4496 ** 2
            t4507 = -778 * t4492 + 3726 * t4494 - 7314 * t4496 + (4642 * t4497 + 3234 * t4499 - 5478 * t4501 + 1914 * t4503 + 54) * t4490
            t4506 = 42 * t4489 + 294 * t4493 - 3678 * t4495 - 15714 * t4499 + 9322 * t4501 - 1386 * t4503 - 1 + (11556 - 435 * t4497) * t4497
            t4491 = 11 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.230230e6) * (-(t4506 + t4507) * np.sin((-t4491 + 6 * phi2)) + (-t4506 + t4507) * np.sin((t4491 + 6 * phi2))) * ((1 - t4490) ** (-0.1e1 / 0.2e1)) * ((1 + t4490) ** (-0.1e1 / 0.2e1))

        if Bindx == 228:
            t4525 = np.cos(phi)
            t4524 = t4525 ** 2
            t4527 = t4525 * t4524
            t4528 = t4524 ** 2
            t4529 = t4525 * t4528
            t4530 = t4527 ** 2
            t4531 = t4525 * t4530
            t4532 = t4528 ** 2
            t4534 = t4529 ** 2
            t4536 = t4530 ** 2
            t4538 = t4531 ** 2
            t4542 = 6356 * t4527 + 40092 * t4529 - 126412 * t4531 + (56628 * t4532 + 87516 * t4534 - 52844 * t4536 - 8932 * t4538 - 2404) * t4525
            t4541 = 4356 * t4524 - 35464 * t4528 + 33748 * t4530 - 148148 * t4534 + 17056 * t4536 + 31836 * t4538 + 363 + (95238 + 1015 * t4532) * t4532
            t4526 = 11 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.3e1) * (-(t4541 + t4542) * np.sin((-t4526 + 12 * phi2)) + (-t4541 + t4542) * np.sin((t4526 + 12 * phi2))) * ((1 + t4525) ** (-0.1e1 / 0.2e1)) * ((1 - t4525) ** (-0.1e1 / 0.2e1))

        if Bindx == 229:
            t4559 = np.cos(phi)
            t4558 = t4559 ** 2
            t4562 = t4558 ** 2
            t4561 = t4559 * t4558
            t4564 = t4561 ** 2
            t4566 = t4562 ** 2
            t4563 = t4559 * t4562
            t4568 = t4563 ** 2
            t4570 = t4564 ** 2
            t4565 = t4559 * t4564
            t4572 = t4565 ** 2
            t4575 = -4 + 120 * t4558 - 996 * t4562 + 2936 * t4564 - 3276 * t4566 + 456 * t4568 + 1460 * t4570 - 696 * t4572
            t4574 = -223 * t4561 - 3 * t4563 + 2205 * t4565 + (-4717 * t4566 + 3603 * t4568 - 753 * t4570 - 145 * t4572 + 33) * t4559
            t4560 = 12 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4574 + t4575) * np.cos((-t4560 + 6 * phi2)) + (t4574 + t4575) * np.cos((t4560 + 6 * phi2)))

        if Bindx == 230:
            t4592 = np.cos(phi)
            t4591 = t4592 ** 2
            t4594 = t4591 ** 2
            t4593 = t4592 * t4591
            t4596 = t4593 ** 2
            t4598 = t4594 ** 2
            t4595 = t4592 * t4594
            t4600 = t4595 ** 2
            t4602 = t4596 ** 2
            t4597 = t4592 * t4596
            t4604 = t4597 ** 2
            t4607 = -0.5673e4 / 0.128e3 * t4591 + 0.117273e6 / 0.1024e4 * t4594 + 0.155155e6 / 0.512e3 * t4596 - 0.678249e6 / 0.1024e4 * t4598 - 0.13299e5 / 0.256e3 * t4600 + 0.329251e6 / 0.1024e4 * t4602 + 0.18879e5 / 0.512e3 * t4604 - 0.1891e4 / 0.1024e4
            t4606 = 0.292981e6 / 0.8192e4 * t4593 - 0.2806089e7 / 0.8192e4 * t4595 + 0.1476189e7 / 0.8192e4 * t4597 + (0.4738877e7 / 0.8192e4 * t4598 - 0.2690025e7 / 0.8192e4 * t4600 - 0.1229739e7 / 0.8192e4 * t4602 - 0.31465e5 / 0.8192e4 * t4604 + 0.122295e6 / 0.8192e4) * t4592
            tfunc[..., c] = (t4606 + t4607) * np.cos((12 * phi1 - 12 * phi2)) + (-t4606 + t4607) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 231:
            t4625 = np.cos(phi)
            t4624 = t4625 ** 2
            t4627 = t4625 * t4624
            t4628 = t4624 ** 2
            t4629 = t4625 * t4628
            t4630 = t4627 ** 2
            t4631 = t4625 * t4630
            t4632 = t4628 ** 2
            t4634 = t4629 ** 2
            t4636 = t4630 ** 2
            t4638 = t4631 ** 2
            t4642 = 482 * t4627 - 3222 * t4629 + 7274 * t4631 + (-6586 * t4632 + 1062 * t4634 + 1742 * t4636 - 754 * t4638 + 2) * t4625
            t4641 = 342 * t4624 - 1318 * t4628 + 734 * t4630 - 7582 * t4634 + 4982 * t4636 - 918 * t4638 - 19 + (3924 - 145 * t4632) * t4632
            t4626 = 13 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.32890e5) * (-(-t4641 + t4642) * np.sin((-t4626 + 6 * phi2)) + (t4641 + t4642) * np.sin((t4626 + 6 * phi2))) * ((1 - t4625) ** (-0.1e1 / 0.2e1)) * ((1 + t4625) ** (-0.1e1 / 0.2e1))

        if Bindx == 232:
            t4660 = np.cos(phi)
            t4659 = t4660 ** 2
            t4662 = t4660 * t4659
            t4663 = t4659 ** 2
            t4664 = t4660 * t4663
            t4665 = t4662 ** 2
            t4666 = t4660 * t4665
            t4667 = t4663 ** 2
            t4669 = t4664 ** 2
            t4671 = t4665 ** 2
            t4673 = t4666 ** 2
            t4677 = 5588 * t4662 - 17316 * t4664 - 16588 * t4666 + (47476 * t4667 - 2340 * t4669 - 16172 * t4671 - 1508 * t4673 + 860) * t4660
            t4676 = 3276 * t4659 + 208 * t4663 - 31460 * t4665 + 31460 * t4669 - 19864 * t4671 - 6732 * t4673 + 91 + (23166 - 145 * t4667) * t4667
            t4661 = 13 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.21e2) * (-(-t4676 + t4677) * np.sin((-t4661 + 12 * phi2)) + (t4676 + t4677) * np.sin((t4661 + 12 * phi2))) * ((1 - t4660) ** (-0.1e1 / 0.2e1)) * ((1 + t4660) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t4694 = np.cos(phi)
            t4693 = t4694 ** 2
            t4697 = t4693 ** 2
            t4696 = t4694 * t4693
            t4699 = t4696 ** 2
            t4701 = t4697 ** 2
            t4698 = t4694 * t4697
            t4703 = t4698 ** 2
            t4705 = t4699 ** 2
            t4700 = t4694 * t4699
            t4707 = t4700 ** 2
            t4710 = 2 - 8 * t4693 - 58 * t4697 + 244 * t4699 - 306 * t4701 + 112 * t4703 + 42 * t4705 - 28 * t4707
            t4709 = -63 * t4696 + 119 * t4698 + 9 * t4700 + (-211 * t4701 + 187 * t4703 - 43 * t4705 - 5 * t4707 + 7) * t4694
            t4695 = 14 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.476905e6) * ((-t4709 + t4710) * np.cos((-t4695 + 6 * phi2)) + (t4709 + t4710) * np.cos((t4695 + 6 * phi2)))

        if Bindx == 234:
            t4727 = np.cos(phi)
            t4726 = t4727 ** 2
            t4730 = t4726 ** 2
            t4729 = t4727 * t4726
            t4732 = t4729 ** 2
            t4734 = t4730 ** 2
            t4731 = t4727 * t4730
            t4736 = t4731 ** 2
            t4738 = t4732 ** 2
            t4733 = t4727 * t4732
            t4740 = t4733 ** 2
            t4743 = -4 - 200 * t4726 - 676 * t4730 + 1144 * t4732 + 1716 * t4734 - 1144 * t4736 - 780 * t4738 - 56 * t4740
            t4742 = -507 * t4729 - 143 * t4731 + 2145 * t4733 + (143 * t4734 - 1313 * t4736 - 277 * t4738 - 5 * t4740 - 43) * t4727
            t4728 = 14 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1218e4) * ((-t4742 + t4743) * np.cos((-t4728 + 12 * phi2)) + (t4742 + t4743) * np.cos((t4728 + 12 * phi2)))

        if Bindx == 235:
            t4759 = np.cos(phi)
            t4775 = 6 * t4759
            t4758 = t4759 ** 2
            t4761 = t4759 * t4758
            t4762 = t4758 ** 2
            t4763 = t4759 * t4762
            t4764 = t4761 ** 2
            t4765 = t4759 * t4764
            t4766 = t4762 ** 2
            t4768 = t4763 ** 2
            t4770 = t4764 ** 2
            t4774 = t4770 * t4775 - 4 * t4761 - 38 * t4763 + 72 * t4765 + t4775 + (-38 * t4766 - 4 * t4768) * t4759
            t4773 = -t4765 ** 2 - 11 * t4758 + 39 * t4762 - 27 * t4764 - 27 * t4766 + 39 * t4768 - 11 * t4770 - 1
            t4760 = 15 * phi1
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.572286e6) * np.sqrt((1 - t4759)) * np.sqrt((1 + t4759)) * (-(t4773 + t4774) * np.sin((-t4760 + 6 * phi2)) + (-t4773 + t4774) * np.sin((t4760 + 6 * phi2)))

        if Bindx == 236:
            t4790 = np.cos(phi)
            t4789 = t4790 ** 2
            t4792 = t4790 * t4789
            t4793 = t4789 ** 2
            t4794 = t4790 * t4793
            t4796 = t4793 ** 2
            t4798 = t4794 ** 2
            t4795 = t4792 ** 2
            t4800 = t4795 ** 2
            t4801 = t4790 * t4800
            t4804 = 208 * t4792 + 572 * t4794 - 12 * t4801 + (-572 * t4796 - 208 * t4798 + 12) * t4790
            t4803 = -t4790 * t4801 + 65 * t4789 + 429 * t4793 + 429 * t4795 - 429 * t4796 - 429 * t4798 - 65 * t4800 + 1
            t4791 = 15 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1015e4) * np.sqrt((1 - t4790)) * np.sqrt((1 + t4790)) * (-(-t4803 + t4804) * np.sin((-t4791 + 12 * phi2)) + (t4803 + t4804) * np.sin((t4791 + 12 * phi2)))

        if Bindx == 237:
            t4805 = np.cos(phi)
            t4806 = t4805 ** 2
            t4807 = t4806 ** 2
            t4808 = t4806 * t4807
            t4811 = t4808 ** 2
            t4809 = t4807 ** 2
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.7429e4) * (1988 * t4807 - 8064 * t4808 + 14532 * t4811 + 3 + (17010 + 899 * t4809) * t4809 + (-20608 * t4809 - 5568 * t4811 - 192) * t4806) * np.cos((12 * phi2))

        if Bindx == 238:
            t4814 = np.cos(phi)
            t4815 = t4814 ** 2
            t4816 = t4815 ** 2
            t4817 = t4815 * t4816
            t4820 = t4817 ** 2
            t4818 = t4816 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.25194e5) * (47558 * t4816 - 345366 * t4817 + 2498490 * t4820 + 21 + (1225440 + 310155 * t4818) * t4818 + (-2353130 * t4818 - 1380690 * t4820 - 2478) * t4815) * np.cos((6 * phi2))

        if Bindx == 239:
            t4823 = np.cos(phi)
            t4824 = t4823 ** 2
            t4825 = t4824 ** 2
            t4826 = t4824 * t4825
            t4829 = t4826 ** 2
            t4827 = t4825 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t4829 - 0.672188517e9 / 0.4096e4 * t4826 + 0.160044885e9 / 0.8192e4 * t4825 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t4827) * t4827 + (-0.4798948275e10 / 0.4096e4 * t4829 - 0.6135053925e10 / 0.4096e4 * t4827 - 0.3610035e7 / 0.4096e4) * t4824

        if Bindx == 240:
            t4850 = np.cos(phi)
            t4849 = t4850 ** 2
            t4852 = t4849 ** 2
            t4851 = t4850 * t4849
            t4854 = t4851 ** 2
            t4856 = t4852 ** 2
            t4853 = t4850 * t4852
            t4858 = t4853 ** 2
            t4860 = t4854 ** 2
            t4855 = t4850 * t4854
            t4862 = t4855 ** 2
            t4864 = t4856 ** 2
            t4867 = -9 + 576 * t4849 - 5964 * t4852 + 24192 * t4854 - 51030 * t4856 + 61824 * t4858 - 43596 * t4860 + 16704 * t4862 - 2697 * t4864
            t4866 = -2084 * t4851 + 14084 * t4853 - 46116 * t4855 + (85540 * t4856 - 95116 * t4858 + 63084 * t4860 - 23084 * t4862 + 3596 * t4864 + 96) * t4850
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.437e3) * ((t4866 + t4867) * np.sin((phi1 - 12 * phi2)) + (t4866 - t4867) * np.sin((phi1 + 12 * phi2))) * ((1 + t4850) ** (-0.1e1 / 0.2e1)) * ((1 - t4850) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t4886 = np.cos(phi)
            t4885 = t4886 ** 2
            t4888 = t4885 ** 2
            t4887 = t4886 * t4885
            t4890 = t4887 ** 2
            t4892 = t4888 ** 2
            t4889 = t4886 * t4888
            t4894 = t4889 ** 2
            t4896 = t4890 ** 2
            t4891 = t4886 * t4890
            t4898 = t4891 ** 2
            t4900 = t4892 ** 2
            t4903 = 7434 * t4885 - 142674 * t4888 + 1036098 * t4890 - 3676320 * t4892 + 7059390 * t4894 - 7495470 * t4896 + 4142070 * t4898 - 930465 * t4900 - 63
            t4902 = -97594 * t4887 + 1131214 * t4889 - 5937858 * t4891 + (16667410 * t4892 - 26756590 * t4894 + 24655770 * t4896 - 12146070 * t4898 + 2481240 * t4900 + 2478) * t4886
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.1482e4) * ((t4902 + t4903) * np.sin((phi1 - 6 * phi2)) + (t4902 - t4903) * np.sin((phi1 + 6 * phi2))) * ((1 + t4886) ** (-0.1e1 / 0.2e1)) * ((1 - t4886) ** (-0.1e1 / 0.2e1))

        if Bindx == 242:
            t4905 = np.cos(phi)
            t4906 = t4905 ** 2
            t4907 = t4906 ** 2
            t4908 = t4906 * t4907
            t4911 = t4908 ** 2
            t4909 = t4907 ** 2
            t4904 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * t4905 * t4904 ** 2 * (-3594591 * t4907 + 19684665 * t4908 - 54679625 * t4909 - 59879925 * t4911 - 6435 + (80528175 * t4909 + 17678835 * t4911 + 285285) * t4906) * np.sin(phi1) * ((1 + t4905) ** (-0.1e1 / 0.2e1)) * ((1 - t4905) ** (-0.1e1 / 0.2e1))

        if Bindx == 243:
            t4930 = np.cos(phi)
            t4929 = t4930 ** 2
            t4933 = t4929 ** 2
            t4932 = t4930 * t4929
            t4935 = t4932 ** 2
            t4937 = t4933 ** 2
            t4934 = t4930 * t4933
            t4939 = t4934 ** 2
            t4941 = t4935 ** 2
            t4936 = t4930 * t4935
            t4943 = t4936 ** 2
            t4947 = 124 * t4929 + 280 * t4933 - 12180 * t4935 - 98028 * t4939 + 94136 * t4941 - 45820 * t4943 - 2 + (52500 + 8990 * t4937) * t4937
            t4946 = -7763 * t4932 + 46585 * t4934 - 129815 * t4936 + (195335 * t4937 - 164521 * t4939 + 73283 * t4941 - 13485 * t4943 + 381) * t4930
            t4931 = 2 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t4946 + t4947) * np.cos((-t4931 + 12 * phi2)) + (-t4946 + t4947) * np.cos((t4931 + 12 * phi2)))

        if Bindx == 244:
            t4965 = np.cos(phi)
            t4964 = t4965 ** 2
            t4967 = t4965 * t4964
            t4968 = t4964 ** 2
            t4969 = t4965 * t4968
            t4970 = t4967 ** 2
            t4971 = t4965 * t4970
            t4972 = t4968 ** 2
            t4974 = t4969 ** 2
            t4976 = t4970 ** 2
            t4978 = t4971 ** 2
            t4982 = -37555 * t4967 + 405419 * t4969 - 1900651 * t4971 + (4521225 * t4972 - 5710785 * t4974 + 3651825 * t4976 - 930465 * t4978 + 987) * t4965
            t4981 = -8120 * t4964 + 155134 * t4968 - 1136268 * t4970 - 8169600 * t4974 + 9042450 * t4976 - 5242620 * t4978 + 70 + (4118334 + 1240620 * t4972) * t4972
            t4966 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * ((t4981 + t4982) * np.cos((-t4966 + 6 * phi2)) + (t4981 - t4982) * np.cos((t4966 + 6 * phi2)))

        if Bindx == 245:
            t4983 = np.cos(phi)
            t4984 = t4983 ** 2
            t4985 = t4984 ** 2
            t4986 = t4984 * t4985
            t4989 = t4986 ** 2
            t4987 = t4985 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t4985 - 3461458 * t4986 + 36983310 * t4989 + 143 + (13997984 + 5892945 * t4987) * t4987 + (-30620590 * t4987 - 23191590 * t4989 - 19162) * t4984) * np.cos((2 * phi1))

        if Bindx == 246:
            t5010 = np.cos(phi)
            t5009 = t5010 ** 2
            t5012 = t5010 * t5009
            t5013 = t5009 ** 2
            t5014 = t5010 * t5013
            t5015 = t5012 ** 2
            t5016 = t5010 * t5015
            t5017 = t5013 ** 2
            t5019 = t5014 ** 2
            t5021 = t5015 ** 2
            t5023 = t5016 ** 2
            t5025 = t5017 ** 2
            t5028 = 13148 * t5012 - 69340 * t5014 + 155580 * t5016 + (-149820 * t5017 + 8628 * t5019 + 100492 * t5021 - 75980 * t5023 + 17980 * t5025 - 688) * t5010
            t5027 = -3060 * t5009 + 34864 * t5013 - 170660 * t5015 + 433870 * t5017 - 621916 * t5019 + 509000 * t5021 - 222604 * t5023 + 40455 * t5025 + 51
            t5011 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2415e4) * (-(-t5027 + t5028) * np.sin((-t5011 + 12 * phi2)) + (t5027 + t5028) * np.sin((t5011 + 12 * phi2))) * ((1 + t5010) ** (-0.1e1 / 0.2e1)) * ((1 - t5010) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t5047 = np.cos(phi)
            t5046 = t5047 ** 2
            t5050 = t5046 ** 2
            t5049 = t5047 * t5046
            t5052 = t5049 ** 2
            t5054 = t5050 ** 2
            t5051 = t5047 * t5050
            t5056 = t5051 ** 2
            t5058 = t5052 ** 2
            t5053 = t5047 * t5052
            t5060 = t5053 ** 2
            t5062 = t5054 ** 2
            t5065 = 22914 * t5046 - 427922 * t5050 + 3048346 * t5052 - 10700612 * t5054 + 20497830 * t5056 - 21875070 * t5058 + 12226110 * t5060 - 2791395 * t5062 - 201
            t5064 = -56458 * t5049 + 670766 * t5051 - 3726834 * t5053 + (11325522 * t5054 - 19943070 * t5056 + 20272890 * t5058 - 11025510 * t5060 + 2481240 * t5062 + 1454) * t5047
            t5048 = 3 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.910e3) * (-(t5064 + t5065) * np.sin((-t5048 + 6 * phi2)) + (t5064 - t5065) * np.sin((t5048 + 6 * phi2))) * ((1 + t5047) ** (-0.1e1 / 0.2e1)) * ((1 - t5047) ** (-0.1e1 / 0.2e1))

        if Bindx == 248:
            t5075 = np.sin(phi)
            t5073 = t5075 ** 2
            t5066 = np.cos(phi)
            t5067 = t5066 ** 2
            t5068 = t5067 ** 2
            t5070 = t5068 ** 2
            t5069 = t5067 * t5068
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t5066 * t5073 ** 2 * (69069 * t5068 + 740025 * t5070 + 143 + (-328900 + 310155 * t5069) * t5069 + (-780390 * t5070 - 6006) * t5067) * np.sin((3 * phi1)) * ((1 + t5066) ** (-0.1e1 / 0.2e1)) * ((1 - t5066) ** (-0.1e1 / 0.2e1))

        if Bindx == 249:
            t5093 = np.cos(phi)
            t5092 = t5093 ** 2
            t5095 = t5093 * t5092
            t5096 = t5092 ** 2
            t5097 = t5093 * t5096
            t5098 = t5095 ** 2
            t5099 = t5093 * t5098
            t5100 = t5096 ** 2
            t5102 = t5097 ** 2
            t5104 = t5098 ** 2
            t5106 = t5099 ** 2
            t5110 = 85 * t5095 + 823 * t5097 - 6659 * t5099 + (17021 * t5100 - 20425 * t5102 + 11861 * t5104 - 2697 * t5106 - 9) * t5093
            t5109 = 280 * t5092 - 2612 * t5096 + 9720 * t5098 + 14664 * t5102 - 4036 * t5104 - 1624 * t5106 - 5 + (-17286 + 899 * t5100) * t5100
            t5094 = 4 * phi1
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.6279e4) * ((t5109 + t5110) * np.cos((-t5094 + 12 * phi2)) + (t5109 - t5110) * np.cos((t5094 + 12 * phi2)))

        if Bindx == 250:
            t5128 = np.cos(phi)
            t5127 = t5128 ** 2
            t5130 = t5128 * t5127
            t5131 = t5127 ** 2
            t5132 = t5128 * t5131
            t5133 = t5130 ** 2
            t5134 = t5128 * t5133
            t5135 = t5131 ** 2
            t5137 = t5132 ** 2
            t5139 = t5133 ** 2
            t5141 = t5134 ** 2
            t5145 = -487715 * t5130 + 5090953 * t5132 - 23424695 * t5134 + (55508775 * t5135 - 70777785 * t5137 + 46173075 * t5139 - 12096045 * t5141 + 13437) * t5128
            t5144 = -6820 * t5127 + 175640 * t5131 - 1941492 * t5133 - 27968460 * t5137 + 40006200 * t5139 - 28614300 * t5141 + 62 + (10285140 + 8064030 * t5135) * t5135
            t5129 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.14e2) * ((t5144 + t5145) * np.cos((-t5129 + 6 * phi2)) + (t5144 - t5145) * np.cos((t5129 + 6 * phi2)))

        if Bindx == 251:
            t5146 = np.cos(phi)
            t5147 = t5146 ** 2
            t5148 = t5147 ** 2
            t5149 = t5147 * t5148
            t5152 = t5149 ** 2
            t5150 = t5148 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t5148 - 231616 * t5149 + 2143140 * t5152 + 11 + (893090 + 310155 * t5150) * t5150 + (-1862080 * t5150 - 1280640 * t5152 - 1408) * t5147) * np.cos((4 * phi1))

        if Bindx == 252:
            t5173 = np.cos(phi)
            t5172 = t5173 ** 2
            t5176 = t5172 ** 2
            t5175 = t5173 * t5172
            t5178 = t5175 ** 2
            t5180 = t5176 ** 2
            t5177 = t5173 * t5176
            t5182 = t5177 ** 2
            t5184 = t5178 ** 2
            t5179 = t5173 * t5178
            t5186 = t5179 ** 2
            t5188 = t5180 ** 2
            t5191 = 23 - 1196 * t5172 + 9048 * t5176 - 23068 * t5178 + 11422 * t5180 + 44604 * t5182 - 82912 * t5184 + 55564 * t5186 - 13485 * t5188
            t5190 = 2956 * t5175 - 22732 * t5177 + 79212 * t5179 + (-140012 * t5180 + 127172 * t5182 - 50628 * t5184 + 580 * t5186 + 3596 * t5188 - 144) * t5173
            t5174 = 5 * phi1
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.897e3) * (-(t5190 + t5191) * np.sin((-t5174 + 12 * phi2)) + (t5190 - t5191) * np.sin((t5174 + 12 * phi2))) * ((1 + t5173) ** (-0.1e1 / 0.2e1)) * ((1 - t5173) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t5210 = np.cos(phi)
            t5209 = t5210 ** 2
            t5213 = t5209 ** 2
            t5212 = t5210 * t5209
            t5215 = t5212 ** 2
            t5217 = t5213 ** 2
            t5214 = t5210 * t5213
            t5219 = t5214 ** 2
            t5221 = t5215 ** 2
            t5216 = t5210 * t5215
            t5223 = t5216 ** 2
            t5225 = t5217 ** 2
            t5228 = 487918 * t5209 - 8673630 * t5213 + 60237590 * t5215 - 210521300 * t5217 + 407970090 * t5219 - 445243890 * t5221 + 256228050 * t5223 - 60480225 * t5225 - 4603
            t5227 = 745790 * t5212 - 6298922 * t5214 + 18128022 * t5216 + (-4075830 * t5217 - 74406150 * t5219 + 147870450 * t5221 - 114197070 * t5223 + 32256120 * t5225 - 22410) * t5210
            t5211 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-(t5227 + t5228) * np.sin((-t5211 + 6 * phi2)) + (t5227 - t5228) * np.sin((t5211 + 6 * phi2))) * ((1 + t5210) ** (-0.1e1 / 0.2e1)) * ((1 - t5210) ** (-0.1e1 / 0.2e1))

        if Bindx == 254:
            t5238 = np.sin(phi)
            t5235 = t5238 ** 2
            t5236 = t5238 * t5235
            t5229 = np.cos(phi)
            t5230 = t5229 ** 2
            t5231 = t5230 ** 2
            t5233 = t5231 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t5229 * t5236 ** 2 * (-88550 * t5231 - 550275 * t5233 - 231 + (341550 * t5231 + 310155 * t5233 + 8855) * t5230) * np.sin((5 * phi1)) * ((1 + t5229) ** (-0.1e1 / 0.2e1)) * ((1 - t5229) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t5256 = np.cos(phi)
            t5255 = t5256 ** 2
            t5258 = t5256 * t5255
            t5259 = t5255 ** 2
            t5260 = t5256 * t5259
            t5261 = t5258 ** 2
            t5262 = t5256 * t5261
            t5263 = t5259 ** 2
            t5265 = t5260 ** 2
            t5267 = t5261 ** 2
            t5269 = t5262 ** 2
            t5273 = 2859 * t5258 - 15009 * t5260 + 32351 * t5262 + (-24783 * t5263 - 8751 * t5265 + 21605 * t5267 - 8091 * t5269 - 181) * t5256
            t5272 = -276 * t5255 - 104 * t5259 + 11484 * t5261 + 63844 * t5265 - 40200 * t5267 + 6612 * t5269 + 6 + (-43164 + 1798 * t5263) * t5263
            t5257 = 6 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5272 + t5273) * np.cos((-t5257 + 12 * phi2)) + (t5272 - t5273) * np.cos((t5257 + 12 * phi2)))

        if Bindx == 256:
            t5291 = np.cos(phi)
            t5290 = t5291 ** 2
            t5292 = t5291 * t5290
            t5293 = t5290 ** 2
            t5294 = t5291 * t5293
            t5295 = t5292 ** 2
            t5296 = t5291 * t5295
            t5297 = t5293 ** 2
            t5299 = t5294 ** 2
            t5301 = t5295 ** 2
            t5303 = t5296 ** 2
            t5307 = -0.41181525e8 / 0.16384e5 * t5292 + 0.418245597e9 / 0.16384e5 * t5294 - 0.1944857805e10 / 0.16384e5 * t5296 + (0.4769574975e10 / 0.16384e5 * t5297 - 0.6362290935e10 / 0.16384e5 * t5299 + 0.4356527175e10 / 0.16384e5 * t5301 - 0.1197508455e10 / 0.16384e5 * t5303 + 0.1220637e7 / 0.16384e5) * t5291
            t5306 = 0.938025e6 / 0.2048e4 * t5290 - 0.57222165e8 / 0.8192e4 * t5293 + 0.152147457e9 / 0.4096e4 * t5295 + 0.34189155e8 / 0.512e3 * t5299 + 0.264188925e9 / 0.8192e4 * t5301 - 0.321910875e9 / 0.4096e4 * t5303 - 0.37521e5 / 0.8192e4 + (-0.684158805e9 / 0.8192e4 + 0.133056495e9 / 0.4096e4 * t5297) * t5297
            tfunc[..., c] = (t5306 + t5307) * np.cos((6 * phi1 - 6 * phi2)) + (t5306 - t5307) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 257:
            t5308 = np.cos(phi)
            t5309 = t5308 ** 2
            t5310 = t5309 ** 2
            t5311 = t5309 * t5310
            t5314 = t5311 ** 2
            t5312 = t5310 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t5310 - 345366 * t5311 + 2498490 * t5314 + 21 + (1225440 + 310155 * t5312) * t5312 + (-2353130 * t5312 - 1380690 * t5314 - 2478) * t5309) * np.cos((6 * phi1))

        if Bindx == 258:
            t5335 = np.cos(phi)
            t5334 = t5335 ** 2
            t5338 = t5334 ** 2
            t5337 = t5335 * t5334
            t5340 = t5337 ** 2
            t5342 = t5338 ** 2
            t5339 = t5335 * t5338
            t5344 = t5339 ** 2
            t5346 = t5340 ** 2
            t5341 = t5335 * t5340
            t5348 = t5341 ** 2
            t5350 = t5342 ** 2
            t5353 = -4360 * t5334 + 67716 * t5338 - 349256 * t5340 + 773366 * t5342 - 744216 * t5344 + 157780 * t5346 + 193256 * t5348 - 94395 * t5350 + 109
            t5352 = -32788 * t5337 + 111412 * t5339 - 42900 * t5341 + (-427372 * t5342 + 842788 * t5344 - 593028 * t5346 + 121220 * t5348 + 17980 * t5350 + 2688) * t5335
            t5336 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.195e3) * (-(t5352 + t5353) * np.sin((-t5336 + 12 * phi2)) + (t5352 - t5353) * np.sin((t5336 + 12 * phi2))) * ((1 + t5335) ** (-0.1e1 / 0.2e1)) * ((1 - t5335) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t5372 = np.cos(phi)
            t5371 = t5372 ** 2
            t5375 = t5371 ** 2
            t5374 = t5372 * t5371
            t5377 = t5374 ** 2
            t5379 = t5375 ** 2
            t5376 = t5372 * t5375
            t5381 = t5376 ** 2
            t5383 = t5377 ** 2
            t5378 = t5372 * t5377
            t5385 = t5378 ** 2
            t5387 = t5379 ** 2
            t5390 = -19082 * t5371 + 337554 * t5375 - 2514946 * t5377 + 9660376 * t5379 - 20482110 * t5381 + 24141390 * t5383 - 14804790 * t5385 + 3681405 * t5387 + 203
            t5389 = 177826 * t5374 - 1563142 * t5376 + 5959338 * t5378 + (-11144826 * t5379 + 9541350 * t5381 - 1302210 * t5383 - 3065010 * t5385 + 1402440 * t5387 - 5766) * t5372
            t5373 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.230e3) * (-(t5389 - t5390) * np.sin((-t5373 + 6 * phi2)) + (t5389 + t5390) * np.sin((t5373 + 6 * phi2))) * ((1 + t5372) ** (-0.1e1 / 0.2e1)) * ((1 - t5372) ** (-0.1e1 / 0.2e1))

        if Bindx == 260:
            t5399 = np.sin(phi)
            t5396 = t5399 ** 2
            t5397 = t5396 ** 2
            t5391 = np.cos(phi)
            t5392 = t5391 ** 2
            t5393 = t5392 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t5391 * t5397 ** 2 * (-700 * t5392 + 21 + (-15660 * t5392 + 5670 + 13485 * t5393) * t5393) * np.sin((7 * phi1)) * ((1 + t5391) ** (-0.1e1 / 0.2e1)) * ((1 - t5391) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t5417 = np.cos(phi)
            t5416 = t5417 ** 2
            t5420 = t5416 ** 2
            t5419 = t5417 * t5416
            t5422 = t5419 ** 2
            t5424 = t5420 ** 2
            t5421 = t5417 * t5420
            t5426 = t5421 ** 2
            t5428 = t5422 ** 2
            t5423 = t5417 * t5422
            t5430 = t5423 ** 2
            t5434 = -3552 * t5416 + 29940 * t5420 - 85536 * t5422 + 85536 * t5426 - 146252 * t5428 + 51040 * t5430 + 111 + (64218 + 4495 * t5424) * t5424
            t5433 = 3454 * t5419 + 17002 * t5421 - 121154 * t5423 + (228030 * t5424 - 146838 * t5426 - 6786 * t5428 + 26970 * t5430 - 678) * t5417
            t5418 = 8 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.130e3) * ((-t5433 + t5434) * np.cos((-t5418 + 12 * phi2)) + (t5433 + t5434) * np.cos((t5418 + 12 * phi2)))

        if Bindx == 262:
            t5452 = np.cos(phi)
            t5451 = t5452 ** 2
            t5454 = t5452 * t5451
            t5455 = t5451 ** 2
            t5456 = t5452 * t5455
            t5457 = t5454 ** 2
            t5458 = t5452 * t5457
            t5459 = t5455 ** 2
            t5461 = t5456 ** 2
            t5463 = t5457 ** 2
            t5465 = t5458 ** 2
            t5469 = -2317 * t5454 + 58247 * t5456 - 448657 * t5458 + (1467345 * t5459 - 2330055 * t5461 + 1781325 * t5463 - 525915 * t5465 + 27) * t5452
            t5468 = 8342 * t5451 - 115990 * t5455 + 607838 * t5457 + 1811810 * t5461 - 832650 * t5463 - 147030 * t5465 - 97 + (-1507528 + 175305 * t5459) * t5459
            t5453 = 8 * phi1
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * ((t5468 + t5469) * np.cos((-t5453 + 6 * phi2)) + (t5468 - t5469) * np.cos((t5453 + 6 * phi2)))

        if Bindx == 263:
            t5470 = np.cos(phi)
            t5471 = t5470 ** 2
            t5472 = t5471 ** 2
            t5473 = t5471 * t5472
            t5476 = t5473 ** 2
            t5474 = t5472 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t5472 - 78568 * t5473 + 398340 * t5476 + 7 + (246122 + 40455 * t5474) * t5474 + (-419560 * t5474 - 198360 * t5476 - 728) * t5471) * np.cos((8 * phi1))

        if Bindx == 264:
            t5497 = np.cos(phi)
            t5496 = t5497 ** 2
            t5500 = t5496 ** 2
            t5499 = t5497 * t5496
            t5502 = t5499 ** 2
            t5504 = t5500 ** 2
            t5501 = t5497 * t5500
            t5506 = t5501 ** 2
            t5508 = t5502 ** 2
            t5503 = t5497 * t5502
            t5510 = t5503 ** 2
            t5512 = t5504 ** 2
            t5515 = -4824 * t5496 + 25700 * t5500 - 22936 * t5502 - 116050 * t5504 + 286968 * t5506 - 210732 * t5508 + 17400 * t5510 + 24273 * t5512 + 201
            t5514 = -5700 * t5499 + 59748 * t5501 - 179652 * t5503 + (188100 * t5504 + 16404 * t5506 - 138100 * t5508 + 55796 * t5510 + 3596 * t5512 - 192) * t5497
            t5498 = 9 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t5514 - t5515) * np.sin((-t5498 + 12 * phi2)) + (t5514 + t5515) * np.sin((t5498 + 12 * phi2))) * ((1 + t5497) ** (-0.1e1 / 0.2e1)) * ((1 - t5497) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t5534 = np.cos(phi)
            t5533 = t5534 ** 2
            t5537 = t5533 ** 2
            t5536 = t5534 * t5533
            t5539 = t5536 ** 2
            t5541 = t5537 ** 2
            t5538 = t5534 * t5537
            t5543 = t5538 ** 2
            t5545 = t5539 ** 2
            t5540 = t5534 * t5539
            t5547 = t5540 ** 2
            t5549 = t5541 ** 2
            t5552 = -8658 * t5533 + 83258 * t5537 - 136234 * t5539 - 742456 * t5541 + 3245418 * t5543 - 5030298 * t5545 + 3535506 * t5547 - 946647 * t5549 + 111
            t5551 = 85562 * t5536 - 706510 * t5538 + 2707298 * t5540 + (-5384434 * t5541 + 5519150 * t5543 - 2392026 * t5545 - 106314 * t5547 + 280488 * t5549 - 3214) * t5534
            t5535 = 9 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.690e3) * (-(t5551 + t5552) * np.sin((-t5535 + 6 * phi2)) + (t5551 - t5552) * np.sin((t5535 + 6 * phi2))) * ((1 + t5534) ** (-0.1e1 / 0.2e1)) * ((1 - t5534) ** (-0.1e1 / 0.2e1))

        if Bindx == 266:
            t5561 = np.sin(phi)
            t5557 = t5561 ** 2
            t5559 = t5561 * t5557 ** 2
            t5553 = np.cos(phi)
            t5554 = t5553 ** 2
            t5555 = t5554 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t5553 * t5559 ** 2 * (-5481 * t5555 - 35 + (8091 * t5555 + 945) * t5554) * np.sin((9 * phi1)) * ((1 + t5553) ** (-0.1e1 / 0.2e1)) * ((1 - t5553) ** (-0.1e1 / 0.2e1))

        if Bindx == 267:
            t5579 = np.cos(phi)
            t5578 = t5579 ** 2
            t5581 = t5579 * t5578
            t5582 = t5578 ** 2
            t5583 = t5579 * t5582
            t5584 = t5581 ** 2
            t5585 = t5579 * t5584
            t5586 = t5582 ** 2
            t5588 = t5583 ** 2
            t5590 = t5584 ** 2
            t5592 = t5585 ** 2
            t5596 = 9091 * t5581 - 40937 * t5583 + 40183 * t5585 + (67353 * t5586 - 127335 * t5588 + 38541 * t5590 + 13485 * t5592 - 381) * t5579
            t5595 = 2604 * t5578 - 936 * t5582 - 49764 * t5584 - 87516 * t5588 - 36296 * t5590 + 38164 * t5592 - 186 + (132132 + 1798 * t5586) * t5586
            t5580 = 10 * phi1
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.70e2) * ((t5595 - t5596) * np.cos((-t5580 + 12 * phi2)) + (t5595 + t5596) * np.cos((t5580 + 12 * phi2)))

        if Bindx == 268:
            t5614 = np.cos(phi)
            t5613 = t5614 ** 2
            t5616 = t5614 * t5613
            t5617 = t5613 ** 2
            t5618 = t5614 * t5617
            t5619 = t5616 ** 2
            t5620 = t5614 * t5619
            t5621 = t5617 ** 2
            t5623 = t5618 ** 2
            t5625 = t5619 ** 2
            t5627 = t5620 ** 2
            t5631 = -4075 * t5616 + 20963 * t5618 - 32659 * t5620 + (-25311 * t5621 + 124407 * t5623 - 123975 * t5625 + 40455 * t5627 + 195) * t5614
            t5630 = 952 * t5613 - 12422 * t5617 + 67804 * t5619 + 232672 * t5623 - 134346 * t5625 + 12876 * t5627 - 14 + (-178310 + 10788 * t5621) * t5621
            t5615 = 10 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * ((t5630 - t5631) * np.cos((-t5615 + 6 * phi2)) + (t5630 + t5631) * np.cos((t5615 + 6 * phi2)))

        if Bindx == 269:
            t5632 = np.cos(phi)
            t5633 = t5632 ** 2
            t5634 = t5633 ** 2
            t5635 = t5633 * t5634
            t5638 = t5635 ** 2
            t5636 = t5634 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t5634 - 31766 * t5635 + 100890 * t5638 + 5 + (83680 + 8091 * t5636) * t5636 + (-122090 * t5636 - 44370 * t5638 - 430) * t5633) * np.cos((10 * phi1))

        if Bindx == 270:
            t5659 = np.cos(phi)
            t5658 = t5659 ** 2
            t5661 = t5659 * t5658
            t5662 = t5658 ** 2
            t5663 = t5659 * t5662
            t5664 = t5661 ** 2
            t5665 = t5659 * t5664
            t5666 = t5662 ** 2
            t5668 = t5663 ** 2
            t5670 = t5664 ** 2
            t5672 = t5665 ** 2
            t5674 = t5666 ** 2
            t5677 = 30668 * t5661 - 62348 * t5663 - 125268 * t5665 + (473044 * t5666 - 364156 * t5668 - 48132 * t5670 + 95236 * t5672 + 3596 * t5674 - 2640) * t5659
            t5676 = 2468 * t5658 + 43272 * t5662 - 224588 * t5664 + 286286 * t5666 + 94380 * t5668 - 354640 * t5670 + 123772 * t5672 + 29667 * t5674 - 617
            t5660 = 11 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.35e2) * (-(-t5676 + t5677) * np.sin((-t5660 + 12 * phi2)) + (t5676 + t5677) * np.sin((t5660 + 12 * phi2))) * ((1 + t5659) ** (-0.1e1 / 0.2e1)) * ((1 - t5659) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t5696 = np.cos(phi)
            t5695 = t5696 ** 2
            t5699 = t5695 ** 2
            t5698 = t5696 * t5695
            t5701 = t5698 ** 2
            t5703 = t5699 ** 2
            t5700 = t5696 * t5699
            t5705 = t5700 ** 2
            t5707 = t5701 ** 2
            t5702 = t5696 * t5701
            t5709 = t5702 ** 2
            t5711 = t5703 ** 2
            t5714 = -1798 * t5695 + 16758 * t5699 - 58958 * t5701 + 82676 * t5703 - 5874 * t5705 - 103334 * t5707 + 100166 * t5709 - 29667 * t5711 + 31
            t5713 = 1958 * t5698 - 22946 * t5700 + 106590 * t5702 + (-235774 * t5703 + 262066 * t5705 - 132534 * t5707 + 13514 * t5709 + 7192 * t5711 - 66) * t5696
            t5697 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.62790e5) * (-(t5713 + t5714) * np.sin((-t5697 + 6 * phi2)) + (t5713 - t5714) * np.sin((t5697 + 6 * phi2))) * ((1 + t5696) ** (-0.1e1 / 0.2e1)) * ((1 - t5696) ** (-0.1e1 / 0.2e1))

        if Bindx == 272:
            t5722 = np.sin(phi)
            t5718 = t5722 ** 2
            t5719 = t5722 * t5718
            t5720 = t5719 ** 2
            t5715 = np.cos(phi)
            t5716 = t5715 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t5715 * t5720 ** 2 * (15 + (-290 + 899 * t5716) * t5716) * np.sin((11 * phi1)) * ((1 + t5715) ** (-0.1e1 / 0.2e1)) * ((1 - t5715) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t5740 = np.cos(phi)
            t5739 = t5740 ** 2
            t5741 = t5740 * t5739
            t5742 = t5739 ** 2
            t5743 = t5740 * t5742
            t5744 = t5741 ** 2
            t5745 = t5740 * t5744
            t5746 = t5742 ** 2
            t5748 = t5743 ** 2
            t5750 = t5744 ** 2
            t5752 = t5745 ** 2
            t5756 = 0.1163547e7 / 0.8192e4 * t5741 + 0.3252249e7 / 0.8192e4 * t5743 - 0.16927053e8 / 0.8192e4 * t5745 + (0.12670515e8 / 0.8192e4 * t5746 + 0.10171161e8 / 0.8192e4 * t5748 - 0.8889573e7 / 0.8192e4 * t5750 - 0.1335015e7 / 0.8192e4 * t5752 - 0.240999e6 / 0.8192e4) * t5740
            t5755 = -0.1066065e7 / 0.2048e4 * t5742 + 0.891891e6 / 0.1024e4 * t5744 - 0.2741739e7 / 0.1024e4 * t5748 + 0.1252251e7 / 0.2048e4 * t5750 + 0.617265e6 / 0.1024e4 * t5752 + 0.39303e5 / 0.1024e4 * t5739 + 0.39303e5 / 0.8192e4 + (0.4374513e7 / 0.4096e4 + 0.148335e6 / 0.8192e4 * t5746) * t5746
            tfunc[..., c] = (t5755 + t5756) * np.cos((12 * phi1 - 12 * phi2)) + (t5755 - t5756) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 274:
            t5774 = np.cos(phi)
            t5773 = t5774 ** 2
            t5776 = t5774 * t5773
            t5777 = t5773 ** 2
            t5778 = t5774 * t5777
            t5779 = t5776 ** 2
            t5780 = t5774 * t5779
            t5781 = t5777 ** 2
            t5783 = t5778 ** 2
            t5785 = t5779 ** 2
            t5787 = t5780 ** 2
            t5791 = 2859 * t5776 - 15009 * t5778 + 32351 * t5780 + (-24783 * t5781 - 8751 * t5783 + 21605 * t5785 - 8091 * t5787 - 181) * t5774
            t5790 = -276 * t5773 - 104 * t5777 + 11484 * t5779 + 63844 * t5783 - 40200 * t5785 + 6612 * t5787 + 6 + (-43164 + 1798 * t5781) * t5781
            t5775 = 12 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5790 + t5791) * np.cos((-t5775 + 6 * phi2)) + (t5790 - t5791) * np.cos((t5775 + 6 * phi2)))

        if Bindx == 275:
            t5792 = np.cos(phi)
            t5793 = t5792 ** 2
            t5794 = t5793 ** 2
            t5795 = t5793 * t5794
            t5798 = t5795 ** 2
            t5796 = t5794 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t5794 - 8064 * t5795 + 14532 * t5798 + 3 + (17010 + 899 * t5796) * t5796 + (-20608 * t5796 - 5568 * t5798 - 192) * t5793) * np.cos((12 * phi1))

        if Bindx == 276:
            t5819 = np.cos(phi)
            t5818 = t5819 ** 2
            t5821 = t5819 * t5818
            t5822 = t5818 ** 2
            t5823 = t5819 * t5822
            t5824 = t5821 ** 2
            t5825 = t5819 * t5824
            t5826 = t5822 ** 2
            t5828 = t5823 ** 2
            t5830 = t5824 ** 2
            t5832 = t5825 ** 2
            t5834 = t5826 ** 2
            t5837 = -52 * t5821 - 49868 * t5823 + 94380 * t5825 + (33748 * t5826 - 144508 * t5828 + 39228 * t5830 + 24580 * t5832 + 620 * t5834 + 1872) * t5819
            t5836 = -4820 * t5818 + 25536 * t5822 + 10556 * t5824 - 140426 * t5826 + 118404 * t5828 + 47320 * t5830 - 50284 * t5832 - 6045 * t5834 - 241
            t5820 = 13 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * (-(t5836 + t5837) * np.sin((-t5820 + 12 * phi2)) + (-t5836 + t5837) * np.sin((t5820 + 12 * phi2))) * ((1 + t5819) ** (-0.1e1 / 0.2e1)) * ((1 - t5819) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t5856 = np.cos(phi)
            t5855 = t5856 ** 2
            t5859 = t5855 ** 2
            t5858 = t5856 * t5855
            t5861 = t5858 ** 2
            t5863 = t5859 ** 2
            t5860 = t5856 * t5859
            t5865 = t5860 ** 2
            t5867 = t5861 ** 2
            t5862 = t5856 * t5861
            t5869 = t5862 ** 2
            t5871 = t5863 ** 2
            t5874 = 5 - 170 * t5855 + 1722 * t5859 - 6562 * t5861 + 11044 * t5863 - 7326 * t5865 - 1066 * t5867 + 3562 * t5869 - 1209 * t5871
            t5873 = -482 * t5858 + 758 * t5860 + 2838 * t5862 + (-10934 * t5863 + 14042 * t5865 - 7662 * t5867 + 1138 * t5869 + 248 * t5871 + 54) * t5856
            t5857 = 13 * phi1
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.52026e5) * (-(t5873 + t5874) * np.sin((-t5857 + 6 * phi2)) + (t5873 - t5874) * np.sin((t5857 + 6 * phi2))) * ((1 + t5856) ** (-0.1e1 / 0.2e1)) * ((1 - t5856) ** (-0.1e1 / 0.2e1))

        if Bindx == 278:
            t5881 = np.sin(phi)
            t5876 = t5881 ** 2
            t5877 = t5881 * t5876
            t5879 = t5881 * t5877 ** 2
            t5875 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t5875 * t5879 ** 2 * (31 * t5875 ** 2 - 3) * np.sin((13 * phi1)) * ((1 + t5875) ** (-0.1e1 / 0.2e1)) * ((1 - t5875) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t5899 = np.cos(phi)
            t5898 = t5899 ** 2
            t5901 = t5899 * t5898
            t5902 = t5898 ** 2
            t5903 = t5899 * t5902
            t5904 = t5901 ** 2
            t5905 = t5899 * t5904
            t5906 = t5902 ** 2
            t5908 = t5903 ** 2
            t5910 = t5904 ** 2
            t5912 = t5905 ** 2
            t5916 = 1771 * t5901 - 7553 * t5903 - 4433 * t5905 + (20449 * t5906 - 2639 * t5908 - 7259 * t5910 - 651 * t5912 + 315) * t5899
            t5915 = -1156 * t5898 + 728 * t5902 + 12012 * t5904 - 12012 * t5908 + 9464 * t5910 + 2948 * t5912 - 34 + (-12012 + 62 * t5906) * t5906
            t5900 = 14 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.290e3) * ((t5915 + t5916) * np.cos((-t5900 + 12 * phi2)) + (t5915 - t5916) * np.cos((t5900 + 12 * phi2)))

        if Bindx == 280:
            t5934 = np.cos(phi)
            t5933 = t5934 ** 2
            t5936 = t5934 * t5933
            t5937 = t5933 ** 2
            t5938 = t5934 * t5937
            t5939 = t5936 ** 2
            t5940 = t5934 * t5939
            t5941 = t5937 ** 2
            t5943 = t5938 ** 2
            t5945 = t5939 ** 2
            t5947 = t5940 ** 2
            t5951 = 335 * t5936 - 2599 * t5938 + 6215 * t5940 + (-5885 * t5941 + 1141 * t5943 + 1435 * t5945 - 651 * t5947 + 9) * t5934
            t5950 = -280 * t5933 + 1190 * t5937 - 924 * t5939 + 6336 * t5943 - 4310 * t5945 + 820 * t5947 + 14 + (-2970 + 124 * t5941) * t5941
            t5935 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * ((t5950 + t5951) * np.cos((-t5935 + 6 * phi2)) + (t5950 - t5951) * np.cos((t5935 + 6 * phi2)))

        if Bindx == 281:
            t5952 = np.cos(phi)
            t5953 = t5952 ** 2
            t5954 = t5953 ** 2
            t5955 = t5953 * t5954
            t5958 = t5955 ** 2
            t5956 = t5954 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t5954 - 686 * t5955 + 658 * t5958 + 1 + (1120 + 31 * t5956) * t5956 + (-1106 * t5956 - 218 * t5958 - 38) * t5953) * np.cos((14 * phi1))

        if Bindx == 282:
            t5979 = np.cos(phi)
            t5978 = t5979 ** 2
            t5982 = t5978 ** 2
            t5981 = t5979 * t5978
            t5984 = t5981 ** 2
            t5986 = t5982 ** 2
            t5983 = t5979 * t5982
            t5988 = t5983 ** 2
            t5990 = t5984 ** 2
            t5985 = t5979 * t5984
            t5992 = t5985 ** 2
            t5994 = t5986 ** 2
            t5997 = 3 + 144 * t5978 + 308 * t5982 - 1456 * t5984 - 286 * t5986 + 2288 * t5988 - 364 * t5990 - 592 * t5992 - 45 * t5994
            t5996 = -332 * t5981 + 364 * t5983 + 1716 * t5985 + (-1716 * t5986 - 1092 * t5988 + 868 * t5990 + 220 * t5992 + 4 * t5994 - 32) * t5979
            t5980 = 15 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * (-(t5996 + t5997) * np.sin((-t5980 + 12 * phi2)) + (t5996 - t5997) * np.sin((t5980 + 12 * phi2))) * ((1 - t5979) ** (-0.1e1 / 0.2e1)) * ((1 + t5979) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t6016 = np.cos(phi)
            t6015 = t6016 ** 2
            t6019 = t6015 ** 2
            t6018 = t6016 * t6015
            t6021 = t6018 ** 2
            t6023 = t6019 ** 2
            t6020 = t6016 * t6019
            t6025 = t6020 ** 2
            t6027 = t6021 ** 2
            t6022 = t6016 * t6021
            t6029 = t6022 ** 2
            t6031 = t6023 ** 2
            t6034 = -3 + 18 * t6015 + 70 * t6019 - 470 * t6021 + 880 * t6023 - 682 * t6025 + 122 * t6027 + 110 * t6029 - 45 * t6031
            t6033 = -110 * t6018 + 298 * t6020 - 198 * t6022 + (-330 * t6023 + 630 * t6025 - 370 * t6027 + 62 * t6029 + 8 * t6031 + 10) * t6016
            t6017 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8064030e7) * (-(t6033 + t6034) * np.sin((-t6017 + 6 * phi2)) + (t6033 - t6034) * np.sin((t6017 + 6 * phi2))) * ((1 - t6016) ** (-0.1e1 / 0.2e1)) * ((1 + t6016) ** (-0.1e1 / 0.2e1))

        if Bindx == 284:
            t6040 = np.sin(phi)
            t6036 = t6040 ** 2
            t6037 = t6036 ** 2
            t6038 = t6037 ** 2
            t6035 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t6035 * t6038 ** 2 * np.sin((15 * phi1)) * ((1 - t6035) ** (-0.1e1 / 0.2e1)) * ((1 + t6035) ** (-0.1e1 / 0.2e1))

        if Bindx == 285:
            t6056 = np.cos(phi)
            t6073 = -12 * t6056
            t6055 = t6056 ** 2
            t6059 = t6055 ** 2
            t6062 = t6059 ** 2
            t6063 = t6056 * t6062
            t6064 = t6055 * t6063
            t6065 = t6056 * t6064
            t6060 = t6056 * t6059
            t6061 = t6055 * t6060
            t6067 = t6061 ** 2
            t6071 = 64 * t6055 + 364 * t6059 + 364 * t6065 + 64 * t6067 + 1 + (-858 + t6062) * t6062
            t6070 = t6067 * t6073 - 364 * t6060 + 572 * t6061 + 572 * t6063 - 364 * t6064 + t6073 - 196 * (t6055 + t6065) * t6056
            t6057 = 16 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8990e4) * ((t6070 + t6071) * np.cos((-t6057 + 12 * phi2)) + (-t6070 + t6071) * np.cos((t6057 + 12 * phi2)))

        if Bindx == 286:
            t6090 = np.cos(phi)
            t6089 = t6090 ** 2
            t6093 = t6089 ** 2
            t6092 = t6090 * t6089
            t6095 = t6092 ** 2
            t6094 = t6090 * t6093
            t6098 = t6094 ** 2
            t6100 = t6095 ** 2
            t6096 = t6090 * t6095
            t6102 = t6096 ** 2
            t6103 = t6090 * t6102
            t6106 = t6090 * t6103 - 10 * t6089 + 50 * t6093 - 66 * t6095 + 66 * t6098 - 50 * t6100 + 10 * t6102 - 1
            t6105 = -10 * t6092 - 34 * t6094 - 6 * t6103 + (-110 * t6089 + 110) * t6096 + (34 * t6098 + 10 * t6100 + 6) * t6090
            t6091 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * ((t6105 + t6106) * np.cos((-t6091 + 6 * phi2)) + (-t6105 + t6106) * np.cos((t6091 + 6 * phi2)))

        if Bindx == 287:
            t6107 = np.cos(phi)
            t6108 = t6107 ** 2
            t6116 = -8 * t6108
            t6109 = t6108 ** 2
            t6111 = t6109 ** 2
            t6110 = t6108 * t6109
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t6109 + t6116 + 1 + (-56 * t6108 + 70 + t6111) * t6111 + (-56 + (t6116 + 28) * t6110) * t6110)

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

