import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [2, 0, 1],
                        [2, 1, 1],
                        [2, 2, 1],
                        [4, 0, 1],
                        [4, 1, 1],
                        [4, 2, 1],
                        [4, 3, 1],
                        [4, 4, 1],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 6, 1],
                        [6, 6, 2],
                        [7, 0, 1],
                        [7, 1, 1],
                        [7, 2, 1],
                        [7, 3, 1],
                        [7, 4, 1],
                        [7, 5, 1],
                        [7, 6, 1],
                        [7, 7, 1],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 8, 1],
                        [8, 8, 2],
                        [9, 0, 1],
                        [9, 1, 1],
                        [9, 2, 1],
                        [9, 3, 1],
                        [9, 4, 1],
                        [9, 5, 1],
                        [9, 6, 1],
                        [9, 7, 1],
                        [9, 8, 1],
                        [9, 9, 1],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 10, 1],
                        [10, 10, 2],
                        [11, 0, 1],
                        [11, 1, 1],
                        [11, 2, 1],
                        [11, 3, 1],
                        [11, 4, 1],
                        [11, 5, 1],
                        [11, 6, 1],
                        [11, 7, 1],
                        [11, 8, 1],
                        [11, 9, 1],
                        [11, 10, 1],
                        [11, 11, 1],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [13, 0, 1],
                        [13, 0, 2],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 13, 1],
                        [13, 13, 2],
                        [14, 0, 1],
                        [14, 0, 2],
                        [14, 0, 3],
                        [14, 1, 1],
                        [14, 1, 2],
                        [14, 1, 3],
                        [14, 2, 1],
                        [14, 2, 2],
                        [14, 2, 3],
                        [14, 3, 1],
                        [14, 3, 2],
                        [14, 3, 3],
                        [14, 4, 1],
                        [14, 4, 2],
                        [14, 4, 3],
                        [14, 5, 1],
                        [14, 5, 2],
                        [14, 5, 3],
                        [14, 6, 1],
                        [14, 6, 2],
                        [14, 6, 3],
                        [14, 7, 1],
                        [14, 7, 2],
                        [14, 7, 3],
                        [14, 8, 1],
                        [14, 8, 2],
                        [14, 8, 3],
                        [14, 9, 1],
                        [14, 9, 2],
                        [14, 9, 3],
                        [14, 10, 1],
                        [14, 10, 2],
                        [14, 10, 3],
                        [14, 11, 1],
                        [14, 11, 2],
                        [14, 11, 3],
                        [14, 12, 1],
                        [14, 12, 2],
                        [14, 12, 3],
                        [14, 13, 1],
                        [14, 13, 2],
                        [14, 13, 3],
                        [14, 14, 1],
                        [14, 14, 2],
                        [14, 14, 3],
                        [15, 0, 1],
                        [15, 0, 2],
                        [15, 1, 1],
                        [15, 1, 2],
                        [15, 2, 1],
                        [15, 2, 2],
                        [15, 3, 1],
                        [15, 3, 2],
                        [15, 4, 1],
                        [15, 4, 2],
                        [15, 5, 1],
                        [15, 5, 2],
                        [15, 6, 1],
                        [15, 6, 2],
                        [15, 7, 1],
                        [15, 7, 2],
                        [15, 8, 1],
                        [15, 8, 2],
                        [15, 9, 1],
                        [15, 9, 2],
                        [15, 10, 1],
                        [15, 10, 2],
                        [15, 11, 1],
                        [15, 11, 2],
                        [15, 12, 1],
                        [15, 12, 2],
                        [15, 13, 1],
                        [15, 13, 2],
                        [15, 14, 1],
                        [15, 14, 2],
                        [15, 15, 1],
                        [15, 15, 2],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 0, 3],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 1, 3],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 2, 3],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 3, 3],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 4, 3],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 5, 3],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 6, 3],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 7, 3],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 8, 3],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 9, 3],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 10, 3],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 11, 3],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 12, 3],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 13, 3],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 14, 3],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 15, 3],
                        [16, 16, 1],
                        [16, 16, 2],
                        [16, 16, 3]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t1 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 2:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t3 * t2 ** 2 * np.sin(phi1) * ((1 + t3) ** (-0.1e1 / 0.2e1)) * ((1 - t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t4 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t4 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 4:
            t5 = np.cos(phi)
            t6 = t5 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t6) * t6

        if Bindx == 5:
            t9 = np.cos(phi)
            t8 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t9 * t8 ** 2 * (7 * t9 ** 2 - 3) * np.sin(phi1) * ((1 + t9) ** (-0.1e1 / 0.2e1)) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            t10 = np.cos(phi)
            t11 = t10 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t11) * t11) * np.cos((2 * phi1))

        if Bindx == 7:
            t16 = np.sin(phi)
            t14 = t16 ** 2
            t13 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13 * t14 ** 2 * np.sin((3 * phi1)) * ((1 + t13) ** (-0.1e1 / 0.2e1)) * ((1 - t13) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t18) * t18)

        if Bindx == 9:
            t20 = np.cos(phi)
            t21 = t20 ** 2
            t22 = t21 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t22 - 1 + (t22 + 3) * t21)

        if Bindx == 10:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            t26 = t25 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t26 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t26 + 0.1365e4 / 0.16e2) * t25

        if Bindx == 11:
            t34 = np.cos(phi)
            t33 = t34 ** 2
            t40 = 1 + (-2 + t33) * t33
            t38 = t40 * t34
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.22e2) * np.sqrt((1 - t34)) * np.sqrt((1 + t34)) * ((t38 - t40) * np.sin((phi1 - 6 * phi2)) + (t38 + t40) * np.sin((phi1 + 6 * phi2)))

        if Bindx == 12:
            t42 = np.cos(phi)
            t43 = t42 ** 2
            t41 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t42 * t41 ** 2 * (5 + (-30 + 33 * t43) * t43) * np.sin(phi1) * ((1 + t42) ** (-0.1e1 / 0.2e1)) * ((1 - t42) ** (-0.1e1 / 0.2e1))

        if Bindx == 13:
            t52 = np.cos(phi)
            t51 = t52 ** 2
            t54 = t52 * t51
            t55 = t51 ** 2
            t59 = -2 * t52 * t55 - 2 * t52 + 4 * t54
            t58 = t54 ** 2 - t51 - t55 + 1
            t53 = 2 * phi1
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.55e2) * ((t58 + t59) * np.cos((-t53 + 6 * phi2)) + (t58 - t59) * np.cos((t53 + 6 * phi2)))

        if Bindx == 14:
            t60 = np.cos(phi)
            t61 = t60 ** 2
            t62 = t61 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t62 - 1 + (33 * t62 + 19) * t61) * np.cos((2 * phi1))

        if Bindx == 15:
            t70 = np.cos(phi)
            t69 = t70 ** 2
            t77 = 2 * t69
            t73 = t69 ** 2
            t76 = 1 + t77 - 3 * t73
            t75 = (t73 + t77 - 3) * t70
            t71 = 3 * phi1
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.55e2) * np.sqrt((1 - t70)) * np.sqrt((1 + t70)) * (-(t75 + t76) * np.sin((-t71 + 6 * phi2)) + (t75 - t76) * np.sin((t71 + 6 * phi2)))

        if Bindx == 16:
            t81 = np.sin(phi)
            t79 = t81 ** 2
            t78 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t78 * t79 ** 2 * (11 * t78 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t78) ** (-0.1e1 / 0.2e1)) * ((1 - t78) ** (-0.1e1 / 0.2e1))

        if Bindx == 17:
            t88 = np.cos(phi)
            t87 = t88 ** 2
            t90 = t87 ** 2
            t91 = t88 * t90
            t94 = 4 * t88 - 4 * t91
            t93 = t88 * t91 - 5 * t87 + 5 * t90 - 1
            t89 = 4 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.66e2) * ((t93 + t94) * np.cos((-t89 + 6 * phi2)) + (t93 - t94) * np.cos((t89 + 6 * phi2)))

        if Bindx == 18:
            t95 = np.cos(phi)
            t96 = t95 ** 2
            t97 = t96 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t97 - 1 + (11 * t97 + 13) * t96) * np.cos((4 * phi1))

        if Bindx == 19:
            t105 = np.cos(phi)
            t104 = t105 ** 2
            t108 = t104 ** 2
            t111 = -1 - 10 * t104 - 5 * t108
            t110 = (10 * t104 + t108 + 5) * t105
            t106 = 5 * phi1
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.3e1) * np.sqrt((1 + t105)) * np.sqrt((1 - t105)) * ((t110 - t111) * np.sin((t106 + 6 * phi2)) - (t110 + t111) * np.sin((-t106 + 6 * phi2)))

        if Bindx == 20:
            t116 = np.sin(phi)
            t113 = t116 ** 2
            t114 = t116 * t113
            t112 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t112 * t114 ** 2 * np.sin((5 * phi1)) * ((1 + t112) ** (-0.1e1 / 0.2e1)) * ((1 - t112) ** (-0.1e1 / 0.2e1))

        if Bindx == 21:
            t124 = np.cos(phi)
            t131 = -0.39e2 / 0.32e2 * t124
            t123 = t124 ** 2
            t125 = t124 * t123
            t126 = t123 ** 2
            t130 = -0.65e2 / 0.16e2 * t125 + t126 * t131 + t131
            t129 = 0.13e2 / 0.64e2 * t125 ** 2 + 0.13e2 / 0.64e2 + 0.195e3 / 0.64e2 * t126 + 0.195e3 / 0.64e2 * t123
            tfunc[..., c] = (t129 + t130) * np.cos((6 * phi1 - 6 * phi2)) + (t129 - t130) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 22:
            t132 = np.cos(phi)
            t133 = t132 ** 2
            t134 = t133 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t134 - 1 + (t134 + 3) * t133)

        if Bindx == 23:
            tfunc[..., c] = 0

        if Bindx == 24:
            t145 = np.cos(phi)
            t144 = t145 ** 2
            t146 = t145 * t144
            t147 = t144 ** 2
            t149 = t146 ** 2
            t153 = -18 * t146 + 6 * (3 * t147 - t149 + 1) * t145
            t152 = 10 * t144 + 22 * t149 - 1 + (-24 - 7 * t147) * t147
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.858e3) * ((-t152 + t153) * np.sin((phi1 - 6 * phi2)) + (t152 + t153) * np.sin((phi1 + 6 * phi2))) * ((1 + t145) ** (-0.1e1 / 0.2e1)) * ((1 - t145) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t162 = np.cos(phi)
            t161 = t162 ** 2
            t165 = t161 ** 2
            t164 = t162 * t161
            t167 = t164 ** 2
            t170 = 2 - 16 * t161 + 26 * t165 - 12 * t167
            t169 = -t164 + (11 * t165 - 7 * t167 - 3) * t162
            t163 = 2 * phi1
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.143e3) * ((-t169 + t170) * np.cos((-t163 + 6 * phi2)) + (t169 + t170) * np.cos((t163 + 6 * phi2)))

        if Bindx == 26:
            t180 = np.cos(phi)
            t179 = t180 ** 2
            t182 = t180 * t179
            t183 = t179 ** 2
            t185 = t182 ** 2
            t189 = 22 * t182 + (-38 * t183 + 18 * t185 - 2) * t180
            t188 = -18 * t179 + 2 * t185 + 3 + (20 - 7 * t183) * t183
            t181 = 3 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.286e3) * (-(t188 + t189) * np.sin((-t181 + 6 * phi2)) + (-t188 + t189) * np.sin((t181 + 6 * phi2))) * ((1 + t180) ** (-0.1e1 / 0.2e1)) * ((1 - t180) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t198 = np.cos(phi)
            t197 = t198 ** 2
            t201 = t197 ** 2
            t200 = t198 * t197
            t203 = t200 ** 2
            t206 = -4 + 8 * t197 + 20 * t201 - 24 * t203
            t205 = 35 * t200 + (-19 * t201 - 7 * t203 - 9) * t198
            t199 = 4 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.26e2) * ((-t205 + t206) * np.cos((-t199 + 6 * phi2)) + (t205 + t206) * np.cos((t199 + 6 * phi2)))

        if Bindx == 28:
            t216 = np.cos(phi)
            t215 = t216 ** 2
            t218 = t216 * t215
            t219 = t215 ** 2
            t221 = t218 ** 2
            t225 = -38 * t218 + (-10 * t219 + 30 * t221 + 18) * t216
            t224 = -10 * t215 - 38 * t221 - 5 + (60 - 7 * t219) * t219
            t217 = 5 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.26e2) * (-(t224 + t225) * np.sin((-t217 + 6 * phi2)) + (-t224 + t225) * np.sin((t217 + 6 * phi2))) * ((1 + t216) ** (-0.1e1 / 0.2e1)) * ((1 - t216) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t234 = np.cos(phi)
            t233 = t234 ** 2
            t236 = t233 ** 2
            t235 = t234 * t233
            t238 = t235 ** 2
            t241 = 0.375e3 / 0.32e2 * t236 + 0.135e3 / 0.16e2 * t238 - 0.45e2 / 0.4e1 * t233 - 0.45e2 / 0.32e2
            t240 = 0.225e3 / 0.64e2 * t235 + (-0.1035e4 / 0.64e2 * t236 - 0.105e3 / 0.64e2 * t238 + 0.435e3 / 0.64e2) * t234
            tfunc[..., c] = (t240 + t241) * np.cos((6 * phi1 - 6 * phi2)) + (-t240 + t241) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 30:
            t250 = np.cos(phi)
            t249 = t250 ** 2
            t252 = t250 * t249
            t254 = t252 ** 2
            t255 = t250 * t254
            t258 = -t250 * t255 + 14 * t249 - 14 * t254 + 1
            t257 = 6 * t250 - 6 * t255 + (-14 * t249 + 14) * t252
            t251 = 7 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.14e2) * (-(t257 - t258) * np.sin((-t251 + 6 * phi2)) + (t257 + t258) * np.sin((t251 + 6 * phi2))) * ((1 + t250) ** (-0.1e1 / 0.2e1)) * ((1 - t250) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t259 = np.cos(phi)
            t260 = t259 ** 2
            t261 = t260 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.429e3) * (-18 * t260 + 1 + (-46 * t260 + 48 + 15 * t261) * t261) * np.cos((6 * phi2))

        if Bindx == 32:
            t264 = np.cos(phi)
            t265 = t264 ** 2
            t266 = t265 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t265 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t265 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t266) * t266

        if Bindx == 33:
            t279 = np.cos(phi)
            t278 = t279 ** 2
            t281 = t278 ** 2
            t280 = t279 * t278
            t283 = t280 ** 2
            t285 = t281 ** 2
            t288 = -1 + 18 * t278 - 48 * t281 + 46 * t283 - 15 * t285
            t287 = -38 * t280 + (78 * t281 - 66 * t283 + 20 * t285 + 6) * t279
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.858e3) * ((t287 + t288) * np.sin((phi1 - 6 * phi2)) + (t287 - t288) * np.sin((phi1 + 6 * phi2))) * ((1 + t279) ** (-0.1e1 / 0.2e1)) * ((1 - t279) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t290 = np.cos(phi)
            t291 = t290 ** 2
            t292 = t291 ** 2
            t289 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t290 * t289 ** 2 * (-1001 * t292 - 35 + (715 * t292 + 385) * t291) * np.sin(phi1) * ((1 + t290) ** (-0.1e1 / 0.2e1)) * ((1 - t290) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t302 = np.cos(phi)
            t301 = t302 ** 2
            t304 = t302 * t301
            t305 = t301 ** 2
            t307 = t304 ** 2
            t310 = 2 * t304 + 2 * (-2 * t305 + t307) * t302
            t309 = 1 - 5 * t301 + 7 * t305 - 3 * t307
            t303 = 2 * phi1
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15015e5) * t302 * ((t309 + t310) * np.cos((-t303 + 6 * phi2)) + (-t309 + t310) * np.cos((t303 + 6 * phi2)))

        if Bindx == 36:
            t311 = np.cos(phi)
            t312 = t311 ** 2
            t313 = t312 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t312 + 1 + (-286 * t312 + 176 + 143 * t313) * t313) * np.cos((2 * phi1))

        if Bindx == 37:
            t326 = np.cos(phi)
            t325 = t326 ** 2
            t329 = t325 ** 2
            t328 = t326 * t325
            t331 = t328 ** 2
            t333 = t329 ** 2
            t336 = -1 + 14 * t325 - 52 * t329 + 66 * t331 - 27 * t333
            t335 = 22 * t328 - 14 * (t329 + t331) * t326 + (12 * t333 - 6) * t326
            t327 = 3 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.910e3) * (-(t335 + t336) * np.sin((-t327 + 6 * phi2)) + (t335 - t336) * np.sin((t327 + 6 * phi2))) * ((1 + t326) ** (-0.1e1 / 0.2e1)) * ((1 - t326) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t343 = np.sin(phi)
            t341 = t343 ** 2
            t338 = np.cos(phi)
            t339 = t338 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t338 * t341 ** 2 * (3 + (-26 + 39 * t339) * t339) * np.sin((3 * phi1)) * ((1 + t338) ** (-0.1e1 / 0.2e1)) * ((1 - t338) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t353 = np.cos(phi)
            t352 = t353 ** 2
            t355 = t353 * t352
            t356 = t352 ** 2
            t358 = t355 ** 2
            t362 = -5 * t355 + (21 * t356 - 15 * t358 - 1) * t353
            t361 = 10 * t352 + 6 * t358 - 1 + (-20 + 5 * t356) * t356
            t354 = 4 * phi1
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.546e3) * ((t361 + t362) * np.cos((-t354 + 6 * phi2)) + (t361 - t362) * np.cos((t354 + 6 * phi2)))

        if Bindx == 40:
            t363 = np.cos(phi)
            t364 = t363 ** 2
            t365 = t364 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t364 + 1 + (-156 * t364 + 118 + 65 * t365) * t365) * np.cos((4 * phi1))

        if Bindx == 41:
            t378 = np.cos(phi)
            t377 = t378 ** 2
            t381 = t377 ** 2
            t380 = t378 * t377
            t383 = t380 ** 2
            t385 = t381 ** 2
            t388 = 7 - 42 * t377 + 20 * t381 + 90 * t383 - 75 * t385
            t387 = 90 * t380 + (-162 * t381 + 62 * t383 + 20 * t385 - 10) * t378
            t379 = 5 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.42e2) * (-(t387 + t388) * np.sin((-t379 + 6 * phi2)) + (t387 - t388) * np.sin((t379 + 6 * phi2))) * ((1 + t378) ** (-0.1e1 / 0.2e1)) * ((1 - t378) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t393 = np.sin(phi)
            t390 = t393 ** 2
            t391 = t393 * t390
            t389 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t389 * t391 ** 2 * (5 * t389 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t389) ** (-0.1e1 / 0.2e1)) * ((1 - t389) ** (-0.1e1 / 0.2e1))

        if Bindx == 43:
            t402 = np.cos(phi)
            t403 = t402 ** 2
            t405 = t403 ** 2
            t404 = t402 * t403
            t407 = t404 ** 2
            t411 = 0.833e3 / 0.16e2 * t407 + 0.17e2 / 0.4e1 + (-0.1785e4 / 0.32e2 + 0.255e3 / 0.32e2 * t405) * t405
            t410 = 0.2975e4 / 0.64e2 * t404 + (-0.2295e4 / 0.64e2 * t407 - 0.357e3 / 0.64e2 * t405 - 0.867e3 / 0.64e2) * t402
            tfunc[..., c] = (t410 + t411) * np.cos((6 * phi1 - 6 * phi2)) + (-t410 + t411) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 44:
            t412 = np.cos(phi)
            t413 = t412 ** 2
            t414 = t413 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t413 + 1 + (-46 * t413 + 48 + 15 * t414) * t414) * np.cos((6 * phi1))

        if Bindx == 45:
            t427 = np.cos(phi)
            t426 = t427 ** 2
            t430 = t426 ** 2
            t429 = t427 * t426
            t432 = t429 ** 2
            t434 = t430 ** 2
            t437 = -3 - 18 * t426 + 56 * t430 - 14 * t432 - 21 * t434
            t436 = -14 * t429 + (-42 * t430 + 38 * t432 + 4 * t434 + 14) * t427
            t428 = 7 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.30e2) * (-(t436 + t437) * np.sin((-t428 + 6 * phi2)) + (t436 - t437) * np.sin((t428 + 6 * phi2))) * ((1 + t427) ** (-0.1e1 / 0.2e1)) * ((1 - t427) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t442 = np.sin(phi)
            t439 = t442 ** 2
            t440 = t439 ** 2
            t438 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t438 * t440 ** 2 * np.sin((7 * phi1)) * ((1 + t438) ** (-0.1e1 / 0.2e1)) * ((1 - t438) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t451 = np.cos(phi)
            t450 = t451 ** 2
            t460 = -14 * t450
            t453 = t451 * t450
            t455 = t453 ** 2
            t456 = t451 * t455
            t459 = t451 * t456 + 14 * t455 + t460 - 1
            t458 = 6 * t451 - 6 * t456 + (t460 + 14) * t453
            t452 = 8 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.30e2) * ((t458 + t459) * np.cos((-t452 + 6 * phi2)) + (-t458 + t459) * np.cos((t452 + 6 * phi2)))

        if Bindx == 48:
            t461 = np.cos(phi)
            t462 = t461 ** 2
            t466 = -4 * t462
            t463 = t462 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t466 + 1 + (t466 + 6 + t463) * t463)

        if Bindx == 49:
            tfunc[..., c] = 0

        if Bindx == 50:
            t478 = np.cos(phi)
            t477 = t478 ** 2
            t479 = t478 * t477
            t480 = t477 ** 2
            t481 = t478 * t480
            t482 = t479 ** 2
            t484 = t480 ** 2
            t488 = 52 * t479 - 120 * t481 + (108 * t482 - 34 * t484 - 6) * t478
            t487 = -51 * t481 ** 2 - 27 * t477 + 126 * t480 - 226 * t482 + 177 * t484 + 1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.858e3) * ((-t487 + t488) * np.sin((phi1 - 6 * phi2)) + (t487 + t488) * np.sin((phi1 + 6 * phi2))) * ((1 + t478) ** (-0.1e1 / 0.2e1)) * ((1 - t478) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t499 = np.cos(phi)
            t498 = t499 ** 2
            t502 = t498 ** 2
            t501 = t499 * t498
            t504 = t501 ** 2
            t506 = t502 ** 2
            t509 = 3 - 75 * t498 + 277 * t502 - 341 * t504 + 136 * t506
            t508 = 44 * t501 + (-178 * t502 + 240 * t504 - 102 * t506 - 4) * t499
            t500 = 2 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * ((t508 + t509) * np.cos((-t500 + 6 * phi2)) + (-t508 + t509) * np.cos((t500 + 6 * phi2)))

        if Bindx == 52:
            t521 = np.cos(phi)
            t520 = t521 ** 2
            t523 = t521 * t520
            t524 = t520 ** 2
            t525 = t521 * t524
            t526 = t523 ** 2
            t528 = t524 ** 2
            t532 = -98 * t523 + 262 * t525 + (-278 * t526 + 102 * t528 + 12) * t521
            t531 = -51 * t525 ** 2 + 23 * t520 - 52 * t524 - 12 * t526 + 93 * t528 - 1
            t522 = 3 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.91e2) * (-(t531 + t532) * np.sin((-t522 + 6 * phi2)) + (-t531 + t532) * np.sin((t522 + 6 * phi2))) * ((1 + t521) ** (-0.1e1 / 0.2e1)) * ((1 - t521) ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t543 = np.cos(phi)
            t542 = t543 ** 2
            t546 = t542 ** 2
            t545 = t543 * t542
            t548 = t545 ** 2
            t550 = t546 ** 2
            t553 = -1 + 19 * t542 - 131 * t546 + 249 * t548 - 136 * t550
            t552 = -106 * t545 + (144 * t546 - 6 * t548 - 51 * t550 + 19) * t543
            t544 = 4 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.42e2) * ((-t552 + t553) * np.cos((-t544 + 6 * phi2)) + (t552 + t553) * np.cos((t544 + 6 * phi2)))

        if Bindx == 54:
            t565 = np.cos(phi)
            t564 = t565 ** 2
            t567 = t565 * t564
            t568 = t564 ** 2
            t569 = t565 * t568
            t570 = t567 ** 2
            t572 = t568 ** 2
            t576 = 30 * t567 + 126 * t569 + (-310 * t570 + 170 * t572 - 16) * t565
            t575 = -51 * t569 ** 2 + 75 * t564 - 280 * t568 + 336 * t570 - 75 * t572 - 5
            t566 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * (-(t575 + t576) * np.sin((-t566 + 6 * phi2)) + (-t575 + t576) * np.sin((t566 + 6 * phi2))) * ((1 + t565) ** (-0.1e1 / 0.2e1)) * ((1 - t565) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t587 = np.cos(phi)
            t586 = t587 ** 2
            t589 = t586 ** 2
            t588 = t587 * t586
            t591 = t588 ** 2
            t593 = t589 ** 2
            t596 = 0.3933e4 / 0.64e2 * t586 - 0.5187e4 / 0.64e2 * t589 - 0.5453e4 / 0.64e2 * t591 + 0.969e3 / 0.8e1 * t593 - 0.437e3 / 0.64e2
            t595 = -0.1463e4 / 0.16e2 * t588 + (0.7581e4 / 0.32e2 * t589 - 0.513e3 / 0.4e1 * t591 - 0.969e3 / 0.32e2 * t593 + 0.57e2 / 0.16e2) * t587
            tfunc[..., c] = (t595 + t596) * np.cos((6 * phi1 - 6 * phi2)) + (-t595 + t596) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 56:
            t608 = np.cos(phi)
            t607 = t608 ** 2
            t610 = t608 * t607
            t611 = t607 ** 2
            t612 = t608 * t611
            t613 = t610 ** 2
            t615 = t611 ** 2
            t619 = -352 * t610 + 420 * t612 + (112 * t613 - 238 * t615 + 58) * t608
            t618 = -51 * t612 ** 2 - 63 * t607 - 238 * t611 + 658 * t613 - 327 * t615 + 21
            t609 = 7 * phi1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.3e1) * (-(-t618 + t619) * np.sin((-t609 + 6 * phi2)) + (t618 + t619) * np.sin((t609 + 6 * phi2))) * ((1 + t608) ** (-0.1e1 / 0.2e1)) * ((1 - t608) ** (-0.1e1 / 0.2e1))

        if Bindx == 57:
            t630 = np.cos(phi)
            t629 = t630 ** 2
            t633 = t629 ** 2
            t632 = t630 * t629
            t635 = t632 ** 2
            t637 = t633 ** 2
            t640 = 2 + 10 * t629 - 42 * t633 + 14 * t635 + 16 * t637
            t639 = 14 * t632 + (28 * t633 - 30 * t635 - 3 * t637 - 9) * t630
            t631 = 8 * phi1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.102e3) * ((t639 + t640) * np.cos((-t631 + 6 * phi2)) + (-t639 + t640) * np.cos((t631 + 6 * phi2)))

        if Bindx == 58:
            t649 = np.cos(phi)
            t648 = t649 ** 2
            t658 = 14 * t648
            t651 = t649 * t648
            t653 = t651 ** 2
            t654 = t649 * t653
            t657 = -t649 * t654 - 14 * t653 + t658 + 1
            t656 = -6 * t649 + 6 * t654 + (t658 - 14) * t651
            t650 = 9 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.51e2) * np.sqrt((1 - t649)) * np.sqrt((1 + t649)) * (-(t656 + t657) * np.sin((-t650 + 6 * phi2)) + (t656 - t657) * np.sin((t650 + 6 * phi2)))

        if Bindx == 59:
            t659 = np.cos(phi)
            t660 = t659 ** 2
            t661 = t660 ** 2
            t663 = t661 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2145e4) * (-638 * t661 - 1071 * t663 - 3 + (1278 * t661 + 323 * t663 + 111) * t660) * np.cos((6 * phi2))

        if Bindx == 60:
            t665 = np.cos(phi)
            t666 = t665 ** 2
            t667 = t666 ** 2
            t669 = t667 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t669 - 0.315315e6 / 0.128e3 * t667 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t669 + 0.945945e6 / 0.128e3 * t667 + 0.72765e5 / 0.256e3) * t666

        if Bindx == 61:
            t683 = np.cos(phi)
            t682 = t683 ** 2
            t685 = t682 ** 2
            t684 = t683 * t682
            t687 = t684 ** 2
            t689 = t685 ** 2
            t686 = t683 * t685
            t691 = t686 ** 2
            t694 = 9 - 333 * t682 + 1914 * t685 - 3834 * t687 + 3213 * t689 - 969 * t691
            t693 = 1387 * t684 - 5110 * t686 + (8118 * t687 - 5899 * t689 + 1615 * t691 - 111) * t683
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.78e2) * ((t693 + t694) * np.sin((phi1 - 6 * phi2)) + (t693 - t694) * np.sin((phi1 + 6 * phi2))) * ((1 + t683) ** (-0.1e1 / 0.2e1)) * ((1 - t683) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t696 = np.cos(phi)
            t697 = t696 ** 2
            t698 = t697 ** 2
            t695 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t696 * t695 ** 2 * (-1092 * t697 + 63 + (-7956 * t697 + 4914 + 4199 * t698) * t698) * np.sin(phi1) * ((1 + t696) ** (-0.1e1 / 0.2e1)) * ((1 - t696) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t712 = np.cos(phi)
            t711 = t712 ** 2
            t714 = t712 * t711
            t715 = t711 ** 2
            t716 = t712 * t715
            t717 = t714 ** 2
            t719 = t715 ** 2
            t723 = 4888 * t714 - 14276 * t716 + (15640 * t717 - 5814 * t719 - 438) * t712
            t722 = 4845 * t716 ** 2 + 665 * t711 - 4486 * t715 + 11898 * t717 - 12903 * t719 - 19
            t713 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.26e2) * ((t722 + t723) * np.cos((-t713 + 6 * phi2)) + (t722 - t723) * np.cos((t713 + 6 * phi2)))

        if Bindx == 64:
            t724 = np.cos(phi)
            t725 = t724 ** 2
            t726 = t725 ** 2
            t728 = t726 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t726 - 10387 * t728 - 7 + (8918 * t726 + 4199 * t728 + 371) * t725) * np.cos((2 * phi1))

        if Bindx == 65:
            t742 = np.cos(phi)
            t741 = t742 ** 2
            t745 = t741 ** 2
            t744 = t742 * t741
            t747 = t744 ** 2
            t749 = t745 ** 2
            t746 = t742 * t745
            t751 = t746 ** 2
            t754 = 69 - 2277 * t741 + 12898 * t745 - 27962 * t747 + 25993 * t749 - 8721 * t751
            t753 = -1423 * t744 + 662 * t746 + (7122 * t747 - 11373 * t749 + 4845 * t751 + 167) * t742
            t743 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.256e3 * (-(t753 + t754) * np.sin((-t743 + 6 * phi2)) + (t753 - t754) * np.sin((t743 + 6 * phi2))) * ((1 + t742) ** (-0.1e1 / 0.2e1)) * ((1 - t742) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t761 = np.sin(phi)
            t759 = t761 ** 2
            t755 = np.cos(phi)
            t756 = t755 ** 2
            t757 = t756 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t755 * t759 ** 2 * (-357 * t757 - 7 + (323 * t757 + 105) * t756) * np.sin((3 * phi1)) * ((1 + t755) ** (-0.1e1 / 0.2e1)) * ((1 - t755) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t773 = np.cos(phi)
            t772 = t773 ** 2
            t775 = t773 * t772
            t776 = t772 ** 2
            t777 = t773 * t776
            t778 = t775 ** 2
            t780 = t776 ** 2
            t784 = 5032 * t775 - 18368 * t777 + (25432 * t778 - 11628 * t780 - 468) * t773
            t783 = 4845 * t777 ** 2 - 2407 * t772 + 8918 * t776 - 8022 * t778 - 3417 * t780 + 83
            t774 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * ((t783 + t784) * np.cos((-t774 + 6 * phi2)) + (t783 - t784) * np.cos((t774 + 6 * phi2)))

        if Bindx == 68:
            t785 = np.cos(phi)
            t786 = t785 ** 2
            t787 = t786 ** 2
            t789 = t787 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t787 - 901 * t789 - 1 + (878 * t787 + 323 * t789 + 47) * t786) * np.cos((4 * phi1))

        if Bindx == 69:
            t803 = np.cos(phi)
            t802 = t803 ** 2
            t806 = t802 ** 2
            t805 = t803 * t802
            t808 = t805 ** 2
            t810 = t806 ** 2
            t807 = t803 * t806
            t812 = t807 ** 2
            t815 = -1 + 25 * t802 + 1110 * t806 - 4942 * t808 + 6715 * t810 - 2907 * t812
            t814 = -2035 * t805 + 5278 * t807 + (-4710 * t808 + 255 * t810 + 969 * t812 + 243) * t803
            t804 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.5e1) * (-(t814 + t815) * np.sin((-t804 + 6 * phi2)) + (t814 - t815) * np.sin((t804 + 6 * phi2))) * ((1 + t803) ** (-0.1e1 / 0.2e1)) * ((1 - t803) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t822 = np.sin(phi)
            t819 = t822 ** 2
            t820 = t822 * t819
            t816 = np.cos(phi)
            t817 = t816 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t816 * t820 ** 2 * (15 + (-170 + 323 * t817) * t817) * np.sin((5 * phi1)) * ((1 + t816) ** (-0.1e1 / 0.2e1)) * ((1 - t816) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t834 = np.cos(phi)
            t833 = t834 ** 2
            t835 = t834 * t833
            t836 = t833 ** 2
            t837 = t834 * t836
            t838 = t835 ** 2
            t840 = t836 ** 2
            t844 = -0.16191e5 / 0.128e3 * t835 - 0.10143e5 / 0.256e3 * t837 + (0.61761e5 / 0.128e3 * t838 - 0.183141e6 / 0.512e3 * t840 + 0.15771e5 / 0.512e3) * t834
            t843 = 0.101745e6 / 0.1024e4 * t837 ** 2 - 0.94563e5 / 0.1024e4 * t833 + 0.235641e6 / 0.512e3 * t836 - 0.366471e6 / 0.512e3 * t838 + 0.260253e6 / 0.1024e4 * t840 + 0.4977e4 / 0.1024e4
            tfunc[..., c] = (t843 + t844) * np.cos((6 * phi1 - 6 * phi2)) + (t843 - t844) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 72:
            t845 = np.cos(phi)
            t846 = t845 ** 2
            t847 = t846 ** 2
            t849 = t847 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t847 - 1071 * t849 - 3 + (1278 * t847 + 323 * t849 + 111) * t846) * np.cos((6 * phi1))

        if Bindx == 73:
            t863 = np.cos(phi)
            t862 = t863 ** 2
            t866 = t862 ** 2
            t865 = t863 * t862
            t868 = t865 ** 2
            t870 = t866 ** 2
            t867 = t863 * t866
            t872 = t867 ** 2
            t875 = -43 + 559 * t862 - 1566 * t866 + 686 * t868 + 1561 * t870 - 1197 * t872
            t874 = -511 * t865 + 2590 * t867 + (-3534 * t868 + 1191 * t870 + 285 * t872 - 21) * t863
            t864 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * (-(t874 + t875) * np.sin((-t864 + 6 * phi2)) + (t874 - t875) * np.sin((t864 + 6 * phi2))) * ((1 + t863) ** (-0.1e1 / 0.2e1)) * ((1 - t863) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t880 = np.sin(phi)
            t877 = t880 ** 2
            t878 = t877 ** 2
            t876 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t876 * t878 ** 2 * (19 * t876 ** 2 - 3) * np.sin((7 * phi1)) * ((1 + t876) ** (-0.1e1 / 0.2e1)) * ((1 - t876) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t892 = np.cos(phi)
            t891 = t892 ** 2
            t894 = t892 * t891
            t895 = t891 ** 2
            t896 = t892 * t895
            t897 = t894 ** 2
            t899 = t895 ** 2
            t903 = -592 * t894 + 896 * t896 + (80 * t897 - 456 * t899 + 72) * t892
            t902 = 95 * t896 ** 2 + 155 * t891 + 266 * t895 - 1162 * t897 + 677 * t899 - 31
            t893 = 8 * phi1
            tfunc[..., c] = -0.21e2 / 0.1024e4 * np.sqrt(0.102e3) * ((t902 + t903) * np.cos((-t893 + 6 * phi2)) + (t902 - t903) * np.cos((t893 + 6 * phi2)))

        if Bindx == 76:
            t904 = np.cos(phi)
            t905 = t904 ** 2
            t906 = t905 ** 2
            t908 = t906 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t906 - 77 * t908 - 1 + (118 * t906 + 19 * t908 + 23) * t905) * np.cos((8 * phi1))

        if Bindx == 77:
            t922 = np.cos(phi)
            t921 = t922 ** 2
            t925 = t921 ** 2
            t924 = t922 * t921
            t927 = t924 ** 2
            t929 = t925 ** 2
            t926 = t922 * t925
            t931 = t926 ** 2
            t934 = 3 + 9 * t921 - 82 * t925 + 98 * t927 - t929 - 27 * t931
            t933 = 41 * t924 + 14 * t926 + (-94 * t927 + 47 * t929 + 5 * t931 - 13) * t922
            t923 = 9 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.969e3) * (-(t933 + t934) * np.sin((-t923 + 6 * phi2)) + (t933 - t934) * np.sin((t923 + 6 * phi2))) * ((1 + t922) ** (-0.1e1 / 0.2e1)) * ((1 - t922) ** (-0.1e1 / 0.2e1))

        if Bindx == 78:
            t940 = np.sin(phi)
            t936 = t940 ** 2
            t938 = t940 * t936 ** 2
            t935 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t935 * t938 ** 2 * np.sin((9 * phi1)) * ((1 + t935) ** (-0.1e1 / 0.2e1)) * ((1 - t935) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t952 = np.cos(phi)
            t964 = -6 * t952
            t951 = t952 ** 2
            t954 = t952 * t951
            t955 = t951 ** 2
            t956 = t952 * t955
            t957 = t954 ** 2
            t959 = t955 ** 2
            t963 = -8 * t952 * t957 + t959 * t964 - 8 * t954 + 28 * t956 + t964
            t962 = t956 ** 2 + 13 * t951 - 14 * t955 - 14 * t957 + 13 * t959 + 1
            t953 = 10 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.4845e4) * ((t962 + t963) * np.cos((-t953 + 6 * phi2)) + (t962 - t963) * np.cos((t953 + 6 * phi2)))

        if Bindx == 80:
            t965 = np.cos(phi)
            t966 = t965 ** 2
            t967 = t966 ** 2
            t969 = t967 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t967 - 5 * t969 - 1 + (10 * t967 + t969 + 5) * t966)

        if Bindx == 81:
            tfunc[..., c] = 0

        if Bindx == 82:
            t984 = np.cos(phi)
            t983 = t984 ** 2
            t985 = t984 * t983
            t986 = t983 ** 2
            t987 = t984 * t986
            t988 = t985 ** 2
            t990 = t986 ** 2
            t992 = t987 ** 2
            t996 = 470 * t985 - 2028 * t987 + (3564 * t988 - 2774 * t990 + 798 * t992 - 30) * t984
            t995 = 240 * t983 - 1925 * t986 - 8319 * t990 + 5624 * t992 - 5 + (5848 - 1463 * t988) * t988
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.221e3) * ((t995 + t996) * np.sin((phi1 - 6 * phi2)) + (-t995 + t996) * np.sin((phi1 + 6 * phi2))) * ((1 + t984) ** (-0.1e1 / 0.2e1)) * ((1 - t984) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t1009 = np.cos(phi)
            t1008 = t1009 ** 2
            t1012 = t1008 ** 2
            t1011 = t1009 * t1008
            t1014 = t1011 ** 2
            t1016 = t1012 ** 2
            t1013 = t1009 * t1012
            t1018 = t1013 ** 2
            t1021 = -6 + 276 * t1008 - 1940 * t1012 + 4672 * t1014 - 4598 * t1016 + 1596 * t1018
            t1020 = 459 * t1011 - 2218 * t1013 + (4638 * t1014 - 4313 * t1016 + 1463 * t1018 - 29) * t1009
            t1010 = 2 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.170e3) * ((-t1020 + t1021) * np.cos((-t1010 + 6 * phi2)) + (t1020 + t1021) * np.cos((t1010 + 6 * phi2)))

        if Bindx == 84:
            t1035 = np.cos(phi)
            t1034 = t1035 ** 2
            t1037 = t1035 * t1034
            t1038 = t1034 ** 2
            t1039 = t1035 * t1038
            t1040 = t1037 ** 2
            t1042 = t1038 ** 2
            t1044 = t1039 ** 2
            t1048 = 1502 * t1037 - 6460 * t1039 + (11900 * t1040 - 9918 * t1042 + 3078 * t1044 - 102) * t1035
            t1047 = -44 * t1034 + 13 * t1038 - 4917 * t1042 + 5244 * t1044 + 1 + (1584 - 1881 * t1040) * t1040
            t1036 = 3 * phi1
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.595e3) * (-(t1047 + t1048) * np.sin((-t1036 + 6 * phi2)) + (-t1047 + t1048) * np.sin((t1036 + 6 * phi2))) * ((1 + t1035) ** (-0.1e1 / 0.2e1)) * ((1 - t1035) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t1061 = np.cos(phi)
            t1060 = t1061 ** 2
            t1064 = t1060 ** 2
            t1063 = t1061 * t1060
            t1066 = t1063 ** 2
            t1068 = t1064 ** 2
            t1065 = t1061 * t1064
            t1070 = t1065 ** 2
            t1073 = -4 + 160 * t1060 - 1120 * t1064 + 3016 * t1066 - 3420 * t1068 + 1368 * t1070
            t1072 = 345 * t1063 - 874 * t1065 + (330 * t1066 + 855 * t1068 - 627 * t1070 - 29) * t1061
            t1062 = 4 * phi1
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.714e3) * ((t1072 + t1073) * np.cos((-t1062 + 6 * phi2)) + (-t1072 + t1073) * np.cos((t1062 + 6 * phi2)))

        if Bindx == 86:
            t1087 = np.cos(phi)
            t1086 = t1087 ** 2
            t1089 = t1087 * t1086
            t1090 = t1086 ** 2
            t1091 = t1087 * t1090
            t1092 = t1089 ** 2
            t1094 = t1090 ** 2
            t1096 = t1091 ** 2
            t1100 = 2090 * t1089 - 12852 * t1091 + (31412 * t1092 - 32490 * t1094 + 11970 * t1096 - 130) * t1087
            t1099 = -1908 * t1086 + 10745 * t1090 + 13815 * t1094 + 2964 * t1096 + 53 + (-21280 - 4389 * t1092) * t1092
            t1088 = 5 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.102e3) * (-(t1099 + t1100) * np.sin((-t1088 + 6 * phi2)) + (-t1099 + t1100) * np.sin((t1088 + 6 * phi2))) * ((1 + t1087) ** (-0.1e1 / 0.2e1)) * ((1 - t1087) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t1113 = np.cos(phi)
            t1112 = t1113 ** 2
            t1115 = t1112 ** 2
            t1114 = t1113 * t1112
            t1117 = t1114 ** 2
            t1119 = t1115 ** 2
            t1116 = t1113 * t1115
            t1121 = t1116 ** 2
            t1124 = -0.16215e5 / 0.256e3 * t1112 + 0.2415e4 / 0.256e3 * t1115 + 0.28819e5 / 0.32e2 * t1117 - 0.924255e6 / 0.512e3 * t1119 + 0.247779e6 / 0.256e3 * t1121 + 0.1081e4 / 0.512e3
            t1123 = 0.501515e6 / 0.1024e4 * t1114 - 0.803229e6 / 0.512e3 * t1116 + (0.915975e6 / 0.512e3 * t1117 - 0.386745e6 / 0.1024e4 * t1119 - 0.302841e6 / 0.1024e4 * t1121 - 0.49197e5 / 0.1024e4) * t1113
            tfunc[..., c] = (t1123 + t1124) * np.cos((6 * phi1 - 6 * phi2)) + (-t1123 + t1124) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 88:
            t1138 = np.cos(phi)
            t1137 = t1138 ** 2
            t1140 = t1138 * t1137
            t1141 = t1137 ** 2
            t1142 = t1138 * t1141
            t1143 = t1140 ** 2
            t1145 = t1141 ** 2
            t1147 = t1142 ** 2
            t1151 = 2694 * t1140 - 3948 * t1142 + (-3668 * t1143 + 10906 * t1145 - 5586 * t1147 - 398) * t1138
            t1150 = -840 * t1137 + 6251 * t1141 + 15849 * t1145 - 3648 * t1147 + 35 + (-16184 - 1463 * t1143) * t1143
            t1139 = 7 * phi1
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.10e2) * (-(-t1150 + t1151) * np.sin((-t1139 + 6 * phi2)) + (t1150 + t1151) * np.sin((t1139 + 6 * phi2))) * ((1 + t1138) ** (-0.1e1 / 0.2e1)) * ((1 - t1138) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t1164 = np.cos(phi)
            t1163 = t1164 ** 2
            t1167 = t1163 ** 2
            t1166 = t1164 * t1163
            t1169 = t1166 ** 2
            t1171 = t1167 ** 2
            t1168 = t1164 * t1167
            t1173 = t1168 ** 2
            t1176 = -8 + 128 * t1163 - 448 * t1167 + 336 * t1169 + 328 * t1171 - 336 * t1173
            t1175 = 63 * t1166 - 574 * t1168 + (958 * t1169 - 383 * t1171 - 77 * t1173 + 13) * t1164
            t1165 = 8 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.190e3) * ((-t1175 + t1176) * np.cos((-t1165 + 6 * phi2)) + (t1175 + t1176) * np.cos((t1165 + 6 * phi2)))

        if Bindx == 90:
            t1190 = np.cos(phi)
            t1189 = t1190 ** 2
            t1192 = t1190 * t1189
            t1193 = t1189 ** 2
            t1194 = t1190 * t1193
            t1195 = t1192 ** 2
            t1197 = t1193 ** 2
            t1199 = t1194 ** 2
            t1203 = -1402 * t1192 + 3668 * t1194 + (-2452 * t1195 - 1062 * t1197 + 1134 * t1199 + 114) * t1190
            t1202 = 488 * t1189 - 133 * t1193 + 4457 * t1197 - 1552 * t1199 - 61 + (-2968 - 231 * t1195) * t1195
            t1191 = 9 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1202 + t1203) * np.sin((-t1191 + 6 * phi2)) + (-t1202 + t1203) * np.sin((t1191 + 6 * phi2))) * ((1 + t1190) ** (-0.1e1 / 0.2e1)) * ((1 - t1190) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t1216 = np.cos(phi)
            t1215 = t1216 ** 2
            t1219 = t1215 ** 2
            t1218 = t1216 * t1215
            t1221 = t1218 ** 2
            t1223 = t1219 ** 2
            t1220 = t1216 * t1219
            t1225 = t1220 ** 2
            t1228 = -6 - 12 * t1215 + 172 * t1219 - 224 * t1221 + 10 * t1223 + 60 * t1225
            t1227 = -95 * t1218 - 14 * t1220 + (202 * t1221 - 107 * t1223 - 11 * t1225 + 25) * t1216
            t1217 = 10 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.133e3) * ((t1227 + t1228) * np.cos((-t1217 + 6 * phi2)) + (-t1227 + t1228) * np.cos((t1217 + 6 * phi2)))

        if Bindx == 92:
            t1240 = np.cos(phi)
            t1252 = -6 * t1240
            t1239 = t1240 ** 2
            t1242 = t1240 * t1239
            t1243 = t1239 ** 2
            t1244 = t1240 * t1243
            t1245 = t1242 ** 2
            t1247 = t1243 ** 2
            t1251 = -8 * t1240 * t1245 + t1247 * t1252 - 8 * t1242 + 28 * t1244 + t1252
            t1250 = -t1244 ** 2 - 13 * t1239 + 14 * t1243 + 14 * t1245 - 13 * t1247 - 1
            t1241 = 11 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.2926e4) * np.sqrt((1 - t1240)) * np.sqrt((1 + t1240)) * (-(-t1250 + t1251) * np.sin((-t1241 + 6 * phi2)) + (t1250 + t1251) * np.sin((t1241 + 6 * phi2)))

        if Bindx == 93:
            t1253 = np.cos(phi)
            t1254 = t1253 ** 2
            t1260 = -6 * t1254
            t1255 = t1254 ** 2
            t1256 = t1254 * t1255
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t1260 + 1 + (-20 + t1256) * t1256 + (15 + (t1260 + 15) * t1255) * t1255)

        if Bindx == 94:
            t1261 = np.cos(phi)
            t1262 = t1261 ** 2
            t1263 = t1262 ** 2
            t1265 = t1263 ** 2
            t1264 = t1262 * t1263
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2431e4) * (2865 * t1263 + 15447 * t1265 + 5 + (-9904 + 3059 * t1264) * t1264 + (-11172 * t1265 - 300) * t1262) * np.cos((6 * phi2))

        if Bindx == 95:
            t1268 = np.cos(phi)
            t1269 = t1268 ** 2
            t1270 = t1269 ** 2
            t1272 = t1270 ** 2
            t1271 = t1269 * t1270
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t1272 + 0.5630625e7 / 0.1024e4 * t1270 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t1271) * t1271 + (-0.24249225e8 / 0.512e3 * t1272 - 0.225225e6 / 0.512e3) * t1269

        if Bindx == 96:
            t1287 = np.cos(phi)
            t1286 = t1287 ** 2
            t1288 = t1287 * t1286
            t1289 = t1286 ** 2
            t1290 = t1287 * t1289
            t1299 = 10 * t1288 ** 2 - 5 * t1289 ** 2 + t1290 ** 2 - 1
            t1298 = -5 * t1286 + 10 * t1289 - t1299
            t1297 = t1299 * t1287 + 5 * t1288 - 10 * t1290
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.156009e6) * np.sqrt((1 - t1287)) * np.sqrt((1 + t1287)) * ((t1297 + t1298) * np.sin((phi1 - 12 * phi2)) + (t1297 - t1298) * np.sin((phi1 + 12 * phi2)))

        if Bindx == 97:
            t1314 = np.cos(phi)
            t1313 = t1314 ** 2
            t1316 = t1313 ** 2
            t1315 = t1314 * t1313
            t1318 = t1315 ** 2
            t1320 = t1316 ** 2
            t1317 = t1314 * t1316
            t1322 = t1317 ** 2
            t1324 = t1318 ** 2
            t1327 = -5 + 300 * t1313 - 2865 * t1316 + 9904 * t1318 - 15447 * t1320 + 11172 * t1322 - 3059 * t1324
            t1326 = -2010 * t1315 + 11814 * t1317 + (-30500 * t1318 + 39216 * t1320 - 24738 * t1322 + 6118 * t1324 + 100) * t1314
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.561e3) * ((t1326 + t1327) * np.sin((phi1 - 6 * phi2)) + (t1326 - t1327) * np.sin((phi1 + 6 * phi2))) * ((1 + t1314) ** (-0.1e1 / 0.2e1)) * ((1 - t1314) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t1329 = np.cos(phi)
            t1330 = t1329 ** 2
            t1331 = t1330 ** 2
            t1333 = t1331 ** 2
            t1328 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t1329 * t1328 ** 2 * (-39270 * t1331 - 124355 * t1333 - 231 + (106590 * t1331 + 52003 * t1333 + 5775) * t1330) * np.sin(phi1) * ((1 + t1329) ** (-0.1e1 / 0.2e1)) * ((1 - t1329) ** (-0.1e1 / 0.2e1))

        if Bindx == 99:
            t1347 = np.cos(phi)
            t1346 = t1347 ** 2
            t1350 = t1346 ** 2
            t1360 = 5 * t1350 ** 2
            t1351 = t1347 * t1350
            t1355 = t1351 ** 2
            t1356 = t1347 * t1355
            t1359 = t1347 * t1356 + 4 * t1346 - 5 * t1350 - 4 * t1355 + t1360 - 1
            t1358 = 2 * t1347 * t1360 + 2 * t1347 + 20 * t1351 - 2 * t1356 + 2 * (-5 * t1347 - 10 * t1351) * t1346
            t1348 = 2 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.490314e6) * ((t1358 + t1359) * np.cos((-t1348 + 12 * phi2)) + (-t1358 + t1359) * np.cos((t1348 + 12 * phi2)))

        if Bindx == 100:
            t1374 = np.cos(phi)
            t1373 = t1374 ** 2
            t1376 = t1374 * t1373
            t1377 = t1373 ** 2
            t1378 = t1374 * t1377
            t1379 = t1376 ** 2
            t1381 = t1377 ** 2
            t1383 = t1378 ** 2
            t1387 = -1595 * t1376 + 8122 * t1378 + (-16606 * t1379 + 14801 * t1381 - 4807 * t1383 + 85) * t1374
            t1386 = -290 * t1373 + 2845 * t1377 + 18791 * t1381 - 15466 * t1383 + 5 + (-10692 + 4807 * t1379) * t1379
            t1375 = 2 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.714e3) * ((t1386 + t1387) * np.cos((-t1375 + 6 * phi2)) + (t1386 - t1387) * np.cos((t1375 + 6 * phi2)))

        if Bindx == 101:
            t1388 = np.cos(phi)
            t1389 = t1388 ** 2
            t1390 = t1389 ** 2
            t1392 = t1390 ** 2
            t1391 = t1389 * t1390
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t1390 + 24225 * t1392 + 3 + (-12240 + 7429 * t1391) * t1391 + (-21964 * t1392 - 228) * t1389) * np.cos((2 * phi1))

        if Bindx == 102:
            t1407 = np.cos(phi)
            t1406 = t1407 ** 2
            t1410 = t1406 ** 2
            t1409 = t1407 * t1406
            t1412 = t1409 ** 2
            t1414 = t1410 ** 2
            t1411 = t1407 * t1410
            t1416 = t1411 ** 2
            t1419 = -1 + t1406 + 6 * t1410 - 14 * t1412 + 11 * t1414 - 3 * t1416
            t1418 = -11 * t1409 + 14 * t1411 + (-6 * t1412 - t1414 + t1416 + 3) * t1407
            t1408 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.81719e5) * np.sqrt((1 - t1407)) * np.sqrt((1 + t1407)) * (-(t1418 + t1419) * np.sin((-t1408 + 12 * phi2)) + (t1418 - t1419) * np.sin((t1408 + 12 * phi2)))

        if Bindx == 103:
            t1434 = np.cos(phi)
            t1433 = t1434 ** 2
            t1437 = t1433 ** 2
            t1436 = t1434 * t1433
            t1439 = t1436 ** 2
            t1441 = t1437 ** 2
            t1438 = t1434 * t1437
            t1443 = t1438 ** 2
            t1445 = t1439 ** 2
            t1448 = -23 + 1288 * t1433 - 11855 * t1437 + 40952 * t1439 - 65797 * t1441 + 49856 * t1443 - 14421 * t1445
            t1447 = -362 * t1436 + 4222 * t1438 + (-18692 * t1439 + 35720 * t1441 - 30514 * t1443 + 9614 * t1445 + 12) * t1434
            t1435 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.119e3) * (-(t1447 + t1448) * np.sin((-t1435 + 6 * phi2)) + (t1447 - t1448) * np.sin((t1435 + 6 * phi2))) * ((1 + t1434) ** (-0.1e1 / 0.2e1)) * ((1 - t1434) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t1456 = np.sin(phi)
            t1454 = t1456 ** 2
            t1449 = np.cos(phi)
            t1450 = t1449 ** 2
            t1451 = t1450 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t1449 * t1454 ** 2 * (-1020 * t1450 + 45 + (-11628 * t1450 + 5814 + 7429 * t1451) * t1451) * np.sin((3 * phi1)) * ((1 + t1449) ** (-0.1e1 / 0.2e1)) * ((1 - t1449) ** (-0.1e1 / 0.2e1))

        if Bindx == 105:
            t1470 = np.cos(phi)
            t1469 = t1470 ** 2
            t1472 = t1470 * t1469
            t1473 = t1469 ** 2
            t1474 = t1470 * t1473
            t1475 = t1472 ** 2
            t1477 = t1473 ** 2
            t1479 = t1474 ** 2
            t1483 = 12 * t1472 - 8 * t1474 + 4 * (-2 * t1475 + 3 * t1477 - t1479 - 1) * t1470
            t1482 = 2 * t1469 - 17 * t1473 - 17 * t1477 + 2 * t1479 + 1 + (28 + t1475) * t1475
            t1471 = 4 * phi1
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.81719e5) * ((t1482 + t1483) * np.cos((-t1471 + 12 * phi2)) + (t1482 - t1483) * np.cos((t1471 + 12 * phi2)))

        if Bindx == 106:
            t1497 = np.cos(phi)
            t1496 = t1497 ** 2
            t1499 = t1497 * t1496
            t1500 = t1496 ** 2
            t1501 = t1497 * t1500
            t1502 = t1499 ** 2
            t1504 = t1500 ** 2
            t1506 = t1501 ** 2
            t1510 = -2470 * t1499 + 12588 * t1501 + (-27436 * t1502 + 26790 * t1504 - 9614 * t1506 + 142) * t1497
            t1509 = 364 * t1496 - 2435 * t1500 + 2755 * t1504 - 9196 * t1506 - 7 + (3712 + 4807 * t1502) * t1502
            t1498 = 4 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.119e3) * ((t1509 + t1510) * np.cos((-t1498 + 6 * phi2)) + (t1509 - t1510) * np.cos((t1498 + 6 * phi2)))

        if Bindx == 107:
            t1511 = np.cos(phi)
            t1512 = t1511 ** 2
            t1513 = t1512 ** 2
            t1515 = t1513 ** 2
            t1514 = t1512 * t1513
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t1513 + 28747 * t1515 + 5 + (-15844 + 7429 * t1514) * t1514 + (-23902 * t1515 - 350) * t1512) * np.cos((4 * phi1))

        if Bindx == 108:
            t1530 = np.cos(phi)
            t1529 = t1530 ** 2
            t1533 = t1529 ** 2
            t1532 = t1530 * t1529
            t1535 = t1532 ** 2
            t1537 = t1533 ** 2
            t1534 = t1530 * t1533
            t1539 = t1534 ** 2
            t1542 = 1 + 7 * t1529 - 22 * t1533 + 14 * t1535 + 5 * t1537 - 5 * t1539
            t1541 = 5 * t1532 + 14 * t1534 + (-22 * t1535 + 7 * t1537 + t1539 - 5) * t1530
            t1531 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.9614e4) * np.sqrt((1 - t1530)) * np.sqrt((1 + t1530)) * (-(t1541 + t1542) * np.sin((-t1531 + 12 * phi2)) + (t1541 - t1542) * np.sin((t1531 + 12 * phi2)))

        if Bindx == 109:
            t1557 = np.cos(phi)
            t1556 = t1557 ** 2
            t1560 = t1556 ** 2
            t1559 = t1557 * t1556
            t1562 = t1559 ** 2
            t1564 = t1560 ** 2
            t1561 = t1557 * t1560
            t1566 = t1561 ** 2
            t1568 = t1562 ** 2
            t1571 = -25 + 1200 * t1556 - 11465 * t1560 + 45592 * t1562 - 84987 * t1564 + 73720 * t1566 - 24035 * t1568
            t1570 = 5958 * t1559 - 24450 * t1561 + (37500 * t1562 - 14440 * t1564 - 13794 * t1566 + 9614 * t1568 - 388) * t1557
            t1558 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.14e2) * (-(t1570 + t1571) * np.sin((-t1558 + 6 * phi2)) + (t1570 - t1571) * np.sin((t1558 + 6 * phi2))) * ((1 + t1557) ** (-0.1e1 / 0.2e1)) * ((1 - t1557) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t1579 = np.sin(phi)
            t1576 = t1579 ** 2
            t1577 = t1579 * t1576
            t1572 = np.cos(phi)
            t1573 = t1572 ** 2
            t1574 = t1573 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t1572 * t1577 ** 2 * (-399 * t1574 - 5 + (437 * t1574 + 95) * t1573) * np.sin((5 * phi1)) * ((1 + t1572) ** (-0.1e1 / 0.2e1)) * ((1 - t1572) ** (-0.1e1 / 0.2e1))

        if Bindx == 111:
            t1592 = np.cos(phi)
            t1591 = t1592 ** 2
            t1595 = t1591 ** 2
            t1598 = t1595 ** 2
            t1596 = t1592 * t1595
            t1600 = t1596 ** 2
            t1601 = t1592 * t1600
            t1604 = t1592 * t1601 - 12 * t1591 + 27 * t1595 - 27 * t1598 + 12 * t1600 - 1
            t1603 = -6 * t1601 + 2 * (18 * t1591 - 18) * t1596 + 2 * (t1591 - t1598 + 3) * t1592
            t1593 = 6 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1603 + t1604) * np.cos((-t1593 + 12 * phi2)) + (-t1603 + t1604) * np.cos((t1593 + 12 * phi2)))

        if Bindx == 112:
            t1618 = np.cos(phi)
            t1617 = t1618 ** 2
            t1619 = t1618 * t1617
            t1620 = t1617 ** 2
            t1621 = t1618 * t1620
            t1622 = t1619 ** 2
            t1624 = t1620 ** 2
            t1626 = t1621 ** 2
            t1630 = -0.67375e5 / 0.1024e4 * t1619 + 0.615825e6 / 0.512e3 * t1621 + (-0.2227275e7 / 0.512e3 * t1622 + 0.5802125e7 / 0.1024e4 * t1624 - 0.2523675e7 / 0.1024e4 * t1626 - 0.975e3 / 0.1024e4) * t1618
            t1629 = 0.141225e6 / 0.512e3 * t1617 - 0.1882125e7 / 0.1024e4 * t1620 - 0.3954375e7 / 0.1024e4 * t1624 + 0.109725e6 / 0.512e3 * t1626 - 0.6725e4 / 0.1024e4 + (0.1128225e7 / 0.256e3 + 0.841225e6 / 0.1024e4 * t1622) * t1622
            tfunc[..., c] = (t1629 + t1630) * np.cos((6 * phi1 - 6 * phi2)) + (t1629 - t1630) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 113:
            t1631 = np.cos(phi)
            t1632 = t1631 ** 2
            t1633 = t1632 ** 2
            t1635 = t1633 ** 2
            t1634 = t1632 * t1633
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1633 + 15447 * t1635 + 5 + (-9904 + 3059 * t1634) * t1634 + (-11172 * t1635 - 300) * t1632) * np.cos((6 * phi1))

        if Bindx == 114:
            t1650 = np.cos(phi)
            t1649 = t1650 ** 2
            t1653 = t1649 ** 2
            t1652 = t1650 * t1649
            t1655 = t1652 ** 2
            t1657 = t1653 ** 2
            t1654 = t1650 * t1653
            t1659 = t1654 ** 2
            t1662 = -1 - 19 * t1649 + 6 * t1653 + 42 * t1655 - 21 * t1657 - 7 * t1659
            t1661 = 21 * t1652 - 42 * t1654 + (-6 * t1655 + 19 * t1657 + t1659 + 7) * t1650
            t1651 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.10626e5) * np.sqrt((1 - t1650)) * np.sqrt((1 + t1650)) * (-(t1661 + t1662) * np.sin((-t1651 + 12 * phi2)) + (t1661 - t1662) * np.sin((t1651 + 12 * phi2)))

        if Bindx == 115:
            t1677 = np.cos(phi)
            t1676 = t1677 ** 2
            t1680 = t1676 ** 2
            t1679 = t1677 * t1676
            t1682 = t1679 ** 2
            t1684 = t1680 ** 2
            t1681 = t1677 * t1680
            t1686 = t1681 ** 2
            t1688 = t1682 ** 2
            t1691 = 29 - 1044 * t1676 + 3745 * t1680 + 2016 * t1682 - 23121 * t1684 + 30772 * t1686 - 12397 * t1688
            t1690 = 4774 * t1679 - 21546 * t1681 + (40956 * t1682 - 31520 * t1684 + 4158 * t1686 + 3542 * t1688 - 364) * t1677
            t1678 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1690 + t1691) * np.sin((-t1678 + 6 * phi2)) + (t1690 - t1691) * np.sin((t1678 + 6 * phi2))) * ((1 + t1677) ** (-0.1e1 / 0.2e1)) * ((1 - t1677) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t1698 = np.sin(phi)
            t1695 = t1698 ** 2
            t1696 = t1695 ** 2
            t1692 = np.cos(phi)
            t1693 = t1692 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t1692 * t1696 ** 2 * (5 + (-70 + 161 * t1693) * t1693) * np.sin((7 * phi1)) * ((1 + t1692) ** (-0.1e1 / 0.2e1)) * ((1 - t1692) ** (-0.1e1 / 0.2e1))

        if Bindx == 117:
            t1712 = np.cos(phi)
            t1711 = t1712 ** 2
            t1714 = t1712 * t1711
            t1715 = t1711 ** 2
            t1716 = t1712 * t1715
            t1717 = t1714 ** 2
            t1719 = t1715 ** 2
            t1721 = t1716 ** 2
            t1725 = -40 * t1714 + 48 * t1716 + 8 * (6 * t1717 - 5 * t1719 - t1721 - 1) * t1712
            t1724 = 26 * t1711 + 15 * t1715 + 15 * t1719 + 26 * t1721 + 1 + (-84 + t1717) * t1717
            t1713 = 8 * phi1
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.10626e5) * ((t1724 + t1725) * np.cos((-t1713 + 12 * phi2)) + (t1724 - t1725) * np.cos((t1713 + 12 * phi2)))

        if Bindx == 118:
            t1739 = np.cos(phi)
            t1738 = t1739 ** 2
            t1741 = t1739 * t1738
            t1742 = t1738 ** 2
            t1743 = t1739 * t1742
            t1744 = t1741 ** 2
            t1746 = t1742 ** 2
            t1748 = t1743 ** 2
            t1752 = 3332 * t1741 - 6888 * t1743 + (-408 * t1744 + 11452 * t1746 - 7084 * t1748 - 404) * t1739
            t1751 = 532 * t1738 - 5607 * t1742 - 20337 * t1746 + 5852 * t1748 - 19 + (17808 + 1771 * t1744) * t1744
            t1740 = 8 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * ((t1751 + t1752) * np.cos((-t1740 + 6 * phi2)) + (t1751 - t1752) * np.cos((t1740 + 6 * phi2)))

        if Bindx == 119:
            t1753 = np.cos(phi)
            t1754 = t1753 ** 2
            t1755 = t1754 ** 2
            t1757 = t1755 ** 2
            t1756 = t1754 * t1755
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t1755 + 1135 * t1757 + 1 + (-900 + 161 * t1756) * t1756 + (-686 * t1757 - 46) * t1754) * np.cos((8 * phi1))

        if Bindx == 120:
            t1772 = np.cos(phi)
            t1771 = t1772 ** 2
            t1775 = t1771 ** 2
            t1774 = t1772 * t1771
            t1777 = t1774 ** 2
            t1779 = t1775 ** 2
            t1776 = t1772 * t1775
            t1781 = t1776 ** 2
            t1784 = 1 + 35 * t1771 + 90 * t1775 - 42 * t1777 - 75 * t1779 - 9 * t1781
            t1783 = -75 * t1774 - 42 * t1776 + (90 * t1777 + 35 * t1779 + t1781 - 9) * t1772
            t1773 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.506e3) * np.sqrt((1 - t1772)) * np.sqrt((1 + t1772)) * (-(t1783 + t1784) * np.sin((-t1773 + 12 * phi2)) + (t1783 - t1784) * np.sin((t1773 + 12 * phi2)))

        if Bindx == 121:
            t1799 = np.cos(phi)
            t1798 = t1799 ** 2
            t1802 = t1798 ** 2
            t1801 = t1799 * t1798
            t1804 = t1801 ** 2
            t1806 = t1802 ** 2
            t1803 = t1799 * t1802
            t1808 = t1803 ** 2
            t1810 = t1804 ** 2
            t1813 = 37 - 740 * t1798 + 3673 * t1802 - 5952 * t1804 + 1383 * t1806 + 3876 * t1808 - 2277 * t1810
            t1812 = -54 * t1801 - 3078 * t1803 + (9252 * t1804 - 9088 * t1806 + 2354 * t1808 + 506 * t1810 + 108) * t1799
            t1800 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.266e3) * (-(t1812 + t1813) * np.sin((-t1800 + 6 * phi2)) + (t1812 - t1813) * np.sin((t1800 + 6 * phi2))) * ((1 + t1799) ** (-0.1e1 / 0.2e1)) * ((1 - t1799) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t1819 = np.sin(phi)
            t1815 = t1819 ** 2
            t1817 = t1819 * t1815 ** 2
            t1814 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t1814 * t1817 ** 2 * (23 * t1814 ** 2 - 3) * np.sin((9 * phi1)) * ((1 + t1814) ** (-0.1e1 / 0.2e1)) * ((1 - t1814) ** (-0.1e1 / 0.2e1))

        if Bindx == 123:
            t1832 = np.cos(phi)
            t1831 = t1832 ** 2
            t1835 = t1831 ** 2
            t1838 = t1835 ** 2
            t1836 = t1832 * t1835
            t1840 = t1836 ** 2
            t1841 = t1832 * t1840
            t1844 = t1832 * t1841 - 44 * t1831 - 165 * t1835 + 165 * t1838 + 44 * t1840 - 1
            t1843 = -10 * t1841 + (-132 * t1831 + 132) * t1836 + (110 * t1831 - 110 * t1838 + 10) * t1832
            t1833 = 10 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.69e2) * ((t1843 + t1844) * np.cos((-t1833 + 12 * phi2)) + (-t1843 + t1844) * np.cos((t1833 + 12 * phi2)))

        if Bindx == 124:
            t1858 = np.cos(phi)
            t1857 = t1858 ** 2
            t1860 = t1858 * t1857
            t1861 = t1857 ** 2
            t1862 = t1858 * t1861
            t1863 = t1860 ** 2
            t1865 = t1861 ** 2
            t1867 = t1862 ** 2
            t1871 = 121 * t1860 - 366 * t1862 + (282 * t1863 + 85 * t1865 - 115 * t1867 - 7) * t1858
            t1870 = -50 * t1857 + 45 * t1861 - 441 * t1865 + 166 * t1867 + 5 + (252 + 23 * t1863) * t1863
            t1859 = 10 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.4389e4) * ((t1870 + t1871) * np.cos((-t1859 + 6 * phi2)) + (t1870 - t1871) * np.cos((t1859 + 6 * phi2)))

        if Bindx == 125:
            t1872 = np.cos(phi)
            t1873 = t1872 ** 2
            t1874 = t1873 ** 2
            t1876 = t1874 ** 2
            t1875 = t1873 * t1874
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t1874 + 235 * t1876 + 1 + (-240 + 23 * t1875) * t1875 + (-116 * t1876 - 28) * t1873) * np.cos((10 * phi1))

        if Bindx == 126:
            t1891 = np.cos(phi)
            t1890 = t1891 ** 2
            t1894 = t1890 ** 2
            t1893 = t1891 * t1890
            t1896 = t1893 ** 2
            t1898 = t1894 ** 2
            t1895 = t1891 * t1894
            t1900 = t1895 ** 2
            t1903 = -1 - 55 * t1890 - 330 * t1894 - 462 * t1896 - 165 * t1898 - 11 * t1900
            t1902 = 165 * t1893 + 462 * t1895 + (330 * t1896 + 55 * t1898 + t1900 + 11) * t1891
            t1892 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6e1) * np.sqrt((1 - t1891)) * np.sqrt((1 + t1891)) * (-(t1902 + t1903) * np.sin((-t1892 + 12 * phi2)) + (t1902 - t1903) * np.sin((t1892 + 12 * phi2)))

        if Bindx == 127:
            t1917 = np.cos(phi)
            t1919 = t1917 ** 2
            t1921 = t1919 ** 2
            t1920 = t1917 * t1919
            t1923 = t1920 ** 2
            t1925 = t1921 ** 2
            t1922 = t1917 * t1921
            t1927 = t1922 ** 2
            t1929 = t1923 ** 2
            t1932 = -1 + 31 * t1921 - 72 * t1923 + 45 * t1925 + 8 * t1927 - 11 * t1929
            t1931 = -22 * t1920 + 18 * t1922 + (36 * t1923 - 56 * t1925 + 18 * t1927 + 2 * t1929 + 4) * t1917
            t1918 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.201894e6) * (-(t1931 + t1932) * np.sin((-t1918 + 6 * phi2)) + (t1931 - t1932) * np.sin((t1918 + 6 * phi2))) * ((1 + t1917) ** (-0.1e1 / 0.2e1)) * ((1 - t1917) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1938 = np.sin(phi)
            t1934 = t1938 ** 2
            t1935 = t1938 * t1934
            t1936 = t1935 ** 2
            t1933 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t1933 * t1936 ** 2 * np.sin((11 * phi1)) * ((1 + t1933) ** (-0.1e1 / 0.2e1)) * ((1 - t1933) ** (-0.1e1 / 0.2e1))

        if Bindx == 129:
            t1952 = np.cos(phi)
            t1951 = t1952 ** 2
            t1953 = t1952 * t1951
            t1954 = t1951 ** 2
            t1955 = t1952 * t1954
            t1956 = t1953 ** 2
            t1958 = t1954 ** 2
            t1960 = t1955 ** 2
            t1964 = -0.75e2 / 0.1024e4 * (t1960 + 1) * t1952 - 0.2475e4 / 0.512e3 * t1952 * t1956 - 0.2475e4 / 0.512e3 * t1955 - 0.1375e4 / 0.1024e4 * t1952 * t1958 - 0.1375e4 / 0.1024e4 * t1953
            t1963 = 0.25e2 / 0.4096e4 + 0.12375e5 / 0.4096e4 * t1958 + 0.12375e5 / 0.4096e4 * t1954 + 0.825e3 / 0.2048e4 * t1960 + 0.825e3 / 0.2048e4 * t1951 + (0.5775e4 / 0.1024e4 + 0.25e2 / 0.4096e4 * t1956) * t1956
            tfunc[..., c] = (t1963 + t1964) * np.cos((12 * phi1 - 12 * phi2)) + (t1963 - t1964) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 130:
            t1978 = np.cos(phi)
            t1977 = t1978 ** 2
            t1981 = t1977 ** 2
            t1984 = t1981 ** 2
            t1982 = t1978 * t1981
            t1986 = t1982 ** 2
            t1987 = t1978 * t1986
            t1990 = t1978 * t1987 - 12 * t1977 + 27 * t1981 - 27 * t1984 + 12 * t1986 - 1
            t1989 = -6 * t1987 + 2 * (18 * t1977 - 18) * t1982 + 2 * (t1977 - t1984 + 3) * t1978
            t1979 = 12 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1989 + t1990) * np.cos((-t1979 + 6 * phi2)) + (-t1989 + t1990) * np.cos((t1979 + 6 * phi2)))

        if Bindx == 131:
            t1991 = np.cos(phi)
            t1992 = t1991 ** 2
            t1998 = -6 * t1992
            t1993 = t1992 ** 2
            t1994 = t1992 * t1993
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t1998 + 1 + (-20 + t1994) * t1994 + (15 + (t1998 + 15) * t1993) * t1993)

        if Bindx == 132:
            tfunc[..., c] = 0

        if Bindx == 133:
            tfunc[..., c] = 0

        if Bindx == 134:
            t2014 = np.cos(phi)
            t2013 = t2014 ** 2
            t2015 = t2014 * t2013
            t2016 = t2013 ** 2
            t2017 = t2014 * t2016
            t2018 = t2015 ** 2
            t2019 = t2014 * t2018
            t2020 = t2016 ** 2
            t2022 = t2017 ** 2
            t2024 = t2018 ** 2
            t2028 = -720 * t2015 + 4878 * t2017 - 14064 * t2019 + (19674 * t2020 - 13248 * t2022 + 3450 * t2024 + 30) * t2014
            t2027 = -7475 * t2019 ** 2 - 365 * t2013 + 4425 * t2016 - 20473 * t2018 + 45919 * t2020 - 53799 * t2022 + 31763 * t2024 + 5
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.7106e4) * ((t2027 + t2028) * np.sin((phi1 - 6 * phi2)) + (-t2027 + t2028) * np.sin((phi1 + 6 * phi2))) * ((1 + t2014) ** (-0.1e1 / 0.2e1)) * ((1 - t2014) ** (-0.1e1 / 0.2e1))

        if Bindx == 135:
            t2044 = np.cos(phi)
            t2043 = t2044 ** 2
            t2045 = t2044 * t2043
            t2046 = t2043 ** 2
            t2047 = t2044 * t2046
            t2048 = t2045 ** 2
            t2049 = t2044 * t2048
            t2050 = t2046 ** 2
            t2052 = t2047 ** 2
            t2054 = t2048 ** 2
            t2058 = 72 * t2045 - 180 * t2047 + 240 * t2049 + 12 * (-15 * t2050 + 6 * t2052 - t2054 - 1) * t2044
            t2057 = -13 * t2049 ** 2 - 19 * t2043 + 93 * t2046 - 215 * t2048 + 275 * t2050 - 201 * t2052 + 79 * t2054 + 1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.14858e5) * ((-t2057 + t2058) * np.sin((phi1 - 12 * phi2)) + (t2057 + t2058) * np.sin((phi1 + 12 * phi2))) * ((1 + t2044) ** (-0.1e1 / 0.2e1)) * ((1 - t2044) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t2073 = np.cos(phi)
            t2072 = t2073 ** 2
            t2076 = t2072 ** 2
            t2075 = t2073 * t2072
            t2078 = t2075 ** 2
            t2080 = t2076 ** 2
            t2077 = t2073 * t2076
            t2082 = t2077 ** 2
            t2084 = t2078 ** 2
            t2087 = 1 - 71 * t2072 + 790 * t2076 - 3142 * t2078 + 5573 * t2080 - 4531 * t2082 + 1380 * t2084
            t2086 = 214 * t2075 - 1493 * t2077 + (4588 * t2078 - 7003 * t2080 + 5198 * t2082 - 1495 * t2084 - 9) * t2073
            t2074 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.35530e5) * ((t2086 + t2087) * np.cos((-t2074 + 6 * phi2)) + (-t2086 + t2087) * np.cos((t2074 + 6 * phi2)))

        if Bindx == 137:
            t2102 = np.cos(phi)
            t2101 = t2102 ** 2
            t2105 = t2101 ** 2
            t2104 = t2102 * t2101
            t2107 = t2104 ** 2
            t2109 = t2105 ** 2
            t2106 = t2102 * t2105
            t2111 = t2106 ** 2
            t2113 = t2107 ** 2
            t2116 = -2 + 34 * t2101 - 140 * t2105 + 260 * t2107 - 250 * t2109 + 122 * t2111 - 24 * t2113
            t2115 = -32 * t2104 + 25 * t2106 + (40 * t2107 - 85 * t2109 + 56 * t2111 - 13 * t2113 + 9) * t2102
            t2103 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.74290e5) * ((-t2115 + t2116) * np.cos((-t2103 + 12 * phi2)) + (t2115 + t2116) * np.cos((t2103 + 12 * phi2)))

        if Bindx == 138:
            t2132 = np.cos(phi)
            t2131 = t2132 ** 2
            t2135 = t2131 ** 2
            t2134 = t2132 * t2131
            t2137 = t2134 ** 2
            t2138 = t2132 * t2137
            t2139 = t2135 ** 2
            t2136 = t2132 * t2135
            t2141 = t2136 ** 2
            t2143 = t2137 ** 2
            t2147 = -16445 * t2138 ** 2 - 207 * t2131 + 2939 * t2135 - 17743 * t2137 + 52529 * t2139 - 79013 * t2141 + 57937 * t2143 + 3
            t2146 = -4444 * t2134 + 29390 * t2136 - 84680 * t2138 + (120766 * t2139 - 83996 * t2141 + 22770 * t2143 + 194) * t2132
            t2133 = 3 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.3230e4) * (-(t2146 + t2147) * np.sin((-t2133 + 6 * phi2)) + (t2146 - t2147) * np.sin((t2133 + 6 * phi2))) * ((1 + t2132) ** (-0.1e1 / 0.2e1)) * ((1 - t2132) ** (-0.1e1 / 0.2e1))

        if Bindx == 139:
            t2163 = np.cos(phi)
            t2162 = t2163 ** 2
            t2165 = t2163 * t2162
            t2166 = t2162 ** 2
            t2167 = t2163 * t2166
            t2168 = t2165 ** 2
            t2169 = t2163 * t2168
            t2170 = t2166 ** 2
            t2172 = t2167 ** 2
            t2174 = t2168 ** 2
            t2178 = 16 * t2165 - 140 * t2167 + 320 * t2169 + (-340 * t2170 + 176 * t2172 - 36 * t2174 + 4) * t2163
            t2177 = -13 * t2169 ** 2 + 45 * t2162 - 167 * t2166 + 265 * t2168 - 185 * t2170 + 23 * t2172 + 35 * t2174 - 3
            t2164 = 3 * phi1
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.817190e6) * (-(-t2177 + t2178) * np.sin((-t2164 + 12 * phi2)) + (t2177 + t2178) * np.sin((t2164 + 12 * phi2))) * ((1 + t2163) ** (-0.1e1 / 0.2e1)) * ((1 - t2163) ** (-0.1e1 / 0.2e1))

        if Bindx == 140:
            t2193 = np.cos(phi)
            t2192 = t2193 ** 2
            t2195 = t2193 * t2192
            t2196 = t2192 ** 2
            t2197 = t2193 * t2196
            t2198 = t2195 ** 2
            t2200 = t2196 ** 2
            t2202 = t2197 ** 2
            t2204 = t2198 ** 2
            t2207 = 7280 * t2195 - 27661 * t2197 + (-1480 * t2198 + 136345 * t2200 - 196328 * t2202 + 82225 * t2204 - 381) * t2193
            t2206 = 6890 * t2192 - 73180 * t2196 + 291124 * t2198 - 536930 * t2200 + 464002 * t2202 - 151800 * t2204 - 106
            t2194 = 4 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * ((t2206 + t2207) * np.cos((-t2194 + 6 * phi2)) + (t2206 - t2207) * np.cos((t2194 + 6 * phi2)))

        if Bindx == 141:
            t2222 = np.cos(phi)
            t2221 = t2222 ** 2
            t2225 = t2221 ** 2
            t2224 = t2222 * t2221
            t2227 = t2224 ** 2
            t2229 = t2225 ** 2
            t2226 = t2222 * t2225
            t2231 = t2226 ** 2
            t2233 = t2227 ** 2
            t2236 = 4 - 44 * t2221 + 88 * t2225 + 8 * t2227 - 172 * t2229 + 164 * t2231 - 48 * t2233
            t2235 = -74 * t2224 + 253 * t2226 + (-332 * t2227 + 173 * t2229 - 10 * t2231 - 13 * t2233 + 3) * t2222
            t2223 = 4 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * ((-t2235 + t2236) * np.cos((-t2223 + 12 * phi2)) + (t2235 + t2236) * np.cos((t2223 + 12 * phi2)))

        if Bindx == 142:
            t2252 = np.cos(phi)
            t2251 = t2252 ** 2
            t2255 = t2251 ** 2
            t2254 = t2252 * t2251
            t2257 = t2254 ** 2
            t2258 = t2252 * t2257
            t2259 = t2255 ** 2
            t2256 = t2252 * t2255
            t2261 = t2256 ** 2
            t2263 = t2257 ** 2
            t2267 = 82225 * t2258 ** 2 - 6893 * t2251 + 63345 * t2255 - 196005 * t2257 + 221115 * t2259 + 6369 * t2261 - 170269 * t2263 + 113
            t2266 = -26140 * t2254 + 175642 * t2256 - 542952 * t2258 + (845090 * t2259 - 642620 * t2261 + 189750 * t2263 + 1230) * t2252
            t2253 = 5 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.38e2) * (-(t2266 - t2267) * np.sin((-t2253 + 6 * phi2)) + (t2266 + t2267) * np.sin((t2253 + 6 * phi2))) * ((1 + t2252) ** (-0.1e1 / 0.2e1)) * ((1 - t2252) ** (-0.1e1 / 0.2e1))

        if Bindx == 143:
            t2283 = np.cos(phi)
            t2282 = t2283 ** 2
            t2285 = t2283 * t2282
            t2286 = t2282 ** 2
            t2287 = t2283 * t2286
            t2288 = t2285 ** 2
            t2289 = t2283 * t2288
            t2290 = t2286 ** 2
            t2292 = t2287 ** 2
            t2294 = t2288 ** 2
            t2298 = 128 * t2285 - 332 * t2287 + 288 * t2289 + (28 * t2290 - 160 * t2292 + 60 * t2294 - 12) * t2283
            t2297 = -13 * t2289 ** 2 - 35 * t2282 - 15 * t2286 + 297 * t2288 - 513 * t2290 + 327 * t2292 - 53 * t2294 + 5
            t2284 = 5 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.9614e4) * (-(t2297 + t2298) * np.sin((-t2284 + 12 * phi2)) + (-t2297 + t2298) * np.sin((t2284 + 12 * phi2))) * ((1 + t2283) ** (-0.1e1 / 0.2e1)) * ((1 - t2283) ** (-0.1e1 / 0.2e1))

        if Bindx == 144:
            t2313 = np.cos(phi)
            t2312 = t2313 ** 2
            t2315 = t2312 ** 2
            t2314 = t2313 * t2312
            t2317 = t2314 ** 2
            t2319 = t2315 ** 2
            t2316 = t2313 * t2315
            t2321 = t2316 ** 2
            t2323 = t2317 ** 2
            t2326 = -0.102465e6 / 0.1024e4 * t2312 + 0.657045e6 / 0.512e3 * t2315 - 0.3475629e7 / 0.512e3 * t2317 + 0.16073235e8 / 0.1024e4 * t2319 - 0.16469541e8 / 0.1024e4 * t2321 + 0.1536975e7 / 0.256e3 * t2323 + 0.1863e4 / 0.1024e4
            t2325 = -0.611145e6 / 0.512e3 * t2314 + 0.5875983e7 / 0.1024e4 * t2316 + (-0.2772225e7 / 0.256e3 * t2317 + 0.7301745e7 / 0.1024e4 * t2319 + 0.635283e6 / 0.512e3 * t2321 - 0.2220075e7 / 0.1024e4 * t2323 + 0.69147e5 / 0.1024e4) * t2313
            tfunc[..., c] = (t2325 + t2326) * np.cos((6 * phi1 - 6 * phi2)) + (-t2325 + t2326) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 145:
            t2341 = np.cos(phi)
            t2340 = t2341 ** 2
            t2344 = t2340 ** 2
            t2343 = t2341 * t2340
            t2346 = t2343 ** 2
            t2348 = t2344 ** 2
            t2345 = t2341 * t2344
            t2350 = t2345 ** 2
            t2352 = t2346 ** 2
            t2355 = 6 - 6 * t2340 - 188 * t2344 + 468 * t2346 - 306 * t2348 - 46 * t2350 + 72 * t2352
            t2354 = 144 * t2343 - 135 * t2345 + (-216 * t2346 + 363 * t2348 - 120 * t2350 - 13 * t2352 - 23) * t2341
            t2342 = 6 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2354 + t2355) * np.cos((-t2342 + 12 * phi2)) + (-t2354 + t2355) * np.cos((t2342 + 12 * phi2)))

        if Bindx == 146:
            t2371 = np.cos(phi)
            t2370 = t2371 ** 2
            t2373 = t2371 * t2370
            t2374 = t2370 ** 2
            t2375 = t2371 * t2374
            t2376 = t2373 ** 2
            t2377 = t2371 * t2376
            t2378 = t2374 ** 2
            t2380 = t2375 ** 2
            t2382 = t2376 ** 2
            t2386 = -2632 * t2373 - 4046 * t2375 + 65664 * t2377 + (-161938 * t2378 + 155848 * t2380 - 53130 * t2382 + 234) * t2371
            t2385 = 16445 * t2377 ** 2 - 4165 * t2370 + 35553 * t2374 - 120057 * t2376 + 183327 * t2378 - 112959 * t2380 + 1771 * t2382 + 85
            t2372 = 7 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.35e2) * (-(t2385 + t2386) * np.sin((-t2372 + 6 * phi2)) + (-t2385 + t2386) * np.sin((t2372 + 6 * phi2))) * ((1 + t2371) ** (-0.1e1 / 0.2e1)) * ((1 - t2371) ** (-0.1e1 / 0.2e1))

        if Bindx == 147:
            t2402 = np.cos(phi)
            t2401 = t2402 ** 2
            t2404 = t2402 * t2401
            t2405 = t2401 ** 2
            t2406 = t2402 * t2405
            t2407 = t2404 ** 2
            t2408 = t2402 * t2407
            t2409 = t2405 ** 2
            t2411 = t2406 ** 2
            t2413 = t2407 ** 2
            t2417 = 136 * t2404 + 116 * t2406 - 720 * t2408 + (644 * t2409 - 56 * t2411 - 84 * t2413 - 36) * t2402
            t2416 = -13 * t2408 ** 2 - 35 * t2401 + 357 * t2405 - 567 * t2407 + 27 * t2409 + 423 * t2411 - 185 * t2413 - 7
            t2403 = 7 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-(-t2416 + t2417) * np.sin((-t2403 + 12 * phi2)) + (t2416 + t2417) * np.sin((t2403 + 12 * phi2))) * ((1 + t2402) ** (-0.1e1 / 0.2e1)) * ((1 - t2402) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t2432 = np.cos(phi)
            t2431 = t2432 ** 2
            t2435 = t2431 ** 2
            t2434 = t2432 * t2431
            t2437 = t2434 ** 2
            t2439 = t2435 ** 2
            t2436 = t2432 * t2435
            t2441 = t2436 ** 2
            t2443 = t2437 ** 2
            t2446 = 5084 * t2431 - 24904 * t2435 + 20568 * t2437 + 69204 * t2439 - 130548 * t2441 + 60720 * t2443 - 124
            t2445 = 15864 * t2434 - 84537 * t2436 + (185544 * t2437 - 164659 * t2439 + 32384 * t2441 + 16445 * t2443 - 1041) * t2432
            t2433 = 8 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.10e2) * ((-t2445 + t2446) * np.cos((-t2433 + 6 * phi2)) + (t2445 + t2446) * np.cos((t2433 + 6 * phi2)))

        if Bindx == 149:
            t2461 = np.cos(phi)
            t2460 = t2461 ** 2
            t2464 = t2460 ** 2
            t2463 = t2461 * t2460
            t2466 = t2463 ** 2
            t2468 = t2464 ** 2
            t2465 = t2461 * t2464
            t2470 = t2465 ** 2
            t2472 = t2466 ** 2
            t2475 = -8 - 104 * t2460 + 400 * t2464 + 48 * t2466 - 744 * t2468 + 312 * t2470 + 96 * t2472
            t2474 = -18 * t2463 - 579 * t2465 + (708 * t2466 + 125 * t2468 - 274 * t2470 - 13 * t2472 + 51) * t2461
            t2462 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2530e4) * ((t2474 + t2475) * np.cos((-t2462 + 12 * phi2)) + (-t2474 + t2475) * np.cos((t2462 + 12 * phi2)))

        if Bindx == 150:
            t2491 = np.cos(phi)
            t2490 = t2491 ** 2
            t2493 = t2491 * t2490
            t2494 = t2490 ** 2
            t2495 = t2491 * t2494
            t2496 = t2493 ** 2
            t2497 = t2491 * t2496
            t2498 = t2494 ** 2
            t2500 = t2495 ** 2
            t2502 = t2496 ** 2
            t2506 = 14936 * t2493 - 48274 * t2495 + 47136 * t2497 + (28866 * t2498 - 72312 * t2500 + 31050 * t2502 - 1402) * t2491
            t2505 = -7475 * t2497 ** 2 + 891 * t2490 - 17631 * t2494 + 83799 * t2496 - 155601 * t2498 + 118561 * t2500 - 22517 * t2502 - 27
            t2492 = 9 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.11e2) * (-(t2505 + t2506) * np.sin((-t2492 + 6 * phi2)) + (-t2505 + t2506) * np.sin((t2492 + 6 * phi2))) * ((1 + t2491) ** (-0.1e1 / 0.2e1)) * ((1 - t2491) ** (-0.1e1 / 0.2e1))

        if Bindx == 151:
            t2522 = np.cos(phi)
            t2521 = t2522 ** 2
            t2524 = t2522 * t2521
            t2525 = t2521 ** 2
            t2526 = t2522 * t2525
            t2527 = t2524 ** 2
            t2528 = t2522 * t2527
            t2529 = t2525 ** 2
            t2531 = t2526 ** 2
            t2533 = t2527 ** 2
            t2537 = -152 * t2524 + 1012 * t2526 - 528 * t2528 + (-924 * t2529 + 552 * t2531 + 108 * t2533 - 68) * t2522
            t2536 = -13 * t2528 ** 2 + 189 * t2521 - 363 * t2525 - 759 * t2527 + 1419 * t2529 - 121 * t2531 - 361 * t2533 + 9
            t2523 = 9 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.23e2) * (-(t2536 + t2537) * np.sin((-t2523 + 12 * phi2)) + (-t2536 + t2537) * np.sin((t2523 + 12 * phi2))) * ((1 + t2522) ** (-0.1e1 / 0.2e1)) * ((1 - t2522) ** (-0.1e1 / 0.2e1))

        if Bindx == 152:
            t2552 = np.cos(phi)
            t2551 = t2552 ** 2
            t2555 = t2551 ** 2
            t2554 = t2552 * t2551
            t2557 = t2554 ** 2
            t2559 = t2555 ** 2
            t2556 = t2552 * t2555
            t2561 = t2556 ** 2
            t2563 = t2557 ** 2
            t2566 = -17 + 391 * t2551 - 2246 * t2555 + 4182 * t2557 - 1605 * t2559 - 2205 * t2561 + 1500 * t2563
            t2565 = 210 * t2554 + 1377 * t2556 + (-5436 * t2557 + 5951 * t2559 - 1702 * t2561 - 325 * t2563 - 75) * t2552
            t2553 = 10 * phi1
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.253e3) * ((t2565 + t2566) * np.cos((-t2553 + 6 * phi2)) + (-t2565 + t2566) * np.cos((t2553 + 6 * phi2)))

        if Bindx == 153:
            t2581 = np.cos(phi)
            t2580 = t2581 ** 2
            t2584 = t2580 ** 2
            t2583 = t2581 * t2580
            t2586 = t2583 ** 2
            t2588 = t2584 ** 2
            t2585 = t2581 * t2584
            t2590 = t2585 ** 2
            t2592 = t2586 ** 2
            t2595 = -0.20925e5 / 0.1024e4 * t2580 - 0.7425e4 / 0.512e3 * t2584 + 0.57915e5 / 0.512e3 * t2586 - 0.4455e4 / 0.1024e4 * t2588 - 0.66825e5 / 0.1024e4 * t2590 - 0.2025e4 / 0.256e3 * t2592 - 0.675e3 / 0.1024e4
            t2594 = -0.4455e4 / 0.128e3 * t2583 + 0.111375e6 / 0.2048e4 * t2585 + (0.22275e5 / 0.256e3 * t2586 - 0.141075e6 / 0.2048e4 * t2588 - 0.7965e4 / 0.256e3 * t2590 - 0.1755e4 / 0.2048e4 * t2592 - 0.11745e5 / 0.2048e4) * t2581
            t2582 = 10 * phi1
            tfunc[..., c] = (-t2594 + t2595) * np.cos((-t2582 + 12 * phi2)) + (t2594 + t2595) * np.cos((t2582 + 12 * phi2))

        if Bindx == 154:
            t2611 = np.cos(phi)
            t2610 = t2611 ** 2
            t2613 = t2611 * t2610
            t2614 = t2610 ** 2
            t2615 = t2611 * t2614
            t2616 = t2613 ** 2
            t2617 = t2611 * t2616
            t2618 = t2614 ** 2
            t2620 = t2615 ** 2
            t2622 = t2616 ** 2
            t2626 = -1532 * t2613 + 6626 * t2615 - 9576 * t2617 + (3482 * t2618 + 2596 * t2620 - 1650 * t2622 + 54) * t2611
            t2625 = -325 * t2617 ** 2 - 767 * t2610 + 1707 * t2614 + 2025 * t2616 - 9207 * t2618 + 8667 * t2620 - 2159 * t2622 + 59
            t2612 = 11 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.506e3) * (-(-t2625 + t2626) * np.sin((-t2612 + 6 * phi2)) + (t2625 + t2626) * np.sin((t2612 + 6 * phi2))) * ((1 - t2611) ** (-0.1e1 / 0.2e1)) * ((1 + t2611) ** (-0.1e1 / 0.2e1))

        if Bindx == 155:
            t2642 = np.cos(phi)
            t2641 = t2642 ** 2
            t2644 = t2642 * t2641
            t2645 = t2641 ** 2
            t2646 = t2642 * t2645
            t2647 = t2644 ** 2
            t2648 = t2642 * t2647
            t2649 = t2645 ** 2
            t2651 = t2646 ** 2
            t2653 = t2647 ** 2
            t2657 = -992 * t2644 + 308 * t2646 + 3168 * t2648 + (-836 * t2649 - 1408 * t2651 - 132 * t2653 - 108) * t2642
            t2656 = -13 * t2648 ** 2 - 451 * t2641 - 1023 * t2645 + 2409 * t2647 + 1551 * t2649 - 1881 * t2651 - 581 * t2653 - 11
            t2643 = 11 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * (-(-t2656 + t2657) * np.sin((-t2643 + 12 * phi2)) + (t2656 + t2657) * np.sin((t2643 + 12 * phi2))) * ((1 - t2642) ** (-0.1e1 / 0.2e1)) * ((1 + t2642) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t2672 = np.cos(phi)
            t2671 = t2672 ** 2
            t2675 = t2671 ** 2
            t2674 = t2672 * t2671
            t2677 = t2674 ** 2
            t2679 = t2675 ** 2
            t2676 = t2672 * t2675
            t2681 = t2676 ** 2
            t2683 = t2677 ** 2
            t2686 = -6 + 6 * t2671 + 188 * t2675 - 468 * t2677 + 306 * t2679 + 46 * t2681 - 72 * t2683
            t2685 = 144 * t2674 - 135 * t2676 + (-216 * t2677 + 363 * t2679 - 120 * t2681 - 13 * t2683 - 23) * t2672
            t2673 = 12 * phi1
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((-t2685 + t2686) * np.cos((-t2673 + 6 * phi2)) + (t2685 + t2686) * np.cos((t2673 + 6 * phi2)))

        if Bindx == 157:
            t2701 = np.cos(phi)
            t2700 = t2701 ** 2
            t2703 = t2700 ** 2
            t2702 = t2701 * t2700
            t2705 = t2702 ** 2
            t2707 = t2703 ** 2
            t2704 = t2701 * t2703
            t2709 = t2704 ** 2
            t2711 = t2705 ** 2
            t2714 = -0.4293e4 / 0.1024e4 * t2700 - 0.10395e5 / 0.512e3 * t2703 - 0.2673e4 / 0.512e3 * t2705 + 0.29403e5 / 0.1024e4 * t2707 + 0.13959e5 / 0.1024e4 * t2709 + 0.243e3 / 0.256e3 * t2711 - 0.81e2 / 0.1024e4
            t2713 = 0.24057e5 / 0.2048e4 * t2702 + 0.82863e5 / 0.4096e4 * t2704 + (-0.16929e5 / 0.1024e4 * t2705 - 0.102465e6 / 0.4096e4 * t2707 - 0.9639e4 / 0.2048e4 * t2709 - 0.351e3 / 0.4096e4 * t2711 + 0.3537e4 / 0.4096e4) * t2701
            tfunc[..., c] = (t2713 + t2714) * np.cos((12 * phi1 - 12 * phi2)) + (-t2713 + t2714) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 158:
            t2727 = np.cos(phi)
            t2726 = t2727 ** 2
            t2730 = t2726 ** 2
            t2733 = t2730 ** 2
            t2731 = t2727 * t2730
            t2735 = t2731 ** 2
            t2736 = t2727 * t2735
            t2739 = -t2727 * t2736 + 12 * t2726 - 27 * t2730 + 27 * t2733 - 12 * t2735 + 1
            t2738 = -6 * t2736 + 2 * (18 * t2726 - 18) * t2731 + 2 * (t2726 - t2733 + 3) * t2727
            t2728 = 13 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.6578e4) * np.sqrt((1 - t2727)) * np.sqrt((1 + t2727)) * (-(t2738 - t2739) * np.sin((-t2728 + 6 * phi2)) + (t2738 + t2739) * np.sin((t2728 + 6 * phi2)))

        if Bindx == 159:
            t2754 = np.cos(phi)
            t2753 = t2754 ** 2
            t2756 = t2754 * t2753
            t2757 = t2753 ** 2
            t2758 = t2754 * t2757
            t2760 = t2757 ** 2
            t2762 = t2758 ** 2
            t2759 = t2756 ** 2
            t2764 = t2759 ** 2
            t2765 = t2754 * t2764
            t2768 = 208 * t2756 + 572 * t2758 - 12 * t2765 + (-572 * t2760 - 208 * t2762 + 12) * t2754
            t2767 = -t2754 * t2765 + 65 * t2753 + 429 * t2757 + 429 * t2759 - 429 * t2760 - 429 * t2762 - 65 * t2764 + 1
            t2755 = 13 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.26e2) * (-(-t2767 + t2768) * np.sin((-t2755 + 12 * phi2)) + (t2767 + t2768) * np.sin((t2755 + 12 * phi2))) * ((1 + t2754) ** (-0.1e1 / 0.2e1)) * ((1 - t2754) ** (-0.1e1 / 0.2e1))

        if Bindx == 160:
            t2769 = np.cos(phi)
            t2770 = t2769 ** 2
            t2771 = t2770 ** 2
            t2772 = t2770 * t2771
            t2775 = t2772 ** 2
            t2773 = t2771 ** 2
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.52003e5) * (-177 * t2771 + 425 * t2772 - 555 * t2773 - 163 * t2775 - 1 + (411 * t2773 + 27 * t2775 + 33) * t2770) * np.cos((12 * phi2))

        if Bindx == 161:
            t2777 = np.cos(phi)
            t2778 = t2777 ** 2
            t2779 = t2778 ** 2
            t2780 = t2778 * t2779
            t2783 = t2780 ** 2
            t2781 = t2779 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.3233230e7) * (-1221 * t2779 + 6371 * t2780 - 15747 * t2781 - 12535 * t2783 - 1 + (19941 * t2781 + 3105 * t2783 + 87) * t2778) * np.cos((6 * phi2))

        if Bindx == 162:
            t2785 = np.cos(phi)
            t2786 = t2785 ** 2
            t2787 = t2786 ** 2
            t2788 = t2786 * t2787
            t2791 = t2788 ** 2
            t2789 = t2787 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t2791 - 0.421936515e9 / 0.2048e4 * t2789 + 0.140645505e9 / 0.2048e4 * t2788 - 0.22207185e8 / 0.2048e4 * t2787 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t2791 + 0.646969323e9 / 0.2048e4 * t2789 + 0.1306305e7 / 0.2048e4) * t2786

        if Bindx == 163:
            t2809 = np.cos(phi)
            t2808 = t2809 ** 2
            t2811 = t2808 ** 2
            t2810 = t2809 * t2808
            t2813 = t2810 ** 2
            t2815 = t2811 ** 2
            t2812 = t2809 * t2811
            t2817 = t2812 ** 2
            t2819 = t2813 ** 2
            t2814 = t2809 * t2813
            t2821 = t2814 ** 2
            t2824 = 2 - 66 * t2808 + 354 * t2811 - 850 * t2813 + 1110 * t2815 - 822 * t2817 + 326 * t2819 - 54 * t2821
            t2823 = 129 * t2810 - 543 * t2812 + 1165 * t2814 + (-1425 * t2815 + 1011 * t2817 - 389 * t2819 + 63 * t2821 - 11) * t2809
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.222870e6) * ((t2823 + t2824) * np.sin((phi1 - 12 * phi2)) + (t2823 - t2824) * np.sin((phi1 + 12 * phi2))) * ((1 + t2809) ** (-0.1e1 / 0.2e1)) * ((1 - t2809) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t2841 = np.cos(phi)
            t2840 = t2841 ** 2
            t2843 = t2840 ** 2
            t2842 = t2841 * t2840
            t2845 = t2842 ** 2
            t2847 = t2843 ** 2
            t2844 = t2841 * t2843
            t2849 = t2844 ** 2
            t2851 = t2845 ** 2
            t2846 = t2841 * t2845
            t2853 = t2846 ** 2
            t2856 = 1 - 87 * t2840 + 1221 * t2843 - 6371 * t2845 + 15747 * t2847 - 19941 * t2849 + 12535 * t2851 - 3105 * t2853
            t2855 = 843 * t2842 - 7185 * t2844 + 27367 * t2846 + (-54231 * t2847 + 58305 * t2849 - 32315 * t2851 + 7245 * t2853 - 29) * t2841
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.138567e6) * ((t2855 + t2856) * np.sin((phi1 - 6 * phi2)) + (t2855 - t2856) * np.sin((phi1 + 6 * phi2))) * ((1 + t2841) ** (-0.1e1 / 0.2e1)) * ((1 - t2841) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t2858 = np.cos(phi)
            t2859 = t2858 ** 2
            t2860 = t2859 ** 2
            t2862 = t2860 ** 2
            t2861 = t2859 * t2860
            t2857 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t2858 * t2857 ** 2 * (138567 * t2860 + 1062347 * t2862 + 429 + (-554268 + 334305 * t2861) * t2861 + (-965770 * t2862 - 14586) * t2859) * np.sin(phi1) * ((1 + t2858) ** (-0.1e1 / 0.2e1)) * ((1 - t2858) ** (-0.1e1 / 0.2e1))

        if Bindx == 166:
            t2880 = np.cos(phi)
            t2879 = t2880 ** 2
            t2883 = t2879 ** 2
            t2882 = t2880 * t2879
            t2885 = t2882 ** 2
            t2886 = t2880 * t2885
            t2887 = t2883 ** 2
            t2884 = t2880 * t2883
            t2889 = t2884 ** 2
            t2891 = t2885 ** 2
            t2895 = 63 * t2886 ** 2 - 31 * t2879 + 77 * t2883 + 45 * t2885 - 365 * t2887 + 499 * t2889 - 289 * t2891 + 1
            t2894 = 208 * t2882 - 740 * t2884 + 1280 * t2886 + (-1180 * t2887 + 560 * t2889 - 108 * t2891 - 20) * t2880
            t2881 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.2897310e7) * ((t2894 + t2895) * np.cos((-t2881 + 12 * phi2)) + (-t2894 + t2895) * np.cos((t2881 + 12 * phi2)))

        if Bindx == 167:
            t2911 = np.cos(phi)
            t2910 = t2911 ** 2
            t2913 = t2911 * t2910
            t2914 = t2910 ** 2
            t2915 = t2911 * t2914
            t2916 = t2913 ** 2
            t2917 = t2911 * t2916
            t2918 = t2914 ** 2
            t2920 = t2915 ** 2
            t2922 = t2916 ** 2
            t2926 = -9596 * t2913 + 74182 * t2915 - 241480 * t2917 + (377798 * t2918 - 281980 * t2920 + 80730 * t2922 + 346) * t2911
            t2925 = 94185 * t2917 ** 2 + 1955 * t2910 - 27487 * t2914 + 147411 * t2916 - 383021 * t2918 + 518305 * t2920 - 351325 * t2922 - 23
            t2912 = 2 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.10659e5) * ((t2925 - t2926) * np.cos((-t2912 + 6 * phi2)) + (t2925 + t2926) * np.cos((t2912 + 6 * phi2)))

        if Bindx == 168:
            t2927 = np.cos(phi)
            t2928 = t2927 ** 2
            t2929 = t2928 ** 2
            t2930 = t2928 * t2929
            t2933 = t2930 ** 2
            t2931 = t2929 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t2929 + 351747 * t2930 - 1033923 * t2931 - 1151495 * t2933 - 33 + (1552661 * t2931 + 334305 * t2933 + 3399) * t2928) * np.cos((2 * phi1))

        if Bindx == 169:
            t2951 = np.cos(phi)
            t2950 = t2951 ** 2
            t2954 = t2950 ** 2
            t2953 = t2951 * t2950
            t2956 = t2953 ** 2
            t2958 = t2954 ** 2
            t2955 = t2951 * t2954
            t2960 = t2955 ** 2
            t2962 = t2956 ** 2
            t2957 = t2951 * t2956
            t2964 = t2957 ** 2
            t2967 = 2 - 58 * t2950 + 746 * t2954 - 2930 * t2956 + 5350 * t2958 - 5102 * t2960 + 2478 * t2962 - 486 * t2964
            t2966 = -701 * t2953 + 2191 * t2955 - 3065 * t2957 + (1745 * t2958 + 185 * t2960 - 619 * t2962 + 189 * t2964 + 75) * t2951
            t2952 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.56810e5) * (-(t2966 + t2967) * np.sin((-t2952 + 12 * phi2)) + (t2966 - t2967) * np.sin((t2952 + 12 * phi2))) * ((1 + t2951) ** (-0.1e1 / 0.2e1)) * ((1 - t2951) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t2984 = np.cos(phi)
            t2983 = t2984 ** 2
            t2987 = t2983 ** 2
            t2986 = t2984 * t2983
            t2989 = t2986 ** 2
            t2991 = t2987 ** 2
            t2988 = t2984 * t2987
            t2993 = t2988 ** 2
            t2995 = t2989 ** 2
            t2990 = t2984 * t2989
            t2997 = t2990 ** 2
            t3000 = 10043 * t2983 - 136357 * t2987 + 699343 * t2989 - 1726427 * t2991 + 2214049 * t2993 - 1423815 * t2995 + 363285 * t2997 - 121
            t2999 = 13093 * t2986 - 123587 * t2988 + 551233 * t2990 + (-1303597 * t2991 + 1667615 * t2993 - 1086865 * t2995 + 282555 * t2997 - 447) * t2984
            t2985 = 3 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.209e3) * (-(t2999 - t3000) * np.sin((-t2985 + 6 * phi2)) + (t2999 + t3000) * np.sin((t2985 + 6 * phi2))) * ((1 + t2984) ** (-0.1e1 / 0.2e1)) * ((1 - t2984) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t3009 = np.sin(phi)
            t3007 = t3009 ** 2
            t3001 = np.cos(phi)
            t3002 = t3001 ** 2
            t3003 = t3002 ** 2
            t3005 = t3003 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t3001 * t3007 ** 2 * (-26334 * t3003 - 120175 * t3005 - 99 + (86526 * t3003 + 58995 * t3005 + 3135) * t3002) * np.sin((3 * phi1)) * ((1 + t3001) ** (-0.1e1 / 0.2e1)) * ((1 - t3001) ** (-0.1e1 / 0.2e1))

        if Bindx == 172:
            t3025 = np.cos(phi)
            t3024 = t3025 ** 2
            t3027 = t3025 * t3024
            t3028 = t3024 ** 2
            t3029 = t3025 * t3028
            t3030 = t3027 ** 2
            t3031 = t3025 * t3030
            t3032 = t3028 ** 2
            t3034 = t3029 ** 2
            t3036 = t3030 ** 2
            t3040 = -48 * t3027 + 40 * t3029 + 160 * t3031 + (-360 * t3032 + 272 * t3034 - 72 * t3036 + 8) * t3025
            t3039 = 21 * t3031 ** 2 - 25 * t3024 + 169 * t3028 - 425 * t3030 + 475 * t3032 - 211 * t3034 - 5 * t3036 + 1
            t3026 = 4 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.312455e6) * ((t3039 + t3040) * np.cos((-t3026 + 12 * phi2)) + (t3039 - t3040) * np.cos((t3026 + 12 * phi2)))

        if Bindx == 173:
            t3056 = np.cos(phi)
            t3055 = t3056 ** 2
            t3059 = t3055 ** 2
            t3058 = t3056 * t3055
            t3061 = t3058 ** 2
            t3062 = t3056 * t3061
            t3063 = t3059 ** 2
            t3060 = t3056 * t3059
            t3065 = t3060 ** 2
            t3067 = t3061 ** 2
            t3071 = 345345 * t3062 ** 2 - 2449 * t3055 + 21251 * t3059 - 2509 * t3061 - 338899 * t3063 + 947485 * t3065 - 970255 * t3067 + 31
            t3070 = 64624 * t3058 - 483996 * t3060 + 1573504 * t3062 + (-2522916 * t3063 + 1963280 * t3065 - 592020 * t3067 - 2476) * t3056
            t3057 = 4 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.38e2) * ((t3070 + t3071) * np.cos((-t3057 + 6 * phi2)) + (-t3070 + t3071) * np.cos((t3057 + 6 * phi2)))

        if Bindx == 174:
            t3072 = np.cos(phi)
            t3073 = t3072 ** 2
            t3074 = t3073 ** 2
            t3075 = t3073 * t3074
            t3078 = t3075 ** 2
            t3076 = t3074 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t3074 + 8873 * t3075 - 24491 * t3076 - 24035 * t3078 - 1 + (34523 * t3076 + 6555 * t3078 + 97) * t3073) * np.cos((4 * phi1))

        if Bindx == 175:
            t3096 = np.cos(phi)
            t3095 = t3096 ** 2
            t3099 = t3095 ** 2
            t3098 = t3096 * t3095
            t3101 = t3098 ** 2
            t3103 = t3099 ** 2
            t3100 = t3096 * t3099
            t3105 = t3100 ** 2
            t3107 = t3101 ** 2
            t3102 = t3096 * t3101
            t3109 = t3102 ** 2
            t3112 = -2 + 42 * t3095 - 218 * t3099 + 402 * t3101 - 198 * t3103 - 226 * t3105 + 290 * t3107 - 90 * t3109
            t3111 = -5 * t3098 + 207 * t3100 - 657 * t3102 + (833 * t3103 - 447 * t3105 + 53 * t3107 + 21 * t3109 - 5) * t3096
            t3097 = 5 * phi1
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.6578e4) * (-(t3111 + t3112) * np.sin((-t3097 + 12 * phi2)) + (t3111 - t3112) * np.sin((t3097 + 12 * phi2))) * ((1 + t3096) ** (-0.1e1 / 0.2e1)) * ((1 - t3096) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t3129 = np.cos(phi)
            t3128 = t3129 ** 2
            t3132 = t3128 ** 2
            t3131 = t3129 * t3128
            t3134 = t3131 ** 2
            t3136 = t3132 ** 2
            t3133 = t3129 * t3132
            t3138 = t3133 ** 2
            t3140 = t3134 ** 2
            t3135 = t3129 * t3134
            t3142 = t3135 ** 2
            t3145 = 17175 * t3128 - 222785 * t3132 + 1148347 * t3134 - 2946015 * t3136 + 3989557 * t3138 - 2726075 * t3140 + 740025 * t3142 - 229
            t3144 = -46785 * t3131 + 291903 * t3133 - 673485 * t3135 + (430705 * t3136 + 554829 * t3138 - 904475 * t3140 + 345345 * t3142 + 1963) * t3129
            t3130 = 5 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.5e1) * (-(t3144 - t3145) * np.sin((-t3130 + 6 * phi2)) + (t3144 + t3145) * np.sin((t3130 + 6 * phi2))) * ((1 + t3129) ** (-0.1e1 / 0.2e1)) * ((1 - t3129) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t3154 = np.sin(phi)
            t3151 = t3154 ** 2
            t3152 = t3154 * t3151
            t3146 = np.cos(phi)
            t3147 = t3146 ** 2
            t3148 = t3147 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t3146 * t3152 ** 2 * (-140 * t3147 + 5 + (-2300 * t3147 + 966 + 1725 * t3148) * t3148) * np.sin((5 * phi1)) * ((1 + t3146) ** (-0.1e1 / 0.2e1)) * ((1 - t3146) ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t3170 = np.cos(phi)
            t3169 = t3170 ** 2
            t3172 = t3170 * t3169
            t3173 = t3169 ** 2
            t3174 = t3170 * t3173
            t3175 = t3172 ** 2
            t3176 = t3170 * t3175
            t3177 = t3173 ** 2
            t3179 = t3174 ** 2
            t3181 = t3175 ** 2
            t3185 = -752 * t3172 + 3708 * t3174 - 5760 * t3176 + (2372 * t3177 + 1392 * t3179 - 972 * t3181 + 12) * t3170
            t3184 = 189 * t3176 ** 2 + 435 * t3169 - 1161 * t3173 - 729 * t3175 + 5049 * t3177 - 5079 * t3179 + 1325 * t3181 - 29
            t3171 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3184 + t3185) * np.cos((-t3171 + 12 * phi2)) + (t3184 - t3185) * np.cos((t3171 + 12 * phi2)))

        if Bindx == 179:
            t3201 = np.cos(phi)
            t3200 = t3201 ** 2
            t3202 = t3201 * t3200
            t3203 = t3200 ** 2
            t3204 = t3201 * t3203
            t3205 = t3202 ** 2
            t3206 = t3201 * t3205
            t3207 = t3203 ** 2
            t3209 = t3204 ** 2
            t3211 = t3205 ** 2
            t3215 = 0.3773857e7 / 0.4096e4 * t3202 - 0.60502149e8 / 0.8192e4 * t3204 + 0.55660599e8 / 0.2048e4 * t3206 + (-0.403806469e9 / 0.8192e4 * t3207 + 0.175097505e9 / 0.4096e4 * t3209 - 0.115887915e9 / 0.8192e4 * t3211 - 0.307371e6 / 0.8192e4) * t3201
            t3214 = 0.90135045e8 / 0.16384e5 * t3206 ** 2 - 0.6677337e7 / 0.16384e5 * t3200 + 0.70342893e8 / 0.16384e5 * t3203 - 0.257721753e9 / 0.16384e5 * t3205 + 0.386829927e9 / 0.16384e5 * t3207 - 0.167833875e9 / 0.16384e5 * t3209 - 0.114934105e9 / 0.16384e5 * t3211 + 0.96773e5 / 0.16384e5
            tfunc[..., c] = (t3214 + t3215) * np.cos((6 * phi1 - 6 * phi2)) + (t3214 - t3215) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 180:
            t3216 = np.cos(phi)
            t3217 = t3216 ** 2
            t3218 = t3217 ** 2
            t3219 = t3217 * t3218
            t3222 = t3219 ** 2
            t3220 = t3218 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t3218 + 6371 * t3219 - 15747 * t3220 - 12535 * t3222 - 1 + (19941 * t3220 + 3105 * t3222 + 87) * t3217) * np.cos((6 * phi1))

        if Bindx == 181:
            t3240 = np.cos(phi)
            t3239 = t3240 ** 2
            t3243 = t3239 ** 2
            t3242 = t3240 * t3239
            t3245 = t3242 ** 2
            t3247 = t3243 ** 2
            t3244 = t3240 * t3243
            t3249 = t3244 ** 2
            t3251 = t3245 ** 2
            t3246 = t3240 * t3245
            t3253 = t3246 ** 2
            t3256 = 2 - 18 * t3239 - 14 * t3243 + 270 * t3245 - 522 * t3247 + 314 * t3249 + 22 * t3251 - 54 * t3253
            t3255 = 71 * t3242 - 225 * t3244 + 171 * t3246 + (193 * t3247 - 315 * t3249 + 101 * t3251 + 9 * t3253 - 5) * t3240
            t3241 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.345345e6) * (-(t3255 + t3256) * np.sin((-t3241 + 12 * phi2)) + (t3255 - t3256) * np.sin((t3241 + 12 * phi2))) * ((1 + t3240) ** (-0.1e1 / 0.2e1)) * ((1 - t3240) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t3273 = np.cos(phi)
            t3272 = t3273 ** 2
            t3276 = t3272 ** 2
            t3275 = t3273 * t3272
            t3278 = t3275 ** 2
            t3280 = t3276 ** 2
            t3277 = t3273 * t3276
            t3282 = t3277 ** 2
            t3284 = t3278 ** 2
            t3279 = t3273 * t3278
            t3286 = t3279 ** 2
            t3289 = -441 * t3272 + 28259 * t3276 - 297549 * t3278 + 1106901 * t3280 - 1871947 * t3282 + 1478785 * t3284 - 444015 * t3286 + 7
            t3288 = -70861 * t3275 + 437535 * t3277 - 1183569 * t3279 + (1497881 * t3280 - 717255 * t3282 - 115115 * t3284 + 148005 * t3286 + 3379) * t3273
            t3274 = 7 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.42e2) * (-(t3288 + t3289) * np.sin((-t3274 + 6 * phi2)) + (t3288 - t3289) * np.sin((t3274 + 6 * phi2))) * ((1 + t3273) ** (-0.1e1 / 0.2e1)) * ((1 - t3273) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t3297 = np.sin(phi)
            t3294 = t3297 ** 2
            t3295 = t3294 ** 2
            t3290 = np.cos(phi)
            t3291 = t3290 ** 2
            t3292 = t3291 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t3290 * t3295 ** 2 * (-805 * t3292 - 7 + (1035 * t3292 + 161) * t3291) * np.sin((7 * phi1)) * ((1 + t3290) ** (-0.1e1 / 0.2e1)) * ((1 - t3290) ** (-0.1e1 / 0.2e1))

        if Bindx == 184:
            t3313 = np.cos(phi)
            t3312 = t3313 ** 2
            t3315 = t3313 * t3312
            t3316 = t3312 ** 2
            t3317 = t3313 * t3316
            t3318 = t3315 ** 2
            t3319 = t3313 * t3318
            t3320 = t3316 ** 2
            t3322 = t3317 ** 2
            t3324 = t3318 ** 2
            t3328 = 608 * t3315 - 528 * t3317 - 2112 * t3319 + (3344 * t3320 - 800 * t3322 - 432 * t3324 - 80) * t3313
            t3327 = 63 * t3319 ** 2 - 19 * t3312 - 957 * t3316 + 2805 * t3318 - 1551 * t3320 - 1441 * t3322 + 1081 * t3324 + 19
            t3314 = 8 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.8970e4) * ((t3327 + t3328) * np.cos((-t3314 + 12 * phi2)) + (t3327 - t3328) * np.cos((t3314 + 12 * phi2)))

        if Bindx == 185:
            t3344 = np.cos(phi)
            t3343 = t3344 ** 2
            t3346 = t3344 * t3343
            t3347 = t3343 ** 2
            t3348 = t3344 * t3347
            t3349 = t3346 ** 2
            t3350 = t3344 * t3349
            t3351 = t3347 ** 2
            t3353 = t3348 ** 2
            t3355 = t3349 ** 2
            t3359 = -26848 * t3346 + 59784 * t3348 + 165120 * t3350 + (-719624 * t3351 + 842720 * t3353 - 322920 * t3355 + 1768) * t3344
            t3358 = 94185 * t3350 ** 2 - 17105 * t3343 + 164979 * t3347 - 631173 * t3349 + 1090533 * t3351 - 783955 * t3353 + 82225 * t3355 + 311
            t3345 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.33e2) * ((t3358 + t3359) * np.cos((-t3345 + 6 * phi2)) + (t3358 - t3359) * np.cos((t3345 + 6 * phi2)))

        if Bindx == 186:
            t3360 = np.cos(phi)
            t3361 = t3360 ** 2
            t3362 = t3361 ** 2
            t3363 = t3361 * t3362
            t3366 = t3363 ** 2
            t3364 = t3362 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t3362 + 3753 * t3363 - 7867 * t3364 - 4715 * t3366 - 1 + (8579 * t3364 + 1035 * t3366 + 73) * t3361) * np.cos((8 * phi1))

        if Bindx == 187:
            t3384 = np.cos(phi)
            t3383 = t3384 ** 2
            t3387 = t3383 ** 2
            t3386 = t3384 * t3383
            t3389 = t3386 ** 2
            t3391 = t3387 ** 2
            t3388 = t3384 * t3387
            t3393 = t3388 ** 2
            t3395 = t3389 ** 2
            t3390 = t3384 * t3389
            t3397 = t3390 ** 2
            t3400 = -74 - 518 * t3383 + 5542 * t3387 - 8646 * t3389 - 4686 * t3391 + 14718 * t3393 - 4878 * t3395 - 1458 * t3397
            t3399 = -1677 * t3386 - 3333 * t3388 + 16071 * t3390 + (-12859 * t3391 - 3127 * t3393 + 4313 * t3395 + 189 * t3397 + 423) * t3384
            t3385 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.65e2) * (-(t3399 + t3400) * np.sin((-t3385 + 12 * phi2)) + (t3399 - t3400) * np.sin((t3385 + 12 * phi2))) * ((1 + t3384) ** (-0.1e1 / 0.2e1)) * ((1 - t3384) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t3417 = np.cos(phi)
            t3416 = t3417 ** 2
            t3420 = t3416 ** 2
            t3419 = t3417 * t3416
            t3422 = t3419 ** 2
            t3424 = t3420 ** 2
            t3421 = t3417 * t3420
            t3426 = t3421 ** 2
            t3428 = t3422 ** 2
            t3423 = t3417 * t3422
            t3430 = t3423 ** 2
            t3433 = 3713 * t3416 - 25099 * t3420 + 53301 * t3422 - 5037 * t3424 - 114909 * t3426 + 135495 * t3428 - 47385 * t3430 - 79
            t3432 = -8613 * t3419 + 60183 * t3421 - 183753 * t3423 + (264289 * t3424 - 165455 * t3426 + 20605 * t3428 + 12285 * t3430 + 459) * t3417
            t3418 = 9 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.506e3) * (-(t3432 + t3433) * np.sin((-t3418 + 6 * phi2)) + (t3432 - t3433) * np.sin((t3418 + 6 * phi2))) * ((1 + t3417) ** (-0.1e1 / 0.2e1)) * ((1 - t3417) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t3441 = np.sin(phi)
            t3437 = t3441 ** 2
            t3439 = t3441 * t3437 ** 2
            t3434 = np.cos(phi)
            t3435 = t3434 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t3434 * t3439 ** 2 * (3 + (-50 + 135 * t3435) * t3435) * np.sin((9 * phi1)) * ((1 + t3434) ** (-0.1e1 / 0.2e1)) * ((1 - t3434) ** (-0.1e1 / 0.2e1))

        if Bindx == 190:
            t3457 = np.cos(phi)
            t3456 = t3457 ** 2
            t3459 = t3457 * t3456
            t3460 = t3456 ** 2
            t3461 = t3457 * t3460
            t3462 = t3459 ** 2
            t3463 = t3457 * t3462
            t3464 = t3460 ** 2
            t3466 = t3461 ** 2
            t3468 = t3462 ** 2
            t3472 = 80 * t3459 - 3828 * t3461 + 4224 * t3463 + (3124 * t3464 - 3280 * t3466 - 540 * t3468 + 220) * t3457
            t3471 = 63 * t3463 ** 2 - 527 * t3456 + 2013 * t3460 + 1485 * t3462 - 6765 * t3464 + 1859 * t3466 + 1903 * t3468 - 31
            t3458 = 10 * phi1
            tfunc[..., c] = -0.145e3 / 0.16384e5 * np.sqrt(0.78e2) * ((t3471 + t3472) * np.cos((-t3458 + 12 * phi2)) + (t3471 - t3472) * np.cos((t3458 + 12 * phi2)))

        if Bindx == 191:
            t3488 = np.cos(phi)
            t3487 = t3488 ** 2
            t3490 = t3488 * t3487
            t3491 = t3487 ** 2
            t3492 = t3488 * t3491
            t3493 = t3490 ** 2
            t3494 = t3488 * t3493
            t3495 = t3491 ** 2
            t3497 = t3492 ** 2
            t3499 = t3493 ** 2
            t3503 = -7532 * t3490 + 27822 * t3492 - 34152 * t3494 + (-5714 * t3495 + 36500 * t3497 - 17550 * t3499 + 626) * t3488
            t3502 = 4095 * t3494 ** 2 + 37 * t3487 + 6039 * t3491 - 38331 * t3493 + 81477 * t3495 - 68201 * t3497 + 14885 * t3499 - 1
            t3489 = 10 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.3795e4) * ((t3502 + t3503) * np.cos((-t3489 + 6 * phi2)) + (t3502 - t3503) * np.cos((t3489 + 6 * phi2)))

        if Bindx == 192:
            t3504 = np.cos(phi)
            t3505 = t3504 ** 2
            t3506 = t3505 ** 2
            t3507 = t3505 * t3506
            t3510 = t3507 ** 2
            t3508 = t3506 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t3506 + 1635 * t3507 - 2755 * t3508 - 1175 * t3510 - 1 + (2501 * t3508 + 225 * t3510 + 55) * t3505) * np.cos((10 * phi1))

        if Bindx == 193:
            t3528 = np.cos(phi)
            t3527 = t3528 ** 2
            t3531 = t3527 ** 2
            t3530 = t3528 * t3527
            t3533 = t3530 ** 2
            t3535 = t3531 ** 2
            t3532 = t3528 * t3531
            t3537 = t3532 ** 2
            t3539 = t3533 ** 2
            t3534 = t3528 * t3533
            t3541 = t3534 ** 2
            t3544 = 38 + 1026 * t3527 - 1394 * t3531 - 7062 * t3533 + 10098 * t3535 + 2662 * t3537 - 4774 * t3539 - 594 * t3541
            t3543 = -1199 * t3530 + 6237 * t3532 - 627 * t3534 + (-10637 * t3535 + 4131 * t3537 + 2351 * t3539 + 63 * t3541 - 319) * t3528
            t3529 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.78e2) * (-(t3543 + t3544) * np.sin((-t3529 + 12 * phi2)) + (t3543 - t3544) * np.sin((t3529 + 12 * phi2))) * ((1 + t3528) ** (-0.1e1 / 0.2e1)) * ((1 - t3528) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t3561 = np.cos(phi)
            t3560 = t3561 ** 2
            t3564 = t3560 ** 2
            t3563 = t3561 * t3560
            t3566 = t3563 ** 2
            t3568 = t3564 ** 2
            t3565 = t3561 * t3564
            t3570 = t3565 ** 2
            t3572 = t3566 ** 2
            t3567 = t3561 * t3566
            t3574 = t3567 ** 2
            t3577 = -31 + 837 * t3560 - 6131 * t3564 + 16497 * t3566 - 16749 * t3568 + 671 * t3570 + 8767 * t3572 - 3861 * t3574
            t3576 = 1037 * t3563 + 1341 * t3565 - 14679 * t3567 + (27667 * t3568 - 19881 * t3570 + 3887 * t3572 + 819 * t3574 - 191) * t3561
            t3562 = 11 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.3795e4) * (-(t3576 + t3577) * np.sin((-t3562 + 6 * phi2)) + (t3576 - t3577) * np.sin((t3562 + 6 * phi2))) * ((1 + t3561) ** (-0.1e1 / 0.2e1)) * ((1 - t3561) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t3583 = np.sin(phi)
            t3579 = t3583 ** 2
            t3580 = t3583 * t3579
            t3581 = t3580 ** 2
            t3578 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t3578 * t3581 ** 2 * (9 * t3578 ** 2 - 1) * np.sin((11 * phi1)) * ((1 + t3578) ** (-0.1e1 / 0.2e1)) * ((1 - t3578) ** (-0.1e1 / 0.2e1))

        if Bindx == 196:
            t3599 = np.cos(phi)
            t3598 = t3599 ** 2
            t3600 = t3599 * t3598
            t3601 = t3598 ** 2
            t3602 = t3599 * t3601
            t3603 = t3600 ** 2
            t3604 = t3599 * t3603
            t3605 = t3601 ** 2
            t3607 = t3602 ** 2
            t3609 = t3603 ** 2
            t3613 = -0.19981e5 / 0.512e3 * t3600 + 0.37323e5 / 0.1024e4 * t3602 + 0.37323e5 / 0.256e3 * t3604 + (-0.70499e5 / 0.1024e4 * t3605 - 0.39585e5 / 0.512e3 * t3607 - 0.7047e4 / 0.1024e4 * t3609 - 0.4785e4 / 0.1024e4) * t3599
            t3612 = 0.5481e4 / 0.8192e4 * t3604 ** 2 + 0.154947e6 / 0.8192e4 * t3598 + 0.261261e6 / 0.8192e4 * t3601 - 0.1057485e7 / 0.8192e4 * t3603 - 0.410553e6 / 0.8192e4 * t3605 + 0.908193e6 / 0.8192e4 * t3607 + 0.252967e6 / 0.8192e4 * t3609 + 0.3973e4 / 0.8192e4
            tfunc[..., c] = (t3612 + t3613) * np.cos((12 * phi1 - 12 * phi2)) + (t3612 - t3613) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 197:
            t3629 = np.cos(phi)
            t3628 = t3629 ** 2
            t3631 = t3629 * t3628
            t3632 = t3628 ** 2
            t3633 = t3629 * t3632
            t3634 = t3631 ** 2
            t3635 = t3629 * t3634
            t3636 = t3632 ** 2
            t3638 = t3633 ** 2
            t3640 = t3634 ** 2
            t3644 = -752 * t3631 + 3708 * t3633 - 5760 * t3635 + (2372 * t3636 + 1392 * t3638 - 972 * t3640 + 12) * t3629
            t3643 = 189 * t3635 ** 2 + 435 * t3628 - 1161 * t3632 - 729 * t3634 + 5049 * t3636 - 5079 * t3638 + 1325 * t3640 - 29
            t3630 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3643 + t3644) * np.cos((-t3630 + 6 * phi2)) + (t3643 - t3644) * np.cos((t3630 + 6 * phi2)))

        if Bindx == 198:
            t3645 = np.cos(phi)
            t3646 = t3645 ** 2
            t3647 = t3646 ** 2
            t3648 = t3646 * t3647
            t3651 = t3648 ** 2
            t3649 = t3647 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t3647 + 425 * t3648 - 555 * t3649 - 163 * t3651 - 1 + (411 * t3649 + 27 * t3651 + 33) * t3646) * np.cos((12 * phi1))

        if Bindx == 199:
            t3669 = np.cos(phi)
            t3668 = t3669 ** 2
            t3672 = t3668 ** 2
            t3671 = t3669 * t3668
            t3674 = t3671 ** 2
            t3676 = t3672 ** 2
            t3673 = t3669 * t3672
            t3678 = t3673 ** 2
            t3680 = t3674 ** 2
            t3675 = t3669 * t3674
            t3682 = t3675 ** 2
            t3685 = -6 - 306 * t3668 - 1118 * t3672 + 1430 * t3674 + 2574 * t3676 - 1430 * t3678 - 1066 * t3680 - 78 * t3682
            t3684 = 793 * t3671 + 429 * t3673 - 3003 * t3675 + (-429 * t3676 + 1755 * t3678 + 383 * t3680 + 7 * t3682 + 65) * t3669
            t3670 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.6e1) * (-(t3684 + t3685) * np.sin((-t3670 + 12 * phi2)) + (t3684 - t3685) * np.sin((t3670 + 12 * phi2))) * ((1 - t3669) ** (-0.1e1 / 0.2e1)) * ((1 + t3669) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t3702 = np.cos(phi)
            t3701 = t3702 ** 2
            t3705 = t3701 ** 2
            t3704 = t3702 * t3701
            t3707 = t3704 ** 2
            t3709 = t3705 ** 2
            t3706 = t3702 * t3705
            t3711 = t3706 ** 2
            t3713 = t3707 ** 2
            t3708 = t3702 * t3707
            t3715 = t3708 ** 2
            t3718 = 3 - 9 * t3701 - 89 * t3705 + 347 * t3707 - 423 * t3709 + 149 * t3711 + 61 * t3713 - 39 * t3715
            t3717 = 89 * t3704 - 159 * t3706 - 27 * t3708 + (303 * t3709 - 261 * t3711 + 59 * t3713 + 7 * t3715 - 11) * t3702
            t3703 = 13 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.49335e5) * (-(t3717 + t3718) * np.sin((-t3703 + 6 * phi2)) + (t3717 - t3718) * np.sin((t3703 + 6 * phi2))) * ((1 - t3702) ** (-0.1e1 / 0.2e1)) * ((1 + t3702) ** (-0.1e1 / 0.2e1))

        if Bindx == 201:
            t3725 = np.sin(phi)
            t3720 = t3725 ** 2
            t3721 = t3725 * t3720
            t3723 = t3725 * t3721 ** 2
            t3719 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t3719 * t3723 ** 2 * np.sin((13 * phi1)) * ((1 - t3719) ** (-0.1e1 / 0.2e1)) * ((1 + t3719) ** (-0.1e1 / 0.2e1))

        if Bindx == 202:
            t3740 = np.cos(phi)
            t3739 = t3740 ** 2
            t3742 = t3740 * t3739
            t3743 = t3739 ** 2
            t3744 = t3740 * t3743
            t3746 = t3743 ** 2
            t3748 = t3744 ** 2
            t3745 = t3742 ** 2
            t3750 = t3745 ** 2
            t3751 = t3740 * t3750
            t3754 = 208 * t3742 + 572 * t3744 - 12 * t3751 + (-572 * t3746 - 208 * t3748 + 12) * t3740
            t3753 = t3740 * t3751 - 65 * t3739 - 429 * t3743 - 429 * t3745 + 429 * t3746 + 429 * t3748 + 65 * t3750 - 1
            t3741 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.42e2) * ((t3753 + t3754) * np.cos((-t3741 + 12 * phi2)) + (t3753 - t3754) * np.cos((t3741 + 12 * phi2)))

        if Bindx == 203:
            t3770 = np.cos(phi)
            t3786 = -6 * t3770
            t3769 = t3770 ** 2
            t3772 = t3770 * t3769
            t3773 = t3769 ** 2
            t3774 = t3770 * t3773
            t3775 = t3772 ** 2
            t3776 = t3770 * t3775
            t3777 = t3773 ** 2
            t3779 = t3774 ** 2
            t3781 = t3775 ** 2
            t3785 = t3781 * t3786 + 4 * t3772 + 38 * t3774 - 72 * t3776 + t3786 + (38 * t3777 + 4 * t3779) * t3770
            t3784 = t3776 ** 2 + 11 * t3769 - 39 * t3773 + 27 * t3775 + 27 * t3777 - 39 * t3779 + 11 * t3781 + 1
            t3771 = 14 * phi1
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.345345e6) * ((t3784 + t3785) * np.cos((-t3771 + 6 * phi2)) + (t3784 - t3785) * np.cos((t3771 + 6 * phi2)))

        if Bindx == 204:
            t3787 = np.cos(phi)
            t3788 = t3787 ** 2
            t3789 = t3788 ** 2
            t3790 = t3788 * t3789
            t3793 = t3790 ** 2
            t3791 = t3789 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t3789 + 35 * t3790 - 35 * t3791 - 7 * t3793 - 1 + (21 * t3791 + t3793 + 7) * t3788)

        if Bindx == 205:
            tfunc[..., c] = 0

        if Bindx == 206:
            tfunc[..., c] = 0

        if Bindx == 207:
            t3812 = np.cos(phi)
            t3811 = t3812 ** 2
            t3813 = t3812 * t3811
            t3814 = t3811 ** 2
            t3815 = t3812 * t3814
            t3816 = t3813 ** 2
            t3817 = t3812 * t3816
            t3818 = t3814 ** 2
            t3820 = t3815 ** 2
            t3822 = t3816 ** 2
            t3824 = t3817 ** 2
            t3828 = 1414 * t3813 - 13650 * t3815 + 57726 * t3817 + (-124798 * t3818 + 144210 * t3820 - 84870 * t3822 + 20010 * t3824 - 42) * t3812
            t3827 = 714 * t3811 - 12082 * t3814 + 78722 * t3816 + 451582 * t3820 - 448270 * t3822 + 233910 * t3824 - 7 + (-254544 - 50025 * t3818) * t3818
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.92378e5) * ((t3827 + t3828) * np.sin((phi1 - 6 * phi2)) + (-t3827 + t3828) * np.sin((phi1 + 6 * phi2))) * ((1 + t3812) ** (-0.1e1 / 0.2e1)) * ((1 - t3812) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t3846 = np.cos(phi)
            t3845 = t3846 ** 2
            t3847 = t3846 * t3845
            t3848 = t3845 ** 2
            t3849 = t3846 * t3848
            t3850 = t3847 ** 2
            t3851 = t3846 * t3850
            t3852 = t3848 ** 2
            t3854 = t3849 ** 2
            t3856 = t3850 ** 2
            t3858 = t3851 ** 2
            t3862 = -188 * t3847 + 876 * t3849 - 1980 * t3851 + (2500 * t3852 - 1812 * t3854 + 708 * t3856 - 116 * t3858 + 12) * t3846
            t3861 = 48 * t3845 - 412 * t3848 + 1520 * t3850 + 3536 * t3854 - 2428 * t3856 + 912 * t3858 - 1 + (-3030 - 145 * t3852) * t3852
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.780045e6) * ((-t3861 + t3862) * np.sin((phi1 - 12 * phi2)) + (t3861 + t3862) * np.sin((phi1 + 12 * phi2))) * ((1 + t3846) ** (-0.1e1 / 0.2e1)) * ((1 - t3846) ** (-0.1e1 / 0.2e1))

        if Bindx == 209:
            t3879 = np.cos(phi)
            t3878 = t3879 ** 2
            t3882 = t3878 ** 2
            t3881 = t3879 * t3878
            t3884 = t3881 ** 2
            t3886 = t3882 ** 2
            t3883 = t3879 * t3882
            t3888 = t3883 ** 2
            t3890 = t3884 ** 2
            t3885 = t3879 * t3884
            t3892 = t3885 ** 2
            t3895 = 600 * t3878 - 9554 * t3882 + 55972 * t3884 - 153962 * t3886 + 215280 * t3888 - 148350 * t3890 + 40020 * t3892 - 6
            t3894 = 2763 * t3881 - 26851 * t3883 + 116355 * t3885 + (-261809 * t3886 + 318665 * t3888 - 199065 * t3890 + 50025 * t3892 - 83) * t3879
            t3880 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.19019e5) * ((-t3894 + t3895) * np.cos((-t3880 + 6 * phi2)) + (t3894 + t3895) * np.cos((t3880 + 6 * phi2)))

        if Bindx == 210:
            t3912 = np.cos(phi)
            t3911 = t3912 ** 2
            t3914 = t3912 * t3911
            t3915 = t3911 ** 2
            t3916 = t3912 * t3915
            t3917 = t3914 ** 2
            t3918 = t3912 * t3917
            t3919 = t3915 ** 2
            t3921 = t3916 ** 2
            t3923 = t3917 ** 2
            t3925 = t3918 ** 2
            t3928 = 279 * t3914 - 5 * t3916 - 3285 * t3918 + (8485 * t3919 - 9355 * t3921 + 4921 * t3923 - 1015 * t3925 - 25) * t3912
            t3927 = 12 - 552 * t3911 + 4204 * t3915 - 13160 * t3917 + 21220 * t3919 - 18712 * t3921 + 8612 * t3923 - 1624 * t3925
            t3913 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t3927 - t3928) * np.cos((-t3913 + 12 * phi2)) + (t3927 + t3928) * np.cos((t3913 + 12 * phi2)))

        if Bindx == 211:
            t3946 = np.cos(phi)
            t3945 = t3946 ** 2
            t3948 = t3946 * t3945
            t3949 = t3945 ** 2
            t3950 = t3946 * t3949
            t3951 = t3948 ** 2
            t3952 = t3946 * t3951
            t3953 = t3949 ** 2
            t3955 = t3950 ** 2
            t3957 = t3951 ** 2
            t3959 = t3952 ** 2
            t3963 = 54794 * t3948 - 516046 * t3950 + 2153714 * t3952 + (-4647426 * t3953 + 5414430 * t3955 - 3238170 * t3957 + 780390 * t3959 - 1686) * t3946
            t3962 = 4606 * t3945 - 79694 * t3949 + 559206 * t3951 + 4046298 * t3955 - 4565730 * t3957 + 2699970 * t3959 - 47 + (-2014284 - 650325 * t3953) * t3953
            t3947 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2926e4) * (-(t3962 + t3963) * np.sin((-t3947 + 6 * phi2)) + (-t3962 + t3963) * np.sin((t3947 + 6 * phi2))) * ((1 + t3946) ** (-0.1e1 / 0.2e1)) * ((1 - t3946) ** (-0.1e1 / 0.2e1))

        if Bindx == 212:
            t3981 = np.cos(phi)
            t3980 = t3981 ** 2
            t3983 = t3981 * t3980
            t3984 = t3980 ** 2
            t3985 = t3981 * t3984
            t3986 = t3983 ** 2
            t3987 = t3981 * t3986
            t3988 = t3984 ** 2
            t3990 = t3985 ** 2
            t3992 = t3986 ** 2
            t3994 = t3987 ** 2
            t3998 = 1036 * t3983 - 6716 * t3985 + 20140 * t3987 + (-32020 * t3988 + 28100 * t3990 - 12916 * t3992 + 2436 * t3994 - 60) * t3981
            t3997 = -572 * t3980 + 3904 * t3984 - 10380 * t3986 - 4788 * t3990 - 3448 * t3992 + 3836 * t3994 + 13 + (12450 - 1015 * t3988) * t3988
            t3982 = 3 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.85215e5) * (-(t3997 + t3998) * np.sin((-t3982 + 12 * phi2)) + (-t3997 + t3998) * np.sin((t3982 + 12 * phi2))) * ((1 + t3981) ** (-0.1e1 / 0.2e1)) * ((1 - t3981) ** (-0.1e1 / 0.2e1))

        if Bindx == 213:
            t4015 = np.cos(phi)
            t4014 = t4015 ** 2
            t4017 = t4015 * t4014
            t4018 = t4014 ** 2
            t4019 = t4015 * t4018
            t4020 = t4017 ** 2
            t4021 = t4015 * t4020
            t4022 = t4018 ** 2
            t4024 = t4019 ** 2
            t4026 = t4020 ** 2
            t4028 = t4021 ** 2
            t4031 = 1509 * t4017 + 23089 * t4019 - 336111 * t4021 + (1383519 * t4022 - 2498145 * t4024 + 2076555 * t4026 - 650325 * t4028 - 91) * t4015
            t4030 = -15416 * t4014 + 234884 * t4018 - 1344056 * t4020 + 3687084 * t4022 - 5235720 * t4024 + 3713580 * t4026 - 1040520 * t4028 + 164
            t4016 = 4 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.462e3) * ((t4030 - t4031) * np.cos((-t4016 + 6 * phi2)) + (t4030 + t4031) * np.cos((t4016 + 6 * phi2)))

        if Bindx == 214:
            t4048 = np.cos(phi)
            t4047 = t4048 ** 2
            t4051 = t4047 ** 2
            t4050 = t4048 * t4047
            t4053 = t4050 ** 2
            t4055 = t4051 ** 2
            t4052 = t4048 * t4051
            t4057 = t4052 ** 2
            t4059 = t4053 ** 2
            t4054 = t4048 * t4053
            t4061 = t4054 ** 2
            t4064 = 8 - 320 * t4047 + 872 * t4051 + 2800 * t4053 - 13800 * t4055 + 20512 * t4057 - 13320 * t4059 + 3248 * t4061
            t4063 = 2091 * t4050 - 9815 * t4052 + 20355 * t4054 + (-19805 * t4055 + 7241 * t4057 + 1099 * t4059 - 1015 * t4061 - 151) * t4048
            t4049 = 4 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.1495e4) * ((t4063 + t4064) * np.cos((-t4049 + 12 * phi2)) + (-t4063 + t4064) * np.cos((t4049 + 12 * phi2)))

        if Bindx == 215:
            t4082 = np.cos(phi)
            t4081 = t4082 ** 2
            t4084 = t4082 * t4081
            t4085 = t4081 ** 2
            t4086 = t4082 * t4085
            t4087 = t4084 ** 2
            t4088 = t4082 * t4087
            t4089 = t4085 ** 2
            t4091 = t4086 ** 2
            t4093 = t4087 ** 2
            t4095 = t4088 ** 2
            t4099 = 179930 * t4084 - 1640574 * t4086 + 6840290 * t4088 + (-15081330 * t4089 + 18193230 * t4091 - 11347050 * t4093 + 2861430 * t4095 - 5926) * t4082
            t4098 = -19350 * t4081 + 258470 * t4085 - 1137694 * t4087 + 596574 * t4091 - 4440150 * t4093 + 4440150 * t4095 + 215 + (1732500 - 1430715 * t4089) * t4089
            t4083 = 5 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.210e3) * (-(t4098 + t4099) * np.sin((-t4083 + 6 * phi2)) + (-t4098 + t4099) * np.sin((t4083 + 6 * phi2))) * ((1 + t4082) ** (-0.1e1 / 0.2e1)) * ((1 - t4082) ** (-0.1e1 / 0.2e1))

        if Bindx == 216:
            t4117 = np.cos(phi)
            t4116 = t4117 ** 2
            t4119 = t4117 * t4116
            t4120 = t4116 ** 2
            t4121 = t4117 * t4120
            t4122 = t4119 ** 2
            t4123 = t4117 * t4122
            t4124 = t4120 ** 2
            t4126 = t4121 ** 2
            t4128 = t4122 ** 2
            t4130 = t4123 ** 2
            t4134 = -508 * t4119 + 1836 * t4121 - 2332 * t4123 + (-412 * t4124 + 3564 * t4126 - 3004 * t4128 + 812 * t4130 + 44) * t4117
            t4133 = -36 * t4116 + 664 * t4120 - 3380 * t4122 - 7724 * t4126 + 3568 * t4128 - 252 * t4130 + 1 + (7362 - 203 * t4124) * t4124
            t4118 = 5 * phi1
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.3289e4) * (-(t4133 + t4134) * np.sin((-t4118 + 12 * phi2)) + (-t4133 + t4134) * np.sin((t4118 + 12 * phi2))) * ((1 + t4117) ** (-0.1e1 / 0.2e1)) * ((1 - t4117) ** (-0.1e1 / 0.2e1))

        if Bindx == 217:
            t4151 = np.cos(phi)
            t4150 = t4151 ** 2
            t4153 = t4150 ** 2
            t4152 = t4151 * t4150
            t4155 = t4152 ** 2
            t4157 = t4153 ** 2
            t4154 = t4151 * t4153
            t4159 = t4154 ** 2
            t4161 = t4155 ** 2
            t4156 = t4151 * t4155
            t4163 = t4156 ** 2
            t4166 = 0.754509e6 / 0.2048e4 * t4150 - 0.44351979e8 / 0.8192e4 * t4153 + 0.130558267e9 / 0.4096e4 * t4155 - 0.763257231e9 / 0.8192e4 * t4157 + 0.145762155e9 / 0.1024e4 * t4159 - 0.888572685e9 / 0.8192e4 * t4161 + 0.133056495e9 / 0.4096e4 * t4163 - 0.35929e5 / 0.8192e4
            t4165 = 0.30427957e8 / 0.16384e5 * t4152 - 0.219938397e9 / 0.16384e5 * t4154 + 0.631038573e9 / 0.16384e5 * t4156 + (-0.732763647e9 / 0.16384e5 * t4157 + 0.96351255e8 / 0.16384e5 * t4159 + 0.417522105e9 / 0.16384e5 * t4161 - 0.221760825e9 / 0.16384e5 * t4163 - 0.1130973e7 / 0.16384e5) * t4151
            tfunc[..., c] = (t4165 + t4166) * np.cos((6 * phi1 - 6 * phi2)) + (-t4165 + t4166) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 218:
            t4183 = np.cos(phi)
            t4182 = t4183 ** 2
            t4186 = t4182 ** 2
            t4185 = t4183 * t4182
            t4188 = t4185 ** 2
            t4190 = t4186 ** 2
            t4187 = t4183 * t4186
            t4192 = t4187 ** 2
            t4194 = t4188 ** 2
            t4189 = t4183 * t4188
            t4196 = t4189 ** 2
            t4199 = 4 - 120 * t4182 + 996 * t4186 - 2936 * t4188 + 3276 * t4190 - 456 * t4192 - 1460 * t4194 + 696 * t4196
            t4198 = -223 * t4185 - 3 * t4187 + 2205 * t4189 + (-4717 * t4190 + 3603 * t4192 - 753 * t4194 - 145 * t4196 + 33) * t4183
            t4184 = 6 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((t4198 + t4199) * np.cos((-t4184 + 12 * phi2)) + (-t4198 + t4199) * np.cos((t4184 + 12 * phi2)))

        if Bindx == 219:
            t4217 = np.cos(phi)
            t4216 = t4217 ** 2
            t4219 = t4217 * t4216
            t4220 = t4216 ** 2
            t4221 = t4217 * t4220
            t4222 = t4219 ** 2
            t4223 = t4217 * t4222
            t4224 = t4220 ** 2
            t4226 = t4221 ** 2
            t4228 = t4222 ** 2
            t4230 = t4223 ** 2
            t4234 = -48258 * t4219 + 533190 * t4221 - 2745482 * t4223 + (7161418 * t4224 - 9800070 * t4226 + 6718530 * t4228 - 1820910 * t4230 + 1582) * t4217
            t4233 = -39702 * t4216 + 501998 * t4220 - 2388638 * t4222 - 5621154 * t4226 + 1862770 * t4228 + 995670 * t4230 + 509 + (5338872 - 650325 * t4224) * t4224
            t4218 = 7 * phi1
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.22e2) * (-(-t4233 + t4234) * np.sin((-t4218 + 6 * phi2)) + (t4233 + t4234) * np.sin((t4218 + 6 * phi2))) * ((1 + t4217) ** (-0.1e1 / 0.2e1)) * ((1 - t4217) ** (-0.1e1 / 0.2e1))

        if Bindx == 220:
            t4252 = np.cos(phi)
            t4251 = t4252 ** 2
            t4254 = t4252 * t4251
            t4255 = t4251 ** 2
            t4256 = t4252 * t4255
            t4257 = t4254 ** 2
            t4258 = t4252 * t4257
            t4259 = t4255 ** 2
            t4261 = t4256 ** 2
            t4263 = t4257 ** 2
            t4265 = t4258 ** 2
            t4269 = 92 * t4254 - 1740 * t4256 + 5852 * t4258 + (-7524 * t4259 + 3060 * t4261 + 1052 * t4263 - 812 * t4265 + 20) * t4252
            t4268 = 216 * t4251 - 1252 * t4255 + 2200 * t4257 - 5368 * t4261 + 5036 * t4263 - 1272 * t4265 - 9 + (594 - 145 * t4259) * t4259
            t4253 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.31395e5) * (-(-t4268 + t4269) * np.sin((-t4253 + 12 * phi2)) + (t4268 + t4269) * np.sin((t4253 + 12 * phi2))) * ((1 + t4252) ** (-0.1e1 / 0.2e1)) * ((1 - t4252) ** (-0.1e1 / 0.2e1))

        if Bindx == 221:
            t4286 = np.cos(phi)
            t4285 = t4286 ** 2
            t4289 = t4285 ** 2
            t4288 = t4286 * t4285
            t4291 = t4288 ** 2
            t4293 = t4289 ** 2
            t4290 = t4286 * t4289
            t4295 = t4290 ** 2
            t4297 = t4291 ** 2
            t4292 = t4286 * t4291
            t4299 = t4292 ** 2
            t4302 = -560 * t4285 + 2632 * t4289 + 20496 * t4291 - 140776 * t4293 + 300720 * t4295 - 273000 * t4297 + 90480 * t4299 + 8
            t4301 = -10731 * t4288 + 73633 * t4290 - 222055 * t4292 + (316967 * t4293 - 185185 * t4295 - 1365 * t4297 + 28275 * t4299 + 461) * t4286
            t4287 = 8 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.253e3) * ((-t4301 + t4302) * np.cos((-t4287 + 6 * phi2)) + (t4301 + t4302) * np.cos((t4287 + 6 * phi2)))

        if Bindx == 222:
            t4319 = np.cos(phi)
            t4318 = t4319 ** 2
            t4322 = t4318 ** 2
            t4321 = t4319 * t4318
            t4324 = t4321 ** 2
            t4326 = t4322 ** 2
            t4323 = t4319 * t4322
            t4328 = t4323 ** 2
            t4330 = t4324 ** 2
            t4325 = t4319 * t4324
            t4332 = t4325 ** 2
            t4335 = -16 + 256 * t4318 - 592 * t4322 - 1760 * t4324 + 6864 * t4326 - 6336 * t4328 + 656 * t4330 + 928 * t4332
            t4334 = -587 * t4321 + 3047 * t4323 - 4587 * t4325 + (-11 * t4326 + 4295 * t4328 - 2027 * t4330 - 145 * t4332 + 15) * t4319
            t4320 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2730e4) * ((t4334 + t4335) * np.cos((-t4320 + 12 * phi2)) + (-t4334 + t4335) * np.cos((t4320 + 12 * phi2)))

        if Bindx == 223:
            t4353 = np.cos(phi)
            t4352 = t4353 ** 2
            t4355 = t4353 * t4352
            t4356 = t4352 ** 2
            t4357 = t4353 * t4356
            t4358 = t4355 ** 2
            t4359 = t4353 * t4358
            t4360 = t4356 ** 2
            t4362 = t4357 ** 2
            t4364 = t4358 ** 2
            t4366 = t4359 ** 2
            t4370 = -10222 * t4355 + 44042 * t4357 - 35302 * t4359 + (-157914 * t4360 + 395190 * t4362 - 338130 * t4364 + 101790 * t4366 + 546) * t4353
            t4369 = -3658 * t4352 + 42674 * t4356 - 208066 * t4358 - 594046 * t4362 + 310830 * t4364 - 15990 * t4366 + 59 + (496472 - 28275 * t4360) * t4360
            t4354 = 9 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.10626e5) * (-(t4369 + t4370) * np.sin((-t4354 + 6 * phi2)) + (-t4369 + t4370) * np.sin((t4354 + 6 * phi2))) * ((1 - t4353) ** (-0.1e1 / 0.2e1)) * ((1 + t4353) ** (-0.1e1 / 0.2e1))

        if Bindx == 224:
            t4388 = np.cos(phi)
            t4387 = t4388 ** 2
            t4390 = t4388 * t4387
            t4391 = t4387 ** 2
            t4392 = t4388 * t4391
            t4393 = t4390 ** 2
            t4394 = t4388 * t4393
            t4395 = t4391 ** 2
            t4397 = t4392 ** 2
            t4399 = t4393 ** 2
            t4401 = t4394 ** 2
            t4405 = 7876 * t4390 - 23636 * t4392 + 3652 * t4394 + (63492 * t4395 - 72084 * t4397 + 13956 * t4399 + 7308 * t4401 - 564) * t4388
            t4404 = -1416 * t4387 - 5196 * t4391 + 44088 * t4393 + 28776 * t4397 + 31364 * t4399 - 19096 * t4401 + 177 + (-77682 - 1015 * t4395) * t4395
            t4389 = 9 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t4404 + t4405) * np.sin((-t4389 + 12 * phi2)) + (-t4404 + t4405) * np.sin((t4389 + 12 * phi2))) * ((1 - t4388) ** (-0.1e1 / 0.2e1)) * ((1 + t4388) ** (-0.1e1 / 0.2e1))

        if Bindx == 225:
            t4422 = np.cos(phi)
            t4421 = t4422 ** 2
            t4425 = t4421 ** 2
            t4424 = t4422 * t4421
            t4427 = t4424 ** 2
            t4429 = t4425 ** 2
            t4426 = t4422 * t4425
            t4431 = t4426 ** 2
            t4433 = t4427 ** 2
            t4428 = t4422 * t4427
            t4435 = t4428 ** 2
            t4438 = 6 - 312 * t4421 + 2386 * t4425 - 6116 * t4427 + 3562 * t4429 + 7728 * t4431 - 11778 * t4433 + 4524 * t4435
            t4437 = 511 * t4424 - 4343 * t4426 + 15175 * t4428 + (-24125 * t4429 + 16549 * t4431 - 2613 * t4433 - 1131 * t4435 - 23) * t4422
            t4423 = 10 * phi1
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.1771e4) * ((t4437 + t4438) * np.cos((-t4423 + 6 * phi2)) + (-t4437 + t4438) * np.cos((t4423 + 6 * phi2)))

        if Bindx == 226:
            t4455 = np.cos(phi)
            t4454 = t4455 ** 2
            t4458 = t4454 ** 2
            t4457 = t4455 * t4454
            t4460 = t4457 ** 2
            t4462 = t4458 ** 2
            t4459 = t4455 * t4458
            t4464 = t4459 ** 2
            t4466 = t4460 ** 2
            t4461 = t4455 * t4460
            t4468 = t4461 ** 2
            t4471 = -52 - 104 * t4454 + 4076 * t4458 - 10472 * t4460 + 1188 * t4462 + 13992 * t4464 - 7004 * t4466 - 1624 * t4468
            t4470 = 1819 * t4457 + 143 * t4459 - 13233 * t4461 + (16577 * t4462 + 289 * t4464 - 5131 * t4466 - 203 * t4468 - 261) * t4455
            t4456 = 10 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.390e3) * ((-t4470 + t4471) * np.cos((-t4456 + 12 * phi2)) + (t4470 + t4471) * np.cos((t4456 + 12 * phi2)))

        if Bindx == 227:
            t4489 = np.cos(phi)
            t4488 = t4489 ** 2
            t4491 = t4489 * t4488
            t4492 = t4488 ** 2
            t4493 = t4489 * t4492
            t4494 = t4491 ** 2
            t4495 = t4489 * t4494
            t4496 = t4492 ** 2
            t4498 = t4493 ** 2
            t4500 = t4494 ** 2
            t4502 = t4495 ** 2
            t4506 = 778 * t4491 - 3726 * t4493 + 7314 * t4495 + (-4642 * t4496 - 3234 * t4498 + 5478 * t4500 - 1914 * t4502 - 54) * t4489
            t4505 = 42 * t4488 + 294 * t4492 - 3678 * t4494 - 15714 * t4498 + 9322 * t4500 - 1386 * t4502 - 1 + (11556 - 435 * t4496) * t4496
            t4490 = 11 * phi1
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.230230e6) * (-(-t4505 + t4506) * np.sin((-t4490 + 6 * phi2)) + (t4505 + t4506) * np.sin((t4490 + 6 * phi2))) * ((1 + t4489) ** (-0.1e1 / 0.2e1)) * ((1 - t4489) ** (-0.1e1 / 0.2e1))

        if Bindx == 228:
            t4524 = np.cos(phi)
            t4523 = t4524 ** 2
            t4526 = t4524 * t4523
            t4527 = t4523 ** 2
            t4528 = t4524 * t4527
            t4529 = t4526 ** 2
            t4530 = t4524 * t4529
            t4531 = t4527 ** 2
            t4533 = t4528 ** 2
            t4535 = t4529 ** 2
            t4537 = t4530 ** 2
            t4541 = 6356 * t4526 + 40092 * t4528 - 126412 * t4530 + (56628 * t4531 + 87516 * t4533 - 52844 * t4535 - 8932 * t4537 - 2404) * t4524
            t4540 = 4356 * t4523 - 35464 * t4527 + 33748 * t4529 - 148148 * t4533 + 17056 * t4535 + 31836 * t4537 + 363 + (95238 + 1015 * t4531) * t4531
            t4525 = 11 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.3e1) * (-(t4540 + t4541) * np.sin((-t4525 + 12 * phi2)) + (-t4540 + t4541) * np.sin((t4525 + 12 * phi2))) * ((1 + t4524) ** (-0.1e1 / 0.2e1)) * ((1 - t4524) ** (-0.1e1 / 0.2e1))

        if Bindx == 229:
            t4558 = np.cos(phi)
            t4557 = t4558 ** 2
            t4561 = t4557 ** 2
            t4560 = t4558 * t4557
            t4563 = t4560 ** 2
            t4565 = t4561 ** 2
            t4562 = t4558 * t4561
            t4567 = t4562 ** 2
            t4569 = t4563 ** 2
            t4564 = t4558 * t4563
            t4571 = t4564 ** 2
            t4574 = 4 - 120 * t4557 + 996 * t4561 - 2936 * t4563 + 3276 * t4565 - 456 * t4567 - 1460 * t4569 + 696 * t4571
            t4573 = -223 * t4560 - 3 * t4562 + 2205 * t4564 + (-4717 * t4565 + 3603 * t4567 - 753 * t4569 - 145 * t4571 + 33) * t4558
            t4559 = 12 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((t4573 + t4574) * np.cos((-t4559 + 6 * phi2)) + (-t4573 + t4574) * np.cos((t4559 + 6 * phi2)))

        if Bindx == 230:
            t4591 = np.cos(phi)
            t4590 = t4591 ** 2
            t4593 = t4590 ** 2
            t4592 = t4591 * t4590
            t4595 = t4592 ** 2
            t4597 = t4593 ** 2
            t4594 = t4591 * t4593
            t4599 = t4594 ** 2
            t4601 = t4595 ** 2
            t4596 = t4591 * t4595
            t4603 = t4596 ** 2
            t4606 = -0.5673e4 / 0.128e3 * t4590 + 0.117273e6 / 0.1024e4 * t4593 + 0.155155e6 / 0.512e3 * t4595 - 0.678249e6 / 0.1024e4 * t4597 - 0.13299e5 / 0.256e3 * t4599 + 0.329251e6 / 0.1024e4 * t4601 + 0.18879e5 / 0.512e3 * t4603 - 0.1891e4 / 0.1024e4
            t4605 = 0.292981e6 / 0.8192e4 * t4592 - 0.2806089e7 / 0.8192e4 * t4594 + 0.1476189e7 / 0.8192e4 * t4596 + (0.4738877e7 / 0.8192e4 * t4597 - 0.2690025e7 / 0.8192e4 * t4599 - 0.1229739e7 / 0.8192e4 * t4601 - 0.31465e5 / 0.8192e4 * t4603 + 0.122295e6 / 0.8192e4) * t4591
            tfunc[..., c] = (t4605 + t4606) * np.cos((12 * phi1 - 12 * phi2)) + (-t4605 + t4606) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 231:
            t4624 = np.cos(phi)
            t4623 = t4624 ** 2
            t4626 = t4624 * t4623
            t4627 = t4623 ** 2
            t4628 = t4624 * t4627
            t4629 = t4626 ** 2
            t4630 = t4624 * t4629
            t4631 = t4627 ** 2
            t4633 = t4628 ** 2
            t4635 = t4629 ** 2
            t4637 = t4630 ** 2
            t4641 = 482 * t4626 - 3222 * t4628 + 7274 * t4630 + (-6586 * t4631 + 1062 * t4633 + 1742 * t4635 - 754 * t4637 + 2) * t4624
            t4640 = 342 * t4623 - 1318 * t4627 + 734 * t4629 - 7582 * t4633 + 4982 * t4635 - 918 * t4637 - 19 + (3924 - 145 * t4631) * t4631
            t4625 = 13 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.32890e5) * (-(-t4640 + t4641) * np.sin((-t4625 + 6 * phi2)) + (t4640 + t4641) * np.sin((t4625 + 6 * phi2))) * ((1 - t4624) ** (-0.1e1 / 0.2e1)) * ((1 + t4624) ** (-0.1e1 / 0.2e1))

        if Bindx == 232:
            t4659 = np.cos(phi)
            t4658 = t4659 ** 2
            t4661 = t4659 * t4658
            t4662 = t4658 ** 2
            t4663 = t4659 * t4662
            t4664 = t4661 ** 2
            t4665 = t4659 * t4664
            t4666 = t4662 ** 2
            t4668 = t4663 ** 2
            t4670 = t4664 ** 2
            t4672 = t4665 ** 2
            t4676 = 5588 * t4661 - 17316 * t4663 - 16588 * t4665 + (47476 * t4666 - 2340 * t4668 - 16172 * t4670 - 1508 * t4672 + 860) * t4659
            t4675 = 3276 * t4658 + 208 * t4662 - 31460 * t4664 + 31460 * t4668 - 19864 * t4670 - 6732 * t4672 + 91 + (23166 - 145 * t4666) * t4666
            t4660 = 13 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.21e2) * (-(-t4675 + t4676) * np.sin((-t4660 + 12 * phi2)) + (t4675 + t4676) * np.sin((t4660 + 12 * phi2))) * ((1 - t4659) ** (-0.1e1 / 0.2e1)) * ((1 + t4659) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t4693 = np.cos(phi)
            t4692 = t4693 ** 2
            t4696 = t4692 ** 2
            t4695 = t4693 * t4692
            t4698 = t4695 ** 2
            t4700 = t4696 ** 2
            t4697 = t4693 * t4696
            t4702 = t4697 ** 2
            t4704 = t4698 ** 2
            t4699 = t4693 * t4698
            t4706 = t4699 ** 2
            t4709 = -2 + 8 * t4692 + 58 * t4696 - 244 * t4698 + 306 * t4700 - 112 * t4702 - 42 * t4704 + 28 * t4706
            t4708 = -63 * t4695 + 119 * t4697 + 9 * t4699 + (-211 * t4700 + 187 * t4702 - 43 * t4704 - 5 * t4706 + 7) * t4693
            t4694 = 14 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.476905e6) * ((t4708 + t4709) * np.cos((-t4694 + 6 * phi2)) + (-t4708 + t4709) * np.cos((t4694 + 6 * phi2)))

        if Bindx == 234:
            t4726 = np.cos(phi)
            t4725 = t4726 ** 2
            t4729 = t4725 ** 2
            t4728 = t4726 * t4725
            t4731 = t4728 ** 2
            t4733 = t4729 ** 2
            t4730 = t4726 * t4729
            t4735 = t4730 ** 2
            t4737 = t4731 ** 2
            t4732 = t4726 * t4731
            t4739 = t4732 ** 2
            t4742 = 4 + 200 * t4725 + 676 * t4729 - 1144 * t4731 - 1716 * t4733 + 1144 * t4735 + 780 * t4737 + 56 * t4739
            t4741 = -507 * t4728 - 143 * t4730 + 2145 * t4732 + (143 * t4733 - 1313 * t4735 - 277 * t4737 - 5 * t4739 - 43) * t4726
            t4727 = 14 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1218e4) * ((t4741 + t4742) * np.cos((-t4727 + 12 * phi2)) + (-t4741 + t4742) * np.cos((t4727 + 12 * phi2)))

        if Bindx == 235:
            t4758 = np.cos(phi)
            t4774 = 6 * t4758
            t4757 = t4758 ** 2
            t4760 = t4758 * t4757
            t4761 = t4757 ** 2
            t4762 = t4758 * t4761
            t4763 = t4760 ** 2
            t4764 = t4758 * t4763
            t4765 = t4761 ** 2
            t4767 = t4762 ** 2
            t4769 = t4763 ** 2
            t4773 = t4769 * t4774 - 4 * t4760 - 38 * t4762 + 72 * t4764 + t4774 + (-38 * t4765 - 4 * t4767) * t4758
            t4772 = -t4764 ** 2 - 11 * t4757 + 39 * t4761 - 27 * t4763 - 27 * t4765 + 39 * t4767 - 11 * t4769 - 1
            t4759 = 15 * phi1
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.572286e6) * np.sqrt((1 - t4758)) * np.sqrt((1 + t4758)) * (-(t4772 + t4773) * np.sin((-t4759 + 6 * phi2)) + (-t4772 + t4773) * np.sin((t4759 + 6 * phi2)))

        if Bindx == 236:
            t4789 = np.cos(phi)
            t4788 = t4789 ** 2
            t4791 = t4789 * t4788
            t4792 = t4788 ** 2
            t4793 = t4789 * t4792
            t4795 = t4792 ** 2
            t4797 = t4793 ** 2
            t4794 = t4791 ** 2
            t4799 = t4794 ** 2
            t4800 = t4789 * t4799
            t4803 = 208 * t4791 + 572 * t4793 - 12 * t4800 + (-572 * t4795 - 208 * t4797 + 12) * t4789
            t4802 = -t4789 * t4800 + 65 * t4788 + 429 * t4792 + 429 * t4794 - 429 * t4795 - 429 * t4797 - 65 * t4799 + 1
            t4790 = 15 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1015e4) * np.sqrt((1 - t4789)) * np.sqrt((1 + t4789)) * (-(-t4802 + t4803) * np.sin((-t4790 + 12 * phi2)) + (t4802 + t4803) * np.sin((t4790 + 12 * phi2)))

        if Bindx == 237:
            t4804 = np.cos(phi)
            t4805 = t4804 ** 2
            t4806 = t4805 ** 2
            t4807 = t4805 * t4806
            t4810 = t4807 ** 2
            t4808 = t4806 ** 2
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.7429e4) * (1988 * t4806 - 8064 * t4807 + 14532 * t4810 + 3 + (17010 + 899 * t4808) * t4808 + (-20608 * t4808 - 5568 * t4810 - 192) * t4805) * np.cos((12 * phi2))

        if Bindx == 238:
            t4813 = np.cos(phi)
            t4814 = t4813 ** 2
            t4815 = t4814 ** 2
            t4816 = t4814 * t4815
            t4819 = t4816 ** 2
            t4817 = t4815 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.25194e5) * (47558 * t4815 - 345366 * t4816 + 2498490 * t4819 + 21 + (1225440 + 310155 * t4817) * t4817 + (-2353130 * t4817 - 1380690 * t4819 - 2478) * t4814) * np.cos((6 * phi2))

        if Bindx == 239:
            t4822 = np.cos(phi)
            t4823 = t4822 ** 2
            t4824 = t4823 ** 2
            t4825 = t4823 * t4824
            t4828 = t4825 ** 2
            t4826 = t4824 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t4828 - 0.672188517e9 / 0.4096e4 * t4825 + 0.160044885e9 / 0.8192e4 * t4824 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t4826) * t4826 + (-0.4798948275e10 / 0.4096e4 * t4828 - 0.6135053925e10 / 0.4096e4 * t4826 - 0.3610035e7 / 0.4096e4) * t4823

        if Bindx == 240:
            t4849 = np.cos(phi)
            t4848 = t4849 ** 2
            t4851 = t4848 ** 2
            t4850 = t4849 * t4848
            t4853 = t4850 ** 2
            t4855 = t4851 ** 2
            t4852 = t4849 * t4851
            t4857 = t4852 ** 2
            t4859 = t4853 ** 2
            t4854 = t4849 * t4853
            t4861 = t4854 ** 2
            t4863 = t4855 ** 2
            t4866 = -9 + 576 * t4848 - 5964 * t4851 + 24192 * t4853 - 51030 * t4855 + 61824 * t4857 - 43596 * t4859 + 16704 * t4861 - 2697 * t4863
            t4865 = -2084 * t4850 + 14084 * t4852 - 46116 * t4854 + (85540 * t4855 - 95116 * t4857 + 63084 * t4859 - 23084 * t4861 + 3596 * t4863 + 96) * t4849
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.437e3) * ((t4865 + t4866) * np.sin((phi1 - 12 * phi2)) + (t4865 - t4866) * np.sin((phi1 + 12 * phi2))) * ((1 + t4849) ** (-0.1e1 / 0.2e1)) * ((1 - t4849) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t4885 = np.cos(phi)
            t4884 = t4885 ** 2
            t4887 = t4884 ** 2
            t4886 = t4885 * t4884
            t4889 = t4886 ** 2
            t4891 = t4887 ** 2
            t4888 = t4885 * t4887
            t4893 = t4888 ** 2
            t4895 = t4889 ** 2
            t4890 = t4885 * t4889
            t4897 = t4890 ** 2
            t4899 = t4891 ** 2
            t4902 = 7434 * t4884 - 142674 * t4887 + 1036098 * t4889 - 3676320 * t4891 + 7059390 * t4893 - 7495470 * t4895 + 4142070 * t4897 - 930465 * t4899 - 63
            t4901 = -97594 * t4886 + 1131214 * t4888 - 5937858 * t4890 + (16667410 * t4891 - 26756590 * t4893 + 24655770 * t4895 - 12146070 * t4897 + 2481240 * t4899 + 2478) * t4885
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.1482e4) * ((t4901 + t4902) * np.sin((phi1 - 6 * phi2)) + (t4901 - t4902) * np.sin((phi1 + 6 * phi2))) * ((1 + t4885) ** (-0.1e1 / 0.2e1)) * ((1 - t4885) ** (-0.1e1 / 0.2e1))

        if Bindx == 242:
            t4904 = np.cos(phi)
            t4905 = t4904 ** 2
            t4906 = t4905 ** 2
            t4907 = t4905 * t4906
            t4910 = t4907 ** 2
            t4908 = t4906 ** 2
            t4903 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * t4904 * t4903 ** 2 * (-3594591 * t4906 + 19684665 * t4907 - 54679625 * t4908 - 59879925 * t4910 - 6435 + (80528175 * t4908 + 17678835 * t4910 + 285285) * t4905) * np.sin(phi1) * ((1 + t4904) ** (-0.1e1 / 0.2e1)) * ((1 - t4904) ** (-0.1e1 / 0.2e1))

        if Bindx == 243:
            t4929 = np.cos(phi)
            t4928 = t4929 ** 2
            t4932 = t4928 ** 2
            t4931 = t4929 * t4928
            t4934 = t4931 ** 2
            t4936 = t4932 ** 2
            t4933 = t4929 * t4932
            t4938 = t4933 ** 2
            t4940 = t4934 ** 2
            t4935 = t4929 * t4934
            t4942 = t4935 ** 2
            t4946 = 124 * t4928 + 280 * t4932 - 12180 * t4934 - 98028 * t4938 + 94136 * t4940 - 45820 * t4942 - 2 + (52500 + 8990 * t4936) * t4936
            t4945 = -7763 * t4931 + 46585 * t4933 - 129815 * t4935 + (195335 * t4936 - 164521 * t4938 + 73283 * t4940 - 13485 * t4942 + 381) * t4929
            t4930 = 2 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t4945 + t4946) * np.cos((-t4930 + 12 * phi2)) + (-t4945 + t4946) * np.cos((t4930 + 12 * phi2)))

        if Bindx == 244:
            t4964 = np.cos(phi)
            t4963 = t4964 ** 2
            t4966 = t4964 * t4963
            t4967 = t4963 ** 2
            t4968 = t4964 * t4967
            t4969 = t4966 ** 2
            t4970 = t4964 * t4969
            t4971 = t4967 ** 2
            t4973 = t4968 ** 2
            t4975 = t4969 ** 2
            t4977 = t4970 ** 2
            t4981 = -37555 * t4966 + 405419 * t4968 - 1900651 * t4970 + (4521225 * t4971 - 5710785 * t4973 + 3651825 * t4975 - 930465 * t4977 + 987) * t4964
            t4980 = -8120 * t4963 + 155134 * t4967 - 1136268 * t4969 - 8169600 * t4973 + 9042450 * t4975 - 5242620 * t4977 + 70 + (4118334 + 1240620 * t4971) * t4971
            t4965 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * ((t4980 + t4981) * np.cos((-t4965 + 6 * phi2)) + (t4980 - t4981) * np.cos((t4965 + 6 * phi2)))

        if Bindx == 245:
            t4982 = np.cos(phi)
            t4983 = t4982 ** 2
            t4984 = t4983 ** 2
            t4985 = t4983 * t4984
            t4988 = t4985 ** 2
            t4986 = t4984 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t4984 - 3461458 * t4985 + 36983310 * t4988 + 143 + (13997984 + 5892945 * t4986) * t4986 + (-30620590 * t4986 - 23191590 * t4988 - 19162) * t4983) * np.cos((2 * phi1))

        if Bindx == 246:
            t5009 = np.cos(phi)
            t5008 = t5009 ** 2
            t5011 = t5009 * t5008
            t5012 = t5008 ** 2
            t5013 = t5009 * t5012
            t5014 = t5011 ** 2
            t5015 = t5009 * t5014
            t5016 = t5012 ** 2
            t5018 = t5013 ** 2
            t5020 = t5014 ** 2
            t5022 = t5015 ** 2
            t5024 = t5016 ** 2
            t5027 = 13148 * t5011 - 69340 * t5013 + 155580 * t5015 + (-149820 * t5016 + 8628 * t5018 + 100492 * t5020 - 75980 * t5022 + 17980 * t5024 - 688) * t5009
            t5026 = -3060 * t5008 + 34864 * t5012 - 170660 * t5014 + 433870 * t5016 - 621916 * t5018 + 509000 * t5020 - 222604 * t5022 + 40455 * t5024 + 51
            t5010 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2415e4) * (-(-t5026 + t5027) * np.sin((-t5010 + 12 * phi2)) + (t5026 + t5027) * np.sin((t5010 + 12 * phi2))) * ((1 + t5009) ** (-0.1e1 / 0.2e1)) * ((1 - t5009) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t5046 = np.cos(phi)
            t5045 = t5046 ** 2
            t5049 = t5045 ** 2
            t5048 = t5046 * t5045
            t5051 = t5048 ** 2
            t5053 = t5049 ** 2
            t5050 = t5046 * t5049
            t5055 = t5050 ** 2
            t5057 = t5051 ** 2
            t5052 = t5046 * t5051
            t5059 = t5052 ** 2
            t5061 = t5053 ** 2
            t5064 = 22914 * t5045 - 427922 * t5049 + 3048346 * t5051 - 10700612 * t5053 + 20497830 * t5055 - 21875070 * t5057 + 12226110 * t5059 - 2791395 * t5061 - 201
            t5063 = -56458 * t5048 + 670766 * t5050 - 3726834 * t5052 + (11325522 * t5053 - 19943070 * t5055 + 20272890 * t5057 - 11025510 * t5059 + 2481240 * t5061 + 1454) * t5046
            t5047 = 3 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.910e3) * (-(t5063 + t5064) * np.sin((-t5047 + 6 * phi2)) + (t5063 - t5064) * np.sin((t5047 + 6 * phi2))) * ((1 + t5046) ** (-0.1e1 / 0.2e1)) * ((1 - t5046) ** (-0.1e1 / 0.2e1))

        if Bindx == 248:
            t5074 = np.sin(phi)
            t5072 = t5074 ** 2
            t5065 = np.cos(phi)
            t5066 = t5065 ** 2
            t5067 = t5066 ** 2
            t5069 = t5067 ** 2
            t5068 = t5066 * t5067
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t5065 * t5072 ** 2 * (69069 * t5067 + 740025 * t5069 + 143 + (-328900 + 310155 * t5068) * t5068 + (-780390 * t5069 - 6006) * t5066) * np.sin((3 * phi1)) * ((1 + t5065) ** (-0.1e1 / 0.2e1)) * ((1 - t5065) ** (-0.1e1 / 0.2e1))

        if Bindx == 249:
            t5092 = np.cos(phi)
            t5091 = t5092 ** 2
            t5094 = t5092 * t5091
            t5095 = t5091 ** 2
            t5096 = t5092 * t5095
            t5097 = t5094 ** 2
            t5098 = t5092 * t5097
            t5099 = t5095 ** 2
            t5101 = t5096 ** 2
            t5103 = t5097 ** 2
            t5105 = t5098 ** 2
            t5109 = 85 * t5094 + 823 * t5096 - 6659 * t5098 + (17021 * t5099 - 20425 * t5101 + 11861 * t5103 - 2697 * t5105 - 9) * t5092
            t5108 = 280 * t5091 - 2612 * t5095 + 9720 * t5097 + 14664 * t5101 - 4036 * t5103 - 1624 * t5105 - 5 + (-17286 + 899 * t5099) * t5099
            t5093 = 4 * phi1
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.6279e4) * ((t5108 + t5109) * np.cos((-t5093 + 12 * phi2)) + (t5108 - t5109) * np.cos((t5093 + 12 * phi2)))

        if Bindx == 250:
            t5127 = np.cos(phi)
            t5126 = t5127 ** 2
            t5129 = t5127 * t5126
            t5130 = t5126 ** 2
            t5131 = t5127 * t5130
            t5132 = t5129 ** 2
            t5133 = t5127 * t5132
            t5134 = t5130 ** 2
            t5136 = t5131 ** 2
            t5138 = t5132 ** 2
            t5140 = t5133 ** 2
            t5144 = -487715 * t5129 + 5090953 * t5131 - 23424695 * t5133 + (55508775 * t5134 - 70777785 * t5136 + 46173075 * t5138 - 12096045 * t5140 + 13437) * t5127
            t5143 = -6820 * t5126 + 175640 * t5130 - 1941492 * t5132 - 27968460 * t5136 + 40006200 * t5138 - 28614300 * t5140 + 62 + (10285140 + 8064030 * t5134) * t5134
            t5128 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.14e2) * ((t5143 + t5144) * np.cos((-t5128 + 6 * phi2)) + (t5143 - t5144) * np.cos((t5128 + 6 * phi2)))

        if Bindx == 251:
            t5145 = np.cos(phi)
            t5146 = t5145 ** 2
            t5147 = t5146 ** 2
            t5148 = t5146 * t5147
            t5151 = t5148 ** 2
            t5149 = t5147 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t5147 - 231616 * t5148 + 2143140 * t5151 + 11 + (893090 + 310155 * t5149) * t5149 + (-1862080 * t5149 - 1280640 * t5151 - 1408) * t5146) * np.cos((4 * phi1))

        if Bindx == 252:
            t5172 = np.cos(phi)
            t5171 = t5172 ** 2
            t5175 = t5171 ** 2
            t5174 = t5172 * t5171
            t5177 = t5174 ** 2
            t5179 = t5175 ** 2
            t5176 = t5172 * t5175
            t5181 = t5176 ** 2
            t5183 = t5177 ** 2
            t5178 = t5172 * t5177
            t5185 = t5178 ** 2
            t5187 = t5179 ** 2
            t5190 = 23 - 1196 * t5171 + 9048 * t5175 - 23068 * t5177 + 11422 * t5179 + 44604 * t5181 - 82912 * t5183 + 55564 * t5185 - 13485 * t5187
            t5189 = 2956 * t5174 - 22732 * t5176 + 79212 * t5178 + (-140012 * t5179 + 127172 * t5181 - 50628 * t5183 + 580 * t5185 + 3596 * t5187 - 144) * t5172
            t5173 = 5 * phi1
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.897e3) * (-(t5189 + t5190) * np.sin((-t5173 + 12 * phi2)) + (t5189 - t5190) * np.sin((t5173 + 12 * phi2))) * ((1 + t5172) ** (-0.1e1 / 0.2e1)) * ((1 - t5172) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t5209 = np.cos(phi)
            t5208 = t5209 ** 2
            t5212 = t5208 ** 2
            t5211 = t5209 * t5208
            t5214 = t5211 ** 2
            t5216 = t5212 ** 2
            t5213 = t5209 * t5212
            t5218 = t5213 ** 2
            t5220 = t5214 ** 2
            t5215 = t5209 * t5214
            t5222 = t5215 ** 2
            t5224 = t5216 ** 2
            t5227 = 487918 * t5208 - 8673630 * t5212 + 60237590 * t5214 - 210521300 * t5216 + 407970090 * t5218 - 445243890 * t5220 + 256228050 * t5222 - 60480225 * t5224 - 4603
            t5226 = 745790 * t5211 - 6298922 * t5213 + 18128022 * t5215 + (-4075830 * t5216 - 74406150 * t5218 + 147870450 * t5220 - 114197070 * t5222 + 32256120 * t5224 - 22410) * t5209
            t5210 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-(t5226 + t5227) * np.sin((-t5210 + 6 * phi2)) + (t5226 - t5227) * np.sin((t5210 + 6 * phi2))) * ((1 + t5209) ** (-0.1e1 / 0.2e1)) * ((1 - t5209) ** (-0.1e1 / 0.2e1))

        if Bindx == 254:
            t5237 = np.sin(phi)
            t5234 = t5237 ** 2
            t5235 = t5237 * t5234
            t5228 = np.cos(phi)
            t5229 = t5228 ** 2
            t5230 = t5229 ** 2
            t5232 = t5230 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t5228 * t5235 ** 2 * (-88550 * t5230 - 550275 * t5232 - 231 + (341550 * t5230 + 310155 * t5232 + 8855) * t5229) * np.sin((5 * phi1)) * ((1 + t5228) ** (-0.1e1 / 0.2e1)) * ((1 - t5228) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t5255 = np.cos(phi)
            t5254 = t5255 ** 2
            t5257 = t5255 * t5254
            t5258 = t5254 ** 2
            t5259 = t5255 * t5258
            t5260 = t5257 ** 2
            t5261 = t5255 * t5260
            t5262 = t5258 ** 2
            t5264 = t5259 ** 2
            t5266 = t5260 ** 2
            t5268 = t5261 ** 2
            t5272 = 2859 * t5257 - 15009 * t5259 + 32351 * t5261 + (-24783 * t5262 - 8751 * t5264 + 21605 * t5266 - 8091 * t5268 - 181) * t5255
            t5271 = -276 * t5254 - 104 * t5258 + 11484 * t5260 + 63844 * t5264 - 40200 * t5266 + 6612 * t5268 + 6 + (-43164 + 1798 * t5262) * t5262
            t5256 = 6 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5271 + t5272) * np.cos((-t5256 + 12 * phi2)) + (t5271 - t5272) * np.cos((t5256 + 12 * phi2)))

        if Bindx == 256:
            t5290 = np.cos(phi)
            t5289 = t5290 ** 2
            t5291 = t5290 * t5289
            t5292 = t5289 ** 2
            t5293 = t5290 * t5292
            t5294 = t5291 ** 2
            t5295 = t5290 * t5294
            t5296 = t5292 ** 2
            t5298 = t5293 ** 2
            t5300 = t5294 ** 2
            t5302 = t5295 ** 2
            t5306 = -0.41181525e8 / 0.16384e5 * t5291 + 0.418245597e9 / 0.16384e5 * t5293 - 0.1944857805e10 / 0.16384e5 * t5295 + (0.4769574975e10 / 0.16384e5 * t5296 - 0.6362290935e10 / 0.16384e5 * t5298 + 0.4356527175e10 / 0.16384e5 * t5300 - 0.1197508455e10 / 0.16384e5 * t5302 + 0.1220637e7 / 0.16384e5) * t5290
            t5305 = 0.938025e6 / 0.2048e4 * t5289 - 0.57222165e8 / 0.8192e4 * t5292 + 0.152147457e9 / 0.4096e4 * t5294 + 0.34189155e8 / 0.512e3 * t5298 + 0.264188925e9 / 0.8192e4 * t5300 - 0.321910875e9 / 0.4096e4 * t5302 - 0.37521e5 / 0.8192e4 + (-0.684158805e9 / 0.8192e4 + 0.133056495e9 / 0.4096e4 * t5296) * t5296
            tfunc[..., c] = (t5305 + t5306) * np.cos((6 * phi1 - 6 * phi2)) + (t5305 - t5306) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 257:
            t5307 = np.cos(phi)
            t5308 = t5307 ** 2
            t5309 = t5308 ** 2
            t5310 = t5308 * t5309
            t5313 = t5310 ** 2
            t5311 = t5309 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t5309 - 345366 * t5310 + 2498490 * t5313 + 21 + (1225440 + 310155 * t5311) * t5311 + (-2353130 * t5311 - 1380690 * t5313 - 2478) * t5308) * np.cos((6 * phi1))

        if Bindx == 258:
            t5334 = np.cos(phi)
            t5333 = t5334 ** 2
            t5337 = t5333 ** 2
            t5336 = t5334 * t5333
            t5339 = t5336 ** 2
            t5341 = t5337 ** 2
            t5338 = t5334 * t5337
            t5343 = t5338 ** 2
            t5345 = t5339 ** 2
            t5340 = t5334 * t5339
            t5347 = t5340 ** 2
            t5349 = t5341 ** 2
            t5352 = -4360 * t5333 + 67716 * t5337 - 349256 * t5339 + 773366 * t5341 - 744216 * t5343 + 157780 * t5345 + 193256 * t5347 - 94395 * t5349 + 109
            t5351 = -32788 * t5336 + 111412 * t5338 - 42900 * t5340 + (-427372 * t5341 + 842788 * t5343 - 593028 * t5345 + 121220 * t5347 + 17980 * t5349 + 2688) * t5334
            t5335 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.195e3) * (-(t5351 + t5352) * np.sin((-t5335 + 12 * phi2)) + (t5351 - t5352) * np.sin((t5335 + 12 * phi2))) * ((1 + t5334) ** (-0.1e1 / 0.2e1)) * ((1 - t5334) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t5371 = np.cos(phi)
            t5370 = t5371 ** 2
            t5374 = t5370 ** 2
            t5373 = t5371 * t5370
            t5376 = t5373 ** 2
            t5378 = t5374 ** 2
            t5375 = t5371 * t5374
            t5380 = t5375 ** 2
            t5382 = t5376 ** 2
            t5377 = t5371 * t5376
            t5384 = t5377 ** 2
            t5386 = t5378 ** 2
            t5389 = 19082 * t5370 - 337554 * t5374 + 2514946 * t5376 - 9660376 * t5378 + 20482110 * t5380 - 24141390 * t5382 + 14804790 * t5384 - 3681405 * t5386 - 203
            t5388 = 177826 * t5373 - 1563142 * t5375 + 5959338 * t5377 + (-11144826 * t5378 + 9541350 * t5380 - 1302210 * t5382 - 3065010 * t5384 + 1402440 * t5386 - 5766) * t5371
            t5372 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.230e3) * (-(t5388 + t5389) * np.sin((-t5372 + 6 * phi2)) + (t5388 - t5389) * np.sin((t5372 + 6 * phi2))) * ((1 + t5371) ** (-0.1e1 / 0.2e1)) * ((1 - t5371) ** (-0.1e1 / 0.2e1))

        if Bindx == 260:
            t5398 = np.sin(phi)
            t5395 = t5398 ** 2
            t5396 = t5395 ** 2
            t5390 = np.cos(phi)
            t5391 = t5390 ** 2
            t5392 = t5391 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t5390 * t5396 ** 2 * (-700 * t5391 + 21 + (-15660 * t5391 + 5670 + 13485 * t5392) * t5392) * np.sin((7 * phi1)) * ((1 + t5390) ** (-0.1e1 / 0.2e1)) * ((1 - t5390) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t5416 = np.cos(phi)
            t5415 = t5416 ** 2
            t5419 = t5415 ** 2
            t5418 = t5416 * t5415
            t5421 = t5418 ** 2
            t5423 = t5419 ** 2
            t5420 = t5416 * t5419
            t5425 = t5420 ** 2
            t5427 = t5421 ** 2
            t5422 = t5416 * t5421
            t5429 = t5422 ** 2
            t5433 = -3552 * t5415 + 29940 * t5419 - 85536 * t5421 + 85536 * t5425 - 146252 * t5427 + 51040 * t5429 + 111 + (64218 + 4495 * t5423) * t5423
            t5432 = 3454 * t5418 + 17002 * t5420 - 121154 * t5422 + (228030 * t5423 - 146838 * t5425 - 6786 * t5427 + 26970 * t5429 - 678) * t5416
            t5417 = 8 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.130e3) * ((-t5432 + t5433) * np.cos((-t5417 + 12 * phi2)) + (t5432 + t5433) * np.cos((t5417 + 12 * phi2)))

        if Bindx == 262:
            t5451 = np.cos(phi)
            t5450 = t5451 ** 2
            t5453 = t5451 * t5450
            t5454 = t5450 ** 2
            t5455 = t5451 * t5454
            t5456 = t5453 ** 2
            t5457 = t5451 * t5456
            t5458 = t5454 ** 2
            t5460 = t5455 ** 2
            t5462 = t5456 ** 2
            t5464 = t5457 ** 2
            t5468 = -2317 * t5453 + 58247 * t5455 - 448657 * t5457 + (1467345 * t5458 - 2330055 * t5460 + 1781325 * t5462 - 525915 * t5464 + 27) * t5451
            t5467 = 8342 * t5450 - 115990 * t5454 + 607838 * t5456 + 1811810 * t5460 - 832650 * t5462 - 147030 * t5464 - 97 + (-1507528 + 175305 * t5458) * t5458
            t5452 = 8 * phi1
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * ((t5467 + t5468) * np.cos((-t5452 + 6 * phi2)) + (t5467 - t5468) * np.cos((t5452 + 6 * phi2)))

        if Bindx == 263:
            t5469 = np.cos(phi)
            t5470 = t5469 ** 2
            t5471 = t5470 ** 2
            t5472 = t5470 * t5471
            t5475 = t5472 ** 2
            t5473 = t5471 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t5471 - 78568 * t5472 + 398340 * t5475 + 7 + (246122 + 40455 * t5473) * t5473 + (-419560 * t5473 - 198360 * t5475 - 728) * t5470) * np.cos((8 * phi1))

        if Bindx == 264:
            t5496 = np.cos(phi)
            t5495 = t5496 ** 2
            t5499 = t5495 ** 2
            t5498 = t5496 * t5495
            t5501 = t5498 ** 2
            t5503 = t5499 ** 2
            t5500 = t5496 * t5499
            t5505 = t5500 ** 2
            t5507 = t5501 ** 2
            t5502 = t5496 * t5501
            t5509 = t5502 ** 2
            t5511 = t5503 ** 2
            t5514 = -4824 * t5495 + 25700 * t5499 - 22936 * t5501 - 116050 * t5503 + 286968 * t5505 - 210732 * t5507 + 17400 * t5509 + 24273 * t5511 + 201
            t5513 = -5700 * t5498 + 59748 * t5500 - 179652 * t5502 + (188100 * t5503 + 16404 * t5505 - 138100 * t5507 + 55796 * t5509 + 3596 * t5511 - 192) * t5496
            t5497 = 9 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t5513 - t5514) * np.sin((-t5497 + 12 * phi2)) + (t5513 + t5514) * np.sin((t5497 + 12 * phi2))) * ((1 + t5496) ** (-0.1e1 / 0.2e1)) * ((1 - t5496) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t5533 = np.cos(phi)
            t5532 = t5533 ** 2
            t5536 = t5532 ** 2
            t5535 = t5533 * t5532
            t5538 = t5535 ** 2
            t5540 = t5536 ** 2
            t5537 = t5533 * t5536
            t5542 = t5537 ** 2
            t5544 = t5538 ** 2
            t5539 = t5533 * t5538
            t5546 = t5539 ** 2
            t5548 = t5540 ** 2
            t5551 = -8658 * t5532 + 83258 * t5536 - 136234 * t5538 - 742456 * t5540 + 3245418 * t5542 - 5030298 * t5544 + 3535506 * t5546 - 946647 * t5548 + 111
            t5550 = 85562 * t5535 - 706510 * t5537 + 2707298 * t5539 + (-5384434 * t5540 + 5519150 * t5542 - 2392026 * t5544 - 106314 * t5546 + 280488 * t5548 - 3214) * t5533
            t5534 = 9 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.690e3) * (-(t5550 + t5551) * np.sin((-t5534 + 6 * phi2)) + (t5550 - t5551) * np.sin((t5534 + 6 * phi2))) * ((1 + t5533) ** (-0.1e1 / 0.2e1)) * ((1 - t5533) ** (-0.1e1 / 0.2e1))

        if Bindx == 266:
            t5560 = np.sin(phi)
            t5556 = t5560 ** 2
            t5558 = t5560 * t5556 ** 2
            t5552 = np.cos(phi)
            t5553 = t5552 ** 2
            t5554 = t5553 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t5552 * t5558 ** 2 * (-5481 * t5554 - 35 + (8091 * t5554 + 945) * t5553) * np.sin((9 * phi1)) * ((1 + t5552) ** (-0.1e1 / 0.2e1)) * ((1 - t5552) ** (-0.1e1 / 0.2e1))

        if Bindx == 267:
            t5578 = np.cos(phi)
            t5577 = t5578 ** 2
            t5580 = t5578 * t5577
            t5581 = t5577 ** 2
            t5582 = t5578 * t5581
            t5583 = t5580 ** 2
            t5584 = t5578 * t5583
            t5585 = t5581 ** 2
            t5587 = t5582 ** 2
            t5589 = t5583 ** 2
            t5591 = t5584 ** 2
            t5595 = 9091 * t5580 - 40937 * t5582 + 40183 * t5584 + (67353 * t5585 - 127335 * t5587 + 38541 * t5589 + 13485 * t5591 - 381) * t5578
            t5594 = 2604 * t5577 - 936 * t5581 - 49764 * t5583 - 87516 * t5587 - 36296 * t5589 + 38164 * t5591 - 186 + (132132 + 1798 * t5585) * t5585
            t5579 = 10 * phi1
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.70e2) * ((t5594 - t5595) * np.cos((-t5579 + 12 * phi2)) + (t5594 + t5595) * np.cos((t5579 + 12 * phi2)))

        if Bindx == 268:
            t5613 = np.cos(phi)
            t5612 = t5613 ** 2
            t5615 = t5613 * t5612
            t5616 = t5612 ** 2
            t5617 = t5613 * t5616
            t5618 = t5615 ** 2
            t5619 = t5613 * t5618
            t5620 = t5616 ** 2
            t5622 = t5617 ** 2
            t5624 = t5618 ** 2
            t5626 = t5619 ** 2
            t5630 = -4075 * t5615 + 20963 * t5617 - 32659 * t5619 + (-25311 * t5620 + 124407 * t5622 - 123975 * t5624 + 40455 * t5626 + 195) * t5613
            t5629 = 952 * t5612 - 12422 * t5616 + 67804 * t5618 + 232672 * t5622 - 134346 * t5624 + 12876 * t5626 - 14 + (-178310 + 10788 * t5620) * t5620
            t5614 = 10 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * ((t5629 - t5630) * np.cos((-t5614 + 6 * phi2)) + (t5629 + t5630) * np.cos((t5614 + 6 * phi2)))

        if Bindx == 269:
            t5631 = np.cos(phi)
            t5632 = t5631 ** 2
            t5633 = t5632 ** 2
            t5634 = t5632 * t5633
            t5637 = t5634 ** 2
            t5635 = t5633 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t5633 - 31766 * t5634 + 100890 * t5637 + 5 + (83680 + 8091 * t5635) * t5635 + (-122090 * t5635 - 44370 * t5637 - 430) * t5632) * np.cos((10 * phi1))

        if Bindx == 270:
            t5658 = np.cos(phi)
            t5657 = t5658 ** 2
            t5660 = t5658 * t5657
            t5661 = t5657 ** 2
            t5662 = t5658 * t5661
            t5663 = t5660 ** 2
            t5664 = t5658 * t5663
            t5665 = t5661 ** 2
            t5667 = t5662 ** 2
            t5669 = t5663 ** 2
            t5671 = t5664 ** 2
            t5673 = t5665 ** 2
            t5676 = 30668 * t5660 - 62348 * t5662 - 125268 * t5664 + (473044 * t5665 - 364156 * t5667 - 48132 * t5669 + 95236 * t5671 + 3596 * t5673 - 2640) * t5658
            t5675 = 2468 * t5657 + 43272 * t5661 - 224588 * t5663 + 286286 * t5665 + 94380 * t5667 - 354640 * t5669 + 123772 * t5671 + 29667 * t5673 - 617
            t5659 = 11 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.35e2) * (-(-t5675 + t5676) * np.sin((-t5659 + 12 * phi2)) + (t5675 + t5676) * np.sin((t5659 + 12 * phi2))) * ((1 + t5658) ** (-0.1e1 / 0.2e1)) * ((1 - t5658) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t5695 = np.cos(phi)
            t5694 = t5695 ** 2
            t5698 = t5694 ** 2
            t5697 = t5695 * t5694
            t5700 = t5697 ** 2
            t5702 = t5698 ** 2
            t5699 = t5695 * t5698
            t5704 = t5699 ** 2
            t5706 = t5700 ** 2
            t5701 = t5695 * t5700
            t5708 = t5701 ** 2
            t5710 = t5702 ** 2
            t5713 = -1798 * t5694 + 16758 * t5698 - 58958 * t5700 + 82676 * t5702 - 5874 * t5704 - 103334 * t5706 + 100166 * t5708 - 29667 * t5710 + 31
            t5712 = 1958 * t5697 - 22946 * t5699 + 106590 * t5701 + (-235774 * t5702 + 262066 * t5704 - 132534 * t5706 + 13514 * t5708 + 7192 * t5710 - 66) * t5695
            t5696 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.62790e5) * (-(t5712 + t5713) * np.sin((-t5696 + 6 * phi2)) + (t5712 - t5713) * np.sin((t5696 + 6 * phi2))) * ((1 + t5695) ** (-0.1e1 / 0.2e1)) * ((1 - t5695) ** (-0.1e1 / 0.2e1))

        if Bindx == 272:
            t5721 = np.sin(phi)
            t5717 = t5721 ** 2
            t5718 = t5721 * t5717
            t5719 = t5718 ** 2
            t5714 = np.cos(phi)
            t5715 = t5714 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t5714 * t5719 ** 2 * (15 + (-290 + 899 * t5715) * t5715) * np.sin((11 * phi1)) * ((1 + t5714) ** (-0.1e1 / 0.2e1)) * ((1 - t5714) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t5739 = np.cos(phi)
            t5738 = t5739 ** 2
            t5740 = t5739 * t5738
            t5741 = t5738 ** 2
            t5742 = t5739 * t5741
            t5743 = t5740 ** 2
            t5744 = t5739 * t5743
            t5745 = t5741 ** 2
            t5747 = t5742 ** 2
            t5749 = t5743 ** 2
            t5751 = t5744 ** 2
            t5755 = 0.1163547e7 / 0.8192e4 * t5740 + 0.3252249e7 / 0.8192e4 * t5742 - 0.16927053e8 / 0.8192e4 * t5744 + (0.12670515e8 / 0.8192e4 * t5745 + 0.10171161e8 / 0.8192e4 * t5747 - 0.8889573e7 / 0.8192e4 * t5749 - 0.1335015e7 / 0.8192e4 * t5751 - 0.240999e6 / 0.8192e4) * t5739
            t5754 = -0.1066065e7 / 0.2048e4 * t5741 + 0.891891e6 / 0.1024e4 * t5743 - 0.2741739e7 / 0.1024e4 * t5747 + 0.1252251e7 / 0.2048e4 * t5749 + 0.617265e6 / 0.1024e4 * t5751 + 0.39303e5 / 0.1024e4 * t5738 + 0.39303e5 / 0.8192e4 + (0.4374513e7 / 0.4096e4 + 0.148335e6 / 0.8192e4 * t5745) * t5745
            tfunc[..., c] = (t5754 + t5755) * np.cos((12 * phi1 - 12 * phi2)) + (t5754 - t5755) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 274:
            t5773 = np.cos(phi)
            t5772 = t5773 ** 2
            t5775 = t5773 * t5772
            t5776 = t5772 ** 2
            t5777 = t5773 * t5776
            t5778 = t5775 ** 2
            t5779 = t5773 * t5778
            t5780 = t5776 ** 2
            t5782 = t5777 ** 2
            t5784 = t5778 ** 2
            t5786 = t5779 ** 2
            t5790 = 2859 * t5775 - 15009 * t5777 + 32351 * t5779 + (-24783 * t5780 - 8751 * t5782 + 21605 * t5784 - 8091 * t5786 - 181) * t5773
            t5789 = -276 * t5772 - 104 * t5776 + 11484 * t5778 + 63844 * t5782 - 40200 * t5784 + 6612 * t5786 + 6 + (-43164 + 1798 * t5780) * t5780
            t5774 = 12 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5789 + t5790) * np.cos((-t5774 + 6 * phi2)) + (t5789 - t5790) * np.cos((t5774 + 6 * phi2)))

        if Bindx == 275:
            t5791 = np.cos(phi)
            t5792 = t5791 ** 2
            t5793 = t5792 ** 2
            t5794 = t5792 * t5793
            t5797 = t5794 ** 2
            t5795 = t5793 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t5793 - 8064 * t5794 + 14532 * t5797 + 3 + (17010 + 899 * t5795) * t5795 + (-20608 * t5795 - 5568 * t5797 - 192) * t5792) * np.cos((12 * phi1))

        if Bindx == 276:
            t5818 = np.cos(phi)
            t5817 = t5818 ** 2
            t5820 = t5818 * t5817
            t5821 = t5817 ** 2
            t5822 = t5818 * t5821
            t5823 = t5820 ** 2
            t5824 = t5818 * t5823
            t5825 = t5821 ** 2
            t5827 = t5822 ** 2
            t5829 = t5823 ** 2
            t5831 = t5824 ** 2
            t5833 = t5825 ** 2
            t5836 = -52 * t5820 - 49868 * t5822 + 94380 * t5824 + (33748 * t5825 - 144508 * t5827 + 39228 * t5829 + 24580 * t5831 + 620 * t5833 + 1872) * t5818
            t5835 = -4820 * t5817 + 25536 * t5821 + 10556 * t5823 - 140426 * t5825 + 118404 * t5827 + 47320 * t5829 - 50284 * t5831 - 6045 * t5833 - 241
            t5819 = 13 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * (-(t5835 + t5836) * np.sin((-t5819 + 12 * phi2)) + (-t5835 + t5836) * np.sin((t5819 + 12 * phi2))) * ((1 + t5818) ** (-0.1e1 / 0.2e1)) * ((1 - t5818) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t5855 = np.cos(phi)
            t5854 = t5855 ** 2
            t5858 = t5854 ** 2
            t5857 = t5855 * t5854
            t5860 = t5857 ** 2
            t5862 = t5858 ** 2
            t5859 = t5855 * t5858
            t5864 = t5859 ** 2
            t5866 = t5860 ** 2
            t5861 = t5855 * t5860
            t5868 = t5861 ** 2
            t5870 = t5862 ** 2
            t5873 = 5 - 170 * t5854 + 1722 * t5858 - 6562 * t5860 + 11044 * t5862 - 7326 * t5864 - 1066 * t5866 + 3562 * t5868 - 1209 * t5870
            t5872 = -482 * t5857 + 758 * t5859 + 2838 * t5861 + (-10934 * t5862 + 14042 * t5864 - 7662 * t5866 + 1138 * t5868 + 248 * t5870 + 54) * t5855
            t5856 = 13 * phi1
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.52026e5) * (-(t5872 + t5873) * np.sin((-t5856 + 6 * phi2)) + (t5872 - t5873) * np.sin((t5856 + 6 * phi2))) * ((1 + t5855) ** (-0.1e1 / 0.2e1)) * ((1 - t5855) ** (-0.1e1 / 0.2e1))

        if Bindx == 278:
            t5880 = np.sin(phi)
            t5875 = t5880 ** 2
            t5876 = t5880 * t5875
            t5878 = t5880 * t5876 ** 2
            t5874 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t5874 * t5878 ** 2 * (31 * t5874 ** 2 - 3) * np.sin((13 * phi1)) * ((1 + t5874) ** (-0.1e1 / 0.2e1)) * ((1 - t5874) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t5898 = np.cos(phi)
            t5897 = t5898 ** 2
            t5900 = t5898 * t5897
            t5901 = t5897 ** 2
            t5902 = t5898 * t5901
            t5903 = t5900 ** 2
            t5904 = t5898 * t5903
            t5905 = t5901 ** 2
            t5907 = t5902 ** 2
            t5909 = t5903 ** 2
            t5911 = t5904 ** 2
            t5915 = 1771 * t5900 - 7553 * t5902 - 4433 * t5904 + (20449 * t5905 - 2639 * t5907 - 7259 * t5909 - 651 * t5911 + 315) * t5898
            t5914 = -1156 * t5897 + 728 * t5901 + 12012 * t5903 - 12012 * t5907 + 9464 * t5909 + 2948 * t5911 - 34 + (-12012 + 62 * t5905) * t5905
            t5899 = 14 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.290e3) * ((t5914 + t5915) * np.cos((-t5899 + 12 * phi2)) + (t5914 - t5915) * np.cos((t5899 + 12 * phi2)))

        if Bindx == 280:
            t5933 = np.cos(phi)
            t5932 = t5933 ** 2
            t5935 = t5933 * t5932
            t5936 = t5932 ** 2
            t5937 = t5933 * t5936
            t5938 = t5935 ** 2
            t5939 = t5933 * t5938
            t5940 = t5936 ** 2
            t5942 = t5937 ** 2
            t5944 = t5938 ** 2
            t5946 = t5939 ** 2
            t5950 = 335 * t5935 - 2599 * t5937 + 6215 * t5939 + (-5885 * t5940 + 1141 * t5942 + 1435 * t5944 - 651 * t5946 + 9) * t5933
            t5949 = -280 * t5932 + 1190 * t5936 - 924 * t5938 + 6336 * t5942 - 4310 * t5944 + 820 * t5946 + 14 + (-2970 + 124 * t5940) * t5940
            t5934 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * ((t5949 + t5950) * np.cos((-t5934 + 6 * phi2)) + (t5949 - t5950) * np.cos((t5934 + 6 * phi2)))

        if Bindx == 281:
            t5951 = np.cos(phi)
            t5952 = t5951 ** 2
            t5953 = t5952 ** 2
            t5954 = t5952 * t5953
            t5957 = t5954 ** 2
            t5955 = t5953 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t5953 - 686 * t5954 + 658 * t5957 + 1 + (1120 + 31 * t5955) * t5955 + (-1106 * t5955 - 218 * t5957 - 38) * t5952) * np.cos((14 * phi1))

        if Bindx == 282:
            t5978 = np.cos(phi)
            t5977 = t5978 ** 2
            t5981 = t5977 ** 2
            t5980 = t5978 * t5977
            t5983 = t5980 ** 2
            t5985 = t5981 ** 2
            t5982 = t5978 * t5981
            t5987 = t5982 ** 2
            t5989 = t5983 ** 2
            t5984 = t5978 * t5983
            t5991 = t5984 ** 2
            t5993 = t5985 ** 2
            t5996 = 3 + 144 * t5977 + 308 * t5981 - 1456 * t5983 - 286 * t5985 + 2288 * t5987 - 364 * t5989 - 592 * t5991 - 45 * t5993
            t5995 = -332 * t5980 + 364 * t5982 + 1716 * t5984 + (-1716 * t5985 - 1092 * t5987 + 868 * t5989 + 220 * t5991 + 4 * t5993 - 32) * t5978
            t5979 = 15 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * (-(t5995 + t5996) * np.sin((-t5979 + 12 * phi2)) + (t5995 - t5996) * np.sin((t5979 + 12 * phi2))) * ((1 - t5978) ** (-0.1e1 / 0.2e1)) * ((1 + t5978) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t6015 = np.cos(phi)
            t6014 = t6015 ** 2
            t6018 = t6014 ** 2
            t6017 = t6015 * t6014
            t6020 = t6017 ** 2
            t6022 = t6018 ** 2
            t6019 = t6015 * t6018
            t6024 = t6019 ** 2
            t6026 = t6020 ** 2
            t6021 = t6015 * t6020
            t6028 = t6021 ** 2
            t6030 = t6022 ** 2
            t6033 = -3 + 18 * t6014 + 70 * t6018 - 470 * t6020 + 880 * t6022 - 682 * t6024 + 122 * t6026 + 110 * t6028 - 45 * t6030
            t6032 = -110 * t6017 + 298 * t6019 - 198 * t6021 + (-330 * t6022 + 630 * t6024 - 370 * t6026 + 62 * t6028 + 8 * t6030 + 10) * t6015
            t6016 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8064030e7) * (-(t6032 + t6033) * np.sin((-t6016 + 6 * phi2)) + (t6032 - t6033) * np.sin((t6016 + 6 * phi2))) * ((1 - t6015) ** (-0.1e1 / 0.2e1)) * ((1 + t6015) ** (-0.1e1 / 0.2e1))

        if Bindx == 284:
            t6039 = np.sin(phi)
            t6035 = t6039 ** 2
            t6036 = t6035 ** 2
            t6037 = t6036 ** 2
            t6034 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t6034 * t6037 ** 2 * np.sin((15 * phi1)) * ((1 - t6034) ** (-0.1e1 / 0.2e1)) * ((1 + t6034) ** (-0.1e1 / 0.2e1))

        if Bindx == 285:
            t6055 = np.cos(phi)
            t6072 = -12 * t6055
            t6054 = t6055 ** 2
            t6058 = t6054 ** 2
            t6061 = t6058 ** 2
            t6062 = t6055 * t6061
            t6063 = t6054 * t6062
            t6064 = t6055 * t6063
            t6059 = t6055 * t6058
            t6060 = t6054 * t6059
            t6066 = t6060 ** 2
            t6070 = 64 * t6054 + 364 * t6058 + 364 * t6064 + 64 * t6066 + 1 + (-858 + t6061) * t6061
            t6069 = t6066 * t6072 - 364 * t6059 + 572 * t6060 + 572 * t6062 - 364 * t6063 + t6072 - 196 * (t6054 + t6064) * t6055
            t6056 = 16 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8990e4) * ((t6069 + t6070) * np.cos((-t6056 + 12 * phi2)) + (-t6069 + t6070) * np.cos((t6056 + 12 * phi2)))

        if Bindx == 286:
            t6089 = np.cos(phi)
            t6088 = t6089 ** 2
            t6092 = t6088 ** 2
            t6091 = t6089 * t6088
            t6094 = t6091 ** 2
            t6093 = t6089 * t6092
            t6097 = t6093 ** 2
            t6099 = t6094 ** 2
            t6095 = t6089 * t6094
            t6101 = t6095 ** 2
            t6102 = t6089 * t6101
            t6105 = t6089 * t6102 - 10 * t6088 + 50 * t6092 - 66 * t6094 + 66 * t6097 - 50 * t6099 + 10 * t6101 - 1
            t6104 = -10 * t6091 - 34 * t6093 - 6 * t6102 + (-110 * t6088 + 110) * t6095 + (34 * t6097 + 10 * t6099 + 6) * t6089
            t6090 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * ((t6104 + t6105) * np.cos((-t6090 + 6 * phi2)) + (-t6104 + t6105) * np.cos((t6090 + 6 * phi2)))

        if Bindx == 287:
            t6106 = np.cos(phi)
            t6107 = t6106 ** 2
            t6115 = -8 * t6107
            t6108 = t6107 ** 2
            t6110 = t6108 ** 2
            t6109 = t6107 * t6108
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t6108 + t6115 + 1 + (-56 * t6107 + 70 + t6110) * t6110 + (-56 + (t6115 + 28) * t6109) * t6109)

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

