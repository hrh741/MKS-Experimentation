import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 0, 1],
                        [1, 2, 0, 1],
                        [2, 2, 1, 1],
                        [3, 2, 2, 1],
                        [4, 4, 0, 1],
                        [5, 4, 1, 1],
                        [6, 4, 2, 1],
                        [7, 4, 3, 1],
                        [8, 4, 4, 1],
                        [9, 6, 0, 1],
                        [10, 6, 0, 2],
                        [11, 6, 1, 1],
                        [12, 6, 1, 2],
                        [13, 6, 2, 1],
                        [14, 6, 2, 2],
                        [15, 6, 3, 1],
                        [16, 6, 3, 2],
                        [17, 6, 4, 1],
                        [18, 6, 4, 2],
                        [19, 6, 5, 1],
                        [20, 6, 5, 2],
                        [21, 6, 6, 1],
                        [22, 6, 6, 2],
                        [23, 7, 0, 1],
                        [24, 7, 1, 1],
                        [25, 7, 2, 1],
                        [26, 7, 3, 1],
                        [27, 7, 4, 1],
                        [28, 7, 5, 1],
                        [29, 7, 6, 1],
                        [30, 7, 7, 1],
                        [31, 8, 0, 1],
                        [32, 8, 0, 2],
                        [33, 8, 1, 1],
                        [34, 8, 1, 2],
                        [35, 8, 2, 1],
                        [36, 8, 2, 2],
                        [37, 8, 3, 1],
                        [38, 8, 3, 2],
                        [39, 8, 4, 1],
                        [40, 8, 4, 2],
                        [41, 8, 5, 1],
                        [42, 8, 5, 2],
                        [43, 8, 6, 1],
                        [44, 8, 6, 2],
                        [45, 8, 7, 1],
                        [46, 8, 7, 2],
                        [47, 8, 8, 1],
                        [48, 8, 8, 2],
                        [49, 9, 0, 1],
                        [50, 9, 1, 1],
                        [51, 9, 2, 1],
                        [52, 9, 3, 1],
                        [53, 9, 4, 1],
                        [54, 9, 5, 1],
                        [55, 9, 6, 1],
                        [56, 9, 7, 1],
                        [57, 9, 8, 1],
                        [58, 9, 9, 1],
                        [59, 10, 0, 1],
                        [60, 10, 0, 2],
                        [61, 10, 1, 1],
                        [62, 10, 1, 2],
                        [63, 10, 2, 1],
                        [64, 10, 2, 2],
                        [65, 10, 3, 1],
                        [66, 10, 3, 2],
                        [67, 10, 4, 1],
                        [68, 10, 4, 2],
                        [69, 10, 5, 1],
                        [70, 10, 5, 2],
                        [71, 10, 6, 1],
                        [72, 10, 6, 2],
                        [73, 10, 7, 1],
                        [74, 10, 7, 2],
                        [75, 10, 8, 1],
                        [76, 10, 8, 2],
                        [77, 10, 9, 1],
                        [78, 10, 9, 2],
                        [79, 10, 10, 1],
                        [80, 10, 10, 2],
                        [81, 11, 0, 1],
                        [82, 11, 1, 1],
                        [83, 11, 2, 1],
                        [84, 11, 3, 1],
                        [85, 11, 4, 1],
                        [86, 11, 5, 1],
                        [87, 11, 6, 1],
                        [88, 11, 7, 1],
                        [89, 11, 8, 1],
                        [90, 11, 9, 1],
                        [91, 11, 10, 1],
                        [92, 11, 11, 1],
                        [93, 12, 0, 1],
                        [94, 12, 0, 2],
                        [95, 12, 0, 3],
                        [96, 12, 1, 1],
                        [97, 12, 1, 2],
                        [98, 12, 1, 3],
                        [99, 12, 2, 1],
                        [100, 12, 2, 2],
                        [101, 12, 2, 3],
                        [102, 12, 3, 1],
                        [103, 12, 3, 2],
                        [104, 12, 3, 3],
                        [105, 12, 4, 1],
                        [106, 12, 4, 2],
                        [107, 12, 4, 3],
                        [108, 12, 5, 1],
                        [109, 12, 5, 2],
                        [110, 12, 5, 3],
                        [111, 12, 6, 1],
                        [112, 12, 6, 2],
                        [113, 12, 6, 3],
                        [114, 12, 7, 1],
                        [115, 12, 7, 2],
                        [116, 12, 7, 3],
                        [117, 12, 8, 1],
                        [118, 12, 8, 2],
                        [119, 12, 8, 3],
                        [120, 12, 9, 1],
                        [121, 12, 9, 2],
                        [122, 12, 9, 3],
                        [123, 12, 10, 1],
                        [124, 12, 10, 2],
                        [125, 12, 10, 3],
                        [126, 12, 11, 1],
                        [127, 12, 11, 2],
                        [128, 12, 11, 3],
                        [129, 12, 12, 1],
                        [130, 12, 12, 2],
                        [131, 12, 12, 3],
                        [132, 13, 0, 1],
                        [133, 13, 0, 2],
                        [134, 13, 1, 1],
                        [135, 13, 1, 2],
                        [136, 13, 2, 1],
                        [137, 13, 2, 2],
                        [138, 13, 3, 1],
                        [139, 13, 3, 2],
                        [140, 13, 4, 1],
                        [141, 13, 4, 2],
                        [142, 13, 5, 1],
                        [143, 13, 5, 2],
                        [144, 13, 6, 1],
                        [145, 13, 6, 2],
                        [146, 13, 7, 1],
                        [147, 13, 7, 2],
                        [148, 13, 8, 1],
                        [149, 13, 8, 2],
                        [150, 13, 9, 1],
                        [151, 13, 9, 2],
                        [152, 13, 10, 1],
                        [153, 13, 10, 2],
                        [154, 13, 11, 1],
                        [155, 13, 11, 2],
                        [156, 13, 12, 1],
                        [157, 13, 12, 2],
                        [158, 13, 13, 1],
                        [159, 13, 13, 2],
                        [160, 14, 0, 1],
                        [161, 14, 0, 2],
                        [162, 14, 0, 3],
                        [163, 14, 1, 1],
                        [164, 14, 1, 2],
                        [165, 14, 1, 3],
                        [166, 14, 2, 1],
                        [167, 14, 2, 2],
                        [168, 14, 2, 3],
                        [169, 14, 3, 1],
                        [170, 14, 3, 2],
                        [171, 14, 3, 3],
                        [172, 14, 4, 1],
                        [173, 14, 4, 2],
                        [174, 14, 4, 3],
                        [175, 14, 5, 1],
                        [176, 14, 5, 2],
                        [177, 14, 5, 3],
                        [178, 14, 6, 1],
                        [179, 14, 6, 2],
                        [180, 14, 6, 3],
                        [181, 14, 7, 1],
                        [182, 14, 7, 2],
                        [183, 14, 7, 3],
                        [184, 14, 8, 1],
                        [185, 14, 8, 2],
                        [186, 14, 8, 3],
                        [187, 14, 9, 1],
                        [188, 14, 9, 2],
                        [189, 14, 9, 3],
                        [190, 14, 10, 1],
                        [191, 14, 10, 2],
                        [192, 14, 10, 3],
                        [193, 14, 11, 1],
                        [194, 14, 11, 2],
                        [195, 14, 11, 3],
                        [196, 14, 12, 1],
                        [197, 14, 12, 2],
                        [198, 14, 12, 3],
                        [199, 14, 13, 1],
                        [200, 14, 13, 2],
                        [201, 14, 13, 3],
                        [202, 14, 14, 1],
                        [203, 14, 14, 2],
                        [204, 14, 14, 3],
                        [205, 15, 0, 1],
                        [206, 15, 0, 2],
                        [207, 15, 1, 1],
                        [208, 15, 1, 2],
                        [209, 15, 2, 1],
                        [210, 15, 2, 2],
                        [211, 15, 3, 1],
                        [212, 15, 3, 2],
                        [213, 15, 4, 1],
                        [214, 15, 4, 2],
                        [215, 15, 5, 1],
                        [216, 15, 5, 2],
                        [217, 15, 6, 1],
                        [218, 15, 6, 2],
                        [219, 15, 7, 1],
                        [220, 15, 7, 2],
                        [221, 15, 8, 1],
                        [222, 15, 8, 2],
                        [223, 15, 9, 1],
                        [224, 15, 9, 2],
                        [225, 15, 10, 1],
                        [226, 15, 10, 2],
                        [227, 15, 11, 1],
                        [228, 15, 11, 2],
                        [229, 15, 12, 1],
                        [230, 15, 12, 2],
                        [231, 15, 13, 1],
                        [232, 15, 13, 2],
                        [233, 15, 14, 1],
                        [234, 15, 14, 2],
                        [235, 15, 15, 1],
                        [236, 15, 15, 2],
                        [237, 16, 0, 1],
                        [238, 16, 0, 2],
                        [239, 16, 0, 3],
                        [240, 16, 1, 1],
                        [241, 16, 1, 2],
                        [242, 16, 1, 3],
                        [243, 16, 2, 1],
                        [244, 16, 2, 2],
                        [245, 16, 2, 3],
                        [246, 16, 3, 1],
                        [247, 16, 3, 2],
                        [248, 16, 3, 3],
                        [249, 16, 4, 1],
                        [250, 16, 4, 2],
                        [251, 16, 4, 3],
                        [252, 16, 5, 1],
                        [253, 16, 5, 2],
                        [254, 16, 5, 3],
                        [255, 16, 6, 1],
                        [256, 16, 6, 2],
                        [257, 16, 6, 3],
                        [258, 16, 7, 1],
                        [259, 16, 7, 2],
                        [260, 16, 7, 3],
                        [261, 16, 8, 1],
                        [262, 16, 8, 2],
                        [263, 16, 8, 3],
                        [264, 16, 9, 1],
                        [265, 16, 9, 2],
                        [266, 16, 9, 3],
                        [267, 16, 10, 1],
                        [268, 16, 10, 2],
                        [269, 16, 10, 3],
                        [270, 16, 11, 1],
                        [271, 16, 11, 2],
                        [272, 16, 11, 3],
                        [273, 16, 12, 1],
                        [274, 16, 12, 2],
                        [275, 16, 12, 3],
                        [276, 16, 13, 1],
                        [277, 16, 13, 2],
                        [278, 16, 13, 3],
                        [279, 16, 14, 1],
                        [280, 16, 14, 2],
                        [281, 16, 14, 3],
                        [282, 16, 15, 1],
                        [283, 16, 15, 2],
                        [284, 16, 15, 3],
                        [285, 16, 16, 1],
                        [286, 16, 16, 2],
                        [287, 16, 16, 3]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

