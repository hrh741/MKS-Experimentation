import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [1, 0, 1],
                        [1, 0, 2],
                        [1, 0, 3],
                        [1, 1, 1],
                        [1, 1, 2],
                        [1, 1, 3],
                        [2, 0, 1],
                        [2, 0, 2],
                        [2, 0, 3],
                        [2, 0, 4],
                        [2, 0, 5],
                        [2, 1, 1],
                        [2, 1, 2],
                        [2, 1, 3],
                        [2, 1, 4],
                        [2, 1, 5],
                        [2, 2, 1],
                        [2, 2, 2],
                        [2, 2, 3],
                        [2, 2, 4],
                        [2, 2, 5],
                        [3, 0, 1],
                        [3, 0, 2],
                        [3, 0, 3],
                        [3, 0, 4],
                        [3, 0, 5],
                        [3, 0, 6],
                        [3, 0, 7],
                        [3, 1, 1],
                        [3, 1, 2],
                        [3, 1, 3],
                        [3, 1, 4],
                        [3, 1, 5],
                        [3, 1, 6],
                        [3, 1, 7],
                        [3, 2, 1],
                        [3, 2, 2],
                        [3, 2, 3],
                        [3, 2, 4],
                        [3, 2, 5],
                        [3, 2, 6],
                        [3, 2, 7],
                        [3, 3, 1],
                        [3, 3, 2],
                        [3, 3, 3],
                        [3, 3, 4],
                        [3, 3, 5],
                        [3, 3, 6],
                        [3, 3, 7],
                        [4, 0, 1],
                        [4, 0, 2],
                        [4, 0, 3],
                        [4, 0, 4],
                        [4, 0, 5],
                        [4, 0, 6],
                        [4, 0, 7],
                        [4, 0, 8],
                        [4, 0, 9],
                        [4, 1, 1],
                        [4, 1, 2],
                        [4, 1, 3],
                        [4, 1, 4],
                        [4, 1, 5],
                        [4, 1, 6],
                        [4, 1, 7],
                        [4, 1, 8],
                        [4, 1, 9],
                        [4, 2, 1],
                        [4, 2, 2],
                        [4, 2, 3],
                        [4, 2, 4],
                        [4, 2, 5],
                        [4, 2, 6],
                        [4, 2, 7],
                        [4, 2, 8],
                        [4, 2, 9],
                        [4, 3, 1],
                        [4, 3, 2],
                        [4, 3, 3],
                        [4, 3, 4],
                        [4, 3, 5],
                        [4, 3, 6],
                        [4, 3, 7],
                        [4, 3, 8],
                        [4, 3, 9],
                        [4, 4, 1],
                        [4, 4, 2],
                        [4, 4, 3],
                        [4, 4, 4],
                        [4, 4, 5],
                        [4, 4, 6],
                        [4, 4, 7],
                        [4, 4, 8],
                        [4, 4, 9],
                        [5, 0, 1],
                        [5, 0, 2],
                        [5, 0, 3],
                        [5, 0, 4],
                        [5, 0, 5],
                        [5, 0, 6],
                        [5, 0, 7],
                        [5, 0, 8],
                        [5, 0, 9],
                        [5, 0, 10],
                        [5, 0, 11],
                        [5, 1, 1],
                        [5, 1, 2],
                        [5, 1, 3],
                        [5, 1, 4],
                        [5, 1, 5],
                        [5, 1, 6],
                        [5, 1, 7],
                        [5, 1, 8],
                        [5, 1, 9],
                        [5, 1, 10],
                        [5, 1, 11],
                        [5, 2, 1],
                        [5, 2, 2],
                        [5, 2, 3],
                        [5, 2, 4],
                        [5, 2, 5],
                        [5, 2, 6],
                        [5, 2, 7],
                        [5, 2, 8],
                        [5, 2, 9],
                        [5, 2, 10],
                        [5, 2, 11],
                        [5, 3, 1],
                        [5, 3, 2],
                        [5, 3, 3],
                        [5, 3, 4],
                        [5, 3, 5],
                        [5, 3, 6],
                        [5, 3, 7],
                        [5, 3, 8],
                        [5, 3, 9],
                        [5, 3, 10],
                        [5, 3, 11],
                        [5, 4, 1],
                        [5, 4, 2],
                        [5, 4, 3],
                        [5, 4, 4],
                        [5, 4, 5],
                        [5, 4, 6],
                        [5, 4, 7],
                        [5, 4, 8],
                        [5, 4, 9],
                        [5, 4, 10],
                        [5, 4, 11],
                        [5, 5, 1],
                        [5, 5, 2],
                        [5, 5, 3],
                        [5, 5, 4],
                        [5, 5, 5],
                        [5, 5, 6],
                        [5, 5, 7],
                        [5, 5, 8],
                        [5, 5, 9],
                        [5, 5, 10],
                        [5, 5, 11],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 0, 3],
                        [6, 0, 4],
                        [6, 0, 5],
                        [6, 0, 6],
                        [6, 0, 7],
                        [6, 0, 8],
                        [6, 0, 9],
                        [6, 0, 10],
                        [6, 0, 11],
                        [6, 0, 12],
                        [6, 0, 13],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 1, 3],
                        [6, 1, 4],
                        [6, 1, 5],
                        [6, 1, 6],
                        [6, 1, 7],
                        [6, 1, 8],
                        [6, 1, 9],
                        [6, 1, 10],
                        [6, 1, 11],
                        [6, 1, 12],
                        [6, 1, 13],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 2, 3],
                        [6, 2, 4],
                        [6, 2, 5],
                        [6, 2, 6],
                        [6, 2, 7],
                        [6, 2, 8],
                        [6, 2, 9],
                        [6, 2, 10],
                        [6, 2, 11],
                        [6, 2, 12],
                        [6, 2, 13],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 3, 3],
                        [6, 3, 4],
                        [6, 3, 5],
                        [6, 3, 6],
                        [6, 3, 7],
                        [6, 3, 8],
                        [6, 3, 9],
                        [6, 3, 10],
                        [6, 3, 11],
                        [6, 3, 12],
                        [6, 3, 13],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 4, 3],
                        [6, 4, 4],
                        [6, 4, 5],
                        [6, 4, 6],
                        [6, 4, 7],
                        [6, 4, 8],
                        [6, 4, 9],
                        [6, 4, 10],
                        [6, 4, 11],
                        [6, 4, 12],
                        [6, 4, 13],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 5, 3],
                        [6, 5, 4],
                        [6, 5, 5],
                        [6, 5, 6],
                        [6, 5, 7],
                        [6, 5, 8],
                        [6, 5, 9],
                        [6, 5, 10],
                        [6, 5, 11],
                        [6, 5, 12],
                        [6, 5, 13],
                        [6, 6, 1],
                        [6, 6, 2],
                        [6, 6, 3],
                        [6, 6, 4],
                        [6, 6, 5],
                        [6, 6, 6],
                        [6, 6, 7],
                        [6, 6, 8],
                        [6, 6, 9],
                        [6, 6, 10],
                        [6, 6, 11],
                        [6, 6, 12],
                        [6, 6, 13],
                        [7, 0, 1],
                        [7, 0, 2],
                        [7, 0, 3],
                        [7, 0, 4],
                        [7, 0, 5],
                        [7, 0, 6],
                        [7, 0, 7],
                        [7, 0, 8],
                        [7, 0, 9],
                        [7, 0, 10],
                        [7, 0, 11],
                        [7, 0, 12],
                        [7, 0, 13],
                        [7, 0, 14],
                        [7, 0, 15],
                        [7, 1, 1],
                        [7, 1, 2],
                        [7, 1, 3],
                        [7, 1, 4],
                        [7, 1, 5],
                        [7, 1, 6],
                        [7, 1, 7],
                        [7, 1, 8],
                        [7, 1, 9],
                        [7, 1, 10],
                        [7, 1, 11],
                        [7, 1, 12],
                        [7, 1, 13],
                        [7, 1, 14],
                        [7, 1, 15],
                        [7, 2, 1],
                        [7, 2, 2],
                        [7, 2, 3],
                        [7, 2, 4],
                        [7, 2, 5],
                        [7, 2, 6],
                        [7, 2, 7],
                        [7, 2, 8],
                        [7, 2, 9],
                        [7, 2, 10],
                        [7, 2, 11],
                        [7, 2, 12],
                        [7, 2, 13],
                        [7, 2, 14],
                        [7, 2, 15],
                        [7, 3, 1],
                        [7, 3, 2],
                        [7, 3, 3],
                        [7, 3, 4],
                        [7, 3, 5],
                        [7, 3, 6],
                        [7, 3, 7],
                        [7, 3, 8],
                        [7, 3, 9],
                        [7, 3, 10],
                        [7, 3, 11],
                        [7, 3, 12],
                        [7, 3, 13],
                        [7, 3, 14],
                        [7, 3, 15],
                        [7, 4, 1],
                        [7, 4, 2],
                        [7, 4, 3],
                        [7, 4, 4],
                        [7, 4, 5],
                        [7, 4, 6],
                        [7, 4, 7],
                        [7, 4, 8],
                        [7, 4, 9],
                        [7, 4, 10],
                        [7, 4, 11],
                        [7, 4, 12],
                        [7, 4, 13],
                        [7, 4, 14],
                        [7, 4, 15],
                        [7, 5, 1],
                        [7, 5, 2],
                        [7, 5, 3],
                        [7, 5, 4],
                        [7, 5, 5],
                        [7, 5, 6],
                        [7, 5, 7],
                        [7, 5, 8],
                        [7, 5, 9],
                        [7, 5, 10],
                        [7, 5, 11],
                        [7, 5, 12],
                        [7, 5, 13],
                        [7, 5, 14],
                        [7, 5, 15],
                        [7, 6, 1],
                        [7, 6, 2],
                        [7, 6, 3],
                        [7, 6, 4],
                        [7, 6, 5],
                        [7, 6, 6],
                        [7, 6, 7],
                        [7, 6, 8],
                        [7, 6, 9],
                        [7, 6, 10],
                        [7, 6, 11],
                        [7, 6, 12],
                        [7, 6, 13],
                        [7, 6, 14],
                        [7, 6, 15],
                        [7, 7, 1],
                        [7, 7, 2],
                        [7, 7, 3],
                        [7, 7, 4],
                        [7, 7, 5],
                        [7, 7, 6],
                        [7, 7, 7],
                        [7, 7, 8],
                        [7, 7, 9],
                        [7, 7, 10],
                        [7, 7, 11],
                        [7, 7, 12],
                        [7, 7, 13],
                        [7, 7, 14],
                        [7, 7, 15],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 0, 3],
                        [8, 0, 4],
                        [8, 0, 5],
                        [8, 0, 6],
                        [8, 0, 7],
                        [8, 0, 8],
                        [8, 0, 9],
                        [8, 0, 10],
                        [8, 0, 11],
                        [8, 0, 12],
                        [8, 0, 13],
                        [8, 0, 14],
                        [8, 0, 15],
                        [8, 0, 16],
                        [8, 0, 17],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 1, 3],
                        [8, 1, 4],
                        [8, 1, 5],
                        [8, 1, 6],
                        [8, 1, 7],
                        [8, 1, 8],
                        [8, 1, 9],
                        [8, 1, 10],
                        [8, 1, 11],
                        [8, 1, 12],
                        [8, 1, 13],
                        [8, 1, 14],
                        [8, 1, 15],
                        [8, 1, 16],
                        [8, 1, 17],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 2, 3],
                        [8, 2, 4],
                        [8, 2, 5],
                        [8, 2, 6],
                        [8, 2, 7],
                        [8, 2, 8],
                        [8, 2, 9],
                        [8, 2, 10],
                        [8, 2, 11],
                        [8, 2, 12],
                        [8, 2, 13],
                        [8, 2, 14],
                        [8, 2, 15],
                        [8, 2, 16],
                        [8, 2, 17],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 3, 3],
                        [8, 3, 4],
                        [8, 3, 5],
                        [8, 3, 6],
                        [8, 3, 7],
                        [8, 3, 8],
                        [8, 3, 9],
                        [8, 3, 10],
                        [8, 3, 11],
                        [8, 3, 12],
                        [8, 3, 13],
                        [8, 3, 14],
                        [8, 3, 15],
                        [8, 3, 16],
                        [8, 3, 17],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 4, 3],
                        [8, 4, 4],
                        [8, 4, 5],
                        [8, 4, 6],
                        [8, 4, 7],
                        [8, 4, 8],
                        [8, 4, 9],
                        [8, 4, 10],
                        [8, 4, 11],
                        [8, 4, 12],
                        [8, 4, 13],
                        [8, 4, 14],
                        [8, 4, 15],
                        [8, 4, 16],
                        [8, 4, 17],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 5, 3],
                        [8, 5, 4],
                        [8, 5, 5],
                        [8, 5, 6],
                        [8, 5, 7],
                        [8, 5, 8],
                        [8, 5, 9],
                        [8, 5, 10],
                        [8, 5, 11],
                        [8, 5, 12],
                        [8, 5, 13],
                        [8, 5, 14],
                        [8, 5, 15],
                        [8, 5, 16],
                        [8, 5, 17],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 6, 3],
                        [8, 6, 4],
                        [8, 6, 5],
                        [8, 6, 6],
                        [8, 6, 7],
                        [8, 6, 8],
                        [8, 6, 9],
                        [8, 6, 10],
                        [8, 6, 11],
                        [8, 6, 12],
                        [8, 6, 13],
                        [8, 6, 14],
                        [8, 6, 15],
                        [8, 6, 16],
                        [8, 6, 17],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 7, 3],
                        [8, 7, 4],
                        [8, 7, 5],
                        [8, 7, 6],
                        [8, 7, 7],
                        [8, 7, 8],
                        [8, 7, 9],
                        [8, 7, 10],
                        [8, 7, 11],
                        [8, 7, 12],
                        [8, 7, 13],
                        [8, 7, 14],
                        [8, 7, 15],
                        [8, 7, 16],
                        [8, 7, 17],
                        [8, 8, 1],
                        [8, 8, 2],
                        [8, 8, 3],
                        [8, 8, 4],
                        [8, 8, 5],
                        [8, 8, 6],
                        [8, 8, 7],
                        [8, 8, 8],
                        [8, 8, 9],
                        [8, 8, 10],
                        [8, 8, 11],
                        [8, 8, 12],
                        [8, 8, 13],
                        [8, 8, 14],
                        [8, 8, 15],
                        [8, 8, 16],
                        [8, 8, 17],
                        [9, 0, 1],
                        [9, 0, 2],
                        [9, 0, 3],
                        [9, 0, 4],
                        [9, 0, 5],
                        [9, 0, 6],
                        [9, 0, 7],
                        [9, 0, 8],
                        [9, 0, 9],
                        [9, 0, 10],
                        [9, 0, 11],
                        [9, 0, 12],
                        [9, 0, 13],
                        [9, 0, 14],
                        [9, 0, 15],
                        [9, 0, 16],
                        [9, 0, 17],
                        [9, 0, 18],
                        [9, 0, 19],
                        [9, 1, 1],
                        [9, 1, 2],
                        [9, 1, 3],
                        [9, 1, 4],
                        [9, 1, 5],
                        [9, 1, 6],
                        [9, 1, 7],
                        [9, 1, 8],
                        [9, 1, 9],
                        [9, 1, 10],
                        [9, 1, 11],
                        [9, 1, 12],
                        [9, 1, 13],
                        [9, 1, 14],
                        [9, 1, 15],
                        [9, 1, 16],
                        [9, 1, 17],
                        [9, 1, 18],
                        [9, 1, 19],
                        [9, 2, 1],
                        [9, 2, 2],
                        [9, 2, 3],
                        [9, 2, 4],
                        [9, 2, 5],
                        [9, 2, 6],
                        [9, 2, 7],
                        [9, 2, 8],
                        [9, 2, 9],
                        [9, 2, 10],
                        [9, 2, 11],
                        [9, 2, 12],
                        [9, 2, 13],
                        [9, 2, 14],
                        [9, 2, 15],
                        [9, 2, 16],
                        [9, 2, 17],
                        [9, 2, 18],
                        [9, 2, 19],
                        [9, 3, 1],
                        [9, 3, 2],
                        [9, 3, 3],
                        [9, 3, 4],
                        [9, 3, 5],
                        [9, 3, 6],
                        [9, 3, 7],
                        [9, 3, 8],
                        [9, 3, 9],
                        [9, 3, 10],
                        [9, 3, 11],
                        [9, 3, 12],
                        [9, 3, 13],
                        [9, 3, 14],
                        [9, 3, 15],
                        [9, 3, 16],
                        [9, 3, 17],
                        [9, 3, 18],
                        [9, 3, 19],
                        [9, 4, 1],
                        [9, 4, 2],
                        [9, 4, 3],
                        [9, 4, 4],
                        [9, 4, 5],
                        [9, 4, 6],
                        [9, 4, 7],
                        [9, 4, 8],
                        [9, 4, 9],
                        [9, 4, 10],
                        [9, 4, 11],
                        [9, 4, 12],
                        [9, 4, 13],
                        [9, 4, 14],
                        [9, 4, 15],
                        [9, 4, 16],
                        [9, 4, 17],
                        [9, 4, 18],
                        [9, 4, 19],
                        [9, 5, 1],
                        [9, 5, 2],
                        [9, 5, 3],
                        [9, 5, 4],
                        [9, 5, 5],
                        [9, 5, 6],
                        [9, 5, 7],
                        [9, 5, 8],
                        [9, 5, 9],
                        [9, 5, 10],
                        [9, 5, 11],
                        [9, 5, 12],
                        [9, 5, 13],
                        [9, 5, 14],
                        [9, 5, 15],
                        [9, 5, 16],
                        [9, 5, 17],
                        [9, 5, 18],
                        [9, 5, 19],
                        [9, 6, 1],
                        [9, 6, 2],
                        [9, 6, 3],
                        [9, 6, 4],
                        [9, 6, 5],
                        [9, 6, 6],
                        [9, 6, 7],
                        [9, 6, 8],
                        [9, 6, 9],
                        [9, 6, 10],
                        [9, 6, 11],
                        [9, 6, 12],
                        [9, 6, 13],
                        [9, 6, 14],
                        [9, 6, 15],
                        [9, 6, 16],
                        [9, 6, 17],
                        [9, 6, 18],
                        [9, 6, 19],
                        [9, 7, 1],
                        [9, 7, 2],
                        [9, 7, 3],
                        [9, 7, 4],
                        [9, 7, 5],
                        [9, 7, 6],
                        [9, 7, 7],
                        [9, 7, 8],
                        [9, 7, 9],
                        [9, 7, 10],
                        [9, 7, 11],
                        [9, 7, 12],
                        [9, 7, 13],
                        [9, 7, 14],
                        [9, 7, 15],
                        [9, 7, 16],
                        [9, 7, 17],
                        [9, 7, 18],
                        [9, 7, 19],
                        [9, 8, 1],
                        [9, 8, 2],
                        [9, 8, 3],
                        [9, 8, 4],
                        [9, 8, 5],
                        [9, 8, 6],
                        [9, 8, 7],
                        [9, 8, 8],
                        [9, 8, 9],
                        [9, 8, 10],
                        [9, 8, 11],
                        [9, 8, 12],
                        [9, 8, 13],
                        [9, 8, 14],
                        [9, 8, 15],
                        [9, 8, 16],
                        [9, 8, 17],
                        [9, 8, 18],
                        [9, 8, 19],
                        [9, 9, 1],
                        [9, 9, 2],
                        [9, 9, 3],
                        [9, 9, 4],
                        [9, 9, 5],
                        [9, 9, 6],
                        [9, 9, 7],
                        [9, 9, 8],
                        [9, 9, 9],
                        [9, 9, 10],
                        [9, 9, 11],
                        [9, 9, 12],
                        [9, 9, 13],
                        [9, 9, 14],
                        [9, 9, 15],
                        [9, 9, 16],
                        [9, 9, 17],
                        [9, 9, 18],
                        [9, 9, 19],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 0, 3],
                        [10, 0, 4],
                        [10, 0, 5],
                        [10, 0, 6],
                        [10, 0, 7],
                        [10, 0, 8],
                        [10, 0, 9],
                        [10, 0, 10],
                        [10, 0, 11],
                        [10, 0, 12],
                        [10, 0, 13],
                        [10, 0, 14],
                        [10, 0, 15],
                        [10, 0, 16],
                        [10, 0, 17],
                        [10, 0, 18],
                        [10, 0, 19],
                        [10, 0, 20],
                        [10, 0, 21],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 1, 3],
                        [10, 1, 4],
                        [10, 1, 5],
                        [10, 1, 6],
                        [10, 1, 7],
                        [10, 1, 8],
                        [10, 1, 9],
                        [10, 1, 10],
                        [10, 1, 11],
                        [10, 1, 12],
                        [10, 1, 13],
                        [10, 1, 14],
                        [10, 1, 15],
                        [10, 1, 16],
                        [10, 1, 17],
                        [10, 1, 18],
                        [10, 1, 19],
                        [10, 1, 20],
                        [10, 1, 21],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 2, 3],
                        [10, 2, 4],
                        [10, 2, 5],
                        [10, 2, 6],
                        [10, 2, 7],
                        [10, 2, 8],
                        [10, 2, 9],
                        [10, 2, 10],
                        [10, 2, 11],
                        [10, 2, 12],
                        [10, 2, 13],
                        [10, 2, 14],
                        [10, 2, 15],
                        [10, 2, 16],
                        [10, 2, 17],
                        [10, 2, 18],
                        [10, 2, 19],
                        [10, 2, 20],
                        [10, 2, 21],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 3, 3],
                        [10, 3, 4],
                        [10, 3, 5],
                        [10, 3, 6],
                        [10, 3, 7],
                        [10, 3, 8],
                        [10, 3, 9],
                        [10, 3, 10],
                        [10, 3, 11],
                        [10, 3, 12],
                        [10, 3, 13],
                        [10, 3, 14],
                        [10, 3, 15],
                        [10, 3, 16],
                        [10, 3, 17],
                        [10, 3, 18],
                        [10, 3, 19],
                        [10, 3, 20],
                        [10, 3, 21],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 4, 3],
                        [10, 4, 4],
                        [10, 4, 5],
                        [10, 4, 6],
                        [10, 4, 7],
                        [10, 4, 8],
                        [10, 4, 9],
                        [10, 4, 10],
                        [10, 4, 11],
                        [10, 4, 12],
                        [10, 4, 13],
                        [10, 4, 14],
                        [10, 4, 15],
                        [10, 4, 16],
                        [10, 4, 17],
                        [10, 4, 18],
                        [10, 4, 19],
                        [10, 4, 20],
                        [10, 4, 21],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 5, 3],
                        [10, 5, 4],
                        [10, 5, 5],
                        [10, 5, 6],
                        [10, 5, 7],
                        [10, 5, 8],
                        [10, 5, 9],
                        [10, 5, 10],
                        [10, 5, 11],
                        [10, 5, 12],
                        [10, 5, 13],
                        [10, 5, 14],
                        [10, 5, 15],
                        [10, 5, 16],
                        [10, 5, 17],
                        [10, 5, 18],
                        [10, 5, 19],
                        [10, 5, 20],
                        [10, 5, 21],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 6, 3],
                        [10, 6, 4],
                        [10, 6, 5],
                        [10, 6, 6],
                        [10, 6, 7],
                        [10, 6, 8],
                        [10, 6, 9],
                        [10, 6, 10],
                        [10, 6, 11],
                        [10, 6, 12],
                        [10, 6, 13],
                        [10, 6, 14],
                        [10, 6, 15],
                        [10, 6, 16],
                        [10, 6, 17],
                        [10, 6, 18],
                        [10, 6, 19],
                        [10, 6, 20],
                        [10, 6, 21],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 7, 3],
                        [10, 7, 4],
                        [10, 7, 5],
                        [10, 7, 6],
                        [10, 7, 7],
                        [10, 7, 8],
                        [10, 7, 9],
                        [10, 7, 10],
                        [10, 7, 11],
                        [10, 7, 12],
                        [10, 7, 13],
                        [10, 7, 14],
                        [10, 7, 15],
                        [10, 7, 16],
                        [10, 7, 17],
                        [10, 7, 18],
                        [10, 7, 19],
                        [10, 7, 20],
                        [10, 7, 21],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 8, 3],
                        [10, 8, 4],
                        [10, 8, 5],
                        [10, 8, 6],
                        [10, 8, 7],
                        [10, 8, 8],
                        [10, 8, 9],
                        [10, 8, 10],
                        [10, 8, 11],
                        [10, 8, 12],
                        [10, 8, 13],
                        [10, 8, 14],
                        [10, 8, 15],
                        [10, 8, 16],
                        [10, 8, 17],
                        [10, 8, 18],
                        [10, 8, 19],
                        [10, 8, 20],
                        [10, 8, 21],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 9, 3],
                        [10, 9, 4],
                        [10, 9, 5],
                        [10, 9, 6],
                        [10, 9, 7],
                        [10, 9, 8],
                        [10, 9, 9],
                        [10, 9, 10],
                        [10, 9, 11],
                        [10, 9, 12],
                        [10, 9, 13],
                        [10, 9, 14],
                        [10, 9, 15],
                        [10, 9, 16],
                        [10, 9, 17],
                        [10, 9, 18],
                        [10, 9, 19],
                        [10, 9, 20],
                        [10, 9, 21],
                        [10, 10, 1],
                        [10, 10, 2],
                        [10, 10, 3],
                        [10, 10, 4],
                        [10, 10, 5],
                        [10, 10, 6],
                        [10, 10, 7],
                        [10, 10, 8],
                        [10, 10, 9],
                        [10, 10, 10],
                        [10, 10, 11],
                        [10, 10, 12],
                        [10, 10, 13],
                        [10, 10, 14],
                        [10, 10, 15],
                        [10, 10, 16],
                        [10, 10, 17],
                        [10, 10, 18],
                        [10, 10, 19],
                        [10, 10, 20],
                        [10, 10, 21],
                        [11, 0, 1],
                        [11, 0, 2],
                        [11, 0, 3],
                        [11, 0, 4],
                        [11, 0, 5],
                        [11, 0, 6],
                        [11, 0, 7],
                        [11, 0, 8],
                        [11, 0, 9],
                        [11, 0, 10],
                        [11, 0, 11],
                        [11, 0, 12],
                        [11, 0, 13],
                        [11, 0, 14],
                        [11, 0, 15],
                        [11, 0, 16],
                        [11, 0, 17],
                        [11, 0, 18],
                        [11, 0, 19],
                        [11, 0, 20],
                        [11, 0, 21],
                        [11, 0, 22],
                        [11, 0, 23],
                        [11, 1, 1],
                        [11, 1, 2],
                        [11, 1, 3],
                        [11, 1, 4],
                        [11, 1, 5],
                        [11, 1, 6],
                        [11, 1, 7],
                        [11, 1, 8],
                        [11, 1, 9],
                        [11, 1, 10],
                        [11, 1, 11],
                        [11, 1, 12],
                        [11, 1, 13],
                        [11, 1, 14],
                        [11, 1, 15],
                        [11, 1, 16],
                        [11, 1, 17],
                        [11, 1, 18],
                        [11, 1, 19],
                        [11, 1, 20],
                        [11, 1, 21],
                        [11, 1, 22],
                        [11, 1, 23],
                        [11, 2, 1],
                        [11, 2, 2],
                        [11, 2, 3],
                        [11, 2, 4],
                        [11, 2, 5],
                        [11, 2, 6],
                        [11, 2, 7],
                        [11, 2, 8],
                        [11, 2, 9],
                        [11, 2, 10],
                        [11, 2, 11],
                        [11, 2, 12],
                        [11, 2, 13],
                        [11, 2, 14],
                        [11, 2, 15],
                        [11, 2, 16],
                        [11, 2, 17],
                        [11, 2, 18],
                        [11, 2, 19],
                        [11, 2, 20],
                        [11, 2, 21],
                        [11, 2, 22],
                        [11, 2, 23],
                        [11, 3, 1],
                        [11, 3, 2],
                        [11, 3, 3],
                        [11, 3, 4],
                        [11, 3, 5],
                        [11, 3, 6],
                        [11, 3, 7],
                        [11, 3, 8],
                        [11, 3, 9],
                        [11, 3, 10],
                        [11, 3, 11],
                        [11, 3, 12],
                        [11, 3, 13],
                        [11, 3, 14],
                        [11, 3, 15],
                        [11, 3, 16],
                        [11, 3, 17],
                        [11, 3, 18],
                        [11, 3, 19],
                        [11, 3, 20],
                        [11, 3, 21],
                        [11, 3, 22],
                        [11, 3, 23],
                        [11, 4, 1],
                        [11, 4, 2],
                        [11, 4, 3],
                        [11, 4, 4],
                        [11, 4, 5],
                        [11, 4, 6],
                        [11, 4, 7],
                        [11, 4, 8],
                        [11, 4, 9],
                        [11, 4, 10],
                        [11, 4, 11],
                        [11, 4, 12],
                        [11, 4, 13],
                        [11, 4, 14],
                        [11, 4, 15],
                        [11, 4, 16],
                        [11, 4, 17],
                        [11, 4, 18],
                        [11, 4, 19],
                        [11, 4, 20],
                        [11, 4, 21],
                        [11, 4, 22],
                        [11, 4, 23],
                        [11, 5, 1],
                        [11, 5, 2],
                        [11, 5, 3],
                        [11, 5, 4],
                        [11, 5, 5],
                        [11, 5, 6],
                        [11, 5, 7],
                        [11, 5, 8],
                        [11, 5, 9],
                        [11, 5, 10],
                        [11, 5, 11],
                        [11, 5, 12],
                        [11, 5, 13],
                        [11, 5, 14],
                        [11, 5, 15],
                        [11, 5, 16],
                        [11, 5, 17],
                        [11, 5, 18],
                        [11, 5, 19],
                        [11, 5, 20],
                        [11, 5, 21],
                        [11, 5, 22],
                        [11, 5, 23],
                        [11, 6, 1],
                        [11, 6, 2],
                        [11, 6, 3],
                        [11, 6, 4],
                        [11, 6, 5],
                        [11, 6, 6],
                        [11, 6, 7],
                        [11, 6, 8],
                        [11, 6, 9],
                        [11, 6, 10],
                        [11, 6, 11],
                        [11, 6, 12],
                        [11, 6, 13],
                        [11, 6, 14],
                        [11, 6, 15],
                        [11, 6, 16],
                        [11, 6, 17],
                        [11, 6, 18],
                        [11, 6, 19],
                        [11, 6, 20],
                        [11, 6, 21],
                        [11, 6, 22],
                        [11, 6, 23],
                        [11, 7, 1],
                        [11, 7, 2],
                        [11, 7, 3],
                        [11, 7, 4],
                        [11, 7, 5],
                        [11, 7, 6],
                        [11, 7, 7],
                        [11, 7, 8],
                        [11, 7, 9],
                        [11, 7, 10],
                        [11, 7, 11],
                        [11, 7, 12],
                        [11, 7, 13],
                        [11, 7, 14],
                        [11, 7, 15],
                        [11, 7, 16],
                        [11, 7, 17],
                        [11, 7, 18],
                        [11, 7, 19],
                        [11, 7, 20],
                        [11, 7, 21],
                        [11, 7, 22],
                        [11, 7, 23],
                        [11, 8, 1],
                        [11, 8, 2],
                        [11, 8, 3],
                        [11, 8, 4],
                        [11, 8, 5],
                        [11, 8, 6],
                        [11, 8, 7],
                        [11, 8, 8],
                        [11, 8, 9],
                        [11, 8, 10],
                        [11, 8, 11],
                        [11, 8, 12],
                        [11, 8, 13],
                        [11, 8, 14],
                        [11, 8, 15],
                        [11, 8, 16],
                        [11, 8, 17],
                        [11, 8, 18],
                        [11, 8, 19],
                        [11, 8, 20],
                        [11, 8, 21],
                        [11, 8, 22],
                        [11, 8, 23],
                        [11, 9, 1],
                        [11, 9, 2],
                        [11, 9, 3],
                        [11, 9, 4],
                        [11, 9, 5],
                        [11, 9, 6],
                        [11, 9, 7],
                        [11, 9, 8],
                        [11, 9, 9],
                        [11, 9, 10],
                        [11, 9, 11],
                        [11, 9, 12],
                        [11, 9, 13],
                        [11, 9, 14],
                        [11, 9, 15],
                        [11, 9, 16],
                        [11, 9, 17],
                        [11, 9, 18],
                        [11, 9, 19],
                        [11, 9, 20],
                        [11, 9, 21],
                        [11, 9, 22],
                        [11, 9, 23],
                        [11, 10, 1],
                        [11, 10, 2],
                        [11, 10, 3],
                        [11, 10, 4],
                        [11, 10, 5],
                        [11, 10, 6],
                        [11, 10, 7],
                        [11, 10, 8],
                        [11, 10, 9],
                        [11, 10, 10],
                        [11, 10, 11],
                        [11, 10, 12],
                        [11, 10, 13],
                        [11, 10, 14],
                        [11, 10, 15],
                        [11, 10, 16],
                        [11, 10, 17],
                        [11, 10, 18],
                        [11, 10, 19],
                        [11, 10, 20],
                        [11, 10, 21],
                        [11, 10, 22],
                        [11, 10, 23],
                        [11, 11, 1],
                        [11, 11, 2],
                        [11, 11, 3],
                        [11, 11, 4],
                        [11, 11, 5],
                        [11, 11, 6],
                        [11, 11, 7],
                        [11, 11, 8],
                        [11, 11, 9],
                        [11, 11, 10],
                        [11, 11, 11],
                        [11, 11, 12],
                        [11, 11, 13],
                        [11, 11, 14],
                        [11, 11, 15],
                        [11, 11, 16],
                        [11, 11, 17],
                        [11, 11, 18],
                        [11, 11, 19],
                        [11, 11, 20],
                        [11, 11, 21],
                        [11, 11, 22],
                        [11, 11, 23],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 0, 4],
                        [12, 0, 5],
                        [12, 0, 6],
                        [12, 0, 7],
                        [12, 0, 8],
                        [12, 0, 9],
                        [12, 0, 10],
                        [12, 0, 11],
                        [12, 0, 12],
                        [12, 0, 13],
                        [12, 0, 14],
                        [12, 0, 15],
                        [12, 0, 16],
                        [12, 0, 17],
                        [12, 0, 18],
                        [12, 0, 19],
                        [12, 0, 20],
                        [12, 0, 21],
                        [12, 0, 22],
                        [12, 0, 23],
                        [12, 0, 24],
                        [12, 0, 25],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 1, 4],
                        [12, 1, 5],
                        [12, 1, 6],
                        [12, 1, 7],
                        [12, 1, 8],
                        [12, 1, 9],
                        [12, 1, 10],
                        [12, 1, 11],
                        [12, 1, 12],
                        [12, 1, 13],
                        [12, 1, 14],
                        [12, 1, 15],
                        [12, 1, 16],
                        [12, 1, 17],
                        [12, 1, 18],
                        [12, 1, 19],
                        [12, 1, 20],
                        [12, 1, 21],
                        [12, 1, 22],
                        [12, 1, 23],
                        [12, 1, 24],
                        [12, 1, 25],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 2, 4],
                        [12, 2, 5],
                        [12, 2, 6],
                        [12, 2, 7],
                        [12, 2, 8],
                        [12, 2, 9],
                        [12, 2, 10],
                        [12, 2, 11],
                        [12, 2, 12],
                        [12, 2, 13],
                        [12, 2, 14],
                        [12, 2, 15],
                        [12, 2, 16],
                        [12, 2, 17],
                        [12, 2, 18],
                        [12, 2, 19],
                        [12, 2, 20],
                        [12, 2, 21],
                        [12, 2, 22],
                        [12, 2, 23],
                        [12, 2, 24],
                        [12, 2, 25],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 3, 4],
                        [12, 3, 5],
                        [12, 3, 6],
                        [12, 3, 7],
                        [12, 3, 8],
                        [12, 3, 9],
                        [12, 3, 10],
                        [12, 3, 11],
                        [12, 3, 12],
                        [12, 3, 13],
                        [12, 3, 14],
                        [12, 3, 15],
                        [12, 3, 16],
                        [12, 3, 17],
                        [12, 3, 18],
                        [12, 3, 19],
                        [12, 3, 20],
                        [12, 3, 21],
                        [12, 3, 22],
                        [12, 3, 23],
                        [12, 3, 24],
                        [12, 3, 25],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 4, 4],
                        [12, 4, 5],
                        [12, 4, 6],
                        [12, 4, 7],
                        [12, 4, 8],
                        [12, 4, 9],
                        [12, 4, 10],
                        [12, 4, 11],
                        [12, 4, 12],
                        [12, 4, 13],
                        [12, 4, 14],
                        [12, 4, 15],
                        [12, 4, 16],
                        [12, 4, 17],
                        [12, 4, 18],
                        [12, 4, 19],
                        [12, 4, 20],
                        [12, 4, 21],
                        [12, 4, 22],
                        [12, 4, 23],
                        [12, 4, 24],
                        [12, 4, 25],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 5, 4],
                        [12, 5, 5],
                        [12, 5, 6],
                        [12, 5, 7],
                        [12, 5, 8],
                        [12, 5, 9],
                        [12, 5, 10],
                        [12, 5, 11],
                        [12, 5, 12],
                        [12, 5, 13],
                        [12, 5, 14],
                        [12, 5, 15],
                        [12, 5, 16],
                        [12, 5, 17],
                        [12, 5, 18],
                        [12, 5, 19],
                        [12, 5, 20],
                        [12, 5, 21],
                        [12, 5, 22],
                        [12, 5, 23],
                        [12, 5, 24],
                        [12, 5, 25],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 6, 4],
                        [12, 6, 5],
                        [12, 6, 6],
                        [12, 6, 7],
                        [12, 6, 8],
                        [12, 6, 9],
                        [12, 6, 10],
                        [12, 6, 11],
                        [12, 6, 12],
                        [12, 6, 13],
                        [12, 6, 14],
                        [12, 6, 15],
                        [12, 6, 16],
                        [12, 6, 17],
                        [12, 6, 18],
                        [12, 6, 19],
                        [12, 6, 20],
                        [12, 6, 21],
                        [12, 6, 22],
                        [12, 6, 23],
                        [12, 6, 24],
                        [12, 6, 25],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 7, 4],
                        [12, 7, 5],
                        [12, 7, 6],
                        [12, 7, 7],
                        [12, 7, 8],
                        [12, 7, 9],
                        [12, 7, 10],
                        [12, 7, 11],
                        [12, 7, 12],
                        [12, 7, 13],
                        [12, 7, 14],
                        [12, 7, 15],
                        [12, 7, 16],
                        [12, 7, 17],
                        [12, 7, 18],
                        [12, 7, 19],
                        [12, 7, 20],
                        [12, 7, 21],
                        [12, 7, 22],
                        [12, 7, 23],
                        [12, 7, 24],
                        [12, 7, 25],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 8, 4],
                        [12, 8, 5],
                        [12, 8, 6],
                        [12, 8, 7],
                        [12, 8, 8],
                        [12, 8, 9],
                        [12, 8, 10],
                        [12, 8, 11],
                        [12, 8, 12],
                        [12, 8, 13],
                        [12, 8, 14],
                        [12, 8, 15],
                        [12, 8, 16],
                        [12, 8, 17],
                        [12, 8, 18],
                        [12, 8, 19],
                        [12, 8, 20],
                        [12, 8, 21],
                        [12, 8, 22],
                        [12, 8, 23],
                        [12, 8, 24],
                        [12, 8, 25],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 9, 4],
                        [12, 9, 5],
                        [12, 9, 6],
                        [12, 9, 7],
                        [12, 9, 8],
                        [12, 9, 9],
                        [12, 9, 10],
                        [12, 9, 11],
                        [12, 9, 12],
                        [12, 9, 13],
                        [12, 9, 14],
                        [12, 9, 15],
                        [12, 9, 16],
                        [12, 9, 17],
                        [12, 9, 18],
                        [12, 9, 19],
                        [12, 9, 20],
                        [12, 9, 21],
                        [12, 9, 22],
                        [12, 9, 23],
                        [12, 9, 24],
                        [12, 9, 25],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 10, 4],
                        [12, 10, 5],
                        [12, 10, 6],
                        [12, 10, 7],
                        [12, 10, 8],
                        [12, 10, 9],
                        [12, 10, 10],
                        [12, 10, 11],
                        [12, 10, 12],
                        [12, 10, 13],
                        [12, 10, 14],
                        [12, 10, 15],
                        [12, 10, 16],
                        [12, 10, 17],
                        [12, 10, 18],
                        [12, 10, 19],
                        [12, 10, 20],
                        [12, 10, 21],
                        [12, 10, 22],
                        [12, 10, 23],
                        [12, 10, 24],
                        [12, 10, 25],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 11, 4],
                        [12, 11, 5],
                        [12, 11, 6],
                        [12, 11, 7],
                        [12, 11, 8],
                        [12, 11, 9],
                        [12, 11, 10],
                        [12, 11, 11],
                        [12, 11, 12],
                        [12, 11, 13],
                        [12, 11, 14],
                        [12, 11, 15],
                        [12, 11, 16],
                        [12, 11, 17],
                        [12, 11, 18],
                        [12, 11, 19],
                        [12, 11, 20],
                        [12, 11, 21],
                        [12, 11, 22],
                        [12, 11, 23],
                        [12, 11, 24],
                        [12, 11, 25],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [12, 12, 4],
                        [12, 12, 5],
                        [12, 12, 6],
                        [12, 12, 7],
                        [12, 12, 8],
                        [12, 12, 9],
                        [12, 12, 10],
                        [12, 12, 11],
                        [12, 12, 12],
                        [12, 12, 13],
                        [12, 12, 14],
                        [12, 12, 15],
                        [12, 12, 16],
                        [12, 12, 17],
                        [12, 12, 18],
                        [12, 12, 19],
                        [12, 12, 20],
                        [12, 12, 21],
                        [12, 12, 22],
                        [12, 12, 23],
                        [12, 12, 24],
                        [12, 12, 25],
                        [13, 0, 1],
                        [13, 0, 2],
                        [13, 0, 3],
                        [13, 0, 4],
                        [13, 0, 5],
                        [13, 0, 6],
                        [13, 0, 7],
                        [13, 0, 8],
                        [13, 0, 9],
                        [13, 0, 10],
                        [13, 0, 11],
                        [13, 0, 12],
                        [13, 0, 13],
                        [13, 0, 14],
                        [13, 0, 15],
                        [13, 0, 16],
                        [13, 0, 17],
                        [13, 0, 18],
                        [13, 0, 19],
                        [13, 0, 20],
                        [13, 0, 21],
                        [13, 0, 22],
                        [13, 0, 23],
                        [13, 0, 24],
                        [13, 0, 25],
                        [13, 0, 26],
                        [13, 0, 27],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 1, 3],
                        [13, 1, 4],
                        [13, 1, 5],
                        [13, 1, 6],
                        [13, 1, 7],
                        [13, 1, 8],
                        [13, 1, 9],
                        [13, 1, 10],
                        [13, 1, 11],
                        [13, 1, 12],
                        [13, 1, 13],
                        [13, 1, 14],
                        [13, 1, 15],
                        [13, 1, 16],
                        [13, 1, 17],
                        [13, 1, 18],
                        [13, 1, 19],
                        [13, 1, 20],
                        [13, 1, 21],
                        [13, 1, 22],
                        [13, 1, 23],
                        [13, 1, 24],
                        [13, 1, 25],
                        [13, 1, 26],
                        [13, 1, 27],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 2, 3],
                        [13, 2, 4],
                        [13, 2, 5],
                        [13, 2, 6],
                        [13, 2, 7],
                        [13, 2, 8],
                        [13, 2, 9],
                        [13, 2, 10],
                        [13, 2, 11],
                        [13, 2, 12],
                        [13, 2, 13],
                        [13, 2, 14],
                        [13, 2, 15],
                        [13, 2, 16],
                        [13, 2, 17],
                        [13, 2, 18],
                        [13, 2, 19],
                        [13, 2, 20],
                        [13, 2, 21],
                        [13, 2, 22],
                        [13, 2, 23],
                        [13, 2, 24],
                        [13, 2, 25],
                        [13, 2, 26],
                        [13, 2, 27],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 3, 3],
                        [13, 3, 4],
                        [13, 3, 5],
                        [13, 3, 6],
                        [13, 3, 7],
                        [13, 3, 8],
                        [13, 3, 9],
                        [13, 3, 10],
                        [13, 3, 11],
                        [13, 3, 12],
                        [13, 3, 13],
                        [13, 3, 14],
                        [13, 3, 15],
                        [13, 3, 16],
                        [13, 3, 17],
                        [13, 3, 18],
                        [13, 3, 19],
                        [13, 3, 20],
                        [13, 3, 21],
                        [13, 3, 22],
                        [13, 3, 23],
                        [13, 3, 24],
                        [13, 3, 25],
                        [13, 3, 26],
                        [13, 3, 27],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 4, 3],
                        [13, 4, 4],
                        [13, 4, 5],
                        [13, 4, 6],
                        [13, 4, 7],
                        [13, 4, 8],
                        [13, 4, 9],
                        [13, 4, 10],
                        [13, 4, 11],
                        [13, 4, 12],
                        [13, 4, 13],
                        [13, 4, 14],
                        [13, 4, 15],
                        [13, 4, 16],
                        [13, 4, 17],
                        [13, 4, 18],
                        [13, 4, 19],
                        [13, 4, 20],
                        [13, 4, 21],
                        [13, 4, 22],
                        [13, 4, 23],
                        [13, 4, 24],
                        [13, 4, 25],
                        [13, 4, 26],
                        [13, 4, 27],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 5, 3],
                        [13, 5, 4],
                        [13, 5, 5],
                        [13, 5, 6],
                        [13, 5, 7],
                        [13, 5, 8],
                        [13, 5, 9],
                        [13, 5, 10],
                        [13, 5, 11],
                        [13, 5, 12],
                        [13, 5, 13],
                        [13, 5, 14],
                        [13, 5, 15],
                        [13, 5, 16],
                        [13, 5, 17],
                        [13, 5, 18],
                        [13, 5, 19],
                        [13, 5, 20],
                        [13, 5, 21],
                        [13, 5, 22],
                        [13, 5, 23],
                        [13, 5, 24],
                        [13, 5, 25],
                        [13, 5, 26],
                        [13, 5, 27],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 6, 3],
                        [13, 6, 4],
                        [13, 6, 5],
                        [13, 6, 6],
                        [13, 6, 7],
                        [13, 6, 8],
                        [13, 6, 9],
                        [13, 6, 10],
                        [13, 6, 11],
                        [13, 6, 12],
                        [13, 6, 13],
                        [13, 6, 14],
                        [13, 6, 15],
                        [13, 6, 16],
                        [13, 6, 17],
                        [13, 6, 18],
                        [13, 6, 19],
                        [13, 6, 20],
                        [13, 6, 21],
                        [13, 6, 22],
                        [13, 6, 23],
                        [13, 6, 24],
                        [13, 6, 25],
                        [13, 6, 26],
                        [13, 6, 27],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 7, 3],
                        [13, 7, 4],
                        [13, 7, 5],
                        [13, 7, 6],
                        [13, 7, 7],
                        [13, 7, 8],
                        [13, 7, 9],
                        [13, 7, 10],
                        [13, 7, 11],
                        [13, 7, 12],
                        [13, 7, 13],
                        [13, 7, 14],
                        [13, 7, 15],
                        [13, 7, 16],
                        [13, 7, 17],
                        [13, 7, 18],
                        [13, 7, 19],
                        [13, 7, 20],
                        [13, 7, 21],
                        [13, 7, 22],
                        [13, 7, 23],
                        [13, 7, 24],
                        [13, 7, 25],
                        [13, 7, 26],
                        [13, 7, 27],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 8, 3],
                        [13, 8, 4],
                        [13, 8, 5],
                        [13, 8, 6],
                        [13, 8, 7],
                        [13, 8, 8],
                        [13, 8, 9],
                        [13, 8, 10],
                        [13, 8, 11],
                        [13, 8, 12],
                        [13, 8, 13],
                        [13, 8, 14],
                        [13, 8, 15],
                        [13, 8, 16],
                        [13, 8, 17],
                        [13, 8, 18],
                        [13, 8, 19],
                        [13, 8, 20],
                        [13, 8, 21],
                        [13, 8, 22],
                        [13, 8, 23],
                        [13, 8, 24],
                        [13, 8, 25],
                        [13, 8, 26],
                        [13, 8, 27],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 9, 3],
                        [13, 9, 4],
                        [13, 9, 5],
                        [13, 9, 6],
                        [13, 9, 7],
                        [13, 9, 8],
                        [13, 9, 9],
                        [13, 9, 10],
                        [13, 9, 11],
                        [13, 9, 12],
                        [13, 9, 13],
                        [13, 9, 14],
                        [13, 9, 15],
                        [13, 9, 16],
                        [13, 9, 17],
                        [13, 9, 18],
                        [13, 9, 19],
                        [13, 9, 20],
                        [13, 9, 21],
                        [13, 9, 22],
                        [13, 9, 23],
                        [13, 9, 24],
                        [13, 9, 25],
                        [13, 9, 26],
                        [13, 9, 27],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 10, 3],
                        [13, 10, 4],
                        [13, 10, 5],
                        [13, 10, 6],
                        [13, 10, 7],
                        [13, 10, 8],
                        [13, 10, 9],
                        [13, 10, 10],
                        [13, 10, 11],
                        [13, 10, 12],
                        [13, 10, 13],
                        [13, 10, 14],
                        [13, 10, 15],
                        [13, 10, 16],
                        [13, 10, 17],
                        [13, 10, 18],
                        [13, 10, 19],
                        [13, 10, 20],
                        [13, 10, 21],
                        [13, 10, 22],
                        [13, 10, 23],
                        [13, 10, 24],
                        [13, 10, 25],
                        [13, 10, 26],
                        [13, 10, 27],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 11, 3],
                        [13, 11, 4],
                        [13, 11, 5],
                        [13, 11, 6],
                        [13, 11, 7],
                        [13, 11, 8],
                        [13, 11, 9],
                        [13, 11, 10],
                        [13, 11, 11],
                        [13, 11, 12],
                        [13, 11, 13],
                        [13, 11, 14],
                        [13, 11, 15],
                        [13, 11, 16],
                        [13, 11, 17],
                        [13, 11, 18],
                        [13, 11, 19],
                        [13, 11, 20],
                        [13, 11, 21],
                        [13, 11, 22],
                        [13, 11, 23],
                        [13, 11, 24],
                        [13, 11, 25],
                        [13, 11, 26],
                        [13, 11, 27],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 12, 3],
                        [13, 12, 4],
                        [13, 12, 5],
                        [13, 12, 6],
                        [13, 12, 7],
                        [13, 12, 8],
                        [13, 12, 9],
                        [13, 12, 10],
                        [13, 12, 11],
                        [13, 12, 12],
                        [13, 12, 13],
                        [13, 12, 14],
                        [13, 12, 15],
                        [13, 12, 16],
                        [13, 12, 17],
                        [13, 12, 18],
                        [13, 12, 19],
                        [13, 12, 20],
                        [13, 12, 21],
                        [13, 12, 22],
                        [13, 12, 23],
                        [13, 12, 24],
                        [13, 12, 25],
                        [13, 12, 26],
                        [13, 12, 27],
                        [13, 13, 1],
                        [13, 13, 2],
                        [13, 13, 3],
                        [13, 13, 4],
                        [13, 13, 5],
                        [13, 13, 6],
                        [13, 13, 7],
                        [13, 13, 8],
                        [13, 13, 9],
                        [13, 13, 10],
                        [13, 13, 11],
                        [13, 13, 12],
                        [13, 13, 13],
                        [13, 13, 14],
                        [13, 13, 15],
                        [13, 13, 16],
                        [13, 13, 17],
                        [13, 13, 18],
                        [13, 13, 19],
                        [13, 13, 20],
                        [13, 13, 21],
                        [13, 13, 22],
                        [13, 13, 23],
                        [13, 13, 24],
                        [13, 13, 25],
                        [13, 13, 26],
                        [13, 13, 27],
                        [14, 0, 1],
                        [14, 0, 2],
                        [14, 0, 3],
                        [14, 0, 4],
                        [14, 0, 5],
                        [14, 0, 6],
                        [14, 0, 7],
                        [14, 0, 8],
                        [14, 0, 9],
                        [14, 0, 10],
                        [14, 0, 11],
                        [14, 0, 12],
                        [14, 0, 13],
                        [14, 0, 14],
                        [14, 0, 15],
                        [14, 0, 16],
                        [14, 0, 17],
                        [14, 0, 18],
                        [14, 0, 19],
                        [14, 0, 20],
                        [14, 0, 21],
                        [14, 0, 22],
                        [14, 0, 23],
                        [14, 0, 24],
                        [14, 0, 25],
                        [14, 0, 26],
                        [14, 0, 27],
                        [14, 0, 28],
                        [14, 0, 29],
                        [14, 1, 1],
                        [14, 1, 2],
                        [14, 1, 3],
                        [14, 1, 4],
                        [14, 1, 5],
                        [14, 1, 6],
                        [14, 1, 7],
                        [14, 1, 8],
                        [14, 1, 9],
                        [14, 1, 10],
                        [14, 1, 11],
                        [14, 1, 12],
                        [14, 1, 13],
                        [14, 1, 14],
                        [14, 1, 15],
                        [14, 1, 16],
                        [14, 1, 17],
                        [14, 1, 18],
                        [14, 1, 19],
                        [14, 1, 20],
                        [14, 1, 21],
                        [14, 1, 22],
                        [14, 1, 23],
                        [14, 1, 24],
                        [14, 1, 25],
                        [14, 1, 26],
                        [14, 1, 27],
                        [14, 1, 28],
                        [14, 1, 29],
                        [14, 2, 1],
                        [14, 2, 2],
                        [14, 2, 3],
                        [14, 2, 4],
                        [14, 2, 5],
                        [14, 2, 6],
                        [14, 2, 7],
                        [14, 2, 8],
                        [14, 2, 9],
                        [14, 2, 10],
                        [14, 2, 11],
                        [14, 2, 12],
                        [14, 2, 13],
                        [14, 2, 14],
                        [14, 2, 15],
                        [14, 2, 16],
                        [14, 2, 17],
                        [14, 2, 18],
                        [14, 2, 19],
                        [14, 2, 20],
                        [14, 2, 21],
                        [14, 2, 22],
                        [14, 2, 23],
                        [14, 2, 24],
                        [14, 2, 25],
                        [14, 2, 26],
                        [14, 2, 27],
                        [14, 2, 28],
                        [14, 2, 29],
                        [14, 3, 1],
                        [14, 3, 2],
                        [14, 3, 3],
                        [14, 3, 4],
                        [14, 3, 5],
                        [14, 3, 6],
                        [14, 3, 7],
                        [14, 3, 8],
                        [14, 3, 9],
                        [14, 3, 10],
                        [14, 3, 11],
                        [14, 3, 12],
                        [14, 3, 13],
                        [14, 3, 14],
                        [14, 3, 15],
                        [14, 3, 16],
                        [14, 3, 17],
                        [14, 3, 18],
                        [14, 3, 19],
                        [14, 3, 20],
                        [14, 3, 21],
                        [14, 3, 22],
                        [14, 3, 23],
                        [14, 3, 24],
                        [14, 3, 25],
                        [14, 3, 26],
                        [14, 3, 27],
                        [14, 3, 28],
                        [14, 3, 29],
                        [14, 4, 1],
                        [14, 4, 2],
                        [14, 4, 3],
                        [14, 4, 4],
                        [14, 4, 5],
                        [14, 4, 6],
                        [14, 4, 7],
                        [14, 4, 8],
                        [14, 4, 9],
                        [14, 4, 10],
                        [14, 4, 11],
                        [14, 4, 12],
                        [14, 4, 13],
                        [14, 4, 14],
                        [14, 4, 15],
                        [14, 4, 16],
                        [14, 4, 17],
                        [14, 4, 18],
                        [14, 4, 19],
                        [14, 4, 20],
                        [14, 4, 21],
                        [14, 4, 22],
                        [14, 4, 23],
                        [14, 4, 24],
                        [14, 4, 25],
                        [14, 4, 26],
                        [14, 4, 27],
                        [14, 4, 28],
                        [14, 4, 29],
                        [14, 5, 1],
                        [14, 5, 2],
                        [14, 5, 3],
                        [14, 5, 4],
                        [14, 5, 5],
                        [14, 5, 6],
                        [14, 5, 7],
                        [14, 5, 8],
                        [14, 5, 9],
                        [14, 5, 10],
                        [14, 5, 11],
                        [14, 5, 12],
                        [14, 5, 13],
                        [14, 5, 14],
                        [14, 5, 15],
                        [14, 5, 16],
                        [14, 5, 17],
                        [14, 5, 18],
                        [14, 5, 19],
                        [14, 5, 20],
                        [14, 5, 21],
                        [14, 5, 22],
                        [14, 5, 23],
                        [14, 5, 24],
                        [14, 5, 25],
                        [14, 5, 26],
                        [14, 5, 27],
                        [14, 5, 28],
                        [14, 5, 29],
                        [14, 6, 1],
                        [14, 6, 2],
                        [14, 6, 3],
                        [14, 6, 4],
                        [14, 6, 5],
                        [14, 6, 6],
                        [14, 6, 7],
                        [14, 6, 8],
                        [14, 6, 9],
                        [14, 6, 10],
                        [14, 6, 11],
                        [14, 6, 12],
                        [14, 6, 13],
                        [14, 6, 14],
                        [14, 6, 15],
                        [14, 6, 16],
                        [14, 6, 17],
                        [14, 6, 18],
                        [14, 6, 19],
                        [14, 6, 20],
                        [14, 6, 21],
                        [14, 6, 22],
                        [14, 6, 23],
                        [14, 6, 24],
                        [14, 6, 25],
                        [14, 6, 26],
                        [14, 6, 27],
                        [14, 6, 28],
                        [14, 6, 29],
                        [14, 7, 1],
                        [14, 7, 2],
                        [14, 7, 3],
                        [14, 7, 4],
                        [14, 7, 5],
                        [14, 7, 6],
                        [14, 7, 7],
                        [14, 7, 8],
                        [14, 7, 9],
                        [14, 7, 10],
                        [14, 7, 11],
                        [14, 7, 12],
                        [14, 7, 13],
                        [14, 7, 14],
                        [14, 7, 15],
                        [14, 7, 16],
                        [14, 7, 17],
                        [14, 7, 18],
                        [14, 7, 19],
                        [14, 7, 20],
                        [14, 7, 21],
                        [14, 7, 22],
                        [14, 7, 23],
                        [14, 7, 24],
                        [14, 7, 25],
                        [14, 7, 26],
                        [14, 7, 27],
                        [14, 7, 28],
                        [14, 7, 29],
                        [14, 8, 1],
                        [14, 8, 2],
                        [14, 8, 3],
                        [14, 8, 4],
                        [14, 8, 5],
                        [14, 8, 6],
                        [14, 8, 7],
                        [14, 8, 8],
                        [14, 8, 9],
                        [14, 8, 10],
                        [14, 8, 11],
                        [14, 8, 12],
                        [14, 8, 13],
                        [14, 8, 14],
                        [14, 8, 15],
                        [14, 8, 16],
                        [14, 8, 17],
                        [14, 8, 18],
                        [14, 8, 19],
                        [14, 8, 20],
                        [14, 8, 21],
                        [14, 8, 22],
                        [14, 8, 23],
                        [14, 8, 24],
                        [14, 8, 25],
                        [14, 8, 26],
                        [14, 8, 27],
                        [14, 8, 28],
                        [14, 8, 29],
                        [14, 9, 1],
                        [14, 9, 2],
                        [14, 9, 3],
                        [14, 9, 4],
                        [14, 9, 5],
                        [14, 9, 6],
                        [14, 9, 7],
                        [14, 9, 8],
                        [14, 9, 9],
                        [14, 9, 10],
                        [14, 9, 11],
                        [14, 9, 12],
                        [14, 9, 13],
                        [14, 9, 14],
                        [14, 9, 15],
                        [14, 9, 16],
                        [14, 9, 17],
                        [14, 9, 18],
                        [14, 9, 19],
                        [14, 9, 20],
                        [14, 9, 21],
                        [14, 9, 22],
                        [14, 9, 23],
                        [14, 9, 24],
                        [14, 9, 25],
                        [14, 9, 26],
                        [14, 9, 27],
                        [14, 9, 28],
                        [14, 9, 29],
                        [14, 10, 1],
                        [14, 10, 2],
                        [14, 10, 3],
                        [14, 10, 4],
                        [14, 10, 5],
                        [14, 10, 6],
                        [14, 10, 7],
                        [14, 10, 8],
                        [14, 10, 9],
                        [14, 10, 10],
                        [14, 10, 11],
                        [14, 10, 12],
                        [14, 10, 13],
                        [14, 10, 14],
                        [14, 10, 15],
                        [14, 10, 16],
                        [14, 10, 17],
                        [14, 10, 18],
                        [14, 10, 19],
                        [14, 10, 20],
                        [14, 10, 21],
                        [14, 10, 22],
                        [14, 10, 23],
                        [14, 10, 24],
                        [14, 10, 25],
                        [14, 10, 26],
                        [14, 10, 27],
                        [14, 10, 28],
                        [14, 10, 29],
                        [14, 11, 1],
                        [14, 11, 2],
                        [14, 11, 3],
                        [14, 11, 4],
                        [14, 11, 5],
                        [14, 11, 6],
                        [14, 11, 7],
                        [14, 11, 8],
                        [14, 11, 9],
                        [14, 11, 10],
                        [14, 11, 11],
                        [14, 11, 12],
                        [14, 11, 13],
                        [14, 11, 14],
                        [14, 11, 15],
                        [14, 11, 16],
                        [14, 11, 17],
                        [14, 11, 18],
                        [14, 11, 19],
                        [14, 11, 20],
                        [14, 11, 21],
                        [14, 11, 22],
                        [14, 11, 23],
                        [14, 11, 24],
                        [14, 11, 25],
                        [14, 11, 26],
                        [14, 11, 27],
                        [14, 11, 28],
                        [14, 11, 29],
                        [14, 12, 1],
                        [14, 12, 2],
                        [14, 12, 3],
                        [14, 12, 4],
                        [14, 12, 5],
                        [14, 12, 6],
                        [14, 12, 7],
                        [14, 12, 8],
                        [14, 12, 9],
                        [14, 12, 10],
                        [14, 12, 11],
                        [14, 12, 12],
                        [14, 12, 13],
                        [14, 12, 14],
                        [14, 12, 15],
                        [14, 12, 16],
                        [14, 12, 17],
                        [14, 12, 18],
                        [14, 12, 19],
                        [14, 12, 20],
                        [14, 12, 21],
                        [14, 12, 22],
                        [14, 12, 23],
                        [14, 12, 24],
                        [14, 12, 25],
                        [14, 12, 26],
                        [14, 12, 27],
                        [14, 12, 28],
                        [14, 12, 29],
                        [14, 13, 1],
                        [14, 13, 2],
                        [14, 13, 3],
                        [14, 13, 4],
                        [14, 13, 5],
                        [14, 13, 6],
                        [14, 13, 7],
                        [14, 13, 8],
                        [14, 13, 9],
                        [14, 13, 10],
                        [14, 13, 11],
                        [14, 13, 12],
                        [14, 13, 13],
                        [14, 13, 14],
                        [14, 13, 15],
                        [14, 13, 16],
                        [14, 13, 17],
                        [14, 13, 18],
                        [14, 13, 19],
                        [14, 13, 20],
                        [14, 13, 21],
                        [14, 13, 22],
                        [14, 13, 23],
                        [14, 13, 24],
                        [14, 13, 25],
                        [14, 13, 26],
                        [14, 13, 27],
                        [14, 13, 28],
                        [14, 13, 29],
                        [14, 14, 1],
                        [14, 14, 2],
                        [14, 14, 3],
                        [14, 14, 4],
                        [14, 14, 5],
                        [14, 14, 6],
                        [14, 14, 7],
                        [14, 14, 8],
                        [14, 14, 9],
                        [14, 14, 10],
                        [14, 14, 11],
                        [14, 14, 12],
                        [14, 14, 13],
                        [14, 14, 14],
                        [14, 14, 15],
                        [14, 14, 16],
                        [14, 14, 17],
                        [14, 14, 18],
                        [14, 14, 19],
                        [14, 14, 20],
                        [14, 14, 21],
                        [14, 14, 22],
                        [14, 14, 23],
                        [14, 14, 24],
                        [14, 14, 25],
                        [14, 14, 26],
                        [14, 14, 27],
                        [14, 14, 28],
                        [14, 14, 29],
                        [15, 0, 1],
                        [15, 0, 2],
                        [15, 0, 3],
                        [15, 0, 4],
                        [15, 0, 5],
                        [15, 0, 6],
                        [15, 0, 7],
                        [15, 0, 8],
                        [15, 0, 9],
                        [15, 0, 10],
                        [15, 0, 11],
                        [15, 0, 12],
                        [15, 0, 13],
                        [15, 0, 14],
                        [15, 0, 15],
                        [15, 0, 16],
                        [15, 0, 17],
                        [15, 0, 18],
                        [15, 0, 19],
                        [15, 0, 20],
                        [15, 0, 21],
                        [15, 0, 22],
                        [15, 0, 23],
                        [15, 0, 24],
                        [15, 0, 25],
                        [15, 0, 26],
                        [15, 0, 27],
                        [15, 0, 28],
                        [15, 0, 29],
                        [15, 0, 30],
                        [15, 0, 31],
                        [15, 1, 1],
                        [15, 1, 2],
                        [15, 1, 3],
                        [15, 1, 4],
                        [15, 1, 5],
                        [15, 1, 6],
                        [15, 1, 7],
                        [15, 1, 8],
                        [15, 1, 9],
                        [15, 1, 10],
                        [15, 1, 11],
                        [15, 1, 12],
                        [15, 1, 13],
                        [15, 1, 14],
                        [15, 1, 15],
                        [15, 1, 16],
                        [15, 1, 17],
                        [15, 1, 18],
                        [15, 1, 19],
                        [15, 1, 20],
                        [15, 1, 21],
                        [15, 1, 22],
                        [15, 1, 23],
                        [15, 1, 24],
                        [15, 1, 25],
                        [15, 1, 26],
                        [15, 1, 27],
                        [15, 1, 28],
                        [15, 1, 29],
                        [15, 1, 30],
                        [15, 1, 31],
                        [15, 2, 1],
                        [15, 2, 2],
                        [15, 2, 3],
                        [15, 2, 4],
                        [15, 2, 5],
                        [15, 2, 6],
                        [15, 2, 7],
                        [15, 2, 8],
                        [15, 2, 9],
                        [15, 2, 10],
                        [15, 2, 11],
                        [15, 2, 12],
                        [15, 2, 13],
                        [15, 2, 14],
                        [15, 2, 15],
                        [15, 2, 16],
                        [15, 2, 17],
                        [15, 2, 18],
                        [15, 2, 19],
                        [15, 2, 20],
                        [15, 2, 21],
                        [15, 2, 22],
                        [15, 2, 23],
                        [15, 2, 24],
                        [15, 2, 25],
                        [15, 2, 26],
                        [15, 2, 27],
                        [15, 2, 28],
                        [15, 2, 29],
                        [15, 2, 30],
                        [15, 2, 31],
                        [15, 3, 1],
                        [15, 3, 2],
                        [15, 3, 3],
                        [15, 3, 4],
                        [15, 3, 5],
                        [15, 3, 6],
                        [15, 3, 7],
                        [15, 3, 8],
                        [15, 3, 9],
                        [15, 3, 10],
                        [15, 3, 11],
                        [15, 3, 12],
                        [15, 3, 13],
                        [15, 3, 14],
                        [15, 3, 15],
                        [15, 3, 16],
                        [15, 3, 17],
                        [15, 3, 18],
                        [15, 3, 19],
                        [15, 3, 20],
                        [15, 3, 21],
                        [15, 3, 22],
                        [15, 3, 23],
                        [15, 3, 24],
                        [15, 3, 25],
                        [15, 3, 26],
                        [15, 3, 27],
                        [15, 3, 28],
                        [15, 3, 29],
                        [15, 3, 30],
                        [15, 3, 31],
                        [15, 4, 1],
                        [15, 4, 2],
                        [15, 4, 3],
                        [15, 4, 4],
                        [15, 4, 5],
                        [15, 4, 6],
                        [15, 4, 7],
                        [15, 4, 8],
                        [15, 4, 9],
                        [15, 4, 10],
                        [15, 4, 11],
                        [15, 4, 12],
                        [15, 4, 13],
                        [15, 4, 14],
                        [15, 4, 15],
                        [15, 4, 16],
                        [15, 4, 17],
                        [15, 4, 18],
                        [15, 4, 19],
                        [15, 4, 20],
                        [15, 4, 21],
                        [15, 4, 22],
                        [15, 4, 23],
                        [15, 4, 24],
                        [15, 4, 25],
                        [15, 4, 26],
                        [15, 4, 27],
                        [15, 4, 28],
                        [15, 4, 29],
                        [15, 4, 30],
                        [15, 4, 31],
                        [15, 5, 1],
                        [15, 5, 2],
                        [15, 5, 3],
                        [15, 5, 4],
                        [15, 5, 5],
                        [15, 5, 6],
                        [15, 5, 7],
                        [15, 5, 8],
                        [15, 5, 9],
                        [15, 5, 10],
                        [15, 5, 11],
                        [15, 5, 12],
                        [15, 5, 13],
                        [15, 5, 14],
                        [15, 5, 15],
                        [15, 5, 16],
                        [15, 5, 17],
                        [15, 5, 18],
                        [15, 5, 19],
                        [15, 5, 20],
                        [15, 5, 21],
                        [15, 5, 22],
                        [15, 5, 23],
                        [15, 5, 24],
                        [15, 5, 25],
                        [15, 5, 26],
                        [15, 5, 27],
                        [15, 5, 28],
                        [15, 5, 29],
                        [15, 5, 30],
                        [15, 5, 31],
                        [15, 6, 1],
                        [15, 6, 2],
                        [15, 6, 3],
                        [15, 6, 4],
                        [15, 6, 5],
                        [15, 6, 6],
                        [15, 6, 7],
                        [15, 6, 8],
                        [15, 6, 9],
                        [15, 6, 10],
                        [15, 6, 11],
                        [15, 6, 12],
                        [15, 6, 13],
                        [15, 6, 14],
                        [15, 6, 15],
                        [15, 6, 16],
                        [15, 6, 17],
                        [15, 6, 18],
                        [15, 6, 19],
                        [15, 6, 20],
                        [15, 6, 21],
                        [15, 6, 22],
                        [15, 6, 23],
                        [15, 6, 24],
                        [15, 6, 25],
                        [15, 6, 26],
                        [15, 6, 27],
                        [15, 6, 28],
                        [15, 6, 29],
                        [15, 6, 30],
                        [15, 6, 31],
                        [15, 7, 1],
                        [15, 7, 2],
                        [15, 7, 3],
                        [15, 7, 4],
                        [15, 7, 5],
                        [15, 7, 6],
                        [15, 7, 7],
                        [15, 7, 8],
                        [15, 7, 9],
                        [15, 7, 10],
                        [15, 7, 11],
                        [15, 7, 12],
                        [15, 7, 13],
                        [15, 7, 14],
                        [15, 7, 15],
                        [15, 7, 16],
                        [15, 7, 17],
                        [15, 7, 18],
                        [15, 7, 19],
                        [15, 7, 20],
                        [15, 7, 21],
                        [15, 7, 22],
                        [15, 7, 23],
                        [15, 7, 24],
                        [15, 7, 25],
                        [15, 7, 26],
                        [15, 7, 27],
                        [15, 7, 28],
                        [15, 7, 29],
                        [15, 7, 30],
                        [15, 7, 31],
                        [15, 8, 1],
                        [15, 8, 2],
                        [15, 8, 3],
                        [15, 8, 4],
                        [15, 8, 5],
                        [15, 8, 6],
                        [15, 8, 7],
                        [15, 8, 8],
                        [15, 8, 9],
                        [15, 8, 10],
                        [15, 8, 11],
                        [15, 8, 12],
                        [15, 8, 13],
                        [15, 8, 14],
                        [15, 8, 15],
                        [15, 8, 16],
                        [15, 8, 17],
                        [15, 8, 18],
                        [15, 8, 19],
                        [15, 8, 20],
                        [15, 8, 21],
                        [15, 8, 22],
                        [15, 8, 23],
                        [15, 8, 24],
                        [15, 8, 25],
                        [15, 8, 26],
                        [15, 8, 27],
                        [15, 8, 28],
                        [15, 8, 29],
                        [15, 8, 30],
                        [15, 8, 31],
                        [15, 9, 1],
                        [15, 9, 2],
                        [15, 9, 3],
                        [15, 9, 4],
                        [15, 9, 5],
                        [15, 9, 6],
                        [15, 9, 7],
                        [15, 9, 8],
                        [15, 9, 9],
                        [15, 9, 10],
                        [15, 9, 11],
                        [15, 9, 12],
                        [15, 9, 13],
                        [15, 9, 14],
                        [15, 9, 15],
                        [15, 9, 16],
                        [15, 9, 17],
                        [15, 9, 18],
                        [15, 9, 19],
                        [15, 9, 20],
                        [15, 9, 21],
                        [15, 9, 22],
                        [15, 9, 23],
                        [15, 9, 24],
                        [15, 9, 25],
                        [15, 9, 26],
                        [15, 9, 27],
                        [15, 9, 28],
                        [15, 9, 29],
                        [15, 9, 30],
                        [15, 9, 31],
                        [15, 10, 1],
                        [15, 10, 2],
                        [15, 10, 3],
                        [15, 10, 4],
                        [15, 10, 5],
                        [15, 10, 6],
                        [15, 10, 7],
                        [15, 10, 8],
                        [15, 10, 9],
                        [15, 10, 10],
                        [15, 10, 11],
                        [15, 10, 12],
                        [15, 10, 13],
                        [15, 10, 14],
                        [15, 10, 15],
                        [15, 10, 16],
                        [15, 10, 17],
                        [15, 10, 18],
                        [15, 10, 19],
                        [15, 10, 20],
                        [15, 10, 21],
                        [15, 10, 22],
                        [15, 10, 23],
                        [15, 10, 24],
                        [15, 10, 25],
                        [15, 10, 26],
                        [15, 10, 27],
                        [15, 10, 28],
                        [15, 10, 29],
                        [15, 10, 30],
                        [15, 10, 31],
                        [15, 11, 1],
                        [15, 11, 2],
                        [15, 11, 3],
                        [15, 11, 4],
                        [15, 11, 5],
                        [15, 11, 6],
                        [15, 11, 7],
                        [15, 11, 8],
                        [15, 11, 9],
                        [15, 11, 10],
                        [15, 11, 11],
                        [15, 11, 12],
                        [15, 11, 13],
                        [15, 11, 14],
                        [15, 11, 15],
                        [15, 11, 16],
                        [15, 11, 17],
                        [15, 11, 18],
                        [15, 11, 19],
                        [15, 11, 20],
                        [15, 11, 21],
                        [15, 11, 22],
                        [15, 11, 23],
                        [15, 11, 24],
                        [15, 11, 25],
                        [15, 11, 26],
                        [15, 11, 27],
                        [15, 11, 28],
                        [15, 11, 29],
                        [15, 11, 30],
                        [15, 11, 31],
                        [15, 12, 1],
                        [15, 12, 2],
                        [15, 12, 3],
                        [15, 12, 4],
                        [15, 12, 5],
                        [15, 12, 6],
                        [15, 12, 7],
                        [15, 12, 8],
                        [15, 12, 9],
                        [15, 12, 10],
                        [15, 12, 11],
                        [15, 12, 12],
                        [15, 12, 13],
                        [15, 12, 14],
                        [15, 12, 15],
                        [15, 12, 16],
                        [15, 12, 17],
                        [15, 12, 18],
                        [15, 12, 19],
                        [15, 12, 20],
                        [15, 12, 21],
                        [15, 12, 22],
                        [15, 12, 23],
                        [15, 12, 24],
                        [15, 12, 25],
                        [15, 12, 26],
                        [15, 12, 27],
                        [15, 12, 28],
                        [15, 12, 29],
                        [15, 12, 30],
                        [15, 12, 31],
                        [15, 13, 1],
                        [15, 13, 2],
                        [15, 13, 3],
                        [15, 13, 4],
                        [15, 13, 5],
                        [15, 13, 6],
                        [15, 13, 7],
                        [15, 13, 8],
                        [15, 13, 9],
                        [15, 13, 10],
                        [15, 13, 11],
                        [15, 13, 12],
                        [15, 13, 13],
                        [15, 13, 14],
                        [15, 13, 15],
                        [15, 13, 16],
                        [15, 13, 17],
                        [15, 13, 18],
                        [15, 13, 19],
                        [15, 13, 20],
                        [15, 13, 21],
                        [15, 13, 22],
                        [15, 13, 23],
                        [15, 13, 24],
                        [15, 13, 25],
                        [15, 13, 26],
                        [15, 13, 27],
                        [15, 13, 28],
                        [15, 13, 29],
                        [15, 13, 30],
                        [15, 13, 31],
                        [15, 14, 1],
                        [15, 14, 2],
                        [15, 14, 3],
                        [15, 14, 4],
                        [15, 14, 5],
                        [15, 14, 6],
                        [15, 14, 7],
                        [15, 14, 8],
                        [15, 14, 9],
                        [15, 14, 10],
                        [15, 14, 11],
                        [15, 14, 12],
                        [15, 14, 13],
                        [15, 14, 14],
                        [15, 14, 15],
                        [15, 14, 16],
                        [15, 14, 17],
                        [15, 14, 18],
                        [15, 14, 19],
                        [15, 14, 20],
                        [15, 14, 21],
                        [15, 14, 22],
                        [15, 14, 23],
                        [15, 14, 24],
                        [15, 14, 25],
                        [15, 14, 26],
                        [15, 14, 27],
                        [15, 14, 28],
                        [15, 14, 29],
                        [15, 14, 30],
                        [15, 14, 31],
                        [15, 15, 1],
                        [15, 15, 2],
                        [15, 15, 3],
                        [15, 15, 4],
                        [15, 15, 5],
                        [15, 15, 6],
                        [15, 15, 7],
                        [15, 15, 8],
                        [15, 15, 9],
                        [15, 15, 10],
                        [15, 15, 11],
                        [15, 15, 12],
                        [15, 15, 13],
                        [15, 15, 14],
                        [15, 15, 15],
                        [15, 15, 16],
                        [15, 15, 17],
                        [15, 15, 18],
                        [15, 15, 19],
                        [15, 15, 20],
                        [15, 15, 21],
                        [15, 15, 22],
                        [15, 15, 23],
                        [15, 15, 24],
                        [15, 15, 25],
                        [15, 15, 26],
                        [15, 15, 27],
                        [15, 15, 28],
                        [15, 15, 29],
                        [15, 15, 30],
                        [15, 15, 31],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 0, 3],
                        [16, 0, 4],
                        [16, 0, 5],
                        [16, 0, 6],
                        [16, 0, 7],
                        [16, 0, 8],
                        [16, 0, 9],
                        [16, 0, 10],
                        [16, 0, 11],
                        [16, 0, 12],
                        [16, 0, 13],
                        [16, 0, 14],
                        [16, 0, 15],
                        [16, 0, 16],
                        [16, 0, 17],
                        [16, 0, 18],
                        [16, 0, 19],
                        [16, 0, 20],
                        [16, 0, 21],
                        [16, 0, 22],
                        [16, 0, 23],
                        [16, 0, 24],
                        [16, 0, 25],
                        [16, 0, 26],
                        [16, 0, 27],
                        [16, 0, 28],
                        [16, 0, 29],
                        [16, 0, 30],
                        [16, 0, 31],
                        [16, 0, 32],
                        [16, 0, 33],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 1, 3],
                        [16, 1, 4],
                        [16, 1, 5],
                        [16, 1, 6],
                        [16, 1, 7],
                        [16, 1, 8],
                        [16, 1, 9],
                        [16, 1, 10],
                        [16, 1, 11],
                        [16, 1, 12],
                        [16, 1, 13],
                        [16, 1, 14],
                        [16, 1, 15],
                        [16, 1, 16],
                        [16, 1, 17],
                        [16, 1, 18],
                        [16, 1, 19],
                        [16, 1, 20],
                        [16, 1, 21],
                        [16, 1, 22],
                        [16, 1, 23],
                        [16, 1, 24],
                        [16, 1, 25],
                        [16, 1, 26],
                        [16, 1, 27],
                        [16, 1, 28],
                        [16, 1, 29],
                        [16, 1, 30],
                        [16, 1, 31],
                        [16, 1, 32],
                        [16, 1, 33],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 2, 3],
                        [16, 2, 4],
                        [16, 2, 5],
                        [16, 2, 6],
                        [16, 2, 7],
                        [16, 2, 8],
                        [16, 2, 9],
                        [16, 2, 10],
                        [16, 2, 11],
                        [16, 2, 12],
                        [16, 2, 13],
                        [16, 2, 14],
                        [16, 2, 15],
                        [16, 2, 16],
                        [16, 2, 17],
                        [16, 2, 18],
                        [16, 2, 19],
                        [16, 2, 20],
                        [16, 2, 21],
                        [16, 2, 22],
                        [16, 2, 23],
                        [16, 2, 24],
                        [16, 2, 25],
                        [16, 2, 26],
                        [16, 2, 27],
                        [16, 2, 28],
                        [16, 2, 29],
                        [16, 2, 30],
                        [16, 2, 31],
                        [16, 2, 32],
                        [16, 2, 33],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 3, 3],
                        [16, 3, 4],
                        [16, 3, 5],
                        [16, 3, 6],
                        [16, 3, 7],
                        [16, 3, 8],
                        [16, 3, 9],
                        [16, 3, 10],
                        [16, 3, 11],
                        [16, 3, 12],
                        [16, 3, 13],
                        [16, 3, 14],
                        [16, 3, 15],
                        [16, 3, 16],
                        [16, 3, 17],
                        [16, 3, 18],
                        [16, 3, 19],
                        [16, 3, 20],
                        [16, 3, 21],
                        [16, 3, 22],
                        [16, 3, 23],
                        [16, 3, 24],
                        [16, 3, 25],
                        [16, 3, 26],
                        [16, 3, 27],
                        [16, 3, 28],
                        [16, 3, 29],
                        [16, 3, 30],
                        [16, 3, 31],
                        [16, 3, 32],
                        [16, 3, 33],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 4, 3],
                        [16, 4, 4],
                        [16, 4, 5],
                        [16, 4, 6],
                        [16, 4, 7],
                        [16, 4, 8],
                        [16, 4, 9],
                        [16, 4, 10],
                        [16, 4, 11],
                        [16, 4, 12],
                        [16, 4, 13],
                        [16, 4, 14],
                        [16, 4, 15],
                        [16, 4, 16],
                        [16, 4, 17],
                        [16, 4, 18],
                        [16, 4, 19],
                        [16, 4, 20],
                        [16, 4, 21],
                        [16, 4, 22],
                        [16, 4, 23],
                        [16, 4, 24],
                        [16, 4, 25],
                        [16, 4, 26],
                        [16, 4, 27],
                        [16, 4, 28],
                        [16, 4, 29],
                        [16, 4, 30],
                        [16, 4, 31],
                        [16, 4, 32],
                        [16, 4, 33],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 5, 3],
                        [16, 5, 4],
                        [16, 5, 5],
                        [16, 5, 6],
                        [16, 5, 7],
                        [16, 5, 8],
                        [16, 5, 9],
                        [16, 5, 10],
                        [16, 5, 11],
                        [16, 5, 12],
                        [16, 5, 13],
                        [16, 5, 14],
                        [16, 5, 15],
                        [16, 5, 16],
                        [16, 5, 17],
                        [16, 5, 18],
                        [16, 5, 19],
                        [16, 5, 20],
                        [16, 5, 21],
                        [16, 5, 22],
                        [16, 5, 23],
                        [16, 5, 24],
                        [16, 5, 25],
                        [16, 5, 26],
                        [16, 5, 27],
                        [16, 5, 28],
                        [16, 5, 29],
                        [16, 5, 30],
                        [16, 5, 31],
                        [16, 5, 32],
                        [16, 5, 33],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 6, 3],
                        [16, 6, 4],
                        [16, 6, 5],
                        [16, 6, 6],
                        [16, 6, 7],
                        [16, 6, 8],
                        [16, 6, 9],
                        [16, 6, 10],
                        [16, 6, 11],
                        [16, 6, 12],
                        [16, 6, 13],
                        [16, 6, 14],
                        [16, 6, 15],
                        [16, 6, 16],
                        [16, 6, 17],
                        [16, 6, 18],
                        [16, 6, 19],
                        [16, 6, 20],
                        [16, 6, 21],
                        [16, 6, 22],
                        [16, 6, 23],
                        [16, 6, 24],
                        [16, 6, 25],
                        [16, 6, 26],
                        [16, 6, 27],
                        [16, 6, 28],
                        [16, 6, 29],
                        [16, 6, 30],
                        [16, 6, 31],
                        [16, 6, 32],
                        [16, 6, 33],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 7, 3],
                        [16, 7, 4],
                        [16, 7, 5],
                        [16, 7, 6],
                        [16, 7, 7],
                        [16, 7, 8],
                        [16, 7, 9],
                        [16, 7, 10],
                        [16, 7, 11],
                        [16, 7, 12],
                        [16, 7, 13],
                        [16, 7, 14],
                        [16, 7, 15],
                        [16, 7, 16],
                        [16, 7, 17],
                        [16, 7, 18],
                        [16, 7, 19],
                        [16, 7, 20],
                        [16, 7, 21],
                        [16, 7, 22],
                        [16, 7, 23],
                        [16, 7, 24],
                        [16, 7, 25],
                        [16, 7, 26],
                        [16, 7, 27],
                        [16, 7, 28],
                        [16, 7, 29],
                        [16, 7, 30],
                        [16, 7, 31],
                        [16, 7, 32],
                        [16, 7, 33],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 8, 3],
                        [16, 8, 4],
                        [16, 8, 5],
                        [16, 8, 6],
                        [16, 8, 7],
                        [16, 8, 8],
                        [16, 8, 9],
                        [16, 8, 10],
                        [16, 8, 11],
                        [16, 8, 12],
                        [16, 8, 13],
                        [16, 8, 14],
                        [16, 8, 15],
                        [16, 8, 16],
                        [16, 8, 17],
                        [16, 8, 18],
                        [16, 8, 19],
                        [16, 8, 20],
                        [16, 8, 21],
                        [16, 8, 22],
                        [16, 8, 23],
                        [16, 8, 24],
                        [16, 8, 25],
                        [16, 8, 26],
                        [16, 8, 27],
                        [16, 8, 28],
                        [16, 8, 29],
                        [16, 8, 30],
                        [16, 8, 31],
                        [16, 8, 32],
                        [16, 8, 33],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 9, 3],
                        [16, 9, 4],
                        [16, 9, 5],
                        [16, 9, 6],
                        [16, 9, 7],
                        [16, 9, 8],
                        [16, 9, 9],
                        [16, 9, 10],
                        [16, 9, 11],
                        [16, 9, 12],
                        [16, 9, 13],
                        [16, 9, 14],
                        [16, 9, 15],
                        [16, 9, 16],
                        [16, 9, 17],
                        [16, 9, 18],
                        [16, 9, 19],
                        [16, 9, 20],
                        [16, 9, 21],
                        [16, 9, 22],
                        [16, 9, 23],
                        [16, 9, 24],
                        [16, 9, 25],
                        [16, 9, 26],
                        [16, 9, 27],
                        [16, 9, 28],
                        [16, 9, 29],
                        [16, 9, 30],
                        [16, 9, 31],
                        [16, 9, 32],
                        [16, 9, 33],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 10, 3],
                        [16, 10, 4],
                        [16, 10, 5],
                        [16, 10, 6],
                        [16, 10, 7],
                        [16, 10, 8],
                        [16, 10, 9],
                        [16, 10, 10],
                        [16, 10, 11],
                        [16, 10, 12],
                        [16, 10, 13],
                        [16, 10, 14],
                        [16, 10, 15],
                        [16, 10, 16],
                        [16, 10, 17],
                        [16, 10, 18],
                        [16, 10, 19],
                        [16, 10, 20],
                        [16, 10, 21],
                        [16, 10, 22],
                        [16, 10, 23],
                        [16, 10, 24],
                        [16, 10, 25],
                        [16, 10, 26],
                        [16, 10, 27],
                        [16, 10, 28],
                        [16, 10, 29],
                        [16, 10, 30],
                        [16, 10, 31],
                        [16, 10, 32],
                        [16, 10, 33],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 11, 3],
                        [16, 11, 4],
                        [16, 11, 5],
                        [16, 11, 6],
                        [16, 11, 7],
                        [16, 11, 8],
                        [16, 11, 9],
                        [16, 11, 10],
                        [16, 11, 11],
                        [16, 11, 12],
                        [16, 11, 13],
                        [16, 11, 14],
                        [16, 11, 15],
                        [16, 11, 16],
                        [16, 11, 17],
                        [16, 11, 18],
                        [16, 11, 19],
                        [16, 11, 20],
                        [16, 11, 21],
                        [16, 11, 22],
                        [16, 11, 23],
                        [16, 11, 24],
                        [16, 11, 25],
                        [16, 11, 26],
                        [16, 11, 27],
                        [16, 11, 28],
                        [16, 11, 29],
                        [16, 11, 30],
                        [16, 11, 31],
                        [16, 11, 32],
                        [16, 11, 33],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 12, 3],
                        [16, 12, 4],
                        [16, 12, 5],
                        [16, 12, 6],
                        [16, 12, 7],
                        [16, 12, 8],
                        [16, 12, 9],
                        [16, 12, 10],
                        [16, 12, 11],
                        [16, 12, 12],
                        [16, 12, 13],
                        [16, 12, 14],
                        [16, 12, 15],
                        [16, 12, 16],
                        [16, 12, 17],
                        [16, 12, 18],
                        [16, 12, 19],
                        [16, 12, 20],
                        [16, 12, 21],
                        [16, 12, 22],
                        [16, 12, 23],
                        [16, 12, 24],
                        [16, 12, 25],
                        [16, 12, 26],
                        [16, 12, 27],
                        [16, 12, 28],
                        [16, 12, 29],
                        [16, 12, 30],
                        [16, 12, 31],
                        [16, 12, 32],
                        [16, 12, 33],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 13, 3],
                        [16, 13, 4],
                        [16, 13, 5],
                        [16, 13, 6],
                        [16, 13, 7],
                        [16, 13, 8],
                        [16, 13, 9],
                        [16, 13, 10],
                        [16, 13, 11],
                        [16, 13, 12],
                        [16, 13, 13],
                        [16, 13, 14],
                        [16, 13, 15],
                        [16, 13, 16],
                        [16, 13, 17],
                        [16, 13, 18],
                        [16, 13, 19],
                        [16, 13, 20],
                        [16, 13, 21],
                        [16, 13, 22],
                        [16, 13, 23],
                        [16, 13, 24],
                        [16, 13, 25],
                        [16, 13, 26],
                        [16, 13, 27],
                        [16, 13, 28],
                        [16, 13, 29],
                        [16, 13, 30],
                        [16, 13, 31],
                        [16, 13, 32],
                        [16, 13, 33],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 14, 3],
                        [16, 14, 4],
                        [16, 14, 5],
                        [16, 14, 6],
                        [16, 14, 7],
                        [16, 14, 8],
                        [16, 14, 9],
                        [16, 14, 10],
                        [16, 14, 11],
                        [16, 14, 12],
                        [16, 14, 13],
                        [16, 14, 14],
                        [16, 14, 15],
                        [16, 14, 16],
                        [16, 14, 17],
                        [16, 14, 18],
                        [16, 14, 19],
                        [16, 14, 20],
                        [16, 14, 21],
                        [16, 14, 22],
                        [16, 14, 23],
                        [16, 14, 24],
                        [16, 14, 25],
                        [16, 14, 26],
                        [16, 14, 27],
                        [16, 14, 28],
                        [16, 14, 29],
                        [16, 14, 30],
                        [16, 14, 31],
                        [16, 14, 32],
                        [16, 14, 33],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 15, 3],
                        [16, 15, 4],
                        [16, 15, 5],
                        [16, 15, 6],
                        [16, 15, 7],
                        [16, 15, 8],
                        [16, 15, 9],
                        [16, 15, 10],
                        [16, 15, 11],
                        [16, 15, 12],
                        [16, 15, 13],
                        [16, 15, 14],
                        [16, 15, 15],
                        [16, 15, 16],
                        [16, 15, 17],
                        [16, 15, 18],
                        [16, 15, 19],
                        [16, 15, 20],
                        [16, 15, 21],
                        [16, 15, 22],
                        [16, 15, 23],
                        [16, 15, 24],
                        [16, 15, 25],
                        [16, 15, 26],
                        [16, 15, 27],
                        [16, 15, 28],
                        [16, 15, 29],
                        [16, 15, 30],
                        [16, 15, 31],
                        [16, 15, 32],
                        [16, 15, 33],
                        [16, 16, 1],
                        [16, 16, 2],
                        [16, 16, 3],
                        [16, 16, 4],
                        [16, 16, 5],
                        [16, 16, 6],
                        [16, 16, 7],
                        [16, 16, 8],
                        [16, 16, 9],
                        [16, 16, 10],
                        [16, 16, 11],
                        [16, 16, 12],
                        [16, 16, 13],
                        [16, 16, 14],
                        [16, 16, 15],
                        [16, 16, 16],
                        [16, 16, 17],
                        [16, 16, 18],
                        [16, 16, 19],
                        [16, 16, 20],
                        [16, 16, 21],
                        [16, 16, 22],
                        [16, 16, 23],
                        [16, 16, 24],
                        [16, 16, 25],
                        [16, 16, 26],
                        [16, 16, 27],
                        [16, 16, 28],
                        [16, 16, 29],
                        [16, 16, 30],
                        [16, 16, 31],
                        [16, 16, 32],
                        [16, 16, 33]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='float64')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.3e1 * np.sqrt((1 - t1)) * np.sqrt((1 + t1)) * np.sin(phi2)

        if Bindx == 2:
            tfunc[..., c] = 0.3e1 * np.cos(phi)

        if Bindx == 3:
            t2 = np.cos(phi)
            tfunc[..., c] = 0.3e1 * np.sqrt((1 - t2)) * np.sqrt((1 + t2)) * np.sin(phi2)

        if Bindx == 4:
            tfunc[..., c] = -0.3e1 / 0.2e1 * np.sqrt(0.2e1) * np.cos(phi1 - phi2) * (np.cos(phi) - 0.1e1)

        if Bindx == 5:
            t4 = np.cos(phi)
            t3 = np.sin(phi)
            tfunc[..., c] = -0.3e1 * t3 ** 2 * np.sin(phi1) * ((1 - t4) ** (-0.1e1 / 0.2e1)) * ((1 + t4) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            tfunc[..., c] = 0.3e1 / 0.2e1 * np.sqrt(0.2e1) * np.cos(phi1 + phi2) * (0.1e1 + np.cos(phi))

        if Bindx == 7:
            t5 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t5 ** 2 - 1) * np.cos((2 * phi2))

        if Bindx == 8:
            t7 = np.cos(phi)
            t6 = np.sin(phi)
            tfunc[..., c] = 0.5e1 * np.sqrt(0.3e1) * t7 * t6 ** 2 * np.sin(phi2) * ((1 - t7) ** (-0.1e1 / 0.2e1)) * ((1 + t7) ** (-0.1e1 / 0.2e1))

        if Bindx == 9:
            t8 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t8 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 10:
            t10 = np.cos(phi)
            t9 = np.sin(phi)
            tfunc[..., c] = 0.5e1 * np.sqrt(0.3e1) * t10 * t9 ** 2 * np.sin(phi2) * ((1 - t10) ** (-0.1e1 / 0.2e1)) * ((1 + t10) ** (-0.1e1 / 0.2e1))

        if Bindx == 11:
            t11 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t11 ** 2 - 1) * np.cos((2 * phi2))

        if Bindx == 12:
            t12 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * ((1 - t12) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t12)) * np.sin((phi1 - 2 * phi2))

        if Bindx == 13:
            t13 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * (2 * t13 ** 2 - t13 - 1) * np.cos(phi1 - phi2)

        if Bindx == 14:
            t15 = np.cos(phi)
            t14 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t15 * t14 ** 2 * np.sin(phi1) * ((1 - t15) ** (-0.1e1 / 0.2e1)) * ((1 + t15) ** (-0.1e1 / 0.2e1))

        if Bindx == 15:
            t16 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.2e1 * np.sqrt(0.2e1) * (2 * t16 ** 2 + t16 - 1) * np.cos(phi1 + phi2)

        if Bindx == 16:
            t17 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.2e1 * np.sqrt(0.2e1) * np.sqrt((1 - t17)) * ((1 + t17) ** (0.3e1 / 0.2e1)) * np.sin((phi1 + 2 * phi2))

        if Bindx == 17:
            t18 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.4e1 * np.sqrt(0.2e1) * np.cos((2 * phi1 - 2 * phi2)) * (1 + (-2 + t18) * t18)

        if Bindx == 18:
            t19 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * ((1 - t19) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t19)) * np.sin((2 * phi1 - phi2))

        if Bindx == 19:
            t20 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t20 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 20:
            t21 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * ((1 + t21) ** (0.3e1 / 0.2e1)) * np.sin((2 * phi1 + phi2)) * np.sqrt((1 - t21))

        if Bindx == 21:
            t22 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.4e1 * np.sqrt(0.2e1) * np.cos((2 * phi1 + 2 * phi2)) * (1 + (2 + t22) * t22)

        if Bindx == 22:
            t23 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t23) ** (0.3e1 / 0.2e1)) * ((1 + t23) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi2))

        if Bindx == 23:
            t24 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.2e1 * np.sqrt(0.15e2) * t24 * (t24 ** 2 - 1) * np.cos((2 * phi2))

        if Bindx == 24:
            t26 = np.cos(phi)
            t25 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t25 ** 2 * (5 * t26 ** 2 - 1) * np.sin(phi2) * ((1 + t26) ** (-0.1e1 / 0.2e1)) * ((1 - t26) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t27 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.2e1 * t27 * (5 * t27 ** 2 - 3)

        if Bindx == 26:
            t29 = np.cos(phi)
            t28 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t28 ** 2 * (5 * t29 ** 2 - 1) * np.sin(phi2) * ((1 + t29) ** (-0.1e1 / 0.2e1)) * ((1 - t29) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t30 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.2e1 * np.sqrt(0.15e2) * t30 * (t30 ** 2 - 1) * np.cos((2 * phi2))

        if Bindx == 28:
            t31 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t31) ** (0.3e1 / 0.2e1)) * ((1 + t31) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi2))

        if Bindx == 29:
            t32 = np.cos(phi)
            t33 = t32 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t32 * t33 - t32 - t33 + 1) * np.cos((phi1 - 3 * phi2))

        if Bindx == 30:
            t36 = np.cos(phi)
            t35 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t35 ** 2 * (-1 + (-2 + 3 * t36) * t36) * np.sin((phi1 - 2 * phi2)) * ((1 + t36) ** (-0.1e1 / 0.2e1)) * ((1 - t36) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t37 = np.cos(phi)
            t38 = t37 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * (-5 * t38 + 1 + (15 * t38 - 11) * t37) * np.cos(phi1 - phi2)

        if Bindx == 32:
            t41 = np.cos(phi)
            t40 = np.sin(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t40 ** 2 * (5 * t41 ** 2 - 1) * np.sin(phi1) * ((1 + t41) ** (-0.1e1 / 0.2e1)) * ((1 - t41) ** (-0.1e1 / 0.2e1))

        if Bindx == 33:
            t42 = np.cos(phi)
            t43 = t42 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * (5 * t43 - 1 + (15 * t43 - 11) * t42) * np.cos(phi1 + phi2)

        if Bindx == 34:
            t46 = np.cos(phi)
            t45 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t45 ** 2 * (-1 + (2 + 3 * t46) * t46) * np.sin((phi1 + 2 * phi2)) * ((1 + t46) ** (-0.1e1 / 0.2e1)) * ((1 - t46) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t47 = np.cos(phi)
            t48 = t47 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t47 * t48 - t47 + t48 - 1) * np.cos((phi1 + 3 * phi2))

        if Bindx == 36:
            t50 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.3e1) * ((1 - t50) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t50)) * np.sin((2 * phi1 - 3 * phi2))

        if Bindx == 37:
            t51 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * (-t51 + 2 + (3 * t51 - 4) * t51 ** 2) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 38:
            t55 = np.cos(phi)
            t54 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t54 ** 2 * (-1 + (-2 + 3 * t55) * t55) * np.sin((2 * phi1 - phi2)) * ((1 + t55) ** (-0.1e1 / 0.2e1)) * ((1 - t55) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t56 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.2e1 * np.sqrt(0.15e2) * t56 * (t56 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 40:
            t58 = np.cos(phi)
            t57 = np.sin(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t57 ** 2 * (-1 + (2 + 3 * t58) * t58) * np.sin((2 * phi1 + phi2)) * ((1 + t58) ** (-0.1e1 / 0.2e1)) * ((1 - t58) ** (-0.1e1 / 0.2e1))

        if Bindx == 41:
            t59 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * (-t59 - 2 + (3 * t59 + 4) * t59 ** 2) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 42:
            t62 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.3e1) * np.sqrt((1 - t62)) * ((1 + t62) ** (0.5e1 / 0.2e1)) * np.sin((2 * phi1 + 3 * phi2))

        if Bindx == 43:
            t63 = np.cos(phi)
            t64 = t63 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.cos((3 * phi1 - 3 * phi2)) * (-3 * t64 - 1 + (t64 + 3) * t63)

        if Bindx == 44:
            t66 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.3e1) * ((1 - t66) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t66)) * np.sin((3 * phi1 - 2 * phi2))

        if Bindx == 45:
            t67 = np.cos(phi)
            t68 = t67 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t67 * t68 - t67 - t68 + 1) * np.cos((3 * phi1 - phi2))

        if Bindx == 46:
            t70 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t70) ** (0.3e1 / 0.2e1)) * ((1 + t70) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi1))

        if Bindx == 47:
            t71 = np.cos(phi)
            t72 = t71 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t71 * t72 - t71 + t72 - 1) * np.cos((3 * phi1 + phi2))

        if Bindx == 48:
            t74 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.3e1) * ((1 + t74) ** (0.5e1 / 0.2e1)) * np.sqrt((1 - t74)) * np.sin((3 * phi1 + 2 * phi2))

        if Bindx == 49:
            t75 = np.cos(phi)
            t76 = t75 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.cos((3 * phi1 + 3 * phi2)) * (3 * t76 + 1 + (t76 + 3) * t75)

        if Bindx == 50:
            t78 = np.cos(phi)
            t79 = t78 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi2)) * (1 + (-2 + t79) * t79)

        if Bindx == 51:
            t84 = np.sin(phi)
            t82 = t84 ** 2
            t81 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t81 * t82 ** 2 * np.sin((3 * phi2)) * ((1 - t81) ** (-0.1e1 / 0.2e1)) * ((1 + t81) ** (-0.1e1 / 0.2e1))

        if Bindx == 52:
            t85 = np.cos(phi)
            t86 = t85 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t86) * t86) * np.cos((2 * phi2))

        if Bindx == 53:
            t89 = np.cos(phi)
            t88 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t89 * t88 ** 2 * (7 * t89 ** 2 - 3) * np.sin(phi2) * ((1 + t89) ** (-0.1e1 / 0.2e1)) * ((1 - t89) ** (-0.1e1 / 0.2e1))

        if Bindx == 54:
            t90 = np.cos(phi)
            t91 = t90 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t91) * t91

        if Bindx == 55:
            t94 = np.cos(phi)
            t93 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t94 * t93 ** 2 * (7 * t94 ** 2 - 3) * np.sin(phi2) * ((1 + t94) ** (-0.1e1 / 0.2e1)) * ((1 - t94) ** (-0.1e1 / 0.2e1))

        if Bindx == 56:
            t95 = np.cos(phi)
            t96 = t95 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t96) * t96) * np.cos((2 * phi2))

        if Bindx == 57:
            t101 = np.sin(phi)
            t99 = t101 ** 2
            t98 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t98 * t99 ** 2 * np.sin((3 * phi2)) * ((1 - t98) ** (-0.1e1 / 0.2e1)) * ((1 + t98) ** (-0.1e1 / 0.2e1))

        if Bindx == 58:
            t102 = np.cos(phi)
            t103 = t102 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi2)) * (1 + (-2 + t103) * t103)

        if Bindx == 59:
            t105 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t105) ** (0.5e1 / 0.2e1)) * ((1 + t105) ** (0.3e1 / 0.2e1)) * np.sin((phi1 - 4 * phi2))

        if Bindx == 60:
            t106 = np.cos(phi)
            t107 = t106 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (3 * t106 + 1 + (-3 * t106 - 5 + 4 * t107) * t107) * np.cos((phi1 - 3 * phi2))

        if Bindx == 61:
            t111 = np.cos(phi)
            t112 = t111 ** 2
            t110 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * t110 ** 2 * (-7 * t112 + 1 + (14 * t112 - 8) * t111) * np.sin((phi1 - 2 * phi2)) * ((1 + t111) ** (-0.1e1 / 0.2e1)) * ((1 - t111) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t114 = np.cos(phi)
            t115 = t114 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (3 * t114 + 3 + (-7 * t114 - 27 + 28 * t115) * t115) * np.cos(phi1 - phi2)

        if Bindx == 63:
            t119 = np.cos(phi)
            t118 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t119 * t118 ** 2 * (7 * t119 ** 2 - 3) * np.sin(phi1) * ((1 + t119) ** (-0.1e1 / 0.2e1)) * ((1 - t119) ** (-0.1e1 / 0.2e1))

        if Bindx == 64:
            t120 = np.cos(phi)
            t121 = t120 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (-3 * t120 + 3 + (7 * t120 - 27 + 28 * t121) * t121) * np.cos(phi1 + phi2)

        if Bindx == 65:
            t125 = np.cos(phi)
            t126 = t125 ** 2
            t124 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * t124 ** 2 * (7 * t126 - 1 + (14 * t126 - 8) * t125) * np.sin((phi1 + 2 * phi2)) * ((1 + t125) ** (-0.1e1 / 0.2e1)) * ((1 - t125) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t128 = np.cos(phi)
            t129 = t128 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-3 * t128 + 1 + (3 * t128 - 5 + 4 * t129) * t129) * np.cos((phi1 + 3 * phi2))

        if Bindx == 67:
            t132 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t132) ** (0.3e1 / 0.2e1)) * ((1 + t132) ** (0.5e1 / 0.2e1)) * np.sin((phi1 + 4 * phi2))

        if Bindx == 68:
            t133 = np.cos(phi)
            t134 = t133 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t134 ** 2 - 1 + (-2 * t134 + 2) * t133) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 69:
            t138 = np.cos(phi)
            t137 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t137 ** 2 * (1 + (2 * t138 - 3) * t138 ** 2) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t138) ** (-0.1e1 / 0.2e1)) * ((1 - t138) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t141 = np.cos(phi)
            t142 = t141 ** 2
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * (5 * t141 + 1 + (-7 * t141 - 6 + 7 * t142) * t142) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 71:
            t146 = np.cos(phi)
            t147 = t146 ** 2
            t145 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * t145 ** 2 * (-7 * t147 + 1 + (14 * t147 - 8) * t146) * np.sin((2 * phi1 - phi2)) * ((1 + t146) ** (-0.1e1 / 0.2e1)) * ((1 - t146) ** (-0.1e1 / 0.2e1))

        if Bindx == 72:
            t149 = np.cos(phi)
            t150 = t149 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t150) * t150) * np.cos((2 * phi1))

        if Bindx == 73:
            t153 = np.cos(phi)
            t154 = t153 ** 2
            t152 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * t152 ** 2 * (7 * t154 - 1 + (14 * t154 - 8) * t153) * np.sin((2 * phi1 + phi2)) * ((1 + t153) ** (-0.1e1 / 0.2e1)) * ((1 - t153) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t156 = np.cos(phi)
            t157 = t156 ** 2
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * (-5 * t156 + 1 + (7 * t156 - 6 + 7 * t157) * t157) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 75:
            t161 = np.cos(phi)
            t160 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t160 ** 2 * (-1 + (2 * t161 + 3) * t161 ** 2) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t161) ** (-0.1e1 / 0.2e1)) * ((1 - t161) ** (-0.1e1 / 0.2e1))

        if Bindx == 76:
            t164 = np.cos(phi)
            t165 = t164 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t165 ** 2 - 1 + (2 * t165 - 2) * t164) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 77:
            t168 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * ((1 - t168) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t168)) * np.sin((3 * phi1 - 4 * phi2))

        if Bindx == 78:
            t169 = np.cos(phi)
            t170 = t169 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (5 * t169 - 3 + (-9 * t169 + 3 + 4 * t170) * t170) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 79:
            t174 = np.cos(phi)
            t173 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t173 ** 2 * (1 + (2 * t174 - 3) * t174 ** 2) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t174) ** (-0.1e1 / 0.2e1)) * ((1 - t174) ** (-0.1e1 / 0.2e1))

        if Bindx == 80:
            t177 = np.cos(phi)
            t178 = t177 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (3 * t177 + 1 + (-3 * t177 - 5 + 4 * t178) * t178) * np.cos((3 * phi1 - phi2))

        if Bindx == 81:
            t184 = np.sin(phi)
            t182 = t184 ** 2
            t181 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t181 * t182 ** 2 * np.sin((3 * phi1)) * ((1 + t181) ** (-0.1e1 / 0.2e1)) * ((1 - t181) ** (-0.1e1 / 0.2e1))

        if Bindx == 82:
            t185 = np.cos(phi)
            t186 = t185 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-3 * t185 + 1 + (3 * t185 - 5 + 4 * t186) * t186) * np.cos((3 * phi1 + phi2))

        if Bindx == 83:
            t190 = np.cos(phi)
            t189 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t189 ** 2 * (-1 + (2 * t190 + 3) * t190 ** 2) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t190) ** (-0.1e1 / 0.2e1)) * ((1 - t190) ** (-0.1e1 / 0.2e1))

        if Bindx == 84:
            t193 = np.cos(phi)
            t194 = t193 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (-5 * t193 - 3 + (9 * t193 + 3 + 4 * t194) * t194) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 85:
            t197 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt((1 - t197)) * ((1 + t197) ** (0.7e1 / 0.2e1)) * np.sin((3 * phi1 + 4 * phi2))

        if Bindx == 86:
            t198 = np.cos(phi)
            t202 = -4 * t198
            t199 = t198 ** 2
            tfunc[..., c] = 0.9e1 / 0.16e2 * np.sqrt(0.2e1) * np.cos((4 * phi1 - 4 * phi2)) * (t202 + 1 + (t202 + 6 + t199) * t199)

        if Bindx == 87:
            t203 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * ((1 - t203) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t203)) * np.sin((4 * phi1 - 3 * phi2))

        if Bindx == 88:
            t204 = np.cos(phi)
            t205 = t204 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t205 ** 2 - 1 + (-2 * t205 + 2) * t204) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 89:
            t208 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t208) ** (0.5e1 / 0.2e1)) * ((1 + t208) ** (0.3e1 / 0.2e1)) * np.sin((4 * phi1 - phi2))

        if Bindx == 90:
            t209 = np.cos(phi)
            t210 = t209 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t210) * t210)

        if Bindx == 91:
            t212 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t212) ** (0.3e1 / 0.2e1)) * ((1 + t212) ** (0.5e1 / 0.2e1)) * np.sin((4 * phi1 + phi2))

        if Bindx == 92:
            t213 = np.cos(phi)
            t214 = t213 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t214 ** 2 - 1 + (2 * t214 - 2) * t213) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 93:
            t217 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * ((1 + t217) ** (0.7e1 / 0.2e1)) * np.sin((4 * phi1 + 3 * phi2)) * np.sqrt((1 - t217))

        if Bindx == 94:
            t218 = np.cos(phi)
            t222 = 4 * t218
            t219 = t218 ** 2
            tfunc[..., c] = 0.9e1 / 0.16e2 * np.sqrt(0.2e1) * np.cos((4 * phi1 + 4 * phi2)) * (t222 + 1 + (t222 + 6 + t219) * t219)

        if Bindx == 95:
            t223 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t223) ** (0.5e1 / 0.2e1)) * ((1 + t223) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi2))

        if Bindx == 96:
            t224 = np.cos(phi)
            t225 = t224 ** 2
            tfunc[..., c] = 0.33e2 / 0.8e1 * np.sqrt(0.35e2) * t224 * np.cos((4 * phi2)) * (1 + (-2 + t225) * t225)

        if Bindx == 97:
            t230 = np.sin(phi)
            t228 = t230 ** 2
            t227 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t228 ** 2 * (9 * t227 ** 2 - 1) * np.sin((3 * phi2)) * ((1 + t227) ** (-0.1e1 / 0.2e1)) * ((1 - t227) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t231 = np.cos(phi)
            t232 = t231 ** 2
            tfunc[..., c] = -0.11e2 / 0.4e1 * t231 * np.sqrt(0.105e3) * (1 + (-4 + 3 * t232) * t232) * np.cos((2 * phi2))

        if Bindx == 99:
            t235 = np.cos(phi)
            t236 = t235 ** 2
            t234 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.15e2) * t234 ** 2 * (1 + (-14 + 21 * t236) * t236) * np.sin(phi2) * ((1 + t235) ** (-0.1e1 / 0.2e1)) * ((1 - t235) ** (-0.1e1 / 0.2e1))

        if Bindx == 100:
            t238 = np.cos(phi)
            t239 = t238 ** 2
            tfunc[..., c] = 0.11e2 / 0.8e1 * t238 * (15 + (-70 + 63 * t239) * t239)

        if Bindx == 101:
            t242 = np.cos(phi)
            t243 = t242 ** 2
            t241 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.15e2) * t241 ** 2 * (1 + (-14 + 21 * t243) * t243) * np.sin(phi2) * ((1 + t242) ** (-0.1e1 / 0.2e1)) * ((1 - t242) ** (-0.1e1 / 0.2e1))

        if Bindx == 102:
            t245 = np.cos(phi)
            t246 = t245 ** 2
            tfunc[..., c] = -0.11e2 / 0.4e1 * t245 * np.sqrt(0.105e3) * (1 + (-4 + 3 * t246) * t246) * np.cos((2 * phi2))

        if Bindx == 103:
            t251 = np.sin(phi)
            t249 = t251 ** 2
            t248 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t249 ** 2 * (9 * t248 ** 2 - 1) * np.sin((3 * phi2)) * ((1 + t248) ** (-0.1e1 / 0.2e1)) * ((1 - t248) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t252 = np.cos(phi)
            t253 = t252 ** 2
            tfunc[..., c] = 0.33e2 / 0.8e1 * np.sqrt(0.35e2) * t252 * np.cos((4 * phi2)) * (1 + (-2 + t253) * t253)

        if Bindx == 105:
            t255 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t255) ** (0.5e1 / 0.2e1)) * ((1 + t255) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi2))

        if Bindx == 106:
            t256 = np.cos(phi)
            t257 = t256 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((phi1 - 5 * phi2)) * (t256 - 1) * (1 + (-2 + t257) * t257)

        if Bindx == 107:
            t265 = np.sin(phi)
            t263 = t265 ** 2
            t262 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t263 ** 2 * (-1 + (-4 + 5 * t262) * t262) * np.sin((phi1 - 4 * phi2)) * ((1 + t262) ** (-0.1e1 / 0.2e1)) * ((1 - t262) ** (-0.1e1 / 0.2e1))

        if Bindx == 108:
            t266 = np.cos(phi)
            t267 = t266 ** 2
            t269 = t267 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (10 * t267 - 9 * t269 - 1 + (-22 * t267 + 15 * t269 + 7) * t266) * np.cos((phi1 - 3 * phi2))

        if Bindx == 109:
            t272 = np.cos(phi)
            t273 = t272 ** 2
            t271 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t271 ** 2 * (2 * t272 + 1 + (-6 * t272 - 12 + 15 * t273) * t273) * np.sin((phi1 - 2 * phi2)) * ((1 + t272) ** (-0.1e1 / 0.2e1)) * ((1 - t272) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t276 = np.cos(phi)
            t277 = t276 ** 2
            t279 = t277 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (14 * t277 - 21 * t279 - 1 + (-126 * t277 + 105 * t279 + 29) * t276) * np.cos(phi1 - phi2)

        if Bindx == 111:
            t282 = np.cos(phi)
            t283 = t282 ** 2
            t281 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * t281 ** 2 * (1 + (-14 + 21 * t283) * t283) * np.sin(phi1) * ((1 + t282) ** (-0.1e1 / 0.2e1)) * ((1 - t282) ** (-0.1e1 / 0.2e1))

        if Bindx == 112:
            t285 = np.cos(phi)
            t286 = t285 ** 2
            t288 = t286 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (-14 * t286 + 21 * t288 + 1 + (-126 * t286 + 105 * t288 + 29) * t285) * np.cos(phi1 + phi2)

        if Bindx == 113:
            t291 = np.cos(phi)
            t292 = t291 ** 2
            t290 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t290 ** 2 * (-2 * t291 + 1 + (6 * t291 - 12 + 15 * t292) * t292) * np.sin((phi1 + 2 * phi2)) * ((1 + t291) ** (-0.1e1 / 0.2e1)) * ((1 - t291) ** (-0.1e1 / 0.2e1))

        if Bindx == 114:
            t295 = np.cos(phi)
            t296 = t295 ** 2
            t298 = t296 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (-10 * t296 + 9 * t298 + 1 + (-22 * t296 + 15 * t298 + 7) * t295) * np.cos((phi1 + 3 * phi2))

        if Bindx == 115:
            t303 = np.sin(phi)
            t301 = t303 ** 2
            t300 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t301 ** 2 * (-1 + (4 + 5 * t300) * t300) * np.sin((phi1 + 4 * phi2)) * ((1 + t300) ** (-0.1e1 / 0.2e1)) * ((1 - t300) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t304 = np.cos(phi)
            t305 = t304 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((phi1 + 5 * phi2)) * (t304 + 1) * (1 + (-2 + t305) * t305)

        if Bindx == 117:
            t311 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t311) ** (0.7e1 / 0.2e1)) * ((1 + t311) ** (0.3e1 / 0.2e1)) * np.sin((2 * phi1 - 5 * phi2))

        if Bindx == 118:
            t312 = np.cos(phi)
            t313 = t312 ** 2
            t315 = t313 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (10 * t313 - 8 * t315 - 2 + (-4 * t313 + 5 * t315 - 1) * t312) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 119:
            t318 = np.cos(phi)
            t319 = t318 ** 2
            t317 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t317 ** 2 * (10 * t318 + 1 + (-18 * t318 - 8 + 15 * t319) * t319) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t318) ** (-0.1e1 / 0.2e1)) * ((1 - t318) ** (-0.1e1 / 0.2e1))

        if Bindx == 120:
            t322 = np.cos(phi)
            t323 = t322 ** 2
            t325 = t323 ** 2
            tfunc[..., c] = 0.11e2 / 0.4e1 * np.sqrt(0.2e1) * (11 * t323 - 12 * t325 - 1 + (-18 * t323 + 15 * t325 + 5) * t322) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 121:
            t328 = np.cos(phi)
            t329 = t328 ** 2
            t327 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t327 ** 2 * (2 * t328 + 1 + (-6 * t328 - 12 + 15 * t329) * t329) * np.sin((2 * phi1 - phi2)) * ((1 + t328) ** (-0.1e1 / 0.2e1)) * ((1 - t328) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t332 = np.cos(phi)
            t333 = t332 ** 2
            tfunc[..., c] = -0.11e2 / 0.4e1 * t332 * np.sqrt(0.105e3) * (1 + (-4 + 3 * t333) * t333) * np.cos((2 * phi1))

        if Bindx == 123:
            t336 = np.cos(phi)
            t337 = t336 ** 2
            t335 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t335 ** 2 * (-2 * t336 + 1 + (6 * t336 - 12 + 15 * t337) * t337) * np.sin((2 * phi1 + phi2)) * ((1 + t336) ** (-0.1e1 / 0.2e1)) * ((1 - t336) ** (-0.1e1 / 0.2e1))

        if Bindx == 124:
            t340 = np.cos(phi)
            t341 = t340 ** 2
            t343 = t341 ** 2
            tfunc[..., c] = 0.11e2 / 0.4e1 * np.sqrt(0.2e1) * (-11 * t341 + 12 * t343 + 1 + (-18 * t341 + 15 * t343 + 5) * t340) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 125:
            t346 = np.cos(phi)
            t347 = t346 ** 2
            t345 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t345 ** 2 * (-10 * t346 + 1 + (18 * t346 - 8 + 15 * t347) * t347) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t346) ** (-0.1e1 / 0.2e1)) * ((1 - t346) ** (-0.1e1 / 0.2e1))

        if Bindx == 126:
            t350 = np.cos(phi)
            t351 = t350 ** 2
            t353 = t351 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-10 * t351 + 8 * t353 + 2 + (-4 * t351 + 5 * t353 - 1) * t350) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 127:
            t355 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t355) ** (0.3e1 / 0.2e1)) * ((1 + t355) ** (0.7e1 / 0.2e1)) * np.sin((2 * phi1 + 5 * phi2))

        if Bindx == 128:
            t356 = np.cos(phi)
            t357 = t356 ** 2
            t361 = 2 * t357
            t359 = t357 ** 2
            tfunc[..., c] = 0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-3 * t359 + t361 + 1 + (t359 + t361 - 3) * t356) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 129:
            t363 = np.cos(phi)
            t364 = t363 ** 2
            t362 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * t362 ** 2 * (4 * t363 - 3 + (-12 * t363 + 6 + 5 * t364) * t364) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t363) ** (-0.1e1 / 0.2e1)) * ((1 - t363) ** (-0.1e1 / 0.2e1))

        if Bindx == 130:
            t367 = np.cos(phi)
            t368 = t367 ** 2
            t370 = t368 ** 2
            tfunc[..., c] = -0.11e2 / 0.32e2 * np.sqrt(0.2e1) * (78 * t368 - 81 * t370 - 13 + (-14 * t368 + 45 * t370 - 15) * t367) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 131:
            t373 = np.cos(phi)
            t374 = t373 ** 2
            t372 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t372 ** 2 * (10 * t373 + 1 + (-18 * t373 - 8 + 15 * t374) * t374) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t373) ** (-0.1e1 / 0.2e1)) * ((1 - t373) ** (-0.1e1 / 0.2e1))

        if Bindx == 132:
            t377 = np.cos(phi)
            t378 = t377 ** 2
            t380 = t378 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (10 * t378 - 9 * t380 - 1 + (-22 * t378 + 15 * t380 + 7) * t377) * np.cos((3 * phi1 - phi2))

        if Bindx == 133:
            t385 = np.sin(phi)
            t383 = t385 ** 2
            t382 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t383 ** 2 * (9 * t382 ** 2 - 1) * np.sin((3 * phi1)) * ((1 + t382) ** (-0.1e1 / 0.2e1)) * ((1 - t382) ** (-0.1e1 / 0.2e1))

        if Bindx == 134:
            t386 = np.cos(phi)
            t387 = t386 ** 2
            t389 = t387 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (-10 * t387 + 9 * t389 + 1 + (-22 * t387 + 15 * t389 + 7) * t386) * np.cos((3 * phi1 + phi2))

        if Bindx == 135:
            t392 = np.cos(phi)
            t393 = t392 ** 2
            t391 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t391 ** 2 * (-10 * t392 + 1 + (18 * t392 - 8 + 15 * t393) * t393) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t392) ** (-0.1e1 / 0.2e1)) * ((1 - t392) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t396 = np.cos(phi)
            t397 = t396 ** 2
            t399 = t397 ** 2
            tfunc[..., c] = 0.11e2 / 0.32e2 * np.sqrt(0.2e1) * (-78 * t397 + 81 * t399 + 13 + (-14 * t397 + 45 * t399 - 15) * t396) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 137:
            t402 = np.cos(phi)
            t403 = t402 ** 2
            t401 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * t401 ** 2 * (-4 * t402 - 3 + (12 * t402 + 6 + 5 * t403) * t403) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t402) ** (-0.1e1 / 0.2e1)) * ((1 - t402) ** (-0.1e1 / 0.2e1))

        if Bindx == 138:
            t406 = np.cos(phi)
            t407 = t406 ** 2
            t409 = t407 ** 2
            tfunc[..., c] = -0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-2 * t407 + 3 * t409 - 1 + (2 * t407 + t409 - 3) * t406) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 139:
            t411 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.5e1) * ((1 - t411) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t411)) * np.sin((4 * phi1 - 5 * phi2))

        if Bindx == 140:
            t412 = np.cos(phi)
            t413 = t412 ** 2
            t415 = t413 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (4 * t413 - 16 * t415 + 4 + (14 * t413 + 5 * t415 - 11) * t412) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 141:
            t418 = np.cos(phi)
            t419 = t418 ** 2
            t417 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * t417 ** 2 * (4 * t418 - 3 + (-12 * t418 + 6 + 5 * t419) * t419) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t418) ** (-0.1e1 / 0.2e1)) * ((1 - t418) ** (-0.1e1 / 0.2e1))

        if Bindx == 142:
            t422 = np.cos(phi)
            t423 = t422 ** 2
            t425 = t423 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (10 * t423 - 8 * t425 - 2 + (-4 * t423 + 5 * t425 - 1) * t422) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 143:
            t430 = np.sin(phi)
            t428 = t430 ** 2
            t427 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t428 ** 2 * (-1 + (-4 + 5 * t427) * t427) * np.sin((4 * phi1 - phi2)) * ((1 + t427) ** (-0.1e1 / 0.2e1)) * ((1 - t427) ** (-0.1e1 / 0.2e1))

        if Bindx == 144:
            t431 = np.cos(phi)
            t432 = t431 ** 2
            tfunc[..., c] = 0.33e2 / 0.8e1 * np.sqrt(0.35e2) * t431 * np.cos((4 * phi1)) * (1 + (-2 + t432) * t432)

        if Bindx == 145:
            t437 = np.sin(phi)
            t435 = t437 ** 2
            t434 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t435 ** 2 * (-1 + (4 + 5 * t434) * t434) * np.sin((4 * phi1 + phi2)) * ((1 + t434) ** (-0.1e1 / 0.2e1)) * ((1 - t434) ** (-0.1e1 / 0.2e1))

        if Bindx == 146:
            t438 = np.cos(phi)
            t439 = t438 ** 2
            t441 = t439 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-10 * t439 + 8 * t441 + 2 + (-4 * t439 + 5 * t441 - 1) * t438) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 147:
            t444 = np.cos(phi)
            t445 = t444 ** 2
            t443 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16e2 * t443 ** 2 * (-4 * t444 - 3 + (12 * t444 + 6 + 5 * t445) * t445) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t444) ** (-0.1e1 / 0.2e1)) * ((1 - t444) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t448 = np.cos(phi)
            t449 = t448 ** 2
            t451 = t449 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (-4 * t449 + 16 * t451 - 4 + (14 * t449 + 5 * t451 - 11) * t448) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 149:
            t453 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.5e1) * np.sqrt((1 - t453)) * ((1 + t453) ** (0.9e1 / 0.2e1)) * np.sin((4 * phi1 + 5 * phi2))

        if Bindx == 150:
            t454 = np.cos(phi)
            t455 = t454 ** 2
            t457 = t455 ** 2
            tfunc[..., c] = -0.11e2 / 0.32e2 * np.sqrt(0.2e1) * np.cos((5 * phi1 - 5 * phi2)) * (-10 * t455 - 5 * t457 - 1 + (10 * t455 + t457 + 5) * t454)

        if Bindx == 151:
            t459 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.5e1) * ((1 - t459) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t459)) * np.sin((5 * phi1 - 4 * phi2))

        if Bindx == 152:
            t460 = np.cos(phi)
            t461 = t460 ** 2
            t465 = 2 * t461
            t463 = t461 ** 2
            tfunc[..., c] = 0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-3 * t463 + t465 + 1 + (t463 + t465 - 3) * t460) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 153:
            t466 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t466) ** (0.7e1 / 0.2e1)) * ((1 + t466) ** (0.3e1 / 0.2e1)) * np.sin((5 * phi1 - 2 * phi2))

        if Bindx == 154:
            t467 = np.cos(phi)
            t468 = t467 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((5 * phi1 - phi2)) * (t467 - 1) * (1 + (-2 + t468) * t468)

        if Bindx == 155:
            t473 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t473) ** (0.5e1 / 0.2e1)) * ((1 + t473) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi1))

        if Bindx == 156:
            t474 = np.cos(phi)
            t475 = t474 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((5 * phi1 + phi2)) * (t474 + 1) * (1 + (-2 + t475) * t475)

        if Bindx == 157:
            t481 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t481) ** (0.3e1 / 0.2e1)) * ((1 + t481) ** (0.7e1 / 0.2e1)) * np.sin((5 * phi1 + 2 * phi2))

        if Bindx == 158:
            t482 = np.cos(phi)
            t483 = t482 ** 2
            t485 = t483 ** 2
            tfunc[..., c] = -0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-2 * t483 + 3 * t485 - 1 + (2 * t483 + t485 - 3) * t482) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 159:
            t487 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.5e1) * ((1 + t487) ** (0.9e1 / 0.2e1)) * np.sin((5 * phi1 + 4 * phi2)) * np.sqrt((1 - t487))

        if Bindx == 160:
            t488 = np.cos(phi)
            t489 = t488 ** 2
            t493 = 10 * t489
            t491 = t489 ** 2
            tfunc[..., c] = 0.11e2 / 0.32e2 * np.sqrt(0.2e1) * np.cos((5 * phi1 + 5 * phi2)) * (5 * t491 + t493 + 1 + (t491 + t493 + 5) * t488)

        if Bindx == 161:
            t494 = np.cos(phi)
            t495 = t494 ** 2
            t496 = t495 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t496 - 1 + (t496 + 3) * t495)

        if Bindx == 162:
            t502 = np.sin(phi)
            t499 = t502 ** 2
            t500 = t502 * t499
            t498 = np.cos(phi)
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t498 * t500 ** 2 * np.sin((5 * phi2)) * ((1 + t498) ** (-0.1e1 / 0.2e1)) * ((1 - t498) ** (-0.1e1 / 0.2e1))

        if Bindx == 163:
            t503 = np.cos(phi)
            t504 = t503 ** 2
            t505 = t504 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t505 - 1 + (11 * t505 + 13) * t504) * np.cos((4 * phi2))

        if Bindx == 164:
            t510 = np.sin(phi)
            t508 = t510 ** 2
            t507 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t507 * t508 ** 2 * (11 * t507 ** 2 - 3) * np.sin((3 * phi2)) * ((1 + t507) ** (-0.1e1 / 0.2e1)) * ((1 - t507) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t511 = np.cos(phi)
            t512 = t511 ** 2
            t513 = t512 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t513 - 1 + (33 * t513 + 19) * t512) * np.cos((2 * phi2))

        if Bindx == 166:
            t516 = np.cos(phi)
            t517 = t516 ** 2
            t515 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t516 * t515 ** 2 * (5 + (-30 + 33 * t517) * t517) * np.sin(phi2) * ((1 + t516) ** (-0.1e1 / 0.2e1)) * ((1 - t516) ** (-0.1e1 / 0.2e1))

        if Bindx == 167:
            t519 = np.cos(phi)
            t520 = t519 ** 2
            t521 = t520 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t521 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t521 + 0.1365e4 / 0.16e2) * t520

        if Bindx == 168:
            t524 = np.cos(phi)
            t525 = t524 ** 2
            t523 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t524 * t523 ** 2 * (5 + (-30 + 33 * t525) * t525) * np.sin(phi2) * ((1 + t524) ** (-0.1e1 / 0.2e1)) * ((1 - t524) ** (-0.1e1 / 0.2e1))

        if Bindx == 169:
            t527 = np.cos(phi)
            t528 = t527 ** 2
            t529 = t528 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t529 - 1 + (33 * t529 + 19) * t528) * np.cos((2 * phi2))

        if Bindx == 170:
            t534 = np.sin(phi)
            t532 = t534 ** 2
            t531 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t531 * t532 ** 2 * (11 * t531 ** 2 - 3) * np.sin((3 * phi2)) * ((1 + t531) ** (-0.1e1 / 0.2e1)) * ((1 - t531) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t535 = np.cos(phi)
            t536 = t535 ** 2
            t537 = t536 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t537 - 1 + (11 * t537 + 13) * t536) * np.cos((4 * phi2))

        if Bindx == 172:
            t543 = np.sin(phi)
            t540 = t543 ** 2
            t541 = t543 * t540
            t539 = np.cos(phi)
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t539 * t541 ** 2 * np.sin((5 * phi2)) * ((1 + t539) ** (-0.1e1 / 0.2e1)) * ((1 - t539) ** (-0.1e1 / 0.2e1))

        if Bindx == 173:
            t544 = np.cos(phi)
            t545 = t544 ** 2
            t546 = t545 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t546 - 1 + (t546 + 3) * t545)

        if Bindx == 174:
            t548 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t548) ** (0.7e1 / 0.2e1)) * ((1 + t548) ** (0.5e1 / 0.2e1)) * np.sin((phi1 - 6 * phi2))

        if Bindx == 175:
            t549 = np.cos(phi)
            t555 = -5 * t549
            t550 = t549 ** 2
            t551 = t549 * t550
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t555 - 1 + (10 + 6 * t551) * t551 + (8 + (t555 - 13) * t550) * t550) * np.cos((phi1 - 5 * phi2))

        if Bindx == 176:
            t561 = np.sin(phi)
            t559 = t561 ** 2
            t556 = np.cos(phi)
            t557 = t556 ** 2
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t559 ** 2 * (-22 * t557 + 2 + (33 * t557 - 13) * t556) * np.sin((phi1 - 4 * phi2)) * ((1 + t556) ** (-0.1e1 / 0.2e1)) * ((1 - t556) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t562 = np.cos(phi)
            t563 = t562 ** 2
            t565 = t563 ** 2
            t564 = t562 * t563
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t563 - 37 * t565 - 1 + (14 + 22 * t564) * t564 + (-11 * t565 - 3) * t562) * np.cos((phi1 - 3 * phi2))

        if Bindx == 178:
            t569 = np.cos(phi)
            t570 = t569 ** 2
            t572 = t570 ** 2
            t568 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t568 ** 2 * (18 * t570 - 33 * t572 - 1 + (-102 * t570 + 99 * t572 + 19) * t569) * np.sin((phi1 - 2 * phi2)) * ((1 + t569) ** (-0.1e1 / 0.2e1)) * ((1 - t569) ** (-0.1e1 / 0.2e1))

        if Bindx == 179:
            t574 = np.cos(phi)
            t575 = t574 ** 2
            t577 = t575 ** 2
            t576 = t574 * t575
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * (100 * t575 - 285 * t577 - 5 + (30 + 198 * t576) * t576 + (-33 * t577 - 5) * t574) * np.cos(phi1 - phi2)

        if Bindx == 180:
            t581 = np.cos(phi)
            t582 = t581 ** 2
            t580 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t581 * t580 ** 2 * (5 + (-30 + 33 * t582) * t582) * np.sin(phi1) * ((1 + t581) ** (-0.1e1 / 0.2e1)) * ((1 - t581) ** (-0.1e1 / 0.2e1))

        if Bindx == 181:
            t584 = np.cos(phi)
            t585 = t584 ** 2
            t587 = t585 ** 2
            t586 = t584 * t585
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * (100 * t585 - 285 * t587 - 5 + (-30 + 198 * t586) * t586 + (33 * t587 + 5) * t584) * np.cos(phi1 + phi2)

        if Bindx == 182:
            t591 = np.cos(phi)
            t592 = t591 ** 2
            t594 = t592 ** 2
            t590 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t590 ** 2 * (-18 * t592 + 33 * t594 + 1 + (-102 * t592 + 99 * t594 + 19) * t591) * np.sin((phi1 + 2 * phi2)) * ((1 + t591) ** (-0.1e1 / 0.2e1)) * ((1 - t591) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t596 = np.cos(phi)
            t597 = t596 ** 2
            t599 = t597 ** 2
            t598 = t596 * t597
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t597 - 37 * t599 - 1 + (-14 + 22 * t598) * t598 + (11 * t599 + 3) * t596) * np.cos((phi1 + 3 * phi2))

        if Bindx == 184:
            t607 = np.sin(phi)
            t605 = t607 ** 2
            t602 = np.cos(phi)
            t603 = t602 ** 2
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t605 ** 2 * (22 * t603 - 2 + (33 * t603 - 13) * t602) * np.sin((phi1 + 4 * phi2)) * ((1 + t602) ** (-0.1e1 / 0.2e1)) * ((1 - t602) ** (-0.1e1 / 0.2e1))

        if Bindx == 185:
            t608 = np.cos(phi)
            t614 = 5 * t608
            t609 = t608 ** 2
            t610 = t608 * t609
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t614 - 1 + (-10 + 6 * t610) * t610 + (8 + (t614 - 13) * t609) * t609) * np.cos((phi1 + 5 * phi2))

        if Bindx == 186:
            t615 = np.cos(phi)
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t615) ** (0.5e1 / 0.2e1)) * ((1 + t615) ** (0.7e1 / 0.2e1)) * np.sin((phi1 + 6 * phi2))

        if Bindx == 187:
            t616 = np.cos(phi)
            t622 = -2 * t616
            t617 = t616 ** 2
            t619 = t617 ** 2
            t618 = t616 * t617
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((2 * phi1 - 6 * phi2)) * (t619 * t622 - t617 - t619 + t622 + 1 + (4 + t618) * t618)

        if Bindx == 188:
            t629 = np.sin(phi)
            t623 = np.cos(phi)
            t628 = 1 + t623
            t626 = t629 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t626 ** 2 * (t628 + (3 * t623 - 5) * t623 ** 2) * np.sin((2 * phi1 - 5 * phi2)) * (t628 ** (-0.1e1 / 0.2e1)) * ((1 - t623) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t630 = np.cos(phi)
            t631 = t630 ** 2
            t633 = t631 ** 2
            t632 = t630 * t631
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t631 - 43 * t633 - 1 + (64 + 33 * t632) * t632 + (-44 * t633 - 20) * t630) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 190:
            t637 = np.cos(phi)
            t638 = t637 ** 2
            t640 = t638 ** 2
            t636 = np.sin(phi)
            tfunc[..., c] = -0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t636 ** 2 * (42 * t638 - 55 * t640 - 3 + (-50 * t638 + 55 * t640 + 11) * t637) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t637) ** (-0.1e1 / 0.2e1)) * ((1 - t637) ** (-0.1e1 / 0.2e1))

        if Bindx == 191:
            t642 = np.cos(phi)
            t643 = t642 ** 2
            t645 = t643 ** 2
            t644 = t642 * t643
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * (289 * t643 - 735 * t645 - 17 + (372 + 495 * t644) * t644 + (-330 * t645 - 74) * t642) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 192:
            t649 = np.cos(phi)
            t650 = t649 ** 2
            t652 = t650 ** 2
            t648 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t648 ** 2 * (18 * t650 - 33 * t652 - 1 + (-102 * t650 + 99 * t652 + 19) * t649) * np.sin((2 * phi1 - phi2)) * ((1 + t649) ** (-0.1e1 / 0.2e1)) * ((1 - t649) ** (-0.1e1 / 0.2e1))

        if Bindx == 193:
            t654 = np.cos(phi)
            t655 = t654 ** 2
            t656 = t655 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t656 - 1 + (33 * t656 + 19) * t655) * np.cos((2 * phi1))

        if Bindx == 194:
            t659 = np.cos(phi)
            t660 = t659 ** 2
            t662 = t660 ** 2
            t658 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t658 ** 2 * (-18 * t660 + 33 * t662 + 1 + (-102 * t660 + 99 * t662 + 19) * t659) * np.sin((2 * phi1 + phi2)) * ((1 + t659) ** (-0.1e1 / 0.2e1)) * ((1 - t659) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t664 = np.cos(phi)
            t665 = t664 ** 2
            t667 = t665 ** 2
            t666 = t664 * t665
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * (289 * t665 - 735 * t667 - 17 + (-372 + 495 * t666) * t666 + (330 * t667 + 74) * t664) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 196:
            t671 = np.cos(phi)
            t672 = t671 ** 2
            t676 = 55 * t672 ** 2
            t670 = np.sin(phi)
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t670 ** 2 * (-42 * t672 + t676 + 3 + (-50 * t672 + t676 + 11) * t671) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t671) ** (-0.1e1 / 0.2e1)) * ((1 - t671) ** (-0.1e1 / 0.2e1))

        if Bindx == 197:
            t677 = np.cos(phi)
            t678 = t677 ** 2
            t680 = t678 ** 2
            t679 = t677 * t678
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t678 - 43 * t680 - 1 + (-64 + 33 * t679) * t679 + (44 * t680 + 20) * t677) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 198:
            t689 = np.sin(phi)
            t683 = np.cos(phi)
            t688 = 1 - t683
            t686 = t689 ** 2
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t686 ** 2 * (-t688 + (3 * t683 + 5) * t683 ** 2) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t683) ** (-0.1e1 / 0.2e1)) * (t688 ** (-0.1e1 / 0.2e1))

        if Bindx == 199:
            t690 = np.cos(phi)
            t696 = 2 * t690
            t691 = t690 ** 2
            t693 = t691 ** 2
            t692 = t690 * t691
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((2 * phi1 + 6 * phi2)) * (t693 * t696 - t691 - t693 + t696 + 1 + (-4 + t692) * t692)

        if Bindx == 200:
            t697 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t697) ** (0.9e1 / 0.2e1)) * ((1 + t697) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi1 - 6 * phi2))

        if Bindx == 201:
            t698 = np.cos(phi)
            t699 = t698 ** 2
            t701 = t699 ** 2
            t700 = t698 * t699
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (-5 * t698 * t701 - t698 - 4 * t699 + t701 + 1 + (6 + 2 * t700) * t700) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 202:
            t705 = np.cos(phi)
            t706 = t705 ** 2
            t708 = t706 ** 2
            t704 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t704 ** 2 * (16 * t706 - 22 * t708 - 2 + (2 * t706 + 11 * t708 - 5) * t705) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t705) ** (-0.1e1 / 0.2e1)) * ((1 - t705) ** (-0.1e1 / 0.2e1))

        if Bindx == 203:
            t710 = np.cos(phi)
            t711 = t710 ** 2
            t713 = t711 ** 2
            t712 = t710 * t711
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (12 * t711 - 105 * t713 - 1 + (206 + 110 * t712) * t712 + (-165 * t713 - 57) * t710) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 204:
            t717 = np.cos(phi)
            t718 = t717 ** 2
            t720 = t718 ** 2
            t716 = np.sin(phi)
            tfunc[..., c] = -0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t716 ** 2 * (42 * t718 - 55 * t720 - 3 + (-50 * t718 + 55 * t720 + 11) * t717) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t717) ** (-0.1e1 / 0.2e1)) * ((1 - t717) ** (-0.1e1 / 0.2e1))

        if Bindx == 205:
            t722 = np.cos(phi)
            t723 = t722 ** 2
            t725 = t723 ** 2
            t724 = t722 * t723
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t723 - 37 * t725 - 1 + (14 + 22 * t724) * t724 + (-11 * t725 - 3) * t722) * np.cos((3 * phi1 - phi2))

        if Bindx == 206:
            t731 = np.sin(phi)
            t729 = t731 ** 2
            t728 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t728 * t729 ** 2 * (11 * t728 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t728) ** (-0.1e1 / 0.2e1)) * ((1 - t728) ** (-0.1e1 / 0.2e1))

        if Bindx == 207:
            t732 = np.cos(phi)
            t733 = t732 ** 2
            t735 = t733 ** 2
            t734 = t732 * t733
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t733 - 37 * t735 - 1 + (-14 + 22 * t734) * t734 + (11 * t735 + 3) * t732) * np.cos((3 * phi1 + phi2))

        if Bindx == 208:
            t739 = np.cos(phi)
            t740 = t739 ** 2
            t744 = 55 * t740 ** 2
            t738 = np.sin(phi)
            tfunc[..., c] = -0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t738 ** 2 * (-42 * t740 + t744 + 3 + (-50 * t740 + t744 + 11) * t739) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t739) ** (-0.1e1 / 0.2e1)) * ((1 - t739) ** (-0.1e1 / 0.2e1))

        if Bindx == 209:
            t745 = np.cos(phi)
            t746 = t745 ** 2
            t748 = t746 ** 2
            t747 = t745 * t746
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (12 * t746 - 105 * t748 - 1 + (-206 + 110 * t747) * t747 + (165 * t748 + 57) * t745) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 210:
            t752 = np.cos(phi)
            t753 = t752 ** 2
            t755 = t753 ** 2
            t751 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t751 ** 2 * (-16 * t753 + 22 * t755 + 2 + (2 * t753 + 11 * t755 - 5) * t752) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t752) ** (-0.1e1 / 0.2e1)) * ((1 - t752) ** (-0.1e1 / 0.2e1))

        if Bindx == 211:
            t757 = np.cos(phi)
            t758 = t757 ** 2
            t760 = t758 ** 2
            t759 = t757 * t758
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (5 * t757 * t760 + t757 - 4 * t758 + t760 + 1 + (-6 + 2 * t759) * t759) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 212:
            t763 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t763) ** (0.3e1 / 0.2e1)) * ((1 + t763) ** (0.9e1 / 0.2e1)) * np.sin((3 * phi1 + 6 * phi2))

        if Bindx == 213:
            t764 = np.cos(phi)
            t765 = t764 ** 2
            t766 = t765 ** 2
            t767 = t764 * t766
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t765 + 5 * t766 - 4 * t767 - 1 + (t767 + 4) * t764) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 214:
            t770 = np.cos(phi)
            t771 = t770 ** 2
            t773 = t771 ** 2
            t769 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t769 ** 2 * (-10 * t773 + 2 + (10 * t771 + 3 * t773 - 5) * t770) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t770) ** (-0.1e1 / 0.2e1)) * ((1 - t770) ** (-0.1e1 / 0.2e1))

        if Bindx == 215:
            t775 = np.cos(phi)
            t776 = t775 ** 2
            t778 = t776 ** 2
            t777 = t775 * t776
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-65 * t776 + 35 * t778 + 13 + (80 + 33 * t777) * t777 + (-88 * t778 - 8) * t775) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 216:
            t782 = np.cos(phi)
            t783 = t782 ** 2
            t785 = t783 ** 2
            t781 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t781 ** 2 * (16 * t783 - 22 * t785 - 2 + (2 * t783 + 11 * t785 - 5) * t782) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t782) ** (-0.1e1 / 0.2e1)) * ((1 - t782) ** (-0.1e1 / 0.2e1))

        if Bindx == 217:
            t787 = np.cos(phi)
            t788 = t787 ** 2
            t790 = t788 ** 2
            t789 = t787 * t788
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t788 - 43 * t790 - 1 + (64 + 33 * t789) * t789 + (-44 * t790 - 20) * t787) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 218:
            t798 = np.sin(phi)
            t796 = t798 ** 2
            t793 = np.cos(phi)
            t794 = t793 ** 2
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t796 ** 2 * (-22 * t794 + 2 + (33 * t794 - 13) * t793) * np.sin((4 * phi1 - phi2)) * ((1 + t793) ** (-0.1e1 / 0.2e1)) * ((1 - t793) ** (-0.1e1 / 0.2e1))

        if Bindx == 219:
            t799 = np.cos(phi)
            t800 = t799 ** 2
            t801 = t800 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t801 - 1 + (11 * t801 + 13) * t800) * np.cos((4 * phi1))

        if Bindx == 220:
            t808 = np.sin(phi)
            t806 = t808 ** 2
            t803 = np.cos(phi)
            t804 = t803 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t806 ** 2 * (22 * t804 - 2 + (33 * t804 - 13) * t803) * np.sin((4 * phi1 + phi2)) * ((1 + t803) ** (-0.1e1 / 0.2e1)) * ((1 - t803) ** (-0.1e1 / 0.2e1))

        if Bindx == 221:
            t809 = np.cos(phi)
            t810 = t809 ** 2
            t812 = t810 ** 2
            t811 = t809 * t810
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t810 - 43 * t812 - 1 + (-64 + 33 * t811) * t811 + (44 * t812 + 20) * t809) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 222:
            t816 = np.cos(phi)
            t817 = t816 ** 2
            t819 = t817 ** 2
            t815 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t815 ** 2 * (-16 * t817 + 22 * t819 + 2 + (2 * t817 + 11 * t819 - 5) * t816) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t816) ** (-0.1e1 / 0.2e1)) * ((1 - t816) ** (-0.1e1 / 0.2e1))

        if Bindx == 223:
            t821 = np.cos(phi)
            t822 = t821 ** 2
            t824 = t822 ** 2
            t823 = t821 * t822
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-65 * t822 + 35 * t824 + 13 + (-80 + 33 * t823) * t823 + (88 * t824 + 8) * t821) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 224:
            t828 = np.cos(phi)
            t829 = t828 ** 2
            t831 = t829 ** 2
            t827 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t827 ** 2 * (10 * t831 - 2 + (10 * t829 + 3 * t831 - 5) * t828) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t828) ** (-0.1e1 / 0.2e1)) * ((1 - t828) ** (-0.1e1 / 0.2e1))

        if Bindx == 225:
            t833 = np.cos(phi)
            t834 = t833 ** 2
            t835 = t834 ** 2
            t836 = t833 * t835
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t834 + 5 * t835 + 4 * t836 - 1 + (t836 - 4) * t833) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 226:
            t838 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((1 - t838) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t838)) * np.sin((5 * phi1 - 6 * phi2))

        if Bindx == 227:
            t839 = np.cos(phi)
            t840 = t839 ** 2
            t842 = t840 ** 2
            t841 = t839 * t840
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-20 * t840 + 35 * t842 - 5 + (-10 + 6 * t841) * t841 + (-25 * t842 + 19) * t839) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 228:
            t846 = np.cos(phi)
            t847 = t846 ** 2
            t849 = t847 ** 2
            t845 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t845 ** 2 * (-10 * t849 + 2 + (10 * t847 + 3 * t849 - 5) * t846) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t846) ** (-0.1e1 / 0.2e1)) * ((1 - t846) ** (-0.1e1 / 0.2e1))

        if Bindx == 229:
            t851 = np.cos(phi)
            t852 = t851 ** 2
            t854 = t852 ** 2
            t853 = t851 * t852
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (-5 * t851 * t854 - t851 - 4 * t852 + t854 + 1 + (6 + 2 * t853) * t853) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 230:
            t863 = np.sin(phi)
            t857 = np.cos(phi)
            t862 = 1 + t857
            t860 = t863 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t860 ** 2 * (t862 + (3 * t857 - 5) * t857 ** 2) * np.sin((5 * phi1 - 2 * phi2)) * (t862 ** (-0.1e1 / 0.2e1)) * ((1 - t857) ** (-0.1e1 / 0.2e1))

        if Bindx == 231:
            t864 = np.cos(phi)
            t870 = -5 * t864
            t865 = t864 ** 2
            t866 = t864 * t865
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t870 - 1 + (10 + 6 * t866) * t866 + (8 + (t870 - 13) * t865) * t865) * np.cos((5 * phi1 - phi2))

        if Bindx == 232:
            t875 = np.sin(phi)
            t872 = t875 ** 2
            t873 = t875 * t872
            t871 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t871 * t873 ** 2 * np.sin((5 * phi1)) * ((1 + t871) ** (-0.1e1 / 0.2e1)) * ((1 - t871) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t876 = np.cos(phi)
            t882 = 5 * t876
            t877 = t876 ** 2
            t878 = t876 * t877
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t882 - 1 + (-10 + 6 * t878) * t878 + (8 + (t882 - 13) * t877) * t877) * np.cos((5 * phi1 + phi2))

        if Bindx == 234:
            t889 = np.sin(phi)
            t883 = np.cos(phi)
            t888 = 1 - t883
            t886 = t889 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t886 ** 2 * (-t888 + (3 * t883 + 5) * t883 ** 2) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t883) ** (-0.1e1 / 0.2e1)) * (t888 ** (-0.1e1 / 0.2e1))

        if Bindx == 235:
            t890 = np.cos(phi)
            t891 = t890 ** 2
            t893 = t891 ** 2
            t892 = t890 * t891
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (5 * t890 * t893 + t890 - 4 * t891 + t893 + 1 + (-6 + 2 * t892) * t892) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 236:
            t897 = np.cos(phi)
            t898 = t897 ** 2
            t900 = t898 ** 2
            t896 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t896 ** 2 * (10 * t900 - 2 + (10 * t898 + 3 * t900 - 5) * t897) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t897) ** (-0.1e1 / 0.2e1)) * ((1 - t897) ** (-0.1e1 / 0.2e1))

        if Bindx == 237:
            t902 = np.cos(phi)
            t903 = t902 ** 2
            t905 = t903 ** 2
            t904 = t902 * t903
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-20 * t903 + 35 * t905 - 5 + (10 + 6 * t904) * t904 + (25 * t905 - 19) * t902) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 238:
            t908 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt((1 - t908)) * ((1 + t908) ** (0.11e2 / 0.2e1)) * np.sin((5 * phi1 + 6 * phi2))

        if Bindx == 239:
            t909 = np.cos(phi)
            t915 = -6 * t909
            t910 = t909 ** 2
            t911 = t909 * t910
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * np.cos((6 * phi1 - 6 * phi2)) * (t915 + 1 + (-20 + t911) * t911 + (15 + (t915 + 15) * t910) * t910)

        if Bindx == 240:
            t916 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((1 - t916) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t916)) * np.sin((6 * phi1 - 5 * phi2))

        if Bindx == 241:
            t917 = np.cos(phi)
            t918 = t917 ** 2
            t919 = t918 ** 2
            t920 = t917 * t919
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t918 + 5 * t919 - 4 * t920 - 1 + (t920 + 4) * t917) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 242:
            t922 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t922) ** (0.9e1 / 0.2e1)) * ((1 + t922) ** (0.3e1 / 0.2e1)) * np.sin((6 * phi1 - 3 * phi2))

        if Bindx == 243:
            t923 = np.cos(phi)
            t929 = -2 * t923
            t924 = t923 ** 2
            t926 = t924 ** 2
            t925 = t923 * t924
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((6 * phi1 - 2 * phi2)) * (t926 * t929 - t924 - t926 + t929 + 1 + (4 + t925) * t925)

        if Bindx == 244:
            t930 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t930) ** (0.7e1 / 0.2e1)) * ((1 + t930) ** (0.5e1 / 0.2e1)) * np.sin((6 * phi1 - phi2))

        if Bindx == 245:
            t931 = np.cos(phi)
            t932 = t931 ** 2
            t933 = t932 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t933 - 1 + (t933 + 3) * t932)

        if Bindx == 246:
            t935 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t935) ** (0.5e1 / 0.2e1)) * ((1 + t935) ** (0.7e1 / 0.2e1)) * np.sin((6 * phi1 + phi2))

        if Bindx == 247:
            t936 = np.cos(phi)
            t942 = 2 * t936
            t937 = t936 ** 2
            t939 = t937 ** 2
            t938 = t936 * t937
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((6 * phi1 + 2 * phi2)) * (t939 * t942 - t937 - t939 + t942 + 1 + (-4 + t938) * t938)

        if Bindx == 248:
            t943 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t943) ** (0.3e1 / 0.2e1)) * ((1 + t943) ** (0.9e1 / 0.2e1)) * np.sin((6 * phi1 + 3 * phi2))

        if Bindx == 249:
            t944 = np.cos(phi)
            t945 = t944 ** 2
            t946 = t945 ** 2
            t947 = t944 * t946
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t945 + 5 * t946 + 4 * t947 - 1 + (t947 - 4) * t944) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 250:
            t949 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((1 + t949) ** (0.11e2 / 0.2e1)) * np.sqrt((1 - t949)) * np.sin((6 * phi1 + 5 * phi2))

        if Bindx == 251:
            t950 = np.cos(phi)
            t956 = 6 * t950
            t951 = t950 ** 2
            t952 = t950 * t951
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * np.cos((6 * phi1 + 6 * phi2)) * (t956 + 1 + (20 + t952) * t952 + (15 + (t956 + 15) * t951) * t951)

        if Bindx == 252:
            t957 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.429e3) * ((1 - t957) ** (0.7e1 / 0.2e1)) * ((1 + t957) ** (0.7e1 / 0.2e1)) * np.sin((7 * phi2))

        if Bindx == 253:
            t958 = np.cos(phi)
            t959 = t958 ** 2
            t960 = t959 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * t958 * np.cos((6 * phi2)) * (-3 * t960 - 1 + (t960 + 3) * t959)

        if Bindx == 254:
            t966 = np.sin(phi)
            t963 = t966 ** 2
            t964 = t966 * t963
            t962 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.231e3) * t964 ** 2 * (13 * t962 ** 2 - 1) * np.sin((5 * phi2)) * ((1 - t962) ** (-0.1e1 / 0.2e1)) * ((1 + t962) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t967 = np.cos(phi)
            t968 = t967 ** 2
            t969 = t968 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * np.sqrt(0.231e3) * t967 * (-29 * t969 - 3 + (13 * t969 + 19) * t968) * np.cos((4 * phi2))

        if Bindx == 256:
            t976 = np.sin(phi)
            t974 = t976 ** 2
            t971 = np.cos(phi)
            t972 = t971 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.21e2) * t974 ** 2 * (3 + (-66 + 143 * t972) * t972) * np.sin((3 * phi2)) * ((1 - t971) ** (-0.1e1 / 0.2e1)) * ((1 + t971) ** (-0.1e1 / 0.2e1))

        if Bindx == 257:
            t977 = np.cos(phi)
            t978 = t977 ** 2
            t979 = t978 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t977 * (-253 * t979 - 15 + (143 * t979 + 125) * t978) * np.cos((2 * phi2))

        if Bindx == 258:
            t982 = np.cos(phi)
            t983 = t982 ** 2
            t984 = t983 ** 2
            t981 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.7e1) * t981 ** 2 * (-495 * t984 - 5 + (429 * t984 + 135) * t983) * np.sin(phi2) * ((1 - t982) ** (-0.1e1 / 0.2e1)) * ((1 + t982) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t986 = np.cos(phi)
            t987 = t986 ** 2
            t988 = t987 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * t986 * (-693 * t988 - 35 + (429 * t988 + 315) * t987)

        if Bindx == 260:
            t991 = np.cos(phi)
            t992 = t991 ** 2
            t993 = t992 ** 2
            t990 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.7e1) * t990 ** 2 * (-495 * t993 - 5 + (429 * t993 + 135) * t992) * np.sin(phi2) * ((1 - t991) ** (-0.1e1 / 0.2e1)) * ((1 + t991) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t995 = np.cos(phi)
            t996 = t995 ** 2
            t997 = t996 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t995 * (-253 * t997 - 15 + (143 * t997 + 125) * t996) * np.cos((2 * phi2))

        if Bindx == 262:
            t1004 = np.sin(phi)
            t1002 = t1004 ** 2
            t999 = np.cos(phi)
            t1000 = t999 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.21e2) * t1002 ** 2 * (3 + (-66 + 143 * t1000) * t1000) * np.sin((3 * phi2)) * ((1 - t999) ** (-0.1e1 / 0.2e1)) * ((1 + t999) ** (-0.1e1 / 0.2e1))

        if Bindx == 263:
            t1005 = np.cos(phi)
            t1006 = t1005 ** 2
            t1007 = t1006 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * np.sqrt(0.231e3) * t1005 * (-29 * t1007 - 3 + (13 * t1007 + 19) * t1006) * np.cos((4 * phi2))

        if Bindx == 264:
            t1013 = np.sin(phi)
            t1010 = t1013 ** 2
            t1011 = t1013 * t1010
            t1009 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.231e3) * t1011 ** 2 * (13 * t1009 ** 2 - 1) * np.sin((5 * phi2)) * ((1 - t1009) ** (-0.1e1 / 0.2e1)) * ((1 + t1009) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t1014 = np.cos(phi)
            t1015 = t1014 ** 2
            t1016 = t1015 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * t1014 * np.cos((6 * phi2)) * (-3 * t1016 - 1 + (t1016 + 3) * t1015)

        if Bindx == 266:
            t1018 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.429e3) * ((1 - t1018) ** (0.7e1 / 0.2e1)) * ((1 + t1018) ** (0.7e1 / 0.2e1)) * np.sin((7 * phi2))

        if Bindx == 267:
            t1019 = np.cos(phi)
            t1020 = t1019 ** 2
            t1021 = t1019 * t1020
            t1026 = -3 * t1020 ** 2 + t1021 ** 2 - 1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((phi1 - 7 * phi2)) * (t1026 * t1019 - 3 * t1020 + 3 * t1021 - t1026)

        if Bindx == 268:
            t1031 = np.sin(phi)
            t1028 = t1031 ** 2
            t1029 = t1031 * t1028
            t1027 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1029 ** 2 * (-1 + (-6 + 7 * t1027) * t1027) * np.sin((phi1 - 6 * phi2)) * ((1 - t1027) ** (-0.1e1 / 0.2e1)) * ((1 + t1027) ** (-0.1e1 / 0.2e1))

        if Bindx == 269:
            t1032 = np.cos(phi)
            t1033 = t1032 ** 2
            t1034 = t1032 * t1033
            t1037 = t1034 ** 2
            t1035 = t1033 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-75 * t1033 + 153 * t1034 + 135 * t1035 - 65 * t1037 + 5 + (-213 * t1035 + 91 * t1037 - 31) * t1032) * np.cos((phi1 - 5 * phi2))

        if Bindx == 270:
            t1045 = np.sin(phi)
            t1043 = t1045 ** 2
            t1039 = np.cos(phi)
            t1040 = t1039 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1043 ** 2 * (12 * t1039 + 3 + (-52 * t1039 - 54 + 91 * t1040) * t1040) * np.sin((phi1 - 4 * phi2)) * ((1 - t1039) ** (-0.1e1 / 0.2e1)) * ((1 + t1039) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t1046 = np.cos(phi)
            t1047 = t1046 ** 2
            t1048 = t1046 * t1047
            t1051 = t1048 ** 2
            t1049 = t1047 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-207 * t1047 + 1043 * t1048 + 627 * t1049 - 429 * t1051 + 9 + (-1903 * t1049 + 1001 * t1051 - 141) * t1046) * np.cos((phi1 - 3 * phi2))

        if Bindx == 272:
            t1054 = np.cos(phi)
            t1055 = t1054 ** 2
            t1057 = t1055 ** 2
            t1056 = t1054 * t1055
            t1053 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t1053 ** 2 * (375 * t1055 - 1265 * t1057 - 15 + (220 + 1001 * t1056) * t1056 + (-286 * t1057 - 30) * t1054) * np.sin((phi1 - 2 * phi2)) * ((1 - t1054) ** (-0.1e1 / 0.2e1)) * ((1 + t1054) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t1060 = np.cos(phi)
            t1061 = t1060 ** 2
            t1062 = t1060 * t1061
            t1065 = t1062 ** 2
            t1063 = t1061 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (-135 * t1061 + 2385 * t1062 + 495 * t1063 - 429 * t1065 + 5 + (-5049 * t1063 + 3003 * t1065 - 275) * t1060) * np.cos(phi1 - phi2)

        if Bindx == 274:
            t1068 = np.cos(phi)
            t1069 = t1068 ** 2
            t1070 = t1069 ** 2
            t1067 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.7e1) * t1067 ** 2 * (-495 * t1070 - 5 + (429 * t1070 + 135) * t1069) * np.sin(phi1) * ((1 - t1068) ** (-0.1e1 / 0.2e1)) * ((1 + t1068) ** (-0.1e1 / 0.2e1))

        if Bindx == 275:
            t1072 = np.cos(phi)
            t1073 = t1072 ** 2
            t1074 = t1072 * t1073
            t1077 = t1074 ** 2
            t1075 = t1073 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (135 * t1073 + 2385 * t1074 - 495 * t1075 + 429 * t1077 - 5 + (-5049 * t1075 + 3003 * t1077 - 275) * t1072) * np.cos(phi1 + phi2)

        if Bindx == 276:
            t1080 = np.cos(phi)
            t1081 = t1080 ** 2
            t1083 = t1081 ** 2
            t1082 = t1080 * t1081
            t1079 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t1079 ** 2 * (375 * t1081 - 1265 * t1083 - 15 + (-220 + 1001 * t1082) * t1082 + (286 * t1083 + 30) * t1080) * np.sin((phi1 + 2 * phi2)) * ((1 - t1080) ** (-0.1e1 / 0.2e1)) * ((1 + t1080) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t1086 = np.cos(phi)
            t1087 = t1086 ** 2
            t1088 = t1086 * t1087
            t1091 = t1088 ** 2
            t1089 = t1087 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (207 * t1087 + 1043 * t1088 - 627 * t1089 + 429 * t1091 - 9 + (-1903 * t1089 + 1001 * t1091 - 141) * t1086) * np.cos((phi1 + 3 * phi2))

        if Bindx == 278:
            t1099 = np.sin(phi)
            t1097 = t1099 ** 2
            t1093 = np.cos(phi)
            t1094 = t1093 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1097 ** 2 * (-12 * t1093 + 3 + (52 * t1093 - 54 + 91 * t1094) * t1094) * np.sin((phi1 + 4 * phi2)) * ((1 - t1093) ** (-0.1e1 / 0.2e1)) * ((1 + t1093) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t1100 = np.cos(phi)
            t1101 = t1100 ** 2
            t1102 = t1100 * t1101
            t1105 = t1102 ** 2
            t1103 = t1101 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (75 * t1101 + 153 * t1102 - 135 * t1103 + 65 * t1105 - 5 + (-213 * t1103 + 91 * t1105 - 31) * t1100) * np.cos((phi1 + 5 * phi2))

        if Bindx == 280:
            t1111 = np.sin(phi)
            t1108 = t1111 ** 2
            t1109 = t1111 * t1108
            t1107 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1109 ** 2 * (-1 + (6 + 7 * t1107) * t1107) * np.sin((phi1 + 6 * phi2)) * ((1 - t1107) ** (-0.1e1 / 0.2e1)) * ((1 + t1107) ** (-0.1e1 / 0.2e1))

        if Bindx == 281:
            t1112 = np.cos(phi)
            t1113 = t1112 ** 2
            t1114 = t1112 * t1113
            t1120 = -3 * t1113 ** 2 + t1114 ** 2 - 1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((phi1 + 7 * phi2)) * (t1112 * t1120 + 3 * t1113 + 3 * t1114 + t1120)

        if Bindx == 282:
            t1121 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1121) ** (0.9e1 / 0.2e1)) * ((1 + t1121) ** (0.5e1 / 0.2e1)) * np.sin((2 * phi1 - 7 * phi2))

        if Bindx == 283:
            t1122 = np.cos(phi)
            t1123 = t1122 ** 2
            t1124 = t1122 * t1123
            t1127 = t1124 ** 2
            t1125 = t1123 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (-16 * t1123 + t1124 + 26 * t1125 - 12 * t1127 + 2 + (-11 * t1125 + 7 * t1127 + 3) * t1122) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 284:
            t1135 = np.sin(phi)
            t1133 = t1135 ** 2
            t1129 = np.cos(phi)
            t1130 = t1129 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1133 ** 2 * (50 * t1129 + 1 + (-130 * t1129 - 12 + 91 * t1130) * t1130) * np.sin((2 * phi1 - 5 * phi2)) * ((1 - t1129) ** (-0.1e1 / 0.2e1)) * ((1 + t1129) ** (-0.1e1 / 0.2e1))

        if Bindx == 285:
            t1136 = np.cos(phi)
            t1137 = t1136 ** 2
            t1138 = t1136 * t1137
            t1141 = t1138 ** 2
            t1139 = t1137 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (-72 * t1137 + 73 * t1138 + 172 * t1139 - 104 * t1141 + 4 + (-153 * t1139 + 91 * t1141 - 11) * t1136) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 286:
            t1144 = np.cos(phi)
            t1145 = t1144 ** 2
            t1147 = t1145 ** 2
            t1146 = t1144 * t1145
            t1143 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * t1143 ** 2 * (399 * t1145 - 1221 * t1147 - 19 + (836 + 1001 * t1146) * t1146 + (-858 * t1147 - 138) * t1144) * np.sin((2 * phi1 - 3 * phi2)) * ((1 - t1144) ** (-0.1e1 / 0.2e1)) * ((1 + t1144) ** (-0.1e1 / 0.2e1))

        if Bindx == 287:
            t1150 = np.cos(phi)
            t1151 = t1150 ** 2
            t1152 = t1150 * t1151
            t1155 = t1152 ** 2
            t1153 = t1151 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (-240 * t1151 + 895 * t1152 + 770 * t1153 - 572 * t1155 + 10 + (-1749 * t1153 + 1001 * t1155 - 115) * t1150) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 288:
            t1158 = np.cos(phi)
            t1159 = t1158 ** 2
            t1161 = t1159 ** 2
            t1160 = t1158 * t1159
            t1157 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t1157 ** 2 * (375 * t1159 - 1265 * t1161 - 15 + (220 + 1001 * t1160) * t1160 + (-286 * t1161 - 30) * t1158) * np.sin((2 * phi1 - phi2)) * ((1 - t1158) ** (-0.1e1 / 0.2e1)) * ((1 + t1158) ** (-0.1e1 / 0.2e1))

        if Bindx == 289:
            t1164 = np.cos(phi)
            t1165 = t1164 ** 2
            t1166 = t1165 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t1164 * (-253 * t1166 - 15 + (143 * t1166 + 125) * t1165) * np.cos((2 * phi1))

        if Bindx == 290:
            t1169 = np.cos(phi)
            t1170 = t1169 ** 2
            t1172 = t1170 ** 2
            t1171 = t1169 * t1170
            t1168 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t1168 ** 2 * (375 * t1170 - 1265 * t1172 - 15 + (-220 + 1001 * t1171) * t1171 + (286 * t1172 + 30) * t1169) * np.sin((2 * phi1 + phi2)) * ((1 - t1169) ** (-0.1e1 / 0.2e1)) * ((1 + t1169) ** (-0.1e1 / 0.2e1))

        if Bindx == 291:
            t1175 = np.cos(phi)
            t1176 = t1175 ** 2
            t1177 = t1175 * t1176
            t1180 = t1177 ** 2
            t1178 = t1176 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (240 * t1176 + 895 * t1177 - 770 * t1178 + 572 * t1180 - 10 + (-1749 * t1178 + 1001 * t1180 - 115) * t1175) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 292:
            t1183 = np.cos(phi)
            t1184 = t1183 ** 2
            t1186 = t1184 ** 2
            t1185 = t1183 * t1184
            t1182 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * t1182 ** 2 * (399 * t1184 - 1221 * t1186 - 19 + (-836 + 1001 * t1185) * t1185 + (858 * t1186 + 138) * t1183) * np.sin((2 * phi1 + 3 * phi2)) * ((1 - t1183) ** (-0.1e1 / 0.2e1)) * ((1 + t1183) ** (-0.1e1 / 0.2e1))

        if Bindx == 293:
            t1189 = np.cos(phi)
            t1190 = t1189 ** 2
            t1191 = t1189 * t1190
            t1194 = t1191 ** 2
            t1192 = t1190 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (72 * t1190 + 73 * t1191 - 172 * t1192 + 104 * t1194 - 4 + (-153 * t1192 + 91 * t1194 - 11) * t1189) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 294:
            t1202 = np.sin(phi)
            t1200 = t1202 ** 2
            t1196 = np.cos(phi)
            t1197 = t1196 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1200 ** 2 * (-50 * t1196 + 1 + (130 * t1196 - 12 + 91 * t1197) * t1197) * np.sin((2 * phi1 + 5 * phi2)) * ((1 - t1196) ** (-0.1e1 / 0.2e1)) * ((1 + t1196) ** (-0.1e1 / 0.2e1))

        if Bindx == 295:
            t1203 = np.cos(phi)
            t1204 = t1203 ** 2
            t1205 = t1203 * t1204
            t1208 = t1205 ** 2
            t1206 = t1204 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (16 * t1204 + t1205 - 26 * t1206 + 12 * t1208 - 2 + (-11 * t1206 + 7 * t1208 + 3) * t1203) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 296:
            t1210 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1210) ** (0.5e1 / 0.2e1)) * ((1 + t1210) ** (0.9e1 / 0.2e1)) * np.sin((2 * phi1 + 7 * phi2))

        if Bindx == 297:
            t1211 = np.cos(phi)
            t1212 = t1211 ** 2
            t1213 = t1211 * t1212
            t1216 = t1213 ** 2
            t1214 = t1212 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((3 * phi1 - 7 * phi2)) * (-t1212 - 5 * t1213 + 5 * t1214 - 3 * t1216 - 1 + (t1214 + t1216 + 3) * t1211)

        if Bindx == 298:
            t1224 = np.sin(phi)
            t1222 = t1224 ** 2
            t1218 = np.cos(phi)
            t1219 = t1218 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1222 ** 2 * (2 * t1218 - 3 + (-18 * t1218 + 12 + 7 * t1219) * t1219) * np.sin((3 * phi1 - 6 * phi2)) * ((1 - t1218) ** (-0.1e1 / 0.2e1)) * ((1 + t1218) ** (-0.1e1 / 0.2e1))

        if Bindx == 299:
            t1225 = np.cos(phi)
            t1226 = t1225 ** 2
            t1227 = t1225 * t1226
            t1230 = t1227 ** 2
            t1228 = t1226 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (-121 * t1226 - 95 * t1227 + 305 * t1228 - 195 * t1230 + 11 + (-41 * t1228 + 91 * t1230 + 45) * t1225) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 300:
            t1233 = np.cos(phi)
            t1234 = t1233 ** 2
            t1236 = t1234 ** 2
            t1235 = t1233 * t1234
            t1232 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1232 ** 2 * (-15 * t1234 - 45 * t1236 + 1 + (160 + 91 * t1235) * t1235 + (-156 * t1236 - 36) * t1233) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t1233) ** (-0.1e1 / 0.2e1)) * ((1 - t1233) ** (-0.1e1 / 0.2e1))

        if Bindx == 301:
            t1239 = np.cos(phi)
            t1240 = t1239 ** 2
            t1241 = t1239 * t1240
            t1244 = t1241 ** 2
            t1242 = t1240 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (-741 * t1240 + 555 * t1241 + 1925 * t1242 - 1287 * t1244 + 39 + (-1419 * t1242 + 1001 * t1244 - 73) * t1239) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 302:
            t1247 = np.cos(phi)
            t1248 = t1247 ** 2
            t1250 = t1248 ** 2
            t1249 = t1247 * t1248
            t1246 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * t1246 ** 2 * (399 * t1248 - 1221 * t1250 - 19 + (836 + 1001 * t1249) * t1249 + (-858 * t1250 - 138) * t1247) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t1247) ** (-0.1e1 / 0.2e1)) * ((1 - t1247) ** (-0.1e1 / 0.2e1))

        if Bindx == 303:
            t1253 = np.cos(phi)
            t1254 = t1253 ** 2
            t1255 = t1253 * t1254
            t1258 = t1255 ** 2
            t1256 = t1254 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-207 * t1254 + 1043 * t1255 + 627 * t1256 - 429 * t1258 + 9 + (-1903 * t1256 + 1001 * t1258 - 141) * t1253) * np.cos((3 * phi1 - phi2))

        if Bindx == 304:
            t1265 = np.sin(phi)
            t1263 = t1265 ** 2
            t1260 = np.cos(phi)
            t1261 = t1260 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.21e2) * t1263 ** 2 * (3 + (-66 + 143 * t1261) * t1261) * np.sin((3 * phi1)) * ((1 - t1260) ** (-0.1e1 / 0.2e1)) * ((1 + t1260) ** (-0.1e1 / 0.2e1))

        if Bindx == 305:
            t1266 = np.cos(phi)
            t1267 = t1266 ** 2
            t1268 = t1266 * t1267
            t1271 = t1268 ** 2
            t1269 = t1267 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (207 * t1267 + 1043 * t1268 - 627 * t1269 + 429 * t1271 - 9 + (-1903 * t1269 + 1001 * t1271 - 141) * t1266) * np.cos((3 * phi1 + phi2))

        if Bindx == 306:
            t1274 = np.cos(phi)
            t1275 = t1274 ** 2
            t1277 = t1275 ** 2
            t1276 = t1274 * t1275
            t1273 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * t1273 ** 2 * (399 * t1275 - 1221 * t1277 - 19 + (-836 + 1001 * t1276) * t1276 + (858 * t1277 + 138) * t1274) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t1274) ** (-0.1e1 / 0.2e1)) * ((1 - t1274) ** (-0.1e1 / 0.2e1))

        if Bindx == 307:
            t1280 = np.cos(phi)
            t1281 = t1280 ** 2
            t1282 = t1280 * t1281
            t1285 = t1282 ** 2
            t1283 = t1281 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (741 * t1281 + 555 * t1282 - 1925 * t1283 + 1287 * t1285 - 39 + (-1419 * t1283 + 1001 * t1285 - 73) * t1280) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 308:
            t1288 = np.cos(phi)
            t1289 = t1288 ** 2
            t1291 = t1289 ** 2
            t1290 = t1288 * t1289
            t1287 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1287 ** 2 * (-15 * t1289 - 45 * t1291 + 1 + (-160 + 91 * t1290) * t1290 + (156 * t1291 + 36) * t1288) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t1288) ** (-0.1e1 / 0.2e1)) * ((1 - t1288) ** (-0.1e1 / 0.2e1))

        if Bindx == 309:
            t1294 = np.cos(phi)
            t1295 = t1294 ** 2
            t1296 = t1294 * t1295
            t1299 = t1296 ** 2
            t1297 = t1295 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (121 * t1295 - 95 * t1296 - 305 * t1297 + 195 * t1299 - 11 + (-41 * t1297 + 91 * t1299 + 45) * t1294) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 310:
            t1307 = np.sin(phi)
            t1305 = t1307 ** 2
            t1301 = np.cos(phi)
            t1302 = t1301 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1305 ** 2 * (-2 * t1301 - 3 + (18 * t1301 + 12 + 7 * t1302) * t1302) * np.sin((3 * phi1 + 6 * phi2)) * ((1 - t1301) ** (-0.1e1 / 0.2e1)) * ((1 + t1301) ** (-0.1e1 / 0.2e1))

        if Bindx == 311:
            t1308 = np.cos(phi)
            t1309 = t1308 ** 2
            t1310 = t1308 * t1309
            t1313 = t1310 ** 2
            t1311 = t1309 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((3 * phi1 + 7 * phi2)) * (t1309 - 5 * t1310 - 5 * t1311 + 3 * t1313 + 1 + (t1311 + t1313 + 3) * t1308)

        if Bindx == 312:
            t1315 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1315) ** (0.11e2 / 0.2e1)) * ((1 + t1315) ** (0.3e1 / 0.2e1)) * np.sin((4 * phi1 - 7 * phi2))

        if Bindx == 313:
            t1316 = np.cos(phi)
            t1317 = t1316 ** 2
            t1318 = t1316 * t1317
            t1321 = t1318 ** 2
            t1319 = t1317 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (8 * t1317 - 35 * t1318 + 20 * t1319 - 24 * t1321 - 4 + (19 * t1319 + 7 * t1321 + 9) * t1316) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 314:
            t1324 = np.cos(phi)
            t1325 = t1324 ** 2
            t1327 = t1325 ** 2
            t1326 = t1324 * t1325
            t1323 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1323 ** 2 * (-175 * t1325 + 155 * t1327 + 25 + (160 + 91 * t1326) * t1326 + (-260 * t1327 + 4) * t1324) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t1324) ** (-0.1e1 / 0.2e1)) * ((1 - t1324) ** (-0.1e1 / 0.2e1))

        if Bindx == 315:
            t1330 = np.cos(phi)
            t1331 = t1330 ** 2
            t1332 = t1330 * t1331
            t1335 = t1332 ** 2
            t1333 = t1331 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.2e1) * (-96 * t1331 - 115 * t1332 + 280 * t1333 - 208 * t1335 + 8 + (-3 * t1333 + 91 * t1335 + 43) * t1330) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 316:
            t1338 = np.cos(phi)
            t1339 = t1338 ** 2
            t1341 = t1339 ** 2
            t1340 = t1338 * t1339
            t1337 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1337 ** 2 * (-15 * t1339 - 45 * t1341 + 1 + (160 + 91 * t1340) * t1340 + (-156 * t1341 - 36) * t1338) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t1338) ** (-0.1e1 / 0.2e1)) * ((1 - t1338) ** (-0.1e1 / 0.2e1))

        if Bindx == 317:
            t1344 = np.cos(phi)
            t1345 = t1344 ** 2
            t1346 = t1344 * t1345
            t1349 = t1346 ** 2
            t1347 = t1345 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (-72 * t1345 + 73 * t1346 + 172 * t1347 - 104 * t1349 + 4 + (-153 * t1347 + 91 * t1349 - 11) * t1344) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 318:
            t1357 = np.sin(phi)
            t1355 = t1357 ** 2
            t1351 = np.cos(phi)
            t1352 = t1351 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1355 ** 2 * (12 * t1351 + 3 + (-52 * t1351 - 54 + 91 * t1352) * t1352) * np.sin((4 * phi1 - phi2)) * ((1 - t1351) ** (-0.1e1 / 0.2e1)) * ((1 + t1351) ** (-0.1e1 / 0.2e1))

        if Bindx == 319:
            t1358 = np.cos(phi)
            t1359 = t1358 ** 2
            t1360 = t1359 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * np.sqrt(0.231e3) * t1358 * (-29 * t1360 - 3 + (13 * t1360 + 19) * t1359) * np.cos((4 * phi1))

        if Bindx == 320:
            t1368 = np.sin(phi)
            t1366 = t1368 ** 2
            t1362 = np.cos(phi)
            t1363 = t1362 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1366 ** 2 * (-12 * t1362 + 3 + (52 * t1362 - 54 + 91 * t1363) * t1363) * np.sin((4 * phi1 + phi2)) * ((1 - t1362) ** (-0.1e1 / 0.2e1)) * ((1 + t1362) ** (-0.1e1 / 0.2e1))

        if Bindx == 321:
            t1369 = np.cos(phi)
            t1370 = t1369 ** 2
            t1371 = t1369 * t1370
            t1374 = t1371 ** 2
            t1372 = t1370 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (72 * t1370 + 73 * t1371 - 172 * t1372 + 104 * t1374 - 4 + (-153 * t1372 + 91 * t1374 - 11) * t1369) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 322:
            t1377 = np.cos(phi)
            t1378 = t1377 ** 2
            t1380 = t1378 ** 2
            t1379 = t1377 * t1378
            t1376 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1376 ** 2 * (-15 * t1378 - 45 * t1380 + 1 + (-160 + 91 * t1379) * t1379 + (156 * t1380 + 36) * t1377) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t1377) ** (-0.1e1 / 0.2e1)) * ((1 - t1377) ** (-0.1e1 / 0.2e1))

        if Bindx == 323:
            t1383 = np.cos(phi)
            t1384 = t1383 ** 2
            t1385 = t1383 * t1384
            t1388 = t1385 ** 2
            t1386 = t1384 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.2e1) * (96 * t1384 - 115 * t1385 - 280 * t1386 + 208 * t1388 - 8 + (-3 * t1386 + 91 * t1388 + 43) * t1383) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 324:
            t1391 = np.cos(phi)
            t1392 = t1391 ** 2
            t1394 = t1392 ** 2
            t1393 = t1391 * t1392
            t1390 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1390 ** 2 * (-175 * t1392 + 155 * t1394 + 25 + (-160 + 91 * t1393) * t1393 + (260 * t1394 - 4) * t1391) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t1391) ** (-0.1e1 / 0.2e1)) * ((1 - t1391) ** (-0.1e1 / 0.2e1))

        if Bindx == 325:
            t1397 = np.cos(phi)
            t1398 = t1397 ** 2
            t1399 = t1397 * t1398
            t1402 = t1399 ** 2
            t1400 = t1398 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (-8 * t1398 - 35 * t1399 - 20 * t1400 + 24 * t1402 + 4 + (19 * t1400 + 7 * t1402 + 9) * t1397) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 326:
            t1404 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1404) ** (0.3e1 / 0.2e1)) * ((1 + t1404) ** (0.11e2 / 0.2e1)) * np.sin((4 * phi1 + 7 * phi2))

        if Bindx == 327:
            t1405 = np.cos(phi)
            t1406 = t1405 ** 2
            t1407 = t1405 * t1406
            t1410 = t1407 ** 2
            t1408 = t1406 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (9 * t1406 - 5 * t1407 - 5 * t1408 - 5 * t1410 + 1 + (9 * t1408 + t1410 - 5) * t1405) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 328:
            t1413 = np.cos(phi)
            t1414 = t1413 ** 2
            t1416 = t1414 ** 2
            t1415 = t1413 * t1414
            t1412 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1412 ** 2 * (-15 * t1414 + 45 * t1416 - 5 + (-20 + 7 * t1415) * t1415 + (-30 * t1416 + 18) * t1413) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t1413) ** (-0.1e1 / 0.2e1)) * ((1 - t1413) ** (-0.1e1 / 0.2e1))

        if Bindx == 329:
            t1419 = np.cos(phi)
            t1420 = t1419 ** 2
            t1421 = t1419 * t1420
            t1424 = t1421 ** 2
            t1422 = t1420 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (129 * t1420 - 415 * t1421 + 175 * t1422 - 325 * t1424 - 43 + (303 * t1422 + 91 * t1424 + 85) * t1419) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 330:
            t1427 = np.cos(phi)
            t1428 = t1427 ** 2
            t1430 = t1428 ** 2
            t1429 = t1427 * t1428
            t1426 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1426 ** 2 * (-175 * t1428 + 155 * t1430 + 25 + (160 + 91 * t1429) * t1429 + (-260 * t1430 + 4) * t1427) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t1427) ** (-0.1e1 / 0.2e1)) * ((1 - t1427) ** (-0.1e1 / 0.2e1))

        if Bindx == 331:
            t1433 = np.cos(phi)
            t1434 = t1433 ** 2
            t1435 = t1433 * t1434
            t1438 = t1435 ** 2
            t1436 = t1434 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (-121 * t1434 - 95 * t1435 + 305 * t1436 - 195 * t1438 + 11 + (-41 * t1436 + 91 * t1438 + 45) * t1433) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 332:
            t1446 = np.sin(phi)
            t1444 = t1446 ** 2
            t1440 = np.cos(phi)
            t1441 = t1440 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1444 ** 2 * (50 * t1440 + 1 + (-130 * t1440 - 12 + 91 * t1441) * t1441) * np.sin((5 * phi1 - 2 * phi2)) * ((1 - t1440) ** (-0.1e1 / 0.2e1)) * ((1 + t1440) ** (-0.1e1 / 0.2e1))

        if Bindx == 333:
            t1447 = np.cos(phi)
            t1448 = t1447 ** 2
            t1449 = t1447 * t1448
            t1452 = t1449 ** 2
            t1450 = t1448 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-75 * t1448 + 153 * t1449 + 135 * t1450 - 65 * t1452 + 5 + (-213 * t1450 + 91 * t1452 - 31) * t1447) * np.cos((5 * phi1 - phi2))

        if Bindx == 334:
            t1458 = np.sin(phi)
            t1455 = t1458 ** 2
            t1456 = t1458 * t1455
            t1454 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.231e3) * t1456 ** 2 * (13 * t1454 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t1454) ** (-0.1e1 / 0.2e1)) * ((1 - t1454) ** (-0.1e1 / 0.2e1))

        if Bindx == 335:
            t1459 = np.cos(phi)
            t1460 = t1459 ** 2
            t1461 = t1459 * t1460
            t1464 = t1461 ** 2
            t1462 = t1460 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (75 * t1460 + 153 * t1461 - 135 * t1462 + 65 * t1464 - 5 + (-213 * t1462 + 91 * t1464 - 31) * t1459) * np.cos((5 * phi1 + phi2))

        if Bindx == 336:
            t1472 = np.sin(phi)
            t1470 = t1472 ** 2
            t1466 = np.cos(phi)
            t1467 = t1466 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1470 ** 2 * (-50 * t1466 + 1 + (130 * t1466 - 12 + 91 * t1467) * t1467) * np.sin((5 * phi1 + 2 * phi2)) * ((1 - t1466) ** (-0.1e1 / 0.2e1)) * ((1 + t1466) ** (-0.1e1 / 0.2e1))

        if Bindx == 337:
            t1473 = np.cos(phi)
            t1474 = t1473 ** 2
            t1475 = t1473 * t1474
            t1478 = t1475 ** 2
            t1476 = t1474 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (121 * t1474 - 95 * t1475 - 305 * t1476 + 195 * t1478 - 11 + (-41 * t1476 + 91 * t1478 + 45) * t1473) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 338:
            t1481 = np.cos(phi)
            t1482 = t1481 ** 2
            t1484 = t1482 ** 2
            t1483 = t1481 * t1482
            t1480 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1480 ** 2 * (-175 * t1482 + 155 * t1484 + 25 + (-160 + 91 * t1483) * t1483 + (260 * t1484 - 4) * t1481) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t1481) ** (-0.1e1 / 0.2e1)) * ((1 - t1481) ** (-0.1e1 / 0.2e1))

        if Bindx == 339:
            t1487 = np.cos(phi)
            t1488 = t1487 ** 2
            t1489 = t1487 * t1488
            t1492 = t1489 ** 2
            t1490 = t1488 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (-129 * t1488 - 415 * t1489 - 175 * t1490 + 325 * t1492 + 43 + (303 * t1490 + 91 * t1492 + 85) * t1487) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 340:
            t1495 = np.cos(phi)
            t1496 = t1495 ** 2
            t1498 = t1496 ** 2
            t1497 = t1495 * t1496
            t1494 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1494 ** 2 * (-15 * t1496 + 45 * t1498 - 5 + (20 + 7 * t1497) * t1497 + (30 * t1498 - 18) * t1495) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t1495) ** (-0.1e1 / 0.2e1)) * ((1 - t1495) ** (-0.1e1 / 0.2e1))

        if Bindx == 341:
            t1501 = np.cos(phi)
            t1502 = t1501 ** 2
            t1503 = t1501 * t1502
            t1506 = t1503 ** 2
            t1504 = t1502 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-9 * t1502 - 5 * t1503 + 5 * t1504 + 5 * t1506 - 1 + (9 * t1504 + t1506 - 5) * t1501) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 342:
            t1508 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.7e1) * ((1 - t1508) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t1508)) * np.sin((6 * phi1 - 7 * phi2))

        if Bindx == 343:
            t1509 = np.cos(phi)
            t1510 = t1509 ** 2
            t1511 = t1509 * t1510
            t1514 = t1511 ** 2
            t1512 = t1510 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (48 * t1510 - 15 * t1511 - 50 * t1512 - 36 * t1514 + 6 + (69 * t1512 + 7 * t1514 - 29) * t1509) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 344:
            t1517 = np.cos(phi)
            t1518 = t1517 ** 2
            t1520 = t1518 ** 2
            t1519 = t1517 * t1518
            t1516 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1516 ** 2 * (-15 * t1518 + 45 * t1520 - 5 + (-20 + 7 * t1519) * t1519 + (-30 * t1520 + 18) * t1517) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t1517) ** (-0.1e1 / 0.2e1)) * ((1 - t1517) ** (-0.1e1 / 0.2e1))

        if Bindx == 345:
            t1523 = np.cos(phi)
            t1524 = t1523 ** 2
            t1525 = t1523 * t1524
            t1528 = t1525 ** 2
            t1526 = t1524 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (8 * t1524 - 35 * t1525 + 20 * t1526 - 24 * t1528 - 4 + (19 * t1526 + 7 * t1528 + 9) * t1523) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 346:
            t1536 = np.sin(phi)
            t1534 = t1536 ** 2
            t1530 = np.cos(phi)
            t1531 = t1530 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1534 ** 2 * (2 * t1530 - 3 + (-18 * t1530 + 12 + 7 * t1531) * t1531) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t1530) ** (-0.1e1 / 0.2e1)) * ((1 - t1530) ** (-0.1e1 / 0.2e1))

        if Bindx == 347:
            t1537 = np.cos(phi)
            t1538 = t1537 ** 2
            t1539 = t1537 * t1538
            t1542 = t1539 ** 2
            t1540 = t1538 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (-16 * t1538 + t1539 + 26 * t1540 - 12 * t1542 + 2 + (-11 * t1540 + 7 * t1542 + 3) * t1537) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 348:
            t1548 = np.sin(phi)
            t1545 = t1548 ** 2
            t1546 = t1548 * t1545
            t1544 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1546 ** 2 * (-1 + (-6 + 7 * t1544) * t1544) * np.sin((6 * phi1 - phi2)) * ((1 + t1544) ** (-0.1e1 / 0.2e1)) * ((1 - t1544) ** (-0.1e1 / 0.2e1))

        if Bindx == 349:
            t1549 = np.cos(phi)
            t1550 = t1549 ** 2
            t1551 = t1550 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * t1549 * np.cos((6 * phi1)) * (-3 * t1551 - 1 + (t1551 + 3) * t1550)

        if Bindx == 350:
            t1557 = np.sin(phi)
            t1554 = t1557 ** 2
            t1555 = t1557 * t1554
            t1553 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1555 ** 2 * (-1 + (6 + 7 * t1553) * t1553) * np.sin((6 * phi1 + phi2)) * ((1 + t1553) ** (-0.1e1 / 0.2e1)) * ((1 - t1553) ** (-0.1e1 / 0.2e1))

        if Bindx == 351:
            t1558 = np.cos(phi)
            t1559 = t1558 ** 2
            t1560 = t1558 * t1559
            t1563 = t1560 ** 2
            t1561 = t1559 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (16 * t1559 + t1560 - 26 * t1561 + 12 * t1563 - 2 + (-11 * t1561 + 7 * t1563 + 3) * t1558) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 352:
            t1571 = np.sin(phi)
            t1569 = t1571 ** 2
            t1565 = np.cos(phi)
            t1566 = t1565 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1569 ** 2 * (-2 * t1565 - 3 + (18 * t1565 + 12 + 7 * t1566) * t1566) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t1565) ** (-0.1e1 / 0.2e1)) * ((1 - t1565) ** (-0.1e1 / 0.2e1))

        if Bindx == 353:
            t1572 = np.cos(phi)
            t1573 = t1572 ** 2
            t1574 = t1572 * t1573
            t1577 = t1574 ** 2
            t1575 = t1573 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (-8 * t1573 - 35 * t1574 - 20 * t1575 + 24 * t1577 + 4 + (19 * t1575 + 7 * t1577 + 9) * t1572) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 354:
            t1580 = np.cos(phi)
            t1581 = t1580 ** 2
            t1583 = t1581 ** 2
            t1582 = t1580 * t1581
            t1579 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1579 ** 2 * (-15 * t1581 + 45 * t1583 - 5 + (20 + 7 * t1582) * t1582 + (30 * t1583 - 18) * t1580) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t1580) ** (-0.1e1 / 0.2e1)) * ((1 - t1580) ** (-0.1e1 / 0.2e1))

        if Bindx == 355:
            t1586 = np.cos(phi)
            t1587 = t1586 ** 2
            t1588 = t1586 * t1587
            t1591 = t1588 ** 2
            t1589 = t1587 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (-48 * t1587 - 15 * t1588 + 50 * t1589 + 36 * t1591 - 6 + (69 * t1589 + 7 * t1591 - 29) * t1586) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 356:
            t1593 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.7e1) * np.sqrt((1 - t1593)) * ((1 + t1593) ** (0.13e2 / 0.2e1)) * np.sin((6 * phi1 + 7 * phi2))

        if Bindx == 357:
            t1594 = np.cos(phi)
            t1595 = t1594 ** 2
            t1596 = t1594 * t1595
            t1599 = t1596 ** 2
            t1597 = t1595 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.cos((7 * phi1 - 7 * phi2)) * (-21 * t1595 + 35 * t1596 - 35 * t1597 - 7 * t1599 - 1 + (21 * t1597 + t1599 + 7) * t1594)

        if Bindx == 358:
            t1601 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.7e1) * ((1 - t1601) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t1601)) * np.sin((7 * phi1 - 6 * phi2))

        if Bindx == 359:
            t1602 = np.cos(phi)
            t1603 = t1602 ** 2
            t1604 = t1602 * t1603
            t1607 = t1604 ** 2
            t1605 = t1603 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (9 * t1603 - 5 * t1604 - 5 * t1605 - 5 * t1607 + 1 + (9 * t1605 + t1607 - 5) * t1602) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 360:
            t1609 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1609) ** (0.11e2 / 0.2e1)) * ((1 + t1609) ** (0.3e1 / 0.2e1)) * np.sin((7 * phi1 - 4 * phi2))

        if Bindx == 361:
            t1610 = np.cos(phi)
            t1611 = t1610 ** 2
            t1612 = t1610 * t1611
            t1615 = t1612 ** 2
            t1613 = t1611 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((7 * phi1 - 3 * phi2)) * (-t1611 - 5 * t1612 + 5 * t1613 - 3 * t1615 - 1 + (t1613 + t1615 + 3) * t1610)

        if Bindx == 362:
            t1617 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1617) ** (0.9e1 / 0.2e1)) * ((1 + t1617) ** (0.5e1 / 0.2e1)) * np.sin((7 * phi1 - 2 * phi2))

        if Bindx == 363:
            t1618 = np.cos(phi)
            t1619 = t1618 ** 2
            t1620 = t1618 * t1619
            t1625 = -3 * t1619 ** 2 + t1620 ** 2 - 1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((7 * phi1 - phi2)) * (t1625 * t1618 - 3 * t1619 + 3 * t1620 - t1625)

        if Bindx == 364:
            t1626 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.429e3) * ((1 - t1626) ** (0.7e1 / 0.2e1)) * ((1 + t1626) ** (0.7e1 / 0.2e1)) * np.sin((7 * phi1))

        if Bindx == 365:
            t1627 = np.cos(phi)
            t1628 = t1627 ** 2
            t1629 = t1627 * t1628
            t1635 = -3 * t1628 ** 2 + t1629 ** 2 - 1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((7 * phi1 + phi2)) * (t1635 * t1627 + 3 * t1628 + 3 * t1629 + t1635)

        if Bindx == 366:
            t1636 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1636) ** (0.5e1 / 0.2e1)) * ((1 + t1636) ** (0.9e1 / 0.2e1)) * np.sin((7 * phi1 + 2 * phi2))

        if Bindx == 367:
            t1637 = np.cos(phi)
            t1638 = t1637 ** 2
            t1639 = t1637 * t1638
            t1642 = t1639 ** 2
            t1640 = t1638 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((7 * phi1 + 3 * phi2)) * (t1638 - 5 * t1639 - 5 * t1640 + 3 * t1642 + 1 + (t1640 + t1642 + 3) * t1637)

        if Bindx == 368:
            t1644 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1644) ** (0.3e1 / 0.2e1)) * ((1 + t1644) ** (0.11e2 / 0.2e1)) * np.sin((7 * phi1 + 4 * phi2))

        if Bindx == 369:
            t1645 = np.cos(phi)
            t1646 = t1645 ** 2
            t1647 = t1645 * t1646
            t1650 = t1647 ** 2
            t1648 = t1646 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-9 * t1646 - 5 * t1647 + 5 * t1648 + 5 * t1650 - 1 + (9 * t1648 + t1650 - 5) * t1645) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 370:
            t1652 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.7e1) * ((1 + t1652) ** (0.13e2 / 0.2e1)) * np.sin((7 * phi1 + 6 * phi2)) * np.sqrt((1 - t1652))

        if Bindx == 371:
            t1653 = np.cos(phi)
            t1654 = t1653 ** 2
            t1655 = t1653 * t1654
            t1658 = t1655 ** 2
            t1656 = t1654 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.cos((7 * phi1 + 7 * phi2)) * (21 * t1654 + 35 * t1655 + 35 * t1656 + 7 * t1658 + 1 + (21 * t1656 + t1658 + 7) * t1653)

        if Bindx == 372:
            t1660 = np.cos(phi)
            t1661 = t1660 ** 2
            t1665 = -4 * t1661
            t1662 = t1661 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi2)) * (t1665 + 1 + (t1665 + 6 + t1662) * t1662)

        if Bindx == 373:
            t1670 = np.sin(phi)
            t1667 = t1670 ** 2
            t1668 = t1667 ** 2
            t1666 = np.cos(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t1666 * t1668 ** 2 * np.sin((7 * phi2)) * ((1 + t1666) ** (-0.1e1 / 0.2e1)) * ((1 - t1666) ** (-0.1e1 / 0.2e1))

        if Bindx == 374:
            t1671 = np.cos(phi)
            t1672 = t1671 ** 2
            t1673 = t1672 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t1672 + 1 + (-46 * t1672 + 48 + 15 * t1673) * t1673) * np.cos((6 * phi2))

        if Bindx == 375:
            t1680 = np.sin(phi)
            t1677 = t1680 ** 2
            t1678 = t1680 * t1677
            t1676 = np.cos(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t1676 * t1678 ** 2 * (5 * t1676 ** 2 - 1) * np.sin((5 * phi2)) * ((1 + t1676) ** (-0.1e1 / 0.2e1)) * ((1 - t1676) ** (-0.1e1 / 0.2e1))

        if Bindx == 376:
            t1681 = np.cos(phi)
            t1682 = t1681 ** 2
            t1683 = t1682 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t1682 + 1 + (-156 * t1682 + 118 + 65 * t1683) * t1683) * np.cos((4 * phi2))

        if Bindx == 377:
            t1691 = np.sin(phi)
            t1689 = t1691 ** 2
            t1686 = np.cos(phi)
            t1687 = t1686 ** 2
            tfunc[..., c] = 0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t1686 * t1689 ** 2 * (3 + (-26 + 39 * t1687) * t1687) * np.sin((3 * phi2)) * ((1 + t1686) ** (-0.1e1 / 0.2e1)) * ((1 - t1686) ** (-0.1e1 / 0.2e1))

        if Bindx == 378:
            t1692 = np.cos(phi)
            t1693 = t1692 ** 2
            t1694 = t1693 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t1693 + 1 + (-286 * t1693 + 176 + 143 * t1694) * t1694) * np.cos((2 * phi2))

        if Bindx == 379:
            t1698 = np.cos(phi)
            t1699 = t1698 ** 2
            t1700 = t1699 ** 2
            t1697 = np.sin(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * t1698 * t1697 ** 2 * (-1001 * t1700 - 35 + (715 * t1700 + 385) * t1699) * np.sin(phi2) * ((1 + t1698) ** (-0.1e1 / 0.2e1)) * ((1 - t1698) ** (-0.1e1 / 0.2e1))

        if Bindx == 380:
            t1702 = np.cos(phi)
            t1703 = t1702 ** 2
            t1704 = t1703 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t1703 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t1703 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t1704) * t1704

        if Bindx == 381:
            t1708 = np.cos(phi)
            t1709 = t1708 ** 2
            t1710 = t1709 ** 2
            t1707 = np.sin(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * t1708 * t1707 ** 2 * (-1001 * t1710 - 35 + (715 * t1710 + 385) * t1709) * np.sin(phi2) * ((1 + t1708) ** (-0.1e1 / 0.2e1)) * ((1 - t1708) ** (-0.1e1 / 0.2e1))

        if Bindx == 382:
            t1712 = np.cos(phi)
            t1713 = t1712 ** 2
            t1714 = t1713 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t1713 + 1 + (-286 * t1713 + 176 + 143 * t1714) * t1714) * np.cos((2 * phi2))

        if Bindx == 383:
            t1722 = np.sin(phi)
            t1720 = t1722 ** 2
            t1717 = np.cos(phi)
            t1718 = t1717 ** 2
            tfunc[..., c] = 0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t1717 * t1720 ** 2 * (3 + (-26 + 39 * t1718) * t1718) * np.sin((3 * phi2)) * ((1 + t1717) ** (-0.1e1 / 0.2e1)) * ((1 - t1717) ** (-0.1e1 / 0.2e1))

        if Bindx == 384:
            t1723 = np.cos(phi)
            t1724 = t1723 ** 2
            t1725 = t1724 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t1724 + 1 + (-156 * t1724 + 118 + 65 * t1725) * t1725) * np.cos((4 * phi2))

        if Bindx == 385:
            t1732 = np.sin(phi)
            t1729 = t1732 ** 2
            t1730 = t1732 * t1729
            t1728 = np.cos(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t1728 * t1730 ** 2 * (5 * t1728 ** 2 - 1) * np.sin((5 * phi2)) * ((1 + t1728) ** (-0.1e1 / 0.2e1)) * ((1 - t1728) ** (-0.1e1 / 0.2e1))

        if Bindx == 386:
            t1733 = np.cos(phi)
            t1734 = t1733 ** 2
            t1735 = t1734 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t1734 + 1 + (-46 * t1734 + 48 + 15 * t1735) * t1735) * np.cos((6 * phi2))

        if Bindx == 387:
            t1742 = np.sin(phi)
            t1739 = t1742 ** 2
            t1740 = t1739 ** 2
            t1738 = np.cos(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t1738 * t1740 ** 2 * np.sin((7 * phi2)) * ((1 + t1738) ** (-0.1e1 / 0.2e1)) * ((1 - t1738) ** (-0.1e1 / 0.2e1))

        if Bindx == 388:
            t1743 = np.cos(phi)
            t1744 = t1743 ** 2
            t1748 = -4 * t1744
            t1745 = t1744 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi2)) * (t1748 + 1 + (t1748 + 6 + t1745) * t1745)

        if Bindx == 389:
            t1749 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t1749) ** (0.9e1 / 0.2e1)) * ((1 + t1749) ** (0.7e1 / 0.2e1)) * np.sin((phi1 - 8 * phi2))

        if Bindx == 390:
            t1750 = np.cos(phi)
            t1751 = t1750 ** 2
            t1752 = t1750 * t1751
            t1755 = t1752 ** 2
            t1753 = t1751 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t1751 - 21 * t1752 - 25 * t1755 + 1 + (27 + 8 * t1753) * t1753 + (21 * t1753 - 7 * t1755 + 7) * t1750) * np.cos((phi1 - 7 * phi2))

        if Bindx == 391:
            t1764 = np.sin(phi)
            t1761 = t1764 ** 2
            t1762 = t1764 * t1761
            t1758 = np.cos(phi)
            t1759 = t1758 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t1762 ** 2 * (-15 * t1759 + 1 + (20 * t1759 - 6) * t1758) * np.sin((phi1 - 6 * phi2)) * ((1 + t1758) ** (-0.1e1 / 0.2e1)) * ((1 - t1758) ** (-0.1e1 / 0.2e1))

        if Bindx == 392:
            t1765 = np.cos(phi)
            t1766 = t1765 ** 2
            t1767 = t1765 * t1766
            t1770 = t1767 ** 2
            t1768 = t1766 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t1766 - 35 * t1767 - 101 * t1770 + 1 + (83 + 40 * t1768) * t1768 + (55 * t1768 - 25 * t1770 + 5) * t1765) * np.cos((phi1 - 5 * phi2))

        if Bindx == 393:
            t1780 = np.sin(phi)
            t1778 = t1780 ** 2
            t1773 = np.cos(phi)
            t1774 = t1773 ** 2
            t1776 = t1774 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t1778 ** 2 * (26 * t1774 - 65 * t1776 - 1 + (-104 * t1774 + 130 * t1776 + 14) * t1773) * np.sin((phi1 - 4 * phi2)) * ((1 + t1773) ** (-0.1e1 / 0.2e1)) * ((1 - t1773) ** (-0.1e1 / 0.2e1))

        if Bindx == 394:
            t1781 = np.cos(phi)
            t1782 = t1781 ** 2
            t1783 = t1781 * t1782
            t1786 = t1783 ** 2
            t1784 = t1782 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t1782 - 29 * t1783 - 221 * t1786 + 1 + (147 + 104 * t1784) * t1784 + (65 * t1784 - 39 * t1786 + 3) * t1781) * np.cos((phi1 - 3 * phi2))

        if Bindx == 395:
            t1790 = np.cos(phi)
            t1791 = t1790 ** 2
            t1792 = t1790 * t1791
            t1795 = t1792 ** 2
            t1793 = t1791 ** 2
            t1789 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1789 ** 2 * (-33 * t1791 + 352 * t1792 + 143 * t1793 - 143 * t1795 + 1 + (-858 * t1793 + 572 * t1795 - 34) * t1790) * np.sin((phi1 - 2 * phi2)) * ((1 + t1790) ** (-0.1e1 / 0.2e1)) * ((1 - t1790) ** (-0.1e1 / 0.2e1))

        if Bindx == 396:
            t1797 = np.cos(phi)
            t1798 = t1797 ** 2
            t1799 = t1797 * t1798
            t1802 = t1799 ** 2
            t1800 = t1798 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-1225 * t1798 - 385 * t1799 - 11011 * t1802 + 35 + (6545 + 5720 * t1800) * t1800 + (1001 * t1800 - 715 * t1802 + 35) * t1797) * np.cos(phi1 - phi2)

        if Bindx == 397:
            t1806 = np.cos(phi)
            t1807 = t1806 ** 2
            t1808 = t1807 ** 2
            t1805 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t1806 * t1805 ** 2 * (-1001 * t1808 - 35 + (715 * t1808 + 385) * t1807) * np.sin(phi1) * ((1 + t1806) ** (-0.1e1 / 0.2e1)) * ((1 - t1806) ** (-0.1e1 / 0.2e1))

        if Bindx == 398:
            t1810 = np.cos(phi)
            t1811 = t1810 ** 2
            t1812 = t1810 * t1811
            t1815 = t1812 ** 2
            t1813 = t1811 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-1225 * t1811 + 385 * t1812 - 11011 * t1815 + 35 + (6545 + 5720 * t1813) * t1813 + (-1001 * t1813 + 715 * t1815 - 35) * t1810) * np.cos(phi1 + phi2)

        if Bindx == 399:
            t1819 = np.cos(phi)
            t1820 = t1819 ** 2
            t1821 = t1819 * t1820
            t1824 = t1821 ** 2
            t1822 = t1820 ** 2
            t1818 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1818 ** 2 * (33 * t1820 + 352 * t1821 - 143 * t1822 + 143 * t1824 - 1 + (-858 * t1822 + 572 * t1824 - 34) * t1819) * np.sin((phi1 + 2 * phi2)) * ((1 + t1819) ** (-0.1e1 / 0.2e1)) * ((1 - t1819) ** (-0.1e1 / 0.2e1))

        if Bindx == 400:
            t1826 = np.cos(phi)
            t1827 = t1826 ** 2
            t1828 = t1826 * t1827
            t1831 = t1828 ** 2
            t1829 = t1827 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t1827 + 29 * t1828 - 221 * t1831 + 1 + (147 + 104 * t1829) * t1829 + (-65 * t1829 + 39 * t1831 - 3) * t1826) * np.cos((phi1 + 3 * phi2))

        if Bindx == 401:
            t1841 = np.sin(phi)
            t1839 = t1841 ** 2
            t1834 = np.cos(phi)
            t1835 = t1834 ** 2
            t1837 = t1835 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t1839 ** 2 * (-26 * t1835 + 65 * t1837 + 1 + (-104 * t1835 + 130 * t1837 + 14) * t1834) * np.sin((phi1 + 4 * phi2)) * ((1 + t1834) ** (-0.1e1 / 0.2e1)) * ((1 - t1834) ** (-0.1e1 / 0.2e1))

        if Bindx == 402:
            t1842 = np.cos(phi)
            t1843 = t1842 ** 2
            t1844 = t1842 * t1843
            t1847 = t1844 ** 2
            t1845 = t1843 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t1843 + 35 * t1844 - 101 * t1847 + 1 + (83 + 40 * t1845) * t1845 + (-55 * t1845 + 25 * t1847 - 5) * t1842) * np.cos((phi1 + 5 * phi2))

        if Bindx == 403:
            t1856 = np.sin(phi)
            t1853 = t1856 ** 2
            t1854 = t1856 * t1853
            t1850 = np.cos(phi)
            t1851 = t1850 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t1854 ** 2 * (15 * t1851 - 1 + (20 * t1851 - 6) * t1850) * np.sin((phi1 + 6 * phi2)) * ((1 + t1850) ** (-0.1e1 / 0.2e1)) * ((1 - t1850) ** (-0.1e1 / 0.2e1))

        if Bindx == 404:
            t1857 = np.cos(phi)
            t1858 = t1857 ** 2
            t1859 = t1857 * t1858
            t1862 = t1859 ** 2
            t1860 = t1858 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t1858 + 21 * t1859 - 25 * t1862 + 1 + (27 + 8 * t1860) * t1860 + (-21 * t1860 + 7 * t1862 - 7) * t1857) * np.cos((phi1 + 7 * phi2))

        if Bindx == 405:
            t1865 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t1865) ** (0.7e1 / 0.2e1)) * ((1 + t1865) ** (0.9e1 / 0.2e1)) * np.sin((phi1 + 8 * phi2))

        if Bindx == 406:
            t1866 = np.cos(phi)
            t1867 = t1866 ** 2
            t1868 = t1866 * t1867
            t1870 = t1868 ** 2
            t1871 = t1866 * t1870
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((2 * phi1 - 8 * phi2)) * (-6 * t1868 - 2 * t1870 - 2 * t1871 - 1 + (6 * t1868 + 2) * t1867 + (t1871 + 2) * t1866)

        if Bindx == 407:
            t1879 = np.sin(phi)
            t1876 = t1879 ** 2
            t1877 = t1879 * t1876
            t1873 = np.cos(phi)
            t1874 = t1873 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t1877 ** 2 * (-7 * t1874 + 1 + (4 * t1874 + 2) * t1873) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t1873) ** (-0.1e1 / 0.2e1)) * ((1 - t1873) ** (-0.1e1 / 0.2e1))

        if Bindx == 408:
            t1880 = np.cos(phi)
            t1881 = t1880 ** 2
            t1882 = t1880 * t1881
            t1885 = t1882 ** 2
            t1883 = t1881 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t1880 * (-5 * t1881 + 2 * t1882 + 7 * t1883 - 3 * t1885 + 1 + (-4 * t1883 + 2 * t1885) * t1880) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 409:
            t1894 = np.sin(phi)
            t1892 = t1894 ** 2
            t1887 = np.cos(phi)
            t1888 = t1887 ** 2
            t1890 = t1888 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t1892 ** 2 * (20 * t1888 - 35 * t1890 - 1 + (-14 * t1888 + 28 * t1890 + 2) * t1887) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t1887) ** (-0.1e1 / 0.2e1)) * ((1 - t1887) ** (-0.1e1 / 0.2e1))

        if Bindx == 410:
            t1895 = np.cos(phi)
            t1896 = t1895 ** 2
            t1897 = t1895 * t1896
            t1900 = t1897 ** 2
            t1898 = t1896 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t1896 - 89 * t1897 - 182 * t1900 + 1 + (116 + 91 * t1898) * t1898 + (169 * t1898 - 91 * t1900 + 11) * t1895) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 411:
            t1904 = np.cos(phi)
            t1905 = t1904 ** 2
            t1906 = t1904 * t1905
            t1909 = t1906 ** 2
            t1907 = t1905 ** 2
            t1903 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t1903 ** 2 * (-87 * t1905 + 240 * t1906 + 325 * t1907 - 273 * t1909 + 3 + (-546 * t1907 + 364 * t1909 - 26) * t1904) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t1904) ** (-0.1e1 / 0.2e1)) * ((1 - t1904) ** (-0.1e1 / 0.2e1))

        if Bindx == 412:
            t1911 = np.cos(phi)
            t1912 = t1911 ** 2
            t1913 = t1911 * t1912
            t1916 = t1913 ** 2
            t1914 = t1912 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (-512 * t1912 - 671 * t1913 - 4004 * t1916 + 16 + (2530 + 2002 * t1914) * t1914 + (1573 * t1914 - 1001 * t1916 + 67) * t1911) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 413:
            t1920 = np.cos(phi)
            t1921 = t1920 ** 2
            t1922 = t1920 * t1921
            t1925 = t1922 ** 2
            t1923 = t1921 ** 2
            t1919 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1919 ** 2 * (-33 * t1921 + 352 * t1922 + 143 * t1923 - 143 * t1925 + 1 + (-858 * t1923 + 572 * t1925 - 34) * t1920) * np.sin((2 * phi1 - phi2)) * ((1 + t1920) ** (-0.1e1 / 0.2e1)) * ((1 - t1920) ** (-0.1e1 / 0.2e1))

        if Bindx == 414:
            t1927 = np.cos(phi)
            t1928 = t1927 ** 2
            t1929 = t1928 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t1928 + 1 + (-286 * t1928 + 176 + 143 * t1929) * t1929) * np.cos((2 * phi1))

        if Bindx == 415:
            t1933 = np.cos(phi)
            t1934 = t1933 ** 2
            t1935 = t1933 * t1934
            t1938 = t1935 ** 2
            t1936 = t1934 ** 2
            t1932 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1932 ** 2 * (33 * t1934 + 352 * t1935 - 143 * t1936 + 143 * t1938 - 1 + (-858 * t1936 + 572 * t1938 - 34) * t1933) * np.sin((2 * phi1 + phi2)) * ((1 + t1933) ** (-0.1e1 / 0.2e1)) * ((1 - t1933) ** (-0.1e1 / 0.2e1))

        if Bindx == 416:
            t1940 = np.cos(phi)
            t1941 = t1940 ** 2
            t1942 = t1940 * t1941
            t1945 = t1942 ** 2
            t1943 = t1941 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (-512 * t1941 + 671 * t1942 - 4004 * t1945 + 16 + (2530 + 2002 * t1943) * t1943 + (-1573 * t1943 + 1001 * t1945 - 67) * t1940) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 417:
            t1949 = np.cos(phi)
            t1950 = t1949 ** 2
            t1951 = t1949 * t1950
            t1954 = t1951 ** 2
            t1952 = t1950 ** 2
            t1948 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t1948 ** 2 * (87 * t1950 + 240 * t1951 - 325 * t1952 + 273 * t1954 - 3 + (-546 * t1952 + 364 * t1954 - 26) * t1949) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t1949) ** (-0.1e1 / 0.2e1)) * ((1 - t1949) ** (-0.1e1 / 0.2e1))

        if Bindx == 418:
            t1956 = np.cos(phi)
            t1957 = t1956 ** 2
            t1958 = t1956 * t1957
            t1961 = t1958 ** 2
            t1959 = t1957 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t1957 + 89 * t1958 - 182 * t1961 + 1 + (116 + 91 * t1959) * t1959 + (-169 * t1959 + 91 * t1961 - 11) * t1956) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 419:
            t1971 = np.sin(phi)
            t1969 = t1971 ** 2
            t1964 = np.cos(phi)
            t1965 = t1964 ** 2
            t1967 = t1965 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t1969 ** 2 * (-20 * t1965 + 35 * t1967 + 1 + (-14 * t1965 + 28 * t1967 + 2) * t1964) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t1964) ** (-0.1e1 / 0.2e1)) * ((1 - t1964) ** (-0.1e1 / 0.2e1))

        if Bindx == 420:
            t1972 = np.cos(phi)
            t1973 = t1972 ** 2
            t1974 = t1972 * t1973
            t1977 = t1974 ** 2
            t1975 = t1973 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t1972 * (5 * t1973 + 2 * t1974 - 7 * t1975 + 3 * t1977 - 1 + (-4 * t1975 + 2 * t1977) * t1972) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 421:
            t1985 = np.sin(phi)
            t1982 = t1985 ** 2
            t1983 = t1985 * t1982
            t1979 = np.cos(phi)
            t1980 = t1979 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t1983 ** 2 * (7 * t1980 - 1 + (4 * t1980 + 2) * t1979) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t1979) ** (-0.1e1 / 0.2e1)) * ((1 - t1979) ** (-0.1e1 / 0.2e1))

        if Bindx == 422:
            t1986 = np.cos(phi)
            t1987 = t1986 ** 2
            t1988 = t1986 * t1987
            t1990 = t1988 ** 2
            t1991 = t1986 * t1990
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((2 * phi1 + 8 * phi2)) * (6 * t1988 - 2 * t1990 + 2 * t1991 - 1 + (-6 * t1988 + 2) * t1987 + (t1991 - 2) * t1986)

        if Bindx == 423:
            t1993 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t1993) ** (0.11e2 / 0.2e1)) * ((1 + t1993) ** (0.5e1 / 0.2e1)) * np.sin((3 * phi1 - 8 * phi2))

        if Bindx == 424:
            t1994 = np.cos(phi)
            t1995 = t1994 ** 2
            t1996 = t1994 * t1995
            t1999 = t1996 ** 2
            t1997 = t1995 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-21 * t1994 * t1999 + t1994 + 21 * t1995 - 23 * t1996 - t1999 - 3 + (43 * t1994 - 25 + 8 * t1997) * t1997) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 425:
            t2009 = np.sin(phi)
            t2007 = t2009 ** 2
            t2002 = np.cos(phi)
            t2003 = t2002 ** 2
            t2005 = t2003 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t2007 ** 2 * (12 * t2003 - 27 * t2005 - 1 + (10 * t2003 + 12 * t2005 - 6) * t2002) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t2002) ** (-0.1e1 / 0.2e1)) * ((1 - t2002) ** (-0.1e1 / 0.2e1))

        if Bindx == 426:
            t2010 = np.cos(phi)
            t2011 = t2010 ** 2
            t2012 = t2010 * t2011
            t2015 = t2012 ** 2
            t2013 = t2011 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t2011 - 107 * t2012 - 63 * t2015 - 1 + (-11 + 56 * t2013) * t2013 + (195 * t2013 - 105 * t2015 + 17) * t2010) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 427:
            t2019 = np.cos(phi)
            t2020 = t2019 ** 2
            t2021 = t2019 * t2020
            t2024 = t2021 ** 2
            t2022 = t2020 ** 2
            t2018 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t2018 ** 2 * (-115 * t2020 + 34 * t2021 + 351 * t2022 - 273 * t2024 + 5 + (-182 * t2022 + 182 * t2024 - 2) * t2019) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t2019) ** (-0.1e1 / 0.2e1)) * ((1 - t2019) ** (-0.1e1 / 0.2e1))

        if Bindx == 428:
            t2026 = np.cos(phi)
            t2027 = t2026 ** 2
            t2028 = t2026 * t2027
            t2031 = t2028 ** 2
            t2029 = t2027 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-459 * t2027 - 2107 * t2028 - 3913 * t2031 + 17 + (2235 + 2184 * t2029) * t2029 + (4251 * t2029 - 2457 * t2031 + 249) * t2026) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 429:
            t2035 = np.cos(phi)
            t2036 = t2035 ** 2
            t2037 = t2035 * t2036
            t2040 = t2037 ** 2
            t2038 = t2036 ** 2
            t2034 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t2034 ** 2 * (-87 * t2036 + 240 * t2037 + 325 * t2038 - 273 * t2040 + 3 + (-546 * t2038 + 364 * t2040 - 26) * t2035) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t2035) ** (-0.1e1 / 0.2e1)) * ((1 - t2035) ** (-0.1e1 / 0.2e1))

        if Bindx == 430:
            t2042 = np.cos(phi)
            t2043 = t2042 ** 2
            t2044 = t2042 * t2043
            t2047 = t2044 ** 2
            t2045 = t2043 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t2043 - 29 * t2044 - 221 * t2047 + 1 + (147 + 104 * t2045) * t2045 + (65 * t2045 - 39 * t2047 + 3) * t2042) * np.cos((3 * phi1 - phi2))

        if Bindx == 431:
            t2055 = np.sin(phi)
            t2053 = t2055 ** 2
            t2050 = np.cos(phi)
            t2051 = t2050 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t2050 * t2053 ** 2 * (3 + (-26 + 39 * t2051) * t2051) * np.sin((3 * phi1)) * ((1 + t2050) ** (-0.1e1 / 0.2e1)) * ((1 - t2050) ** (-0.1e1 / 0.2e1))

        if Bindx == 432:
            t2056 = np.cos(phi)
            t2057 = t2056 ** 2
            t2058 = t2056 * t2057
            t2061 = t2058 ** 2
            t2059 = t2057 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t2057 + 29 * t2058 - 221 * t2061 + 1 + (147 + 104 * t2059) * t2059 + (-65 * t2059 + 39 * t2061 - 3) * t2056) * np.cos((3 * phi1 + phi2))

        if Bindx == 433:
            t2065 = np.cos(phi)
            t2066 = t2065 ** 2
            t2067 = t2065 * t2066
            t2070 = t2067 ** 2
            t2068 = t2066 ** 2
            t2064 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t2064 ** 2 * (87 * t2066 + 240 * t2067 - 325 * t2068 + 273 * t2070 - 3 + (-546 * t2068 + 364 * t2070 - 26) * t2065) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t2065) ** (-0.1e1 / 0.2e1)) * ((1 - t2065) ** (-0.1e1 / 0.2e1))

        if Bindx == 434:
            t2072 = np.cos(phi)
            t2073 = t2072 ** 2
            t2074 = t2072 * t2073
            t2077 = t2074 ** 2
            t2075 = t2073 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-459 * t2073 + 2107 * t2074 - 3913 * t2077 + 17 + (2235 + 2184 * t2075) * t2075 + (-4251 * t2075 + 2457 * t2077 - 249) * t2072) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 435:
            t2081 = np.cos(phi)
            t2082 = t2081 ** 2
            t2083 = t2081 * t2082
            t2086 = t2083 ** 2
            t2084 = t2082 ** 2
            t2080 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t2080 ** 2 * (115 * t2082 + 34 * t2083 - 351 * t2084 + 273 * t2086 - 5 + (-182 * t2084 + 182 * t2086 - 2) * t2081) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t2081) ** (-0.1e1 / 0.2e1)) * ((1 - t2081) ** (-0.1e1 / 0.2e1))

        if Bindx == 436:
            t2088 = np.cos(phi)
            t2089 = t2088 ** 2
            t2090 = t2088 * t2089
            t2093 = t2090 ** 2
            t2091 = t2089 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t2089 + 107 * t2090 - 63 * t2093 - 1 + (-11 + 56 * t2091) * t2091 + (-195 * t2091 + 105 * t2093 - 17) * t2088) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 437:
            t2103 = np.sin(phi)
            t2101 = t2103 ** 2
            t2096 = np.cos(phi)
            t2097 = t2096 ** 2
            t2099 = t2097 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t2101 ** 2 * (-12 * t2097 + 27 * t2099 + 1 + (10 * t2097 + 12 * t2099 - 6) * t2096) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t2096) ** (-0.1e1 / 0.2e1)) * ((1 - t2096) ** (-0.1e1 / 0.2e1))

        if Bindx == 438:
            t2104 = np.cos(phi)
            t2105 = t2104 ** 2
            t2106 = t2104 * t2105
            t2109 = t2106 ** 2
            t2107 = t2105 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (21 * t2104 * t2109 - t2104 + 21 * t2105 + 23 * t2106 - t2109 - 3 + (-43 * t2104 - 25 + 8 * t2107) * t2107) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 439:
            t2112 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t2112) ** (0.5e1 / 0.2e1)) * ((1 + t2112) ** (0.11e2 / 0.2e1)) * np.sin((3 * phi1 + 8 * phi2))

        if Bindx == 440:
            t2113 = np.cos(phi)
            t2121 = -4 * t2113
            t2114 = t2113 ** 2
            t2116 = t2114 ** 2
            t2115 = t2113 * t2114
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((4 * phi1 - 8 * phi2)) * (4 * t2114 + t2121 + 1 + (4 * t2113 - 10 + t2116) * t2116 + (4 + (t2121 + 4) * t2115) * t2115)

        if Bindx == 441:
            t2129 = np.sin(phi)
            t2127 = t2129 ** 2
            t2122 = np.cos(phi)
            t2123 = t2122 ** 2
            t2125 = t2123 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2127 ** 2 * (-2 * t2123 - 7 * t2125 + 1 + (8 * t2123 + 2 * t2125 - 2) * t2122) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t2122) ** (-0.1e1 / 0.2e1)) * ((1 - t2122) ** (-0.1e1 / 0.2e1))

        if Bindx == 442:
            t2130 = np.cos(phi)
            t2131 = t2130 ** 2
            t2133 = t2131 ** 2
            t2132 = t2130 * t2131
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (-t2130 + 10 * t2131 - 1 + (21 * t2130 - 20 + 5 * t2133) * t2133 + (-5 + (-15 * t2130 + 6) * t2132) * t2132) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 443:
            t2139 = np.cos(phi)
            t2140 = t2139 ** 2
            t2141 = t2139 * t2140
            t2144 = t2141 ** 2
            t2142 = t2140 ** 2
            t2138 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2138 ** 2 * (-45 * t2140 - 110 * t2141 + 185 * t2142 - 175 * t2144 + 3 + (42 * t2142 + 70 * t2144 + 30) * t2139) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t2139) ** (-0.1e1 / 0.2e1)) * ((1 - t2139) ** (-0.1e1 / 0.2e1))

        if Bindx == 444:
            t2146 = np.cos(phi)
            t2147 = t2146 ** 2
            t2148 = t2146 * t2147
            t2151 = t2148 ** 2
            t2149 = t2147 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (180 * t2147 - 770 * t2148 - 364 * t2151 - 9 + (-230 + 455 * t2149) * t2149 + (1534 * t2149 - 910 * t2151 + 114) * t2146) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 445:
            t2155 = np.cos(phi)
            t2156 = t2155 ** 2
            t2157 = t2155 * t2156
            t2160 = t2157 ** 2
            t2158 = t2156 ** 2
            t2154 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t2154 ** 2 * (-115 * t2156 + 34 * t2157 + 351 * t2158 - 273 * t2160 + 5 + (-182 * t2158 + 182 * t2160 - 2) * t2155) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t2155) ** (-0.1e1 / 0.2e1)) * ((1 - t2155) ** (-0.1e1 / 0.2e1))

        if Bindx == 446:
            t2162 = np.cos(phi)
            t2163 = t2162 ** 2
            t2164 = t2162 * t2163
            t2167 = t2164 ** 2
            t2165 = t2163 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t2163 - 89 * t2164 - 182 * t2167 + 1 + (116 + 91 * t2165) * t2165 + (169 * t2165 - 91 * t2167 + 11) * t2162) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 447:
            t2177 = np.sin(phi)
            t2175 = t2177 ** 2
            t2170 = np.cos(phi)
            t2171 = t2170 ** 2
            t2173 = t2171 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t2175 ** 2 * (26 * t2171 - 65 * t2173 - 1 + (-104 * t2171 + 130 * t2173 + 14) * t2170) * np.sin((4 * phi1 - phi2)) * ((1 + t2170) ** (-0.1e1 / 0.2e1)) * ((1 - t2170) ** (-0.1e1 / 0.2e1))

        if Bindx == 448:
            t2178 = np.cos(phi)
            t2179 = t2178 ** 2
            t2180 = t2179 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t2179 + 1 + (-156 * t2179 + 118 + 65 * t2180) * t2180) * np.cos((4 * phi1))

        if Bindx == 449:
            t2190 = np.sin(phi)
            t2188 = t2190 ** 2
            t2183 = np.cos(phi)
            t2184 = t2183 ** 2
            t2186 = t2184 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t2188 ** 2 * (-26 * t2184 + 65 * t2186 + 1 + (-104 * t2184 + 130 * t2186 + 14) * t2183) * np.sin((4 * phi1 + phi2)) * ((1 + t2183) ** (-0.1e1 / 0.2e1)) * ((1 - t2183) ** (-0.1e1 / 0.2e1))

        if Bindx == 450:
            t2191 = np.cos(phi)
            t2192 = t2191 ** 2
            t2193 = t2191 * t2192
            t2196 = t2193 ** 2
            t2194 = t2192 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t2192 + 89 * t2193 - 182 * t2196 + 1 + (116 + 91 * t2194) * t2194 + (-169 * t2194 + 91 * t2196 - 11) * t2191) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 451:
            t2200 = np.cos(phi)
            t2201 = t2200 ** 2
            t2202 = t2200 * t2201
            t2205 = t2202 ** 2
            t2203 = t2201 ** 2
            t2199 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t2199 ** 2 * (115 * t2201 + 34 * t2202 - 351 * t2203 + 273 * t2205 - 5 + (-182 * t2203 + 182 * t2205 - 2) * t2200) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t2200) ** (-0.1e1 / 0.2e1)) * ((1 - t2200) ** (-0.1e1 / 0.2e1))

        if Bindx == 452:
            t2207 = np.cos(phi)
            t2208 = t2207 ** 2
            t2209 = t2207 * t2208
            t2212 = t2209 ** 2
            t2210 = t2208 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (180 * t2208 + 770 * t2209 - 364 * t2212 - 9 + (-230 + 455 * t2210) * t2210 + (-1534 * t2210 + 910 * t2212 - 114) * t2207) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 453:
            t2216 = np.cos(phi)
            t2217 = t2216 ** 2
            t2218 = t2216 * t2217
            t2221 = t2218 ** 2
            t2219 = t2217 ** 2
            t2215 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2215 ** 2 * (45 * t2217 - 110 * t2218 - 185 * t2219 + 175 * t2221 - 3 + (42 * t2219 + 70 * t2221 + 30) * t2216) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t2216) ** (-0.1e1 / 0.2e1)) * ((1 - t2216) ** (-0.1e1 / 0.2e1))

        if Bindx == 454:
            t2223 = np.cos(phi)
            t2224 = t2223 ** 2
            t2226 = t2224 ** 2
            t2225 = t2223 * t2224
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (t2223 + 10 * t2224 - 1 + (-21 * t2223 - 20 + 5 * t2226) * t2226 + (5 + (15 * t2223 + 6) * t2225) * t2225) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 455:
            t2238 = np.sin(phi)
            t2236 = t2238 ** 2
            t2231 = np.cos(phi)
            t2232 = t2231 ** 2
            t2234 = t2232 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2236 ** 2 * (2 * t2232 + 7 * t2234 - 1 + (8 * t2232 + 2 * t2234 - 2) * t2231) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t2231) ** (-0.1e1 / 0.2e1)) * ((1 - t2231) ** (-0.1e1 / 0.2e1))

        if Bindx == 456:
            t2239 = np.cos(phi)
            t2240 = t2239 ** 2
            t2241 = t2239 * t2240
            t2247 = 4 * t2241 ** 2
            t2242 = t2240 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((4 * phi1 + 8 * phi2)) * (4 * t2240 - 4 * t2241 + t2247 + 1 + (-10 + t2242) * t2242 + (-4 * t2242 + t2247 + 4) * t2239)

        if Bindx == 457:
            t2248 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2248) ** (0.13e2 / 0.2e1)) * ((1 + t2248) ** (0.3e1 / 0.2e1)) * np.sin((5 * phi1 - 8 * phi2))

        if Bindx == 458:
            t2249 = np.cos(phi)
            t2250 = t2249 ** 2
            t2251 = t2249 * t2250
            t2254 = t2251 ** 2
            t2252 = t2250 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2250 + 47 * t2251 + 47 * t2254 + 5 + (-65 + 8 * t2252) * t2252 + (5 * t2252 - 35 * t2254 - 17) * t2249) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 459:
            t2258 = np.cos(phi)
            t2259 = t2258 ** 2
            t2260 = t2258 * t2259
            t2263 = t2260 ** 2
            t2261 = t2259 ** 2
            t2257 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2257 ** 2 * (35 * t2259 - 80 * t2260 + 15 * t2261 - 75 * t2263 - 7 + (82 * t2261 + 20 * t2263 + 10) * t2258) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t2258) ** (-0.1e1 / 0.2e1)) * ((1 - t2258) ** (-0.1e1 / 0.2e1))

        if Bindx == 460:
            t2265 = np.cos(phi)
            t2266 = t2265 ** 2
            t2267 = t2265 * t2266
            t2270 = t2267 ** 2
            t2268 = t2266 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (495 * t2266 - 145 * t2267 + 469 * t2270 - 45 + (-1135 + 280 * t2268) * t2268 + (1025 * t2268 - 875 * t2270 - 69) * t2265) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 461:
            t2274 = np.cos(phi)
            t2275 = t2274 ** 2
            t2276 = t2274 * t2275
            t2279 = t2276 ** 2
            t2277 = t2275 ** 2
            t2273 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2273 ** 2 * (-45 * t2275 - 110 * t2276 + 185 * t2277 - 175 * t2279 + 3 + (42 * t2277 + 70 * t2279 + 30) * t2274) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t2274) ** (-0.1e1 / 0.2e1)) * ((1 - t2274) ** (-0.1e1 / 0.2e1))

        if Bindx == 462:
            t2281 = np.cos(phi)
            t2282 = t2281 ** 2
            t2283 = t2281 * t2282
            t2286 = t2283 ** 2
            t2284 = t2282 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t2282 - 107 * t2283 - 63 * t2286 - 1 + (-11 + 56 * t2284) * t2284 + (195 * t2284 - 105 * t2286 + 17) * t2281) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 463:
            t2296 = np.sin(phi)
            t2294 = t2296 ** 2
            t2289 = np.cos(phi)
            t2290 = t2289 ** 2
            t2292 = t2290 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t2294 ** 2 * (20 * t2290 - 35 * t2292 - 1 + (-14 * t2290 + 28 * t2292 + 2) * t2289) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t2289) ** (-0.1e1 / 0.2e1)) * ((1 - t2289) ** (-0.1e1 / 0.2e1))

        if Bindx == 464:
            t2297 = np.cos(phi)
            t2298 = t2297 ** 2
            t2299 = t2297 * t2298
            t2302 = t2299 ** 2
            t2300 = t2298 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t2298 - 35 * t2299 - 101 * t2302 + 1 + (83 + 40 * t2300) * t2300 + (55 * t2300 - 25 * t2302 + 5) * t2297) * np.cos((5 * phi1 - phi2))

        if Bindx == 465:
            t2309 = np.sin(phi)
            t2306 = t2309 ** 2
            t2307 = t2309 * t2306
            t2305 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t2305 * t2307 ** 2 * (5 * t2305 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t2305) ** (-0.1e1 / 0.2e1)) * ((1 - t2305) ** (-0.1e1 / 0.2e1))

        if Bindx == 466:
            t2310 = np.cos(phi)
            t2311 = t2310 ** 2
            t2312 = t2310 * t2311
            t2315 = t2312 ** 2
            t2313 = t2311 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t2311 + 35 * t2312 - 101 * t2315 + 1 + (83 + 40 * t2313) * t2313 + (-55 * t2313 + 25 * t2315 - 5) * t2310) * np.cos((5 * phi1 + phi2))

        if Bindx == 467:
            t2325 = np.sin(phi)
            t2323 = t2325 ** 2
            t2318 = np.cos(phi)
            t2319 = t2318 ** 2
            t2321 = t2319 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t2323 ** 2 * (-20 * t2319 + 35 * t2321 + 1 + (-14 * t2319 + 28 * t2321 + 2) * t2318) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t2318) ** (-0.1e1 / 0.2e1)) * ((1 - t2318) ** (-0.1e1 / 0.2e1))

        if Bindx == 468:
            t2326 = np.cos(phi)
            t2327 = t2326 ** 2
            t2328 = t2326 * t2327
            t2331 = t2328 ** 2
            t2329 = t2327 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t2327 + 107 * t2328 - 63 * t2331 - 1 + (-11 + 56 * t2329) * t2329 + (-195 * t2329 + 105 * t2331 - 17) * t2326) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 469:
            t2335 = np.cos(phi)
            t2336 = t2335 ** 2
            t2337 = t2335 * t2336
            t2340 = t2337 ** 2
            t2338 = t2336 ** 2
            t2334 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2334 ** 2 * (45 * t2336 - 110 * t2337 - 185 * t2338 + 175 * t2340 - 3 + (42 * t2338 + 70 * t2340 + 30) * t2335) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t2335) ** (-0.1e1 / 0.2e1)) * ((1 - t2335) ** (-0.1e1 / 0.2e1))

        if Bindx == 470:
            t2342 = np.cos(phi)
            t2343 = t2342 ** 2
            t2344 = t2342 * t2343
            t2347 = t2344 ** 2
            t2345 = t2343 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (495 * t2343 + 145 * t2344 + 469 * t2347 - 45 + (-1135 + 280 * t2345) * t2345 + (-1025 * t2345 + 875 * t2347 + 69) * t2342) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 471:
            t2351 = np.cos(phi)
            t2352 = t2351 ** 2
            t2353 = t2351 * t2352
            t2356 = t2353 ** 2
            t2354 = t2352 ** 2
            t2350 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2350 ** 2 * (-35 * t2352 - 80 * t2353 - 15 * t2354 + 75 * t2356 + 7 + (82 * t2354 + 20 * t2356 + 10) * t2351) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t2351) ** (-0.1e1 / 0.2e1)) * ((1 - t2351) ** (-0.1e1 / 0.2e1))

        if Bindx == 472:
            t2358 = np.cos(phi)
            t2359 = t2358 ** 2
            t2360 = t2358 * t2359
            t2363 = t2360 ** 2
            t2361 = t2359 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2359 - 47 * t2360 + 47 * t2363 + 5 + (-65 + 8 * t2361) * t2361 + (-5 * t2361 + 35 * t2363 + 17) * t2358) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 473:
            t2366 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2366) ** (0.3e1 / 0.2e1)) * ((1 + t2366) ** (0.13e2 / 0.2e1)) * np.sin((5 * phi1 + 8 * phi2))

        if Bindx == 474:
            t2367 = np.cos(phi)
            t2368 = t2367 ** 2
            t2374 = -14 * t2368
            t2369 = t2367 * t2368
            t2371 = t2369 ** 2
            t2372 = t2367 * t2371
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (14 * t2371 - 6 * t2372 + t2374 - 1 + (t2374 + 14) * t2369 + (t2372 + 6) * t2367) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 475:
            t2376 = np.cos(phi)
            t2377 = t2376 ** 2
            t2378 = t2377 ** 2
            t2379 = t2376 * t2378
            t2380 = t2376 * t2379
            t2375 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2375 ** 2 * (21 * t2377 - 35 * t2378 + 42 * t2379 - 21 * t2380 + 3 + (4 * t2380 - 14) * t2376) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t2376) ** (-0.1e1 / 0.2e1)) * ((1 - t2376) ** (-0.1e1 / 0.2e1))

        if Bindx == 476:
            t2382 = np.cos(phi)
            t2383 = t2382 ** 2
            t2384 = t2382 * t2383
            t2387 = t2384 ** 2
            t2385 = t2383 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (175 * t2384 + 196 * t2387 + 16 + (-210 + 30 * t2385) * t2385 + (-21 * t2385 - 135 * t2387 - 51) * t2382) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 477:
            t2391 = np.cos(phi)
            t2392 = t2391 ** 2
            t2393 = t2391 * t2392
            t2396 = t2393 ** 2
            t2394 = t2392 ** 2
            t2390 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2390 ** 2 * (35 * t2392 - 80 * t2393 + 15 * t2394 - 75 * t2396 - 7 + (82 * t2394 + 20 * t2396 + 10) * t2391) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t2391) ** (-0.1e1 / 0.2e1)) * ((1 - t2391) ** (-0.1e1 / 0.2e1))

        if Bindx == 478:
            t2398 = np.cos(phi)
            t2399 = t2398 ** 2
            t2401 = t2399 ** 2
            t2400 = t2398 * t2399
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (-t2398 + 10 * t2399 - 1 + (21 * t2398 - 20 + 5 * t2401) * t2401 + (-5 + (-15 * t2398 + 6) * t2400) * t2400) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 479:
            t2413 = np.sin(phi)
            t2411 = t2413 ** 2
            t2406 = np.cos(phi)
            t2407 = t2406 ** 2
            t2409 = t2407 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t2411 ** 2 * (12 * t2407 - 27 * t2409 - 1 + (10 * t2407 + 12 * t2409 - 6) * t2406) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t2406) ** (-0.1e1 / 0.2e1)) * ((1 - t2406) ** (-0.1e1 / 0.2e1))

        if Bindx == 480:
            t2414 = np.cos(phi)
            t2415 = t2414 ** 2
            t2416 = t2414 * t2415
            t2419 = t2416 ** 2
            t2417 = t2415 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t2414 * (-5 * t2415 + 2 * t2416 + 7 * t2417 - 3 * t2419 + 1 + (-4 * t2417 + 2 * t2419) * t2414) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 481:
            t2427 = np.sin(phi)
            t2424 = t2427 ** 2
            t2425 = t2427 * t2424
            t2421 = np.cos(phi)
            t2422 = t2421 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t2425 ** 2 * (-15 * t2422 + 1 + (20 * t2422 - 6) * t2421) * np.sin((6 * phi1 - phi2)) * ((1 + t2421) ** (-0.1e1 / 0.2e1)) * ((1 - t2421) ** (-0.1e1 / 0.2e1))

        if Bindx == 482:
            t2428 = np.cos(phi)
            t2429 = t2428 ** 2
            t2430 = t2429 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t2429 + 1 + (-46 * t2429 + 48 + 15 * t2430) * t2430) * np.cos((6 * phi1))

        if Bindx == 483:
            t2439 = np.sin(phi)
            t2436 = t2439 ** 2
            t2437 = t2439 * t2436
            t2433 = np.cos(phi)
            t2434 = t2433 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t2437 ** 2 * (15 * t2434 - 1 + (20 * t2434 - 6) * t2433) * np.sin((6 * phi1 + phi2)) * ((1 + t2433) ** (-0.1e1 / 0.2e1)) * ((1 - t2433) ** (-0.1e1 / 0.2e1))

        if Bindx == 484:
            t2440 = np.cos(phi)
            t2441 = t2440 ** 2
            t2442 = t2440 * t2441
            t2445 = t2442 ** 2
            t2443 = t2441 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t2440 * (5 * t2441 + 2 * t2442 - 7 * t2443 + 3 * t2445 - 1 + (-4 * t2443 + 2 * t2445) * t2440) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 485:
            t2454 = np.sin(phi)
            t2452 = t2454 ** 2
            t2447 = np.cos(phi)
            t2448 = t2447 ** 2
            t2450 = t2448 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t2452 ** 2 * (-12 * t2448 + 27 * t2450 + 1 + (10 * t2448 + 12 * t2450 - 6) * t2447) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t2447) ** (-0.1e1 / 0.2e1)) * ((1 - t2447) ** (-0.1e1 / 0.2e1))

        if Bindx == 486:
            t2455 = np.cos(phi)
            t2456 = t2455 ** 2
            t2458 = t2456 ** 2
            t2457 = t2455 * t2456
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (t2455 + 10 * t2456 - 1 + (-21 * t2455 - 20 + 5 * t2458) * t2458 + (5 + (15 * t2455 + 6) * t2457) * t2457) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 487:
            t2464 = np.cos(phi)
            t2465 = t2464 ** 2
            t2466 = t2464 * t2465
            t2469 = t2466 ** 2
            t2467 = t2465 ** 2
            t2463 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2463 ** 2 * (-35 * t2465 - 80 * t2466 - 15 * t2467 + 75 * t2469 + 7 + (82 * t2467 + 20 * t2469 + 10) * t2464) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t2464) ** (-0.1e1 / 0.2e1)) * ((1 - t2464) ** (-0.1e1 / 0.2e1))

        if Bindx == 488:
            t2471 = np.cos(phi)
            t2472 = t2471 ** 2
            t2473 = t2471 * t2472
            t2476 = t2473 ** 2
            t2474 = t2472 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (-175 * t2473 + 196 * t2476 + 16 + (-210 + 30 * t2474) * t2474 + (21 * t2474 + 135 * t2476 + 51) * t2471) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 489:
            t2480 = np.cos(phi)
            t2481 = t2480 ** 2
            t2482 = t2481 ** 2
            t2483 = t2480 * t2482
            t2484 = t2480 * t2483
            t2479 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2479 ** 2 * (-21 * t2481 + 35 * t2482 + 42 * t2483 + 21 * t2484 - 3 + (4 * t2484 - 14) * t2480) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t2480) ** (-0.1e1 / 0.2e1)) * ((1 - t2480) ** (-0.1e1 / 0.2e1))

        if Bindx == 490:
            t2486 = np.cos(phi)
            t2487 = t2486 ** 2
            t2488 = t2486 * t2487
            t2490 = t2488 ** 2
            t2491 = t2486 * t2490
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (-14 * t2488 + 14 * t2490 + 6 * t2491 - 1 + (14 * t2488 - 14) * t2487 + (t2491 - 6) * t2486) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 491:
            t2493 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * ((1 - t2493) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t2493)) * np.sin((7 * phi1 - 8 * phi2))

        if Bindx == 492:
            t2494 = np.cos(phi)
            t2495 = t2494 ** 2
            t2496 = t2494 * t2495
            t2499 = t2496 ** 2
            t2497 = t2495 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-91 * t2495 + 77 * t2496 + 119 * t2499 - 7 + (35 + 8 * t2497) * t2497 + (-133 * t2497 - 49 * t2499 + 41) * t2494) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 493:
            t2503 = np.cos(phi)
            t2504 = t2503 ** 2
            t2505 = t2504 ** 2
            t2506 = t2503 * t2505
            t2507 = t2503 * t2506
            t2502 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2502 ** 2 * (21 * t2504 - 35 * t2505 + 42 * t2506 - 21 * t2507 + 3 + (4 * t2507 - 14) * t2503) * np.sin((7 * phi1 - 6 * phi2)) * ((1 - t2503) ** (-0.1e1 / 0.2e1)) * ((1 + t2503) ** (-0.1e1 / 0.2e1))

        if Bindx == 494:
            t2509 = np.cos(phi)
            t2510 = t2509 ** 2
            t2511 = t2509 * t2510
            t2514 = t2511 ** 2
            t2512 = t2510 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2510 + 47 * t2511 + 47 * t2514 + 5 + (-65 + 8 * t2512) * t2512 + (5 * t2512 - 35 * t2514 - 17) * t2509) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 495:
            t2524 = np.sin(phi)
            t2522 = t2524 ** 2
            t2517 = np.cos(phi)
            t2518 = t2517 ** 2
            t2520 = t2518 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2522 ** 2 * (-2 * t2518 - 7 * t2520 + 1 + (8 * t2518 + 2 * t2520 - 2) * t2517) * np.sin((7 * phi1 - 4 * phi2)) * ((1 - t2517) ** (-0.1e1 / 0.2e1)) * ((1 + t2517) ** (-0.1e1 / 0.2e1))

        if Bindx == 496:
            t2525 = np.cos(phi)
            t2526 = t2525 ** 2
            t2527 = t2525 * t2526
            t2530 = t2527 ** 2
            t2528 = t2526 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-21 * t2525 * t2530 + t2525 + 21 * t2526 - 23 * t2527 - t2530 - 3 + (43 * t2525 - 25 + 8 * t2528) * t2528) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 497:
            t2539 = np.sin(phi)
            t2536 = t2539 ** 2
            t2537 = t2539 * t2536
            t2533 = np.cos(phi)
            t2534 = t2533 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t2537 ** 2 * (-7 * t2534 + 1 + (4 * t2534 + 2) * t2533) * np.sin((7 * phi1 - 2 * phi2)) * ((1 - t2533) ** (-0.1e1 / 0.2e1)) * ((1 + t2533) ** (-0.1e1 / 0.2e1))

        if Bindx == 498:
            t2540 = np.cos(phi)
            t2541 = t2540 ** 2
            t2542 = t2540 * t2541
            t2545 = t2542 ** 2
            t2543 = t2541 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t2541 - 21 * t2542 - 25 * t2545 + 1 + (27 + 8 * t2543) * t2543 + (21 * t2543 - 7 * t2545 + 7) * t2540) * np.cos((7 * phi1 - phi2))

        if Bindx == 499:
            t2552 = np.sin(phi)
            t2549 = t2552 ** 2
            t2550 = t2549 ** 2
            t2548 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t2548 * t2550 ** 2 * np.sin((7 * phi1)) * ((1 - t2548) ** (-0.1e1 / 0.2e1)) * ((1 + t2548) ** (-0.1e1 / 0.2e1))

        if Bindx == 500:
            t2553 = np.cos(phi)
            t2554 = t2553 ** 2
            t2555 = t2553 * t2554
            t2558 = t2555 ** 2
            t2556 = t2554 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t2554 + 21 * t2555 - 25 * t2558 + 1 + (27 + 8 * t2556) * t2556 + (-21 * t2556 + 7 * t2558 - 7) * t2553) * np.cos((7 * phi1 + phi2))

        if Bindx == 501:
            t2567 = np.sin(phi)
            t2564 = t2567 ** 2
            t2565 = t2567 * t2564
            t2561 = np.cos(phi)
            t2562 = t2561 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t2565 ** 2 * (7 * t2562 - 1 + (4 * t2562 + 2) * t2561) * np.sin((7 * phi1 + 2 * phi2)) * ((1 - t2561) ** (-0.1e1 / 0.2e1)) * ((1 + t2561) ** (-0.1e1 / 0.2e1))

        if Bindx == 502:
            t2568 = np.cos(phi)
            t2569 = t2568 ** 2
            t2570 = t2568 * t2569
            t2573 = t2570 ** 2
            t2571 = t2569 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (21 * t2568 * t2573 - t2568 + 21 * t2569 + 23 * t2570 - t2573 - 3 + (-43 * t2568 - 25 + 8 * t2571) * t2571) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 503:
            t2583 = np.sin(phi)
            t2581 = t2583 ** 2
            t2576 = np.cos(phi)
            t2577 = t2576 ** 2
            t2579 = t2577 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2581 ** 2 * (2 * t2577 + 7 * t2579 - 1 + (8 * t2577 + 2 * t2579 - 2) * t2576) * np.sin((7 * phi1 + 4 * phi2)) * ((1 - t2576) ** (-0.1e1 / 0.2e1)) * ((1 + t2576) ** (-0.1e1 / 0.2e1))

        if Bindx == 504:
            t2584 = np.cos(phi)
            t2585 = t2584 ** 2
            t2586 = t2584 * t2585
            t2589 = t2586 ** 2
            t2587 = t2585 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2585 - 47 * t2586 + 47 * t2589 + 5 + (-65 + 8 * t2587) * t2587 + (-5 * t2587 + 35 * t2589 + 17) * t2584) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 505:
            t2593 = np.cos(phi)
            t2594 = t2593 ** 2
            t2595 = t2594 ** 2
            t2596 = t2593 * t2595
            t2597 = t2593 * t2596
            t2592 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2592 ** 2 * (-21 * t2594 + 35 * t2595 + 42 * t2596 + 21 * t2597 - 3 + (4 * t2597 - 14) * t2593) * np.sin((7 * phi1 + 6 * phi2)) * ((1 - t2593) ** (-0.1e1 / 0.2e1)) * ((1 + t2593) ** (-0.1e1 / 0.2e1))

        if Bindx == 506:
            t2599 = np.cos(phi)
            t2600 = t2599 ** 2
            t2601 = t2599 * t2600
            t2604 = t2601 ** 2
            t2602 = t2600 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-91 * t2600 - 77 * t2601 + 119 * t2604 - 7 + (35 + 8 * t2602) * t2602 + (133 * t2602 + 49 * t2604 - 41) * t2599) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 507:
            t2607 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt((1 - t2607)) * ((1 + t2607) ** (0.15e2 / 0.2e1)) * np.sin((7 * phi1 + 8 * phi2))

        if Bindx == 508:
            t2608 = np.cos(phi)
            t2616 = -8 * t2608
            t2609 = t2608 ** 2
            t2611 = t2609 ** 2
            t2610 = t2608 * t2609
            tfunc[..., c] = 0.17e2 / 0.256e3 * np.sqrt(0.2e1) * np.cos((8 * phi1 - 8 * phi2)) * (28 * t2609 + t2616 + 1 + (-56 * t2608 + 70 + t2611) * t2611 + (-56 + (t2616 + 28) * t2610) * t2610)

        if Bindx == 509:
            t2617 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * ((1 - t2617) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t2617)) * np.sin((8 * phi1 - 7 * phi2))

        if Bindx == 510:
            t2618 = np.cos(phi)
            t2619 = t2618 ** 2
            t2625 = -14 * t2619
            t2620 = t2618 * t2619
            t2622 = t2620 ** 2
            t2623 = t2618 * t2622
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (14 * t2622 - 6 * t2623 + t2625 - 1 + (t2625 + 14) * t2620 + (t2623 + 6) * t2618) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 511:
            t2626 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2626) ** (0.13e2 / 0.2e1)) * ((1 + t2626) ** (0.3e1 / 0.2e1)) * np.sin((8 * phi1 - 5 * phi2))

        if Bindx == 512:
            t2627 = np.cos(phi)
            t2635 = -4 * t2627
            t2628 = t2627 ** 2
            t2630 = t2628 ** 2
            t2629 = t2627 * t2628
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((8 * phi1 - 4 * phi2)) * (4 * t2628 + t2635 + 1 + (4 * t2627 - 10 + t2630) * t2630 + (4 + (t2635 + 4) * t2629) * t2629)

        if Bindx == 513:
            t2636 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t2636) ** (0.11e2 / 0.2e1)) * ((1 + t2636) ** (0.5e1 / 0.2e1)) * np.sin((8 * phi1 - 3 * phi2))

        if Bindx == 514:
            t2637 = np.cos(phi)
            t2638 = t2637 ** 2
            t2639 = t2637 * t2638
            t2641 = t2639 ** 2
            t2642 = t2637 * t2641
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((8 * phi1 - 2 * phi2)) * (-6 * t2639 - 2 * t2641 - 2 * t2642 - 1 + (6 * t2639 + 2) * t2638 + (t2642 + 2) * t2637)

        if Bindx == 515:
            t2644 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t2644) ** (0.9e1 / 0.2e1)) * ((1 + t2644) ** (0.7e1 / 0.2e1)) * np.sin((8 * phi1 - phi2))

        if Bindx == 516:
            t2645 = np.cos(phi)
            t2646 = t2645 ** 2
            t2650 = -4 * t2646
            t2647 = t2646 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t2650 + 1 + (t2650 + 6 + t2647) * t2647)

        if Bindx == 517:
            t2651 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t2651) ** (0.7e1 / 0.2e1)) * ((1 + t2651) ** (0.9e1 / 0.2e1)) * np.sin((8 * phi1 + phi2))

        if Bindx == 518:
            t2652 = np.cos(phi)
            t2653 = t2652 ** 2
            t2654 = t2652 * t2653
            t2656 = t2654 ** 2
            t2657 = t2652 * t2656
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((8 * phi1 + 2 * phi2)) * (6 * t2654 - 2 * t2656 + 2 * t2657 - 1 + (-6 * t2654 + 2) * t2653 + (t2657 - 2) * t2652)

        if Bindx == 519:
            t2659 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t2659) ** (0.5e1 / 0.2e1)) * ((1 + t2659) ** (0.11e2 / 0.2e1)) * np.sin((8 * phi1 + 3 * phi2))

        if Bindx == 520:
            t2660 = np.cos(phi)
            t2661 = t2660 ** 2
            t2662 = t2660 * t2661
            t2668 = 4 * t2662 ** 2
            t2663 = t2661 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((8 * phi1 + 4 * phi2)) * (4 * t2661 - 4 * t2662 + t2668 + 1 + (-10 + t2663) * t2663 + (-4 * t2663 + t2668 + 4) * t2660)

        if Bindx == 521:
            t2669 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2669) ** (0.3e1 / 0.2e1)) * ((1 + t2669) ** (0.13e2 / 0.2e1)) * np.sin((8 * phi1 + 5 * phi2))

        if Bindx == 522:
            t2670 = np.cos(phi)
            t2671 = t2670 ** 2
            t2672 = t2670 * t2671
            t2674 = t2672 ** 2
            t2675 = t2670 * t2674
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (-14 * t2672 + 14 * t2674 + 6 * t2675 - 1 + (14 * t2672 - 14) * t2671 + (t2675 - 6) * t2670) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 523:
            t2677 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * ((1 + t2677) ** (0.15e2 / 0.2e1)) * np.sin((8 * phi1 + 7 * phi2)) * np.sqrt((1 - t2677))

        if Bindx == 524:
            t2678 = np.cos(phi)
            t2686 = 8 * t2678
            t2679 = t2678 ** 2
            t2681 = t2679 ** 2
            t2680 = t2678 * t2679
            tfunc[..., c] = 0.17e2 / 0.256e3 * np.sqrt(0.2e1) * np.cos((8 * phi1 + 8 * phi2)) * (28 * t2679 + t2686 + 1 + (56 * t2678 + 70 + t2681) * t2681 + (56 + (t2686 + 28) * t2680) * t2680)

        if Bindx == 525:
            t2687 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.12155e5) * ((1 - t2687) ** (0.9e1 / 0.2e1)) * ((1 + t2687) ** (0.9e1 / 0.2e1)) * np.sin((9 * phi2))

        if Bindx == 526:
            t2688 = np.cos(phi)
            t2689 = t2688 ** 2
            t2693 = -4 * t2689
            t2690 = t2689 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.12155e5) * t2688 * np.cos((8 * phi2)) * (t2693 + 1 + (t2693 + 6 + t2690) * t2690)

        if Bindx == 527:
            t2698 = np.sin(phi)
            t2695 = t2698 ** 2
            t2696 = t2695 ** 2
            t2694 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * t2696 ** 2 * (17 * t2694 ** 2 - 1) * np.sin((7 * phi2)) * ((1 - t2694) ** (-0.1e1 / 0.2e1)) * ((1 + t2694) ** (-0.1e1 / 0.2e1))

        if Bindx == 528:
            t2699 = np.cos(phi)
            t2700 = t2699 ** 2
            t2701 = t2700 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t2699 * (-26 * t2700 + 3 + (-54 * t2700 + 60 + 17 * t2701) * t2701) * np.cos((6 * phi2))

        if Bindx == 529:
            t2710 = np.sin(phi)
            t2707 = t2710 ** 2
            t2708 = t2710 * t2707
            t2704 = np.cos(phi)
            t2705 = t2704 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * t2708 ** 2 * (1 + (-30 + 85 * t2705) * t2705) * np.sin((5 * phi2)) * ((1 - t2704) ** (-0.1e1 / 0.2e1)) * ((1 + t2704) ** (-0.1e1 / 0.2e1))

        if Bindx == 530:
            t2711 = np.cos(phi)
            t2712 = t2711 ** 2
            t2713 = t2712 ** 2
            tfunc[..., c] = 0.57e2 / 0.64e2 * t2711 * np.sqrt(0.5005e4) * (-12 * t2712 + 1 + (-44 * t2712 + 38 + 17 * t2713) * t2713) * np.cos((4 * phi2))

        if Bindx == 531:
            t2722 = np.sin(phi)
            t2720 = t2722 ** 2
            t2716 = np.cos(phi)
            t2717 = t2716 ** 2
            t2718 = t2717 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * t2720 ** 2 * (-195 * t2718 - 1 + (221 * t2718 + 39) * t2717) * np.sin((3 * phi2)) * ((1 - t2716) ** (-0.1e1 / 0.2e1)) * ((1 + t2716) ** (-0.1e1 / 0.2e1))

        if Bindx == 532:
            t2723 = np.cos(phi)
            t2724 = t2723 ** 2
            t2725 = t2724 ** 2
            tfunc[..., c] = -0.57e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t2723 * (-98 * t2724 + 7 + (-494 * t2724 + 364 + 221 * t2725) * t2725) * np.cos((2 * phi2))

        if Bindx == 533:
            t2729 = np.cos(phi)
            t2730 = t2729 ** 2
            t2731 = t2730 ** 2
            t2728 = np.sin(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.5e1) * t2728 ** 2 * (-308 * t2730 + 7 + (-4004 * t2730 + 2002 + 2431 * t2731) * t2731) * np.sin(phi2) * ((1 - t2729) ** (-0.1e1 / 0.2e1)) * ((1 + t2729) ** (-0.1e1 / 0.2e1))

        if Bindx == 534:
            t2734 = np.cos(phi)
            t2735 = t2734 ** 2
            t2736 = t2735 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * t2734 * (-4620 * t2735 + 315 + (-25740 * t2735 + 18018 + 12155 * t2736) * t2736)

        if Bindx == 535:
            t2740 = np.cos(phi)
            t2741 = t2740 ** 2
            t2742 = t2741 ** 2
            t2739 = np.sin(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.5e1) * t2739 ** 2 * (-308 * t2741 + 7 + (-4004 * t2741 + 2002 + 2431 * t2742) * t2742) * np.sin(phi2) * ((1 - t2740) ** (-0.1e1 / 0.2e1)) * ((1 + t2740) ** (-0.1e1 / 0.2e1))

        if Bindx == 536:
            t2745 = np.cos(phi)
            t2746 = t2745 ** 2
            t2747 = t2746 ** 2
            tfunc[..., c] = -0.57e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t2745 * (-98 * t2746 + 7 + (-494 * t2746 + 364 + 221 * t2747) * t2747) * np.cos((2 * phi2))

        if Bindx == 537:
            t2756 = np.sin(phi)
            t2754 = t2756 ** 2
            t2750 = np.cos(phi)
            t2751 = t2750 ** 2
            t2752 = t2751 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * t2754 ** 2 * (-195 * t2752 - 1 + (221 * t2752 + 39) * t2751) * np.sin((3 * phi2)) * ((1 - t2750) ** (-0.1e1 / 0.2e1)) * ((1 + t2750) ** (-0.1e1 / 0.2e1))

        if Bindx == 538:
            t2757 = np.cos(phi)
            t2758 = t2757 ** 2
            t2759 = t2758 ** 2
            tfunc[..., c] = 0.57e2 / 0.64e2 * t2757 * np.sqrt(0.5005e4) * (-12 * t2758 + 1 + (-44 * t2758 + 38 + 17 * t2759) * t2759) * np.cos((4 * phi2))

        if Bindx == 539:
            t2768 = np.sin(phi)
            t2765 = t2768 ** 2
            t2766 = t2768 * t2765
            t2762 = np.cos(phi)
            t2763 = t2762 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * t2766 ** 2 * (1 + (-30 + 85 * t2763) * t2763) * np.sin((5 * phi2)) * ((1 - t2762) ** (-0.1e1 / 0.2e1)) * ((1 + t2762) ** (-0.1e1 / 0.2e1))

        if Bindx == 540:
            t2769 = np.cos(phi)
            t2770 = t2769 ** 2
            t2771 = t2770 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t2769 * (-26 * t2770 + 3 + (-54 * t2770 + 60 + 17 * t2771) * t2771) * np.cos((6 * phi2))

        if Bindx == 541:
            t2778 = np.sin(phi)
            t2775 = t2778 ** 2
            t2776 = t2775 ** 2
            t2774 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * t2776 ** 2 * (17 * t2774 ** 2 - 1) * np.sin((7 * phi2)) * ((1 - t2774) ** (-0.1e1 / 0.2e1)) * ((1 + t2774) ** (-0.1e1 / 0.2e1))

        if Bindx == 542:
            t2779 = np.cos(phi)
            t2780 = t2779 ** 2
            t2784 = -4 * t2780
            t2781 = t2780 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.12155e5) * t2779 * np.cos((8 * phi2)) * (t2784 + 1 + (t2784 + 6 + t2781) * t2781)

        if Bindx == 543:
            t2785 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.12155e5) * ((1 - t2785) ** (0.9e1 / 0.2e1)) * ((1 + t2785) ** (0.9e1 / 0.2e1)) * np.sin((9 * phi2))

        if Bindx == 544:
            t2786 = np.cos(phi)
            t2787 = t2786 ** 2
            t2788 = t2786 * t2787
            t2789 = t2787 ** 2
            t2795 = -4 * t2788 ** 2 + 1 + (6 + t2789) * t2789
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((phi1 - 9 * phi2)) * (t2795 * t2786 + 4 * t2787 - 4 * t2788 - t2795)

        if Bindx == 545:
            t2800 = np.sin(phi)
            t2797 = t2800 ** 2
            t2798 = t2797 ** 2
            t2796 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t2798 ** 2 * (-1 + (-8 + 9 * t2796) * t2796) * np.sin((phi1 - 8 * phi2)) * ((1 - t2796) ** (-0.1e1 / 0.2e1)) * ((1 + t2796) ** (-0.1e1 / 0.2e1))

        if Bindx == 546:
            t2801 = np.cos(phi)
            t2802 = t2801 ** 2
            t2804 = t2802 ** 2
            t2808 = t2804 ** 2
            t2803 = t2801 * t2802
            t2806 = t2803 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (140 * t2802 - 276 * t2803 - 378 * t2804 + 364 * t2806 - 119 * t2808 - 7 + (582 * t2804 - 500 * t2806 + 153 * t2808 + 41) * t2801) * np.cos((phi1 - 7 * phi2))

        if Bindx == 547:
            t2817 = np.sin(phi)
            t2814 = t2817 ** 2
            t2815 = t2817 * t2814
            t2810 = np.cos(phi)
            t2811 = t2810 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t2815 ** 2 * (6 * t2810 + 1 + (-34 * t2810 - 24 + 51 * t2811) * t2811) * np.sin((phi1 - 6 * phi2)) * ((1 - t2810) ** (-0.1e1 / 0.2e1)) * ((1 + t2810) ** (-0.1e1 / 0.2e1))

        if Bindx == 548:
            t2818 = np.cos(phi)
            t2819 = t2818 ** 2
            t2821 = t2819 ** 2
            t2825 = t2821 ** 2
            t2820 = t2818 * t2819
            t2823 = t2820 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (32 * t2819 - 136 * t2820 - 146 * t2821 + 200 * t2823 - 85 * t2825 - 1 + (386 * t2821 - 416 * t2823 + 153 * t2825 + 13) * t2818) * np.cos((phi1 - 5 * phi2))

        if Bindx == 549:
            t2835 = np.sin(phi)
            t2833 = t2835 ** 2
            t2827 = np.cos(phi)
            t2828 = t2827 ** 2
            t2830 = t2828 ** 2
            t2829 = t2827 * t2828
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t2833 ** 2 * (35 * t2828 - 155 * t2830 - 1 + (40 + 153 * t2829) * t2829 + (-68 * t2830 - 4) * t2827) * np.sin((phi1 - 4 * phi2)) * ((1 - t2827) ** (-0.1e1 / 0.2e1)) * ((1 + t2827) ** (-0.1e1 / 0.2e1))

        if Bindx == 550:
            t2836 = np.cos(phi)
            t2837 = t2836 ** 2
            t2839 = t2837 ** 2
            t2843 = t2839 ** 2
            t2838 = t2836 * t2837
            t2841 = t2838 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (40 * t2837 - 352 * t2838 - 234 * t2839 + 416 * t2841 - 221 * t2843 - 1 + (1222 * t2839 - 1560 * t2841 + 663 * t2843 + 27) * t2836) * np.cos((phi1 - 3 * phi2))

        if Bindx == 551:
            t2846 = np.cos(phi)
            t2847 = t2846 ** 2
            t2848 = t2846 * t2847
            t2851 = t2848 ** 2
            t2849 = t2847 ** 2
            t2845 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t2845 ** 2 * (-294 * t2847 - 182 * t2848 - 3458 * t2851 + 7 + (1820 + 1989 * t2849) * t2849 + (546 * t2849 - 442 * t2851 + 14) * t2846) * np.sin((phi1 - 2 * phi2)) * ((1 - t2846) ** (-0.1e1 / 0.2e1)) * ((1 + t2846) ** (-0.1e1 / 0.2e1))

        if Bindx == 552:
            t2854 = np.cos(phi)
            t2855 = t2854 ** 2
            t2857 = t2855 ** 2
            t2861 = t2857 ** 2
            t2856 = t2854 * t2855
            t2859 = t2856 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (308 * t2855 - 8932 * t2856 - 2002 * t2857 + 4004 * t2859 - 2431 * t2861 - 7 + (34034 * t2857 - 47476 * t2859 + 21879 * t2861 + 623) * t2854) * np.cos(phi1 - phi2)

        if Bindx == 553:
            t2864 = np.cos(phi)
            t2865 = t2864 ** 2
            t2866 = t2865 ** 2
            t2863 = np.sin(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.5e1) * t2863 ** 2 * (-308 * t2865 + 7 + (-4004 * t2865 + 2002 + 2431 * t2866) * t2866) * np.sin(phi1) * ((1 - t2864) ** (-0.1e1 / 0.2e1)) * ((1 + t2864) ** (-0.1e1 / 0.2e1))

        if Bindx == 554:
            t2869 = np.cos(phi)
            t2870 = t2869 ** 2
            t2872 = t2870 ** 2
            t2876 = t2872 ** 2
            t2871 = t2869 * t2870
            t2874 = t2871 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (-308 * t2870 - 8932 * t2871 + 2002 * t2872 - 4004 * t2874 + 2431 * t2876 + 7 + (34034 * t2872 - 47476 * t2874 + 21879 * t2876 + 623) * t2869) * np.cos(phi1 + phi2)

        if Bindx == 555:
            t2879 = np.cos(phi)
            t2880 = t2879 ** 2
            t2881 = t2879 * t2880
            t2884 = t2881 ** 2
            t2882 = t2880 ** 2
            t2878 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t2878 ** 2 * (-294 * t2880 + 182 * t2881 - 3458 * t2884 + 7 + (1820 + 1989 * t2882) * t2882 + (-546 * t2882 + 442 * t2884 - 14) * t2879) * np.sin((phi1 + 2 * phi2)) * ((1 - t2879) ** (-0.1e1 / 0.2e1)) * ((1 + t2879) ** (-0.1e1 / 0.2e1))

        if Bindx == 556:
            t2887 = np.cos(phi)
            t2888 = t2887 ** 2
            t2890 = t2888 ** 2
            t2894 = t2890 ** 2
            t2889 = t2887 * t2888
            t2892 = t2889 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (-40 * t2888 - 352 * t2889 + 234 * t2890 - 416 * t2892 + 221 * t2894 + 1 + (1222 * t2890 - 1560 * t2892 + 663 * t2894 + 27) * t2887) * np.cos((phi1 + 3 * phi2))

        if Bindx == 557:
            t2904 = np.sin(phi)
            t2902 = t2904 ** 2
            t2896 = np.cos(phi)
            t2897 = t2896 ** 2
            t2899 = t2897 ** 2
            t2898 = t2896 * t2897
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t2902 ** 2 * (35 * t2897 - 155 * t2899 - 1 + (-40 + 153 * t2898) * t2898 + (68 * t2899 + 4) * t2896) * np.sin((phi1 + 4 * phi2)) * ((1 - t2896) ** (-0.1e1 / 0.2e1)) * ((1 + t2896) ** (-0.1e1 / 0.2e1))

        if Bindx == 558:
            t2905 = np.cos(phi)
            t2906 = t2905 ** 2
            t2908 = t2906 ** 2
            t2912 = t2908 ** 2
            t2907 = t2905 * t2906
            t2910 = t2907 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (-32 * t2906 - 136 * t2907 + 146 * t2908 - 200 * t2910 + 85 * t2912 + 1 + (386 * t2908 - 416 * t2910 + 153 * t2912 + 13) * t2905) * np.cos((phi1 + 5 * phi2))

        if Bindx == 559:
            t2921 = np.sin(phi)
            t2918 = t2921 ** 2
            t2919 = t2921 * t2918
            t2914 = np.cos(phi)
            t2915 = t2914 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t2919 ** 2 * (-6 * t2914 + 1 + (34 * t2914 - 24 + 51 * t2915) * t2915) * np.sin((phi1 + 6 * phi2)) * ((1 + t2914) ** (-0.1e1 / 0.2e1)) * ((1 - t2914) ** (-0.1e1 / 0.2e1))

        if Bindx == 560:
            t2922 = np.cos(phi)
            t2923 = t2922 ** 2
            t2925 = t2923 ** 2
            t2929 = t2925 ** 2
            t2924 = t2922 * t2923
            t2927 = t2924 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (-140 * t2923 - 276 * t2924 + 378 * t2925 - 364 * t2927 + 119 * t2929 + 7 + (582 * t2925 - 500 * t2927 + 153 * t2929 + 41) * t2922) * np.cos((phi1 + 7 * phi2))

        if Bindx == 561:
            t2935 = np.sin(phi)
            t2932 = t2935 ** 2
            t2933 = t2932 ** 2
            t2931 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t2933 ** 2 * (-1 + (8 + 9 * t2931) * t2931) * np.sin((phi1 + 8 * phi2)) * ((1 + t2931) ** (-0.1e1 / 0.2e1)) * ((1 - t2931) ** (-0.1e1 / 0.2e1))

        if Bindx == 562:
            t2936 = np.cos(phi)
            t2937 = t2936 ** 2
            t2938 = t2936 * t2937
            t2939 = t2937 ** 2
            t2947 = -4 * t2938 ** 2 + 1 + (6 + t2939) * t2939
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((phi1 + 9 * phi2)) * (t2936 * t2947 - 4 * t2937 - 4 * t2938 + t2947)

        if Bindx == 563:
            t2948 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t2948) ** (0.11e2 / 0.2e1)) * ((1 + t2948) ** (0.7e1 / 0.2e1)) * np.sin((2 * phi1 - 9 * phi2))

        if Bindx == 564:
            t2949 = np.cos(phi)
            t2950 = t2949 ** 2
            t2952 = t2950 ** 2
            t2956 = t2952 ** 2
            t2951 = t2949 * t2950
            t2954 = t2951 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (22 * t2950 + 6 * t2951 - 54 * t2952 + 50 * t2954 - 16 * t2956 - 2 + (12 * t2952 - 22 * t2954 + 9 * t2956 - 5) * t2949) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 565:
            t2965 = np.sin(phi)
            t2962 = t2965 ** 2
            t2963 = t2965 * t2962
            t2958 = np.cos(phi)
            t2959 = t2958 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2963 ** 2 * (70 * t2958 - 1 + (-238 * t2958 + 16 + 153 * t2959) * t2959) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t2958) ** (-0.1e1 / 0.2e1)) * ((1 - t2958) ** (-0.1e1 / 0.2e1))

        if Bindx == 566:
            t2966 = np.cos(phi)
            t2967 = t2966 ** 2
            t2969 = t2967 ** 2
            t2973 = t2969 ** 2
            t2968 = t2966 * t2967
            t2971 = t2968 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (75 * t2967 - 44 * t2968 - 277 * t2969 + 341 * t2971 - 136 * t2973 - 3 + (178 * t2969 - 240 * t2971 + 102 * t2973 + 4) * t2966) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 567:
            t2983 = np.sin(phi)
            t2981 = t2983 ** 2
            t2975 = np.cos(phi)
            t2976 = t2975 ** 2
            t2978 = t2976 ** 2
            t2977 = t2975 * t2976
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t2981 ** 2 * (29 * t2976 - 125 * t2978 - 1 + (130 + 153 * t2977) * t2977 + (-170 * t2978 - 16) * t2975) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t2975) ** (-0.1e1 / 0.2e1)) * ((1 - t2975) ** (-0.1e1 / 0.2e1))

        if Bindx == 568:
            t2984 = np.cos(phi)
            t2985 = t2984 ** 2
            t2987 = t2985 ** 2
            t2991 = t2987 ** 2
            t2986 = t2984 * t2985
            t2989 = t2986 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (35 * t2985 - 82 * t2986 - 179 * t2987 + 281 * t2989 - 136 * t2991 - 1 + (272 * t2987 - 350 * t2989 + 153 * t2991 + 7) * t2984) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 569:
            t2994 = np.cos(phi)
            t2995 = t2994 ** 2
            t2996 = t2994 * t2995
            t2999 = t2996 ** 2
            t2997 = t2995 ** 2
            t2993 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t2993 ** 2 * (-114 * t2995 - 234 * t2996 - 1170 * t2999 + 3 + (650 + 663 * t2997) * t2997 + (624 * t2997 - 442 * t2999 + 20) * t2994) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t2994) ** (-0.1e1 / 0.2e1)) * ((1 - t2994) ** (-0.1e1 / 0.2e1))

        if Bindx == 570:
            t3002 = np.cos(phi)
            t3003 = t3002 ** 2
            t3005 = t3003 ** 2
            t3009 = t3005 ** 2
            t3004 = t3002 * t3003
            t3007 = t3004 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (287 * t3003 - 1876 * t3004 - 1729 * t3005 + 3185 * t3007 - 1768 * t3009 - 7 + (6734 * t3005 - 8944 * t3007 + 3978 * t3009 + 140) * t3002) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 571:
            t3012 = np.cos(phi)
            t3013 = t3012 ** 2
            t3014 = t3012 * t3013
            t3017 = t3014 ** 2
            t3015 = t3013 ** 2
            t3011 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t3011 ** 2 * (-294 * t3013 - 182 * t3014 - 3458 * t3017 + 7 + (1820 + 1989 * t3015) * t3015 + (546 * t3015 - 442 * t3017 + 14) * t3012) * np.sin((2 * phi1 - phi2)) * ((1 + t3012) ** (-0.1e1 / 0.2e1)) * ((1 - t3012) ** (-0.1e1 / 0.2e1))

        if Bindx == 572:
            t3020 = np.cos(phi)
            t3021 = t3020 ** 2
            t3022 = t3021 ** 2
            tfunc[..., c] = -0.57e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t3020 * (-98 * t3021 + 7 + (-494 * t3021 + 364 + 221 * t3022) * t3022) * np.cos((2 * phi1))

        if Bindx == 573:
            t3026 = np.cos(phi)
            t3027 = t3026 ** 2
            t3028 = t3026 * t3027
            t3031 = t3028 ** 2
            t3029 = t3027 ** 2
            t3025 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t3025 ** 2 * (-294 * t3027 + 182 * t3028 - 3458 * t3031 + 7 + (1820 + 1989 * t3029) * t3029 + (-546 * t3029 + 442 * t3031 - 14) * t3026) * np.sin((2 * phi1 + phi2)) * ((1 + t3026) ** (-0.1e1 / 0.2e1)) * ((1 - t3026) ** (-0.1e1 / 0.2e1))

        if Bindx == 574:
            t3034 = np.cos(phi)
            t3035 = t3034 ** 2
            t3037 = t3035 ** 2
            t3041 = t3037 ** 2
            t3036 = t3034 * t3035
            t3039 = t3036 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (-287 * t3035 - 1876 * t3036 + 1729 * t3037 - 3185 * t3039 + 1768 * t3041 + 7 + (6734 * t3037 - 8944 * t3039 + 3978 * t3041 + 140) * t3034) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 575:
            t3044 = np.cos(phi)
            t3045 = t3044 ** 2
            t3046 = t3044 * t3045
            t3049 = t3046 ** 2
            t3047 = t3045 ** 2
            t3043 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t3043 ** 2 * (-114 * t3045 + 234 * t3046 - 1170 * t3049 + 3 + (650 + 663 * t3047) * t3047 + (-624 * t3047 + 442 * t3049 - 20) * t3044) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t3044) ** (-0.1e1 / 0.2e1)) * ((1 - t3044) ** (-0.1e1 / 0.2e1))

        if Bindx == 576:
            t3052 = np.cos(phi)
            t3053 = t3052 ** 2
            t3055 = t3053 ** 2
            t3059 = t3055 ** 2
            t3054 = t3052 * t3053
            t3057 = t3054 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (-35 * t3053 - 82 * t3054 + 179 * t3055 - 281 * t3057 + 136 * t3059 + 1 + (272 * t3055 - 350 * t3057 + 153 * t3059 + 7) * t3052) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 577:
            t3069 = np.sin(phi)
            t3067 = t3069 ** 2
            t3061 = np.cos(phi)
            t3062 = t3061 ** 2
            t3064 = t3062 ** 2
            t3063 = t3061 * t3062
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t3067 ** 2 * (29 * t3062 - 125 * t3064 - 1 + (-130 + 153 * t3063) * t3063 + (170 * t3064 + 16) * t3061) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t3061) ** (-0.1e1 / 0.2e1)) * ((1 - t3061) ** (-0.1e1 / 0.2e1))

        if Bindx == 578:
            t3070 = np.cos(phi)
            t3071 = t3070 ** 2
            t3073 = t3071 ** 2
            t3077 = t3073 ** 2
            t3072 = t3070 * t3071
            t3075 = t3072 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (-75 * t3071 - 44 * t3072 + 277 * t3073 - 341 * t3075 + 136 * t3077 + 3 + (178 * t3073 - 240 * t3075 + 102 * t3077 + 4) * t3070) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 579:
            t3086 = np.sin(phi)
            t3083 = t3086 ** 2
            t3084 = t3086 * t3083
            t3079 = np.cos(phi)
            t3080 = t3079 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t3084 ** 2 * (-70 * t3079 - 1 + (238 * t3079 + 16 + 153 * t3080) * t3080) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t3079) ** (-0.1e1 / 0.2e1)) * ((1 - t3079) ** (-0.1e1 / 0.2e1))

        if Bindx == 580:
            t3087 = np.cos(phi)
            t3088 = t3087 ** 2
            t3090 = t3088 ** 2
            t3094 = t3090 ** 2
            t3089 = t3087 * t3088
            t3092 = t3089 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (-22 * t3088 + 6 * t3089 + 54 * t3090 - 50 * t3092 + 16 * t3094 + 2 + (12 * t3090 - 22 * t3092 + 9 * t3094 - 5) * t3087) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 581:
            t3096 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t3096) ** (0.7e1 / 0.2e1)) * ((1 + t3096) ** (0.11e2 / 0.2e1)) * np.sin((2 * phi1 + 9 * phi2))

        if Bindx == 582:
            t3097 = np.cos(phi)
            t3098 = t3097 ** 2
            t3100 = t3098 ** 2
            t3105 = -6 * t3100
            t3103 = t3100 ** 2
            t3099 = t3097 * t3098
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((3 * phi1 - 9 * phi2)) * (-3 * t3103 + t3105 + 1 + (8 + 8 * t3099) * t3099 + (t3103 + t3105 - 3) * t3097)

        if Bindx == 583:
            t3113 = np.sin(phi)
            t3110 = t3113 ** 2
            t3111 = t3113 * t3110
            t3106 = np.cos(phi)
            t3107 = t3106 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3111 ** 2 * (-1 + (-8 * t3106 + 6 + 3 * t3107) * t3107) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t3106) ** (-0.1e1 / 0.2e1)) * ((1 - t3106) ** (-0.1e1 / 0.2e1))

        if Bindx == 584:
            t3114 = np.cos(phi)
            t3115 = t3114 ** 2
            t3117 = t3115 ** 2
            t3121 = t3117 ** 2
            t3116 = t3114 * t3115
            t3119 = t3116 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (48 * t3115 + 104 * t3116 - 206 * t3117 + 280 * t3119 - 119 * t3121 - 3 + (-82 * t3117 - 48 * t3119 + 51 * t3121 - 25) * t3114) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 585:
            t3131 = np.sin(phi)
            t3129 = t3131 ** 2
            t3123 = np.cos(phi)
            t3124 = t3123 ** 2
            t3126 = t3124 ** 2
            t3125 = t3123 * t3124
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3129 ** 2 * (-21 * t3124 + 9 * t3126 + 1 + (74 + 51 * t3125) * t3125 + (-102 * t3126 - 12) * t3123) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t3123) ** (-0.1e1 / 0.2e1)) * ((1 - t3123) ** (-0.1e1 / 0.2e1))

        if Bindx == 586:
            t3132 = np.cos(phi)
            t3133 = t3132 ** 2
            t3135 = t3133 ** 2
            t3139 = t3135 ** 2
            t3134 = t3132 * t3133
            t3137 = t3134 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (28 * t3133 + 4 * t3134 - 122 * t3135 + 180 * t3137 - 85 * t3139 - 1 + (30 * t3135 - 84 * t3137 + 51 * t3139 - 1) * t3132) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 587:
            t3142 = np.cos(phi)
            t3143 = t3142 ** 2
            t3144 = t3142 * t3143
            t3147 = t3144 ** 2
            t3145 = t3143 ** 2
            t3141 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3141 ** 2 * (-32 * t3143 - 316 * t3144 - 504 * t3147 + 1 + (210 + 357 * t3145) * t3145 + (728 * t3145 - 476 * t3147 + 32) * t3142) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t3142) ** (-0.1e1 / 0.2e1)) * ((1 - t3142) ** (-0.1e1 / 0.2e1))

        if Bindx == 588:
            t3150 = np.cos(phi)
            t3151 = t3150 ** 2
            t3153 = t3151 ** 2
            t3157 = t3153 ** 2
            t3152 = t3150 * t3151
            t3155 = t3152 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (1044 * t3151 - 2012 * t3152 - 5538 * t3153 + 9100 * t3155 - 4641 * t3157 - 29 + (7098 * t3153 - 9828 * t3155 + 4641 * t3157 + 165) * t3150) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 589:
            t3160 = np.cos(phi)
            t3161 = t3160 ** 2
            t3162 = t3160 * t3161
            t3165 = t3162 ** 2
            t3163 = t3161 ** 2
            t3159 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t3159 ** 2 * (-114 * t3161 - 234 * t3162 - 1170 * t3165 + 3 + (650 + 663 * t3163) * t3163 + (624 * t3163 - 442 * t3165 + 20) * t3160) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t3160) ** (-0.1e1 / 0.2e1)) * ((1 - t3160) ** (-0.1e1 / 0.2e1))

        if Bindx == 590:
            t3168 = np.cos(phi)
            t3169 = t3168 ** 2
            t3171 = t3169 ** 2
            t3175 = t3171 ** 2
            t3170 = t3168 * t3169
            t3173 = t3170 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (40 * t3169 - 352 * t3170 - 234 * t3171 + 416 * t3173 - 221 * t3175 - 1 + (1222 * t3171 - 1560 * t3173 + 663 * t3175 + 27) * t3168) * np.cos((3 * phi1 - phi2))

        if Bindx == 591:
            t3183 = np.sin(phi)
            t3181 = t3183 ** 2
            t3177 = np.cos(phi)
            t3178 = t3177 ** 2
            t3179 = t3178 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * t3181 ** 2 * (-195 * t3179 - 1 + (221 * t3179 + 39) * t3178) * np.sin((3 * phi1)) * ((1 + t3177) ** (-0.1e1 / 0.2e1)) * ((1 - t3177) ** (-0.1e1 / 0.2e1))

        if Bindx == 592:
            t3184 = np.cos(phi)
            t3185 = t3184 ** 2
            t3187 = t3185 ** 2
            t3191 = t3187 ** 2
            t3186 = t3184 * t3185
            t3189 = t3186 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (-40 * t3185 - 352 * t3186 + 234 * t3187 - 416 * t3189 + 221 * t3191 + 1 + (1222 * t3187 - 1560 * t3189 + 663 * t3191 + 27) * t3184) * np.cos((3 * phi1 + phi2))

        if Bindx == 593:
            t3194 = np.cos(phi)
            t3195 = t3194 ** 2
            t3196 = t3194 * t3195
            t3199 = t3196 ** 2
            t3197 = t3195 ** 2
            t3193 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t3193 ** 2 * (-114 * t3195 + 234 * t3196 - 1170 * t3199 + 3 + (650 + 663 * t3197) * t3197 + (-624 * t3197 + 442 * t3199 - 20) * t3194) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t3194) ** (-0.1e1 / 0.2e1)) * ((1 - t3194) ** (-0.1e1 / 0.2e1))

        if Bindx == 594:
            t3202 = np.cos(phi)
            t3203 = t3202 ** 2
            t3205 = t3203 ** 2
            t3211 = 4641 * t3205 ** 2
            t3204 = t3202 * t3203
            t3207 = t3204 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (-1044 * t3203 - 2012 * t3204 + 5538 * t3205 - 9100 * t3207 + t3211 + 29 + (7098 * t3205 - 9828 * t3207 + t3211 + 165) * t3202) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 595:
            t3213 = np.cos(phi)
            t3214 = t3213 ** 2
            t3215 = t3213 * t3214
            t3218 = t3215 ** 2
            t3216 = t3214 ** 2
            t3212 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3212 ** 2 * (-32 * t3214 + 316 * t3215 - 504 * t3218 + 1 + (210 + 357 * t3216) * t3216 + (-728 * t3216 + 476 * t3218 - 32) * t3213) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t3213) ** (-0.1e1 / 0.2e1)) * ((1 - t3213) ** (-0.1e1 / 0.2e1))

        if Bindx == 596:
            t3221 = np.cos(phi)
            t3222 = t3221 ** 2
            t3224 = t3222 ** 2
            t3228 = t3224 ** 2
            t3223 = t3221 * t3222
            t3226 = t3223 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (-28 * t3222 + 4 * t3223 + 122 * t3224 - 180 * t3226 + 85 * t3228 + 1 + (30 * t3224 - 84 * t3226 + 51 * t3228 - 1) * t3221) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 597:
            t3238 = np.sin(phi)
            t3236 = t3238 ** 2
            t3230 = np.cos(phi)
            t3231 = t3230 ** 2
            t3233 = t3231 ** 2
            t3232 = t3230 * t3231
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3236 ** 2 * (-21 * t3231 + 9 * t3233 + 1 + (-74 + 51 * t3232) * t3232 + (102 * t3233 + 12) * t3230) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t3230) ** (-0.1e1 / 0.2e1)) * ((1 - t3230) ** (-0.1e1 / 0.2e1))

        if Bindx == 598:
            t3239 = np.cos(phi)
            t3240 = t3239 ** 2
            t3242 = t3240 ** 2
            t3246 = t3242 ** 2
            t3241 = t3239 * t3240
            t3244 = t3241 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-48 * t3240 + 104 * t3241 + 206 * t3242 - 280 * t3244 + 119 * t3246 + 3 + (-82 * t3242 - 48 * t3244 + 51 * t3246 - 25) * t3239) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 599:
            t3255 = np.sin(phi)
            t3252 = t3255 ** 2
            t3253 = t3255 * t3252
            t3248 = np.cos(phi)
            t3249 = t3248 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3253 ** 2 * (-1 + (8 * t3248 + 6 + 3 * t3249) * t3249) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t3248) ** (-0.1e1 / 0.2e1)) * ((1 - t3248) ** (-0.1e1 / 0.2e1))

        if Bindx == 600:
            t3256 = np.cos(phi)
            t3257 = t3256 ** 2
            t3259 = t3257 ** 2
            t3262 = t3259 ** 2
            t3258 = t3256 * t3257
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((3 * phi1 + 9 * phi2)) * (6 * t3259 + 3 * t3262 - 1 + (8 - 8 * t3258) * t3258 + (-6 * t3259 + t3262 - 3) * t3256)

        if Bindx == 601:
            t3264 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t3264) ** (0.13e2 / 0.2e1)) * ((1 + t3264) ** (0.5e1 / 0.2e1)) * np.sin((4 * phi1 - 9 * phi2))

        if Bindx == 602:
            t3265 = np.cos(phi)
            t3266 = t3265 ** 2
            t3268 = t3266 ** 2
            t3272 = t3268 ** 2
            t3267 = t3265 * t3266
            t3270 = t3267 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (-20 * t3266 + 52 * t3267 - 4 * t3268 + 52 * t3270 - 32 * t3272 + 4 + (-74 * t3268 + 20 * t3270 + 9 * t3272 - 7) * t3265) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 603:
            t3282 = np.sin(phi)
            t3280 = t3282 ** 2
            t3274 = np.cos(phi)
            t3275 = t3274 ** 2
            t3277 = t3275 ** 2
            t3276 = t3274 * t3275
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3280 ** 2 * (-253 * t3275 + 397 * t3277 + 23 + (112 + 153 * t3276) * t3276 + (-476 * t3277 + 44) * t3274) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t3274) ** (-0.1e1 / 0.2e1)) * ((1 - t3274) ** (-0.1e1 / 0.2e1))

        if Bindx == 604:
            t3283 = np.cos(phi)
            t3284 = t3283 ** 2
            t3286 = t3284 ** 2
            t3290 = t3286 ** 2
            t3285 = t3283 * t3284
            t3288 = t3285 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (19 * t3284 + 106 * t3285 - 131 * t3286 + 249 * t3288 - 136 * t3290 - 1 + (-144 * t3286 + 6 * t3288 + 51 * t3290 - 19) * t3283) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 605:
            t3293 = np.cos(phi)
            t3294 = t3293 ** 2
            t3295 = t3293 * t3294
            t3298 = t3295 ** 2
            t3296 = t3294 ** 2
            t3292 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3292 ** 2 * (72 * t3294 - 196 * t3295 - 32 * t3298 - 3 + (-158 + 153 * t3296) * t3296 + (480 * t3296 - 340 * t3298 + 24) * t3293) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t3293) ** (-0.1e1 / 0.2e1)) * ((1 - t3293) ** (-0.1e1 / 0.2e1))

        if Bindx == 606:
            t3301 = np.cos(phi)
            t3302 = t3301 ** 2
            t3304 = t3302 ** 2
            t3308 = t3304 ** 2
            t3303 = t3301 * t3302
            t3306 = t3303 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (522 * t3302 + 212 * t3303 - 2398 * t3304 + 3766 * t3306 - 1904 * t3308 - 18 + (266 * t3304 - 1484 * t3306 + 1071 * t3308 - 33) * t3301) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 607:
            t3311 = np.cos(phi)
            t3312 = t3311 ** 2
            t3313 = t3311 * t3312
            t3316 = t3313 ** 2
            t3314 = t3312 ** 2
            t3310 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3310 ** 2 * (-32 * t3312 - 316 * t3313 - 504 * t3316 + 1 + (210 + 357 * t3314) * t3314 + (728 * t3314 - 476 * t3316 + 32) * t3311) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t3311) ** (-0.1e1 / 0.2e1)) * ((1 - t3311) ** (-0.1e1 / 0.2e1))

        if Bindx == 608:
            t3319 = np.cos(phi)
            t3320 = t3319 ** 2
            t3322 = t3320 ** 2
            t3326 = t3322 ** 2
            t3321 = t3319 * t3320
            t3324 = t3321 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (35 * t3320 - 82 * t3321 - 179 * t3322 + 281 * t3324 - 136 * t3326 - 1 + (272 * t3322 - 350 * t3324 + 153 * t3326 + 7) * t3319) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 609:
            t3336 = np.sin(phi)
            t3334 = t3336 ** 2
            t3328 = np.cos(phi)
            t3329 = t3328 ** 2
            t3331 = t3329 ** 2
            t3330 = t3328 * t3329
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t3334 ** 2 * (35 * t3329 - 155 * t3331 - 1 + (40 + 153 * t3330) * t3330 + (-68 * t3331 - 4) * t3328) * np.sin((4 * phi1 - phi2)) * ((1 + t3328) ** (-0.1e1 / 0.2e1)) * ((1 - t3328) ** (-0.1e1 / 0.2e1))

        if Bindx == 610:
            t3337 = np.cos(phi)
            t3338 = t3337 ** 2
            t3339 = t3338 ** 2
            tfunc[..., c] = 0.57e2 / 0.64e2 * t3337 * np.sqrt(0.5005e4) * (-12 * t3338 + 1 + (-44 * t3338 + 38 + 17 * t3339) * t3339) * np.cos((4 * phi1))

        if Bindx == 611:
            t3350 = np.sin(phi)
            t3348 = t3350 ** 2
            t3342 = np.cos(phi)
            t3343 = t3342 ** 2
            t3345 = t3343 ** 2
            t3344 = t3342 * t3343
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t3348 ** 2 * (35 * t3343 - 155 * t3345 - 1 + (-40 + 153 * t3344) * t3344 + (68 * t3345 + 4) * t3342) * np.sin((4 * phi1 + phi2)) * ((1 + t3342) ** (-0.1e1 / 0.2e1)) * ((1 - t3342) ** (-0.1e1 / 0.2e1))

        if Bindx == 612:
            t3351 = np.cos(phi)
            t3352 = t3351 ** 2
            t3354 = t3352 ** 2
            t3358 = t3354 ** 2
            t3353 = t3351 * t3352
            t3356 = t3353 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (-35 * t3352 - 82 * t3353 + 179 * t3354 - 281 * t3356 + 136 * t3358 + 1 + (272 * t3354 - 350 * t3356 + 153 * t3358 + 7) * t3351) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 613:
            t3361 = np.cos(phi)
            t3362 = t3361 ** 2
            t3363 = t3361 * t3362
            t3366 = t3363 ** 2
            t3364 = t3362 ** 2
            t3360 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3360 ** 2 * (-32 * t3362 + 316 * t3363 - 504 * t3366 + 1 + (210 + 357 * t3364) * t3364 + (-728 * t3364 + 476 * t3366 - 32) * t3361) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t3361) ** (-0.1e1 / 0.2e1)) * ((1 - t3361) ** (-0.1e1 / 0.2e1))

        if Bindx == 614:
            t3369 = np.cos(phi)
            t3370 = t3369 ** 2
            t3372 = t3370 ** 2
            t3376 = t3372 ** 2
            t3371 = t3369 * t3370
            t3374 = t3371 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (-522 * t3370 + 212 * t3371 + 2398 * t3372 - 3766 * t3374 + 1904 * t3376 + 18 + (266 * t3372 - 1484 * t3374 + 1071 * t3376 - 33) * t3369) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 615:
            t3379 = np.cos(phi)
            t3380 = t3379 ** 2
            t3381 = t3379 * t3380
            t3384 = t3381 ** 2
            t3382 = t3380 ** 2
            t3378 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3378 ** 2 * (72 * t3380 + 196 * t3381 - 32 * t3384 - 3 + (-158 + 153 * t3382) * t3382 + (-480 * t3382 + 340 * t3384 - 24) * t3379) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t3379) ** (-0.1e1 / 0.2e1)) * ((1 - t3379) ** (-0.1e1 / 0.2e1))

        if Bindx == 616:
            t3387 = np.cos(phi)
            t3388 = t3387 ** 2
            t3390 = t3388 ** 2
            t3394 = t3390 ** 2
            t3389 = t3387 * t3388
            t3392 = t3389 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (-19 * t3388 + 106 * t3389 + 131 * t3390 - 249 * t3392 + 136 * t3394 + 1 + (-144 * t3390 + 6 * t3392 + 51 * t3394 - 19) * t3387) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 617:
            t3404 = np.sin(phi)
            t3402 = t3404 ** 2
            t3396 = np.cos(phi)
            t3397 = t3396 ** 2
            t3399 = t3397 ** 2
            t3398 = t3396 * t3397
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3402 ** 2 * (-253 * t3397 + 397 * t3399 + 23 + (-112 + 153 * t3398) * t3398 + (476 * t3399 - 44) * t3396) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t3396) ** (-0.1e1 / 0.2e1)) * ((1 - t3396) ** (-0.1e1 / 0.2e1))

        if Bindx == 618:
            t3405 = np.cos(phi)
            t3406 = t3405 ** 2
            t3408 = t3406 ** 2
            t3412 = t3408 ** 2
            t3407 = t3405 * t3406
            t3410 = t3407 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (20 * t3406 + 52 * t3407 + 4 * t3408 - 52 * t3410 + 32 * t3412 - 4 + (-74 * t3408 + 20 * t3410 + 9 * t3412 - 7) * t3405) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 619:
            t3414 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t3414) ** (0.5e1 / 0.2e1)) * ((1 + t3414) ** (0.13e2 / 0.2e1)) * np.sin((4 * phi1 + 9 * phi2))

        if Bindx == 620:
            t3415 = np.cos(phi)
            t3416 = t3415 ** 2
            t3417 = t3416 ** 2
            t3420 = t3417 ** 2
            t3418 = t3415 * t3417
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((5 * phi1 - 9 * phi2)) * (14 * t3417 - 14 * t3418 - 5 * t3420 - 1 + (8 * t3418 - 8) * t3416 + (t3420 + 5) * t3415)

        if Bindx == 621:
            t3430 = np.sin(phi)
            t3428 = t3430 ** 2
            t3422 = np.cos(phi)
            t3423 = t3422 ** 2
            t3425 = t3423 ** 2
            t3424 = t3422 * t3423
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3428 ** 2 * (-5 * t3423 + 65 * t3425 - 5 + (-40 + 9 * t3424) * t3424 + (-40 * t3425 + 16) * t3422) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t3422) ** (-0.1e1 / 0.2e1)) * ((1 - t3422) ** (-0.1e1 / 0.2e1))

        if Bindx == 622:
            t3431 = np.cos(phi)
            t3432 = t3431 ** 2
            t3434 = t3432 ** 2
            t3438 = t3434 ** 2
            t3433 = t3431 * t3432
            t3436 = t3433 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-328 * t3432 + 560 * t3433 + 322 * t3434 + 560 * t3436 - 595 * t3438 + 41 + (-1246 * t3434 + 568 * t3436 + 153 * t3438 - 35) * t3431) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 623:
            t3441 = np.cos(phi)
            t3442 = t3441 ** 2
            t3443 = t3441 * t3442
            t3446 = t3443 ** 2
            t3444 = t3442 ** 2
            t3440 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t3440 ** 2 * (70 * t3442 + 14 * t3443 + 126 * t3446 - 5 + (-210 + 51 * t3444) * t3444 + (140 * t3444 - 170 * t3446 - 16) * t3441) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t3441) ** (-0.1e1 / 0.2e1)) * ((1 - t3441) ** (-0.1e1 / 0.2e1))

        if Bindx == 624:
            t3449 = np.cos(phi)
            t3450 = t3449 ** 2
            t3452 = t3450 ** 2
            t3456 = t3452 ** 2
            t3451 = t3449 * t3450
            t3454 = t3451 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (180 * t3450 + 1540 * t3451 - 1610 * t3452 + 3500 * t3454 - 2125 * t3456 - 9 + (-2366 * t3452 + 380 * t3454 + 765 * t3456 - 255) * t3449) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 625:
            t3459 = np.cos(phi)
            t3460 = t3459 ** 2
            t3461 = t3459 * t3460
            t3464 = t3461 ** 2
            t3462 = t3460 ** 2
            t3458 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3458 ** 2 * (72 * t3460 - 196 * t3461 - 32 * t3464 - 3 + (-158 + 153 * t3462) * t3462 + (480 * t3462 - 340 * t3464 + 24) * t3459) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t3459) ** (-0.1e1 / 0.2e1)) * ((1 - t3459) ** (-0.1e1 / 0.2e1))

        if Bindx == 626:
            t3467 = np.cos(phi)
            t3468 = t3467 ** 2
            t3470 = t3468 ** 2
            t3474 = t3470 ** 2
            t3469 = t3467 * t3468
            t3472 = t3469 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (28 * t3468 + 4 * t3469 - 122 * t3470 + 180 * t3472 - 85 * t3474 - 1 + (30 * t3470 - 84 * t3472 + 51 * t3474 - 1) * t3467) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 627:
            t3484 = np.sin(phi)
            t3482 = t3484 ** 2
            t3476 = np.cos(phi)
            t3477 = t3476 ** 2
            t3479 = t3477 ** 2
            t3478 = t3476 * t3477
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t3482 ** 2 * (29 * t3477 - 125 * t3479 - 1 + (130 + 153 * t3478) * t3478 + (-170 * t3479 - 16) * t3476) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t3476) ** (-0.1e1 / 0.2e1)) * ((1 - t3476) ** (-0.1e1 / 0.2e1))

        if Bindx == 628:
            t3485 = np.cos(phi)
            t3486 = t3485 ** 2
            t3488 = t3486 ** 2
            t3492 = t3488 ** 2
            t3487 = t3485 * t3486
            t3490 = t3487 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (32 * t3486 - 136 * t3487 - 146 * t3488 + 200 * t3490 - 85 * t3492 - 1 + (386 * t3488 - 416 * t3490 + 153 * t3492 + 13) * t3485) * np.cos((5 * phi1 - phi2))

        if Bindx == 629:
            t3500 = np.sin(phi)
            t3497 = t3500 ** 2
            t3498 = t3500 * t3497
            t3494 = np.cos(phi)
            t3495 = t3494 ** 2
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * t3498 ** 2 * (1 + (-30 + 85 * t3495) * t3495) * np.sin((5 * phi1)) * ((1 + t3494) ** (-0.1e1 / 0.2e1)) * ((1 - t3494) ** (-0.1e1 / 0.2e1))

        if Bindx == 630:
            t3501 = np.cos(phi)
            t3502 = t3501 ** 2
            t3504 = t3502 ** 2
            t3508 = t3504 ** 2
            t3503 = t3501 * t3502
            t3506 = t3503 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (-32 * t3502 - 136 * t3503 + 146 * t3504 - 200 * t3506 + 85 * t3508 + 1 + (386 * t3504 - 416 * t3506 + 153 * t3508 + 13) * t3501) * np.cos((5 * phi1 + phi2))

        if Bindx == 631:
            t3518 = np.sin(phi)
            t3516 = t3518 ** 2
            t3510 = np.cos(phi)
            t3511 = t3510 ** 2
            t3513 = t3511 ** 2
            t3512 = t3510 * t3511
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t3516 ** 2 * (29 * t3511 - 125 * t3513 - 1 + (-130 + 153 * t3512) * t3512 + (170 * t3513 + 16) * t3510) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t3510) ** (-0.1e1 / 0.2e1)) * ((1 - t3510) ** (-0.1e1 / 0.2e1))

        if Bindx == 632:
            t3519 = np.cos(phi)
            t3520 = t3519 ** 2
            t3522 = t3520 ** 2
            t3526 = t3522 ** 2
            t3521 = t3519 * t3520
            t3524 = t3521 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (-28 * t3520 + 4 * t3521 + 122 * t3522 - 180 * t3524 + 85 * t3526 + 1 + (30 * t3522 - 84 * t3524 + 51 * t3526 - 1) * t3519) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 633:
            t3529 = np.cos(phi)
            t3530 = t3529 ** 2
            t3531 = t3529 * t3530
            t3534 = t3531 ** 2
            t3532 = t3530 ** 2
            t3528 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3528 ** 2 * (72 * t3530 + 196 * t3531 - 32 * t3534 - 3 + (-158 + 153 * t3532) * t3532 + (-480 * t3532 + 340 * t3534 - 24) * t3529) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t3529) ** (-0.1e1 / 0.2e1)) * ((1 - t3529) ** (-0.1e1 / 0.2e1))

        if Bindx == 634:
            t3537 = np.cos(phi)
            t3538 = t3537 ** 2
            t3540 = t3538 ** 2
            t3544 = t3540 ** 2
            t3539 = t3537 * t3538
            t3542 = t3539 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (-180 * t3538 + 1540 * t3539 + 1610 * t3540 - 3500 * t3542 + 2125 * t3544 + 9 + (-2366 * t3540 + 380 * t3542 + 765 * t3544 - 255) * t3537) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 635:
            t3547 = np.cos(phi)
            t3548 = t3547 ** 2
            t3549 = t3547 * t3548
            t3552 = t3549 ** 2
            t3550 = t3548 ** 2
            t3546 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t3546 ** 2 * (70 * t3548 - 14 * t3549 + 126 * t3552 - 5 + (-210 + 51 * t3550) * t3550 + (-140 * t3550 + 170 * t3552 + 16) * t3547) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t3547) ** (-0.1e1 / 0.2e1)) * ((1 - t3547) ** (-0.1e1 / 0.2e1))

        if Bindx == 636:
            t3555 = np.cos(phi)
            t3556 = t3555 ** 2
            t3558 = t3556 ** 2
            t3562 = t3558 ** 2
            t3557 = t3555 * t3556
            t3560 = t3557 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (328 * t3556 + 560 * t3557 - 322 * t3558 - 560 * t3560 + 595 * t3562 - 41 + (-1246 * t3558 + 568 * t3560 + 153 * t3562 - 35) * t3555) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 637:
            t3572 = np.sin(phi)
            t3570 = t3572 ** 2
            t3564 = np.cos(phi)
            t3565 = t3564 ** 2
            t3567 = t3565 ** 2
            t3566 = t3564 * t3565
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3570 ** 2 * (-5 * t3565 + 65 * t3567 - 5 + (40 + 9 * t3566) * t3566 + (40 * t3567 - 16) * t3564) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t3564) ** (-0.1e1 / 0.2e1)) * ((1 - t3564) ** (-0.1e1 / 0.2e1))

        if Bindx == 638:
            t3573 = np.cos(phi)
            t3574 = t3573 ** 2
            t3580 = 8 * t3574
            t3575 = t3574 ** 2
            t3578 = t3575 ** 2
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((5 * phi1 + 9 * phi2)) * (-14 * t3575 + 5 * t3578 + t3580 + 1 + ((t3580 - 14) * t3575 + t3578 + 5) * t3573)

        if Bindx == 639:
            t3581 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t3581) ** (0.15e2 / 0.2e1)) * ((1 + t3581) ** (0.3e1 / 0.2e1)) * np.sin((6 * phi1 - 9 * phi2))

        if Bindx == 640:
            t3582 = np.cos(phi)
            t3583 = t3582 ** 2
            t3585 = t3583 ** 2
            t3589 = t3585 ** 2
            t3584 = t3582 * t3583
            t3587 = t3584 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (-10 * t3583 - 14 * t3584 + 42 * t3585 - 14 * t3587 - 16 * t3589 - 2 + (-28 * t3585 + 30 * t3587 + 3 * t3589 + 9) * t3582) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 641:
            t3592 = np.cos(phi)
            t3593 = t3592 ** 2
            t3594 = t3592 * t3593
            t3597 = t3594 ** 2
            t3595 = t3593 ** 2
            t3591 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3591 ** 2 * (-42 * t3593 + 294 * t3594 + 378 * t3597 + 21 + (-280 + 51 * t3595) * t3595 + (-126 * t3595 - 238 * t3597 - 58) * t3592) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t3592) ** (-0.1e1 / 0.2e1)) * ((1 - t3592) ** (-0.1e1 / 0.2e1))

        if Bindx == 642:
            t3600 = np.cos(phi)
            t3601 = t3600 ** 2
            t3603 = t3601 ** 2
            t3607 = t3603 ** 2
            t3602 = t3600 * t3601
            t3605 = t3602 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (-207 * t3601 + 308 * t3602 + 273 * t3603 + 287 * t3605 - 408 * t3607 + 23 + (-798 * t3603 + 432 * t3605 + 102 * t3607 - 12) * t3600) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 643:
            t3610 = np.cos(phi)
            t3611 = t3610 ** 2
            t3612 = t3610 * t3611
            t3615 = t3612 ** 2
            t3613 = t3611 ** 2
            t3609 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t3609 ** 2 * (70 * t3611 + 14 * t3612 + 126 * t3615 - 5 + (-210 + 51 * t3613) * t3613 + (140 * t3613 - 170 * t3615 - 16) * t3610) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t3610) ** (-0.1e1 / 0.2e1)) * ((1 - t3610) ** (-0.1e1 / 0.2e1))

        if Bindx == 644:
            t3618 = np.cos(phi)
            t3619 = t3618 ** 2
            t3621 = t3619 ** 2
            t3625 = t3621 ** 2
            t3620 = t3618 * t3619
            t3623 = t3620 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (19 * t3619 + 106 * t3620 - 131 * t3621 + 249 * t3623 - 136 * t3625 - 1 + (-144 * t3621 + 6 * t3623 + 51 * t3625 - 19) * t3618) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 645:
            t3635 = np.sin(phi)
            t3633 = t3635 ** 2
            t3627 = np.cos(phi)
            t3628 = t3627 ** 2
            t3630 = t3628 ** 2
            t3629 = t3627 * t3628
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3633 ** 2 * (-21 * t3628 + 9 * t3630 + 1 + (74 + 51 * t3629) * t3629 + (-102 * t3630 - 12) * t3627) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t3627) ** (-0.1e1 / 0.2e1)) * ((1 - t3627) ** (-0.1e1 / 0.2e1))

        if Bindx == 646:
            t3636 = np.cos(phi)
            t3637 = t3636 ** 2
            t3639 = t3637 ** 2
            t3643 = t3639 ** 2
            t3638 = t3636 * t3637
            t3641 = t3638 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (75 * t3637 - 44 * t3638 - 277 * t3639 + 341 * t3641 - 136 * t3643 - 3 + (178 * t3639 - 240 * t3641 + 102 * t3643 + 4) * t3636) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 647:
            t3652 = np.sin(phi)
            t3649 = t3652 ** 2
            t3650 = t3652 * t3649
            t3645 = np.cos(phi)
            t3646 = t3645 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t3650 ** 2 * (6 * t3645 + 1 + (-34 * t3645 - 24 + 51 * t3646) * t3646) * np.sin((6 * phi1 - phi2)) * ((1 + t3645) ** (-0.1e1 / 0.2e1)) * ((1 - t3645) ** (-0.1e1 / 0.2e1))

        if Bindx == 648:
            t3653 = np.cos(phi)
            t3654 = t3653 ** 2
            t3655 = t3654 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t3653 * (-26 * t3654 + 3 + (-54 * t3654 + 60 + 17 * t3655) * t3655) * np.cos((6 * phi1))

        if Bindx == 649:
            t3665 = np.sin(phi)
            t3662 = t3665 ** 2
            t3663 = t3665 * t3662
            t3658 = np.cos(phi)
            t3659 = t3658 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t3663 ** 2 * (-6 * t3658 + 1 + (34 * t3658 - 24 + 51 * t3659) * t3659) * np.sin((6 * phi1 + phi2)) * ((1 + t3658) ** (-0.1e1 / 0.2e1)) * ((1 - t3658) ** (-0.1e1 / 0.2e1))

        if Bindx == 650:
            t3666 = np.cos(phi)
            t3667 = t3666 ** 2
            t3669 = t3667 ** 2
            t3673 = t3669 ** 2
            t3668 = t3666 * t3667
            t3671 = t3668 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (-75 * t3667 - 44 * t3668 + 277 * t3669 - 341 * t3671 + 136 * t3673 + 3 + (178 * t3669 - 240 * t3671 + 102 * t3673 + 4) * t3666) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 651:
            t3683 = np.sin(phi)
            t3681 = t3683 ** 2
            t3675 = np.cos(phi)
            t3676 = t3675 ** 2
            t3678 = t3676 ** 2
            t3677 = t3675 * t3676
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3681 ** 2 * (-21 * t3676 + 9 * t3678 + 1 + (-74 + 51 * t3677) * t3677 + (102 * t3678 + 12) * t3675) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t3675) ** (-0.1e1 / 0.2e1)) * ((1 - t3675) ** (-0.1e1 / 0.2e1))

        if Bindx == 652:
            t3684 = np.cos(phi)
            t3685 = t3684 ** 2
            t3687 = t3685 ** 2
            t3691 = t3687 ** 2
            t3686 = t3684 * t3685
            t3689 = t3686 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (-19 * t3685 + 106 * t3686 + 131 * t3687 - 249 * t3689 + 136 * t3691 + 1 + (-144 * t3687 + 6 * t3689 + 51 * t3691 - 19) * t3684) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 653:
            t3694 = np.cos(phi)
            t3695 = t3694 ** 2
            t3696 = t3694 * t3695
            t3699 = t3696 ** 2
            t3697 = t3695 ** 2
            t3693 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t3693 ** 2 * (70 * t3695 - 14 * t3696 + 126 * t3699 - 5 + (-210 + 51 * t3697) * t3697 + (-140 * t3697 + 170 * t3699 + 16) * t3694) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t3694) ** (-0.1e1 / 0.2e1)) * ((1 - t3694) ** (-0.1e1 / 0.2e1))

        if Bindx == 654:
            t3702 = np.cos(phi)
            t3703 = t3702 ** 2
            t3705 = t3703 ** 2
            t3709 = t3705 ** 2
            t3704 = t3702 * t3703
            t3707 = t3704 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (207 * t3703 + 308 * t3704 - 273 * t3705 - 287 * t3707 + 408 * t3709 - 23 + (-798 * t3705 + 432 * t3707 + 102 * t3709 - 12) * t3702) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 655:
            t3712 = np.cos(phi)
            t3713 = t3712 ** 2
            t3714 = t3712 * t3713
            t3717 = t3714 ** 2
            t3715 = t3713 ** 2
            t3711 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3711 ** 2 * (-42 * t3713 - 294 * t3714 + 378 * t3717 + 21 + (-280 + 51 * t3715) * t3715 + (126 * t3715 + 238 * t3717 + 58) * t3712) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t3712) ** (-0.1e1 / 0.2e1)) * ((1 - t3712) ** (-0.1e1 / 0.2e1))

        if Bindx == 656:
            t3720 = np.cos(phi)
            t3721 = t3720 ** 2
            t3723 = t3721 ** 2
            t3727 = t3723 ** 2
            t3722 = t3720 * t3721
            t3725 = t3722 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (10 * t3721 - 14 * t3722 - 42 * t3723 + 14 * t3725 + 16 * t3727 + 2 + (-28 * t3723 + 30 * t3725 + 3 * t3727 + 9) * t3720) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 657:
            t3729 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t3729) ** (0.3e1 / 0.2e1)) * ((1 + t3729) ** (0.15e2 / 0.2e1)) * np.sin((6 * phi1 + 9 * phi2))

        if Bindx == 658:
            t3730 = np.cos(phi)
            t3731 = t3730 ** 2
            t3733 = t3731 ** 2
            t3739 = 14 * t3733
            t3737 = t3733 ** 2
            t3732 = t3730 * t3731
            t3735 = t3732 ** 2
            tfunc[..., c] = 0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (20 * t3731 - 28 * t3732 - 28 * t3735 - 7 * t3737 + t3739 + 1 + (20 * t3735 + t3737 + t3739 - 7) * t3730) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 659:
            t3741 = np.cos(phi)
            t3742 = t3741 ** 2
            t3743 = t3741 * t3742
            t3746 = t3743 ** 2
            t3744 = t3742 ** 2
            t3740 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3740 ** 2 * (-84 * t3742 + 56 * t3743 + 140 * t3746 - 7 + (70 + 9 * t3744) * t3744 + (-168 * t3744 - 56 * t3746 + 40) * t3741) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t3741) ** (-0.1e1 / 0.2e1)) * ((1 - t3741) ** (-0.1e1 / 0.2e1))

        if Bindx == 660:
            t3749 = np.cos(phi)
            t3750 = t3749 ** 2
            t3752 = t3750 ** 2
            t3756 = t3752 ** 2
            t3751 = t3749 * t3750
            t3754 = t3751 ** 2
            tfunc[..., c] = -0.19e2 / 0.512e3 * np.sqrt(0.2e1) * (-356 * t3750 - 812 * t3751 + 2002 * t3752 - 980 * t3754 - 833 * t3756 - 89 + (-1106 * t3752 + 1636 * t3754 + 153 * t3756 + 385) * t3749) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 661:
            t3759 = np.cos(phi)
            t3760 = t3759 ** 2
            t3761 = t3759 * t3760
            t3764 = t3761 ** 2
            t3762 = t3760 ** 2
            t3758 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3758 ** 2 * (-42 * t3760 + 294 * t3761 + 378 * t3764 + 21 + (-280 + 51 * t3762) * t3762 + (-126 * t3762 - 238 * t3764 - 58) * t3759) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t3759) ** (-0.1e1 / 0.2e1)) * ((1 - t3759) ** (-0.1e1 / 0.2e1))

        if Bindx == 662:
            t3767 = np.cos(phi)
            t3768 = t3767 ** 2
            t3770 = t3768 ** 2
            t3774 = t3770 ** 2
            t3769 = t3767 * t3768
            t3772 = t3769 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-328 * t3768 + 560 * t3769 + 322 * t3770 + 560 * t3772 - 595 * t3774 + 41 + (-1246 * t3770 + 568 * t3772 + 153 * t3774 - 35) * t3767) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 663:
            t3784 = np.sin(phi)
            t3782 = t3784 ** 2
            t3776 = np.cos(phi)
            t3777 = t3776 ** 2
            t3779 = t3777 ** 2
            t3778 = t3776 * t3777
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3782 ** 2 * (-253 * t3777 + 397 * t3779 + 23 + (112 + 153 * t3778) * t3778 + (-476 * t3779 + 44) * t3776) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t3776) ** (-0.1e1 / 0.2e1)) * ((1 - t3776) ** (-0.1e1 / 0.2e1))

        if Bindx == 664:
            t3785 = np.cos(phi)
            t3786 = t3785 ** 2
            t3788 = t3786 ** 2
            t3792 = t3788 ** 2
            t3787 = t3785 * t3786
            t3790 = t3787 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (48 * t3786 + 104 * t3787 - 206 * t3788 + 280 * t3790 - 119 * t3792 - 3 + (-82 * t3788 - 48 * t3790 + 51 * t3792 - 25) * t3785) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 665:
            t3801 = np.sin(phi)
            t3798 = t3801 ** 2
            t3799 = t3801 * t3798
            t3794 = np.cos(phi)
            t3795 = t3794 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t3799 ** 2 * (70 * t3794 - 1 + (-238 * t3794 + 16 + 153 * t3795) * t3795) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t3794) ** (-0.1e1 / 0.2e1)) * ((1 - t3794) ** (-0.1e1 / 0.2e1))

        if Bindx == 666:
            t3802 = np.cos(phi)
            t3803 = t3802 ** 2
            t3805 = t3803 ** 2
            t3809 = t3805 ** 2
            t3804 = t3802 * t3803
            t3807 = t3804 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (140 * t3803 - 276 * t3804 - 378 * t3805 + 364 * t3807 - 119 * t3809 - 7 + (582 * t3805 - 500 * t3807 + 153 * t3809 + 41) * t3802) * np.cos((7 * phi1 - phi2))

        if Bindx == 667:
            t3815 = np.sin(phi)
            t3812 = t3815 ** 2
            t3813 = t3812 ** 2
            t3811 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * t3813 ** 2 * (17 * t3811 ** 2 - 1) * np.sin((7 * phi1)) * ((1 + t3811) ** (-0.1e1 / 0.2e1)) * ((1 - t3811) ** (-0.1e1 / 0.2e1))

        if Bindx == 668:
            t3816 = np.cos(phi)
            t3817 = t3816 ** 2
            t3819 = t3817 ** 2
            t3823 = t3819 ** 2
            t3818 = t3816 * t3817
            t3821 = t3818 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (-140 * t3817 - 276 * t3818 + 378 * t3819 - 364 * t3821 + 119 * t3823 + 7 + (582 * t3819 - 500 * t3821 + 153 * t3823 + 41) * t3816) * np.cos((7 * phi1 + phi2))

        if Bindx == 669:
            t3832 = np.sin(phi)
            t3829 = t3832 ** 2
            t3830 = t3832 * t3829
            t3825 = np.cos(phi)
            t3826 = t3825 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t3830 ** 2 * (-70 * t3825 - 1 + (238 * t3825 + 16 + 153 * t3826) * t3826) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t3825) ** (-0.1e1 / 0.2e1)) * ((1 - t3825) ** (-0.1e1 / 0.2e1))

        if Bindx == 670:
            t3833 = np.cos(phi)
            t3834 = t3833 ** 2
            t3836 = t3834 ** 2
            t3840 = t3836 ** 2
            t3835 = t3833 * t3834
            t3838 = t3835 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-48 * t3834 + 104 * t3835 + 206 * t3836 - 280 * t3838 + 119 * t3840 + 3 + (-82 * t3836 - 48 * t3838 + 51 * t3840 - 25) * t3833) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 671:
            t3850 = np.sin(phi)
            t3848 = t3850 ** 2
            t3842 = np.cos(phi)
            t3843 = t3842 ** 2
            t3845 = t3843 ** 2
            t3844 = t3842 * t3843
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3848 ** 2 * (-253 * t3843 + 397 * t3845 + 23 + (-112 + 153 * t3844) * t3844 + (476 * t3845 - 44) * t3842) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t3842) ** (-0.1e1 / 0.2e1)) * ((1 - t3842) ** (-0.1e1 / 0.2e1))

        if Bindx == 672:
            t3851 = np.cos(phi)
            t3852 = t3851 ** 2
            t3854 = t3852 ** 2
            t3858 = t3854 ** 2
            t3853 = t3851 * t3852
            t3856 = t3853 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (328 * t3852 + 560 * t3853 - 322 * t3854 - 560 * t3856 + 595 * t3858 - 41 + (-1246 * t3854 + 568 * t3856 + 153 * t3858 - 35) * t3851) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 673:
            t3861 = np.cos(phi)
            t3862 = t3861 ** 2
            t3863 = t3861 * t3862
            t3866 = t3863 ** 2
            t3864 = t3862 ** 2
            t3860 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3860 ** 2 * (-42 * t3862 - 294 * t3863 + 378 * t3866 + 21 + (-280 + 51 * t3864) * t3864 + (126 * t3864 + 238 * t3866 + 58) * t3861) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t3861) ** (-0.1e1 / 0.2e1)) * ((1 - t3861) ** (-0.1e1 / 0.2e1))

        if Bindx == 674:
            t3869 = np.cos(phi)
            t3870 = t3869 ** 2
            t3872 = t3870 ** 2
            t3876 = t3872 ** 2
            t3871 = t3869 * t3870
            t3874 = t3871 ** 2
            tfunc[..., c] = 0.19e2 / 0.512e3 * np.sqrt(0.2e1) * (356 * t3870 - 812 * t3871 - 2002 * t3872 + 980 * t3874 + 833 * t3876 + 89 + (-1106 * t3872 + 1636 * t3874 + 153 * t3876 + 385) * t3869) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 675:
            t3879 = np.cos(phi)
            t3880 = t3879 ** 2
            t3881 = t3879 * t3880
            t3884 = t3881 ** 2
            t3882 = t3880 ** 2
            t3878 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3878 ** 2 * (-84 * t3880 - 56 * t3881 + 140 * t3884 - 7 + (70 + 9 * t3882) * t3882 + (168 * t3882 + 56 * t3884 - 40) * t3879) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t3879) ** (-0.1e1 / 0.2e1)) * ((1 - t3879) ** (-0.1e1 / 0.2e1))

        if Bindx == 676:
            t3887 = np.cos(phi)
            t3888 = t3887 ** 2
            t3890 = t3888 ** 2
            t3894 = t3890 ** 2
            t3889 = t3887 * t3888
            t3892 = t3889 ** 2
            tfunc[..., c] = -0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-20 * t3888 - 28 * t3889 - 14 * t3890 + 28 * t3892 + 7 * t3894 - 1 + (14 * t3890 + 20 * t3892 + t3894 - 7) * t3887) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 677:
            t3896 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * ((1 - t3896) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t3896)) * np.sin((8 * phi1 - 9 * phi2))

        if Bindx == 678:
            t3897 = np.cos(phi)
            t3898 = t3897 ** 2
            t3900 = t3898 ** 2
            t3904 = t3900 ** 2
            t3899 = t3897 * t3898
            t3902 = t3899 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (152 * t3898 - 196 * t3899 + 56 * t3900 - 280 * t3902 - 64 * t3904 + 8 + (182 * t3900 + 188 * t3902 + 9 * t3904 - 55) * t3897) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 679:
            t3907 = np.cos(phi)
            t3908 = t3907 ** 2
            t3909 = t3907 * t3908
            t3912 = t3909 ** 2
            t3910 = t3908 ** 2
            t3906 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3906 ** 2 * (-84 * t3908 + 56 * t3909 + 140 * t3912 - 7 + (70 + 9 * t3910) * t3910 + (-168 * t3910 - 56 * t3912 + 40) * t3907) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t3907) ** (-0.1e1 / 0.2e1)) * ((1 - t3907) ** (-0.1e1 / 0.2e1))

        if Bindx == 680:
            t3915 = np.cos(phi)
            t3916 = t3915 ** 2
            t3918 = t3916 ** 2
            t3922 = t3918 ** 2
            t3917 = t3915 * t3916
            t3920 = t3917 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (-10 * t3916 - 14 * t3917 + 42 * t3918 - 14 * t3920 - 16 * t3922 - 2 + (-28 * t3918 + 30 * t3920 + 3 * t3922 + 9) * t3915) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 681:
            t3932 = np.sin(phi)
            t3930 = t3932 ** 2
            t3924 = np.cos(phi)
            t3925 = t3924 ** 2
            t3927 = t3925 ** 2
            t3926 = t3924 * t3925
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3930 ** 2 * (-5 * t3925 + 65 * t3927 - 5 + (-40 + 9 * t3926) * t3926 + (-40 * t3927 + 16) * t3924) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t3924) ** (-0.1e1 / 0.2e1)) * ((1 - t3924) ** (-0.1e1 / 0.2e1))

        if Bindx == 682:
            t3933 = np.cos(phi)
            t3934 = t3933 ** 2
            t3936 = t3934 ** 2
            t3940 = t3936 ** 2
            t3935 = t3933 * t3934
            t3938 = t3935 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (-20 * t3934 + 52 * t3935 - 4 * t3936 + 52 * t3938 - 32 * t3940 + 4 + (-74 * t3936 + 20 * t3938 + 9 * t3940 - 7) * t3933) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 683:
            t3949 = np.sin(phi)
            t3946 = t3949 ** 2
            t3947 = t3949 * t3946
            t3942 = np.cos(phi)
            t3943 = t3942 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3947 ** 2 * (-1 + (-8 * t3942 + 6 + 3 * t3943) * t3943) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t3942) ** (-0.1e1 / 0.2e1)) * ((1 - t3942) ** (-0.1e1 / 0.2e1))

        if Bindx == 684:
            t3950 = np.cos(phi)
            t3951 = t3950 ** 2
            t3953 = t3951 ** 2
            t3957 = t3953 ** 2
            t3952 = t3950 * t3951
            t3955 = t3952 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (22 * t3951 + 6 * t3952 - 54 * t3953 + 50 * t3955 - 16 * t3957 - 2 + (12 * t3953 - 22 * t3955 + 9 * t3957 - 5) * t3950) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 685:
            t3963 = np.sin(phi)
            t3960 = t3963 ** 2
            t3961 = t3960 ** 2
            t3959 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t3961 ** 2 * (-1 + (-8 + 9 * t3959) * t3959) * np.sin((8 * phi1 - phi2)) * ((1 + t3959) ** (-0.1e1 / 0.2e1)) * ((1 - t3959) ** (-0.1e1 / 0.2e1))

        if Bindx == 686:
            t3964 = np.cos(phi)
            t3965 = t3964 ** 2
            t3969 = -4 * t3965
            t3966 = t3965 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.12155e5) * t3964 * np.cos((8 * phi1)) * (t3969 + 1 + (t3969 + 6 + t3966) * t3966)

        if Bindx == 687:
            t3974 = np.sin(phi)
            t3971 = t3974 ** 2
            t3972 = t3971 ** 2
            t3970 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t3972 ** 2 * (-1 + (8 + 9 * t3970) * t3970) * np.sin((8 * phi1 + phi2)) * ((1 + t3970) ** (-0.1e1 / 0.2e1)) * ((1 - t3970) ** (-0.1e1 / 0.2e1))

        if Bindx == 688:
            t3975 = np.cos(phi)
            t3976 = t3975 ** 2
            t3978 = t3976 ** 2
            t3982 = t3978 ** 2
            t3977 = t3975 * t3976
            t3980 = t3977 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (-22 * t3976 + 6 * t3977 + 54 * t3978 - 50 * t3980 + 16 * t3982 + 2 + (12 * t3978 - 22 * t3980 + 9 * t3982 - 5) * t3975) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 689:
            t3991 = np.sin(phi)
            t3988 = t3991 ** 2
            t3989 = t3991 * t3988
            t3984 = np.cos(phi)
            t3985 = t3984 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3989 ** 2 * (-1 + (8 * t3984 + 6 + 3 * t3985) * t3985) * np.sin((8 * phi1 + 3 * phi2)) * ((1 + t3984) ** (-0.1e1 / 0.2e1)) * ((1 - t3984) ** (-0.1e1 / 0.2e1))

        if Bindx == 690:
            t3992 = np.cos(phi)
            t3993 = t3992 ** 2
            t3995 = t3993 ** 2
            t3999 = t3995 ** 2
            t3994 = t3992 * t3993
            t3997 = t3994 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (20 * t3993 + 52 * t3994 + 4 * t3995 - 52 * t3997 + 32 * t3999 - 4 + (-74 * t3995 + 20 * t3997 + 9 * t3999 - 7) * t3992) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 691:
            t4009 = np.sin(phi)
            t4007 = t4009 ** 2
            t4001 = np.cos(phi)
            t4002 = t4001 ** 2
            t4004 = t4002 ** 2
            t4003 = t4001 * t4002
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t4007 ** 2 * (-5 * t4002 + 65 * t4004 - 5 + (40 + 9 * t4003) * t4003 + (40 * t4004 - 16) * t4001) * np.sin((8 * phi1 + 5 * phi2)) * ((1 + t4001) ** (-0.1e1 / 0.2e1)) * ((1 - t4001) ** (-0.1e1 / 0.2e1))

        if Bindx == 692:
            t4010 = np.cos(phi)
            t4011 = t4010 ** 2
            t4013 = t4011 ** 2
            t4017 = t4013 ** 2
            t4012 = t4010 * t4011
            t4015 = t4012 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (10 * t4011 - 14 * t4012 - 42 * t4013 + 14 * t4015 + 16 * t4017 + 2 + (-28 * t4013 + 30 * t4015 + 3 * t4017 + 9) * t4010) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 693:
            t4020 = np.cos(phi)
            t4021 = t4020 ** 2
            t4022 = t4020 * t4021
            t4025 = t4022 ** 2
            t4023 = t4021 ** 2
            t4019 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t4019 ** 2 * (-84 * t4021 - 56 * t4022 + 140 * t4025 - 7 + (70 + 9 * t4023) * t4023 + (168 * t4023 + 56 * t4025 - 40) * t4020) * np.sin((8 * phi1 + 7 * phi2)) * ((1 + t4020) ** (-0.1e1 / 0.2e1)) * ((1 - t4020) ** (-0.1e1 / 0.2e1))

        if Bindx == 694:
            t4028 = np.cos(phi)
            t4029 = t4028 ** 2
            t4031 = t4029 ** 2
            t4035 = t4031 ** 2
            t4030 = t4028 * t4029
            t4033 = t4030 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (-152 * t4029 - 196 * t4030 - 56 * t4031 + 280 * t4033 + 64 * t4035 - 8 + (182 * t4031 + 188 * t4033 + 9 * t4035 - 55) * t4028) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 695:
            t4037 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt((1 - t4037)) * ((1 + t4037) ** (0.17e2 / 0.2e1)) * np.sin((8 * phi1 + 9 * phi2))

        if Bindx == 696:
            t4038 = np.cos(phi)
            t4039 = t4038 ** 2
            t4041 = t4039 ** 2
            t4045 = t4041 ** 2
            t4040 = t4038 * t4039
            t4043 = t4040 ** 2
            tfunc[..., c] = -0.19e2 / 0.512e3 * np.sqrt(0.2e1) * np.cos((9 * phi1 - 9 * phi2)) * (-36 * t4039 + 84 * t4040 - 126 * t4041 - 84 * t4043 - 9 * t4045 - 1 + (126 * t4041 + 36 * t4043 + t4045 + 9) * t4038)

        if Bindx == 697:
            t4047 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * ((1 - t4047) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t4047)) * np.sin((9 * phi1 - 8 * phi2))

        if Bindx == 698:
            t4048 = np.cos(phi)
            t4049 = t4048 ** 2
            t4051 = t4049 ** 2
            t4057 = 14 * t4051
            t4055 = t4051 ** 2
            t4050 = t4048 * t4049
            t4053 = t4050 ** 2
            tfunc[..., c] = 0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (20 * t4049 - 28 * t4050 - 28 * t4053 - 7 * t4055 + t4057 + 1 + (20 * t4053 + t4055 + t4057 - 7) * t4048) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 699:
            t4058 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t4058) ** (0.15e2 / 0.2e1)) * ((1 + t4058) ** (0.3e1 / 0.2e1)) * np.sin((9 * phi1 - 6 * phi2))

        if Bindx == 700:
            t4059 = np.cos(phi)
            t4060 = t4059 ** 2
            t4061 = t4060 ** 2
            t4064 = t4061 ** 2
            t4062 = t4059 * t4061
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((9 * phi1 - 5 * phi2)) * (14 * t4061 - 14 * t4062 - 5 * t4064 - 1 + (8 * t4062 - 8) * t4060 + (t4064 + 5) * t4059)

        if Bindx == 701:
            t4066 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t4066) ** (0.13e2 / 0.2e1)) * ((1 + t4066) ** (0.5e1 / 0.2e1)) * np.sin((9 * phi1 - 4 * phi2))

        if Bindx == 702:
            t4067 = np.cos(phi)
            t4068 = t4067 ** 2
            t4070 = t4068 ** 2
            t4075 = -6 * t4070
            t4073 = t4070 ** 2
            t4069 = t4067 * t4068
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((9 * phi1 - 3 * phi2)) * (-3 * t4073 + t4075 + 1 + (8 + 8 * t4069) * t4069 + (t4073 + t4075 - 3) * t4067)

        if Bindx == 703:
            t4076 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t4076) ** (0.11e2 / 0.2e1)) * ((1 + t4076) ** (0.7e1 / 0.2e1)) * np.sin((9 * phi1 - 2 * phi2))

        if Bindx == 704:
            t4077 = np.cos(phi)
            t4078 = t4077 ** 2
            t4079 = t4077 * t4078
            t4080 = t4078 ** 2
            t4086 = -4 * t4079 ** 2 + 1 + (6 + t4080) * t4080
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((9 * phi1 - phi2)) * (t4086 * t4077 + 4 * t4078 - 4 * t4079 - t4086)

        if Bindx == 705:
            t4087 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.12155e5) * ((1 - t4087) ** (0.9e1 / 0.2e1)) * ((1 + t4087) ** (0.9e1 / 0.2e1)) * np.sin((9 * phi1))

        if Bindx == 706:
            t4088 = np.cos(phi)
            t4089 = t4088 ** 2
            t4090 = t4088 * t4089
            t4091 = t4089 ** 2
            t4099 = -4 * t4090 ** 2 + 1 + (6 + t4091) * t4091
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((9 * phi1 + phi2)) * (t4099 * t4088 - 4 * t4089 - 4 * t4090 + t4099)

        if Bindx == 707:
            t4100 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t4100) ** (0.7e1 / 0.2e1)) * ((1 + t4100) ** (0.11e2 / 0.2e1)) * np.sin((9 * phi1 + 2 * phi2))

        if Bindx == 708:
            t4101 = np.cos(phi)
            t4102 = t4101 ** 2
            t4104 = t4102 ** 2
            t4107 = t4104 ** 2
            t4103 = t4101 * t4102
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((9 * phi1 + 3 * phi2)) * (6 * t4104 + 3 * t4107 - 1 + (8 - 8 * t4103) * t4103 + (-6 * t4104 + t4107 - 3) * t4101)

        if Bindx == 709:
            t4109 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t4109) ** (0.5e1 / 0.2e1)) * ((1 + t4109) ** (0.13e2 / 0.2e1)) * np.sin((9 * phi1 + 4 * phi2))

        if Bindx == 710:
            t4110 = np.cos(phi)
            t4111 = t4110 ** 2
            t4117 = 8 * t4111
            t4112 = t4111 ** 2
            t4115 = t4112 ** 2
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((9 * phi1 + 5 * phi2)) * (-14 * t4112 + 5 * t4115 + t4117 + 1 + ((t4117 - 14) * t4112 + t4115 + 5) * t4110)

        if Bindx == 711:
            t4118 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t4118) ** (0.3e1 / 0.2e1)) * ((1 + t4118) ** (0.15e2 / 0.2e1)) * np.sin((9 * phi1 + 6 * phi2))

        if Bindx == 712:
            t4119 = np.cos(phi)
            t4120 = t4119 ** 2
            t4122 = t4120 ** 2
            t4126 = t4122 ** 2
            t4121 = t4119 * t4120
            t4124 = t4121 ** 2
            tfunc[..., c] = -0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-20 * t4120 - 28 * t4121 - 14 * t4122 + 28 * t4124 + 7 * t4126 - 1 + (14 * t4122 + 20 * t4124 + t4126 - 7) * t4119) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 713:
            t4128 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * ((1 + t4128) ** (0.17e2 / 0.2e1)) * np.sin((9 * phi1 + 8 * phi2)) * np.sqrt((1 - t4128))

        if Bindx == 714:
            t4129 = np.cos(phi)
            t4130 = t4129 ** 2
            t4132 = t4130 ** 2
            t4138 = 126 * t4132
            t4136 = t4132 ** 2
            t4131 = t4129 * t4130
            t4134 = t4131 ** 2
            tfunc[..., c] = 0.19e2 / 0.512e3 * np.sqrt(0.2e1) * np.cos((9 * phi1 + 9 * phi2)) * (36 * t4130 + 84 * t4131 + 84 * t4134 + 9 * t4136 + t4138 + 1 + (36 * t4134 + t4136 + t4138 + 9) * t4129)

        if Bindx == 715:
            t4139 = np.cos(phi)
            t4140 = t4139 ** 2
            t4141 = t4140 ** 2
            t4143 = t4141 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi2)) * (-10 * t4141 - 5 * t4143 - 1 + (10 * t4141 + t4143 + 5) * t4140)

        if Bindx == 716:
            t4150 = np.sin(phi)
            t4146 = t4150 ** 2
            t4148 = t4150 * t4146 ** 2
            t4145 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t4145 * t4148 ** 2 * np.sin((9 * phi2)) * ((1 + t4145) ** (-0.1e1 / 0.2e1)) * ((1 - t4145) ** (-0.1e1 / 0.2e1))

        if Bindx == 717:
            t4151 = np.cos(phi)
            t4152 = t4151 ** 2
            t4153 = t4152 ** 2
            t4155 = t4153 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t4153 - 77 * t4155 - 1 + (118 * t4153 + 19 * t4155 + 23) * t4152) * np.cos((8 * phi2))

        if Bindx == 718:
            t4161 = np.sin(phi)
            t4158 = t4161 ** 2
            t4159 = t4158 ** 2
            t4157 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t4157 * t4159 ** 2 * (19 * t4157 ** 2 - 3) * np.sin((7 * phi2)) * ((1 + t4157) ** (-0.1e1 / 0.2e1)) * ((1 - t4157) ** (-0.1e1 / 0.2e1))

        if Bindx == 719:
            t4162 = np.cos(phi)
            t4163 = t4162 ** 2
            t4164 = t4163 ** 2
            t4166 = t4164 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t4164 - 1071 * t4166 - 3 + (1278 * t4164 + 323 * t4166 + 111) * t4163) * np.cos((6 * phi2))

        if Bindx == 720:
            t4174 = np.sin(phi)
            t4171 = t4174 ** 2
            t4172 = t4174 * t4171
            t4168 = np.cos(phi)
            t4169 = t4168 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t4168 * t4172 ** 2 * (15 + (-170 + 323 * t4169) * t4169) * np.sin((5 * phi2)) * ((1 + t4168) ** (-0.1e1 / 0.2e1)) * ((1 - t4168) ** (-0.1e1 / 0.2e1))

        if Bindx == 721:
            t4175 = np.cos(phi)
            t4176 = t4175 ** 2
            t4177 = t4176 ** 2
            t4179 = t4177 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t4177 - 901 * t4179 - 1 + (878 * t4177 + 323 * t4179 + 47) * t4176) * np.cos((4 * phi2))

        if Bindx == 722:
            t4187 = np.sin(phi)
            t4185 = t4187 ** 2
            t4181 = np.cos(phi)
            t4182 = t4181 ** 2
            t4183 = t4182 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t4181 * t4185 ** 2 * (-357 * t4183 - 7 + (323 * t4183 + 105) * t4182) * np.sin((3 * phi2)) * ((1 + t4181) ** (-0.1e1 / 0.2e1)) * ((1 - t4181) ** (-0.1e1 / 0.2e1))

        if Bindx == 723:
            t4188 = np.cos(phi)
            t4189 = t4188 ** 2
            t4190 = t4189 ** 2
            t4192 = t4190 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t4190 - 10387 * t4192 - 7 + (8918 * t4190 + 4199 * t4192 + 371) * t4189) * np.cos((2 * phi2))

        if Bindx == 724:
            t4195 = np.cos(phi)
            t4196 = t4195 ** 2
            t4197 = t4196 ** 2
            t4194 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t4195 * t4194 ** 2 * (-1092 * t4196 + 63 + (-7956 * t4196 + 4914 + 4199 * t4197) * t4197) * np.sin(phi2) * ((1 + t4195) ** (-0.1e1 / 0.2e1)) * ((1 - t4195) ** (-0.1e1 / 0.2e1))

        if Bindx == 725:
            t4200 = np.cos(phi)
            t4201 = t4200 ** 2
            t4202 = t4201 ** 2
            t4204 = t4202 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t4204 - 0.315315e6 / 0.128e3 * t4202 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t4204 + 0.945945e6 / 0.128e3 * t4202 + 0.72765e5 / 0.256e3) * t4201

        if Bindx == 726:
            t4207 = np.cos(phi)
            t4208 = t4207 ** 2
            t4209 = t4208 ** 2
            t4206 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t4207 * t4206 ** 2 * (-1092 * t4208 + 63 + (-7956 * t4208 + 4914 + 4199 * t4209) * t4209) * np.sin(phi2) * ((1 + t4207) ** (-0.1e1 / 0.2e1)) * ((1 - t4207) ** (-0.1e1 / 0.2e1))

        if Bindx == 727:
            t4212 = np.cos(phi)
            t4213 = t4212 ** 2
            t4214 = t4213 ** 2
            t4216 = t4214 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t4214 - 10387 * t4216 - 7 + (8918 * t4214 + 4199 * t4216 + 371) * t4213) * np.cos((2 * phi2))

        if Bindx == 728:
            t4224 = np.sin(phi)
            t4222 = t4224 ** 2
            t4218 = np.cos(phi)
            t4219 = t4218 ** 2
            t4220 = t4219 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t4218 * t4222 ** 2 * (-357 * t4220 - 7 + (323 * t4220 + 105) * t4219) * np.sin((3 * phi2)) * ((1 + t4218) ** (-0.1e1 / 0.2e1)) * ((1 - t4218) ** (-0.1e1 / 0.2e1))

        if Bindx == 729:
            t4225 = np.cos(phi)
            t4226 = t4225 ** 2
            t4227 = t4226 ** 2
            t4229 = t4227 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t4227 - 901 * t4229 - 1 + (878 * t4227 + 323 * t4229 + 47) * t4226) * np.cos((4 * phi2))

        if Bindx == 730:
            t4237 = np.sin(phi)
            t4234 = t4237 ** 2
            t4235 = t4237 * t4234
            t4231 = np.cos(phi)
            t4232 = t4231 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t4231 * t4235 ** 2 * (15 + (-170 + 323 * t4232) * t4232) * np.sin((5 * phi2)) * ((1 + t4231) ** (-0.1e1 / 0.2e1)) * ((1 - t4231) ** (-0.1e1 / 0.2e1))

        if Bindx == 731:
            t4238 = np.cos(phi)
            t4239 = t4238 ** 2
            t4240 = t4239 ** 2
            t4242 = t4240 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t4240 - 1071 * t4242 - 3 + (1278 * t4240 + 323 * t4242 + 111) * t4239) * np.cos((6 * phi2))

        if Bindx == 732:
            t4248 = np.sin(phi)
            t4245 = t4248 ** 2
            t4246 = t4245 ** 2
            t4244 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t4244 * t4246 ** 2 * (19 * t4244 ** 2 - 3) * np.sin((7 * phi2)) * ((1 + t4244) ** (-0.1e1 / 0.2e1)) * ((1 - t4244) ** (-0.1e1 / 0.2e1))

        if Bindx == 733:
            t4249 = np.cos(phi)
            t4250 = t4249 ** 2
            t4251 = t4250 ** 2
            t4253 = t4251 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t4251 - 77 * t4253 - 1 + (118 * t4251 + 19 * t4253 + 23) * t4250) * np.cos((8 * phi2))

        if Bindx == 734:
            t4260 = np.sin(phi)
            t4256 = t4260 ** 2
            t4258 = t4260 * t4256 ** 2
            t4255 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t4255 * t4258 ** 2 * np.sin((9 * phi2)) * ((1 + t4255) ** (-0.1e1 / 0.2e1)) * ((1 - t4255) ** (-0.1e1 / 0.2e1))

        if Bindx == 735:
            t4261 = np.cos(phi)
            t4262 = t4261 ** 2
            t4263 = t4262 ** 2
            t4265 = t4263 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi2)) * (-10 * t4263 - 5 * t4265 - 1 + (10 * t4263 + t4265 + 5) * t4262)

        if Bindx == 736:
            t4267 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t4267) ** (0.11e2 / 0.2e1)) * ((1 + t4267) ** (0.9e1 / 0.2e1)) * np.sin((phi1 - 10 * phi2))

        if Bindx == 737:
            t4268 = np.cos(phi)
            t4278 = -9 * t4268
            t4269 = t4268 ** 2
            t4271 = t4269 ** 2
            t4272 = t4268 * t4271
            t4270 = t4268 * t4269
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t4269 + t4278 - 1 + (-54 + 10 * t4272) * t4272 + (-46 + (t4278 - 41) * t4271) * t4271 + (36 + (36 * t4268 + 64) * t4270) * t4270) * np.cos((phi1 - 9 * phi2))

        if Bindx == 738:
            t4285 = np.sin(phi)
            t4282 = t4285 ** 2
            t4283 = t4282 ** 2
            t4279 = np.cos(phi)
            t4280 = t4279 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t4283 ** 2 * (-76 * t4280 + 4 + (95 * t4280 - 23) * t4279) * np.sin((phi1 - 8 * phi2)) * ((1 + t4279) ** (-0.1e1 / 0.2e1)) * ((1 - t4279) ** (-0.1e1 / 0.2e1))

        if Bindx == 739:
            t4286 = np.cos(phi)
            t4287 = t4286 ** 2
            t4289 = t4287 ** 2
            t4293 = t4289 ** 2
            t4288 = t4286 * t4287
            t4291 = t4288 ** 2
            t4290 = t4286 * t4289
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t4287 + 196 * t4288 - 442 * t4289 + 816 * t4291 - 651 * t4293 - 3 + (-462 + 190 * t4290) * t4290 + (420 * t4291 - 133 * t4293 - 21) * t4286) * np.cos((phi1 - 7 * phi2))

        if Bindx == 740:
            t4304 = np.sin(phi)
            t4301 = t4304 ** 2
            t4302 = t4304 * t4301
            t4296 = np.cos(phi)
            t4297 = t4296 ** 2
            t4299 = t4297 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t4302 ** 2 * (306 * t4297 - 969 * t4299 - 9 + (-1054 * t4297 + 1615 * t4299 + 111) * t4296) * np.sin((phi1 - 6 * phi2)) * ((1 + t4296) ** (-0.1e1 / 0.2e1)) * ((1 - t4296) ** (-0.1e1 / 0.2e1))

        if Bindx == 741:
            t4305 = np.cos(phi)
            t4306 = t4305 ** 2
            t4308 = t4306 ** 2
            t4312 = t4308 ** 2
            t4307 = t4305 * t4306
            t4310 = t4307 ** 2
            t4309 = t4305 * t4308
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t4306 + 200 * t4307 - 838 * t4308 + 1956 * t4310 - 1887 * t4312 - 3 + (-678 + 646 * t4309) * t4309 + (816 * t4310 - 323 * t4312 - 15) * t4305) * np.cos((phi1 - 5 * phi2))

        if Bindx == 742:
            t4324 = np.sin(phi)
            t4322 = t4324 ** 2
            t4315 = np.cos(phi)
            t4316 = t4315 ** 2
            t4317 = t4315 * t4316
            t4320 = t4317 ** 2
            t4318 = t4316 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4322 ** 2 * (-90 * t4316 + 645 * t4317 + 510 * t4318 - 646 * t4320 + 2 + (-1989 * t4318 + 1615 * t4320 - 47) * t4315) * np.sin((phi1 - 4 * phi2)) * ((1 + t4315) ** (-0.1e1 / 0.2e1)) * ((1 - t4315) ** (-0.1e1 / 0.2e1))

        if Bindx == 743:
            t4325 = np.cos(phi)
            t4326 = t4325 ** 2
            t4328 = t4326 ** 2
            t4332 = t4328 ** 2
            t4327 = t4325 * t4326
            t4330 = t4327 ** 2
            t4329 = t4325 * t4328
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4326 + 336 * t4327 - 2758 * t4328 + 7532 * t4330 - 8347 * t4332 - 7 + (-1386 + 3230 * t4329) * t4329 + (2040 * t4330 - 969 * t4332 - 21) * t4325) * np.cos((phi1 - 3 * phi2))

        if Bindx == 744:
            t4336 = np.cos(phi)
            t4337 = t4336 ** 2
            t4339 = t4337 ** 2
            t4343 = t4339 ** 2
            t4338 = t4336 * t4337
            t4341 = t4338 ** 2
            t4335 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4335 ** 2 * (364 * t4337 - 6188 * t4338 - 2730 * t4339 + 6188 * t4341 - 4199 * t4343 - 7 + (26754 * t4339 - 41548 * t4341 + 20995 * t4343 + 371) * t4336) * np.sin((phi1 - 2 * phi2)) * ((1 + t4336) ** (-0.1e1 / 0.2e1)) * ((1 - t4336) ** (-0.1e1 / 0.2e1))

        if Bindx == 745:
            t4345 = np.cos(phi)
            t4346 = t4345 ** 2
            t4348 = t4346 ** 2
            t4352 = t4348 ** 2
            t4347 = t4345 * t4346
            t4350 = t4347 ** 2
            t4349 = t4345 * t4348
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * (3402 * t4346 + 1092 * t4347 - 28938 * t4348 + 85176 * t4350 - 101439 * t4352 - 63 + (-4914 + 41990 * t4349) * t4349 + (7956 * t4350 - 4199 * t4352 - 63) * t4345) * np.cos(phi1 - phi2)

        if Bindx == 746:
            t4356 = np.cos(phi)
            t4357 = t4356 ** 2
            t4358 = t4357 ** 2
            t4355 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t4356 * t4355 ** 2 * (-1092 * t4357 + 63 + (-7956 * t4357 + 4914 + 4199 * t4358) * t4358) * np.sin(phi1) * ((1 + t4356) ** (-0.1e1 / 0.2e1)) * ((1 - t4356) ** (-0.1e1 / 0.2e1))

        if Bindx == 747:
            t4361 = np.cos(phi)
            t4362 = t4361 ** 2
            t4364 = t4362 ** 2
            t4368 = t4364 ** 2
            t4363 = t4361 * t4362
            t4366 = t4363 ** 2
            t4365 = t4361 * t4364
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * (3402 * t4362 - 1092 * t4363 - 28938 * t4364 + 85176 * t4366 - 101439 * t4368 - 63 + (4914 + 41990 * t4365) * t4365 + (-7956 * t4366 + 4199 * t4368 + 63) * t4361) * np.cos(phi1 + phi2)

        if Bindx == 748:
            t4372 = np.cos(phi)
            t4373 = t4372 ** 2
            t4375 = t4373 ** 2
            t4379 = t4375 ** 2
            t4374 = t4372 * t4373
            t4377 = t4374 ** 2
            t4371 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4371 ** 2 * (-364 * t4373 - 6188 * t4374 + 2730 * t4375 - 6188 * t4377 + 4199 * t4379 + 7 + (26754 * t4375 - 41548 * t4377 + 20995 * t4379 + 371) * t4372) * np.sin((phi1 + 2 * phi2)) * ((1 + t4372) ** (-0.1e1 / 0.2e1)) * ((1 - t4372) ** (-0.1e1 / 0.2e1))

        if Bindx == 749:
            t4381 = np.cos(phi)
            t4382 = t4381 ** 2
            t4384 = t4382 ** 2
            t4388 = t4384 ** 2
            t4383 = t4381 * t4382
            t4386 = t4383 ** 2
            t4385 = t4381 * t4384
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4382 - 336 * t4383 - 2758 * t4384 + 7532 * t4386 - 8347 * t4388 - 7 + (1386 + 3230 * t4385) * t4385 + (-2040 * t4386 + 969 * t4388 + 21) * t4381) * np.cos((phi1 + 3 * phi2))

        if Bindx == 750:
            t4400 = np.sin(phi)
            t4398 = t4400 ** 2
            t4391 = np.cos(phi)
            t4392 = t4391 ** 2
            t4393 = t4391 * t4392
            t4396 = t4393 ** 2
            t4394 = t4392 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4398 ** 2 * (90 * t4392 + 645 * t4393 - 510 * t4394 + 646 * t4396 - 2 + (-1989 * t4394 + 1615 * t4396 - 47) * t4391) * np.sin((phi1 + 4 * phi2)) * ((1 + t4391) ** (-0.1e1 / 0.2e1)) * ((1 - t4391) ** (-0.1e1 / 0.2e1))

        if Bindx == 751:
            t4401 = np.cos(phi)
            t4402 = t4401 ** 2
            t4404 = t4402 ** 2
            t4408 = t4404 ** 2
            t4403 = t4401 * t4402
            t4406 = t4403 ** 2
            t4405 = t4401 * t4404
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t4402 - 200 * t4403 - 838 * t4404 + 1956 * t4406 - 1887 * t4408 - 3 + (678 + 646 * t4405) * t4405 + (-816 * t4406 + 323 * t4408 + 15) * t4401) * np.cos((phi1 + 5 * phi2))

        if Bindx == 752:
            t4419 = np.sin(phi)
            t4416 = t4419 ** 2
            t4417 = t4419 * t4416
            t4411 = np.cos(phi)
            t4412 = t4411 ** 2
            t4414 = t4412 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t4417 ** 2 * (-306 * t4412 + 969 * t4414 + 9 + (-1054 * t4412 + 1615 * t4414 + 111) * t4411) * np.sin((phi1 + 6 * phi2)) * ((1 + t4411) ** (-0.1e1 / 0.2e1)) * ((1 - t4411) ** (-0.1e1 / 0.2e1))

        if Bindx == 753:
            t4420 = np.cos(phi)
            t4421 = t4420 ** 2
            t4423 = t4421 ** 2
            t4427 = t4423 ** 2
            t4422 = t4420 * t4421
            t4425 = t4422 ** 2
            t4424 = t4420 * t4423
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t4421 - 196 * t4422 - 442 * t4423 + 816 * t4425 - 651 * t4427 - 3 + (462 + 190 * t4424) * t4424 + (-420 * t4425 + 133 * t4427 + 21) * t4420) * np.cos((phi1 + 7 * phi2))

        if Bindx == 754:
            t4436 = np.sin(phi)
            t4433 = t4436 ** 2
            t4434 = t4433 ** 2
            t4430 = np.cos(phi)
            t4431 = t4430 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t4434 ** 2 * (76 * t4431 - 4 + (95 * t4431 - 23) * t4430) * np.sin((phi1 + 8 * phi2)) * ((1 + t4430) ** (-0.1e1 / 0.2e1)) * ((1 - t4430) ** (-0.1e1 / 0.2e1))

        if Bindx == 755:
            t4437 = np.cos(phi)
            t4447 = 9 * t4437
            t4438 = t4437 ** 2
            t4440 = t4438 ** 2
            t4441 = t4437 * t4440
            t4439 = t4437 * t4438
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t4438 + t4447 - 1 + (54 + 10 * t4441) * t4441 + (-46 + (t4447 - 41) * t4440) * t4440 + (-36 + (-36 * t4437 + 64) * t4439) * t4439) * np.cos((phi1 + 9 * phi2))

        if Bindx == 756:
            t4448 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t4448) ** (0.9e1 / 0.2e1)) * ((1 + t4448) ** (0.11e2 / 0.2e1)) * np.sin((phi1 + 10 * phi2))

        if Bindx == 757:
            t4449 = np.cos(phi)
            t4459 = -2 * t4449
            t4450 = t4449 ** 2
            t4452 = t4450 ** 2
            t4453 = t4449 * t4452
            t4451 = t4449 * t4450
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((2 * phi1 - 10 * phi2)) * (-3 * t4450 + t4459 + 1 + (-12 + t4453) * t4453 + (2 + (t4459 - 3) * t4452) * t4452 + (8 + (8 * t4449 + 2) * t4451) * t4451)

        if Bindx == 758:
            t4466 = np.sin(phi)
            t4463 = t4466 ** 2
            t4464 = t4463 ** 2
            t4460 = np.cos(phi)
            t4461 = t4460 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t4464 ** 2 * (-9 * t4461 + 1 + (5 * t4461 + 3) * t4460) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t4460) ** (-0.1e1 / 0.2e1)) * ((1 - t4460) ** (-0.1e1 / 0.2e1))

        if Bindx == 759:
            t4467 = np.cos(phi)
            t4468 = t4467 ** 2
            t4470 = t4468 ** 2
            t4474 = t4470 ** 2
            t4469 = t4467 * t4468
            t4472 = t4469 ** 2
            t4471 = t4467 * t4470
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t4468 + 272 * t4469 - 38 * t4470 + 230 * t4472 - 267 * t4474 + 1 + (-576 + 95 * t4471) * t4471 + (496 * t4472 - 152 * t4474 - 40) * t4467) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 760:
            t4485 = np.sin(phi)
            t4482 = t4485 ** 2
            t4483 = t4485 * t4482
            t4477 = np.cos(phi)
            t4478 = t4477 ** 2
            t4480 = t4478 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t4483 ** 2 * (182 * t4478 - 399 * t4480 - 7 + (-66 * t4478 + 285 * t4480 + 5) * t4477) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t4477) ** (-0.1e1 / 0.2e1)) * ((1 - t4477) ** (-0.1e1 / 0.2e1))

        if Bindx == 761:
            t4486 = np.cos(phi)
            t4487 = t4486 ** 2
            t4489 = t4487 ** 2
            t4493 = t4489 ** 2
            t4488 = t4486 * t4487
            t4491 = t4488 ** 2
            t4490 = t4486 * t4489
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t4487 + 4888 * t4488 - 4486 * t4489 + 11898 * t4491 - 12903 * t4493 - 19 + (-14276 + 4845 * t4490) * t4490 + (15640 * t4491 - 5814 * t4493 - 438) * t4486) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 762:
            t4505 = np.sin(phi)
            t4503 = t4505 ** 2
            t4496 = np.cos(phi)
            t4497 = t4496 ** 2
            t4498 = t4496 * t4497
            t4501 = t4498 ** 2
            t4499 = t4497 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t4503 ** 2 * (-195 * t4497 + 355 * t4498 + 935 * t4499 - 969 * t4501 + 5 + (-1071 * t4499 + 969 * t4501 - 29) * t4496) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t4496) ** (-0.1e1 / 0.2e1)) * ((1 - t4496) ** (-0.1e1 / 0.2e1))

        if Bindx == 763:
            t4506 = np.cos(phi)
            t4507 = t4506 ** 2
            t4509 = t4507 ** 2
            t4513 = t4509 ** 2
            t4508 = t4506 * t4507
            t4511 = t4508 ** 2
            t4510 = t4506 * t4509
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4507 + 1784 * t4508 - 4282 * t4509 + 11258 * t4511 - 12393 * t4513 - 13 + (-6624 + 4845 * t4510) * t4510 + (8840 * t4511 - 3876 * t4513 - 124) * t4506) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 764:
            t4517 = np.cos(phi)
            t4518 = t4517 ** 2
            t4520 = t4518 ** 2
            t4524 = t4520 ** 2
            t4519 = t4517 * t4518
            t4522 = t4519 ** 2
            t4516 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4516 ** 2 * (336 * t4518 - 1624 * t4519 - 2310 * t4520 + 4760 * t4522 - 2907 * t4524 - 7 + (6594 * t4520 - 9792 * t4522 + 4845 * t4524 + 105) * t4517) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t4517) ** (-0.1e1 / 0.2e1)) * ((1 - t4517) ** (-0.1e1 / 0.2e1))

        if Bindx == 765:
            t4526 = np.cos(phi)
            t4527 = t4526 ** 2
            t4529 = t4527 ** 2
            t4533 = t4529 ** 2
            t4528 = t4526 * t4527
            t4531 = t4528 ** 2
            t4530 = t4526 * t4529
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (6069 * t4527 + 8008 * t4528 - 48958 * t4529 + 137410 * t4531 - 157131 * t4533 - 119 + (-33852 + 62985 * t4530) * t4530 + (51272 * t4531 - 25194 * t4533 - 490) * t4526) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 766:
            t4537 = np.cos(phi)
            t4538 = t4537 ** 2
            t4540 = t4538 ** 2
            t4544 = t4540 ** 2
            t4539 = t4537 * t4538
            t4542 = t4539 ** 2
            t4536 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4536 ** 2 * (364 * t4538 - 6188 * t4539 - 2730 * t4540 + 6188 * t4542 - 4199 * t4544 - 7 + (26754 * t4540 - 41548 * t4542 + 20995 * t4544 + 371) * t4537) * np.sin((2 * phi1 - phi2)) * ((1 + t4537) ** (-0.1e1 / 0.2e1)) * ((1 - t4537) ** (-0.1e1 / 0.2e1))

        if Bindx == 767:
            t4546 = np.cos(phi)
            t4547 = t4546 ** 2
            t4548 = t4547 ** 2
            t4550 = t4548 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t4548 - 10387 * t4550 - 7 + (8918 * t4548 + 4199 * t4550 + 371) * t4547) * np.cos((2 * phi1))

        if Bindx == 768:
            t4553 = np.cos(phi)
            t4554 = t4553 ** 2
            t4556 = t4554 ** 2
            t4560 = t4556 ** 2
            t4555 = t4553 * t4554
            t4558 = t4555 ** 2
            t4552 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4552 ** 2 * (-364 * t4554 - 6188 * t4555 + 2730 * t4556 - 6188 * t4558 + 4199 * t4560 + 7 + (26754 * t4556 - 41548 * t4558 + 20995 * t4560 + 371) * t4553) * np.sin((2 * phi1 + phi2)) * ((1 + t4553) ** (-0.1e1 / 0.2e1)) * ((1 - t4553) ** (-0.1e1 / 0.2e1))

        if Bindx == 769:
            t4562 = np.cos(phi)
            t4563 = t4562 ** 2
            t4565 = t4563 ** 2
            t4569 = t4565 ** 2
            t4564 = t4562 * t4563
            t4567 = t4564 ** 2
            t4566 = t4562 * t4565
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (6069 * t4563 - 8008 * t4564 - 48958 * t4565 + 137410 * t4567 - 157131 * t4569 - 119 + (33852 + 62985 * t4566) * t4566 + (-51272 * t4567 + 25194 * t4569 + 490) * t4562) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 770:
            t4573 = np.cos(phi)
            t4574 = t4573 ** 2
            t4576 = t4574 ** 2
            t4580 = t4576 ** 2
            t4575 = t4573 * t4574
            t4578 = t4575 ** 2
            t4572 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4572 ** 2 * (-336 * t4574 - 1624 * t4575 + 2310 * t4576 - 4760 * t4578 + 2907 * t4580 + 7 + (6594 * t4576 - 9792 * t4578 + 4845 * t4580 + 105) * t4573) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t4573) ** (-0.1e1 / 0.2e1)) * ((1 - t4573) ** (-0.1e1 / 0.2e1))

        if Bindx == 771:
            t4582 = np.cos(phi)
            t4583 = t4582 ** 2
            t4585 = t4583 ** 2
            t4589 = t4585 ** 2
            t4584 = t4582 * t4583
            t4587 = t4584 ** 2
            t4586 = t4582 * t4585
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4583 - 1784 * t4584 - 4282 * t4585 + 11258 * t4587 - 12393 * t4589 - 13 + (6624 + 4845 * t4586) * t4586 + (-8840 * t4587 + 3876 * t4589 + 124) * t4582) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 772:
            t4592 = np.cos(phi)
            t4593 = t4592 ** 2
            t4594 = t4592 * t4593
            t4602 = 969 * t4594 ** 2
            t4601 = np.sin(phi)
            t4599 = t4601 ** 2
            t4595 = t4593 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t4599 ** 2 * (195 * t4593 + 355 * t4594 - 935 * t4595 + t4602 - 5 + (-1071 * t4595 + t4602 - 29) * t4592) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t4592) ** (-0.1e1 / 0.2e1)) * ((1 - t4592) ** (-0.1e1 / 0.2e1))

        if Bindx == 773:
            t4603 = np.cos(phi)
            t4604 = t4603 ** 2
            t4606 = t4604 ** 2
            t4610 = t4606 ** 2
            t4605 = t4603 * t4604
            t4608 = t4605 ** 2
            t4607 = t4603 * t4606
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t4604 - 4888 * t4605 - 4486 * t4606 + 11898 * t4608 - 12903 * t4610 - 19 + (14276 + 4845 * t4607) * t4607 + (-15640 * t4608 + 5814 * t4610 + 438) * t4603) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 774:
            t4621 = np.sin(phi)
            t4618 = t4621 ** 2
            t4619 = t4621 * t4618
            t4613 = np.cos(phi)
            t4614 = t4613 ** 2
            t4616 = t4614 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t4619 ** 2 * (-182 * t4614 + 399 * t4616 + 7 + (-66 * t4614 + 285 * t4616 + 5) * t4613) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t4613) ** (-0.1e1 / 0.2e1)) * ((1 - t4613) ** (-0.1e1 / 0.2e1))

        if Bindx == 775:
            t4622 = np.cos(phi)
            t4623 = t4622 ** 2
            t4625 = t4623 ** 2
            t4629 = t4625 ** 2
            t4624 = t4622 * t4623
            t4627 = t4624 ** 2
            t4626 = t4622 * t4625
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t4623 - 272 * t4624 - 38 * t4625 + 230 * t4627 - 267 * t4629 + 1 + (576 + 95 * t4626) * t4626 + (-496 * t4627 + 152 * t4629 + 40) * t4622) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 776:
            t4638 = np.sin(phi)
            t4635 = t4638 ** 2
            t4636 = t4635 ** 2
            t4632 = np.cos(phi)
            t4633 = t4632 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t4636 ** 2 * (9 * t4633 - 1 + (5 * t4633 + 3) * t4632) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t4632) ** (-0.1e1 / 0.2e1)) * ((1 - t4632) ** (-0.1e1 / 0.2e1))

        if Bindx == 777:
            t4639 = np.cos(phi)
            t4649 = 2 * t4639
            t4640 = t4639 ** 2
            t4642 = t4640 ** 2
            t4643 = t4639 * t4642
            t4641 = t4639 * t4640
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((2 * phi1 + 10 * phi2)) * (-3 * t4640 + t4649 + 1 + (12 + t4643) * t4643 + (2 + (t4649 - 3) * t4642) * t4642 + (-8 + (-8 * t4639 + 2) * t4641) * t4641)

        if Bindx == 778:
            t4650 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t4650) ** (0.13e2 / 0.2e1)) * ((1 + t4650) ** (0.7e1 / 0.2e1)) * np.sin((3 * phi1 - 10 * phi2))

        if Bindx == 779:
            t4651 = np.cos(phi)
            t4652 = t4651 ** 2
            t4654 = t4652 ** 2
            t4658 = t4654 ** 2
            t4653 = t4651 * t4652
            t4656 = t4653 ** 2
            t4655 = t4651 * t4654
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t4652 + 24 * t4653 + 62 * t4654 - 36 * t4656 - 9 * t4658 + 3 + (-78 + 10 * t4655) * t4655 + (80 * t4656 - 27 * t4658 + 1) * t4651) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 780:
            t4669 = np.sin(phi)
            t4666 = t4669 ** 2
            t4667 = t4669 * t4666
            t4661 = np.cos(phi)
            t4662 = t4661 ** 2
            t4664 = t4662 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t4667 ** 2 * (64 * t4662 - 228 * t4664 - 4 + (118 * t4662 + 95 * t4664 - 45) * t4661) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t4661) ** (-0.1e1 / 0.2e1)) * ((1 - t4661) ** (-0.1e1 / 0.2e1))

        if Bindx == 781:
            t4670 = np.cos(phi)
            t4671 = t4670 ** 2
            t4673 = t4671 ** 2
            t4677 = t4673 ** 2
            t4672 = t4670 * t4671
            t4675 = t4672 ** 2
            t4674 = t4670 * t4673
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t4671 + 952 * t4672 + 782 * t4673 - 180 * t4675 - 897 * t4677 + 11 + (-2786 + 570 * t4674) * t4674 + (3136 * t4675 - 1197 * t4677 - 105) * t4670) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 782:
            t4689 = np.sin(phi)
            t4687 = t4689 ** 2
            t4680 = np.cos(phi)
            t4681 = t4680 ** 2
            t4682 = t4680 * t4681
            t4685 = t4682 ** 2
            t4683 = t4681 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t4687 ** 2 * (-2139 * t4681 - 1089 * t4682 + 8551 * t4683 - 8721 * t4685 + 69 + (-1683 * t4683 + 4845 * t4685 + 167) * t4680) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t4680) ** (-0.1e1 / 0.2e1)) * ((1 - t4680) ** (-0.1e1 / 0.2e1))

        if Bindx == 783:
            t4690 = np.cos(phi)
            t4691 = t4690 ** 2
            t4693 = t4691 ** 2
            t4697 = t4693 ** 2
            t4692 = t4690 * t4691
            t4695 = t4692 ** 2
            t4694 = t4690 * t4693
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t4691 + 1660 * t4692 - 562 * t4693 + 2616 * t4695 - 4029 * t4697 - 1 + (-5486 + 1938 * t4694) * t4694 + (6868 * t4695 - 2907 * t4697 - 135) * t4690) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 784:
            t4701 = np.cos(phi)
            t4702 = t4701 ** 2
            t4704 = t4702 ** 2
            t4708 = t4704 ** 2
            t4703 = t4701 * t4702
            t4706 = t4703 ** 2
            t4700 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * t4700 ** 2 * (924 * t4702 - 1168 * t4703 - 5580 * t4704 + 10268 * t4706 - 5814 * t4708 - 22 + (5034 * t4704 - 8568 * t4706 + 4845 * t4708 + 81) * t4701) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t4701) ** (-0.1e1 / 0.2e1)) * ((1 - t4701) ** (-0.1e1 / 0.2e1))

        if Bindx == 785:
            t4710 = np.cos(phi)
            t4711 = t4710 ** 2
            t4713 = t4711 ** 2
            t4717 = t4713 ** 2
            t4712 = t4710 * t4711
            t4715 = t4712 ** 2
            t4714 = t4710 * t4713
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (966 * t4711 + 3612 * t4712 - 7322 * t4713 + 20160 * t4715 - 23409 * t4717 - 21 + (-13818 + 9690 * t4714) * t4714 + (19108 * t4715 - 8721 * t4717 - 245) * t4710) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 786:
            t4721 = np.cos(phi)
            t4722 = t4721 ** 2
            t4724 = t4722 ** 2
            t4728 = t4724 ** 2
            t4723 = t4721 * t4722
            t4726 = t4723 ** 2
            t4720 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4720 ** 2 * (336 * t4722 - 1624 * t4723 - 2310 * t4724 + 4760 * t4726 - 2907 * t4728 - 7 + (6594 * t4724 - 9792 * t4726 + 4845 * t4728 + 105) * t4721) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t4721) ** (-0.1e1 / 0.2e1)) * ((1 - t4721) ** (-0.1e1 / 0.2e1))

        if Bindx == 787:
            t4730 = np.cos(phi)
            t4731 = t4730 ** 2
            t4733 = t4731 ** 2
            t4737 = t4733 ** 2
            t4732 = t4730 * t4731
            t4735 = t4732 ** 2
            t4734 = t4730 * t4733
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4731 + 336 * t4732 - 2758 * t4733 + 7532 * t4735 - 8347 * t4737 - 7 + (-1386 + 3230 * t4734) * t4734 + (2040 * t4735 - 969 * t4737 - 21) * t4730) * np.cos((3 * phi1 - phi2))

        if Bindx == 788:
            t4746 = np.sin(phi)
            t4744 = t4746 ** 2
            t4740 = np.cos(phi)
            t4741 = t4740 ** 2
            t4742 = t4741 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t4740 * t4744 ** 2 * (-357 * t4742 - 7 + (323 * t4742 + 105) * t4741) * np.sin((3 * phi1)) * ((1 + t4740) ** (-0.1e1 / 0.2e1)) * ((1 - t4740) ** (-0.1e1 / 0.2e1))

        if Bindx == 789:
            t4747 = np.cos(phi)
            t4748 = t4747 ** 2
            t4750 = t4748 ** 2
            t4754 = t4750 ** 2
            t4749 = t4747 * t4748
            t4752 = t4749 ** 2
            t4751 = t4747 * t4750
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4748 - 336 * t4749 - 2758 * t4750 + 7532 * t4752 - 8347 * t4754 - 7 + (1386 + 3230 * t4751) * t4751 + (-2040 * t4752 + 969 * t4754 + 21) * t4747) * np.cos((3 * phi1 + phi2))

        if Bindx == 790:
            t4758 = np.cos(phi)
            t4759 = t4758 ** 2
            t4761 = t4759 ** 2
            t4765 = t4761 ** 2
            t4760 = t4758 * t4759
            t4763 = t4760 ** 2
            t4757 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4757 ** 2 * (-336 * t4759 - 1624 * t4760 + 2310 * t4761 - 4760 * t4763 + 2907 * t4765 + 7 + (6594 * t4761 - 9792 * t4763 + 4845 * t4765 + 105) * t4758) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t4758) ** (-0.1e1 / 0.2e1)) * ((1 - t4758) ** (-0.1e1 / 0.2e1))

        if Bindx == 791:
            t4767 = np.cos(phi)
            t4768 = t4767 ** 2
            t4770 = t4768 ** 2
            t4774 = t4770 ** 2
            t4769 = t4767 * t4768
            t4772 = t4769 ** 2
            t4771 = t4767 * t4770
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (966 * t4768 - 3612 * t4769 - 7322 * t4770 + 20160 * t4772 - 23409 * t4774 - 21 + (13818 + 9690 * t4771) * t4771 + (-19108 * t4772 + 8721 * t4774 + 245) * t4767) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 792:
            t4778 = np.cos(phi)
            t4779 = t4778 ** 2
            t4781 = t4779 ** 2
            t4785 = t4781 ** 2
            t4780 = t4778 * t4779
            t4783 = t4780 ** 2
            t4777 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * t4777 ** 2 * (-924 * t4779 - 1168 * t4780 + 5580 * t4781 - 10268 * t4783 + 5814 * t4785 + 22 + (5034 * t4781 - 8568 * t4783 + 4845 * t4785 + 81) * t4778) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t4778) ** (-0.1e1 / 0.2e1)) * ((1 - t4778) ** (-0.1e1 / 0.2e1))

        if Bindx == 793:
            t4787 = np.cos(phi)
            t4788 = t4787 ** 2
            t4790 = t4788 ** 2
            t4794 = t4790 ** 2
            t4789 = t4787 * t4788
            t4792 = t4789 ** 2
            t4791 = t4787 * t4790
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t4788 - 1660 * t4789 - 562 * t4790 + 2616 * t4792 - 4029 * t4794 - 1 + (5486 + 1938 * t4791) * t4791 + (-6868 * t4792 + 2907 * t4794 + 135) * t4787) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 794:
            t4806 = np.sin(phi)
            t4804 = t4806 ** 2
            t4797 = np.cos(phi)
            t4798 = t4797 ** 2
            t4799 = t4797 * t4798
            t4802 = t4799 ** 2
            t4800 = t4798 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t4804 ** 2 * (2139 * t4798 - 1089 * t4799 - 8551 * t4800 + 8721 * t4802 - 69 + (-1683 * t4800 + 4845 * t4802 + 167) * t4797) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t4797) ** (-0.1e1 / 0.2e1)) * ((1 - t4797) ** (-0.1e1 / 0.2e1))

        if Bindx == 795:
            t4807 = np.cos(phi)
            t4808 = t4807 ** 2
            t4810 = t4808 ** 2
            t4814 = t4810 ** 2
            t4809 = t4807 * t4808
            t4812 = t4809 ** 2
            t4811 = t4807 * t4810
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t4808 - 952 * t4809 + 782 * t4810 - 180 * t4812 - 897 * t4814 + 11 + (2786 + 570 * t4811) * t4811 + (-3136 * t4812 + 1197 * t4814 + 105) * t4807) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 796:
            t4825 = np.sin(phi)
            t4822 = t4825 ** 2
            t4823 = t4825 * t4822
            t4817 = np.cos(phi)
            t4818 = t4817 ** 2
            t4820 = t4818 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t4823 ** 2 * (-64 * t4818 + 228 * t4820 + 4 + (118 * t4818 + 95 * t4820 - 45) * t4817) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t4817) ** (-0.1e1 / 0.2e1)) * ((1 - t4817) ** (-0.1e1 / 0.2e1))

        if Bindx == 797:
            t4826 = np.cos(phi)
            t4827 = t4826 ** 2
            t4829 = t4827 ** 2
            t4833 = t4829 ** 2
            t4828 = t4826 * t4827
            t4831 = t4828 ** 2
            t4830 = t4826 * t4829
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t4827 - 24 * t4828 + 62 * t4829 - 36 * t4831 - 9 * t4833 + 3 + (78 + 10 * t4830) * t4830 + (-80 * t4831 + 27 * t4833 - 1) * t4826) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 798:
            t4836 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t4836) ** (0.7e1 / 0.2e1)) * ((1 + t4836) ** (0.13e2 / 0.2e1)) * np.sin((3 * phi1 + 10 * phi2))

        if Bindx == 799:
            t4837 = np.cos(phi)
            t4838 = t4837 ** 2
            t4840 = t4838 ** 2
            t4843 = t4840 ** 2
            t4844 = t4837 * t4843
            t4839 = t4837 * t4838
            t4841 = t4839 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((4 * phi1 - 10 * phi2)) * (-3 * t4838 - 8 * t4839 + 14 * t4840 - 14 * t4841 + 3 * t4843 - 4 * t4844 - 1 + (8 * t4841 + t4844 + 4) * t4837)

        if Bindx == 800:
            t4854 = np.sin(phi)
            t4851 = t4854 ** 2
            t4852 = t4854 * t4851
            t4846 = np.cos(phi)
            t4847 = t4846 ** 2
            t4849 = t4847 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t4852 ** 2 * (-8 * t4847 - 18 * t4849 + 2 + (22 * t4847 + 5 * t4849 - 3) * t4846) * np.sin((4 * phi1 - 9 * phi2)) * ((1 + t4846) ** (-0.1e1 / 0.2e1)) * ((1 - t4846) ** (-0.1e1 / 0.2e1))

        if Bindx == 801:
            t4855 = np.cos(phi)
            t4856 = t4855 ** 2
            t4858 = t4856 ** 2
            t4862 = t4858 ** 2
            t4857 = t4855 * t4856
            t4860 = t4857 ** 2
            t4859 = t4855 * t4858
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t4856 - 32 * t4857 + 574 * t4858 - 602 * t4860 + 87 * t4862 + 11 + (-336 + 95 * t4859) * t4859 + (640 * t4860 - 304 * t4862 + 32) * t4855) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 802:
            t4874 = np.sin(phi)
            t4872 = t4874 ** 2
            t4865 = np.cos(phi)
            t4866 = t4865 ** 2
            t4867 = t4865 * t4866
            t4870 = t4867 ** 2
            t4868 = t4866 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t4872 ** 2 * (-42 * t4866 - 497 * t4867 + 518 * t4868 - 798 * t4870 + 2 + (441 * t4868 + 285 * t4870 + 91) * t4865) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t4865) ** (-0.1e1 / 0.2e1)) * ((1 - t4865) ** (-0.1e1 / 0.2e1))

        if Bindx == 803:
            t4875 = np.cos(phi)
            t4876 = t4875 ** 2
            t4878 = t4876 ** 2
            t4882 = t4878 ** 2
            t4877 = t4875 * t4876
            t4880 = t4877 ** 2
            t4879 = t4875 * t4878
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t4876 + 5032 * t4877 + 8918 * t4878 - 8022 * t4880 - 3417 * t4882 + 83 + (-18368 + 4845 * t4879) * t4879 + (25432 * t4880 - 11628 * t4882 - 468) * t4875) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 804:
            t4886 = np.cos(phi)
            t4887 = t4886 ** 2
            t4889 = t4887 ** 2
            t4893 = t4889 ** 2
            t4888 = t4886 * t4887
            t4891 = t4888 ** 2
            t4885 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t4885 ** 2 * (340 * t4887 + 392 * t4888 - 1820 * t4889 + 3332 * t4891 - 1938 * t4893 - 10 + (-406 * t4889 - 816 * t4891 + 969 * t4893 - 43) * t4886) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t4886) ** (-0.1e1 / 0.2e1)) * ((1 - t4886) ** (-0.1e1 / 0.2e1))

        if Bindx == 805:
            t4895 = np.cos(phi)
            t4896 = t4895 ** 2
            t4898 = t4896 ** 2
            t4902 = t4898 ** 2
            t4897 = t4895 * t4896
            t4900 = t4897 ** 2
            t4899 = t4895 * t4898
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-39 * t4896 + 3856 * t4897 - 574 * t4898 + 4858 * t4900 - 9027 * t4902 + 1 + (-13272 + 4845 * t4899) * t4899 + (17408 * t4900 - 7752 * t4902 - 304) * t4895) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 806:
            t4906 = np.cos(phi)
            t4907 = t4906 ** 2
            t4909 = t4907 ** 2
            t4913 = t4909 ** 2
            t4908 = t4906 * t4907
            t4911 = t4908 ** 2
            t4905 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * t4905 ** 2 * (924 * t4907 - 1168 * t4908 - 5580 * t4909 + 10268 * t4911 - 5814 * t4913 - 22 + (5034 * t4909 - 8568 * t4911 + 4845 * t4913 + 81) * t4906) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t4906) ** (-0.1e1 / 0.2e1)) * ((1 - t4906) ** (-0.1e1 / 0.2e1))

        if Bindx == 807:
            t4915 = np.cos(phi)
            t4916 = t4915 ** 2
            t4918 = t4916 ** 2
            t4922 = t4918 ** 2
            t4917 = t4915 * t4916
            t4920 = t4917 ** 2
            t4919 = t4915 * t4918
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4916 + 1784 * t4917 - 4282 * t4918 + 11258 * t4920 - 12393 * t4922 - 13 + (-6624 + 4845 * t4919) * t4919 + (8840 * t4920 - 3876 * t4922 - 124) * t4915) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 808:
            t4934 = np.sin(phi)
            t4932 = t4934 ** 2
            t4925 = np.cos(phi)
            t4926 = t4925 ** 2
            t4927 = t4925 * t4926
            t4930 = t4927 ** 2
            t4928 = t4926 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4932 ** 2 * (-90 * t4926 + 645 * t4927 + 510 * t4928 - 646 * t4930 + 2 + (-1989 * t4928 + 1615 * t4930 - 47) * t4925) * np.sin((4 * phi1 - phi2)) * ((1 + t4925) ** (-0.1e1 / 0.2e1)) * ((1 - t4925) ** (-0.1e1 / 0.2e1))

        if Bindx == 809:
            t4935 = np.cos(phi)
            t4936 = t4935 ** 2
            t4937 = t4936 ** 2
            t4939 = t4937 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t4937 - 901 * t4939 - 1 + (878 * t4937 + 323 * t4939 + 47) * t4936) * np.cos((4 * phi1))

        if Bindx == 810:
            t4950 = np.sin(phi)
            t4948 = t4950 ** 2
            t4941 = np.cos(phi)
            t4942 = t4941 ** 2
            t4943 = t4941 * t4942
            t4946 = t4943 ** 2
            t4944 = t4942 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4948 ** 2 * (90 * t4942 + 645 * t4943 - 510 * t4944 + 646 * t4946 - 2 + (-1989 * t4944 + 1615 * t4946 - 47) * t4941) * np.sin((4 * phi1 + phi2)) * ((1 + t4941) ** (-0.1e1 / 0.2e1)) * ((1 - t4941) ** (-0.1e1 / 0.2e1))

        if Bindx == 811:
            t4951 = np.cos(phi)
            t4952 = t4951 ** 2
            t4954 = t4952 ** 2
            t4958 = t4954 ** 2
            t4953 = t4951 * t4952
            t4956 = t4953 ** 2
            t4955 = t4951 * t4954
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4952 - 1784 * t4953 - 4282 * t4954 + 11258 * t4956 - 12393 * t4958 - 13 + (6624 + 4845 * t4955) * t4955 + (-8840 * t4956 + 3876 * t4958 + 124) * t4951) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 812:
            t4962 = np.cos(phi)
            t4963 = t4962 ** 2
            t4965 = t4963 ** 2
            t4969 = t4965 ** 2
            t4964 = t4962 * t4963
            t4967 = t4964 ** 2
            t4961 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * t4961 ** 2 * (-924 * t4963 - 1168 * t4964 + 5580 * t4965 - 10268 * t4967 + 5814 * t4969 + 22 + (5034 * t4965 - 8568 * t4967 + 4845 * t4969 + 81) * t4962) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t4962) ** (-0.1e1 / 0.2e1)) * ((1 - t4962) ** (-0.1e1 / 0.2e1))

        if Bindx == 813:
            t4971 = np.cos(phi)
            t4972 = t4971 ** 2
            t4974 = t4972 ** 2
            t4978 = t4974 ** 2
            t4973 = t4971 * t4972
            t4976 = t4973 ** 2
            t4975 = t4971 * t4974
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-39 * t4972 - 3856 * t4973 - 574 * t4974 + 4858 * t4976 - 9027 * t4978 + 1 + (13272 + 4845 * t4975) * t4975 + (-17408 * t4976 + 7752 * t4978 + 304) * t4971) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 814:
            t4982 = np.cos(phi)
            t4983 = t4982 ** 2
            t4985 = t4983 ** 2
            t4989 = t4985 ** 2
            t4984 = t4982 * t4983
            t4987 = t4984 ** 2
            t4981 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t4981 ** 2 * (-340 * t4983 + 392 * t4984 + 1820 * t4985 - 3332 * t4987 + 1938 * t4989 + 10 + (-406 * t4985 - 816 * t4987 + 969 * t4989 - 43) * t4982) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t4982) ** (-0.1e1 / 0.2e1)) * ((1 - t4982) ** (-0.1e1 / 0.2e1))

        if Bindx == 815:
            t4991 = np.cos(phi)
            t4992 = t4991 ** 2
            t4994 = t4992 ** 2
            t4998 = t4994 ** 2
            t4993 = t4991 * t4992
            t4996 = t4993 ** 2
            t4995 = t4991 * t4994
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t4992 - 5032 * t4993 + 8918 * t4994 - 8022 * t4996 - 3417 * t4998 + 83 + (18368 + 4845 * t4995) * t4995 + (-25432 * t4996 + 11628 * t4998 + 468) * t4991) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 816:
            t5010 = np.sin(phi)
            t5008 = t5010 ** 2
            t5001 = np.cos(phi)
            t5002 = t5001 ** 2
            t5003 = t5001 * t5002
            t5006 = t5003 ** 2
            t5004 = t5002 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t5008 ** 2 * (42 * t5002 - 497 * t5003 - 518 * t5004 + 798 * t5006 - 2 + (441 * t5004 + 285 * t5006 + 91) * t5001) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t5001) ** (-0.1e1 / 0.2e1)) * ((1 - t5001) ** (-0.1e1 / 0.2e1))

        if Bindx == 817:
            t5011 = np.cos(phi)
            t5012 = t5011 ** 2
            t5014 = t5012 ** 2
            t5018 = t5014 ** 2
            t5013 = t5011 * t5012
            t5016 = t5013 ** 2
            t5015 = t5011 * t5014
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t5012 + 32 * t5013 + 574 * t5014 - 602 * t5016 + 87 * t5018 + 11 + (336 + 95 * t5015) * t5015 + (-640 * t5016 + 304 * t5018 - 32) * t5011) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 818:
            t5029 = np.sin(phi)
            t5026 = t5029 ** 2
            t5027 = t5029 * t5026
            t5021 = np.cos(phi)
            t5022 = t5021 ** 2
            t5024 = t5022 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t5027 ** 2 * (8 * t5022 + 18 * t5024 - 2 + (22 * t5022 + 5 * t5024 - 3) * t5021) * np.sin((4 * phi1 + 9 * phi2)) * ((1 + t5021) ** (-0.1e1 / 0.2e1)) * ((1 - t5021) ** (-0.1e1 / 0.2e1))

        if Bindx == 819:
            t5030 = np.cos(phi)
            t5031 = t5030 ** 2
            t5033 = t5031 ** 2
            t5036 = t5033 ** 2
            t5037 = t5030 * t5036
            t5032 = t5030 * t5031
            t5034 = t5032 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((4 * phi1 + 10 * phi2)) * (-3 * t5031 + 8 * t5032 + 14 * t5033 - 14 * t5034 + 3 * t5036 + 4 * t5037 - 1 + (-8 * t5034 + t5037 - 4) * t5030)

        if Bindx == 820:
            t5039 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t5039) ** (0.15e2 / 0.2e1)) * ((1 + t5039) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi1 - 10 * phi2))

        if Bindx == 821:
            t5040 = np.cos(phi)
            t5041 = t5040 ** 2
            t5043 = t5041 ** 2
            t5047 = t5043 ** 2
            t5042 = t5040 * t5041
            t5045 = t5042 ** 2
            t5044 = t5040 * t5043
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t5041 - 16 * t5042 + 14 * t5043 - 28 * t5045 + 11 * t5047 - 1 + (14 + 2 * t5044) * t5044 + (8 * t5045 - 9 * t5047 + 3) * t5040) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 822:
            t5059 = np.sin(phi)
            t5057 = t5059 ** 2
            t5050 = np.cos(phi)
            t5051 = t5050 ** 2
            t5052 = t5050 * t5051
            t5055 = t5052 ** 2
            t5053 = t5051 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t5057 ** 2 * (36 * t5051 - 55 * t5052 - 20 * t5053 - 76 * t5055 - 4 + (99 * t5053 + 19 * t5055 + 1) * t5050) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t5050) ** (-0.1e1 / 0.2e1)) * ((1 - t5050) ** (-0.1e1 / 0.2e1))

        if Bindx == 823:
            t5060 = np.cos(phi)
            t5061 = t5060 ** 2
            t5063 = t5061 ** 2
            t5067 = t5063 ** 2
            t5062 = t5060 * t5061
            t5065 = t5062 ** 2
            t5064 = t5060 * t5063
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t5061 - 128 * t5062 + 574 * t5063 - 812 * t5065 + 243 * t5067 + 7 + (-126 + 114 * t5064) * t5064 + (616 * t5065 - 399 * t5067 + 37) * t5060) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 824:
            t5071 = np.cos(phi)
            t5072 = t5071 ** 2
            t5074 = t5072 ** 2
            t5078 = t5074 ** 2
            t5073 = t5071 * t5072
            t5076 = t5073 ** 2
            t5070 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t5070 ** 2 * (-24 * t5072 + 1792 * t5073 - 1134 * t5074 + 3808 * t5076 - 2907 * t5078 + 1 + (-3486 * t5074 + 1224 * t5076 + 969 * t5078 - 243) * t5071) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t5071) ** (-0.1e1 / 0.2e1)) * ((1 - t5071) ** (-0.1e1 / 0.2e1))

        if Bindx == 825:
            t5080 = np.cos(phi)
            t5081 = t5080 ** 2
            t5083 = t5081 ** 2
            t5087 = t5083 ** 2
            t5082 = t5080 * t5081
            t5085 = t5082 ** 2
            t5084 = t5080 * t5083
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-930 * t5081 + 1660 * t5082 + 3710 * t5083 - 3920 * t5085 - 765 * t5087 + 31 + (-6594 + 1938 * t5084) * t5084 + (9860 * t5085 - 4845 * t5087 - 145) * t5080) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 826:
            t5091 = np.cos(phi)
            t5092 = t5091 ** 2
            t5094 = t5092 ** 2
            t5098 = t5094 ** 2
            t5093 = t5091 * t5092
            t5096 = t5093 ** 2
            t5090 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t5090 ** 2 * (340 * t5092 + 392 * t5093 - 1820 * t5094 + 3332 * t5096 - 1938 * t5098 - 10 + (-406 * t5094 - 816 * t5096 + 969 * t5098 - 43) * t5091) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t5091) ** (-0.1e1 / 0.2e1)) * ((1 - t5091) ** (-0.1e1 / 0.2e1))

        if Bindx == 827:
            t5100 = np.cos(phi)
            t5101 = t5100 ** 2
            t5103 = t5101 ** 2
            t5107 = t5103 ** 2
            t5102 = t5100 * t5101
            t5105 = t5102 ** 2
            t5104 = t5100 * t5103
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t5101 + 1660 * t5102 - 562 * t5103 + 2616 * t5105 - 4029 * t5107 - 1 + (-5486 + 1938 * t5104) * t5104 + (6868 * t5105 - 2907 * t5107 - 135) * t5100) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 828:
            t5119 = np.sin(phi)
            t5117 = t5119 ** 2
            t5110 = np.cos(phi)
            t5111 = t5110 ** 2
            t5112 = t5110 * t5111
            t5115 = t5112 ** 2
            t5113 = t5111 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t5117 ** 2 * (-195 * t5111 + 355 * t5112 + 935 * t5113 - 969 * t5115 + 5 + (-1071 * t5113 + 969 * t5115 - 29) * t5110) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t5110) ** (-0.1e1 / 0.2e1)) * ((1 - t5110) ** (-0.1e1 / 0.2e1))

        if Bindx == 829:
            t5120 = np.cos(phi)
            t5121 = t5120 ** 2
            t5123 = t5121 ** 2
            t5127 = t5123 ** 2
            t5122 = t5120 * t5121
            t5125 = t5122 ** 2
            t5124 = t5120 * t5123
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t5121 + 200 * t5122 - 838 * t5123 + 1956 * t5125 - 1887 * t5127 - 3 + (-678 + 646 * t5124) * t5124 + (816 * t5125 - 323 * t5127 - 15) * t5120) * np.cos((5 * phi1 - phi2))

        if Bindx == 830:
            t5136 = np.sin(phi)
            t5133 = t5136 ** 2
            t5134 = t5136 * t5133
            t5130 = np.cos(phi)
            t5131 = t5130 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t5130 * t5134 ** 2 * (15 + (-170 + 323 * t5131) * t5131) * np.sin((5 * phi1)) * ((1 + t5130) ** (-0.1e1 / 0.2e1)) * ((1 - t5130) ** (-0.1e1 / 0.2e1))

        if Bindx == 831:
            t5137 = np.cos(phi)
            t5138 = t5137 ** 2
            t5140 = t5138 ** 2
            t5144 = t5140 ** 2
            t5139 = t5137 * t5138
            t5142 = t5139 ** 2
            t5141 = t5137 * t5140
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t5138 - 200 * t5139 - 838 * t5140 + 1956 * t5142 - 1887 * t5144 - 3 + (678 + 646 * t5141) * t5141 + (-816 * t5142 + 323 * t5144 + 15) * t5137) * np.cos((5 * phi1 + phi2))

        if Bindx == 832:
            t5147 = np.cos(phi)
            t5148 = t5147 ** 2
            t5149 = t5147 * t5148
            t5157 = 969 * t5149 ** 2
            t5156 = np.sin(phi)
            t5154 = t5156 ** 2
            t5150 = t5148 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t5154 ** 2 * (195 * t5148 + 355 * t5149 - 935 * t5150 + t5157 - 5 + (-1071 * t5150 + t5157 - 29) * t5147) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t5147) ** (-0.1e1 / 0.2e1)) * ((1 - t5147) ** (-0.1e1 / 0.2e1))

        if Bindx == 833:
            t5158 = np.cos(phi)
            t5159 = t5158 ** 2
            t5161 = t5159 ** 2
            t5165 = t5161 ** 2
            t5160 = t5158 * t5159
            t5163 = t5160 ** 2
            t5162 = t5158 * t5161
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t5159 - 1660 * t5160 - 562 * t5161 + 2616 * t5163 - 4029 * t5165 - 1 + (5486 + 1938 * t5162) * t5162 + (-6868 * t5163 + 2907 * t5165 + 135) * t5158) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 834:
            t5169 = np.cos(phi)
            t5170 = t5169 ** 2
            t5172 = t5170 ** 2
            t5176 = t5172 ** 2
            t5171 = t5169 * t5170
            t5174 = t5171 ** 2
            t5168 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t5168 ** 2 * (-340 * t5170 + 392 * t5171 + 1820 * t5172 - 3332 * t5174 + 1938 * t5176 + 10 + (-406 * t5172 - 816 * t5174 + 969 * t5176 - 43) * t5169) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t5169) ** (-0.1e1 / 0.2e1)) * ((1 - t5169) ** (-0.1e1 / 0.2e1))

        if Bindx == 835:
            t5178 = np.cos(phi)
            t5179 = t5178 ** 2
            t5181 = t5179 ** 2
            t5185 = t5181 ** 2
            t5180 = t5178 * t5179
            t5183 = t5180 ** 2
            t5182 = t5178 * t5181
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-930 * t5179 - 1660 * t5180 + 3710 * t5181 - 3920 * t5183 - 765 * t5185 + 31 + (6594 + 1938 * t5182) * t5182 + (-9860 * t5183 + 4845 * t5185 + 145) * t5178) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 836:
            t5189 = np.cos(phi)
            t5190 = t5189 ** 2
            t5192 = t5190 ** 2
            t5196 = t5192 ** 2
            t5191 = t5189 * t5190
            t5194 = t5191 ** 2
            t5188 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t5188 ** 2 * (24 * t5190 + 1792 * t5191 + 1134 * t5192 - 3808 * t5194 + 2907 * t5196 - 1 + (-3486 * t5192 + 1224 * t5194 + 969 * t5196 - 243) * t5189) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t5189) ** (-0.1e1 / 0.2e1)) * ((1 - t5189) ** (-0.1e1 / 0.2e1))

        if Bindx == 837:
            t5198 = np.cos(phi)
            t5199 = t5198 ** 2
            t5201 = t5199 ** 2
            t5205 = t5201 ** 2
            t5200 = t5198 * t5199
            t5203 = t5200 ** 2
            t5202 = t5198 * t5201
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t5199 + 128 * t5200 + 574 * t5201 - 812 * t5203 + 243 * t5205 + 7 + (126 + 114 * t5202) * t5202 + (-616 * t5203 + 399 * t5205 - 37) * t5198) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 838:
            t5217 = np.sin(phi)
            t5215 = t5217 ** 2
            t5208 = np.cos(phi)
            t5209 = t5208 ** 2
            t5210 = t5208 * t5209
            t5213 = t5210 ** 2
            t5211 = t5209 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t5215 ** 2 * (-36 * t5209 - 55 * t5210 + 20 * t5211 + 76 * t5213 + 4 + (99 * t5211 + 19 * t5213 + 1) * t5208) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t5208) ** (-0.1e1 / 0.2e1)) * ((1 - t5208) ** (-0.1e1 / 0.2e1))

        if Bindx == 839:
            t5218 = np.cos(phi)
            t5219 = t5218 ** 2
            t5221 = t5219 ** 2
            t5225 = t5221 ** 2
            t5220 = t5218 * t5219
            t5223 = t5220 ** 2
            t5222 = t5218 * t5221
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t5219 + 16 * t5220 + 14 * t5221 - 28 * t5223 + 11 * t5225 - 1 + (-14 + 2 * t5222) * t5222 + (-8 * t5223 + 9 * t5225 - 3) * t5218) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 840:
            t5228 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t5228) ** (0.5e1 / 0.2e1)) * ((1 + t5228) ** (0.15e2 / 0.2e1)) * np.sin((5 * phi1 + 10 * phi2))

        if Bindx == 841:
            t5229 = np.cos(phi)
            t5239 = -6 * t5229
            t5230 = t5229 ** 2
            t5232 = t5230 ** 2
            t5233 = t5229 * t5232
            t5231 = t5229 * t5230
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((6 * phi1 - 10 * phi2)) * (13 * t5230 + t5239 + 1 + (28 + t5233) * t5233 + (-14 + (t5239 + 13) * t5232) * t5232 + (-8 + (-8 * t5229 - 14) * t5231) * t5231)

        if Bindx == 842:
            t5249 = np.sin(phi)
            t5247 = t5249 ** 2
            t5240 = np.cos(phi)
            t5241 = t5240 ** 2
            t5242 = t5240 * t5241
            t5245 = t5242 ** 2
            t5243 = t5241 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5247 ** 2 * (15 * t5241 + 15 * t5242 - 55 * t5243 - 27 * t5245 + 3 + (57 * t5243 + 5 * t5245 - 13) * t5240) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t5240) ** (-0.1e1 / 0.2e1)) * ((1 - t5240) ** (-0.1e1 / 0.2e1))

        if Bindx == 843:
            t5250 = np.cos(phi)
            t5251 = t5250 ** 2
            t5253 = t5251 ** 2
            t5257 = t5253 ** 2
            t5252 = t5250 * t5251
            t5255 = t5252 ** 2
            t5254 = t5250 * t5253
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5251 - 592 * t5252 + 266 * t5253 - 1162 * t5255 + 677 * t5257 - 31 + (896 + 95 * t5254) * t5254 + (80 * t5255 - 456 * t5257 + 72) * t5250) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 844:
            t5261 = np.cos(phi)
            t5262 = t5261 ** 2
            t5264 = t5262 ** 2
            t5268 = t5264 ** 2
            t5263 = t5261 * t5262
            t5266 = t5263 ** 2
            t5260 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5260 ** 2 * (-516 * t5262 + 532 * t5263 + 1050 * t5264 + 364 * t5266 - 1197 * t5268 + 43 + (-2058 * t5264 + 1476 * t5266 + 285 * t5268 + 21) * t5261) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t5261) ** (-0.1e1 / 0.2e1)) * ((1 - t5261) ** (-0.1e1 / 0.2e1))

        if Bindx == 845:
            t5270 = np.cos(phi)
            t5271 = t5270 ** 2
            t5273 = t5271 ** 2
            t5277 = t5273 ** 2
            t5272 = t5270 * t5271
            t5275 = t5272 ** 2
            t5274 = t5270 * t5273
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * (-4503 * t5271 - 6168 * t5272 + 22442 * t5273 - 34902 * t5275 + 12393 * t5277 + 237 + (-1932 + 4845 * t5274) * t5274 + (23528 * t5275 - 17442 * t5277 + 1502) * t5270) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 846:
            t5281 = np.cos(phi)
            t5282 = t5281 ** 2
            t5284 = t5282 ** 2
            t5288 = t5284 ** 2
            t5283 = t5281 * t5282
            t5286 = t5283 ** 2
            t5280 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t5280 ** 2 * (-24 * t5282 + 1792 * t5283 - 1134 * t5284 + 3808 * t5286 - 2907 * t5288 + 1 + (-3486 * t5284 + 1224 * t5286 + 969 * t5288 - 243) * t5281) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t5281) ** (-0.1e1 / 0.2e1)) * ((1 - t5281) ** (-0.1e1 / 0.2e1))

        if Bindx == 847:
            t5290 = np.cos(phi)
            t5291 = t5290 ** 2
            t5293 = t5291 ** 2
            t5297 = t5293 ** 2
            t5292 = t5290 * t5291
            t5295 = t5292 ** 2
            t5294 = t5290 * t5293
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t5291 + 5032 * t5292 + 8918 * t5293 - 8022 * t5295 - 3417 * t5297 + 83 + (-18368 + 4845 * t5294) * t5294 + (25432 * t5295 - 11628 * t5297 - 468) * t5290) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 848:
            t5309 = np.sin(phi)
            t5307 = t5309 ** 2
            t5300 = np.cos(phi)
            t5301 = t5300 ** 2
            t5302 = t5300 * t5301
            t5305 = t5302 ** 2
            t5303 = t5301 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t5307 ** 2 * (-2139 * t5301 - 1089 * t5302 + 8551 * t5303 - 8721 * t5305 + 69 + (-1683 * t5303 + 4845 * t5305 + 167) * t5300) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t5300) ** (-0.1e1 / 0.2e1)) * ((1 - t5300) ** (-0.1e1 / 0.2e1))

        if Bindx == 849:
            t5310 = np.cos(phi)
            t5311 = t5310 ** 2
            t5313 = t5311 ** 2
            t5317 = t5313 ** 2
            t5312 = t5310 * t5311
            t5315 = t5312 ** 2
            t5314 = t5310 * t5313
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t5311 + 4888 * t5312 - 4486 * t5313 + 11898 * t5315 - 12903 * t5317 - 19 + (-14276 + 4845 * t5314) * t5314 + (15640 * t5315 - 5814 * t5317 - 438) * t5310) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 850:
            t5328 = np.sin(phi)
            t5325 = t5328 ** 2
            t5326 = t5328 * t5325
            t5320 = np.cos(phi)
            t5321 = t5320 ** 2
            t5323 = t5321 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t5326 ** 2 * (306 * t5321 - 969 * t5323 - 9 + (-1054 * t5321 + 1615 * t5323 + 111) * t5320) * np.sin((6 * phi1 - phi2)) * ((1 + t5320) ** (-0.1e1 / 0.2e1)) * ((1 - t5320) ** (-0.1e1 / 0.2e1))

        if Bindx == 851:
            t5329 = np.cos(phi)
            t5330 = t5329 ** 2
            t5331 = t5330 ** 2
            t5333 = t5331 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t5331 - 1071 * t5333 - 3 + (1278 * t5331 + 323 * t5333 + 111) * t5330) * np.cos((6 * phi1))

        if Bindx == 852:
            t5343 = np.sin(phi)
            t5340 = t5343 ** 2
            t5341 = t5343 * t5340
            t5335 = np.cos(phi)
            t5336 = t5335 ** 2
            t5338 = t5336 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t5341 ** 2 * (-306 * t5336 + 969 * t5338 + 9 + (-1054 * t5336 + 1615 * t5338 + 111) * t5335) * np.sin((6 * phi1 + phi2)) * ((1 + t5335) ** (-0.1e1 / 0.2e1)) * ((1 - t5335) ** (-0.1e1 / 0.2e1))

        if Bindx == 853:
            t5344 = np.cos(phi)
            t5345 = t5344 ** 2
            t5347 = t5345 ** 2
            t5351 = t5347 ** 2
            t5346 = t5344 * t5345
            t5349 = t5346 ** 2
            t5348 = t5344 * t5347
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t5345 - 4888 * t5346 - 4486 * t5347 + 11898 * t5349 - 12903 * t5351 - 19 + (14276 + 4845 * t5348) * t5348 + (-15640 * t5349 + 5814 * t5351 + 438) * t5344) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 854:
            t5363 = np.sin(phi)
            t5361 = t5363 ** 2
            t5354 = np.cos(phi)
            t5355 = t5354 ** 2
            t5356 = t5354 * t5355
            t5359 = t5356 ** 2
            t5357 = t5355 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t5361 ** 2 * (2139 * t5355 - 1089 * t5356 - 8551 * t5357 + 8721 * t5359 - 69 + (-1683 * t5357 + 4845 * t5359 + 167) * t5354) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t5354) ** (-0.1e1 / 0.2e1)) * ((1 - t5354) ** (-0.1e1 / 0.2e1))

        if Bindx == 855:
            t5364 = np.cos(phi)
            t5365 = t5364 ** 2
            t5367 = t5365 ** 2
            t5371 = t5367 ** 2
            t5366 = t5364 * t5365
            t5369 = t5366 ** 2
            t5368 = t5364 * t5367
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t5365 - 5032 * t5366 + 8918 * t5367 - 8022 * t5369 - 3417 * t5371 + 83 + (18368 + 4845 * t5368) * t5368 + (-25432 * t5369 + 11628 * t5371 + 468) * t5364) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 856:
            t5375 = np.cos(phi)
            t5376 = t5375 ** 2
            t5378 = t5376 ** 2
            t5382 = t5378 ** 2
            t5377 = t5375 * t5376
            t5380 = t5377 ** 2
            t5374 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t5374 ** 2 * (24 * t5376 + 1792 * t5377 + 1134 * t5378 - 3808 * t5380 + 2907 * t5382 - 1 + (-3486 * t5378 + 1224 * t5380 + 969 * t5382 - 243) * t5375) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t5375) ** (-0.1e1 / 0.2e1)) * ((1 - t5375) ** (-0.1e1 / 0.2e1))

        if Bindx == 857:
            t5384 = np.cos(phi)
            t5385 = t5384 ** 2
            t5387 = t5385 ** 2
            t5391 = t5387 ** 2
            t5386 = t5384 * t5385
            t5389 = t5386 ** 2
            t5388 = t5384 * t5387
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * (-4503 * t5385 + 6168 * t5386 + 22442 * t5387 - 34902 * t5389 + 12393 * t5391 + 237 + (1932 + 4845 * t5388) * t5388 + (-23528 * t5389 + 17442 * t5391 - 1502) * t5384) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 858:
            t5395 = np.cos(phi)
            t5396 = t5395 ** 2
            t5398 = t5396 ** 2
            t5402 = t5398 ** 2
            t5397 = t5395 * t5396
            t5400 = t5397 ** 2
            t5394 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5394 ** 2 * (516 * t5396 + 532 * t5397 - 1050 * t5398 - 364 * t5400 + 1197 * t5402 - 43 + (-2058 * t5398 + 1476 * t5400 + 285 * t5402 + 21) * t5395) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t5395) ** (-0.1e1 / 0.2e1)) * ((1 - t5395) ** (-0.1e1 / 0.2e1))

        if Bindx == 859:
            t5404 = np.cos(phi)
            t5405 = t5404 ** 2
            t5407 = t5405 ** 2
            t5411 = t5407 ** 2
            t5406 = t5404 * t5405
            t5409 = t5406 ** 2
            t5408 = t5404 * t5407
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5405 + 592 * t5406 + 266 * t5407 - 1162 * t5409 + 677 * t5411 - 31 + (-896 + 95 * t5408) * t5408 + (-80 * t5409 + 456 * t5411 - 72) * t5404) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 860:
            t5423 = np.sin(phi)
            t5421 = t5423 ** 2
            t5414 = np.cos(phi)
            t5415 = t5414 ** 2
            t5416 = t5414 * t5415
            t5419 = t5416 ** 2
            t5417 = t5415 ** 2
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5421 ** 2 * (-15 * t5415 + 15 * t5416 + 55 * t5417 + 27 * t5419 - 3 + (57 * t5417 + 5 * t5419 - 13) * t5414) * np.sin((6 * phi1 + 9 * phi2)) * ((1 + t5414) ** (-0.1e1 / 0.2e1)) * ((1 - t5414) ** (-0.1e1 / 0.2e1))

        if Bindx == 861:
            t5424 = np.cos(phi)
            t5434 = 6 * t5424
            t5425 = t5424 ** 2
            t5427 = t5425 ** 2
            t5428 = t5424 * t5427
            t5426 = t5424 * t5425
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((6 * phi1 + 10 * phi2)) * (13 * t5425 + t5434 + 1 + (-28 + t5428) * t5428 + (-14 + (t5434 + 13) * t5427) * t5427 + (8 + (8 * t5424 - 14) * t5426) * t5426)

        if Bindx == 862:
            t5435 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t5435) ** (0.17e2 / 0.2e1)) * ((1 + t5435) ** (0.3e1 / 0.2e1)) * np.sin((7 * phi1 - 10 * phi2))

        if Bindx == 863:
            t5436 = np.cos(phi)
            t5437 = t5436 ** 2
            t5439 = t5437 ** 2
            t5443 = t5439 ** 2
            t5438 = t5436 * t5437
            t5441 = t5438 ** 2
            t5440 = t5436 * t5439
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5437 + 4 * t5438 - 182 * t5439 - 56 * t5441 + 151 * t5443 + 7 + (238 + 10 * t5440) * t5440 + (-140 * t5441 - 63 * t5443 - 39) * t5436) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 864:
            t5447 = np.cos(phi)
            t5448 = t5447 ** 2
            t5450 = t5448 ** 2
            t5454 = t5450 ** 2
            t5449 = t5447 * t5448
            t5452 = t5449 ** 2
            t5446 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5446 ** 2 * (-88 * t5448 - 588 * t5449 + 1120 * t5450 - 840 * t5452 - 532 * t5454 - 44 + (-406 * t5450 + 1108 * t5452 + 95 * t5454 + 175) * t5447) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t5447) ** (-0.1e1 / 0.2e1)) * ((1 - t5447) ** (-0.1e1 / 0.2e1))

        if Bindx == 865:
            t5456 = np.cos(phi)
            t5457 = t5456 ** 2
            t5459 = t5457 ** 2
            t5463 = t5459 ** 2
            t5458 = t5456 * t5457
            t5461 = t5458 ** 2
            t5460 = t5456 * t5459
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (966 * t5457 - 3188 * t5458 + 938 * t5459 - 6440 * t5461 + 4383 * t5463 - 161 + (5586 + 570 * t5460) * t5460 + (-196 * t5461 - 2793 * t5463 + 335) * t5456) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 866:
            t5467 = np.cos(phi)
            t5468 = t5467 ** 2
            t5470 = t5468 ** 2
            t5474 = t5470 ** 2
            t5469 = t5467 * t5468
            t5472 = t5469 ** 2
            t5466 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5466 ** 2 * (-516 * t5468 + 532 * t5469 + 1050 * t5470 + 364 * t5472 - 1197 * t5474 + 43 + (-2058 * t5470 + 1476 * t5472 + 285 * t5474 + 21) * t5467) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t5467) ** (-0.1e1 / 0.2e1)) * ((1 - t5467) ** (-0.1e1 / 0.2e1))

        if Bindx == 867:
            t5476 = np.cos(phi)
            t5477 = t5476 ** 2
            t5479 = t5477 ** 2
            t5483 = t5479 ** 2
            t5478 = t5476 * t5477
            t5481 = t5478 ** 2
            t5480 = t5476 * t5479
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t5477 - 128 * t5478 + 574 * t5479 - 812 * t5481 + 243 * t5483 + 7 + (-126 + 114 * t5480) * t5480 + (616 * t5481 - 399 * t5483 + 37) * t5476) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 868:
            t5495 = np.sin(phi)
            t5493 = t5495 ** 2
            t5486 = np.cos(phi)
            t5487 = t5486 ** 2
            t5488 = t5486 * t5487
            t5491 = t5488 ** 2
            t5489 = t5487 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t5493 ** 2 * (-42 * t5487 - 497 * t5488 + 518 * t5489 - 798 * t5491 + 2 + (441 * t5489 + 285 * t5491 + 91) * t5486) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t5486) ** (-0.1e1 / 0.2e1)) * ((1 - t5486) ** (-0.1e1 / 0.2e1))

        if Bindx == 869:
            t5496 = np.cos(phi)
            t5497 = t5496 ** 2
            t5499 = t5497 ** 2
            t5503 = t5499 ** 2
            t5498 = t5496 * t5497
            t5501 = t5498 ** 2
            t5500 = t5496 * t5499
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t5497 + 952 * t5498 + 782 * t5499 - 180 * t5501 - 897 * t5503 + 11 + (-2786 + 570 * t5500) * t5500 + (3136 * t5501 - 1197 * t5503 - 105) * t5496) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 870:
            t5514 = np.sin(phi)
            t5511 = t5514 ** 2
            t5512 = t5514 * t5511
            t5506 = np.cos(phi)
            t5507 = t5506 ** 2
            t5509 = t5507 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t5512 ** 2 * (182 * t5507 - 399 * t5509 - 7 + (-66 * t5507 + 285 * t5509 + 5) * t5506) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t5506) ** (-0.1e1 / 0.2e1)) * ((1 - t5506) ** (-0.1e1 / 0.2e1))

        if Bindx == 871:
            t5515 = np.cos(phi)
            t5516 = t5515 ** 2
            t5518 = t5516 ** 2
            t5522 = t5518 ** 2
            t5517 = t5515 * t5516
            t5520 = t5517 ** 2
            t5519 = t5515 * t5518
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t5516 + 196 * t5517 - 442 * t5518 + 816 * t5520 - 651 * t5522 - 3 + (-462 + 190 * t5519) * t5519 + (420 * t5520 - 133 * t5522 - 21) * t5515) * np.cos((7 * phi1 - phi2))

        if Bindx == 872:
            t5529 = np.sin(phi)
            t5526 = t5529 ** 2
            t5527 = t5526 ** 2
            t5525 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t5525 * t5527 ** 2 * (19 * t5525 ** 2 - 3) * np.sin((7 * phi1)) * ((1 + t5525) ** (-0.1e1 / 0.2e1)) * ((1 - t5525) ** (-0.1e1 / 0.2e1))

        if Bindx == 873:
            t5530 = np.cos(phi)
            t5531 = t5530 ** 2
            t5533 = t5531 ** 2
            t5537 = t5533 ** 2
            t5532 = t5530 * t5531
            t5535 = t5532 ** 2
            t5534 = t5530 * t5533
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t5531 - 196 * t5532 - 442 * t5533 + 816 * t5535 - 651 * t5537 - 3 + (462 + 190 * t5534) * t5534 + (-420 * t5535 + 133 * t5537 + 21) * t5530) * np.cos((7 * phi1 + phi2))

        if Bindx == 874:
            t5548 = np.sin(phi)
            t5545 = t5548 ** 2
            t5546 = t5548 * t5545
            t5540 = np.cos(phi)
            t5541 = t5540 ** 2
            t5543 = t5541 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t5546 ** 2 * (-182 * t5541 + 399 * t5543 + 7 + (-66 * t5541 + 285 * t5543 + 5) * t5540) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t5540) ** (-0.1e1 / 0.2e1)) * ((1 - t5540) ** (-0.1e1 / 0.2e1))

        if Bindx == 875:
            t5549 = np.cos(phi)
            t5550 = t5549 ** 2
            t5552 = t5550 ** 2
            t5556 = t5552 ** 2
            t5551 = t5549 * t5550
            t5554 = t5551 ** 2
            t5553 = t5549 * t5552
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t5550 - 952 * t5551 + 782 * t5552 - 180 * t5554 - 897 * t5556 + 11 + (2786 + 570 * t5553) * t5553 + (-3136 * t5554 + 1197 * t5556 + 105) * t5549) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 876:
            t5568 = np.sin(phi)
            t5566 = t5568 ** 2
            t5559 = np.cos(phi)
            t5560 = t5559 ** 2
            t5561 = t5559 * t5560
            t5564 = t5561 ** 2
            t5562 = t5560 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t5566 ** 2 * (42 * t5560 - 497 * t5561 - 518 * t5562 + 798 * t5564 - 2 + (441 * t5562 + 285 * t5564 + 91) * t5559) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t5559) ** (-0.1e1 / 0.2e1)) * ((1 - t5559) ** (-0.1e1 / 0.2e1))

        if Bindx == 877:
            t5569 = np.cos(phi)
            t5570 = t5569 ** 2
            t5572 = t5570 ** 2
            t5576 = t5572 ** 2
            t5571 = t5569 * t5570
            t5574 = t5571 ** 2
            t5573 = t5569 * t5572
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t5570 + 128 * t5571 + 574 * t5572 - 812 * t5574 + 243 * t5576 + 7 + (126 + 114 * t5573) * t5573 + (-616 * t5574 + 399 * t5576 - 37) * t5569) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 878:
            t5580 = np.cos(phi)
            t5581 = t5580 ** 2
            t5583 = t5581 ** 2
            t5587 = t5583 ** 2
            t5582 = t5580 * t5581
            t5585 = t5582 ** 2
            t5579 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5579 ** 2 * (516 * t5581 + 532 * t5582 - 1050 * t5583 - 364 * t5585 + 1197 * t5587 - 43 + (-2058 * t5583 + 1476 * t5585 + 285 * t5587 + 21) * t5580) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t5580) ** (-0.1e1 / 0.2e1)) * ((1 - t5580) ** (-0.1e1 / 0.2e1))

        if Bindx == 879:
            t5589 = np.cos(phi)
            t5590 = t5589 ** 2
            t5592 = t5590 ** 2
            t5596 = t5592 ** 2
            t5591 = t5589 * t5590
            t5594 = t5591 ** 2
            t5593 = t5589 * t5592
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (966 * t5590 + 3188 * t5591 + 938 * t5592 - 6440 * t5594 + 4383 * t5596 - 161 + (-5586 + 570 * t5593) * t5593 + (196 * t5594 + 2793 * t5596 - 335) * t5589) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 880:
            t5600 = np.cos(phi)
            t5601 = t5600 ** 2
            t5603 = t5601 ** 2
            t5607 = t5603 ** 2
            t5602 = t5600 * t5601
            t5605 = t5602 ** 2
            t5599 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5599 ** 2 * (88 * t5601 - 588 * t5602 - 1120 * t5603 + 840 * t5605 + 532 * t5607 + 44 + (-406 * t5603 + 1108 * t5605 + 95 * t5607 + 175) * t5600) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t5600) ** (-0.1e1 / 0.2e1)) * ((1 - t5600) ** (-0.1e1 / 0.2e1))

        if Bindx == 881:
            t5609 = np.cos(phi)
            t5610 = t5609 ** 2
            t5612 = t5610 ** 2
            t5616 = t5612 ** 2
            t5611 = t5609 * t5610
            t5614 = t5611 ** 2
            t5613 = t5609 * t5612
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5610 - 4 * t5611 - 182 * t5612 - 56 * t5614 + 151 * t5616 + 7 + (-238 + 10 * t5613) * t5613 + (140 * t5614 + 63 * t5616 + 39) * t5609) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 882:
            t5619 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t5619) ** (0.3e1 / 0.2e1)) * ((1 + t5619) ** (0.17e2 / 0.2e1)) * np.sin((7 * phi1 + 10 * phi2))

        if Bindx == 883:
            t5620 = np.cos(phi)
            t5621 = t5620 ** 2
            t5623 = t5621 ** 2
            t5626 = t5623 ** 2
            t5627 = t5620 * t5626
            t5622 = t5620 * t5621
            t5624 = t5622 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t5621 + 48 * t5622 - 42 * t5623 + 42 * t5624 + 27 * t5626 - 8 * t5627 - 1 + (-48 * t5624 + t5627 + 8) * t5620) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 884:
            t5630 = np.cos(phi)
            t5631 = t5630 ** 2
            t5632 = t5630 * t5631
            t5634 = t5632 ** 2
            t5635 = t5630 * t5634
            t5636 = t5630 * t5635
            t5629 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5629 ** 2 * (-84 * t5632 - 168 * t5634 + 108 * t5635 - 36 * t5636 + 4 + (126 * t5632 + 72) * t5631 + (5 * t5636 - 27) * t5630) * np.sin((8 * phi1 - 9 * phi2)) * ((1 + t5630) ** (-0.1e1 / 0.2e1)) * ((1 - t5630) ** (-0.1e1 / 0.2e1))

        if Bindx == 885:
            t5638 = np.cos(phi)
            t5639 = t5638 ** 2
            t5641 = t5639 ** 2
            t5645 = t5641 ** 2
            t5640 = t5638 * t5639
            t5643 = t5640 ** 2
            t5642 = t5638 * t5641
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (531 * t5639 + 192 * t5640 - 1722 * t5641 - 210 * t5643 + 1503 * t5645 + 59 + (2016 + 95 * t5642) * t5642 + (-1536 * t5643 - 608 * t5645 - 320) * t5638) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 886:
            t5649 = np.cos(phi)
            t5650 = t5649 ** 2
            t5652 = t5650 ** 2
            t5656 = t5652 ** 2
            t5651 = t5649 * t5650
            t5654 = t5651 ** 2
            t5648 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5648 ** 2 * (-88 * t5650 - 588 * t5651 + 1120 * t5652 - 840 * t5654 - 532 * t5656 - 44 + (-406 * t5652 + 1108 * t5654 + 95 * t5656 + 175) * t5649) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t5649) ** (-0.1e1 / 0.2e1)) * ((1 - t5649) ** (-0.1e1 / 0.2e1))

        if Bindx == 887:
            t5658 = np.cos(phi)
            t5659 = t5658 ** 2
            t5661 = t5659 ** 2
            t5665 = t5661 ** 2
            t5660 = t5658 * t5659
            t5663 = t5660 ** 2
            t5662 = t5658 * t5661
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5659 - 592 * t5660 + 266 * t5661 - 1162 * t5663 + 677 * t5665 - 31 + (896 + 95 * t5662) * t5662 + (80 * t5663 - 456 * t5665 + 72) * t5658) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 888:
            t5677 = np.sin(phi)
            t5675 = t5677 ** 2
            t5668 = np.cos(phi)
            t5669 = t5668 ** 2
            t5670 = t5668 * t5669
            t5673 = t5670 ** 2
            t5671 = t5669 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t5675 ** 2 * (36 * t5669 - 55 * t5670 - 20 * t5671 - 76 * t5673 - 4 + (99 * t5671 + 19 * t5673 + 1) * t5668) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t5668) ** (-0.1e1 / 0.2e1)) * ((1 - t5668) ** (-0.1e1 / 0.2e1))

        if Bindx == 889:
            t5678 = np.cos(phi)
            t5679 = t5678 ** 2
            t5681 = t5679 ** 2
            t5685 = t5681 ** 2
            t5680 = t5678 * t5679
            t5683 = t5680 ** 2
            t5682 = t5678 * t5681
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t5679 - 32 * t5680 + 574 * t5681 - 602 * t5683 + 87 * t5685 + 11 + (-336 + 95 * t5682) * t5682 + (640 * t5683 - 304 * t5685 + 32) * t5678) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 890:
            t5696 = np.sin(phi)
            t5693 = t5696 ** 2
            t5694 = t5696 * t5693
            t5688 = np.cos(phi)
            t5689 = t5688 ** 2
            t5691 = t5689 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t5694 ** 2 * (64 * t5689 - 228 * t5691 - 4 + (118 * t5689 + 95 * t5691 - 45) * t5688) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t5688) ** (-0.1e1 / 0.2e1)) * ((1 - t5688) ** (-0.1e1 / 0.2e1))

        if Bindx == 891:
            t5697 = np.cos(phi)
            t5698 = t5697 ** 2
            t5700 = t5698 ** 2
            t5704 = t5700 ** 2
            t5699 = t5697 * t5698
            t5702 = t5699 ** 2
            t5701 = t5697 * t5700
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t5698 + 272 * t5699 - 38 * t5700 + 230 * t5702 - 267 * t5704 + 1 + (-576 + 95 * t5701) * t5701 + (496 * t5702 - 152 * t5704 - 40) * t5697) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 892:
            t5713 = np.sin(phi)
            t5710 = t5713 ** 2
            t5711 = t5710 ** 2
            t5707 = np.cos(phi)
            t5708 = t5707 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t5711 ** 2 * (-76 * t5708 + 4 + (95 * t5708 - 23) * t5707) * np.sin((8 * phi1 - phi2)) * ((1 + t5707) ** (-0.1e1 / 0.2e1)) * ((1 - t5707) ** (-0.1e1 / 0.2e1))

        if Bindx == 893:
            t5714 = np.cos(phi)
            t5715 = t5714 ** 2
            t5716 = t5715 ** 2
            t5718 = t5716 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t5716 - 77 * t5718 - 1 + (118 * t5716 + 19 * t5718 + 23) * t5715) * np.cos((8 * phi1))

        if Bindx == 894:
            t5726 = np.sin(phi)
            t5723 = t5726 ** 2
            t5724 = t5723 ** 2
            t5720 = np.cos(phi)
            t5721 = t5720 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t5724 ** 2 * (76 * t5721 - 4 + (95 * t5721 - 23) * t5720) * np.sin((8 * phi1 + phi2)) * ((1 + t5720) ** (-0.1e1 / 0.2e1)) * ((1 - t5720) ** (-0.1e1 / 0.2e1))

        if Bindx == 895:
            t5727 = np.cos(phi)
            t5728 = t5727 ** 2
            t5730 = t5728 ** 2
            t5734 = t5730 ** 2
            t5729 = t5727 * t5728
            t5732 = t5729 ** 2
            t5731 = t5727 * t5730
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t5728 - 272 * t5729 - 38 * t5730 + 230 * t5732 - 267 * t5734 + 1 + (576 + 95 * t5731) * t5731 + (-496 * t5732 + 152 * t5734 + 40) * t5727) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 896:
            t5745 = np.sin(phi)
            t5742 = t5745 ** 2
            t5743 = t5745 * t5742
            t5737 = np.cos(phi)
            t5738 = t5737 ** 2
            t5740 = t5738 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t5743 ** 2 * (-64 * t5738 + 228 * t5740 + 4 + (118 * t5738 + 95 * t5740 - 45) * t5737) * np.sin((8 * phi1 + 3 * phi2)) * ((1 + t5737) ** (-0.1e1 / 0.2e1)) * ((1 - t5737) ** (-0.1e1 / 0.2e1))

        if Bindx == 897:
            t5746 = np.cos(phi)
            t5747 = t5746 ** 2
            t5749 = t5747 ** 2
            t5753 = t5749 ** 2
            t5748 = t5746 * t5747
            t5751 = t5748 ** 2
            t5750 = t5746 * t5749
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t5747 + 32 * t5748 + 574 * t5749 - 602 * t5751 + 87 * t5753 + 11 + (336 + 95 * t5750) * t5750 + (-640 * t5751 + 304 * t5753 - 32) * t5746) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 898:
            t5765 = np.sin(phi)
            t5763 = t5765 ** 2
            t5756 = np.cos(phi)
            t5757 = t5756 ** 2
            t5758 = t5756 * t5757
            t5761 = t5758 ** 2
            t5759 = t5757 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t5763 ** 2 * (-36 * t5757 - 55 * t5758 + 20 * t5759 + 76 * t5761 + 4 + (99 * t5759 + 19 * t5761 + 1) * t5756) * np.sin((8 * phi1 + 5 * phi2)) * ((1 + t5756) ** (-0.1e1 / 0.2e1)) * ((1 - t5756) ** (-0.1e1 / 0.2e1))

        if Bindx == 899:
            t5766 = np.cos(phi)
            t5767 = t5766 ** 2
            t5769 = t5767 ** 2
            t5773 = t5769 ** 2
            t5768 = t5766 * t5767
            t5771 = t5768 ** 2
            t5770 = t5766 * t5769
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5767 + 592 * t5768 + 266 * t5769 - 1162 * t5771 + 677 * t5773 - 31 + (-896 + 95 * t5770) * t5770 + (-80 * t5771 + 456 * t5773 - 72) * t5766) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 900:
            t5777 = np.cos(phi)
            t5778 = t5777 ** 2
            t5780 = t5778 ** 2
            t5784 = t5780 ** 2
            t5779 = t5777 * t5778
            t5782 = t5779 ** 2
            t5776 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5776 ** 2 * (88 * t5778 - 588 * t5779 - 1120 * t5780 + 840 * t5782 + 532 * t5784 + 44 + (-406 * t5780 + 1108 * t5782 + 95 * t5784 + 175) * t5777) * np.sin((8 * phi1 + 7 * phi2)) * ((1 + t5777) ** (-0.1e1 / 0.2e1)) * ((1 - t5777) ** (-0.1e1 / 0.2e1))

        if Bindx == 901:
            t5786 = np.cos(phi)
            t5787 = t5786 ** 2
            t5789 = t5787 ** 2
            t5793 = t5789 ** 2
            t5788 = t5786 * t5787
            t5791 = t5788 ** 2
            t5790 = t5786 * t5789
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (531 * t5787 - 192 * t5788 - 1722 * t5789 - 210 * t5791 + 1503 * t5793 + 59 + (-2016 + 95 * t5790) * t5790 + (1536 * t5791 + 608 * t5793 + 320) * t5786) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 902:
            t5797 = np.cos(phi)
            t5798 = t5797 ** 2
            t5799 = t5797 * t5798
            t5801 = t5799 ** 2
            t5802 = t5797 * t5801
            t5803 = t5797 * t5802
            t5796 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5796 ** 2 * (-84 * t5799 + 168 * t5801 + 108 * t5802 + 36 * t5803 - 4 + (126 * t5799 - 72) * t5798 + (5 * t5803 - 27) * t5797) * np.sin((8 * phi1 + 9 * phi2)) * ((1 + t5797) ** (-0.1e1 / 0.2e1)) * ((1 - t5797) ** (-0.1e1 / 0.2e1))

        if Bindx == 903:
            t5805 = np.cos(phi)
            t5806 = t5805 ** 2
            t5808 = t5806 ** 2
            t5811 = t5808 ** 2
            t5812 = t5805 * t5811
            t5807 = t5805 * t5806
            t5809 = t5807 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t5806 - 48 * t5807 - 42 * t5808 + 42 * t5809 + 27 * t5811 + 8 * t5812 - 1 + (48 * t5809 + t5812 - 8) * t5805) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 904:
            t5814 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t5814) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t5814)) * np.sin((9 * phi1 - 10 * phi2))

        if Bindx == 905:
            t5815 = np.cos(phi)
            t5816 = t5815 ** 2
            t5818 = t5816 ** 2
            t5822 = t5818 ** 2
            t5817 = t5815 * t5816
            t5820 = t5817 ** 2
            t5819 = t5815 * t5818
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (-234 * t5816 + 396 * t5817 - 294 * t5818 + 504 * t5820 + 279 * t5822 - 9 + (-126 + 10 * t5819) * t5819 + (-516 * t5820 - 81 * t5822 + 71) * t5815) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 906:
            t5826 = np.cos(phi)
            t5827 = t5826 ** 2
            t5828 = t5826 * t5827
            t5830 = t5828 ** 2
            t5831 = t5826 * t5830
            t5832 = t5826 * t5831
            t5825 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5825 ** 2 * (-84 * t5828 - 168 * t5830 + 108 * t5831 - 36 * t5832 + 4 + (126 * t5828 + 72) * t5827 + (5 * t5832 - 27) * t5826) * np.sin((9 * phi1 - 8 * phi2)) * ((1 + t5826) ** (-0.1e1 / 0.2e1)) * ((1 - t5826) ** (-0.1e1 / 0.2e1))

        if Bindx == 907:
            t5834 = np.cos(phi)
            t5835 = t5834 ** 2
            t5837 = t5835 ** 2
            t5841 = t5837 ** 2
            t5836 = t5834 * t5835
            t5839 = t5836 ** 2
            t5838 = t5834 * t5837
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5835 + 4 * t5836 - 182 * t5837 - 56 * t5839 + 151 * t5841 + 7 + (238 + 10 * t5838) * t5838 + (-140 * t5839 - 63 * t5841 - 39) * t5834) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 908:
            t5853 = np.sin(phi)
            t5851 = t5853 ** 2
            t5844 = np.cos(phi)
            t5845 = t5844 ** 2
            t5846 = t5844 * t5845
            t5849 = t5846 ** 2
            t5847 = t5845 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5851 ** 2 * (15 * t5845 + 15 * t5846 - 55 * t5847 - 27 * t5849 + 3 + (57 * t5847 + 5 * t5849 - 13) * t5844) * np.sin((9 * phi1 - 6 * phi2)) * ((1 + t5844) ** (-0.1e1 / 0.2e1)) * ((1 - t5844) ** (-0.1e1 / 0.2e1))

        if Bindx == 909:
            t5854 = np.cos(phi)
            t5855 = t5854 ** 2
            t5857 = t5855 ** 2
            t5861 = t5857 ** 2
            t5856 = t5854 * t5855
            t5859 = t5856 ** 2
            t5858 = t5854 * t5857
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t5855 - 16 * t5856 + 14 * t5857 - 28 * t5859 + 11 * t5861 - 1 + (14 + 2 * t5858) * t5858 + (8 * t5859 - 9 * t5861 + 3) * t5854) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 910:
            t5872 = np.sin(phi)
            t5869 = t5872 ** 2
            t5870 = t5872 * t5869
            t5864 = np.cos(phi)
            t5865 = t5864 ** 2
            t5867 = t5865 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t5870 ** 2 * (-8 * t5865 - 18 * t5867 + 2 + (22 * t5865 + 5 * t5867 - 3) * t5864) * np.sin((9 * phi1 - 4 * phi2)) * ((1 + t5864) ** (-0.1e1 / 0.2e1)) * ((1 - t5864) ** (-0.1e1 / 0.2e1))

        if Bindx == 911:
            t5873 = np.cos(phi)
            t5874 = t5873 ** 2
            t5876 = t5874 ** 2
            t5880 = t5876 ** 2
            t5875 = t5873 * t5874
            t5878 = t5875 ** 2
            t5877 = t5873 * t5876
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t5874 + 24 * t5875 + 62 * t5876 - 36 * t5878 - 9 * t5880 + 3 + (-78 + 10 * t5877) * t5877 + (80 * t5878 - 27 * t5880 + 1) * t5873) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 912:
            t5889 = np.sin(phi)
            t5886 = t5889 ** 2
            t5887 = t5886 ** 2
            t5883 = np.cos(phi)
            t5884 = t5883 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t5887 ** 2 * (-9 * t5884 + 1 + (5 * t5884 + 3) * t5883) * np.sin((9 * phi1 - 2 * phi2)) * ((1 + t5883) ** (-0.1e1 / 0.2e1)) * ((1 - t5883) ** (-0.1e1 / 0.2e1))

        if Bindx == 913:
            t5890 = np.cos(phi)
            t5900 = -9 * t5890
            t5891 = t5890 ** 2
            t5893 = t5891 ** 2
            t5894 = t5890 * t5893
            t5892 = t5890 * t5891
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t5891 + t5900 - 1 + (-54 + 10 * t5894) * t5894 + (-46 + (t5900 - 41) * t5893) * t5893 + (36 + (36 * t5890 + 64) * t5892) * t5892) * np.cos((9 * phi1 - phi2))

        if Bindx == 914:
            t5906 = np.sin(phi)
            t5902 = t5906 ** 2
            t5904 = t5906 * t5902 ** 2
            t5901 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t5901 * t5904 ** 2 * np.sin((9 * phi1)) * ((1 + t5901) ** (-0.1e1 / 0.2e1)) * ((1 - t5901) ** (-0.1e1 / 0.2e1))

        if Bindx == 915:
            t5907 = np.cos(phi)
            t5917 = 9 * t5907
            t5908 = t5907 ** 2
            t5910 = t5908 ** 2
            t5911 = t5907 * t5910
            t5909 = t5907 * t5908
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t5908 + t5917 - 1 + (54 + 10 * t5911) * t5911 + (-46 + (t5917 - 41) * t5910) * t5910 + (-36 + (-36 * t5907 + 64) * t5909) * t5909) * np.cos((9 * phi1 + phi2))

        if Bindx == 916:
            t5924 = np.sin(phi)
            t5921 = t5924 ** 2
            t5922 = t5921 ** 2
            t5918 = np.cos(phi)
            t5919 = t5918 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t5922 ** 2 * (9 * t5919 - 1 + (5 * t5919 + 3) * t5918) * np.sin((9 * phi1 + 2 * phi2)) * ((1 + t5918) ** (-0.1e1 / 0.2e1)) * ((1 - t5918) ** (-0.1e1 / 0.2e1))

        if Bindx == 917:
            t5925 = np.cos(phi)
            t5926 = t5925 ** 2
            t5928 = t5926 ** 2
            t5932 = t5928 ** 2
            t5927 = t5925 * t5926
            t5930 = t5927 ** 2
            t5929 = t5925 * t5928
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t5926 - 24 * t5927 + 62 * t5928 - 36 * t5930 - 9 * t5932 + 3 + (78 + 10 * t5929) * t5929 + (-80 * t5930 + 27 * t5932 - 1) * t5925) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 918:
            t5943 = np.sin(phi)
            t5940 = t5943 ** 2
            t5941 = t5943 * t5940
            t5935 = np.cos(phi)
            t5936 = t5935 ** 2
            t5938 = t5936 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t5941 ** 2 * (8 * t5936 + 18 * t5938 - 2 + (22 * t5936 + 5 * t5938 - 3) * t5935) * np.sin((9 * phi1 + 4 * phi2)) * ((1 + t5935) ** (-0.1e1 / 0.2e1)) * ((1 - t5935) ** (-0.1e1 / 0.2e1))

        if Bindx == 919:
            t5944 = np.cos(phi)
            t5945 = t5944 ** 2
            t5947 = t5945 ** 2
            t5951 = t5947 ** 2
            t5946 = t5944 * t5945
            t5949 = t5946 ** 2
            t5948 = t5944 * t5947
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t5945 + 16 * t5946 + 14 * t5947 - 28 * t5949 + 11 * t5951 - 1 + (-14 + 2 * t5948) * t5948 + (-8 * t5949 + 9 * t5951 - 3) * t5944) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 920:
            t5963 = np.sin(phi)
            t5961 = t5963 ** 2
            t5954 = np.cos(phi)
            t5955 = t5954 ** 2
            t5956 = t5954 * t5955
            t5959 = t5956 ** 2
            t5957 = t5955 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5961 ** 2 * (-15 * t5955 + 15 * t5956 + 55 * t5957 + 27 * t5959 - 3 + (57 * t5957 + 5 * t5959 - 13) * t5954) * np.sin((9 * phi1 + 6 * phi2)) * ((1 + t5954) ** (-0.1e1 / 0.2e1)) * ((1 - t5954) ** (-0.1e1 / 0.2e1))

        if Bindx == 921:
            t5964 = np.cos(phi)
            t5965 = t5964 ** 2
            t5967 = t5965 ** 2
            t5971 = t5967 ** 2
            t5966 = t5964 * t5965
            t5969 = t5966 ** 2
            t5968 = t5964 * t5967
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5965 - 4 * t5966 - 182 * t5967 - 56 * t5969 + 151 * t5971 + 7 + (-238 + 10 * t5968) * t5968 + (140 * t5969 + 63 * t5971 + 39) * t5964) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 922:
            t5975 = np.cos(phi)
            t5976 = t5975 ** 2
            t5977 = t5975 * t5976
            t5979 = t5977 ** 2
            t5980 = t5975 * t5979
            t5981 = t5975 * t5980
            t5974 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5974 ** 2 * (-84 * t5977 + 168 * t5979 + 108 * t5980 + 36 * t5981 - 4 + (126 * t5977 - 72) * t5976 + (5 * t5981 - 27) * t5975) * np.sin((9 * phi1 + 8 * phi2)) * ((1 + t5975) ** (-0.1e1 / 0.2e1)) * ((1 - t5975) ** (-0.1e1 / 0.2e1))

        if Bindx == 923:
            t5983 = np.cos(phi)
            t5984 = t5983 ** 2
            t5986 = t5984 ** 2
            t5990 = t5986 ** 2
            t5985 = t5983 * t5984
            t5988 = t5985 ** 2
            t5987 = t5983 * t5986
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (-234 * t5984 - 396 * t5985 - 294 * t5986 + 504 * t5988 + 279 * t5990 - 9 + (126 + 10 * t5987) * t5987 + (516 * t5988 + 81 * t5990 - 71) * t5983) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 924:
            t5993 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * np.sqrt((1 - t5993)) * ((1 + t5993) ** (0.19e2 / 0.2e1)) * np.sin((9 * phi1 + 10 * phi2))

        if Bindx == 925:
            t5994 = np.cos(phi)
            t6004 = -10 * t5994
            t5995 = t5994 ** 2
            t5997 = t5995 ** 2
            t5998 = t5994 * t5997
            t5996 = t5994 * t5995
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.cos((10 * phi1 - 10 * phi2)) * (45 * t5995 + t6004 + 1 + (-252 + t5998) * t5998 + (210 + (t6004 + 45) * t5997) * t5997 + (-120 + (-120 * t5994 + 210) * t5996) * t5996)

        if Bindx == 926:
            t6005 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t6005) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t6005)) * np.sin((10 * phi1 - 9 * phi2))

        if Bindx == 927:
            t6006 = np.cos(phi)
            t6007 = t6006 ** 2
            t6009 = t6007 ** 2
            t6012 = t6009 ** 2
            t6013 = t6006 * t6012
            t6008 = t6006 * t6007
            t6010 = t6008 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t6007 + 48 * t6008 - 42 * t6009 + 42 * t6010 + 27 * t6012 - 8 * t6013 - 1 + (-48 * t6010 + t6013 + 8) * t6006) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 928:
            t6015 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t6015) ** (0.17e2 / 0.2e1)) * ((1 + t6015) ** (0.3e1 / 0.2e1)) * np.sin((10 * phi1 - 7 * phi2))

        if Bindx == 929:
            t6016 = np.cos(phi)
            t6026 = -6 * t6016
            t6017 = t6016 ** 2
            t6019 = t6017 ** 2
            t6020 = t6016 * t6019
            t6018 = t6016 * t6017
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((10 * phi1 - 6 * phi2)) * (13 * t6017 + t6026 + 1 + (28 + t6020) * t6020 + (-14 + (t6026 + 13) * t6019) * t6019 + (-8 + (-8 * t6016 - 14) * t6018) * t6018)

        if Bindx == 930:
            t6027 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t6027) ** (0.15e2 / 0.2e1)) * ((1 + t6027) ** (0.5e1 / 0.2e1)) * np.sin((10 * phi1 - 5 * phi2))

        if Bindx == 931:
            t6028 = np.cos(phi)
            t6029 = t6028 ** 2
            t6031 = t6029 ** 2
            t6034 = t6031 ** 2
            t6035 = t6028 * t6034
            t6030 = t6028 * t6029
            t6032 = t6030 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((10 * phi1 - 4 * phi2)) * (-3 * t6029 - 8 * t6030 + 14 * t6031 - 14 * t6032 + 3 * t6034 - 4 * t6035 - 1 + (8 * t6032 + t6035 + 4) * t6028)

        if Bindx == 932:
            t6037 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t6037) ** (0.13e2 / 0.2e1)) * ((1 + t6037) ** (0.7e1 / 0.2e1)) * np.sin((10 * phi1 - 3 * phi2))

        if Bindx == 933:
            t6038 = np.cos(phi)
            t6048 = -2 * t6038
            t6039 = t6038 ** 2
            t6041 = t6039 ** 2
            t6042 = t6038 * t6041
            t6040 = t6038 * t6039
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((10 * phi1 - 2 * phi2)) * (-3 * t6039 + t6048 + 1 + (-12 + t6042) * t6042 + (2 + (t6048 - 3) * t6041) * t6041 + (8 + (8 * t6038 + 2) * t6040) * t6040)

        if Bindx == 934:
            t6049 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t6049) ** (0.11e2 / 0.2e1)) * ((1 + t6049) ** (0.9e1 / 0.2e1)) * np.sin((10 * phi1 - phi2))

        if Bindx == 935:
            t6050 = np.cos(phi)
            t6051 = t6050 ** 2
            t6052 = t6051 ** 2
            t6054 = t6052 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t6052 - 5 * t6054 - 1 + (10 * t6052 + t6054 + 5) * t6051)

        if Bindx == 936:
            t6056 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t6056) ** (0.9e1 / 0.2e1)) * ((1 + t6056) ** (0.11e2 / 0.2e1)) * np.sin((10 * phi1 + phi2))

        if Bindx == 937:
            t6057 = np.cos(phi)
            t6067 = 2 * t6057
            t6058 = t6057 ** 2
            t6060 = t6058 ** 2
            t6061 = t6057 * t6060
            t6059 = t6057 * t6058
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((10 * phi1 + 2 * phi2)) * (-3 * t6058 + t6067 + 1 + (12 + t6061) * t6061 + (2 + (t6067 - 3) * t6060) * t6060 + (-8 + (-8 * t6057 + 2) * t6059) * t6059)

        if Bindx == 938:
            t6068 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t6068) ** (0.7e1 / 0.2e1)) * ((1 + t6068) ** (0.13e2 / 0.2e1)) * np.sin((10 * phi1 + 3 * phi2))

        if Bindx == 939:
            t6069 = np.cos(phi)
            t6070 = t6069 ** 2
            t6072 = t6070 ** 2
            t6075 = t6072 ** 2
            t6076 = t6069 * t6075
            t6071 = t6069 * t6070
            t6073 = t6071 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((10 * phi1 + 4 * phi2)) * (-3 * t6070 + 8 * t6071 + 14 * t6072 - 14 * t6073 + 3 * t6075 + 4 * t6076 - 1 + (-8 * t6073 + t6076 - 4) * t6069)

        if Bindx == 940:
            t6078 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t6078) ** (0.5e1 / 0.2e1)) * ((1 + t6078) ** (0.15e2 / 0.2e1)) * np.sin((10 * phi1 + 5 * phi2))

        if Bindx == 941:
            t6079 = np.cos(phi)
            t6089 = 6 * t6079
            t6080 = t6079 ** 2
            t6082 = t6080 ** 2
            t6083 = t6079 * t6082
            t6081 = t6079 * t6080
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((10 * phi1 + 6 * phi2)) * (13 * t6080 + t6089 + 1 + (-28 + t6083) * t6083 + (-14 + (t6089 + 13) * t6082) * t6082 + (8 + (8 * t6079 - 14) * t6081) * t6081)

        if Bindx == 942:
            t6090 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t6090) ** (0.3e1 / 0.2e1)) * ((1 + t6090) ** (0.17e2 / 0.2e1)) * np.sin((10 * phi1 + 7 * phi2))

        if Bindx == 943:
            t6091 = np.cos(phi)
            t6092 = t6091 ** 2
            t6094 = t6092 ** 2
            t6097 = t6094 ** 2
            t6098 = t6091 * t6097
            t6093 = t6091 * t6092
            t6095 = t6093 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t6092 - 48 * t6093 - 42 * t6094 + 42 * t6095 + 27 * t6097 + 8 * t6098 - 1 + (48 * t6095 + t6098 - 8) * t6091) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 944:
            t6100 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 + t6100) ** (0.19e2 / 0.2e1)) * np.sin((10 * phi1 + 9 * phi2)) * np.sqrt((1 - t6100))

        if Bindx == 945:
            t6101 = np.cos(phi)
            t6111 = 10 * t6101
            t6102 = t6101 ** 2
            t6104 = t6102 ** 2
            t6105 = t6101 * t6104
            t6103 = t6101 * t6102
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.cos((10 * phi1 + 10 * phi2)) * (45 * t6102 + t6111 + 1 + (252 + t6105) * t6105 + (210 + (t6111 + 45) * t6104) * t6104 + (120 + (120 * t6101 + 210) * t6103) * t6103)

        if Bindx == 946:
            t6112 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.88179e5) * ((1 - t6112) ** (0.11e2 / 0.2e1)) * ((1 + t6112) ** (0.11e2 / 0.2e1)) * np.sin((11 * phi2))

        if Bindx == 947:
            t6113 = np.cos(phi)
            t6114 = t6113 ** 2
            t6115 = t6114 ** 2
            t6117 = t6115 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969969e6) * t6113 * np.cos((10 * phi2)) * (-10 * t6115 - 5 * t6117 - 1 + (10 * t6115 + t6117 + 5) * t6114)

        if Bindx == 948:
            t6124 = np.sin(phi)
            t6120 = t6124 ** 2
            t6122 = t6124 * t6120 ** 2
            t6119 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.46189e5) * t6122 ** 2 * (21 * t6119 ** 2 - 1) * np.sin((9 * phi2)) * ((1 + t6119) ** (-0.1e1 / 0.2e1)) * ((1 - t6119) ** (-0.1e1 / 0.2e1))

        if Bindx == 949:
            t6125 = np.cos(phi)
            t6126 = t6125 ** 2
            t6127 = t6126 ** 2
            t6129 = t6127 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * t6125 * np.sqrt(0.692835e6) * (-34 * t6127 - 29 * t6129 - 1 + (46 * t6127 + 7 * t6129 + 11) * t6126) * np.cos((8 * phi2))

        if Bindx == 950:
            t6137 = np.sin(phi)
            t6134 = t6137 ** 2
            t6135 = t6134 ** 2
            t6131 = np.cos(phi)
            t6132 = t6131 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.36465e5) * t6135 ** 2 * (1 + (-38 + 133 * t6132) * t6132) * np.sin((7 * phi2)) * ((1 + t6131) ** (-0.1e1 / 0.2e1)) * ((1 - t6131) ** (-0.1e1 / 0.2e1))

        if Bindx == 951:
            t6138 = np.cos(phi)
            t6139 = t6138 ** 2
            t6140 = t6139 ** 2
            t6142 = t6140 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7293e4) * t6138 * (-1014 * t6140 - 1387 * t6142 - 15 + (1782 * t6140 + 399 * t6142 + 235) * t6139) * np.cos((6 * phi2))

        if Bindx == 952:
            t6151 = np.sin(phi)
            t6148 = t6151 ** 2
            t6149 = t6151 * t6148
            t6144 = np.cos(phi)
            t6145 = t6144 ** 2
            t6146 = t6145 ** 2
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.143e3) * t6149 ** 2 * (-1615 * t6146 - 5 + (2261 * t6146 + 255) * t6145) * np.sin((5 * phi2)) * ((1 + t6144) ** (-0.1e1 / 0.2e1)) * ((1 - t6144) ** (-0.1e1 / 0.2e1))

        if Bindx == 953:
            t6152 = np.cos(phi)
            t6153 = t6152 ** 2
            t6154 = t6153 ** 2
            t6156 = t6154 ** 2
            tfunc[..., c] = 0.69e2 / 0.128e3 * t6152 * np.sqrt(0.1001e4) * (-498 * t6154 - 969 * t6156 - 5 + (1054 * t6154 + 323 * t6156 + 95) * t6153) * np.cos((4 * phi2))

        if Bindx == 954:
            t6165 = np.sin(phi)
            t6163 = t6165 ** 2
            t6158 = np.cos(phi)
            t6159 = t6158 ** 2
            t6160 = t6159 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t6163 ** 2 * (-60 * t6159 + 1 + (-1292 * t6159 + 510 + 969 * t6160) * t6160) * np.sin((3 * phi2)) * ((1 + t6158) ** (-0.1e1 / 0.2e1)) * ((1 - t6158) ** (-0.1e1 / 0.2e1))

        if Bindx == 955:
            t6166 = np.cos(phi)
            t6167 = t6166 ** 2
            t6168 = t6167 ** 2
            t6170 = t6168 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * t6166 * np.sqrt(0.2145e4) * (-2562 * t6168 - 6137 * t6170 - 21 + (6018 * t6168 + 2261 * t6170 + 441) * t6167) * np.cos((2 * phi2))

        if Bindx == 956:
            t6173 = np.cos(phi)
            t6174 = t6173 ** 2
            t6175 = t6174 ** 2
            t6177 = t6175 ** 2
            t6172 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t6172 ** 2 * (-13650 * t6175 - 62985 * t6177 - 21 + (46410 * t6175 + 29393 * t6177 + 1365) * t6174) * np.sin(phi2) * ((1 + t6173) ** (-0.1e1 / 0.2e1)) * ((1 - t6173) ** (-0.1e1 / 0.2e1))

        if Bindx == 957:
            t6179 = np.cos(phi)
            t6180 = t6179 ** 2
            t6181 = t6180 ** 2
            t6183 = t6181 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * t6179 * (-90090 * t6181 - 230945 * t6183 - 693 + (218790 * t6181 + 88179 * t6183 + 15015) * t6180)

        if Bindx == 958:
            t6186 = np.cos(phi)
            t6187 = t6186 ** 2
            t6188 = t6187 ** 2
            t6190 = t6188 ** 2
            t6185 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t6185 ** 2 * (-13650 * t6188 - 62985 * t6190 - 21 + (46410 * t6188 + 29393 * t6190 + 1365) * t6187) * np.sin(phi2) * ((1 + t6186) ** (-0.1e1 / 0.2e1)) * ((1 - t6186) ** (-0.1e1 / 0.2e1))

        if Bindx == 959:
            t6192 = np.cos(phi)
            t6193 = t6192 ** 2
            t6194 = t6193 ** 2
            t6196 = t6194 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * t6192 * np.sqrt(0.2145e4) * (-2562 * t6194 - 6137 * t6196 - 21 + (6018 * t6194 + 2261 * t6196 + 441) * t6193) * np.cos((2 * phi2))

        if Bindx == 960:
            t6205 = np.sin(phi)
            t6203 = t6205 ** 2
            t6198 = np.cos(phi)
            t6199 = t6198 ** 2
            t6200 = t6199 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t6203 ** 2 * (-60 * t6199 + 1 + (-1292 * t6199 + 510 + 969 * t6200) * t6200) * np.sin((3 * phi2)) * ((1 + t6198) ** (-0.1e1 / 0.2e1)) * ((1 - t6198) ** (-0.1e1 / 0.2e1))

        if Bindx == 961:
            t6206 = np.cos(phi)
            t6207 = t6206 ** 2
            t6208 = t6207 ** 2
            t6210 = t6208 ** 2
            tfunc[..., c] = 0.69e2 / 0.128e3 * t6206 * np.sqrt(0.1001e4) * (-498 * t6208 - 969 * t6210 - 5 + (1054 * t6208 + 323 * t6210 + 95) * t6207) * np.cos((4 * phi2))

        if Bindx == 962:
            t6219 = np.sin(phi)
            t6216 = t6219 ** 2
            t6217 = t6219 * t6216
            t6212 = np.cos(phi)
            t6213 = t6212 ** 2
            t6214 = t6213 ** 2
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.143e3) * t6217 ** 2 * (-1615 * t6214 - 5 + (2261 * t6214 + 255) * t6213) * np.sin((5 * phi2)) * ((1 + t6212) ** (-0.1e1 / 0.2e1)) * ((1 - t6212) ** (-0.1e1 / 0.2e1))

        if Bindx == 963:
            t6220 = np.cos(phi)
            t6221 = t6220 ** 2
            t6222 = t6221 ** 2
            t6224 = t6222 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7293e4) * t6220 * (-1014 * t6222 - 1387 * t6224 - 15 + (1782 * t6222 + 399 * t6224 + 235) * t6221) * np.cos((6 * phi2))

        if Bindx == 964:
            t6232 = np.sin(phi)
            t6229 = t6232 ** 2
            t6230 = t6229 ** 2
            t6226 = np.cos(phi)
            t6227 = t6226 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.36465e5) * t6230 ** 2 * (1 + (-38 + 133 * t6227) * t6227) * np.sin((7 * phi2)) * ((1 + t6226) ** (-0.1e1 / 0.2e1)) * ((1 - t6226) ** (-0.1e1 / 0.2e1))

        if Bindx == 965:
            t6233 = np.cos(phi)
            t6234 = t6233 ** 2
            t6235 = t6234 ** 2
            t6237 = t6235 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * t6233 * np.sqrt(0.692835e6) * (-34 * t6235 - 29 * t6237 - 1 + (46 * t6235 + 7 * t6237 + 11) * t6234) * np.cos((8 * phi2))

        if Bindx == 966:
            t6244 = np.sin(phi)
            t6240 = t6244 ** 2
            t6242 = t6244 * t6240 ** 2
            t6239 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.46189e5) * t6242 ** 2 * (21 * t6239 ** 2 - 1) * np.sin((9 * phi2)) * ((1 + t6239) ** (-0.1e1 / 0.2e1)) * ((1 - t6239) ** (-0.1e1 / 0.2e1))

        if Bindx == 967:
            t6245 = np.cos(phi)
            t6246 = t6245 ** 2
            t6247 = t6246 ** 2
            t6249 = t6247 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969969e6) * t6245 * np.cos((10 * phi2)) * (-10 * t6247 - 5 * t6249 - 1 + (10 * t6247 + t6249 + 5) * t6246)

        if Bindx == 968:
            t6251 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.88179e5) * ((1 - t6251) ** (0.11e2 / 0.2e1)) * ((1 + t6251) ** (0.11e2 / 0.2e1)) * np.sin((11 * phi2))

        if Bindx == 969:
            t6252 = np.cos(phi)
            t6253 = t6252 ** 2
            t6254 = t6252 * t6253
            t6255 = t6253 ** 2
            t6256 = t6252 * t6255
            t6263 = 10 * t6254 ** 2 - 5 * t6255 ** 2 + t6256 ** 2 - 1
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.323323e6) * np.cos((phi1 - 11 * phi2)) * (t6263 * t6252 - 5 * t6253 + 5 * t6254 + 10 * t6255 - 10 * t6256 - t6263)

        if Bindx == 970:
            t6269 = np.sin(phi)
            t6265 = t6269 ** 2
            t6267 = t6269 * t6265 ** 2
            t6264 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t6267 ** 2 * (-1 + (-10 + 11 * t6264) * t6264) * np.sin((phi1 - 10 * phi2)) * ((1 + t6264) ** (-0.1e1 / 0.2e1)) * ((1 - t6264) ** (-0.1e1 / 0.2e1))

        if Bindx == 971:
            t6270 = np.cos(phi)
            t6271 = t6270 ** 2
            t6273 = t6271 ** 2
            t6274 = t6270 * t6273
            t6279 = t6274 ** 2
            t6277 = t6273 ** 2
            t6272 = t6270 * t6271
            t6275 = t6272 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.12597e5) * (-75 * t6271 + 145 * t6272 + 270 * t6273 - 410 * t6274 - 390 * t6275 + 255 * t6277 - 63 * t6279 + 3 + (530 * t6275 - 325 * t6277 + 77 * t6279 - 17) * t6270) * np.cos((phi1 - 9 * phi2))

        if Bindx == 972:
            t6288 = np.sin(phi)
            t6285 = t6288 ** 2
            t6286 = t6285 ** 2
            t6281 = np.cos(phi)
            t6282 = t6281 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.20995e5) * t6286 ** 2 * (8 * t6281 + 1 + (-56 * t6281 - 30 + 77 * t6282) * t6282) * np.sin((phi1 - 8 * phi2)) * ((1 + t6281) ** (-0.1e1 / 0.2e1)) * ((1 - t6281) ** (-0.1e1 / 0.2e1))

        if Bindx == 973:
            t6289 = np.cos(phi)
            t6290 = t6289 ** 2
            t6292 = t6290 ** 2
            t6293 = t6289 * t6292
            t6298 = t6293 ** 2
            t6296 = t6292 ** 2
            t6291 = t6289 * t6290
            t6294 = t6291 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.1105e4) * (-287 * t6290 + 1123 * t6291 + 1750 * t6292 - 4334 * t6293 - 3598 * t6294 + 3059 * t6296 - 931 * t6298 + 7 + (7094 * t6294 - 5263 * t6296 + 1463 * t6298 - 83) * t6289) * np.cos((phi1 - 7 * phi2))

        if Bindx == 974:
            t6309 = np.sin(phi)
            t6306 = t6309 ** 2
            t6307 = t6309 * t6306
            t6300 = np.cos(phi)
            t6301 = t6300 ** 2
            t6303 = t6301 ** 2
            t6302 = t6300 * t6301
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t6307 ** 2 * (225 * t6301 - 1235 * t6303 - 5 + (380 + 1463 * t6302) * t6302 + (-798 * t6303 - 30) * t6300) * np.sin((phi1 - 6 * phi2)) * ((1 + t6300) ** (-0.1e1 / 0.2e1)) * ((1 - t6300) ** (-0.1e1 / 0.2e1))

        if Bindx == 975:
            t6310 = np.cos(phi)
            t6311 = t6310 ** 2
            t6313 = t6311 ** 2
            t6314 = t6310 * t6313
            t6319 = t6314 ** 2
            t6317 = t6313 ** 2
            t6312 = t6310 * t6311
            t6315 = t6312 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.39e2) * (-1325 * t6311 + 9315 * t6312 + 10650 * t6313 - 45126 * t6314 - 28730 * t6315 + 30685 * t6317 - 11305 * t6319 + 25 + (89318 * t6315 - 77843 * t6317 + 24871 * t6319 - 535) * t6310) * np.cos((phi1 - 5 * phi2))

        if Bindx == 976:
            t6331 = np.sin(phi)
            t6329 = t6331 ** 2
            t6321 = np.cos(phi)
            t6322 = t6321 ** 2
            t6323 = t6321 * t6322
            t6326 = t6323 ** 2
            t6324 = t6322 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.273e3) * t6329 ** 2 * (-280 * t6322 - 340 * t6323 - 5168 * t6326 + 5 + (2210 + 3553 * t6324) * t6324 + (1292 * t6324 - 1292 * t6326 + 20) * t6321) * np.sin((phi1 - 4 * phi2)) * ((1 + t6321) ** (-0.1e1 / 0.2e1)) * ((1 - t6321) ** (-0.1e1 / 0.2e1))

        if Bindx == 977:
            t6332 = np.cos(phi)
            t6333 = t6332 ** 2
            t6335 = t6333 ** 2
            t6336 = t6332 * t6335
            t6341 = t6336 ** 2
            t6339 = t6335 ** 2
            t6334 = t6332 * t6333
            t6337 = t6334 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (-61 * t6333 + 821 * t6334 + 570 * t6335 - 4554 * t6336 - 1802 * t6337 + 2261 * t6339 - 969 * t6341 + 1 + (10234 * t6337 - 10013 * t6339 + 3553 * t6341 - 41) * t6332) * np.cos((phi1 - 3 * phi2))

        if Bindx == 978:
            t6344 = np.cos(phi)
            t6345 = t6344 ** 2
            t6347 = t6345 ** 2
            t6351 = t6347 ** 2
            t6346 = t6344 * t6345
            t6349 = t6346 ** 2
            t6348 = t6344 * t6347
            t6343 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.65e2) * t6343 ** 2 * (1323 * t6345 + 840 * t6346 - 12810 * t6347 + 42126 * t6349 - 55233 * t6351 - 21 + (-4284 + 24871 * t6348) * t6348 + (7752 * t6349 - 4522 * t6351 - 42) * t6344) * np.sin((phi1 - 2 * phi2)) * ((1 + t6344) ** (-0.1e1 / 0.2e1)) * ((1 - t6344) ** (-0.1e1 / 0.2e1))

        if Bindx == 979:
            t6354 = np.cos(phi)
            t6355 = t6354 ** 2
            t6357 = t6355 ** 2
            t6358 = t6354 * t6357
            t6363 = t6358 ** 2
            t6361 = t6357 ** 2
            t6356 = t6354 * t6355
            t6359 = t6356 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (-1365 * t6355 + 58695 * t6356 + 13650 * t6357 - 346710 * t6358 - 46410 * t6359 + 62985 * t6361 - 29393 * t6363 + 21 + (828750 * t6359 - 860795 * t6361 + 323323 * t6363 - 2751) * t6354) * np.cos(phi1 - phi2)

        if Bindx == 980:
            t6366 = np.cos(phi)
            t6367 = t6366 ** 2
            t6368 = t6367 ** 2
            t6370 = t6368 ** 2
            t6365 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t6365 ** 2 * (-13650 * t6368 - 62985 * t6370 - 21 + (46410 * t6368 + 29393 * t6370 + 1365) * t6367) * np.sin(phi1) * ((1 + t6366) ** (-0.1e1 / 0.2e1)) * ((1 - t6366) ** (-0.1e1 / 0.2e1))

        if Bindx == 981:
            t6372 = np.cos(phi)
            t6373 = t6372 ** 2
            t6375 = t6373 ** 2
            t6376 = t6372 * t6375
            t6381 = t6376 ** 2
            t6379 = t6375 ** 2
            t6374 = t6372 * t6373
            t6377 = t6374 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (1365 * t6373 + 58695 * t6374 - 13650 * t6375 - 346710 * t6376 + 46410 * t6377 - 62985 * t6379 + 29393 * t6381 - 21 + (828750 * t6377 - 860795 * t6379 + 323323 * t6381 - 2751) * t6372) * np.cos(phi1 + phi2)

        if Bindx == 982:
            t6384 = np.cos(phi)
            t6385 = t6384 ** 2
            t6387 = t6385 ** 2
            t6391 = t6387 ** 2
            t6386 = t6384 * t6385
            t6389 = t6386 ** 2
            t6388 = t6384 * t6387
            t6383 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.65e2) * t6383 ** 2 * (1323 * t6385 - 840 * t6386 - 12810 * t6387 + 42126 * t6389 - 55233 * t6391 - 21 + (4284 + 24871 * t6388) * t6388 + (-7752 * t6389 + 4522 * t6391 + 42) * t6384) * np.sin((phi1 + 2 * phi2)) * ((1 + t6384) ** (-0.1e1 / 0.2e1)) * ((1 - t6384) ** (-0.1e1 / 0.2e1))

        if Bindx == 983:
            t6394 = np.cos(phi)
            t6395 = t6394 ** 2
            t6397 = t6395 ** 2
            t6398 = t6394 * t6397
            t6403 = t6398 ** 2
            t6401 = t6397 ** 2
            t6396 = t6394 * t6395
            t6399 = t6396 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (61 * t6395 + 821 * t6396 - 570 * t6397 - 4554 * t6398 + 1802 * t6399 - 2261 * t6401 + 969 * t6403 - 1 + (10234 * t6399 - 10013 * t6401 + 3553 * t6403 - 41) * t6394) * np.cos((phi1 + 3 * phi2))

        if Bindx == 984:
            t6415 = np.sin(phi)
            t6413 = t6415 ** 2
            t6405 = np.cos(phi)
            t6406 = t6405 ** 2
            t6407 = t6405 * t6406
            t6410 = t6407 ** 2
            t6408 = t6406 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.273e3) * t6413 ** 2 * (-280 * t6406 + 340 * t6407 - 5168 * t6410 + 5 + (2210 + 3553 * t6408) * t6408 + (-1292 * t6408 + 1292 * t6410 - 20) * t6405) * np.sin((phi1 + 4 * phi2)) * ((1 + t6405) ** (-0.1e1 / 0.2e1)) * ((1 - t6405) ** (-0.1e1 / 0.2e1))

        if Bindx == 985:
            t6416 = np.cos(phi)
            t6417 = t6416 ** 2
            t6419 = t6417 ** 2
            t6420 = t6416 * t6419
            t6425 = t6420 ** 2
            t6423 = t6419 ** 2
            t6418 = t6416 * t6417
            t6421 = t6418 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.39e2) * (1325 * t6417 + 9315 * t6418 - 10650 * t6419 - 45126 * t6420 + 28730 * t6421 - 30685 * t6423 + 11305 * t6425 - 25 + (89318 * t6421 - 77843 * t6423 + 24871 * t6425 - 535) * t6416) * np.cos((phi1 + 5 * phi2))

        if Bindx == 986:
            t6436 = np.sin(phi)
            t6433 = t6436 ** 2
            t6434 = t6436 * t6433
            t6427 = np.cos(phi)
            t6428 = t6427 ** 2
            t6430 = t6428 ** 2
            t6429 = t6427 * t6428
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t6434 ** 2 * (225 * t6428 - 1235 * t6430 - 5 + (-380 + 1463 * t6429) * t6429 + (798 * t6430 + 30) * t6427) * np.sin((phi1 + 6 * phi2)) * ((1 + t6427) ** (-0.1e1 / 0.2e1)) * ((1 - t6427) ** (-0.1e1 / 0.2e1))

        if Bindx == 987:
            t6437 = np.cos(phi)
            t6438 = t6437 ** 2
            t6440 = t6438 ** 2
            t6441 = t6437 * t6440
            t6446 = t6441 ** 2
            t6444 = t6440 ** 2
            t6439 = t6437 * t6438
            t6442 = t6439 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.1105e4) * (287 * t6438 + 1123 * t6439 - 1750 * t6440 - 4334 * t6441 + 3598 * t6442 - 3059 * t6444 + 931 * t6446 - 7 + (7094 * t6442 - 5263 * t6444 + 1463 * t6446 - 83) * t6437) * np.cos((phi1 + 7 * phi2))

        if Bindx == 988:
            t6455 = np.sin(phi)
            t6452 = t6455 ** 2
            t6453 = t6452 ** 2
            t6448 = np.cos(phi)
            t6449 = t6448 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.20995e5) * t6453 ** 2 * (-8 * t6448 + 1 + (56 * t6448 - 30 + 77 * t6449) * t6449) * np.sin((phi1 + 8 * phi2)) * ((1 + t6448) ** (-0.1e1 / 0.2e1)) * ((1 - t6448) ** (-0.1e1 / 0.2e1))

        if Bindx == 989:
            t6456 = np.cos(phi)
            t6457 = t6456 ** 2
            t6459 = t6457 ** 2
            t6460 = t6456 * t6459
            t6465 = t6460 ** 2
            t6463 = t6459 ** 2
            t6458 = t6456 * t6457
            t6461 = t6458 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.12597e5) * (75 * t6457 + 145 * t6458 - 270 * t6459 - 410 * t6460 + 390 * t6461 - 255 * t6463 + 63 * t6465 - 3 + (530 * t6461 - 325 * t6463 + 77 * t6465 - 17) * t6456) * np.cos((phi1 + 9 * phi2))

        if Bindx == 990:
            t6472 = np.sin(phi)
            t6468 = t6472 ** 2
            t6470 = t6472 * t6468 ** 2
            t6467 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t6470 ** 2 * (-1 + (10 + 11 * t6467) * t6467) * np.sin((phi1 + 10 * phi2)) * ((1 + t6467) ** (-0.1e1 / 0.2e1)) * ((1 - t6467) ** (-0.1e1 / 0.2e1))

        if Bindx == 991:
            t6473 = np.cos(phi)
            t6474 = t6473 ** 2
            t6475 = t6473 * t6474
            t6476 = t6474 ** 2
            t6477 = t6473 * t6476
            t6486 = 10 * t6475 ** 2 - 5 * t6476 ** 2 + t6477 ** 2 - 1
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.323323e6) * np.cos((phi1 + 11 * phi2)) * (t6486 * t6473 + 5 * t6474 + 5 * t6475 - 10 * t6476 - 10 * t6477 + t6486)

        if Bindx == 992:
            t6487 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.124355e6) * ((1 - t6487) ** (0.13e2 / 0.2e1)) * ((1 + t6487) ** (0.9e1 / 0.2e1)) * np.sin((2 * phi1 - 11 * phi2))

        if Bindx == 993:
            t6488 = np.cos(phi)
            t6489 = t6488 ** 2
            t6491 = t6489 ** 2
            t6492 = t6488 * t6491
            t6497 = t6492 ** 2
            t6495 = t6491 ** 2
            t6490 = t6488 * t6489
            t6493 = t6490 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.11305e5) * (-28 * t6489 - 17 * t6490 + 92 * t6491 - 2 * t6492 - 128 * t6493 + 82 * t6495 - 20 * t6497 + 2 + (38 * t6493 - 37 * t6495 + 11 * t6497 + 7) * t6488) * np.cos((2 * phi1 - 10 * phi2))

        if Bindx == 994:
            t6506 = np.sin(phi)
            t6503 = t6506 ** 2
            t6504 = t6503 ** 2
            t6499 = np.cos(phi)
            t6500 = t6499 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t6504 ** 2 * (30 * t6499 - 1 + (-126 * t6499 + 20 + 77 * t6500) * t6500) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t6499) ** (-0.1e1 / 0.2e1)) * ((1 - t6499) ** (-0.1e1 / 0.2e1))

        if Bindx == 995:
            t6507 = np.cos(phi)
            t6508 = t6507 ** 2
            t6510 = t6508 ** 2
            t6511 = t6507 * t6510
            t6516 = t6511 ** 2
            t6514 = t6510 ** 2
            t6509 = t6507 * t6508
            t6512 = t6509 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (-256 * t6508 + 53 * t6509 + 1280 * t6510 - 538 * t6511 - 2384 * t6512 + 1912 * t6514 - 560 * t6516 + 8 + (1306 * t6512 - 1205 * t6514 + 385 * t6516 - 1) * t6507) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 996:
            t6527 = np.sin(phi)
            t6524 = t6527 ** 2
            t6525 = t6527 * t6524
            t6518 = np.cos(phi)
            t6519 = t6518 ** 2
            t6521 = t6519 ** 2
            t6520 = t6518 * t6519
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t6525 ** 2 * (629 * t6519 - 3895 * t6521 - 17 + (5852 + 7315 * t6520) * t6520 + (-9310 * t6521 - 574) * t6518) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t6518) ** (-0.1e1 / 0.2e1)) * ((1 - t6518) ** (-0.1e1 / 0.2e1))

        if Bindx == 997:
            t6528 = np.cos(phi)
            t6529 = t6528 ** 2
            t6531 = t6529 ** 2
            t6532 = t6528 * t6531
            t6537 = t6532 ** 2
            t6535 = t6531 ** 2
            t6530 = t6528 * t6529
            t6533 = t6530 ** 2
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.85e2) * (-276 * t6529 + 459 * t6530 + 1940 * t6531 - 2218 * t6532 - 4672 * t6533 + 4598 * t6535 - 1596 * t6537 + 6 + (4638 * t6533 - 4313 * t6535 + 1463 * t6537 - 29) * t6528) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 998:
            t6549 = np.sin(phi)
            t6547 = t6549 ** 2
            t6539 = np.cos(phi)
            t6540 = t6539 ** 2
            t6541 = t6539 * t6540
            t6544 = t6541 ** 2
            t6542 = t6540 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t6547 ** 2 * (-2050 * t6540 - 7990 * t6541 - 34238 * t6544 + 41 + (14960 + 24871 * t6542) * t6542 + (26486 * t6542 - 22610 * t6544 + 530) * t6539) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t6539) ** (-0.1e1 / 0.2e1)) * ((1 - t6539) ** (-0.1e1 / 0.2e1))

        if Bindx == 999:
            t6550 = np.cos(phi)
            t6551 = t6550 ** 2
            t6553 = t6551 ** 2
            t6554 = t6550 * t6553
            t6559 = t6554 ** 2
            t6557 = t6553 ** 2
            t6552 = t6550 * t6551
            t6555 = t6552 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-224 * t6551 + 909 * t6552 + 1920 * t6553 - 4770 * t6554 - 5576 * t6555 + 6460 * t6557 - 2584 * t6559 + 4 + (10370 * t6555 - 10013 * t6557 + 3553 * t6559 - 49) * t6550) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 1000:
            t6562 = np.cos(phi)
            t6563 = t6562 ** 2
            t6565 = t6563 ** 2
            t6569 = t6565 ** 2
            t6564 = t6562 * t6563
            t6567 = t6564 ** 2
            t6566 = t6562 * t6565
            t6561 = np.sin(phi)
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.7e1) * t6561 ** 2 * (1121 * t6563 + 2280 * t6564 - 10230 * t6565 + 31994 * t6567 - 40375 * t6569 - 19 + (-10812 + 17765 * t6566) * t6566 + (18088 * t6567 - 9690 * t6569 - 122) * t6562) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t6562) ** (-0.1e1 / 0.2e1)) * ((1 - t6562) ** (-0.1e1 / 0.2e1))

        if Bindx == 1001:
            t6572 = np.cos(phi)
            t6573 = t6572 ** 2
            t6575 = t6573 ** 2
            t6576 = t6572 * t6575
            t6581 = t6576 ** 2
            t6579 = t6575 ** 2
            t6574 = t6572 * t6573
            t6577 = t6574 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * (-2604 * t6573 + 26103 * t6574 + 24780 * t6575 - 147714 * t6576 - 79968 * t6577 + 102714 * t6579 - 45220 * t6581 + 42 + (339558 * t6577 - 340765 * t6579 + 124355 * t6581 - 1281) * t6572) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 1002:
            t6584 = np.cos(phi)
            t6585 = t6584 ** 2
            t6587 = t6585 ** 2
            t6591 = t6587 ** 2
            t6586 = t6584 * t6585
            t6589 = t6586 ** 2
            t6588 = t6584 * t6587
            t6583 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.65e2) * t6583 ** 2 * (1323 * t6585 + 840 * t6586 - 12810 * t6587 + 42126 * t6589 - 55233 * t6591 - 21 + (-4284 + 24871 * t6588) * t6588 + (7752 * t6589 - 4522 * t6591 - 42) * t6584) * np.sin((2 * phi1 - phi2)) * ((1 + t6584) ** (-0.1e1 / 0.2e1)) * ((1 - t6584) ** (-0.1e1 / 0.2e1))

        if Bindx == 1003:
            t6594 = np.cos(phi)
            t6595 = t6594 ** 2
            t6596 = t6595 ** 2
            t6598 = t6596 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * t6594 * np.sqrt(0.2145e4) * (-2562 * t6596 - 6137 * t6598 - 21 + (6018 * t6596 + 2261 * t6598 + 441) * t6595) * np.cos((2 * phi1))

        if Bindx == 1004:
            t6601 = np.cos(phi)
            t6602 = t6601 ** 2
            t6604 = t6602 ** 2
            t6608 = t6604 ** 2
            t6603 = t6601 * t6602
            t6606 = t6603 ** 2
            t6605 = t6601 * t6604
            t6600 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.65e2) * t6600 ** 2 * (1323 * t6602 - 840 * t6603 - 12810 * t6604 + 42126 * t6606 - 55233 * t6608 - 21 + (4284 + 24871 * t6605) * t6605 + (-7752 * t6606 + 4522 * t6608 + 42) * t6601) * np.sin((2 * phi1 + phi2)) * ((1 + t6601) ** (-0.1e1 / 0.2e1)) * ((1 - t6601) ** (-0.1e1 / 0.2e1))

        if Bindx == 1005:
            t6611 = np.cos(phi)
            t6612 = t6611 ** 2
            t6614 = t6612 ** 2
            t6615 = t6611 * t6614
            t6620 = t6615 ** 2
            t6618 = t6614 ** 2
            t6613 = t6611 * t6612
            t6616 = t6613 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * (2604 * t6612 + 26103 * t6613 - 24780 * t6614 - 147714 * t6615 + 79968 * t6616 - 102714 * t6618 + 45220 * t6620 - 42 + (339558 * t6616 - 340765 * t6618 + 124355 * t6620 - 1281) * t6611) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 1006:
            t6623 = np.cos(phi)
            t6624 = t6623 ** 2
            t6626 = t6624 ** 2
            t6630 = t6626 ** 2
            t6625 = t6623 * t6624
            t6628 = t6625 ** 2
            t6627 = t6623 * t6626
            t6622 = np.sin(phi)
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.7e1) * t6622 ** 2 * (1121 * t6624 - 2280 * t6625 - 10230 * t6626 + 31994 * t6628 - 40375 * t6630 - 19 + (10812 + 17765 * t6627) * t6627 + (-18088 * t6628 + 9690 * t6630 + 122) * t6623) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t6623) ** (-0.1e1 / 0.2e1)) * ((1 - t6623) ** (-0.1e1 / 0.2e1))

        if Bindx == 1007:
            t6633 = np.cos(phi)
            t6634 = t6633 ** 2
            t6636 = t6634 ** 2
            t6637 = t6633 * t6636
            t6642 = t6637 ** 2
            t6640 = t6636 ** 2
            t6635 = t6633 * t6634
            t6638 = t6635 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (224 * t6634 + 909 * t6635 - 1920 * t6636 - 4770 * t6637 + 5576 * t6638 - 6460 * t6640 + 2584 * t6642 - 4 + (10370 * t6638 - 10013 * t6640 + 3553 * t6642 - 49) * t6633) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 1008:
            t6654 = np.sin(phi)
            t6652 = t6654 ** 2
            t6644 = np.cos(phi)
            t6645 = t6644 ** 2
            t6646 = t6644 * t6645
            t6649 = t6646 ** 2
            t6647 = t6645 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t6652 ** 2 * (-2050 * t6645 + 7990 * t6646 - 34238 * t6649 + 41 + (14960 + 24871 * t6647) * t6647 + (-26486 * t6647 + 22610 * t6649 - 530) * t6644) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t6644) ** (-0.1e1 / 0.2e1)) * ((1 - t6644) ** (-0.1e1 / 0.2e1))

        if Bindx == 1009:
            t6655 = np.cos(phi)
            t6656 = t6655 ** 2
            t6658 = t6656 ** 2
            t6659 = t6655 * t6658
            t6664 = t6659 ** 2
            t6662 = t6658 ** 2
            t6657 = t6655 * t6656
            t6660 = t6657 ** 2
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.85e2) * (276 * t6656 + 459 * t6657 - 1940 * t6658 - 2218 * t6659 + 4672 * t6660 - 4598 * t6662 + 1596 * t6664 - 6 + (4638 * t6660 - 4313 * t6662 + 1463 * t6664 - 29) * t6655) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 1010:
            t6675 = np.sin(phi)
            t6672 = t6675 ** 2
            t6673 = t6675 * t6672
            t6666 = np.cos(phi)
            t6667 = t6666 ** 2
            t6669 = t6667 ** 2
            t6668 = t6666 * t6667
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t6673 ** 2 * (629 * t6667 - 3895 * t6669 - 17 + (-5852 + 7315 * t6668) * t6668 + (9310 * t6669 + 574) * t6666) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t6666) ** (-0.1e1 / 0.2e1)) * ((1 - t6666) ** (-0.1e1 / 0.2e1))

        if Bindx == 1011:
            t6676 = np.cos(phi)
            t6677 = t6676 ** 2
            t6679 = t6677 ** 2
            t6680 = t6676 * t6679
            t6685 = t6680 ** 2
            t6683 = t6679 ** 2
            t6678 = t6676 * t6677
            t6681 = t6678 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (256 * t6677 + 53 * t6678 - 1280 * t6679 - 538 * t6680 + 2384 * t6681 - 1912 * t6683 + 560 * t6685 - 8 + (1306 * t6681 - 1205 * t6683 + 385 * t6685 - 1) * t6676) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 1012:
            t6694 = np.sin(phi)
            t6691 = t6694 ** 2
            t6692 = t6691 ** 2
            t6687 = np.cos(phi)
            t6688 = t6687 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t6692 ** 2 * (-30 * t6687 - 1 + (126 * t6687 + 20 + 77 * t6688) * t6688) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t6687) ** (-0.1e1 / 0.2e1)) * ((1 - t6687) ** (-0.1e1 / 0.2e1))

        if Bindx == 1013:
            t6695 = np.cos(phi)
            t6696 = t6695 ** 2
            t6698 = t6696 ** 2
            t6699 = t6695 * t6698
            t6704 = t6699 ** 2
            t6702 = t6698 ** 2
            t6697 = t6695 * t6696
            t6700 = t6697 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.11305e5) * (28 * t6696 - 17 * t6697 - 92 * t6698 - 2 * t6699 + 128 * t6700 - 82 * t6702 + 20 * t6704 - 2 + (38 * t6700 - 37 * t6702 + 11 * t6704 + 7) * t6695) * np.cos((2 * phi1 + 10 * phi2))

        if Bindx == 1014:
            t6706 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.124355e6) * ((1 - t6706) ** (0.9e1 / 0.2e1)) * ((1 + t6706) ** (0.13e2 / 0.2e1)) * np.sin((2 * phi1 + 11 * phi2))

        if Bindx == 1015:
            t6707 = np.cos(phi)
            t6708 = t6707 ** 2
            t6710 = t6708 ** 2
            t6711 = t6707 * t6710
            t6716 = t6711 ** 2
            t6714 = t6710 ** 2
            t6709 = t6707 * t6708
            t6712 = t6709 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.17765e5) * np.cos((3 * phi1 - 11 * phi2)) * (t6708 - 11 * t6709 + 6 * t6710 + 14 * t6711 - 14 * t6712 + 11 * t6714 - 3 * t6716 - 1 + (-6 * t6712 - t6714 + t6716 + 3) * t6707)

        if Bindx == 1016:
            t6725 = np.sin(phi)
            t6722 = t6725 ** 2
            t6723 = t6722 ** 2
            t6718 = np.cos(phi)
            t6719 = t6718 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1615e4) * t6723 ** 2 * (-2 * t6718 - 3 + (-30 * t6718 + 24 + 11 * t6719) * t6719) * np.sin((3 * phi1 - 10 * phi2)) * ((1 + t6718) ** (-0.1e1 / 0.2e1)) * ((1 - t6718) ** (-0.1e1 / 0.2e1))

        if Bindx == 1017:
            t6726 = np.cos(phi)
            t6727 = t6726 ** 2
            t6729 = t6727 ** 2
            t6730 = t6726 * t6729
            t6735 = t6730 ** 2
            t6733 = t6729 ** 2
            t6728 = t6726 * t6727
            t6731 = t6728 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.33915e5) * (-21 * t6727 - 91 * t6728 + 138 * t6729 + 150 * t6730 - 298 * t6731 + 261 * t6733 - 81 * t6735 + 1 + (-54 * t6731 - 53 * t6733 + 33 * t6735 + 15) * t6726) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 1018:
            t6746 = np.sin(phi)
            t6743 = t6746 ** 2
            t6744 = t6746 * t6743
            t6737 = np.cos(phi)
            t6738 = t6737 ** 2
            t6740 = t6738 ** 2
            t6739 = t6737 * t6738
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.2261e4) * t6744 ** 2 * (-27 * t6738 + 35 * t6740 + 1 + (64 + 55 * t6739) * t6739 + (-120 * t6740 - 8) * t6737) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t6737) ** (-0.1e1 / 0.2e1)) * ((1 - t6737) ** (-0.1e1 / 0.2e1))

        if Bindx == 1019:
            t6747 = np.cos(phi)
            t6748 = t6747 ** 2
            t6750 = t6748 ** 2
            t6751 = t6747 * t6750
            t6756 = t6751 ** 2
            t6754 = t6750 ** 2
            t6749 = t6747 * t6748
            t6752 = t6749 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.119e3) * (-407 * t6748 - 439 * t6749 + 2510 * t6750 + 654 * t6751 - 5838 * t6752 + 5719 * t6754 - 1995 * t6756 + 11 + (882 * t6752 - 2185 * t6754 + 1045 * t6756 + 43) * t6747) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 1020:
            t6768 = np.sin(phi)
            t6766 = t6768 ** 2
            t6758 = np.cos(phi)
            t6759 = t6758 ** 2
            t6760 = t6758 * t6759
            t6763 = t6760 ** 2
            t6761 = t6759 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.595e3) * t6766 ** 2 * (42 * t6759 - 1298 * t6760 - 1482 * t6763 - 1 + (72 + 1881 * t6761) * t6761 + (3762 * t6761 - 3078 * t6763 + 102) * t6758) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t6758) ** (-0.1e1 / 0.2e1)) * ((1 - t6758) ** (-0.1e1 / 0.2e1))

        if Bindx == 1021:
            t6769 = np.cos(phi)
            t6770 = t6769 ** 2
            t6772 = t6770 ** 2
            t6773 = t6769 * t6772
            t6778 = t6773 ** 2
            t6776 = t6772 ** 2
            t6771 = t6769 * t6770
            t6774 = t6771 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.105e3) * (-1715 * t6770 + 1311 * t6771 + 13070 * t6772 - 8278 * t6773 - 34646 * t6774 + 37791 * t6776 - 14535 * t6778 + 35 + (22542 * t6774 - 26163 * t6776 + 10659 * t6778 - 71) * t6769) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 1022:
            t6781 = np.cos(phi)
            t6782 = t6781 ** 2
            t6784 = t6782 ** 2
            t6788 = t6784 ** 2
            t6783 = t6781 * t6782
            t6786 = t6783 ** 2
            t6785 = t6781 * t6784
            t6780 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.15e2) * t6780 ** 2 * (583 * t6782 + 3560 * t6783 - 5110 * t6784 + 16422 * t6786 - 22287 * t6788 - 11 + (-15232 + 10659 * t6785) * t6785 + (23256 * t6786 - 11628 * t6788 - 212) * t6781) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t6781) ** (-0.1e1 / 0.2e1)) * ((1 - t6781) ** (-0.1e1 / 0.2e1))

        if Bindx == 1023:
            t6791 = np.cos(phi)
            t6792 = t6791 ** 2
            t6794 = t6792 ** 2
            t6795 = t6791 * t6794
            t6800 = t6795 ** 2
            t6798 = t6794 ** 2
            t6793 = t6791 * t6792
            t6796 = t6793 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (-10203 * t6792 + 35201 * t6793 + 89310 * t6794 - 190218 * t6795 - 265846 * t6796 + 316863 * t6798 - 130815 * t6800 + 179 + (428706 * t6796 - 431205 * t6798 + 159885 * t6800 - 1857) * t6791) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 1024:
            t6803 = np.cos(phi)
            t6804 = t6803 ** 2
            t6806 = t6804 ** 2
            t6810 = t6806 ** 2
            t6805 = t6803 * t6804
            t6808 = t6805 ** 2
            t6807 = t6803 * t6806
            t6802 = np.sin(phi)
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.7e1) * t6802 ** 2 * (1121 * t6804 + 2280 * t6805 - 10230 * t6806 + 31994 * t6808 - 40375 * t6810 - 19 + (-10812 + 17765 * t6807) * t6807 + (18088 * t6808 - 9690 * t6810 - 122) * t6803) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t6803) ** (-0.1e1 / 0.2e1)) * ((1 - t6803) ** (-0.1e1 / 0.2e1))

        if Bindx == 1025:
            t6813 = np.cos(phi)
            t6814 = t6813 ** 2
            t6816 = t6814 ** 2
            t6817 = t6813 * t6816
            t6822 = t6817 ** 2
            t6820 = t6816 ** 2
            t6815 = t6813 * t6814
            t6818 = t6815 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (-61 * t6814 + 821 * t6815 + 570 * t6816 - 4554 * t6817 - 1802 * t6818 + 2261 * t6820 - 969 * t6822 + 1 + (10234 * t6818 - 10013 * t6820 + 3553 * t6822 - 41) * t6813) * np.cos((3 * phi1 - phi2))

        if Bindx == 1026:
            t6831 = np.sin(phi)
            t6829 = t6831 ** 2
            t6824 = np.cos(phi)
            t6825 = t6824 ** 2
            t6826 = t6825 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t6829 ** 2 * (-60 * t6825 + 1 + (-1292 * t6825 + 510 + 969 * t6826) * t6826) * np.sin((3 * phi1)) * ((1 + t6824) ** (-0.1e1 / 0.2e1)) * ((1 - t6824) ** (-0.1e1 / 0.2e1))

        if Bindx == 1027:
            t6832 = np.cos(phi)
            t6833 = t6832 ** 2
            t6835 = t6833 ** 2
            t6836 = t6832 * t6835
            t6841 = t6836 ** 2
            t6839 = t6835 ** 2
            t6834 = t6832 * t6833
            t6837 = t6834 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (61 * t6833 + 821 * t6834 - 570 * t6835 - 4554 * t6836 + 1802 * t6837 - 2261 * t6839 + 969 * t6841 - 1 + (10234 * t6837 - 10013 * t6839 + 3553 * t6841 - 41) * t6832) * np.cos((3 * phi1 + phi2))

        if Bindx == 1028:
            t6844 = np.cos(phi)
            t6845 = t6844 ** 2
            t6847 = t6845 ** 2
            t6851 = t6847 ** 2
            t6846 = t6844 * t6845
            t6849 = t6846 ** 2
            t6848 = t6844 * t6847
            t6843 = np.sin(phi)
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.7e1) * t6843 ** 2 * (1121 * t6845 - 2280 * t6846 - 10230 * t6847 + 31994 * t6849 - 40375 * t6851 - 19 + (10812 + 17765 * t6848) * t6848 + (-18088 * t6849 + 9690 * t6851 + 122) * t6844) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t6844) ** (-0.1e1 / 0.2e1)) * ((1 - t6844) ** (-0.1e1 / 0.2e1))

        if Bindx == 1029:
            t6854 = np.cos(phi)
            t6855 = t6854 ** 2
            t6857 = t6855 ** 2
            t6858 = t6854 * t6857
            t6863 = t6858 ** 2
            t6861 = t6857 ** 2
            t6856 = t6854 * t6855
            t6859 = t6856 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (10203 * t6855 + 35201 * t6856 - 89310 * t6857 - 190218 * t6858 + 265846 * t6859 - 316863 * t6861 + 130815 * t6863 - 179 + (428706 * t6859 - 431205 * t6861 + 159885 * t6863 - 1857) * t6854) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 1030:
            t6866 = np.cos(phi)
            t6867 = t6866 ** 2
            t6869 = t6867 ** 2
            t6873 = t6869 ** 2
            t6868 = t6866 * t6867
            t6871 = t6868 ** 2
            t6870 = t6866 * t6869
            t6865 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.15e2) * t6865 ** 2 * (583 * t6867 - 3560 * t6868 - 5110 * t6869 + 16422 * t6871 - 22287 * t6873 - 11 + (15232 + 10659 * t6870) * t6870 + (-23256 * t6871 + 11628 * t6873 + 212) * t6866) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t6866) ** (-0.1e1 / 0.2e1)) * ((1 - t6866) ** (-0.1e1 / 0.2e1))

        if Bindx == 1031:
            t6876 = np.cos(phi)
            t6877 = t6876 ** 2
            t6879 = t6877 ** 2
            t6880 = t6876 * t6879
            t6885 = t6880 ** 2
            t6883 = t6879 ** 2
            t6878 = t6876 * t6877
            t6881 = t6878 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.105e3) * (1715 * t6877 + 1311 * t6878 - 13070 * t6879 - 8278 * t6880 + 34646 * t6881 - 37791 * t6883 + 14535 * t6885 - 35 + (22542 * t6881 - 26163 * t6883 + 10659 * t6885 - 71) * t6876) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 1032:
            t6897 = np.sin(phi)
            t6895 = t6897 ** 2
            t6887 = np.cos(phi)
            t6888 = t6887 ** 2
            t6889 = t6887 * t6888
            t6892 = t6889 ** 2
            t6890 = t6888 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.595e3) * t6895 ** 2 * (42 * t6888 + 1298 * t6889 - 1482 * t6892 - 1 + (72 + 1881 * t6890) * t6890 + (-3762 * t6890 + 3078 * t6892 - 102) * t6887) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t6887) ** (-0.1e1 / 0.2e1)) * ((1 - t6887) ** (-0.1e1 / 0.2e1))

        if Bindx == 1033:
            t6898 = np.cos(phi)
            t6899 = t6898 ** 2
            t6901 = t6899 ** 2
            t6902 = t6898 * t6901
            t6907 = t6902 ** 2
            t6905 = t6901 ** 2
            t6900 = t6898 * t6899
            t6903 = t6900 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.119e3) * (407 * t6899 - 439 * t6900 - 2510 * t6901 + 654 * t6902 + 5838 * t6903 - 5719 * t6905 + 1995 * t6907 - 11 + (882 * t6903 - 2185 * t6905 + 1045 * t6907 + 43) * t6898) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 1034:
            t6918 = np.sin(phi)
            t6915 = t6918 ** 2
            t6916 = t6918 * t6915
            t6909 = np.cos(phi)
            t6910 = t6909 ** 2
            t6912 = t6910 ** 2
            t6911 = t6909 * t6910
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.2261e4) * t6916 ** 2 * (-27 * t6910 + 35 * t6912 + 1 + (-64 + 55 * t6911) * t6911 + (120 * t6912 + 8) * t6909) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t6909) ** (-0.1e1 / 0.2e1)) * ((1 - t6909) ** (-0.1e1 / 0.2e1))

        if Bindx == 1035:
            t6919 = np.cos(phi)
            t6920 = t6919 ** 2
            t6922 = t6920 ** 2
            t6923 = t6919 * t6922
            t6928 = t6923 ** 2
            t6926 = t6922 ** 2
            t6921 = t6919 * t6920
            t6924 = t6921 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.33915e5) * (21 * t6920 - 91 * t6921 - 138 * t6922 + 150 * t6923 + 298 * t6924 - 261 * t6926 + 81 * t6928 - 1 + (-54 * t6924 - 53 * t6926 + 33 * t6928 + 15) * t6919) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 1036:
            t6937 = np.sin(phi)
            t6934 = t6937 ** 2
            t6935 = t6934 ** 2
            t6930 = np.cos(phi)
            t6931 = t6930 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1615e4) * t6935 ** 2 * (2 * t6930 - 3 + (30 * t6930 + 24 + 11 * t6931) * t6931) * np.sin((3 * phi1 + 10 * phi2)) * ((1 + t6930) ** (-0.1e1 / 0.2e1)) * ((1 - t6930) ** (-0.1e1 / 0.2e1))

        if Bindx == 1037:
            t6938 = np.cos(phi)
            t6939 = t6938 ** 2
            t6941 = t6939 ** 2
            t6942 = t6938 * t6941
            t6947 = t6942 ** 2
            t6945 = t6941 ** 2
            t6940 = t6938 * t6939
            t6943 = t6940 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.17765e5) * np.cos((3 * phi1 + 11 * phi2)) * (-t6939 - 11 * t6940 - 6 * t6941 + 14 * t6942 + 14 * t6943 - 11 * t6945 + 3 * t6947 + 1 + (-6 * t6943 - t6945 + t6947 + 3) * t6938)

        if Bindx == 1038:
            t6949 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * ((1 - t6949) ** (0.15e2 / 0.2e1)) * ((1 + t6949) ** (0.7e1 / 0.2e1)) * np.sin((4 * phi1 - 11 * phi2))

        if Bindx == 1039:
            t6950 = np.cos(phi)
            t6951 = t6950 ** 2
            t6953 = t6951 ** 2
            t6954 = t6950 * t6953
            t6959 = t6954 ** 2
            t6957 = t6953 ** 2
            t6952 = t6950 * t6951
            t6955 = t6952 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.969e3) * (32 * t6951 - 65 * t6952 - 32 * t6953 + 154 * t6954 - 56 * t6955 + 100 * t6957 - 40 * t6959 - 4 + (-122 * t6955 + 17 * t6957 + 11 * t6959 + 5) * t6950) * np.cos((4 * phi1 - 10 * phi2))

        if Bindx == 1040:
            t6969 = np.sin(phi)
            t6966 = t6969 ** 2
            t6967 = t6969 * t6966
            t6961 = np.cos(phi)
            t6962 = t6961 ** 2
            t6963 = t6962 ** 2
            t6964 = t6961 * t6963
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t6967 ** 2 * (-15 * t6962 + 35 * t6963 - 36 * t6964 + 1 + (11 * t6964 + 4) * t6961) * np.sin((4 * phi1 - 9 * phi2)) * ((1 + t6961) ** (-0.1e1 / 0.2e1)) * ((1 - t6961) ** (-0.1e1 / 0.2e1))

        if Bindx == 1041:
            t6970 = np.cos(phi)
            t6971 = t6970 ** 2
            t6973 = t6971 ** 2
            t6977 = t6973 ** 2
            t6972 = t6970 * t6971
            t6975 = t6972 ** 2
            t6974 = t6970 * t6973
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t6970 * (-25 * t6971 + 16 * t6972 + 62 * t6973 - 50 * t6975 - t6977 + 3 + (-64 + 11 * t6974) * t6974 + (80 * t6975 - 32 * t6977) * t6970) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 1042:
            t6990 = np.sin(phi)
            t6988 = t6990 ** 2
            t6980 = np.cos(phi)
            t6981 = t6980 ** 2
            t6982 = t6980 * t6981
            t6985 = t6982 ** 2
            t6983 = t6981 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1785e4) * t6988 ** 2 * (96 * t6981 - 140 * t6982 + 152 * t6985 - 3 + (-326 + 209 * t6983) * t6983 + (532 * t6983 - 532 * t6985 + 12) * t6980) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t6980) ** (-0.1e1 / 0.2e1)) * ((1 - t6980) ** (-0.1e1 / 0.2e1))

        if Bindx == 1043:
            t6991 = np.cos(phi)
            t6992 = t6991 ** 2
            t6994 = t6992 ** 2
            t6995 = t6991 * t6994
            t7000 = t6995 ** 2
            t6998 = t6994 ** 2
            t6993 = t6991 * t6992
            t6996 = t6993 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.357e3) * (-160 * t6992 - 345 * t6993 + 1120 * t6994 + 874 * t6995 - 3016 * t6996 + 3420 * t6998 - 1368 * t7000 + 4 + (-330 * t6996 - 855 * t6998 + 627 * t7000 + 29) * t6991) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 1044:
            t7003 = np.cos(phi)
            t7004 = t7003 ** 2
            t7006 = t7004 ** 2
            t7010 = t7006 ** 2
            t7005 = t7003 * t7004
            t7008 = t7005 ** 2
            t7007 = t7003 * t7006
            t7002 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t7002 ** 2 * (-585 * t7004 + 6680 * t7005 + 2410 * t7006 + 2550 * t7008 - 14535 * t7010 + 13 + (-26112 + 10659 * t7007) * t7007 + (38760 * t7008 - 19380 * t7010 - 460) * t7003) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t7003) ** (-0.1e1 / 0.2e1)) * ((1 - t7003) ** (-0.1e1 / 0.2e1))

        if Bindx == 1045:
            t7013 = np.cos(phi)
            t7014 = t7013 ** 2
            t7016 = t7014 ** 2
            t7017 = t7013 * t7016
            t7022 = t7017 ** 2
            t7020 = t7016 ** 2
            t7015 = t7013 * t7014
            t7018 = t7015 ** 2
            tfunc[..., c] = 0.23e2 / 0.128e3 * np.sqrt(0.2e1) * (-1600 * t7014 + 775 * t7015 + 12520 * t7016 - 5978 * t7017 - 34272 * t7018 + 38760 * t7020 - 15504 * t7022 + 32 + (18870 * t7018 - 24225 * t7020 + 10659 * t7022 - 37) * t7013) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 1046:
            t7025 = np.cos(phi)
            t7026 = t7025 ** 2
            t7028 = t7026 ** 2
            t7032 = t7028 ** 2
            t7027 = t7025 * t7026
            t7030 = t7027 ** 2
            t7029 = t7025 * t7028
            t7024 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.15e2) * t7024 ** 2 * (583 * t7026 + 3560 * t7027 - 5110 * t7028 + 16422 * t7030 - 22287 * t7032 - 11 + (-15232 + 10659 * t7029) * t7029 + (23256 * t7030 - 11628 * t7032 - 212) * t7025) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t7025) ** (-0.1e1 / 0.2e1)) * ((1 - t7025) ** (-0.1e1 / 0.2e1))

        if Bindx == 1047:
            t7035 = np.cos(phi)
            t7036 = t7035 ** 2
            t7038 = t7036 ** 2
            t7039 = t7035 * t7038
            t7044 = t7039 ** 2
            t7042 = t7038 ** 2
            t7037 = t7035 * t7036
            t7040 = t7037 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-224 * t7036 + 909 * t7037 + 1920 * t7038 - 4770 * t7039 - 5576 * t7040 + 6460 * t7042 - 2584 * t7044 + 4 + (10370 * t7040 - 10013 * t7042 + 3553 * t7044 - 49) * t7035) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 1048:
            t7056 = np.sin(phi)
            t7054 = t7056 ** 2
            t7046 = np.cos(phi)
            t7047 = t7046 ** 2
            t7048 = t7046 * t7047
            t7051 = t7048 ** 2
            t7049 = t7047 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.273e3) * t7054 ** 2 * (-280 * t7047 - 340 * t7048 - 5168 * t7051 + 5 + (2210 + 3553 * t7049) * t7049 + (1292 * t7049 - 1292 * t7051 + 20) * t7046) * np.sin((4 * phi1 - phi2)) * ((1 - t7046) ** (-0.1e1 / 0.2e1)) * ((1 + t7046) ** (-0.1e1 / 0.2e1))

        if Bindx == 1049:
            t7057 = np.cos(phi)
            t7058 = t7057 ** 2
            t7059 = t7058 ** 2
            t7061 = t7059 ** 2
            tfunc[..., c] = 0.69e2 / 0.128e3 * t7057 * np.sqrt(0.1001e4) * (-498 * t7059 - 969 * t7061 - 5 + (1054 * t7059 + 323 * t7061 + 95) * t7058) * np.cos((4 * phi1))

        if Bindx == 1050:
            t7073 = np.sin(phi)
            t7071 = t7073 ** 2
            t7063 = np.cos(phi)
            t7064 = t7063 ** 2
            t7065 = t7063 * t7064
            t7068 = t7065 ** 2
            t7066 = t7064 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.273e3) * t7071 ** 2 * (-280 * t7064 + 340 * t7065 - 5168 * t7068 + 5 + (2210 + 3553 * t7066) * t7066 + (-1292 * t7066 + 1292 * t7068 - 20) * t7063) * np.sin((4 * phi1 + phi2)) * ((1 - t7063) ** (-0.1e1 / 0.2e1)) * ((1 + t7063) ** (-0.1e1 / 0.2e1))

        if Bindx == 1051:
            t7074 = np.cos(phi)
            t7075 = t7074 ** 2
            t7077 = t7075 ** 2
            t7078 = t7074 * t7077
            t7083 = t7078 ** 2
            t7081 = t7077 ** 2
            t7076 = t7074 * t7075
            t7079 = t7076 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (224 * t7075 + 909 * t7076 - 1920 * t7077 - 4770 * t7078 + 5576 * t7079 - 6460 * t7081 + 2584 * t7083 - 4 + (10370 * t7079 - 10013 * t7081 + 3553 * t7083 - 49) * t7074) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 1052:
            t7086 = np.cos(phi)
            t7087 = t7086 ** 2
            t7089 = t7087 ** 2
            t7093 = t7089 ** 2
            t7088 = t7086 * t7087
            t7091 = t7088 ** 2
            t7090 = t7086 * t7089
            t7085 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.15e2) * t7085 ** 2 * (583 * t7087 - 3560 * t7088 - 5110 * t7089 + 16422 * t7091 - 22287 * t7093 - 11 + (15232 + 10659 * t7090) * t7090 + (-23256 * t7091 + 11628 * t7093 + 212) * t7086) * np.sin((4 * phi1 + 3 * phi2)) * ((1 - t7086) ** (-0.1e1 / 0.2e1)) * ((1 + t7086) ** (-0.1e1 / 0.2e1))

        if Bindx == 1053:
            t7096 = np.cos(phi)
            t7097 = t7096 ** 2
            t7099 = t7097 ** 2
            t7100 = t7096 * t7099
            t7105 = t7100 ** 2
            t7103 = t7099 ** 2
            t7098 = t7096 * t7097
            t7101 = t7098 ** 2
            tfunc[..., c] = 0.23e2 / 0.128e3 * np.sqrt(0.2e1) * (1600 * t7097 + 775 * t7098 - 12520 * t7099 - 5978 * t7100 + 34272 * t7101 - 38760 * t7103 + 15504 * t7105 - 32 + (18870 * t7101 - 24225 * t7103 + 10659 * t7105 - 37) * t7096) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 1054:
            t7108 = np.cos(phi)
            t7109 = t7108 ** 2
            t7111 = t7109 ** 2
            t7115 = t7111 ** 2
            t7110 = t7108 * t7109
            t7113 = t7110 ** 2
            t7112 = t7108 * t7111
            t7107 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t7107 ** 2 * (-585 * t7109 - 6680 * t7110 + 2410 * t7111 + 2550 * t7113 - 14535 * t7115 + 13 + (26112 + 10659 * t7112) * t7112 + (-38760 * t7113 + 19380 * t7115 + 460) * t7108) * np.sin((4 * phi1 + 5 * phi2)) * ((1 - t7108) ** (-0.1e1 / 0.2e1)) * ((1 + t7108) ** (-0.1e1 / 0.2e1))

        if Bindx == 1055:
            t7118 = np.cos(phi)
            t7119 = t7118 ** 2
            t7121 = t7119 ** 2
            t7122 = t7118 * t7121
            t7127 = t7122 ** 2
            t7125 = t7121 ** 2
            t7120 = t7118 * t7119
            t7123 = t7120 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.357e3) * (160 * t7119 - 345 * t7120 - 1120 * t7121 + 874 * t7122 + 3016 * t7123 - 3420 * t7125 + 1368 * t7127 - 4 + (-330 * t7123 - 855 * t7125 + 627 * t7127 + 29) * t7118) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 1056:
            t7139 = np.sin(phi)
            t7137 = t7139 ** 2
            t7129 = np.cos(phi)
            t7130 = t7129 ** 2
            t7131 = t7129 * t7130
            t7134 = t7131 ** 2
            t7132 = t7130 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1785e4) * t7137 ** 2 * (96 * t7130 + 140 * t7131 + 152 * t7134 - 3 + (-326 + 209 * t7132) * t7132 + (-532 * t7132 + 532 * t7134 - 12) * t7129) * np.sin((4 * phi1 + 7 * phi2)) * ((1 - t7129) ** (-0.1e1 / 0.2e1)) * ((1 + t7129) ** (-0.1e1 / 0.2e1))

        if Bindx == 1057:
            t7140 = np.cos(phi)
            t7141 = t7140 ** 2
            t7143 = t7141 ** 2
            t7147 = t7143 ** 2
            t7142 = t7140 * t7141
            t7145 = t7142 ** 2
            t7144 = t7140 * t7143
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t7140 * (-25 * t7141 - 16 * t7142 + 62 * t7143 - 50 * t7145 - t7147 + 3 + (64 + 11 * t7144) * t7144 + (-80 * t7145 + 32 * t7147) * t7140) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 1058:
            t7158 = np.sin(phi)
            t7155 = t7158 ** 2
            t7156 = t7158 * t7155
            t7150 = np.cos(phi)
            t7151 = t7150 ** 2
            t7152 = t7151 ** 2
            t7153 = t7150 * t7152
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t7156 ** 2 * (-15 * t7151 + 35 * t7152 + 36 * t7153 + 1 + (11 * t7153 - 4) * t7150) * np.sin((4 * phi1 + 9 * phi2)) * ((1 - t7150) ** (-0.1e1 / 0.2e1)) * ((1 + t7150) ** (-0.1e1 / 0.2e1))

        if Bindx == 1059:
            t7159 = np.cos(phi)
            t7160 = t7159 ** 2
            t7162 = t7160 ** 2
            t7163 = t7159 * t7162
            t7168 = t7163 ** 2
            t7166 = t7162 ** 2
            t7161 = t7159 * t7160
            t7164 = t7161 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.969e3) * (-32 * t7160 - 65 * t7161 + 32 * t7162 + 154 * t7163 + 56 * t7164 - 100 * t7166 + 40 * t7168 + 4 + (-122 * t7164 + 17 * t7166 + 11 * t7168 + 5) * t7159) * np.cos((4 * phi1 + 10 * phi2))

        if Bindx == 1060:
            t7170 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * ((1 - t7170) ** (0.7e1 / 0.2e1)) * ((1 + t7170) ** (0.15e2 / 0.2e1)) * np.sin((4 * phi1 + 11 * phi2))

        if Bindx == 1061:
            t7171 = np.cos(phi)
            t7172 = t7171 ** 2
            t7174 = t7172 ** 2
            t7175 = t7171 * t7174
            t7180 = t7175 ** 2
            t7178 = t7174 ** 2
            t7173 = t7171 * t7172
            t7176 = t7173 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.74613e5) * np.cos((5 * phi1 - 11 * phi2)) * (7 * t7172 + 5 * t7173 - 22 * t7174 + 14 * t7175 + 14 * t7176 + 5 * t7178 - 5 * t7180 + 1 + (-22 * t7176 + 7 * t7178 + t7180 - 5) * t7171)

        if Bindx == 1062:
            t7191 = np.sin(phi)
            t7188 = t7191 ** 2
            t7189 = t7191 * t7188
            t7182 = np.cos(phi)
            t7183 = t7182 ** 2
            t7185 = t7183 ** 2
            t7184 = t7182 * t7183
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.6783e4) * t7189 ** 2 * (5 * t7183 + 85 * t7185 - 5 + (-60 + 11 * t7184) * t7184 + (-50 * t7185 + 14) * t7182) * np.sin((5 * phi1 - 10 * phi2)) * ((1 - t7182) ** (-0.1e1 / 0.2e1)) * ((1 + t7182) ** (-0.1e1 / 0.2e1))

        if Bindx == 1063:
            t7192 = np.cos(phi)
            t7193 = t7192 ** 2
            t7195 = t7193 ** 2
            t7196 = t7192 * t7195
            t7201 = t7196 ** 2
            t7199 = t7195 ** 2
            t7194 = t7192 * t7193
            t7197 = t7194 ** 2
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (169 * t7193 - 175 * t7194 - 434 * t7195 + 798 * t7196 + 98 * t7197 + 495 * t7199 - 315 * t7201 - 13 + (-974 * t7197 + 279 * t7199 + 77 * t7201 - 5) * t7192) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 1064:
            t7213 = np.sin(phi)
            t7211 = t7213 ** 2
            t7203 = np.cos(phi)
            t7204 = t7203 ** 2
            t7205 = t7203 * t7204
            t7208 = t7205 ** 2
            t7206 = t7204 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t7211 ** 2 * (60 * t7204 + 88 * t7205 + 284 * t7208 - 3 + (-290 + 77 * t7206) * t7206 + (88 * t7206 - 280 * t7208 - 24) * t7203) * np.sin((5 * phi1 - 8 * phi2)) * ((1 - t7203) ** (-0.1e1 / 0.2e1)) * ((1 + t7203) ** (-0.1e1 / 0.2e1))

        if Bindx == 1065:
            t7214 = np.cos(phi)
            t7215 = t7214 ** 2
            t7217 = t7215 ** 2
            t7218 = t7214 * t7217
            t7223 = t7218 ** 2
            t7221 = t7217 ** 2
            t7216 = t7214 * t7215
            t7219 = t7216 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.255e3) * (261 * t7215 - 2653 * t7216 + 406 * t7217 + 7994 * t7218 - 5446 * t7219 + 9443 * t7221 - 4655 * t7223 - 9 + (-8426 * t7219 + 1349 * t7221 + 1463 * t7223 + 273) * t7214) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 1066:
            t7226 = np.cos(phi)
            t7227 = t7226 ** 2
            t7229 = t7227 ** 2
            t7233 = t7229 ** 2
            t7228 = t7226 * t7227
            t7231 = t7228 ** 2
            t7230 = t7226 * t7229
            t7225 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.51e2) * t7225 ** 2 * (-1855 * t7227 + 1960 * t7228 + 8890 * t7229 - 12390 * t7231 + 1425 * t7233 + 53 + (-10892 + 4389 * t7230) * t7230 + (20520 * t7231 - 11970 * t7233 - 130) * t7226) * np.sin((5 * phi1 - 6 * phi2)) * ((1 - t7226) ** (-0.1e1 / 0.2e1)) * ((1 + t7226) ** (-0.1e1 / 0.2e1))

        if Bindx == 1067:
            t7236 = np.cos(phi)
            t7237 = t7236 ** 2
            t7239 = t7237 ** 2
            t7240 = t7236 * t7239
            t7245 = t7240 ** 2
            t7243 = t7239 ** 2
            t7238 = t7236 * t7237
            t7241 = t7238 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * (-16195 * t7237 - 42455 * t7238 + 118510 * t7239 + 117670 * t7240 - 336294 * t7241 + 402135 * t7243 - 169575 * t7245 + 395 + (-69870 * t7241 - 82365 * t7243 + 74613 * t7245 + 3431) * t7236) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 1068:
            t7248 = np.cos(phi)
            t7249 = t7248 ** 2
            t7251 = t7249 ** 2
            t7255 = t7251 ** 2
            t7250 = t7248 * t7249
            t7253 = t7250 ** 2
            t7252 = t7248 * t7251
            t7247 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t7247 ** 2 * (-585 * t7249 + 6680 * t7250 + 2410 * t7251 + 2550 * t7253 - 14535 * t7255 + 13 + (-26112 + 10659 * t7252) * t7252 + (38760 * t7253 - 19380 * t7255 - 460) * t7248) * np.sin((5 * phi1 - 4 * phi2)) * ((1 - t7248) ** (-0.1e1 / 0.2e1)) * ((1 + t7248) ** (-0.1e1 / 0.2e1))

        if Bindx == 1069:
            t7258 = np.cos(phi)
            t7259 = t7258 ** 2
            t7261 = t7259 ** 2
            t7262 = t7258 * t7261
            t7267 = t7262 ** 2
            t7265 = t7261 ** 2
            t7260 = t7258 * t7259
            t7263 = t7260 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.105e3) * (-1715 * t7259 + 1311 * t7260 + 13070 * t7261 - 8278 * t7262 - 34646 * t7263 + 37791 * t7265 - 14535 * t7267 + 35 + (22542 * t7263 - 26163 * t7265 + 10659 * t7267 - 71) * t7258) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 1070:
            t7279 = np.sin(phi)
            t7277 = t7279 ** 2
            t7269 = np.cos(phi)
            t7270 = t7269 ** 2
            t7271 = t7269 * t7270
            t7274 = t7271 ** 2
            t7272 = t7270 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t7277 ** 2 * (-2050 * t7270 - 7990 * t7271 - 34238 * t7274 + 41 + (14960 + 24871 * t7272) * t7272 + (26486 * t7272 - 22610 * t7274 + 530) * t7269) * np.sin((5 * phi1 - 2 * phi2)) * ((1 - t7269) ** (-0.1e1 / 0.2e1)) * ((1 + t7269) ** (-0.1e1 / 0.2e1))

        if Bindx == 1071:
            t7280 = np.cos(phi)
            t7281 = t7280 ** 2
            t7283 = t7281 ** 2
            t7284 = t7280 * t7283
            t7289 = t7284 ** 2
            t7287 = t7283 ** 2
            t7282 = t7280 * t7281
            t7285 = t7282 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.39e2) * (-1325 * t7281 + 9315 * t7282 + 10650 * t7283 - 45126 * t7284 - 28730 * t7285 + 30685 * t7287 - 11305 * t7289 + 25 + (89318 * t7285 - 77843 * t7287 + 24871 * t7289 - 535) * t7280) * np.cos((5 * phi1 - phi2))

        if Bindx == 1072:
            t7298 = np.sin(phi)
            t7295 = t7298 ** 2
            t7296 = t7298 * t7295
            t7291 = np.cos(phi)
            t7292 = t7291 ** 2
            t7293 = t7292 ** 2
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.143e3) * t7296 ** 2 * (-1615 * t7293 - 5 + (2261 * t7293 + 255) * t7292) * np.sin((5 * phi1)) * ((1 - t7291) ** (-0.1e1 / 0.2e1)) * ((1 + t7291) ** (-0.1e1 / 0.2e1))

        if Bindx == 1073:
            t7299 = np.cos(phi)
            t7300 = t7299 ** 2
            t7302 = t7300 ** 2
            t7303 = t7299 * t7302
            t7308 = t7303 ** 2
            t7306 = t7302 ** 2
            t7301 = t7299 * t7300
            t7304 = t7301 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.39e2) * (1325 * t7300 + 9315 * t7301 - 10650 * t7302 - 45126 * t7303 + 28730 * t7304 - 30685 * t7306 + 11305 * t7308 - 25 + (89318 * t7304 - 77843 * t7306 + 24871 * t7308 - 535) * t7299) * np.cos((5 * phi1 + phi2))

        if Bindx == 1074:
            t7320 = np.sin(phi)
            t7318 = t7320 ** 2
            t7310 = np.cos(phi)
            t7311 = t7310 ** 2
            t7312 = t7310 * t7311
            t7315 = t7312 ** 2
            t7313 = t7311 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t7318 ** 2 * (-2050 * t7311 + 7990 * t7312 - 34238 * t7315 + 41 + (14960 + 24871 * t7313) * t7313 + (-26486 * t7313 + 22610 * t7315 - 530) * t7310) * np.sin((5 * phi1 + 2 * phi2)) * ((1 - t7310) ** (-0.1e1 / 0.2e1)) * ((1 + t7310) ** (-0.1e1 / 0.2e1))

        if Bindx == 1075:
            t7321 = np.cos(phi)
            t7322 = t7321 ** 2
            t7324 = t7322 ** 2
            t7325 = t7321 * t7324
            t7330 = t7325 ** 2
            t7328 = t7324 ** 2
            t7323 = t7321 * t7322
            t7326 = t7323 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.105e3) * (1715 * t7322 + 1311 * t7323 - 13070 * t7324 - 8278 * t7325 + 34646 * t7326 - 37791 * t7328 + 14535 * t7330 - 35 + (22542 * t7326 - 26163 * t7328 + 10659 * t7330 - 71) * t7321) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 1076:
            t7333 = np.cos(phi)
            t7334 = t7333 ** 2
            t7336 = t7334 ** 2
            t7340 = t7336 ** 2
            t7335 = t7333 * t7334
            t7338 = t7335 ** 2
            t7337 = t7333 * t7336
            t7332 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t7332 ** 2 * (-585 * t7334 - 6680 * t7335 + 2410 * t7336 + 2550 * t7338 - 14535 * t7340 + 13 + (26112 + 10659 * t7337) * t7337 + (-38760 * t7338 + 19380 * t7340 + 460) * t7333) * np.sin((5 * phi1 + 4 * phi2)) * ((1 - t7333) ** (-0.1e1 / 0.2e1)) * ((1 + t7333) ** (-0.1e1 / 0.2e1))

        if Bindx == 1077:
            t7343 = np.cos(phi)
            t7344 = t7343 ** 2
            t7346 = t7344 ** 2
            t7347 = t7343 * t7346
            t7352 = t7347 ** 2
            t7350 = t7346 ** 2
            t7345 = t7343 * t7344
            t7348 = t7345 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * (16195 * t7344 - 42455 * t7345 - 118510 * t7346 + 117670 * t7347 + 336294 * t7348 - 402135 * t7350 + 169575 * t7352 - 395 + (-69870 * t7348 - 82365 * t7350 + 74613 * t7352 + 3431) * t7343) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 1078:
            t7355 = np.cos(phi)
            t7356 = t7355 ** 2
            t7358 = t7356 ** 2
            t7362 = t7358 ** 2
            t7357 = t7355 * t7356
            t7360 = t7357 ** 2
            t7359 = t7355 * t7358
            t7354 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.51e2) * t7354 ** 2 * (-1855 * t7356 - 1960 * t7357 + 8890 * t7358 - 12390 * t7360 + 1425 * t7362 + 53 + (10892 + 4389 * t7359) * t7359 + (-20520 * t7360 + 11970 * t7362 + 130) * t7355) * np.sin((5 * phi1 + 6 * phi2)) * ((1 - t7355) ** (-0.1e1 / 0.2e1)) * ((1 + t7355) ** (-0.1e1 / 0.2e1))

        if Bindx == 1079:
            t7365 = np.cos(phi)
            t7366 = t7365 ** 2
            t7368 = t7366 ** 2
            t7369 = t7365 * t7368
            t7374 = t7369 ** 2
            t7372 = t7368 ** 2
            t7367 = t7365 * t7366
            t7370 = t7367 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.255e3) * (-261 * t7366 - 2653 * t7367 - 406 * t7368 + 7994 * t7369 + 5446 * t7370 - 9443 * t7372 + 4655 * t7374 + 9 + (-8426 * t7370 + 1349 * t7372 + 1463 * t7374 + 273) * t7365) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 1080:
            t7386 = np.sin(phi)
            t7384 = t7386 ** 2
            t7376 = np.cos(phi)
            t7377 = t7376 ** 2
            t7378 = t7376 * t7377
            t7381 = t7378 ** 2
            t7379 = t7377 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t7384 ** 2 * (60 * t7377 - 88 * t7378 + 284 * t7381 - 3 + (-290 + 77 * t7379) * t7379 + (-88 * t7379 + 280 * t7381 + 24) * t7376) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t7376) ** (-0.1e1 / 0.2e1)) * ((1 - t7376) ** (-0.1e1 / 0.2e1))

        if Bindx == 1081:
            t7387 = np.cos(phi)
            t7388 = t7387 ** 2
            t7390 = t7388 ** 2
            t7391 = t7387 * t7390
            t7396 = t7391 ** 2
            t7394 = t7390 ** 2
            t7389 = t7387 * t7388
            t7392 = t7389 ** 2
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (-169 * t7388 - 175 * t7389 + 434 * t7390 + 798 * t7391 - 98 * t7392 - 495 * t7394 + 315 * t7396 + 13 + (-974 * t7392 + 279 * t7394 + 77 * t7396 - 5) * t7387) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 1082:
            t7407 = np.sin(phi)
            t7404 = t7407 ** 2
            t7405 = t7407 * t7404
            t7398 = np.cos(phi)
            t7399 = t7398 ** 2
            t7401 = t7399 ** 2
            t7400 = t7398 * t7399
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.6783e4) * t7405 ** 2 * (5 * t7399 + 85 * t7401 - 5 + (60 + 11 * t7400) * t7400 + (50 * t7401 - 14) * t7398) * np.sin((5 * phi1 + 10 * phi2)) * ((1 + t7398) ** (-0.1e1 / 0.2e1)) * ((1 - t7398) ** (-0.1e1 / 0.2e1))

        if Bindx == 1083:
            t7408 = np.cos(phi)
            t7409 = t7408 ** 2
            t7411 = t7409 ** 2
            t7412 = t7408 * t7411
            t7417 = t7412 ** 2
            t7415 = t7411 ** 2
            t7410 = t7408 * t7409
            t7413 = t7410 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.74613e5) * np.cos((5 * phi1 + 11 * phi2)) * (-7 * t7409 + 5 * t7410 + 22 * t7411 + 14 * t7412 - 14 * t7413 - 5 * t7415 + 5 * t7417 - 1 + (-22 * t7413 + 7 * t7415 + t7417 - 5) * t7408)

        if Bindx == 1084:
            t7419 = np.cos(phi)
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.1463e4) * ((1 - t7419) ** (0.17e2 / 0.2e1)) * ((1 + t7419) ** (0.5e1 / 0.2e1)) * np.sin((6 * phi1 - 11 * phi2))

        if Bindx == 1085:
            t7420 = np.cos(phi)
            t7421 = t7420 ** 2
            t7423 = t7421 ** 2
            t7424 = t7420 * t7423
            t7429 = t7424 ** 2
            t7427 = t7423 ** 2
            t7422 = t7420 * t7421
            t7425 = t7422 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (12 * t7421 + 95 * t7422 - 172 * t7423 + 14 * t7424 + 224 * t7425 - 10 * t7427 - 60 * t7429 + 6 + (-202 * t7425 + 107 * t7427 + 11 * t7429 - 25) * t7420) * np.cos((6 * phi1 - 10 * phi2))

        if Bindx == 1086:
            t7441 = np.sin(phi)
            t7439 = t7441 ** 2
            t7431 = np.cos(phi)
            t7432 = t7431 ** 2
            t7433 = t7431 * t7432
            t7436 = t7433 ** 2
            t7434 = t7432 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.57e2) * t7439 ** 2 * (-366 * t7432 + 1174 * t7433 + 2014 * t7436 + 61 + (-660 + 231 * t7434) * t7434 + (-1206 * t7434 - 1134 * t7436 - 114) * t7431) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t7431) ** (-0.1e1 / 0.2e1)) * ((1 - t7431) ** (-0.1e1 / 0.2e1))

        if Bindx == 1087:
            t7442 = np.cos(phi)
            t7443 = t7442 ** 2
            t7445 = t7443 ** 2
            t7446 = t7442 * t7445
            t7451 = t7446 ** 2
            t7449 = t7445 ** 2
            t7444 = t7442 * t7443
            t7447 = t7444 ** 2
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.95e2) * (128 * t7443 - 63 * t7444 - 448 * t7445 + 574 * t7446 + 336 * t7447 + 328 * t7449 - 336 * t7451 - 8 + (-958 * t7447 + 383 * t7449 + 77 * t7451 - 13) * t7442) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 1088:
            t7454 = np.cos(phi)
            t7455 = t7454 ** 2
            t7457 = t7455 ** 2
            t7461 = t7457 ** 2
            t7456 = t7454 * t7455
            t7459 = t7456 ** 2
            t7458 = t7454 * t7457
            t7453 = np.sin(phi)
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.5e1) * t7453 ** 2 * (-805 * t7455 - 2296 * t7456 + 5446 * t7457 - 10738 * t7459 + 5111 * t7461 + 35 + (1652 + 1463 * t7458) * t7458 + (5320 * t7459 - 5586 * t7461 + 398) * t7454) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t7454) ** (-0.1e1 / 0.2e1)) * ((1 - t7454) ** (-0.1e1 / 0.2e1))

        if Bindx == 1089:
            t7464 = np.cos(phi)
            t7465 = t7464 ** 2
            t7467 = t7465 ** 2
            t7468 = t7464 * t7467
            t7473 = t7468 ** 2
            t7471 = t7467 ** 2
            t7466 = t7464 * t7465
            t7469 = t7466 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (2820 * t7465 - 21805 * t7466 - 420 * t7467 + 69846 * t7468 - 40096 * t7469 + 80370 * t7471 - 43092 * t7473 - 94 + (-79650 * t7469 + 16815 * t7471 + 13167 * t7473 + 2139) * t7464) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 1090:
            t7476 = np.cos(phi)
            t7477 = t7476 ** 2
            t7479 = t7477 ** 2
            t7483 = t7479 ** 2
            t7478 = t7476 * t7477
            t7481 = t7478 ** 2
            t7480 = t7476 * t7479
            t7475 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.51e2) * t7475 ** 2 * (-1855 * t7477 + 1960 * t7478 + 8890 * t7479 - 12390 * t7481 + 1425 * t7483 + 53 + (-10892 + 4389 * t7480) * t7480 + (20520 * t7481 - 11970 * t7483 - 130) * t7476) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t7476) ** (-0.1e1 / 0.2e1)) * ((1 - t7476) ** (-0.1e1 / 0.2e1))

        if Bindx == 1091:
            t7486 = np.cos(phi)
            t7487 = t7486 ** 2
            t7489 = t7487 ** 2
            t7490 = t7486 * t7489
            t7495 = t7490 ** 2
            t7493 = t7489 ** 2
            t7488 = t7486 * t7487
            t7491 = t7488 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.357e3) * (-160 * t7487 - 345 * t7488 + 1120 * t7489 + 874 * t7490 - 3016 * t7491 + 3420 * t7493 - 1368 * t7495 + 4 + (-330 * t7491 - 855 * t7493 + 627 * t7495 + 29) * t7486) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 1092:
            t7507 = np.sin(phi)
            t7505 = t7507 ** 2
            t7497 = np.cos(phi)
            t7498 = t7497 ** 2
            t7499 = t7497 * t7498
            t7502 = t7499 ** 2
            t7500 = t7498 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.595e3) * t7505 ** 2 * (42 * t7498 - 1298 * t7499 - 1482 * t7502 - 1 + (72 + 1881 * t7500) * t7500 + (3762 * t7500 - 3078 * t7502 + 102) * t7497) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t7497) ** (-0.1e1 / 0.2e1)) * ((1 - t7497) ** (-0.1e1 / 0.2e1))

        if Bindx == 1093:
            t7508 = np.cos(phi)
            t7509 = t7508 ** 2
            t7511 = t7509 ** 2
            t7512 = t7508 * t7511
            t7517 = t7512 ** 2
            t7515 = t7511 ** 2
            t7510 = t7508 * t7509
            t7513 = t7510 ** 2
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.85e2) * (-276 * t7509 + 459 * t7510 + 1940 * t7511 - 2218 * t7512 - 4672 * t7513 + 4598 * t7515 - 1596 * t7517 + 6 + (4638 * t7513 - 4313 * t7515 + 1463 * t7517 - 29) * t7508) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 1094:
            t7528 = np.sin(phi)
            t7525 = t7528 ** 2
            t7526 = t7528 * t7525
            t7519 = np.cos(phi)
            t7520 = t7519 ** 2
            t7522 = t7520 ** 2
            t7521 = t7519 * t7520
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t7526 ** 2 * (225 * t7520 - 1235 * t7522 - 5 + (380 + 1463 * t7521) * t7521 + (-798 * t7522 - 30) * t7519) * np.sin((6 * phi1 - phi2)) * ((1 + t7519) ** (-0.1e1 / 0.2e1)) * ((1 - t7519) ** (-0.1e1 / 0.2e1))

        if Bindx == 1095:
            t7529 = np.cos(phi)
            t7530 = t7529 ** 2
            t7531 = t7530 ** 2
            t7533 = t7531 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.7293e4) * t7529 * (-1014 * t7531 - 1387 * t7533 - 15 + (1782 * t7531 + 399 * t7533 + 235) * t7530) * np.cos((6 * phi1))

        if Bindx == 1096:
            t7544 = np.sin(phi)
            t7541 = t7544 ** 2
            t7542 = t7544 * t7541
            t7535 = np.cos(phi)
            t7536 = t7535 ** 2
            t7538 = t7536 ** 2
            t7537 = t7535 * t7536
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t7542 ** 2 * (225 * t7536 - 1235 * t7538 - 5 + (-380 + 1463 * t7537) * t7537 + (798 * t7538 + 30) * t7535) * np.sin((6 * phi1 + phi2)) * ((1 + t7535) ** (-0.1e1 / 0.2e1)) * ((1 - t7535) ** (-0.1e1 / 0.2e1))

        if Bindx == 1097:
            t7545 = np.cos(phi)
            t7546 = t7545 ** 2
            t7548 = t7546 ** 2
            t7549 = t7545 * t7548
            t7554 = t7549 ** 2
            t7552 = t7548 ** 2
            t7547 = t7545 * t7546
            t7550 = t7547 ** 2
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.85e2) * (276 * t7546 + 459 * t7547 - 1940 * t7548 - 2218 * t7549 + 4672 * t7550 - 4598 * t7552 + 1596 * t7554 - 6 + (4638 * t7550 - 4313 * t7552 + 1463 * t7554 - 29) * t7545) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 1098:
            t7566 = np.sin(phi)
            t7564 = t7566 ** 2
            t7556 = np.cos(phi)
            t7557 = t7556 ** 2
            t7558 = t7556 * t7557
            t7561 = t7558 ** 2
            t7559 = t7557 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.595e3) * t7564 ** 2 * (42 * t7557 + 1298 * t7558 - 1482 * t7561 - 1 + (72 + 1881 * t7559) * t7559 + (-3762 * t7559 + 3078 * t7561 - 102) * t7556) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t7556) ** (-0.1e1 / 0.2e1)) * ((1 - t7556) ** (-0.1e1 / 0.2e1))

        if Bindx == 1099:
            t7567 = np.cos(phi)
            t7568 = t7567 ** 2
            t7570 = t7568 ** 2
            t7571 = t7567 * t7570
            t7576 = t7571 ** 2
            t7574 = t7570 ** 2
            t7569 = t7567 * t7568
            t7572 = t7569 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.357e3) * (160 * t7568 - 345 * t7569 - 1120 * t7570 + 874 * t7571 + 3016 * t7572 - 3420 * t7574 + 1368 * t7576 - 4 + (-330 * t7572 - 855 * t7574 + 627 * t7576 + 29) * t7567) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 1100:
            t7579 = np.cos(phi)
            t7580 = t7579 ** 2
            t7582 = t7580 ** 2
            t7586 = t7582 ** 2
            t7581 = t7579 * t7580
            t7584 = t7581 ** 2
            t7583 = t7579 * t7582
            t7578 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.51e2) * t7578 ** 2 * (-1855 * t7580 - 1960 * t7581 + 8890 * t7582 - 12390 * t7584 + 1425 * t7586 + 53 + (10892 + 4389 * t7583) * t7583 + (-20520 * t7584 + 11970 * t7586 + 130) * t7579) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t7579) ** (-0.1e1 / 0.2e1)) * ((1 - t7579) ** (-0.1e1 / 0.2e1))

        if Bindx == 1101:
            t7589 = np.cos(phi)
            t7590 = t7589 ** 2
            t7592 = t7590 ** 2
            t7593 = t7589 * t7592
            t7598 = t7593 ** 2
            t7596 = t7592 ** 2
            t7591 = t7589 * t7590
            t7594 = t7591 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (-2820 * t7590 - 21805 * t7591 + 420 * t7592 + 69846 * t7593 + 40096 * t7594 - 80370 * t7596 + 43092 * t7598 + 94 + (-79650 * t7594 + 16815 * t7596 + 13167 * t7598 + 2139) * t7589) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 1102:
            t7601 = np.cos(phi)
            t7602 = t7601 ** 2
            t7604 = t7602 ** 2
            t7608 = t7604 ** 2
            t7603 = t7601 * t7602
            t7606 = t7603 ** 2
            t7605 = t7601 * t7604
            t7600 = np.sin(phi)
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.5e1) * t7600 ** 2 * (-805 * t7602 + 2296 * t7603 + 5446 * t7604 - 10738 * t7606 + 5111 * t7608 + 35 + (-1652 + 1463 * t7605) * t7605 + (-5320 * t7606 + 5586 * t7608 - 398) * t7601) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t7601) ** (-0.1e1 / 0.2e1)) * ((1 - t7601) ** (-0.1e1 / 0.2e1))

        if Bindx == 1103:
            t7611 = np.cos(phi)
            t7612 = t7611 ** 2
            t7614 = t7612 ** 2
            t7615 = t7611 * t7614
            t7620 = t7615 ** 2
            t7618 = t7614 ** 2
            t7613 = t7611 * t7612
            t7616 = t7613 ** 2
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.95e2) * (-128 * t7612 - 63 * t7613 + 448 * t7614 + 574 * t7615 - 336 * t7616 - 328 * t7618 + 336 * t7620 + 8 + (-958 * t7616 + 383 * t7618 + 77 * t7620 - 13) * t7611) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 1104:
            t7632 = np.sin(phi)
            t7630 = t7632 ** 2
            t7622 = np.cos(phi)
            t7623 = t7622 ** 2
            t7624 = t7622 * t7623
            t7627 = t7624 ** 2
            t7625 = t7623 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.57e2) * t7630 ** 2 * (-366 * t7623 - 1174 * t7624 + 2014 * t7627 + 61 + (-660 + 231 * t7625) * t7625 + (1206 * t7625 + 1134 * t7627 + 114) * t7622) * np.sin((6 * phi1 + 9 * phi2)) * ((1 + t7622) ** (-0.1e1 / 0.2e1)) * ((1 - t7622) ** (-0.1e1 / 0.2e1))

        if Bindx == 1105:
            t7633 = np.cos(phi)
            t7634 = t7633 ** 2
            t7636 = t7634 ** 2
            t7637 = t7633 * t7636
            t7642 = t7637 ** 2
            t7640 = t7636 ** 2
            t7635 = t7633 * t7634
            t7638 = t7635 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (-12 * t7634 + 95 * t7635 + 172 * t7636 + 14 * t7637 - 224 * t7638 + 10 * t7640 + 60 * t7642 - 6 + (-202 * t7638 + 107 * t7640 + 11 * t7642 - 25) * t7633) * np.cos((6 * phi1 + 10 * phi2))

        if Bindx == 1106:
            t7644 = np.cos(phi)
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.1463e4) * ((1 - t7644) ** (0.5e1 / 0.2e1)) * ((1 + t7644) ** (0.17e2 / 0.2e1)) * np.sin((6 * phi1 + 11 * phi2))

        if Bindx == 1107:
            t7645 = np.cos(phi)
            t7646 = t7645 ** 2
            t7648 = t7646 ** 2
            t7649 = t7645 * t7648
            t7654 = t7649 ** 2
            t7652 = t7648 ** 2
            t7647 = t7645 * t7646
            t7650 = t7647 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.7315e4) * np.cos((7 * phi1 - 11 * phi2)) * (-19 * t7646 + 21 * t7647 + 6 * t7648 - 42 * t7649 + 42 * t7650 - 21 * t7652 - 7 * t7654 - 1 + (-6 * t7650 + 19 * t7652 + t7654 + 7) * t7645)

        if Bindx == 1108:
            t7666 = np.sin(phi)
            t7664 = t7666 ** 2
            t7656 = np.cos(phi)
            t7657 = t7656 ** 2
            t7658 = t7656 * t7657
            t7661 = t7658 ** 2
            t7659 = t7657 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.665e3) * t7664 ** 2 * (-70 * t7657 + 14 * t7658 + 182 * t7661 - 7 + (140 + 11 * t7659) * t7659 + (-238 * t7659 - 70 * t7661 + 38) * t7656) * np.sin((7 * phi1 - 10 * phi2)) * ((1 + t7656) ** (-0.1e1 / 0.2e1)) * ((1 - t7656) ** (-0.1e1 / 0.2e1))

        if Bindx == 1109:
            t7667 = np.cos(phi)
            t7668 = t7667 ** 2
            t7670 = t7668 ** 2
            t7671 = t7667 * t7670
            t7676 = t7671 ** 2
            t7674 = t7670 ** 2
            t7669 = t7667 * t7668
            t7672 = t7669 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * (-29 * t7668 + 609 * t7669 - 798 * t7670 - 378 * t7671 + 1638 * t7672 - 399 * t7674 - 441 * t7676 + 29 + (-1086 * t7672 + 883 * t7674 + 77 * t7676 - 105) * t7667) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 1110:
            t7679 = np.cos(phi)
            t7680 = t7679 ** 2
            t7682 = t7680 ** 2
            t7686 = t7682 ** 2
            t7681 = t7679 * t7680
            t7684 = t7681 ** 2
            t7683 = t7679 * t7682
            t7678 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.19e2) * np.sqrt(0.2e1) * t7678 ** 2 * (693 * t7680 - 1680 * t7681 - 210 * t7682 - 3654 * t7684 + 3375 * t7686 - 77 + (4032 + 385 * t7683) * t7683 + (-1008 * t7684 - 1960 * t7686 + 104) * t7679) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t7679) ** (-0.1e1 / 0.2e1)) * ((1 - t7679) ** (-0.1e1 / 0.2e1))

        if Bindx == 1111:
            t7689 = np.cos(phi)
            t7690 = t7689 ** 2
            t7692 = t7690 ** 2
            t7693 = t7689 * t7692
            t7698 = t7693 ** 2
            t7696 = t7692 ** 2
            t7691 = t7689 * t7690
            t7694 = t7691 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * (10931 * t7690 - 3297 * t7691 - 41790 * t7692 + 47418 * t7693 + 37926 * t7694 + 25137 * t7696 - 32585 * t7698 - 643 + (-88866 * t7694 + 39805 * t7696 + 7315 * t7698 - 1351) * t7689) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 1112:
            t7701 = np.cos(phi)
            t7702 = t7701 ** 2
            t7704 = t7702 ** 2
            t7708 = t7704 ** 2
            t7703 = t7701 * t7702
            t7706 = t7703 ** 2
            t7705 = t7701 * t7704
            t7700 = np.sin(phi)
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.5e1) * t7700 ** 2 * (-805 * t7702 - 2296 * t7703 + 5446 * t7704 - 10738 * t7706 + 5111 * t7708 + 35 + (1652 + 1463 * t7705) * t7705 + (5320 * t7706 - 5586 * t7708 + 398) * t7701) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t7701) ** (-0.1e1 / 0.2e1)) * ((1 - t7701) ** (-0.1e1 / 0.2e1))

        if Bindx == 1113:
            t7711 = np.cos(phi)
            t7712 = t7711 ** 2
            t7714 = t7712 ** 2
            t7715 = t7711 * t7714
            t7720 = t7715 ** 2
            t7718 = t7714 ** 2
            t7713 = t7711 * t7712
            t7716 = t7713 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.255e3) * (261 * t7712 - 2653 * t7713 + 406 * t7714 + 7994 * t7715 - 5446 * t7716 + 9443 * t7718 - 4655 * t7720 - 9 + (-8426 * t7716 + 1349 * t7718 + 1463 * t7720 + 273) * t7711) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 1114:
            t7732 = np.sin(phi)
            t7730 = t7732 ** 2
            t7722 = np.cos(phi)
            t7723 = t7722 ** 2
            t7724 = t7722 * t7723
            t7727 = t7724 ** 2
            t7725 = t7723 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1785e4) * t7730 ** 2 * (96 * t7723 - 140 * t7724 + 152 * t7727 - 3 + (-326 + 209 * t7725) * t7725 + (532 * t7725 - 532 * t7727 + 12) * t7722) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t7722) ** (-0.1e1 / 0.2e1)) * ((1 - t7722) ** (-0.1e1 / 0.2e1))

        if Bindx == 1115:
            t7733 = np.cos(phi)
            t7734 = t7733 ** 2
            t7736 = t7734 ** 2
            t7737 = t7733 * t7736
            t7742 = t7737 ** 2
            t7740 = t7736 ** 2
            t7735 = t7733 * t7734
            t7738 = t7735 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.119e3) * (-407 * t7734 - 439 * t7735 + 2510 * t7736 + 654 * t7737 - 5838 * t7738 + 5719 * t7740 - 1995 * t7742 + 11 + (882 * t7738 - 2185 * t7740 + 1045 * t7742 + 43) * t7733) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 1116:
            t7753 = np.sin(phi)
            t7750 = t7753 ** 2
            t7751 = t7753 * t7750
            t7744 = np.cos(phi)
            t7745 = t7744 ** 2
            t7747 = t7745 ** 2
            t7746 = t7744 * t7745
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t7751 ** 2 * (629 * t7745 - 3895 * t7747 - 17 + (5852 + 7315 * t7746) * t7746 + (-9310 * t7747 - 574) * t7744) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t7744) ** (-0.1e1 / 0.2e1)) * ((1 - t7744) ** (-0.1e1 / 0.2e1))

        if Bindx == 1117:
            t7754 = np.cos(phi)
            t7755 = t7754 ** 2
            t7757 = t7755 ** 2
            t7758 = t7754 * t7757
            t7763 = t7758 ** 2
            t7761 = t7757 ** 2
            t7756 = t7754 * t7755
            t7759 = t7756 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.1105e4) * (-287 * t7755 + 1123 * t7756 + 1750 * t7757 - 4334 * t7758 - 3598 * t7759 + 3059 * t7761 - 931 * t7763 + 7 + (7094 * t7759 - 5263 * t7761 + 1463 * t7763 - 83) * t7754) * np.cos((7 * phi1 - phi2))

        if Bindx == 1118:
            t7771 = np.sin(phi)
            t7768 = t7771 ** 2
            t7769 = t7768 ** 2
            t7765 = np.cos(phi)
            t7766 = t7765 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.36465e5) * t7769 ** 2 * (1 + (-38 + 133 * t7766) * t7766) * np.sin((7 * phi1)) * ((1 + t7765) ** (-0.1e1 / 0.2e1)) * ((1 - t7765) ** (-0.1e1 / 0.2e1))

        if Bindx == 1119:
            t7772 = np.cos(phi)
            t7773 = t7772 ** 2
            t7775 = t7773 ** 2
            t7776 = t7772 * t7775
            t7781 = t7776 ** 2
            t7779 = t7775 ** 2
            t7774 = t7772 * t7773
            t7777 = t7774 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.1105e4) * (287 * t7773 + 1123 * t7774 - 1750 * t7775 - 4334 * t7776 + 3598 * t7777 - 3059 * t7779 + 931 * t7781 - 7 + (7094 * t7777 - 5263 * t7779 + 1463 * t7781 - 83) * t7772) * np.cos((7 * phi1 + phi2))

        if Bindx == 1120:
            t7792 = np.sin(phi)
            t7789 = t7792 ** 2
            t7790 = t7792 * t7789
            t7783 = np.cos(phi)
            t7784 = t7783 ** 2
            t7786 = t7784 ** 2
            t7785 = t7783 * t7784
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t7790 ** 2 * (629 * t7784 - 3895 * t7786 - 17 + (-5852 + 7315 * t7785) * t7785 + (9310 * t7786 + 574) * t7783) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t7783) ** (-0.1e1 / 0.2e1)) * ((1 - t7783) ** (-0.1e1 / 0.2e1))

        if Bindx == 1121:
            t7793 = np.cos(phi)
            t7794 = t7793 ** 2
            t7796 = t7794 ** 2
            t7797 = t7793 * t7796
            t7802 = t7797 ** 2
            t7800 = t7796 ** 2
            t7795 = t7793 * t7794
            t7798 = t7795 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.119e3) * (407 * t7794 - 439 * t7795 - 2510 * t7796 + 654 * t7797 + 5838 * t7798 - 5719 * t7800 + 1995 * t7802 - 11 + (882 * t7798 - 2185 * t7800 + 1045 * t7802 + 43) * t7793) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 1122:
            t7814 = np.sin(phi)
            t7812 = t7814 ** 2
            t7804 = np.cos(phi)
            t7805 = t7804 ** 2
            t7806 = t7804 * t7805
            t7809 = t7806 ** 2
            t7807 = t7805 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1785e4) * t7812 ** 2 * (96 * t7805 + 140 * t7806 + 152 * t7809 - 3 + (-326 + 209 * t7807) * t7807 + (-532 * t7807 + 532 * t7809 - 12) * t7804) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t7804) ** (-0.1e1 / 0.2e1)) * ((1 - t7804) ** (-0.1e1 / 0.2e1))

        if Bindx == 1123:
            t7815 = np.cos(phi)
            t7816 = t7815 ** 2
            t7818 = t7816 ** 2
            t7819 = t7815 * t7818
            t7824 = t7819 ** 2
            t7822 = t7818 ** 2
            t7817 = t7815 * t7816
            t7820 = t7817 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.255e3) * (-261 * t7816 - 2653 * t7817 - 406 * t7818 + 7994 * t7819 + 5446 * t7820 - 9443 * t7822 + 4655 * t7824 + 9 + (-8426 * t7820 + 1349 * t7822 + 1463 * t7824 + 273) * t7815) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 1124:
            t7827 = np.cos(phi)
            t7828 = t7827 ** 2
            t7830 = t7828 ** 2
            t7834 = t7830 ** 2
            t7829 = t7827 * t7828
            t7832 = t7829 ** 2
            t7831 = t7827 * t7830
            t7826 = np.sin(phi)
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.5e1) * t7826 ** 2 * (-805 * t7828 + 2296 * t7829 + 5446 * t7830 - 10738 * t7832 + 5111 * t7834 + 35 + (-1652 + 1463 * t7831) * t7831 + (-5320 * t7832 + 5586 * t7834 - 398) * t7827) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t7827) ** (-0.1e1 / 0.2e1)) * ((1 - t7827) ** (-0.1e1 / 0.2e1))

        if Bindx == 1125:
            t7837 = np.cos(phi)
            t7838 = t7837 ** 2
            t7840 = t7838 ** 2
            t7841 = t7837 * t7840
            t7846 = t7841 ** 2
            t7844 = t7840 ** 2
            t7839 = t7837 * t7838
            t7842 = t7839 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * (-10931 * t7838 - 3297 * t7839 + 41790 * t7840 + 47418 * t7841 - 37926 * t7842 - 25137 * t7844 + 32585 * t7846 + 643 + (-88866 * t7842 + 39805 * t7844 + 7315 * t7846 - 1351) * t7837) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 1126:
            t7849 = np.cos(phi)
            t7850 = t7849 ** 2
            t7852 = t7850 ** 2
            t7856 = t7852 ** 2
            t7851 = t7849 * t7850
            t7854 = t7851 ** 2
            t7853 = t7849 * t7852
            t7848 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.19e2) * np.sqrt(0.2e1) * t7848 ** 2 * (693 * t7850 + 1680 * t7851 - 210 * t7852 - 3654 * t7854 + 3375 * t7856 - 77 + (-4032 + 385 * t7853) * t7853 + (1008 * t7854 + 1960 * t7856 - 104) * t7849) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t7849) ** (-0.1e1 / 0.2e1)) * ((1 - t7849) ** (-0.1e1 / 0.2e1))

        if Bindx == 1127:
            t7859 = np.cos(phi)
            t7860 = t7859 ** 2
            t7862 = t7860 ** 2
            t7863 = t7859 * t7862
            t7868 = t7863 ** 2
            t7866 = t7862 ** 2
            t7861 = t7859 * t7860
            t7864 = t7861 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * (29 * t7860 + 609 * t7861 + 798 * t7862 - 378 * t7863 - 1638 * t7864 + 399 * t7866 + 441 * t7868 - 29 + (-1086 * t7864 + 883 * t7866 + 77 * t7868 - 105) * t7859) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 1128:
            t7880 = np.sin(phi)
            t7878 = t7880 ** 2
            t7870 = np.cos(phi)
            t7871 = t7870 ** 2
            t7872 = t7870 * t7871
            t7875 = t7872 ** 2
            t7873 = t7871 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.665e3) * t7878 ** 2 * (-70 * t7871 - 14 * t7872 + 182 * t7875 - 7 + (140 + 11 * t7873) * t7873 + (238 * t7873 + 70 * t7875 - 38) * t7870) * np.sin((7 * phi1 + 10 * phi2)) * ((1 + t7870) ** (-0.1e1 / 0.2e1)) * ((1 - t7870) ** (-0.1e1 / 0.2e1))

        if Bindx == 1129:
            t7881 = np.cos(phi)
            t7882 = t7881 ** 2
            t7884 = t7882 ** 2
            t7885 = t7881 * t7884
            t7890 = t7885 ** 2
            t7888 = t7884 ** 2
            t7883 = t7881 * t7882
            t7886 = t7883 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.7315e4) * np.cos((7 * phi1 + 11 * phi2)) * (19 * t7882 + 21 * t7883 - 6 * t7884 - 42 * t7885 - 42 * t7886 + 21 * t7888 + 7 * t7890 + 1 + (-6 * t7886 + 19 * t7888 + t7890 + 7) * t7881)

        if Bindx == 1130:
            t7892 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * ((1 - t7892) ** (0.19e2 / 0.2e1)) * ((1 + t7892) ** (0.3e1 / 0.2e1)) * np.sin((8 * phi1 - 11 * phi2))

        if Bindx == 1131:
            t7893 = np.cos(phi)
            t7894 = t7893 ** 2
            t7896 = t7894 ** 2
            t7897 = t7893 * t7896
            t7902 = t7897 ** 2
            t7900 = t7896 ** 2
            t7895 = t7893 * t7894
            t7898 = t7895 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.35e2) * (-128 * t7894 + 87 * t7895 + 192 * t7896 - 462 * t7897 + 336 * t7898 - 312 * t7900 - 80 * t7902 - 8 + (78 * t7898 + 233 * t7900 + 11 * t7902 + 53) * t7893) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 1132:
            t7905 = np.cos(phi)
            t7906 = t7905 ** 2
            t7908 = t7906 ** 2
            t7912 = t7908 ** 2
            t7907 = t7905 * t7906
            t7910 = t7907 ** 2
            t7909 = t7905 * t7908
            t7904 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t7904 ** 2 * (273 * t7906 + 336 * t7907 - 1386 * t7908 + 210 * t7910 + 1299 * t7912 + 39 + (1344 + 77 * t7909) * t7909 + (-1488 * t7910 - 504 * t7912 - 200) * t7905) * np.sin((8 * phi1 - 9 * phi2)) * ((1 + t7905) ** (-0.1e1 / 0.2e1)) * ((1 - t7905) ** (-0.1e1 / 0.2e1))

        if Bindx == 1133:
            t7915 = np.cos(phi)
            t7916 = t7915 ** 2
            t7918 = t7916 ** 2
            t7919 = t7915 * t7918
            t7924 = t7919 ** 2
            t7922 = t7918 ** 2
            t7917 = t7915 * t7916
            t7920 = t7917 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * (-256 * t7916 + 2877 * t7917 - 3360 * t7918 - 2478 * t7919 + 8064 * t7920 - 2592 * t7922 - 2240 * t7924 + 128 + (-4734 * t7920 + 4645 * t7922 + 385 * t7924 - 439) * t7915) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 1134:
            t7927 = np.cos(phi)
            t7928 = t7927 ** 2
            t7930 = t7928 ** 2
            t7934 = t7930 ** 2
            t7929 = t7927 * t7928
            t7932 = t7929 ** 2
            t7931 = t7927 * t7930
            t7926 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.19e2) * np.sqrt(0.2e1) * t7926 ** 2 * (693 * t7928 - 1680 * t7929 - 210 * t7930 - 3654 * t7932 + 3375 * t7934 - 77 + (4032 + 385 * t7931) * t7931 + (-1008 * t7932 - 1960 * t7934 + 104) * t7927) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t7927) ** (-0.1e1 / 0.2e1)) * ((1 - t7927) ** (-0.1e1 / 0.2e1))

        if Bindx == 1135:
            t7937 = np.cos(phi)
            t7938 = t7937 ** 2
            t7940 = t7938 ** 2
            t7941 = t7937 * t7940
            t7946 = t7941 ** 2
            t7944 = t7940 ** 2
            t7939 = t7937 * t7938
            t7942 = t7939 ** 2
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.95e2) * (128 * t7938 - 63 * t7939 - 448 * t7940 + 574 * t7941 + 336 * t7942 + 328 * t7944 - 336 * t7946 - 8 + (-958 * t7942 + 383 * t7944 + 77 * t7946 - 13) * t7937) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 1136:
            t7958 = np.sin(phi)
            t7956 = t7958 ** 2
            t7948 = np.cos(phi)
            t7949 = t7948 ** 2
            t7950 = t7948 * t7949
            t7953 = t7950 ** 2
            t7951 = t7949 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t7956 ** 2 * (60 * t7949 + 88 * t7950 + 284 * t7953 - 3 + (-290 + 77 * t7951) * t7951 + (88 * t7951 - 280 * t7953 - 24) * t7948) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t7948) ** (-0.1e1 / 0.2e1)) * ((1 - t7948) ** (-0.1e1 / 0.2e1))

        if Bindx == 1137:
            t7959 = np.cos(phi)
            t7960 = t7959 ** 2
            t7962 = t7960 ** 2
            t7966 = t7962 ** 2
            t7961 = t7959 * t7960
            t7964 = t7961 ** 2
            t7963 = t7959 * t7962
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t7959 * (-25 * t7960 + 16 * t7961 + 62 * t7962 - 50 * t7964 - t7966 + 3 + (-64 + 11 * t7963) * t7963 + (80 * t7964 - 32 * t7966) * t7959) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 1138:
            t7978 = np.sin(phi)
            t7975 = t7978 ** 2
            t7976 = t7978 * t7975
            t7969 = np.cos(phi)
            t7970 = t7969 ** 2
            t7972 = t7970 ** 2
            t7971 = t7969 * t7970
            tfunc[..., c] = 0.69e2 / 0.512e3 * np.sqrt(0.2261e4) * t7976 ** 2 * (-27 * t7970 + 35 * t7972 + 1 + (64 + 55 * t7971) * t7971 + (-120 * t7972 - 8) * t7969) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t7969) ** (-0.1e1 / 0.2e1)) * ((1 - t7969) ** (-0.1e1 / 0.2e1))

        if Bindx == 1139:
            t7979 = np.cos(phi)
            t7980 = t7979 ** 2
            t7982 = t7980 ** 2
            t7983 = t7979 * t7982
            t7988 = t7983 ** 2
            t7986 = t7982 ** 2
            t7981 = t7979 * t7980
            t7984 = t7981 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (-256 * t7980 + 53 * t7981 + 1280 * t7982 - 538 * t7983 - 2384 * t7984 + 1912 * t7986 - 560 * t7988 + 8 + (1306 * t7984 - 1205 * t7986 + 385 * t7988 - 1) * t7979) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 1140:
            t7997 = np.sin(phi)
            t7994 = t7997 ** 2
            t7995 = t7994 ** 2
            t7990 = np.cos(phi)
            t7991 = t7990 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.20995e5) * t7995 ** 2 * (8 * t7990 + 1 + (-56 * t7990 - 30 + 77 * t7991) * t7991) * np.sin((8 * phi1 - phi2)) * ((1 - t7990) ** (-0.1e1 / 0.2e1)) * ((1 + t7990) ** (-0.1e1 / 0.2e1))

        if Bindx == 1141:
            t7998 = np.cos(phi)
            t7999 = t7998 ** 2
            t8000 = t7999 ** 2
            t8002 = t8000 ** 2
            tfunc[..., c] = 0.23e2 / 0.256e3 * t7998 * np.sqrt(0.692835e6) * (-34 * t8000 - 29 * t8002 - 1 + (46 * t8000 + 7 * t8002 + 11) * t7999) * np.cos((8 * phi1))

        if Bindx == 1142:
            t8011 = np.sin(phi)
            t8008 = t8011 ** 2
            t8009 = t8008 ** 2
            t8004 = np.cos(phi)
            t8005 = t8004 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.20995e5) * t8009 ** 2 * (-8 * t8004 + 1 + (56 * t8004 - 30 + 77 * t8005) * t8005) * np.sin((8 * phi1 + phi2)) * ((1 - t8004) ** (-0.1e1 / 0.2e1)) * ((1 + t8004) ** (-0.1e1 / 0.2e1))

        if Bindx == 1143:
            t8012 = np.cos(phi)
            t8013 = t8012 ** 2
            t8015 = t8013 ** 2
            t8016 = t8012 * t8015
            t8021 = t8016 ** 2
            t8019 = t8015 ** 2
            t8014 = t8012 * t8013
            t8017 = t8014 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (256 * t8013 + 53 * t8014 - 1280 * t8015 - 538 * t8016 + 2384 * t8017 - 1912 * t8019 + 560 * t8021 - 8 + (1306 * t8017 - 1205 * t8019 + 385 * t8021 - 1) * t8012) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 1144:
            t8032 = np.sin(phi)
            t8029 = t8032 ** 2
            t8030 = t8032 * t8029
            t8023 = np.cos(phi)
            t8024 = t8023 ** 2
            t8026 = t8024 ** 2
            t8025 = t8023 * t8024
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.2261e4) * t8030 ** 2 * (-27 * t8024 + 35 * t8026 + 1 + (-64 + 55 * t8025) * t8025 + (120 * t8026 + 8) * t8023) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t8023) ** (-0.1e1 / 0.2e1)) * ((1 + t8023) ** (-0.1e1 / 0.2e1))

        if Bindx == 1145:
            t8033 = np.cos(phi)
            t8034 = t8033 ** 2
            t8036 = t8034 ** 2
            t8040 = t8036 ** 2
            t8035 = t8033 * t8034
            t8038 = t8035 ** 2
            t8037 = t8033 * t8036
            tfunc[..., c] = 0.23e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t8033 * (-25 * t8034 - 16 * t8035 + 62 * t8036 - 50 * t8038 - t8040 + 3 + (64 + 11 * t8037) * t8037 + (-80 * t8038 + 32 * t8040) * t8033) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 1146:
            t8053 = np.sin(phi)
            t8051 = t8053 ** 2
            t8043 = np.cos(phi)
            t8044 = t8043 ** 2
            t8045 = t8043 * t8044
            t8048 = t8045 ** 2
            t8046 = t8044 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t8051 ** 2 * (60 * t8044 - 88 * t8045 + 284 * t8048 - 3 + (-290 + 77 * t8046) * t8046 + (-88 * t8046 + 280 * t8048 + 24) * t8043) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t8043) ** (-0.1e1 / 0.2e1)) * ((1 + t8043) ** (-0.1e1 / 0.2e1))

        if Bindx == 1147:
            t8054 = np.cos(phi)
            t8055 = t8054 ** 2
            t8057 = t8055 ** 2
            t8058 = t8054 * t8057
            t8063 = t8058 ** 2
            t8061 = t8057 ** 2
            t8056 = t8054 * t8055
            t8059 = t8056 ** 2
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.95e2) * (-128 * t8055 - 63 * t8056 + 448 * t8057 + 574 * t8058 - 336 * t8059 - 328 * t8061 + 336 * t8063 + 8 + (-958 * t8059 + 383 * t8061 + 77 * t8063 - 13) * t8054) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 1148:
            t8066 = np.cos(phi)
            t8067 = t8066 ** 2
            t8069 = t8067 ** 2
            t8073 = t8069 ** 2
            t8068 = t8066 * t8067
            t8071 = t8068 ** 2
            t8070 = t8066 * t8069
            t8065 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.19e2) * np.sqrt(0.2e1) * t8065 ** 2 * (693 * t8067 + 1680 * t8068 - 210 * t8069 - 3654 * t8071 + 3375 * t8073 - 77 + (-4032 + 385 * t8070) * t8070 + (1008 * t8071 + 1960 * t8073 - 104) * t8066) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t8066) ** (-0.1e1 / 0.2e1)) * ((1 + t8066) ** (-0.1e1 / 0.2e1))

        if Bindx == 1149:
            t8076 = np.cos(phi)
            t8077 = t8076 ** 2
            t8079 = t8077 ** 2
            t8080 = t8076 * t8079
            t8085 = t8080 ** 2
            t8083 = t8079 ** 2
            t8078 = t8076 * t8077
            t8081 = t8078 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.2e1) * (256 * t8077 + 2877 * t8078 + 3360 * t8079 - 2478 * t8080 - 8064 * t8081 + 2592 * t8083 + 2240 * t8085 - 128 + (-4734 * t8081 + 4645 * t8083 + 385 * t8085 - 439) * t8076) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 1150:
            t8088 = np.cos(phi)
            t8089 = t8088 ** 2
            t8091 = t8089 ** 2
            t8095 = t8091 ** 2
            t8090 = t8088 * t8089
            t8093 = t8090 ** 2
            t8092 = t8088 * t8091
            t8087 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t8087 ** 2 * (273 * t8089 - 336 * t8090 - 1386 * t8091 + 210 * t8093 + 1299 * t8095 + 39 + (-1344 + 77 * t8092) * t8092 + (1488 * t8093 + 504 * t8095 + 200) * t8088) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t8088) ** (-0.1e1 / 0.2e1)) * ((1 + t8088) ** (-0.1e1 / 0.2e1))

        if Bindx == 1151:
            t8098 = np.cos(phi)
            t8099 = t8098 ** 2
            t8101 = t8099 ** 2
            t8102 = t8098 * t8101
            t8107 = t8102 ** 2
            t8105 = t8101 ** 2
            t8100 = t8098 * t8099
            t8103 = t8100 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.35e2) * (128 * t8099 + 87 * t8100 - 192 * t8101 - 462 * t8102 - 336 * t8103 + 312 * t8105 + 80 * t8107 + 8 + (78 * t8103 + 233 * t8105 + 11 * t8107 + 53) * t8098) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 1152:
            t8109 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * ((1 - t8109) ** (0.3e1 / 0.2e1)) * ((1 + t8109) ** (0.19e2 / 0.2e1)) * np.sin((8 * phi1 + 11 * phi2))

        if Bindx == 1153:
            t8110 = np.cos(phi)
            t8111 = t8110 ** 2
            t8113 = t8111 ** 2
            t8114 = t8110 * t8113
            t8119 = t8114 ** 2
            t8117 = t8113 ** 2
            t8112 = t8110 * t8111
            t8115 = t8112 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (35 * t8111 - 75 * t8112 + 90 * t8113 - 42 * t8114 - 42 * t8115 - 75 * t8117 - 9 * t8119 + 1 + (90 * t8115 + 35 * t8117 + t8119 - 9) * t8110) * np.cos((9 * phi1 - 11 * phi2))

        if Bindx == 1154:
            t8122 = np.cos(phi)
            t8123 = t8122 ** 2
            t8125 = t8123 ** 2
            t8129 = t8125 ** 2
            t8124 = t8122 * t8123
            t8127 = t8124 ** 2
            t8126 = t8122 * t8125
            t8121 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.21e2) * t8121 ** 2 * (-225 * t8123 + 360 * t8124 - 210 * t8125 + 630 * t8127 + 315 * t8129 - 9 + (-252 + 11 * t8126) * t8126 + (-600 * t8127 - 90 * t8129 + 70) * t8122) * np.sin((9 * phi1 - 10 * phi2)) * ((1 - t8122) ** (-0.1e1 / 0.2e1)) * ((1 + t8122) ** (-0.1e1 / 0.2e1))

        if Bindx == 1155:
            t8132 = np.cos(phi)
            t8133 = t8132 ** 2
            t8135 = t8133 ** 2
            t8136 = t8132 * t8135
            t8141 = t8136 ** 2
            t8139 = t8135 ** 2
            t8134 = t8132 * t8133
            t8137 = t8134 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * (-2265 * t8133 + 1155 * t8134 + 4410 * t8135 - 9198 * t8136 + 5838 * t8137 - 7155 * t8139 - 1701 * t8141 - 151 + (2790 * t8137 + 5065 * t8139 + 231 * t8141 + 981) * t8132) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 1156:
            t8144 = np.cos(phi)
            t8145 = t8144 ** 2
            t8147 = t8145 ** 2
            t8151 = t8147 ** 2
            t8146 = t8144 * t8145
            t8149 = t8146 ** 2
            t8148 = t8144 * t8147
            t8143 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t8143 ** 2 * (273 * t8145 + 336 * t8146 - 1386 * t8147 + 210 * t8149 + 1299 * t8151 + 39 + (1344 + 77 * t8148) * t8148 + (-1488 * t8149 - 504 * t8151 - 200) * t8144) * np.sin((9 * phi1 - 8 * phi2)) * ((1 - t8144) ** (-0.1e1 / 0.2e1)) * ((1 + t8144) ** (-0.1e1 / 0.2e1))

        if Bindx == 1157:
            t8154 = np.cos(phi)
            t8155 = t8154 ** 2
            t8157 = t8155 ** 2
            t8158 = t8154 * t8157
            t8163 = t8158 ** 2
            t8161 = t8157 ** 2
            t8156 = t8154 * t8155
            t8159 = t8156 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * (-29 * t8155 + 609 * t8156 - 798 * t8157 - 378 * t8158 + 1638 * t8159 - 399 * t8161 - 441 * t8163 + 29 + (-1086 * t8159 + 883 * t8161 + 77 * t8163 - 105) * t8154) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 1158:
            t8175 = np.sin(phi)
            t8173 = t8175 ** 2
            t8165 = np.cos(phi)
            t8166 = t8165 ** 2
            t8167 = t8165 * t8166
            t8170 = t8167 ** 2
            t8168 = t8166 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.57e2) * t8173 ** 2 * (-366 * t8166 + 1174 * t8167 + 2014 * t8170 + 61 + (-660 + 231 * t8168) * t8168 + (-1206 * t8168 - 1134 * t8170 - 114) * t8165) * np.sin((9 * phi1 - 6 * phi2)) * ((1 - t8165) ** (-0.1e1 / 0.2e1)) * ((1 + t8165) ** (-0.1e1 / 0.2e1))

        if Bindx == 1159:
            t8176 = np.cos(phi)
            t8177 = t8176 ** 2
            t8179 = t8177 ** 2
            t8180 = t8176 * t8179
            t8185 = t8180 ** 2
            t8183 = t8179 ** 2
            t8178 = t8176 * t8177
            t8181 = t8178 ** 2
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (169 * t8177 - 175 * t8178 - 434 * t8179 + 798 * t8180 + 98 * t8181 + 495 * t8183 - 315 * t8185 - 13 + (-974 * t8181 + 279 * t8183 + 77 * t8185 - 5) * t8176) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 1160:
            t8195 = np.sin(phi)
            t8192 = t8195 ** 2
            t8193 = t8195 * t8192
            t8187 = np.cos(phi)
            t8188 = t8187 ** 2
            t8189 = t8188 ** 2
            t8190 = t8187 * t8189
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t8193 ** 2 * (-15 * t8188 + 35 * t8189 - 36 * t8190 + 1 + (11 * t8190 + 4) * t8187) * np.sin((9 * phi1 - 4 * phi2)) * ((1 - t8187) ** (-0.1e1 / 0.2e1)) * ((1 + t8187) ** (-0.1e1 / 0.2e1))

        if Bindx == 1161:
            t8196 = np.cos(phi)
            t8197 = t8196 ** 2
            t8199 = t8197 ** 2
            t8200 = t8196 * t8199
            t8205 = t8200 ** 2
            t8203 = t8199 ** 2
            t8198 = t8196 * t8197
            t8201 = t8198 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.33915e5) * (-21 * t8197 - 91 * t8198 + 138 * t8199 + 150 * t8200 - 298 * t8201 + 261 * t8203 - 81 * t8205 + 1 + (-54 * t8201 - 53 * t8203 + 33 * t8205 + 15) * t8196) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 1162:
            t8214 = np.sin(phi)
            t8211 = t8214 ** 2
            t8212 = t8211 ** 2
            t8207 = np.cos(phi)
            t8208 = t8207 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t8212 ** 2 * (30 * t8207 - 1 + (-126 * t8207 + 20 + 77 * t8208) * t8208) * np.sin((9 * phi1 - 2 * phi2)) * ((1 - t8207) ** (-0.1e1 / 0.2e1)) * ((1 + t8207) ** (-0.1e1 / 0.2e1))

        if Bindx == 1163:
            t8215 = np.cos(phi)
            t8216 = t8215 ** 2
            t8218 = t8216 ** 2
            t8219 = t8215 * t8218
            t8224 = t8219 ** 2
            t8222 = t8218 ** 2
            t8217 = t8215 * t8216
            t8220 = t8217 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.12597e5) * (-75 * t8216 + 145 * t8217 + 270 * t8218 - 410 * t8219 - 390 * t8220 + 255 * t8222 - 63 * t8224 + 3 + (530 * t8220 - 325 * t8222 + 77 * t8224 - 17) * t8215) * np.cos((9 * phi1 - phi2))

        if Bindx == 1164:
            t8231 = np.sin(phi)
            t8227 = t8231 ** 2
            t8229 = t8231 * t8227 ** 2
            t8226 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.46189e5) * t8229 ** 2 * (21 * t8226 ** 2 - 1) * np.sin((9 * phi1)) * ((1 - t8226) ** (-0.1e1 / 0.2e1)) * ((1 + t8226) ** (-0.1e1 / 0.2e1))

        if Bindx == 1165:
            t8232 = np.cos(phi)
            t8233 = t8232 ** 2
            t8235 = t8233 ** 2
            t8236 = t8232 * t8235
            t8241 = t8236 ** 2
            t8239 = t8235 ** 2
            t8234 = t8232 * t8233
            t8237 = t8234 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.12597e5) * (75 * t8233 + 145 * t8234 - 270 * t8235 - 410 * t8236 + 390 * t8237 - 255 * t8239 + 63 * t8241 - 3 + (530 * t8237 - 325 * t8239 + 77 * t8241 - 17) * t8232) * np.cos((9 * phi1 + phi2))

        if Bindx == 1166:
            t8250 = np.sin(phi)
            t8247 = t8250 ** 2
            t8248 = t8247 ** 2
            t8243 = np.cos(phi)
            t8244 = t8243 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * t8248 ** 2 * (-30 * t8243 - 1 + (126 * t8243 + 20 + 77 * t8244) * t8244) * np.sin((9 * phi1 + 2 * phi2)) * ((1 - t8243) ** (-0.1e1 / 0.2e1)) * ((1 + t8243) ** (-0.1e1 / 0.2e1))

        if Bindx == 1167:
            t8251 = np.cos(phi)
            t8252 = t8251 ** 2
            t8254 = t8252 ** 2
            t8255 = t8251 * t8254
            t8260 = t8255 ** 2
            t8258 = t8254 ** 2
            t8253 = t8251 * t8252
            t8256 = t8253 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.33915e5) * (21 * t8252 - 91 * t8253 - 138 * t8254 + 150 * t8255 + 298 * t8256 - 261 * t8258 + 81 * t8260 - 1 + (-54 * t8256 - 53 * t8258 + 33 * t8260 + 15) * t8251) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 1168:
            t8270 = np.sin(phi)
            t8267 = t8270 ** 2
            t8268 = t8270 * t8267
            t8262 = np.cos(phi)
            t8263 = t8262 ** 2
            t8264 = t8263 ** 2
            t8265 = t8262 * t8264
            tfunc[..., c] = -0.69e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t8268 ** 2 * (-15 * t8263 + 35 * t8264 + 36 * t8265 + 1 + (11 * t8265 - 4) * t8262) * np.sin((9 * phi1 + 4 * phi2)) * ((1 - t8262) ** (-0.1e1 / 0.2e1)) * ((1 + t8262) ** (-0.1e1 / 0.2e1))

        if Bindx == 1169:
            t8271 = np.cos(phi)
            t8272 = t8271 ** 2
            t8274 = t8272 ** 2
            t8275 = t8271 * t8274
            t8280 = t8275 ** 2
            t8278 = t8274 ** 2
            t8273 = t8271 * t8272
            t8276 = t8273 ** 2
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (-169 * t8272 - 175 * t8273 + 434 * t8274 + 798 * t8275 - 98 * t8276 - 495 * t8278 + 315 * t8280 + 13 + (-974 * t8276 + 279 * t8278 + 77 * t8280 - 5) * t8271) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 1170:
            t8292 = np.sin(phi)
            t8290 = t8292 ** 2
            t8282 = np.cos(phi)
            t8283 = t8282 ** 2
            t8284 = t8282 * t8283
            t8287 = t8284 ** 2
            t8285 = t8283 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.57e2) * t8290 ** 2 * (-366 * t8283 - 1174 * t8284 + 2014 * t8287 + 61 + (-660 + 231 * t8285) * t8285 + (1206 * t8285 + 1134 * t8287 + 114) * t8282) * np.sin((9 * phi1 + 6 * phi2)) * ((1 - t8282) ** (-0.1e1 / 0.2e1)) * ((1 + t8282) ** (-0.1e1 / 0.2e1))

        if Bindx == 1171:
            t8293 = np.cos(phi)
            t8294 = t8293 ** 2
            t8296 = t8294 ** 2
            t8297 = t8293 * t8296
            t8302 = t8297 ** 2
            t8300 = t8296 ** 2
            t8295 = t8293 * t8294
            t8298 = t8295 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * (29 * t8294 + 609 * t8295 + 798 * t8296 - 378 * t8297 - 1638 * t8298 + 399 * t8300 + 441 * t8302 - 29 + (-1086 * t8298 + 883 * t8300 + 77 * t8302 - 105) * t8293) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 1172:
            t8305 = np.cos(phi)
            t8306 = t8305 ** 2
            t8308 = t8306 ** 2
            t8312 = t8308 ** 2
            t8307 = t8305 * t8306
            t8310 = t8307 ** 2
            t8309 = t8305 * t8308
            t8304 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t8304 ** 2 * (273 * t8306 - 336 * t8307 - 1386 * t8308 + 210 * t8310 + 1299 * t8312 + 39 + (-1344 + 77 * t8309) * t8309 + (1488 * t8310 + 504 * t8312 + 200) * t8305) * np.sin((9 * phi1 + 8 * phi2)) * ((1 - t8305) ** (-0.1e1 / 0.2e1)) * ((1 + t8305) ** (-0.1e1 / 0.2e1))

        if Bindx == 1173:
            t8315 = np.cos(phi)
            t8316 = t8315 ** 2
            t8318 = t8316 ** 2
            t8319 = t8315 * t8318
            t8324 = t8319 ** 2
            t8322 = t8318 ** 2
            t8317 = t8315 * t8316
            t8320 = t8317 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * (2265 * t8316 + 1155 * t8317 - 4410 * t8318 - 9198 * t8319 - 5838 * t8320 + 7155 * t8322 + 1701 * t8324 + 151 + (2790 * t8320 + 5065 * t8322 + 231 * t8324 + 981) * t8315) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 1174:
            t8327 = np.cos(phi)
            t8328 = t8327 ** 2
            t8330 = t8328 ** 2
            t8334 = t8330 ** 2
            t8329 = t8327 * t8328
            t8332 = t8329 ** 2
            t8331 = t8327 * t8330
            t8326 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.21e2) * t8326 ** 2 * (-225 * t8328 - 360 * t8329 - 210 * t8330 + 630 * t8332 + 315 * t8334 - 9 + (252 + 11 * t8331) * t8331 + (600 * t8332 + 90 * t8334 - 70) * t8327) * np.sin((9 * phi1 + 10 * phi2)) * ((1 - t8327) ** (-0.1e1 / 0.2e1)) * ((1 + t8327) ** (-0.1e1 / 0.2e1))

        if Bindx == 1175:
            t8337 = np.cos(phi)
            t8338 = t8337 ** 2
            t8340 = t8338 ** 2
            t8341 = t8337 * t8340
            t8346 = t8341 ** 2
            t8344 = t8340 ** 2
            t8339 = t8337 * t8338
            t8342 = t8339 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (-35 * t8338 - 75 * t8339 - 90 * t8340 - 42 * t8341 + 42 * t8342 + 75 * t8344 + 9 * t8346 - 1 + (90 * t8342 + 35 * t8344 + t8346 - 9) * t8337) * np.cos((9 * phi1 + 11 * phi2))

        if Bindx == 1176:
            t8348 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.11e2) * ((1 - t8348) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t8348)) * np.sin((10 * phi1 - 11 * phi2))

        if Bindx == 1177:
            t8349 = np.cos(phi)
            t8350 = t8349 ** 2
            t8352 = t8350 ** 2
            t8353 = t8349 * t8352
            t8358 = t8353 ** 2
            t8356 = t8352 ** 2
            t8351 = t8349 * t8350
            t8354 = t8351 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (340 * t8350 - 705 * t8351 + 780 * t8352 - 210 * t8353 - 672 * t8354 - 870 * t8356 - 100 * t8358 + 10 + (1110 * t8354 + 395 * t8356 + 11 * t8358 - 89) * t8349) * np.cos((10 * phi1 - 10 * phi2))

        if Bindx == 1178:
            t8361 = np.cos(phi)
            t8362 = t8361 ** 2
            t8364 = t8362 ** 2
            t8368 = t8364 ** 2
            t8363 = t8361 * t8362
            t8366 = t8363 ** 2
            t8365 = t8361 * t8364
            t8360 = np.sin(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.21e2) * t8360 ** 2 * (-225 * t8362 + 360 * t8363 - 210 * t8364 + 630 * t8366 + 315 * t8368 - 9 + (-252 + 11 * t8365) * t8365 + (-600 * t8366 - 90 * t8368 + 70) * t8361) * np.sin((10 * phi1 - 9 * phi2)) * ((1 - t8361) ** (-0.1e1 / 0.2e1)) * ((1 + t8361) ** (-0.1e1 / 0.2e1))

        if Bindx == 1179:
            t8371 = np.cos(phi)
            t8372 = t8371 ** 2
            t8374 = t8372 ** 2
            t8375 = t8371 * t8374
            t8380 = t8375 ** 2
            t8378 = t8374 ** 2
            t8373 = t8371 * t8372
            t8376 = t8373 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.35e2) * (-128 * t8372 + 87 * t8373 + 192 * t8374 - 462 * t8375 + 336 * t8376 - 312 * t8378 - 80 * t8380 - 8 + (78 * t8376 + 233 * t8378 + 11 * t8380 + 53) * t8371) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 1180:
            t8392 = np.sin(phi)
            t8390 = t8392 ** 2
            t8382 = np.cos(phi)
            t8383 = t8382 ** 2
            t8384 = t8382 * t8383
            t8387 = t8384 ** 2
            t8385 = t8383 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.665e3) * t8390 ** 2 * (-70 * t8383 + 14 * t8384 + 182 * t8387 - 7 + (140 + 11 * t8385) * t8385 + (-238 * t8385 - 70 * t8387 + 38) * t8382) * np.sin((10 * phi1 - 7 * phi2)) * ((1 - t8382) ** (-0.1e1 / 0.2e1)) * ((1 + t8382) ** (-0.1e1 / 0.2e1))

        if Bindx == 1181:
            t8393 = np.cos(phi)
            t8394 = t8393 ** 2
            t8396 = t8394 ** 2
            t8397 = t8393 * t8396
            t8402 = t8397 ** 2
            t8400 = t8396 ** 2
            t8395 = t8393 * t8394
            t8398 = t8395 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (12 * t8394 + 95 * t8395 - 172 * t8396 + 14 * t8397 + 224 * t8398 - 10 * t8400 - 60 * t8402 + 6 + (-202 * t8398 + 107 * t8400 + 11 * t8402 - 25) * t8393) * np.cos((10 * phi1 - 6 * phi2))

        if Bindx == 1182:
            t8413 = np.sin(phi)
            t8410 = t8413 ** 2
            t8411 = t8413 * t8410
            t8404 = np.cos(phi)
            t8405 = t8404 ** 2
            t8407 = t8405 ** 2
            t8406 = t8404 * t8405
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.6783e4) * t8411 ** 2 * (5 * t8405 + 85 * t8407 - 5 + (-60 + 11 * t8406) * t8406 + (-50 * t8407 + 14) * t8404) * np.sin((10 * phi1 - 5 * phi2)) * ((1 - t8404) ** (-0.1e1 / 0.2e1)) * ((1 + t8404) ** (-0.1e1 / 0.2e1))

        if Bindx == 1183:
            t8414 = np.cos(phi)
            t8415 = t8414 ** 2
            t8417 = t8415 ** 2
            t8418 = t8414 * t8417
            t8423 = t8418 ** 2
            t8421 = t8417 ** 2
            t8416 = t8414 * t8415
            t8419 = t8416 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.969e3) * (32 * t8415 - 65 * t8416 - 32 * t8417 + 154 * t8418 - 56 * t8419 + 100 * t8421 - 40 * t8423 - 4 + (-122 * t8419 + 17 * t8421 + 11 * t8423 + 5) * t8414) * np.cos((10 * phi1 - 4 * phi2))

        if Bindx == 1184:
            t8432 = np.sin(phi)
            t8429 = t8432 ** 2
            t8430 = t8429 ** 2
            t8425 = np.cos(phi)
            t8426 = t8425 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1615e4) * t8430 ** 2 * (-2 * t8425 - 3 + (-30 * t8425 + 24 + 11 * t8426) * t8426) * np.sin((10 * phi1 - 3 * phi2)) * ((1 - t8425) ** (-0.1e1 / 0.2e1)) * ((1 + t8425) ** (-0.1e1 / 0.2e1))

        if Bindx == 1185:
            t8433 = np.cos(phi)
            t8434 = t8433 ** 2
            t8436 = t8434 ** 2
            t8437 = t8433 * t8436
            t8442 = t8437 ** 2
            t8440 = t8436 ** 2
            t8435 = t8433 * t8434
            t8438 = t8435 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.11305e5) * (-28 * t8434 - 17 * t8435 + 92 * t8436 - 2 * t8437 - 128 * t8438 + 82 * t8440 - 20 * t8442 + 2 + (38 * t8438 - 37 * t8440 + 11 * t8442 + 7) * t8433) * np.cos((10 * phi1 - 2 * phi2))

        if Bindx == 1186:
            t8449 = np.sin(phi)
            t8445 = t8449 ** 2
            t8447 = t8449 * t8445 ** 2
            t8444 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t8447 ** 2 * (-1 + (-10 + 11 * t8444) * t8444) * np.sin((10 * phi1 - phi2)) * ((1 - t8444) ** (-0.1e1 / 0.2e1)) * ((1 + t8444) ** (-0.1e1 / 0.2e1))

        if Bindx == 1187:
            t8450 = np.cos(phi)
            t8451 = t8450 ** 2
            t8452 = t8451 ** 2
            t8454 = t8452 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969969e6) * t8450 * np.cos((10 * phi1)) * (-10 * t8452 - 5 * t8454 - 1 + (10 * t8452 + t8454 + 5) * t8451)

        if Bindx == 1188:
            t8461 = np.sin(phi)
            t8457 = t8461 ** 2
            t8459 = t8461 * t8457 ** 2
            t8456 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t8459 ** 2 * (-1 + (10 + 11 * t8456) * t8456) * np.sin((10 * phi1 + phi2)) * ((1 - t8456) ** (-0.1e1 / 0.2e1)) * ((1 + t8456) ** (-0.1e1 / 0.2e1))

        if Bindx == 1189:
            t8462 = np.cos(phi)
            t8463 = t8462 ** 2
            t8465 = t8463 ** 2
            t8466 = t8462 * t8465
            t8471 = t8466 ** 2
            t8469 = t8465 ** 2
            t8464 = t8462 * t8463
            t8467 = t8464 ** 2
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.11305e5) * (28 * t8463 - 17 * t8464 - 92 * t8465 - 2 * t8466 + 128 * t8467 - 82 * t8469 + 20 * t8471 - 2 + (38 * t8467 - 37 * t8469 + 11 * t8471 + 7) * t8462) * np.cos((10 * phi1 + 2 * phi2))

        if Bindx == 1190:
            t8480 = np.sin(phi)
            t8477 = t8480 ** 2
            t8478 = t8477 ** 2
            t8473 = np.cos(phi)
            t8474 = t8473 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1615e4) * t8478 ** 2 * (2 * t8473 - 3 + (30 * t8473 + 24 + 11 * t8474) * t8474) * np.sin((10 * phi1 + 3 * phi2)) * ((1 - t8473) ** (-0.1e1 / 0.2e1)) * ((1 + t8473) ** (-0.1e1 / 0.2e1))

        if Bindx == 1191:
            t8481 = np.cos(phi)
            t8482 = t8481 ** 2
            t8484 = t8482 ** 2
            t8485 = t8481 * t8484
            t8490 = t8485 ** 2
            t8488 = t8484 ** 2
            t8483 = t8481 * t8482
            t8486 = t8483 ** 2
            tfunc[..., c] = -0.23e2 / 0.256e3 * np.sqrt(0.969e3) * (-32 * t8482 - 65 * t8483 + 32 * t8484 + 154 * t8485 + 56 * t8486 - 100 * t8488 + 40 * t8490 + 4 + (-122 * t8486 + 17 * t8488 + 11 * t8490 + 5) * t8481) * np.cos((10 * phi1 + 4 * phi2))

        if Bindx == 1192:
            t8501 = np.sin(phi)
            t8498 = t8501 ** 2
            t8499 = t8501 * t8498
            t8492 = np.cos(phi)
            t8493 = t8492 ** 2
            t8495 = t8493 ** 2
            t8494 = t8492 * t8493
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.6783e4) * t8499 ** 2 * (5 * t8493 + 85 * t8495 - 5 + (60 + 11 * t8494) * t8494 + (50 * t8495 - 14) * t8492) * np.sin((10 * phi1 + 5 * phi2)) * ((1 - t8492) ** (-0.1e1 / 0.2e1)) * ((1 + t8492) ** (-0.1e1 / 0.2e1))

        if Bindx == 1193:
            t8502 = np.cos(phi)
            t8503 = t8502 ** 2
            t8505 = t8503 ** 2
            t8506 = t8502 * t8505
            t8511 = t8506 ** 2
            t8509 = t8505 ** 2
            t8504 = t8502 * t8503
            t8507 = t8504 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (-12 * t8503 + 95 * t8504 + 172 * t8505 + 14 * t8506 - 224 * t8507 + 10 * t8509 + 60 * t8511 - 6 + (-202 * t8507 + 107 * t8509 + 11 * t8511 - 25) * t8502) * np.cos((10 * phi1 + 6 * phi2))

        if Bindx == 1194:
            t8523 = np.sin(phi)
            t8521 = t8523 ** 2
            t8513 = np.cos(phi)
            t8514 = t8513 ** 2
            t8515 = t8513 * t8514
            t8518 = t8515 ** 2
            t8516 = t8514 ** 2
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.665e3) * t8521 ** 2 * (-70 * t8514 - 14 * t8515 + 182 * t8518 - 7 + (140 + 11 * t8516) * t8516 + (238 * t8516 + 70 * t8518 - 38) * t8513) * np.sin((10 * phi1 + 7 * phi2)) * ((1 - t8513) ** (-0.1e1 / 0.2e1)) * ((1 + t8513) ** (-0.1e1 / 0.2e1))

        if Bindx == 1195:
            t8524 = np.cos(phi)
            t8525 = t8524 ** 2
            t8527 = t8525 ** 2
            t8528 = t8524 * t8527
            t8533 = t8528 ** 2
            t8531 = t8527 ** 2
            t8526 = t8524 * t8525
            t8529 = t8526 ** 2
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.35e2) * (128 * t8525 + 87 * t8526 - 192 * t8527 - 462 * t8528 - 336 * t8529 + 312 * t8531 + 80 * t8533 + 8 + (78 * t8529 + 233 * t8531 + 11 * t8533 + 53) * t8524) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 1196:
            t8536 = np.cos(phi)
            t8537 = t8536 ** 2
            t8539 = t8537 ** 2
            t8543 = t8539 ** 2
            t8538 = t8536 * t8537
            t8541 = t8538 ** 2
            t8540 = t8536 * t8539
            t8535 = np.sin(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.21e2) * t8535 ** 2 * (-225 * t8537 - 360 * t8538 - 210 * t8539 + 630 * t8541 + 315 * t8543 - 9 + (252 + 11 * t8540) * t8540 + (600 * t8541 + 90 * t8543 - 70) * t8536) * np.sin((10 * phi1 + 9 * phi2)) * ((1 - t8536) ** (-0.1e1 / 0.2e1)) * ((1 + t8536) ** (-0.1e1 / 0.2e1))

        if Bindx == 1197:
            t8546 = np.cos(phi)
            t8547 = t8546 ** 2
            t8549 = t8547 ** 2
            t8550 = t8546 * t8549
            t8555 = t8550 ** 2
            t8553 = t8549 ** 2
            t8548 = t8546 * t8547
            t8551 = t8548 ** 2
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * (-340 * t8547 - 705 * t8548 - 780 * t8549 - 210 * t8550 + 672 * t8551 + 870 * t8553 + 100 * t8555 - 10 + (1110 * t8551 + 395 * t8553 + 11 * t8555 - 89) * t8546) * np.cos((10 * phi1 + 10 * phi2))

        if Bindx == 1198:
            t8557 = np.cos(phi)
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.11e2) * np.sqrt((1 - t8557)) * ((1 + t8557) ** (0.21e2 / 0.2e1)) * np.sin((10 * phi1 + 11 * phi2))

        if Bindx == 1199:
            t8558 = np.cos(phi)
            t8559 = t8558 ** 2
            t8561 = t8559 ** 2
            t8562 = t8558 * t8561
            t8567 = t8562 ** 2
            t8565 = t8561 ** 2
            t8560 = t8558 * t8559
            t8563 = t8560 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.cos((11 * phi1 - 11 * phi2)) * (-55 * t8559 + 165 * t8560 - 330 * t8561 + 462 * t8562 - 462 * t8563 - 165 * t8565 - 11 * t8567 - 1 + (330 * t8563 + 55 * t8565 + t8567 + 11) * t8558)

        if Bindx == 1200:
            t8569 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.11e2) * ((1 - t8569) ** (0.21e2 / 0.2e1)) * np.sqrt((1 + t8569)) * np.sin((11 * phi1 - 10 * phi2))

        if Bindx == 1201:
            t8570 = np.cos(phi)
            t8571 = t8570 ** 2
            t8573 = t8571 ** 2
            t8574 = t8570 * t8573
            t8579 = t8574 ** 2
            t8577 = t8573 ** 2
            t8572 = t8570 * t8571
            t8575 = t8572 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (35 * t8571 - 75 * t8572 + 90 * t8573 - 42 * t8574 - 42 * t8575 - 75 * t8577 - 9 * t8579 + 1 + (90 * t8575 + 35 * t8577 + t8579 - 9) * t8570) * np.cos((11 * phi1 - 9 * phi2))

        if Bindx == 1202:
            t8581 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * ((1 - t8581) ** (0.19e2 / 0.2e1)) * ((1 + t8581) ** (0.3e1 / 0.2e1)) * np.sin((11 * phi1 - 8 * phi2))

        if Bindx == 1203:
            t8582 = np.cos(phi)
            t8583 = t8582 ** 2
            t8585 = t8583 ** 2
            t8586 = t8582 * t8585
            t8591 = t8586 ** 2
            t8589 = t8585 ** 2
            t8584 = t8582 * t8583
            t8587 = t8584 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.7315e4) * np.cos((11 * phi1 - 7 * phi2)) * (-19 * t8583 + 21 * t8584 + 6 * t8585 - 42 * t8586 + 42 * t8587 - 21 * t8589 - 7 * t8591 - 1 + (-6 * t8587 + 19 * t8589 + t8591 + 7) * t8582)

        if Bindx == 1204:
            t8593 = np.cos(phi)
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.1463e4) * ((1 - t8593) ** (0.17e2 / 0.2e1)) * ((1 + t8593) ** (0.5e1 / 0.2e1)) * np.sin((11 * phi1 - 6 * phi2))

        if Bindx == 1205:
            t8594 = np.cos(phi)
            t8595 = t8594 ** 2
            t8597 = t8595 ** 2
            t8598 = t8594 * t8597
            t8603 = t8598 ** 2
            t8601 = t8597 ** 2
            t8596 = t8594 * t8595
            t8599 = t8596 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.74613e5) * np.cos((11 * phi1 - 5 * phi2)) * (7 * t8595 + 5 * t8596 - 22 * t8597 + 14 * t8598 + 14 * t8599 + 5 * t8601 - 5 * t8603 + 1 + (-22 * t8599 + 7 * t8601 + t8603 - 5) * t8594)

        if Bindx == 1206:
            t8605 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * ((1 - t8605) ** (0.15e2 / 0.2e1)) * ((1 + t8605) ** (0.7e1 / 0.2e1)) * np.sin((11 * phi1 - 4 * phi2))

        if Bindx == 1207:
            t8606 = np.cos(phi)
            t8607 = t8606 ** 2
            t8609 = t8607 ** 2
            t8610 = t8606 * t8609
            t8615 = t8610 ** 2
            t8613 = t8609 ** 2
            t8608 = t8606 * t8607
            t8611 = t8608 ** 2
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.17765e5) * np.cos((11 * phi1 - 3 * phi2)) * (t8607 - 11 * t8608 + 6 * t8609 + 14 * t8610 - 14 * t8611 + 11 * t8613 - 3 * t8615 - 1 + (-6 * t8611 - t8613 + t8615 + 3) * t8606)

        if Bindx == 1208:
            t8617 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.124355e6) * ((1 - t8617) ** (0.13e2 / 0.2e1)) * ((1 + t8617) ** (0.9e1 / 0.2e1)) * np.sin((11 * phi1 - 2 * phi2))

        if Bindx == 1209:
            t8618 = np.cos(phi)
            t8619 = t8618 ** 2
            t8620 = t8618 * t8619
            t8621 = t8619 ** 2
            t8622 = t8618 * t8621
            t8629 = 10 * t8620 ** 2 - 5 * t8621 ** 2 + t8622 ** 2 - 1
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.323323e6) * np.cos((11 * phi1 - phi2)) * (t8629 * t8618 - 5 * t8619 + 5 * t8620 + 10 * t8621 - 10 * t8622 - t8629)

        if Bindx == 1210:
            t8630 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.88179e5) * ((1 - t8630) ** (0.11e2 / 0.2e1)) * ((1 + t8630) ** (0.11e2 / 0.2e1)) * np.sin((11 * phi1))

        if Bindx == 1211:
            t8631 = np.cos(phi)
            t8632 = t8631 ** 2
            t8633 = t8631 * t8632
            t8634 = t8632 ** 2
            t8635 = t8631 * t8634
            t8644 = 10 * t8633 ** 2 - 5 * t8634 ** 2 + t8635 ** 2 - 1
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.323323e6) * np.cos((11 * phi1 + phi2)) * (t8631 * t8644 + 5 * t8632 + 5 * t8633 - 10 * t8634 - 10 * t8635 + t8644)

        if Bindx == 1212:
            t8645 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.124355e6) * ((1 - t8645) ** (0.9e1 / 0.2e1)) * ((1 + t8645) ** (0.13e2 / 0.2e1)) * np.sin((11 * phi1 + 2 * phi2))

        if Bindx == 1213:
            t8646 = np.cos(phi)
            t8647 = t8646 ** 2
            t8649 = t8647 ** 2
            t8650 = t8646 * t8649
            t8655 = t8650 ** 2
            t8653 = t8649 ** 2
            t8648 = t8646 * t8647
            t8651 = t8648 ** 2
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.17765e5) * np.cos((11 * phi1 + 3 * phi2)) * (-t8647 - 11 * t8648 - 6 * t8649 + 14 * t8650 + 14 * t8651 - 11 * t8653 + 3 * t8655 + 1 + (-6 * t8651 - t8653 + t8655 + 3) * t8646)

        if Bindx == 1214:
            t8657 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * ((1 - t8657) ** (0.7e1 / 0.2e1)) * ((1 + t8657) ** (0.15e2 / 0.2e1)) * np.sin((11 * phi1 + 4 * phi2))

        if Bindx == 1215:
            t8658 = np.cos(phi)
            t8659 = t8658 ** 2
            t8661 = t8659 ** 2
            t8662 = t8658 * t8661
            t8667 = t8662 ** 2
            t8665 = t8661 ** 2
            t8660 = t8658 * t8659
            t8663 = t8660 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.74613e5) * np.cos((11 * phi1 + 5 * phi2)) * (-7 * t8659 + 5 * t8660 + 22 * t8661 + 14 * t8662 - 14 * t8663 - 5 * t8665 + 5 * t8667 - 1 + (-22 * t8663 + 7 * t8665 + t8667 - 5) * t8658)

        if Bindx == 1216:
            t8669 = np.cos(phi)
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.1463e4) * ((1 - t8669) ** (0.5e1 / 0.2e1)) * ((1 + t8669) ** (0.17e2 / 0.2e1)) * np.sin((11 * phi1 + 6 * phi2))

        if Bindx == 1217:
            t8670 = np.cos(phi)
            t8671 = t8670 ** 2
            t8673 = t8671 ** 2
            t8674 = t8670 * t8673
            t8679 = t8674 ** 2
            t8677 = t8673 ** 2
            t8672 = t8670 * t8671
            t8675 = t8672 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.7315e4) * np.cos((11 * phi1 + 7 * phi2)) * (19 * t8671 + 21 * t8672 - 6 * t8673 - 42 * t8674 - 42 * t8675 + 21 * t8677 + 7 * t8679 + 1 + (-6 * t8675 + 19 * t8677 + t8679 + 7) * t8670)

        if Bindx == 1218:
            t8681 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * ((1 - t8681) ** (0.3e1 / 0.2e1)) * ((1 + t8681) ** (0.19e2 / 0.2e1)) * np.sin((11 * phi1 + 8 * phi2))

        if Bindx == 1219:
            t8682 = np.cos(phi)
            t8683 = t8682 ** 2
            t8685 = t8683 ** 2
            t8686 = t8682 * t8685
            t8691 = t8686 ** 2
            t8689 = t8685 ** 2
            t8684 = t8682 * t8683
            t8687 = t8684 ** 2
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (-35 * t8683 - 75 * t8684 - 90 * t8685 - 42 * t8686 + 42 * t8687 + 75 * t8689 + 9 * t8691 - 1 + (90 * t8687 + 35 * t8689 + t8691 - 9) * t8682) * np.cos((11 * phi1 + 9 * phi2))

        if Bindx == 1220:
            t8693 = np.cos(phi)
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.11e2) * ((1 + t8693) ** (0.21e2 / 0.2e1)) * np.sin((11 * phi1 + 10 * phi2)) * np.sqrt((1 - t8693))

        if Bindx == 1221:
            t8694 = np.cos(phi)
            t8695 = t8694 ** 2
            t8697 = t8695 ** 2
            t8698 = t8694 * t8697
            t8703 = t8698 ** 2
            t8701 = t8697 ** 2
            t8696 = t8694 * t8695
            t8699 = t8696 ** 2
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.2e1) * np.cos((11 * phi1 + 11 * phi2)) * (55 * t8695 + 165 * t8696 + 330 * t8697 + 462 * t8698 + 462 * t8699 + 165 * t8701 + 11 * t8703 + 1 + (330 * t8699 + 55 * t8701 + t8703 + 11) * t8694)

        if Bindx == 1222:
            t8705 = np.cos(phi)
            t8706 = t8705 ** 2
            t8712 = -6 * t8706
            t8707 = t8706 ** 2
            t8708 = t8706 * t8707
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t8712 + 1 + (-20 + t8708) * t8708 + (15 + (t8712 + 15) * t8707) * t8707)

        if Bindx == 1223:
            t8718 = np.sin(phi)
            t8714 = t8718 ** 2
            t8715 = t8718 * t8714
            t8716 = t8715 ** 2
            t8713 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t8713 * t8716 ** 2 * np.sin((11 * phi2)) * ((1 + t8713) ** (-0.1e1 / 0.2e1)) * ((1 - t8713) ** (-0.1e1 / 0.2e1))

        if Bindx == 1224:
            t8719 = np.cos(phi)
            t8720 = t8719 ** 2
            t8721 = t8720 ** 2
            t8723 = t8721 ** 2
            t8722 = t8720 * t8721
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t8721 + 235 * t8723 + 1 + (-240 + 23 * t8722) * t8722 + (-116 * t8723 - 28) * t8720) * np.cos((10 * phi2))

        if Bindx == 1225:
            t8731 = np.sin(phi)
            t8727 = t8731 ** 2
            t8729 = t8731 * t8727 ** 2
            t8726 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t8726 * t8729 ** 2 * (23 * t8726 ** 2 - 3) * np.sin((9 * phi2)) * ((1 + t8726) ** (-0.1e1 / 0.2e1)) * ((1 - t8726) ** (-0.1e1 / 0.2e1))

        if Bindx == 1226:
            t8732 = np.cos(phi)
            t8733 = t8732 ** 2
            t8734 = t8733 ** 2
            t8736 = t8734 ** 2
            t8735 = t8733 * t8734
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t8734 + 1135 * t8736 + 1 + (-900 + 161 * t8735) * t8735 + (-686 * t8736 - 46) * t8733) * np.cos((8 * phi2))

        if Bindx == 1227:
            t8745 = np.sin(phi)
            t8742 = t8745 ** 2
            t8743 = t8742 ** 2
            t8739 = np.cos(phi)
            t8740 = t8739 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t8739 * t8743 ** 2 * (5 + (-70 + 161 * t8740) * t8740) * np.sin((7 * phi2)) * ((1 + t8739) ** (-0.1e1 / 0.2e1)) * ((1 - t8739) ** (-0.1e1 / 0.2e1))

        if Bindx == 1228:
            t8746 = np.cos(phi)
            t8747 = t8746 ** 2
            t8748 = t8747 ** 2
            t8750 = t8748 ** 2
            t8749 = t8747 * t8748
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t8748 + 15447 * t8750 + 5 + (-9904 + 3059 * t8749) * t8749 + (-11172 * t8750 - 300) * t8747) * np.cos((6 * phi2))

        if Bindx == 1229:
            t8760 = np.sin(phi)
            t8757 = t8760 ** 2
            t8758 = t8760 * t8757
            t8753 = np.cos(phi)
            t8754 = t8753 ** 2
            t8755 = t8754 ** 2
            tfunc[..., c] = 0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t8753 * t8758 ** 2 * (-399 * t8755 - 5 + (437 * t8755 + 95) * t8754) * np.sin((5 * phi2)) * ((1 + t8753) ** (-0.1e1 / 0.2e1)) * ((1 - t8753) ** (-0.1e1 / 0.2e1))

        if Bindx == 1230:
            t8761 = np.cos(phi)
            t8762 = t8761 ** 2
            t8763 = t8762 ** 2
            t8765 = t8763 ** 2
            t8764 = t8762 * t8763
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t8763 + 28747 * t8765 + 5 + (-15844 + 7429 * t8764) * t8764 + (-23902 * t8765 - 350) * t8762) * np.cos((4 * phi2))

        if Bindx == 1231:
            t8775 = np.sin(phi)
            t8773 = t8775 ** 2
            t8768 = np.cos(phi)
            t8769 = t8768 ** 2
            t8770 = t8769 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t8768 * t8773 ** 2 * (-1020 * t8769 + 45 + (-11628 * t8769 + 5814 + 7429 * t8770) * t8770) * np.sin((3 * phi2)) * ((1 + t8768) ** (-0.1e1 / 0.2e1)) * ((1 - t8768) ** (-0.1e1 / 0.2e1))

        if Bindx == 1232:
            t8776 = np.cos(phi)
            t8777 = t8776 ** 2
            t8778 = t8777 ** 2
            t8780 = t8778 ** 2
            t8779 = t8777 * t8778
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t8778 + 24225 * t8780 + 3 + (-12240 + 7429 * t8779) * t8779 + (-21964 * t8780 - 228) * t8777) * np.cos((2 * phi2))

        if Bindx == 1233:
            t8784 = np.cos(phi)
            t8785 = t8784 ** 2
            t8786 = t8785 ** 2
            t8788 = t8786 ** 2
            t8783 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t8784 * t8783 ** 2 * (-39270 * t8786 - 124355 * t8788 - 231 + (106590 * t8786 + 52003 * t8788 + 5775) * t8785) * np.sin(phi2) * ((1 + t8784) ** (-0.1e1 / 0.2e1)) * ((1 - t8784) ** (-0.1e1 / 0.2e1))

        if Bindx == 1234:
            t8790 = np.cos(phi)
            t8791 = t8790 ** 2
            t8792 = t8791 ** 2
            t8794 = t8792 ** 2
            t8793 = t8791 * t8792
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t8794 + 0.5630625e7 / 0.1024e4 * t8792 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t8793) * t8793 + (-0.24249225e8 / 0.512e3 * t8794 - 0.225225e6 / 0.512e3) * t8791

        if Bindx == 1235:
            t8798 = np.cos(phi)
            t8799 = t8798 ** 2
            t8800 = t8799 ** 2
            t8802 = t8800 ** 2
            t8797 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t8798 * t8797 ** 2 * (-39270 * t8800 - 124355 * t8802 - 231 + (106590 * t8800 + 52003 * t8802 + 5775) * t8799) * np.sin(phi2) * ((1 + t8798) ** (-0.1e1 / 0.2e1)) * ((1 - t8798) ** (-0.1e1 / 0.2e1))

        if Bindx == 1236:
            t8804 = np.cos(phi)
            t8805 = t8804 ** 2
            t8806 = t8805 ** 2
            t8808 = t8806 ** 2
            t8807 = t8805 * t8806
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t8806 + 24225 * t8808 + 3 + (-12240 + 7429 * t8807) * t8807 + (-21964 * t8808 - 228) * t8805) * np.cos((2 * phi2))

        if Bindx == 1237:
            t8818 = np.sin(phi)
            t8816 = t8818 ** 2
            t8811 = np.cos(phi)
            t8812 = t8811 ** 2
            t8813 = t8812 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t8811 * t8816 ** 2 * (-1020 * t8812 + 45 + (-11628 * t8812 + 5814 + 7429 * t8813) * t8813) * np.sin((3 * phi2)) * ((1 + t8811) ** (-0.1e1 / 0.2e1)) * ((1 - t8811) ** (-0.1e1 / 0.2e1))

        if Bindx == 1238:
            t8819 = np.cos(phi)
            t8820 = t8819 ** 2
            t8821 = t8820 ** 2
            t8823 = t8821 ** 2
            t8822 = t8820 * t8821
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t8821 + 28747 * t8823 + 5 + (-15844 + 7429 * t8822) * t8822 + (-23902 * t8823 - 350) * t8820) * np.cos((4 * phi2))

        if Bindx == 1239:
            t8833 = np.sin(phi)
            t8830 = t8833 ** 2
            t8831 = t8833 * t8830
            t8826 = np.cos(phi)
            t8827 = t8826 ** 2
            t8828 = t8827 ** 2
            tfunc[..., c] = 0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t8826 * t8831 ** 2 * (-399 * t8828 - 5 + (437 * t8828 + 95) * t8827) * np.sin((5 * phi2)) * ((1 + t8826) ** (-0.1e1 / 0.2e1)) * ((1 - t8826) ** (-0.1e1 / 0.2e1))

        if Bindx == 1240:
            t8834 = np.cos(phi)
            t8835 = t8834 ** 2
            t8836 = t8835 ** 2
            t8838 = t8836 ** 2
            t8837 = t8835 * t8836
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t8836 + 15447 * t8838 + 5 + (-9904 + 3059 * t8837) * t8837 + (-11172 * t8838 - 300) * t8835) * np.cos((6 * phi2))

        if Bindx == 1241:
            t8847 = np.sin(phi)
            t8844 = t8847 ** 2
            t8845 = t8844 ** 2
            t8841 = np.cos(phi)
            t8842 = t8841 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t8841 * t8845 ** 2 * (5 + (-70 + 161 * t8842) * t8842) * np.sin((7 * phi2)) * ((1 + t8841) ** (-0.1e1 / 0.2e1)) * ((1 - t8841) ** (-0.1e1 / 0.2e1))

        if Bindx == 1242:
            t8848 = np.cos(phi)
            t8849 = t8848 ** 2
            t8850 = t8849 ** 2
            t8852 = t8850 ** 2
            t8851 = t8849 * t8850
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t8850 + 1135 * t8852 + 1 + (-900 + 161 * t8851) * t8851 + (-686 * t8852 - 46) * t8849) * np.cos((8 * phi2))

        if Bindx == 1243:
            t8860 = np.sin(phi)
            t8856 = t8860 ** 2
            t8858 = t8860 * t8856 ** 2
            t8855 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t8855 * t8858 ** 2 * (23 * t8855 ** 2 - 3) * np.sin((9 * phi2)) * ((1 + t8855) ** (-0.1e1 / 0.2e1)) * ((1 - t8855) ** (-0.1e1 / 0.2e1))

        if Bindx == 1244:
            t8861 = np.cos(phi)
            t8862 = t8861 ** 2
            t8863 = t8862 ** 2
            t8865 = t8863 ** 2
            t8864 = t8862 * t8863
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t8863 + 235 * t8865 + 1 + (-240 + 23 * t8864) * t8864 + (-116 * t8865 - 28) * t8862) * np.cos((10 * phi2))

        if Bindx == 1245:
            t8873 = np.sin(phi)
            t8869 = t8873 ** 2
            t8870 = t8873 * t8869
            t8871 = t8870 ** 2
            t8868 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t8868 * t8871 ** 2 * np.sin((11 * phi2)) * ((1 + t8868) ** (-0.1e1 / 0.2e1)) * ((1 - t8868) ** (-0.1e1 / 0.2e1))

        if Bindx == 1246:
            t8874 = np.cos(phi)
            t8875 = t8874 ** 2
            t8881 = -6 * t8875
            t8876 = t8875 ** 2
            t8877 = t8875 * t8876
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t8881 + 1 + (-20 + t8877) * t8877 + (15 + (t8881 + 15) * t8876) * t8876)

        if Bindx == 1247:
            t8882 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * ((1 - t8882) ** (0.13e2 / 0.2e1)) * ((1 + t8882) ** (0.11e2 / 0.2e1)) * np.sin((phi1 - 12 * phi2))

        if Bindx == 1248:
            t8883 = np.cos(phi)
            t8884 = t8883 ** 2
            t8886 = t8884 ** 2
            t8887 = t8883 * t8886
            t8892 = t8887 ** 2
            t8890 = t8886 ** 2
            t8885 = t8883 * t8884
            t8888 = t8885 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.52003e5) * (-17 * t8884 - 55 * t8885 + 70 * t8886 + 110 * t8887 + 125 * t8890 - 61 * t8892 + 1 + (-130 + 12 * t8888) * t8888 + (-110 * t8888 + 55 * t8890 - 11 * t8892 + 11) * t8883) * np.cos((phi1 - 11 * phi2))

        if Bindx == 1249:
            t8902 = np.sin(phi)
            t8898 = t8902 ** 2
            t8900 = t8902 * t8898 ** 2
            t8895 = np.cos(phi)
            t8896 = t8895 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t8900 ** 2 * (-115 * t8896 + 5 + (138 * t8896 - 28) * t8895) * np.sin((phi1 - 10 * phi2)) * ((1 + t8895) ** (-0.1e1 / 0.2e1)) * ((1 - t8895) ** (-0.1e1 / 0.2e1))

        if Bindx == 1250:
            t8903 = np.cos(phi)
            t8904 = t8903 ** 2
            t8906 = t8904 ** 2
            t8907 = t8903 * t8906
            t8912 = t8907 ** 2
            t8910 = t8906 ** 2
            t8905 = t8903 * t8904
            t8908 = t8905 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.74613e5) * (-37 * t8904 - 105 * t8905 + 230 * t8906 + 330 * t8907 + 685 * t8910 - 401 * t8912 + 1 + (-570 + 92 * t8908) * t8908 + (-450 * t8908 + 285 * t8910 - 69 * t8912 + 9) * t8903) * np.cos((phi1 - 9 * phi2))

        if Bindx == 1251:
            t8923 = np.sin(phi)
            t8920 = t8923 ** 2
            t8921 = t8920 ** 2
            t8915 = np.cos(phi)
            t8916 = t8915 ** 2
            t8918 = t8916 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * t8921 ** 2 * (84 * t8916 - 322 * t8918 - 2 + (-266 * t8916 + 483 * t8918 + 23) * t8915) * np.sin((phi1 - 8 * phi2)) * ((1 + t8915) ** (-0.1e1 / 0.2e1)) * ((1 - t8915) ** (-0.1e1 / 0.2e1))

        if Bindx == 1252:
            t8924 = np.cos(phi)
            t8925 = t8924 ** 2
            t8927 = t8925 ** 2
            t8928 = t8924 * t8927
            t8933 = t8928 ** 2
            t8931 = t8927 ** 2
            t8926 = t8924 * t8925
            t8929 = t8926 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.3553e4) * (-265 * t8925 - 595 * t8926 + 2270 * t8927 + 2702 * t8928 + 10561 * t8931 - 7301 * t8933 + 5 + (-7202 + 1932 * t8929) * t8929 + (-4886 * t8929 + 3871 * t8931 - 1127 * t8933 + 35) * t8924) * np.cos((phi1 - 7 * phi2))

        if Bindx == 1253:
            t8946 = np.sin(phi)
            t8943 = t8946 ** 2
            t8944 = t8946 * t8943
            t8936 = np.cos(phi)
            t8937 = t8936 ** 2
            t8938 = t8936 * t8937
            t8941 = t8938 ** 2
            t8939 = t8937 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.561e3) * t8944 ** 2 * (-285 * t8937 + 1710 * t8938 + 1995 * t8939 - 3059 * t8941 + 5 + (-6384 * t8939 + 6118 * t8941 - 100) * t8936) * np.sin((phi1 - 6 * phi2)) * ((1 + t8936) ** (-0.1e1 / 0.2e1)) * ((1 - t8936) ** (-0.1e1 / 0.2e1))

        if Bindx == 1254:
            t8947 = np.cos(phi)
            t8948 = t8947 ** 2
            t8950 = t8948 ** 2
            t8951 = t8947 * t8950
            t8956 = t8951 ** 2
            t8954 = t8950 ** 2
            t8949 = t8947 * t8948
            t8952 = t8949 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3927e4) * (-325 * t8948 - 525 * t8949 + 3390 * t8950 + 2970 * t8951 + 22097 * t8954 - 17537 * t8956 + 5 + (-12874 + 5244 * t8952) * t8952 + (-6650 * t8952 + 6365 * t8954 - 2185 * t8956 + 25) * t8947) * np.cos((phi1 - 5 * phi2))

        if Bindx == 1255:
            t8970 = np.sin(phi)
            t8968 = t8970 ** 2
            t8959 = np.cos(phi)
            t8960 = t8959 ** 2
            t8962 = t8960 ** 2
            t8966 = t8962 ** 2
            t8961 = t8959 * t8960
            t8964 = t8961 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * t8968 ** 2 * (340 * t8960 - 3740 * t8961 - 3230 * t8962 + 9044 * t8964 - 7429 * t8966 - 5 + (20026 * t8962 - 37468 * t8964 + 22287 * t8966 + 175) * t8959) * np.sin((phi1 - 4 * phi2)) * ((1 + t8959) ** (-0.1e1 / 0.2e1)) * ((1 - t8959) ** (-0.1e1 / 0.2e1))

        if Bindx == 1256:
            t8971 = np.cos(phi)
            t8972 = t8971 ** 2
            t8974 = t8972 ** 2
            t8975 = t8971 * t8974
            t8980 = t8975 ** 2
            t8978 = t8974 ** 2
            t8973 = t8971 * t8972
            t8976 = t8973 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (-1095 * t8972 - 1065 * t8973 + 12810 * t8974 + 6834 * t8975 + 103683 * t8978 - 90763 * t8980 + 15 + (-54366 + 29716 * t8976) * t8976 + (-17442 * t8976 + 19057 * t8978 - 7429 * t8980 + 45) * t8971) * np.cos((phi1 - 3 * phi2))

        if Bindx == 1257:
            t8984 = np.cos(phi)
            t8985 = t8984 ** 2
            t8987 = t8985 ** 2
            t8988 = t8984 * t8987
            t8993 = t8988 ** 2
            t8991 = t8987 ** 2
            t8986 = t8984 * t8985
            t8989 = t8986 ** 2
            t8983 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.77e2) * t8983 ** 2 * (-225 * t8985 + 5550 * t8986 + 2550 * t8987 - 36720 * t8988 - 9690 * t8989 + 14535 * t8991 - 7429 * t8993 + 3 + (96900 * t8989 - 109820 * t8991 + 44574 * t8993 - 228) * t8984) * np.sin((phi1 - 2 * phi2)) * ((1 + t8984) ** (-0.1e1 / 0.2e1)) * ((1 - t8984) ** (-0.1e1 / 0.2e1))

        if Bindx == 1258:
            t8995 = np.cos(phi)
            t8996 = t8995 ** 2
            t8998 = t8996 ** 2
            t8999 = t8995 * t8998
            t9004 = t8999 ** 2
            t9002 = t8998 ** 2
            t8997 = t8995 * t8996
            t9000 = t8997 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (-17787 * t8996 - 5775 * t8997 + 219450 * t8998 + 39270 * t8999 + 1971915 * t9002 - 1815583 * t9004 + 231 + (-981750 + 624036 * t9000) * t9000 + (-106590 * t9000 + 124355 * t9002 - 52003 * t9004 + 231) * t8995) * np.cos(phi1 - phi2)

        if Bindx == 1259:
            t9008 = np.cos(phi)
            t9009 = t9008 ** 2
            t9010 = t9009 ** 2
            t9012 = t9010 ** 2
            t9007 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t9008 * t9007 ** 2 * (-39270 * t9010 - 124355 * t9012 - 231 + (106590 * t9010 + 52003 * t9012 + 5775) * t9009) * np.sin(phi1) * ((1 + t9008) ** (-0.1e1 / 0.2e1)) * ((1 - t9008) ** (-0.1e1 / 0.2e1))

        if Bindx == 1260:
            t9014 = np.cos(phi)
            t9015 = t9014 ** 2
            t9017 = t9015 ** 2
            t9018 = t9014 * t9017
            t9023 = t9018 ** 2
            t9021 = t9017 ** 2
            t9016 = t9014 * t9015
            t9019 = t9016 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (-17787 * t9015 + 5775 * t9016 + 219450 * t9017 - 39270 * t9018 + 1971915 * t9021 - 1815583 * t9023 + 231 + (-981750 + 624036 * t9019) * t9019 + (106590 * t9019 - 124355 * t9021 + 52003 * t9023 - 231) * t9014) * np.cos(phi1 + phi2)

        if Bindx == 1261:
            t9027 = np.cos(phi)
            t9028 = t9027 ** 2
            t9030 = t9028 ** 2
            t9031 = t9027 * t9030
            t9036 = t9031 ** 2
            t9034 = t9030 ** 2
            t9029 = t9027 * t9028
            t9032 = t9029 ** 2
            t9026 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.77e2) * t9026 ** 2 * (225 * t9028 + 5550 * t9029 - 2550 * t9030 - 36720 * t9031 + 9690 * t9032 - 14535 * t9034 + 7429 * t9036 - 3 + (96900 * t9032 - 109820 * t9034 + 44574 * t9036 - 228) * t9027) * np.sin((phi1 + 2 * phi2)) * ((1 + t9027) ** (-0.1e1 / 0.2e1)) * ((1 - t9027) ** (-0.1e1 / 0.2e1))

        if Bindx == 1262:
            t9038 = np.cos(phi)
            t9039 = t9038 ** 2
            t9041 = t9039 ** 2
            t9042 = t9038 * t9041
            t9047 = t9042 ** 2
            t9045 = t9041 ** 2
            t9040 = t9038 * t9039
            t9043 = t9040 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (-1095 * t9039 + 1065 * t9040 + 12810 * t9041 - 6834 * t9042 + 103683 * t9045 - 90763 * t9047 + 15 + (-54366 + 29716 * t9043) * t9043 + (17442 * t9043 - 19057 * t9045 + 7429 * t9047 - 45) * t9038) * np.cos((phi1 + 3 * phi2))

        if Bindx == 1263:
            t9061 = np.sin(phi)
            t9059 = t9061 ** 2
            t9050 = np.cos(phi)
            t9051 = t9050 ** 2
            t9053 = t9051 ** 2
            t9057 = t9053 ** 2
            t9052 = t9050 * t9051
            t9055 = t9052 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * t9059 ** 2 * (-340 * t9051 - 3740 * t9052 + 3230 * t9053 - 9044 * t9055 + 7429 * t9057 + 5 + (20026 * t9053 - 37468 * t9055 + 22287 * t9057 + 175) * t9050) * np.sin((phi1 + 4 * phi2)) * ((1 + t9050) ** (-0.1e1 / 0.2e1)) * ((1 - t9050) ** (-0.1e1 / 0.2e1))

        if Bindx == 1264:
            t9062 = np.cos(phi)
            t9063 = t9062 ** 2
            t9065 = t9063 ** 2
            t9066 = t9062 * t9065
            t9071 = t9066 ** 2
            t9069 = t9065 ** 2
            t9064 = t9062 * t9063
            t9067 = t9064 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.3927e4) * (-325 * t9063 + 525 * t9064 + 3390 * t9065 - 2970 * t9066 + 22097 * t9069 - 17537 * t9071 + 5 + (-12874 + 5244 * t9067) * t9067 + (6650 * t9067 - 6365 * t9069 + 2185 * t9071 - 25) * t9062) * np.cos((phi1 + 5 * phi2))

        if Bindx == 1265:
            t9084 = np.sin(phi)
            t9081 = t9084 ** 2
            t9082 = t9084 * t9081
            t9074 = np.cos(phi)
            t9075 = t9074 ** 2
            t9076 = t9074 * t9075
            t9079 = t9076 ** 2
            t9077 = t9075 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.561e3) * t9082 ** 2 * (285 * t9075 + 1710 * t9076 - 1995 * t9077 + 3059 * t9079 - 5 + (-6384 * t9077 + 6118 * t9079 - 100) * t9074) * np.sin((phi1 + 6 * phi2)) * ((1 + t9074) ** (-0.1e1 / 0.2e1)) * ((1 - t9074) ** (-0.1e1 / 0.2e1))

        if Bindx == 1266:
            t9085 = np.cos(phi)
            t9086 = t9085 ** 2
            t9088 = t9086 ** 2
            t9089 = t9085 * t9088
            t9094 = t9089 ** 2
            t9092 = t9088 ** 2
            t9087 = t9085 * t9086
            t9090 = t9087 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3553e4) * (-265 * t9086 + 595 * t9087 + 2270 * t9088 - 2702 * t9089 + 10561 * t9092 - 7301 * t9094 + 5 + (-7202 + 1932 * t9090) * t9090 + (4886 * t9090 - 3871 * t9092 + 1127 * t9094 - 35) * t9085) * np.cos((phi1 + 7 * phi2))

        if Bindx == 1267:
            t9105 = np.sin(phi)
            t9102 = t9105 ** 2
            t9103 = t9102 ** 2
            t9097 = np.cos(phi)
            t9098 = t9097 ** 2
            t9100 = t9098 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * t9103 ** 2 * (-84 * t9098 + 322 * t9100 + 2 + (-266 * t9098 + 483 * t9100 + 23) * t9097) * np.sin((phi1 + 8 * phi2)) * ((1 + t9097) ** (-0.1e1 / 0.2e1)) * ((1 - t9097) ** (-0.1e1 / 0.2e1))

        if Bindx == 1268:
            t9106 = np.cos(phi)
            t9107 = t9106 ** 2
            t9109 = t9107 ** 2
            t9110 = t9106 * t9109
            t9115 = t9110 ** 2
            t9113 = t9109 ** 2
            t9108 = t9106 * t9107
            t9111 = t9108 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.74613e5) * (-37 * t9107 + 105 * t9108 + 230 * t9109 - 330 * t9110 + 685 * t9113 - 401 * t9115 + 1 + (-570 + 92 * t9111) * t9111 + (450 * t9111 - 285 * t9113 + 69 * t9115 - 9) * t9106) * np.cos((phi1 + 9 * phi2))

        if Bindx == 1269:
            t9125 = np.sin(phi)
            t9121 = t9125 ** 2
            t9123 = t9125 * t9121 ** 2
            t9118 = np.cos(phi)
            t9119 = t9118 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t9123 ** 2 * (115 * t9119 - 5 + (138 * t9119 - 28) * t9118) * np.sin((phi1 + 10 * phi2)) * ((1 + t9118) ** (-0.1e1 / 0.2e1)) * ((1 - t9118) ** (-0.1e1 / 0.2e1))

        if Bindx == 1270:
            t9126 = np.cos(phi)
            t9127 = t9126 ** 2
            t9129 = t9127 ** 2
            t9130 = t9126 * t9129
            t9135 = t9130 ** 2
            t9133 = t9129 ** 2
            t9128 = t9126 * t9127
            t9131 = t9128 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.52003e5) * (-17 * t9127 + 55 * t9128 + 70 * t9129 - 110 * t9130 + 125 * t9133 - 61 * t9135 + 1 + (-130 + 12 * t9131) * t9131 + (110 * t9131 - 55 * t9133 + 11 * t9135 - 11) * t9126) * np.cos((phi1 + 11 * phi2))

        if Bindx == 1271:
            t9138 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * ((1 - t9138) ** (0.11e2 / 0.2e1)) * ((1 + t9138) ** (0.13e2 / 0.2e1)) * np.sin((phi1 + 12 * phi2))

        if Bindx == 1272:
            t9139 = np.cos(phi)
            t9140 = t9139 ** 2
            t9142 = t9140 ** 2
            t9143 = t9139 * t9142
            t9147 = t9143 ** 2
            t9148 = t9139 * t9147
            t9145 = t9142 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * np.cos((2 * phi1 - 12 * phi2)) * (-5 * t9142 + 20 * t9143 + 5 * t9145 - 4 * t9147 - 2 * t9148 - 1 + (-20 * t9143 + 4) * t9140 + (-10 * t9140 + 10 * t9145 + t9148 + 2) * t9139)

        if Bindx == 1273:
            t9157 = np.sin(phi)
            t9153 = t9157 ** 2
            t9155 = t9157 * t9153 ** 2
            t9150 = np.cos(phi)
            t9151 = t9150 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * t9155 ** 2 * (-11 * t9151 + 1 + (6 * t9151 + 4) * t9150) * np.sin((2 * phi1 - 11 * phi2)) * ((1 + t9150) ** (-0.1e1 / 0.2e1)) * ((1 - t9150) ** (-0.1e1 / 0.2e1))

        if Bindx == 1274:
            t9158 = np.cos(phi)
            t9159 = t9158 ** 2
            t9161 = t9159 ** 2
            t9162 = t9158 * t9161
            t9167 = t9162 ** 2
            t9165 = t9161 ** 2
            t9160 = t9158 * t9159
            t9163 = t9160 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * (26 * t9159 - 215 * t9160 - 25 * t9161 + 610 * t9162 + 325 * t9165 - 254 * t9167 - 1 + (-140 + 69 * t9163) * t9163 + (-790 * t9163 + 485 * t9165 - 115 * t9167 + 25) * t9158) * np.cos((2 * phi1 - 10 * phi2))

        if Bindx == 1275:
            t9178 = np.sin(phi)
            t9175 = t9178 ** 2
            t9176 = t9175 ** 2
            t9170 = np.cos(phi)
            t9171 = t9170 ** 2
            t9173 = t9171 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t9176 ** 2 * (288 * t9171 - 759 * t9173 - 9 + (-22 * t9171 + 506 * t9173 - 4) * t9170) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t9170) ** (-0.1e1 / 0.2e1)) * ((1 - t9170) ** (-0.1e1 / 0.2e1))

        if Bindx == 1276:
            t9179 = np.cos(phi)
            t9180 = t9179 ** 2
            t9182 = t9180 ** 2
            t9183 = t9179 * t9182
            t9188 = t9183 ** 2
            t9186 = t9182 ** 2
            t9181 = t9179 * t9180
            t9184 = t9181 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * (-44 * t9180 - 740 * t9181 + 445 * t9182 + 2920 * t9183 + 3275 * t9186 - 2596 * t9188 + 1 + (-1840 + 759 * t9184) * t9184 + (-4840 * t9184 + 3620 * t9186 - 1012 * t9188 + 52) * t9179) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 1277:
            t9201 = np.sin(phi)
            t9198 = t9201 ** 2
            t9199 = t9201 * t9198
            t9191 = np.cos(phi)
            t9192 = t9191 ** 2
            t9193 = t9191 * t9192
            t9196 = t9193 ** 2
            t9194 = t9192 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t9199 ** 2 * (-245 * t9192 + 310 * t9193 + 1435 * t9194 - 1771 * t9196 + 5 + (-1232 * t9194 + 1518 * t9196 - 20) * t9191) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t9191) ** (-0.1e1 / 0.2e1)) * ((1 - t9191) ** (-0.1e1 / 0.2e1))

        if Bindx == 1278:
            t9202 = np.cos(phi)
            t9203 = t9202 ** 2
            t9205 = t9203 ** 2
            t9206 = t9202 * t9205
            t9211 = t9206 ** 2
            t9209 = t9205 ** 2
            t9204 = t9202 * t9203
            t9207 = t9204 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.357e3) * (-290 * t9203 - 1595 * t9204 + 2845 * t9205 + 8122 * t9206 + 18791 * t9209 - 15466 * t9211 + 5 + (-10692 + 4807 * t9207) * t9207 + (-16606 * t9207 + 14801 * t9209 - 4807 * t9211 + 85) * t9202) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 1279:
            t9225 = np.sin(phi)
            t9223 = t9225 ** 2
            t9214 = np.cos(phi)
            t9215 = t9214 ** 2
            t9217 = t9215 ** 2
            t9221 = t9217 ** 2
            t9216 = t9214 * t9215
            t9219 = t9216 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t9223 ** 2 * (1550 * t9215 - 5110 * t9216 - 13300 * t9217 + 33250 * t9219 - 24035 * t9221 - 25 + (25802 * t9217 - 47234 * t9219 + 28842 * t9221 + 260) * t9214) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t9214) ** (-0.1e1 / 0.2e1)) * ((1 - t9214) ** (-0.1e1 / 0.2e1))

        if Bindx == 1280:
            t9226 = np.cos(phi)
            t9227 = t9226 ** 2
            t9229 = t9227 ** 2
            t9230 = t9226 * t9229
            t9235 = t9230 ** 2
            t9233 = t9229 ** 2
            t9228 = t9226 * t9227
            t9231 = t9228 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * (-10540 * t9227 - 30630 * t9228 + 116295 * t9229 + 182988 * t9230 + 874361 * t9233 - 753236 * t9235 + 155 + (-472192 + 245157 * t9231) * t9231 + (-435404 * t9231 + 445094 * t9233 - 163438 * t9235 + 1390) * t9226) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 1281:
            t9239 = np.cos(phi)
            t9240 = t9239 ** 2
            t9242 = t9240 ** 2
            t9243 = t9239 * t9242
            t9248 = t9243 ** 2
            t9246 = t9242 ** 2
            t9241 = t9239 * t9240
            t9244 = t9241 ** 2
            t9238 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3e1) * t9238 ** 2 * (-3195 * t9240 + 23550 * t9241 + 34170 * t9242 - 148512 * t9243 - 122094 * t9244 + 171513 * t9246 - 81719 * t9248 + 45 + (375972 * t9244 - 412148 * t9246 + 163438 * t9248 - 1020) * t9239) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t9239) ** (-0.1e1 / 0.2e1)) * ((1 - t9239) ** (-0.1e1 / 0.2e1))

        if Bindx == 1282:
            t9250 = np.cos(phi)
            t9251 = t9250 ** 2
            t9253 = t9251 ** 2
            t9254 = t9250 * t9253
            t9259 = t9254 ** 2
            t9257 = t9253 ** 2
            t9252 = t9250 * t9251
            t9255 = t9252 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2e1) * (-8214 * t9251 - 10875 * t9252 + 97575 * t9253 + 70890 * t9254 + 818805 * t9257 - 731918 * t9259 + 111 + (-421260 + 245157 * t9255) * t9255 + (-184110 * t9255 + 205105 * t9257 - 81719 * t9259 + 453) * t9250) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 1283:
            t9263 = np.cos(phi)
            t9264 = t9263 ** 2
            t9266 = t9264 ** 2
            t9267 = t9263 * t9266
            t9272 = t9267 ** 2
            t9270 = t9266 ** 2
            t9265 = t9263 * t9264
            t9268 = t9265 ** 2
            t9262 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.77e2) * t9262 ** 2 * (-225 * t9264 + 5550 * t9265 + 2550 * t9266 - 36720 * t9267 - 9690 * t9268 + 14535 * t9270 - 7429 * t9272 + 3 + (96900 * t9268 - 109820 * t9270 + 44574 * t9272 - 228) * t9263) * np.sin((2 * phi1 - phi2)) * ((1 + t9263) ** (-0.1e1 / 0.2e1)) * ((1 - t9263) ** (-0.1e1 / 0.2e1))

        if Bindx == 1284:
            t9274 = np.cos(phi)
            t9275 = t9274 ** 2
            t9276 = t9275 ** 2
            t9278 = t9276 ** 2
            t9277 = t9275 * t9276
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t9276 + 24225 * t9278 + 3 + (-12240 + 7429 * t9277) * t9277 + (-21964 * t9278 - 228) * t9275) * np.cos((2 * phi1))

        if Bindx == 1285:
            t9282 = np.cos(phi)
            t9283 = t9282 ** 2
            t9285 = t9283 ** 2
            t9286 = t9282 * t9285
            t9291 = t9286 ** 2
            t9289 = t9285 ** 2
            t9284 = t9282 * t9283
            t9287 = t9284 ** 2
            t9281 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.77e2) * t9281 ** 2 * (225 * t9283 + 5550 * t9284 - 2550 * t9285 - 36720 * t9286 + 9690 * t9287 - 14535 * t9289 + 7429 * t9291 - 3 + (96900 * t9287 - 109820 * t9289 + 44574 * t9291 - 228) * t9282) * np.sin((2 * phi1 + phi2)) * ((1 + t9282) ** (-0.1e1 / 0.2e1)) * ((1 - t9282) ** (-0.1e1 / 0.2e1))

        if Bindx == 1286:
            t9293 = np.cos(phi)
            t9294 = t9293 ** 2
            t9296 = t9294 ** 2
            t9297 = t9293 * t9296
            t9302 = t9297 ** 2
            t9300 = t9296 ** 2
            t9295 = t9293 * t9294
            t9298 = t9295 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.2e1) * (-8214 * t9294 + 10875 * t9295 + 97575 * t9296 - 70890 * t9297 + 818805 * t9300 - 731918 * t9302 + 111 + (-421260 + 245157 * t9298) * t9298 + (184110 * t9298 - 205105 * t9300 + 81719 * t9302 - 453) * t9293) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 1287:
            t9306 = np.cos(phi)
            t9307 = t9306 ** 2
            t9309 = t9307 ** 2
            t9310 = t9306 * t9309
            t9315 = t9310 ** 2
            t9313 = t9309 ** 2
            t9308 = t9306 * t9307
            t9311 = t9308 ** 2
            t9305 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3e1) * t9305 ** 2 * (3195 * t9307 + 23550 * t9308 - 34170 * t9309 - 148512 * t9310 + 122094 * t9311 - 171513 * t9313 + 81719 * t9315 - 45 + (375972 * t9311 - 412148 * t9313 + 163438 * t9315 - 1020) * t9306) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t9306) ** (-0.1e1 / 0.2e1)) * ((1 - t9306) ** (-0.1e1 / 0.2e1))

        if Bindx == 1288:
            t9317 = np.cos(phi)
            t9318 = t9317 ** 2
            t9320 = t9318 ** 2
            t9321 = t9317 * t9320
            t9326 = t9321 ** 2
            t9324 = t9320 ** 2
            t9319 = t9317 * t9318
            t9322 = t9319 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * (-10540 * t9318 + 30630 * t9319 + 116295 * t9320 - 182988 * t9321 + 874361 * t9324 - 753236 * t9326 + 155 + (-472192 + 245157 * t9322) * t9322 + (435404 * t9322 - 445094 * t9324 + 163438 * t9326 - 1390) * t9317) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 1289:
            t9340 = np.sin(phi)
            t9338 = t9340 ** 2
            t9329 = np.cos(phi)
            t9330 = t9329 ** 2
            t9332 = t9330 ** 2
            t9336 = t9332 ** 2
            t9331 = t9329 * t9330
            t9334 = t9331 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t9338 ** 2 * (-1550 * t9330 - 5110 * t9331 + 13300 * t9332 - 33250 * t9334 + 24035 * t9336 + 25 + (25802 * t9332 - 47234 * t9334 + 28842 * t9336 + 260) * t9329) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t9329) ** (-0.1e1 / 0.2e1)) * ((1 - t9329) ** (-0.1e1 / 0.2e1))

        if Bindx == 1290:
            t9341 = np.cos(phi)
            t9342 = t9341 ** 2
            t9344 = t9342 ** 2
            t9345 = t9341 * t9344
            t9350 = t9345 ** 2
            t9348 = t9344 ** 2
            t9343 = t9341 * t9342
            t9346 = t9343 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.357e3) * (-290 * t9342 + 1595 * t9343 + 2845 * t9344 - 8122 * t9345 + 18791 * t9348 - 15466 * t9350 + 5 + (-10692 + 4807 * t9346) * t9346 + (16606 * t9346 - 14801 * t9348 + 4807 * t9350 - 85) * t9341) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 1291:
            t9363 = np.sin(phi)
            t9360 = t9363 ** 2
            t9361 = t9363 * t9360
            t9353 = np.cos(phi)
            t9354 = t9353 ** 2
            t9355 = t9353 * t9354
            t9358 = t9355 ** 2
            t9356 = t9354 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t9361 ** 2 * (245 * t9354 + 310 * t9355 - 1435 * t9356 + 1771 * t9358 - 5 + (-1232 * t9356 + 1518 * t9358 - 20) * t9353) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t9353) ** (-0.1e1 / 0.2e1)) * ((1 - t9353) ** (-0.1e1 / 0.2e1))

        if Bindx == 1292:
            t9364 = np.cos(phi)
            t9365 = t9364 ** 2
            t9367 = t9365 ** 2
            t9368 = t9364 * t9367
            t9373 = t9368 ** 2
            t9371 = t9367 ** 2
            t9366 = t9364 * t9365
            t9369 = t9366 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * (-44 * t9365 + 740 * t9366 + 445 * t9367 - 2920 * t9368 + 3275 * t9371 - 2596 * t9373 + 1 + (-1840 + 759 * t9369) * t9369 + (4840 * t9369 - 3620 * t9371 + 1012 * t9373 - 52) * t9364) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 1293:
            t9384 = np.sin(phi)
            t9381 = t9384 ** 2
            t9382 = t9381 ** 2
            t9376 = np.cos(phi)
            t9377 = t9376 ** 2
            t9379 = t9377 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t9382 ** 2 * (-288 * t9377 + 759 * t9379 + 9 + (-22 * t9377 + 506 * t9379 - 4) * t9376) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t9376) ** (-0.1e1 / 0.2e1)) * ((1 - t9376) ** (-0.1e1 / 0.2e1))

        if Bindx == 1294:
            t9385 = np.cos(phi)
            t9386 = t9385 ** 2
            t9388 = t9386 ** 2
            t9389 = t9385 * t9388
            t9394 = t9389 ** 2
            t9392 = t9388 ** 2
            t9387 = t9385 * t9386
            t9390 = t9387 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * (26 * t9386 + 215 * t9387 - 25 * t9388 - 610 * t9389 + 325 * t9392 - 254 * t9394 - 1 + (-140 + 69 * t9390) * t9390 + (790 * t9390 - 485 * t9392 + 115 * t9394 - 25) * t9385) * np.cos((2 * phi1 + 10 * phi2))

        if Bindx == 1295:
            t9404 = np.sin(phi)
            t9400 = t9404 ** 2
            t9402 = t9404 * t9400 ** 2
            t9397 = np.cos(phi)
            t9398 = t9397 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * t9402 ** 2 * (11 * t9398 - 1 + (6 * t9398 + 4) * t9397) * np.sin((2 * phi1 + 11 * phi2)) * ((1 + t9397) ** (-0.1e1 / 0.2e1)) * ((1 - t9397) ** (-0.1e1 / 0.2e1))

        if Bindx == 1296:
            t9405 = np.cos(phi)
            t9406 = t9405 ** 2
            t9408 = t9406 ** 2
            t9409 = t9405 * t9408
            t9413 = t9409 ** 2
            t9414 = t9405 * t9413
            t9411 = t9408 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * np.cos((2 * phi1 + 12 * phi2)) * (-5 * t9408 - 20 * t9409 + 5 * t9411 - 4 * t9413 + 2 * t9414 - 1 + (20 * t9409 + 4) * t9406 + (10 * t9406 - 10 * t9411 + t9414 - 2) * t9405)

        if Bindx == 1297:
            t9416 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * ((1 - t9416) ** (0.15e2 / 0.2e1)) * ((1 + t9416) ** (0.9e1 / 0.2e1)) * np.sin((3 * phi1 - 12 * phi2))

        if Bindx == 1298:
            t9417 = np.cos(phi)
            t9418 = t9417 ** 2
            t9420 = t9418 ** 2
            t9421 = t9417 * t9420
            t9426 = t9421 ** 2
            t9424 = t9420 ** 2
            t9419 = t9417 * t9418
            t9422 = t9419 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * (13 * t9418 - 7 * t9419 - 38 * t9420 + 38 * t9421 - 13 * t9424 - 7 * t9426 - 1 + (42 + 4 * t9422) * t9422 + (-62 * t9422 + 43 * t9424 - 11 * t9426 - 1) * t9417) * np.cos((3 * phi1 - 11 * phi2))

        if Bindx == 1299:
            t9437 = np.sin(phi)
            t9434 = t9437 ** 2
            t9435 = t9434 ** 2
            t9429 = np.cos(phi)
            t9430 = t9429 ** 2
            t9432 = t9430 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * t9435 ** 2 * (20 * t9430 - 115 * t9432 - 1 + (70 * t9430 + 46 * t9432 - 20) * t9429) * np.sin((3 * phi1 - 10 * phi2)) * ((1 + t9429) ** (-0.1e1 / 0.2e1)) * ((1 - t9429) ** (-0.1e1 / 0.2e1))

        if Bindx == 1300:
            t9438 = np.cos(phi)
            t9439 = t9438 ** 2
            t9441 = t9439 ** 2
            t9442 = t9438 * t9441
            t9447 = t9442 ** 2
            t9445 = t9441 ** 2
            t9440 = t9438 * t9439
            t9443 = t9440 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.323e3) * (561 * t9439 - 1401 * t9440 - 2406 * t9441 + 5778 * t9442 + 51 * t9445 - 2211 * t9447 - 17 + (3010 + 1012 * t9443) * t9443 + (-10098 * t9443 + 7881 * t9445 - 2277 * t9447 + 117) * t9438) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 1301:
            t9460 = np.sin(phi)
            t9457 = t9460 ** 2
            t9458 = t9460 * t9457
            t9450 = np.cos(phi)
            t9451 = t9450 ** 2
            t9452 = t9450 * t9451
            t9455 = t9452 ** 2
            t9453 = t9451 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.6783e4) * t9458 ** 2 * (-78 * t9451 - 105 * t9452 + 390 * t9453 - 506 * t9455 + 2 + (33 * t9453 + 253 * t9455 + 11) * t9450) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t9450) ** (-0.1e1 / 0.2e1)) * ((1 - t9450) ** (-0.1e1 / 0.2e1))

        if Bindx == 1302:
            t9461 = np.cos(phi)
            t9462 = t9461 ** 2
            t9464 = t9462 ** 2
            t9465 = t9461 * t9464
            t9470 = t9465 ** 2
            t9468 = t9464 ** 2
            t9463 = t9461 * t9462
            t9466 = t9463 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * (49 * t9462 - 695 * t9463 - 230 * t9464 + 3214 * t9465 + 1955 * t9468 - 2563 * t9470 - 1 + (-222 + 1012 * t9466) * t9466 + (-6286 * t9466 + 5495 * t9468 - 1771 * t9470 + 43) * t9461) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 1303:
            t9484 = np.sin(phi)
            t9482 = t9484 ** 2
            t9473 = np.cos(phi)
            t9474 = t9473 ** 2
            t9476 = t9474 ** 2
            t9480 = t9476 ** 2
            t9475 = t9473 * t9474
            t9478 = t9475 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * t9482 ** 2 * (1242 * t9474 - 338 * t9475 - 9348 * t9476 + 21014 * t9478 - 14421 * t9480 - 23 + (3534 * t9476 - 11286 * t9478 + 9614 * t9480 + 12) * t9473) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t9473) ** (-0.1e1 / 0.2e1)) * ((1 - t9473) ** (-0.1e1 / 0.2e1))

        if Bindx == 1304:
            t9485 = np.cos(phi)
            t9486 = t9485 ** 2
            t9488 = t9486 ** 2
            t9489 = t9485 * t9488
            t9494 = t9489 ** 2
            t9492 = t9488 ** 2
            t9487 = t9485 * t9486
            t9490 = t9487 ** 2
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.17e2) * (-549 * t9486 - 5855 * t9487 + 6070 * t9488 + 31894 * t9489 + 55765 * t9492 - 53713 * t9494 + 9 + (-26810 + 19228 * t9490) * t9490 + (-70414 * t9490 + 68115 * t9492 - 24035 * t9494 + 295) * t9485) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 1305:
            t9498 = np.cos(phi)
            t9499 = t9498 ** 2
            t9501 = t9499 ** 2
            t9502 = t9498 * t9501
            t9507 = t9502 ** 2
            t9505 = t9501 ** 2
            t9500 = t9498 * t9499
            t9503 = t9500 ** 2
            t9497 = np.sin(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.2e1) * t9497 ** 2 * (-4355 * t9499 + 10915 * t9500 + 42670 * t9501 - 66878 * t9502 - 140182 * t9503 + 182495 * t9505 - 81719 * t9507 + 67 + (171190 * t9503 - 195415 * t9505 + 81719 * t9507 - 507) * t9498) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t9498) ** (-0.1e1 / 0.2e1)) * ((1 - t9498) ** (-0.1e1 / 0.2e1))

        if Bindx == 1306:
            t9509 = np.cos(phi)
            t9510 = t9509 ** 2
            t9512 = t9510 ** 2
            t9513 = t9509 * t9512
            t9518 = t9513 ** 2
            t9516 = t9512 ** 2
            t9511 = t9509 * t9510
            t9514 = t9511 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (-12213 * t9510 - 42105 * t9511 + 137430 * t9512 + 256122 * t9513 + 1090125 * t9516 - 969969 * t9518 + 177 + (-571914 + 326876 * t9514) * t9514 + (-622098 * t9514 + 650845 * t9516 - 245157 * t9518 + 1881) * t9509) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 1307:
            t9522 = np.cos(phi)
            t9523 = t9522 ** 2
            t9525 = t9523 ** 2
            t9526 = t9522 * t9525
            t9531 = t9526 ** 2
            t9529 = t9525 ** 2
            t9524 = t9522 * t9523
            t9527 = t9524 ** 2
            t9521 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3e1) * t9521 ** 2 * (-3195 * t9523 + 23550 * t9524 + 34170 * t9525 - 148512 * t9526 - 122094 * t9527 + 171513 * t9529 - 81719 * t9531 + 45 + (375972 * t9527 - 412148 * t9529 + 163438 * t9531 - 1020) * t9522) * np.sin((3 * phi1 - 2 * phi2)) * ((1 - t9522) ** (-0.1e1 / 0.2e1)) * ((1 + t9522) ** (-0.1e1 / 0.2e1))

        if Bindx == 1308:
            t9533 = np.cos(phi)
            t9534 = t9533 ** 2
            t9536 = t9534 ** 2
            t9537 = t9533 * t9536
            t9542 = t9537 ** 2
            t9540 = t9536 ** 2
            t9535 = t9533 * t9534
            t9538 = t9535 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (-1095 * t9534 - 1065 * t9535 + 12810 * t9536 + 6834 * t9537 + 103683 * t9540 - 90763 * t9542 + 15 + (-54366 + 29716 * t9538) * t9538 + (-17442 * t9538 + 19057 * t9540 - 7429 * t9542 + 45) * t9533) * np.cos((3 * phi1 - phi2))

        if Bindx == 1309:
            t9552 = np.sin(phi)
            t9550 = t9552 ** 2
            t9545 = np.cos(phi)
            t9546 = t9545 ** 2
            t9547 = t9546 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t9545 * t9550 ** 2 * (-1020 * t9546 + 45 + (-11628 * t9546 + 5814 + 7429 * t9547) * t9547) * np.sin((3 * phi1)) * ((1 - t9545) ** (-0.1e1 / 0.2e1)) * ((1 + t9545) ** (-0.1e1 / 0.2e1))

        if Bindx == 1310:
            t9553 = np.cos(phi)
            t9554 = t9553 ** 2
            t9556 = t9554 ** 2
            t9557 = t9553 * t9556
            t9562 = t9557 ** 2
            t9560 = t9556 ** 2
            t9555 = t9553 * t9554
            t9558 = t9555 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * (-1095 * t9554 + 1065 * t9555 + 12810 * t9556 - 6834 * t9557 + 103683 * t9560 - 90763 * t9562 + 15 + (-54366 + 29716 * t9558) * t9558 + (17442 * t9558 - 19057 * t9560 + 7429 * t9562 - 45) * t9553) * np.cos((3 * phi1 + phi2))

        if Bindx == 1311:
            t9566 = np.cos(phi)
            t9567 = t9566 ** 2
            t9569 = t9567 ** 2
            t9570 = t9566 * t9569
            t9575 = t9570 ** 2
            t9573 = t9569 ** 2
            t9568 = t9566 * t9567
            t9571 = t9568 ** 2
            t9565 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3e1) * t9565 ** 2 * (3195 * t9567 + 23550 * t9568 - 34170 * t9569 - 148512 * t9570 + 122094 * t9571 - 171513 * t9573 + 81719 * t9575 - 45 + (375972 * t9571 - 412148 * t9573 + 163438 * t9575 - 1020) * t9566) * np.sin((3 * phi1 + 2 * phi2)) * ((1 - t9566) ** (-0.1e1 / 0.2e1)) * ((1 + t9566) ** (-0.1e1 / 0.2e1))

        if Bindx == 1312:
            t9577 = np.cos(phi)
            t9578 = t9577 ** 2
            t9580 = t9578 ** 2
            t9581 = t9577 * t9580
            t9586 = t9581 ** 2
            t9584 = t9580 ** 2
            t9579 = t9577 * t9578
            t9582 = t9579 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (-12213 * t9578 + 42105 * t9579 + 137430 * t9580 - 256122 * t9581 + 1090125 * t9584 - 969969 * t9586 + 177 + (-571914 + 326876 * t9582) * t9582 + (622098 * t9582 - 650845 * t9584 + 245157 * t9586 - 1881) * t9577) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 1313:
            t9590 = np.cos(phi)
            t9591 = t9590 ** 2
            t9593 = t9591 ** 2
            t9594 = t9590 * t9593
            t9601 = 81719 * t9594 ** 2
            t9597 = t9593 ** 2
            t9592 = t9590 * t9591
            t9595 = t9592 ** 2
            t9589 = np.sin(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.2e1) * t9589 ** 2 * (4355 * t9591 + 10915 * t9592 - 42670 * t9593 - 66878 * t9594 + 140182 * t9595 - 182495 * t9597 + t9601 - 67 + (171190 * t9595 - 195415 * t9597 + t9601 - 507) * t9590) * np.sin((3 * phi1 + 4 * phi2)) * ((1 - t9590) ** (-0.1e1 / 0.2e1)) * ((1 + t9590) ** (-0.1e1 / 0.2e1))

        if Bindx == 1314:
            t9602 = np.cos(phi)
            t9603 = t9602 ** 2
            t9605 = t9603 ** 2
            t9606 = t9602 * t9605
            t9611 = t9606 ** 2
            t9609 = t9605 ** 2
            t9604 = t9602 * t9603
            t9607 = t9604 ** 2
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.17e2) * (-549 * t9603 + 5855 * t9604 + 6070 * t9605 - 31894 * t9606 + 55765 * t9609 - 53713 * t9611 + 9 + (-26810 + 19228 * t9607) * t9607 + (70414 * t9607 - 68115 * t9609 + 24035 * t9611 - 295) * t9602) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 1315:
            t9625 = np.sin(phi)
            t9623 = t9625 ** 2
            t9614 = np.cos(phi)
            t9615 = t9614 ** 2
            t9617 = t9615 ** 2
            t9621 = t9617 ** 2
            t9616 = t9614 * t9615
            t9619 = t9616 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * t9623 ** 2 * (-1242 * t9615 - 338 * t9616 + 9348 * t9617 - 21014 * t9619 + 14421 * t9621 + 23 + (3534 * t9617 - 11286 * t9619 + 9614 * t9621 + 12) * t9614) * np.sin((3 * phi1 + 6 * phi2)) * ((1 - t9614) ** (-0.1e1 / 0.2e1)) * ((1 + t9614) ** (-0.1e1 / 0.2e1))

        if Bindx == 1316:
            t9626 = np.cos(phi)
            t9627 = t9626 ** 2
            t9629 = t9627 ** 2
            t9630 = t9626 * t9629
            t9635 = t9630 ** 2
            t9633 = t9629 ** 2
            t9628 = t9626 * t9627
            t9631 = t9628 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * (49 * t9627 + 695 * t9628 - 230 * t9629 - 3214 * t9630 + 1955 * t9633 - 2563 * t9635 - 1 + (-222 + 1012 * t9631) * t9631 + (6286 * t9631 - 5495 * t9633 + 1771 * t9635 - 43) * t9626) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 1317:
            t9648 = np.sin(phi)
            t9645 = t9648 ** 2
            t9646 = t9648 * t9645
            t9638 = np.cos(phi)
            t9639 = t9638 ** 2
            t9640 = t9638 * t9639
            t9643 = t9640 ** 2
            t9641 = t9639 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.6783e4) * t9646 ** 2 * (78 * t9639 - 105 * t9640 - 390 * t9641 + 506 * t9643 - 2 + (33 * t9641 + 253 * t9643 + 11) * t9638) * np.sin((3 * phi1 + 8 * phi2)) * ((1 - t9638) ** (-0.1e1 / 0.2e1)) * ((1 + t9638) ** (-0.1e1 / 0.2e1))

        if Bindx == 1318:
            t9649 = np.cos(phi)
            t9650 = t9649 ** 2
            t9652 = t9650 ** 2
            t9653 = t9649 * t9652
            t9658 = t9653 ** 2
            t9656 = t9652 ** 2
            t9651 = t9649 * t9650
            t9654 = t9651 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.323e3) * (561 * t9650 + 1401 * t9651 - 2406 * t9652 - 5778 * t9653 + 51 * t9656 - 2211 * t9658 - 17 + (3010 + 1012 * t9654) * t9654 + (10098 * t9654 - 7881 * t9656 + 2277 * t9658 - 117) * t9649) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 1319:
            t9669 = np.sin(phi)
            t9666 = t9669 ** 2
            t9667 = t9666 ** 2
            t9661 = np.cos(phi)
            t9662 = t9661 ** 2
            t9664 = t9662 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * t9667 ** 2 * (-20 * t9662 + 115 * t9664 + 1 + (70 * t9662 + 46 * t9664 - 20) * t9661) * np.sin((3 * phi1 + 10 * phi2)) * ((1 - t9661) ** (-0.1e1 / 0.2e1)) * ((1 + t9661) ** (-0.1e1 / 0.2e1))

        if Bindx == 1320:
            t9670 = np.cos(phi)
            t9671 = t9670 ** 2
            t9673 = t9671 ** 2
            t9674 = t9670 * t9673
            t9679 = t9674 ** 2
            t9677 = t9673 ** 2
            t9672 = t9670 * t9671
            t9675 = t9672 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * (13 * t9671 + 7 * t9672 - 38 * t9673 - 38 * t9674 - 13 * t9677 - 7 * t9679 - 1 + (42 + 4 * t9675) * t9675 + (62 * t9675 - 43 * t9677 + 11 * t9679 + 1) * t9670) * np.cos((3 * phi1 + 11 * phi2))

        if Bindx == 1321:
            t9682 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * ((1 - t9682) ** (0.9e1 / 0.2e1)) * ((1 + t9682) ** (0.15e2 / 0.2e1)) * np.sin((3 * phi1 + 12 * phi2))

        if Bindx == 1322:
            t9683 = np.cos(phi)
            t9695 = -4 * t9683
            t9684 = t9683 ** 2
            t9685 = t9683 * t9684
            t9688 = t9685 ** 2
            t9686 = t9684 ** 2
            t9687 = t9683 * t9686
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * np.cos((4 * phi1 - 12 * phi2)) * (2 * t9684 + 12 * t9685 + t9695 + 1 + (-8 * t9683 + 28 + t9688) * t9688 + (-8 + (t9695 + 2) * t9687) * t9687 + (-17 + (12 * t9683 - 17) * t9686) * t9686)

        if Bindx == 1323:
            t9705 = np.sin(phi)
            t9696 = np.cos(phi)
            t9704 = 1 - t9696
            t9701 = t9705 ** 2
            t9702 = t9701 ** 2
            t9697 = t9696 ** 2
            t9699 = t9697 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * t9702 ** 2 * (-6 * t9697 - 11 * t9699 + t9704 + (14 * t9697 + 3 * t9699) * t9696) * np.sin((4 * phi1 - 11 * phi2)) * (t9704 ** (-0.1e1 / 0.2e1)) * ((1 + t9696) ** (-0.1e1 / 0.2e1))

        if Bindx == 1324:
            t9706 = np.cos(phi)
            t9707 = t9706 ** 2
            t9709 = t9707 ** 2
            t9710 = t9706 * t9709
            t9715 = t9710 ** 2
            t9713 = t9709 ** 2
            t9708 = t9706 * t9707
            t9711 = t9708 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (100 * t9707 + 98 * t9708 - 505 * t9709 + 92 * t9710 - 583 * t9713 + 28 * t9715 - 5 + (896 + 69 * t9711) * t9711 + (-604 * t9711 + 670 * t9713 - 230 * t9715 - 26) * t9706) * np.cos((4 * phi1 - 10 * phi2))

        if Bindx == 1325:
            t9728 = np.sin(phi)
            t9725 = t9728 ** 2
            t9726 = t9728 * t9725
            t9718 = np.cos(phi)
            t9719 = t9718 ** 2
            t9720 = t9718 * t9719
            t9723 = t9720 ** 2
            t9721 = t9719 ** 2
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.323e3) * t9726 ** 2 * (27 * t9719 - 425 * t9720 + 285 * t9721 - 759 * t9723 - 1 + (561 * t9721 + 253 * t9723 + 59) * t9718) * np.sin((4 * phi1 - 9 * phi2)) * ((1 - t9718) ** (-0.1e1 / 0.2e1)) * ((1 + t9718) ** (-0.1e1 / 0.2e1))

        if Bindx == 1326:
            t9729 = np.cos(phi)
            t9730 = t9729 ** 2
            t9732 = t9730 ** 2
            t9733 = t9729 * t9732
            t9738 = t9733 ** 2
            t9736 = t9732 ** 2
            t9731 = t9729 * t9730
            t9734 = t9731 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6783e4) * (342 * t9730 - 392 * t9731 - 1927 * t9732 + 2416 * t9733 - 2183 * t9736 - 682 * t9738 - 9 + (3700 + 759 * t9734) * t9734 + (-5776 * t9734 + 5752 * t9736 - 2024 * t9738 + 24) * t9729) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 1327:
            t9752 = np.sin(phi)
            t9750 = t9752 ** 2
            t9741 = np.cos(phi)
            t9742 = t9741 ** 2
            t9744 = t9742 ** 2
            t9748 = t9744 ** 2
            t9743 = t9741 * t9742
            t9746 = t9743 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * t9750 ** 2 * (132 * t9742 + 412 * t9743 - 938 * t9744 + 2324 * t9746 - 1771 * t9748 - 3 + (-926 * t9744 + 44 * t9746 + 759 * t9748 - 33) * t9741) * np.sin((4 * phi1 - 7 * phi2)) * ((1 - t9741) ** (-0.1e1 / 0.2e1)) * ((1 + t9741) ** (-0.1e1 / 0.2e1))

        if Bindx == 1328:
            t9753 = np.cos(phi)
            t9754 = t9753 ** 2
            t9756 = t9754 ** 2
            t9757 = t9753 * t9756
            t9762 = t9757 ** 2
            t9760 = t9756 ** 2
            t9755 = t9753 * t9754
            t9758 = t9755 ** 2
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (364 * t9754 - 2470 * t9755 - 2435 * t9756 + 12588 * t9757 + 2755 * t9760 - 9196 * t9762 - 7 + (3712 + 4807 * t9758) * t9758 + (-27436 * t9758 + 26790 * t9760 - 9614 * t9762 + 142) * t9753) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 1329:
            t9766 = np.cos(phi)
            t9767 = t9766 ** 2
            t9769 = t9767 ** 2
            t9770 = t9766 * t9769
            t9775 = t9770 ** 2
            t9773 = t9769 ** 2
            t9768 = t9766 * t9767
            t9771 = t9768 ** 2
            t9765 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.17e2) * t9765 ** 2 * (-4845 * t9767 - 1285 * t9768 + 42610 * t9769 - 3150 * t9770 - 130074 * t9771 + 163305 * t9773 - 72105 * t9775 + 85 + (40470 * t9771 - 78375 * t9773 + 43263 * t9775 + 101) * t9766) * np.sin((4 * phi1 - 5 * phi2)) * ((1 - t9766) ** (-0.1e1 / 0.2e1)) * ((1 + t9766) ** (-0.1e1 / 0.2e1))

        if Bindx == 1330:
            t9777 = np.cos(phi)
            t9778 = t9777 ** 2
            t9780 = t9778 ** 2
            t9781 = t9777 * t9780
            t9786 = t9781 ** 2
            t9784 = t9780 ** 2
            t9779 = t9777 * t9778
            t9782 = t9779 ** 2
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.2e1) * (-14818 * t9778 - 214340 * t9779 + 174625 * t9780 + 1193944 * t9781 + 1884705 * t9784 - 1939938 * t9786 + 239 + (-838236 + 735471 * t9782) * t9782 + (-2705448 * t9782 + 2693820 * t9784 - 980628 * t9786 + 10604) * t9777) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 1331:
            t9790 = np.cos(phi)
            t9791 = t9790 ** 2
            t9793 = t9791 ** 2
            t9794 = t9790 * t9793
            t9799 = t9794 ** 2
            t9797 = t9793 ** 2
            t9792 = t9790 * t9791
            t9795 = t9792 ** 2
            t9789 = np.sin(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.2e1) * t9789 ** 2 * (-4355 * t9791 + 10915 * t9792 + 42670 * t9793 - 66878 * t9794 - 140182 * t9795 + 182495 * t9797 - 81719 * t9799 + 67 + (171190 * t9795 - 195415 * t9797 + 81719 * t9799 - 507) * t9790) * np.sin((4 * phi1 - 3 * phi2)) * ((1 - t9790) ** (-0.1e1 / 0.2e1)) * ((1 + t9790) ** (-0.1e1 / 0.2e1))

        if Bindx == 1332:
            t9801 = np.cos(phi)
            t9802 = t9801 ** 2
            t9804 = t9802 ** 2
            t9805 = t9801 * t9804
            t9810 = t9805 ** 2
            t9808 = t9804 ** 2
            t9803 = t9801 * t9802
            t9806 = t9803 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * (-10540 * t9802 - 30630 * t9803 + 116295 * t9804 + 182988 * t9805 + 874361 * t9808 - 753236 * t9810 + 155 + (-472192 + 245157 * t9806) * t9806 + (-435404 * t9806 + 445094 * t9808 - 163438 * t9810 + 1390) * t9801) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 1333:
            t9824 = np.sin(phi)
            t9822 = t9824 ** 2
            t9813 = np.cos(phi)
            t9814 = t9813 ** 2
            t9816 = t9814 ** 2
            t9820 = t9816 ** 2
            t9815 = t9813 * t9814
            t9818 = t9815 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * t9822 ** 2 * (340 * t9814 - 3740 * t9815 - 3230 * t9816 + 9044 * t9818 - 7429 * t9820 - 5 + (20026 * t9816 - 37468 * t9818 + 22287 * t9820 + 175) * t9813) * np.sin((4 * phi1 - phi2)) * ((1 - t9813) ** (-0.1e1 / 0.2e1)) * ((1 + t9813) ** (-0.1e1 / 0.2e1))

        if Bindx == 1334:
            t9825 = np.cos(phi)
            t9826 = t9825 ** 2
            t9827 = t9826 ** 2
            t9829 = t9827 ** 2
            t9828 = t9826 * t9827
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t9827 + 28747 * t9829 + 5 + (-15844 + 7429 * t9828) * t9828 + (-23902 * t9829 - 350) * t9826) * np.cos((4 * phi1))

        if Bindx == 1335:
            t9843 = np.sin(phi)
            t9841 = t9843 ** 2
            t9832 = np.cos(phi)
            t9833 = t9832 ** 2
            t9835 = t9833 ** 2
            t9839 = t9835 ** 2
            t9834 = t9832 * t9833
            t9837 = t9834 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * t9841 ** 2 * (-340 * t9833 - 3740 * t9834 + 3230 * t9835 - 9044 * t9837 + 7429 * t9839 + 5 + (20026 * t9835 - 37468 * t9837 + 22287 * t9839 + 175) * t9832) * np.sin((4 * phi1 + phi2)) * ((1 - t9832) ** (-0.1e1 / 0.2e1)) * ((1 + t9832) ** (-0.1e1 / 0.2e1))

        if Bindx == 1336:
            t9844 = np.cos(phi)
            t9845 = t9844 ** 2
            t9847 = t9845 ** 2
            t9848 = t9844 * t9847
            t9853 = t9848 ** 2
            t9851 = t9847 ** 2
            t9846 = t9844 * t9845
            t9849 = t9846 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * (-10540 * t9845 + 30630 * t9846 + 116295 * t9847 - 182988 * t9848 + 874361 * t9851 - 753236 * t9853 + 155 + (-472192 + 245157 * t9849) * t9849 + (435404 * t9849 - 445094 * t9851 + 163438 * t9853 - 1390) * t9844) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 1337:
            t9857 = np.cos(phi)
            t9858 = t9857 ** 2
            t9860 = t9858 ** 2
            t9861 = t9857 * t9860
            t9868 = 81719 * t9861 ** 2
            t9864 = t9860 ** 2
            t9859 = t9857 * t9858
            t9862 = t9859 ** 2
            t9856 = np.sin(phi)
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.2e1) * t9856 ** 2 * (4355 * t9858 + 10915 * t9859 - 42670 * t9860 - 66878 * t9861 + 140182 * t9862 - 182495 * t9864 + t9868 - 67 + (171190 * t9862 - 195415 * t9864 + t9868 - 507) * t9857) * np.sin((4 * phi1 + 3 * phi2)) * ((1 - t9857) ** (-0.1e1 / 0.2e1)) * ((1 + t9857) ** (-0.1e1 / 0.2e1))

        if Bindx == 1338:
            t9869 = np.cos(phi)
            t9870 = t9869 ** 2
            t9872 = t9870 ** 2
            t9873 = t9869 * t9872
            t9878 = t9873 ** 2
            t9876 = t9872 ** 2
            t9871 = t9869 * t9870
            t9874 = t9871 ** 2
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.2e1) * (-14818 * t9870 + 214340 * t9871 + 174625 * t9872 - 1193944 * t9873 + 1884705 * t9876 - 1939938 * t9878 + 239 + (-838236 + 735471 * t9874) * t9874 + (2705448 * t9874 - 2693820 * t9876 + 980628 * t9878 - 10604) * t9869) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 1339:
            t9882 = np.cos(phi)
            t9883 = t9882 ** 2
            t9885 = t9883 ** 2
            t9886 = t9882 * t9885
            t9891 = t9886 ** 2
            t9889 = t9885 ** 2
            t9884 = t9882 * t9883
            t9887 = t9884 ** 2
            t9881 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.17e2) * t9881 ** 2 * (4845 * t9883 - 1285 * t9884 - 42610 * t9885 - 3150 * t9886 + 130074 * t9887 - 163305 * t9889 + 72105 * t9891 - 85 + (40470 * t9887 - 78375 * t9889 + 43263 * t9891 + 101) * t9882) * np.sin((4 * phi1 + 5 * phi2)) * ((1 - t9882) ** (-0.1e1 / 0.2e1)) * ((1 + t9882) ** (-0.1e1 / 0.2e1))

        if Bindx == 1340:
            t9893 = np.cos(phi)
            t9894 = t9893 ** 2
            t9896 = t9894 ** 2
            t9897 = t9893 * t9896
            t9902 = t9897 ** 2
            t9900 = t9896 ** 2
            t9895 = t9893 * t9894
            t9898 = t9895 ** 2
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (364 * t9894 + 2470 * t9895 - 2435 * t9896 - 12588 * t9897 + 2755 * t9900 - 9196 * t9902 - 7 + (3712 + 4807 * t9898) * t9898 + (27436 * t9898 - 26790 * t9900 + 9614 * t9902 - 142) * t9893) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 1341:
            t9916 = np.sin(phi)
            t9914 = t9916 ** 2
            t9905 = np.cos(phi)
            t9906 = t9905 ** 2
            t9908 = t9906 ** 2
            t9912 = t9908 ** 2
            t9907 = t9905 * t9906
            t9910 = t9907 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * t9914 ** 2 * (-132 * t9906 + 412 * t9907 + 938 * t9908 - 2324 * t9910 + 1771 * t9912 + 3 + (-926 * t9908 + 44 * t9910 + 759 * t9912 - 33) * t9905) * np.sin((4 * phi1 + 7 * phi2)) * ((1 - t9905) ** (-0.1e1 / 0.2e1)) * ((1 + t9905) ** (-0.1e1 / 0.2e1))

        if Bindx == 1342:
            t9917 = np.cos(phi)
            t9918 = t9917 ** 2
            t9920 = t9918 ** 2
            t9921 = t9917 * t9920
            t9926 = t9921 ** 2
            t9924 = t9920 ** 2
            t9919 = t9917 * t9918
            t9922 = t9919 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6783e4) * (342 * t9918 + 392 * t9919 - 1927 * t9920 - 2416 * t9921 - 2183 * t9924 - 682 * t9926 - 9 + (3700 + 759 * t9922) * t9922 + (5776 * t9922 - 5752 * t9924 + 2024 * t9926 - 24) * t9917) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 1343:
            t9939 = np.sin(phi)
            t9936 = t9939 ** 2
            t9937 = t9939 * t9936
            t9929 = np.cos(phi)
            t9930 = t9929 ** 2
            t9931 = t9929 * t9930
            t9934 = t9931 ** 2
            t9932 = t9930 ** 2
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.323e3) * t9937 ** 2 * (-27 * t9930 - 425 * t9931 - 285 * t9932 + 759 * t9934 + 1 + (561 * t9932 + 253 * t9934 + 59) * t9929) * np.sin((4 * phi1 + 9 * phi2)) * ((1 + t9929) ** (-0.1e1 / 0.2e1)) * ((1 - t9929) ** (-0.1e1 / 0.2e1))

        if Bindx == 1344:
            t9940 = np.cos(phi)
            t9941 = t9940 ** 2
            t9943 = t9941 ** 2
            t9944 = t9940 * t9943
            t9949 = t9944 ** 2
            t9947 = t9943 ** 2
            t9942 = t9940 * t9941
            t9945 = t9942 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (100 * t9941 - 98 * t9942 - 505 * t9943 - 92 * t9944 - 583 * t9947 + 28 * t9949 - 5 + (896 + 69 * t9945) * t9945 + (604 * t9945 - 670 * t9947 + 230 * t9949 + 26) * t9940) * np.cos((4 * phi1 + 10 * phi2))

        if Bindx == 1345:
            t9961 = np.sin(phi)
            t9952 = np.cos(phi)
            t9960 = 1 + t9952
            t9957 = t9961 ** 2
            t9958 = t9957 ** 2
            t9953 = t9952 ** 2
            t9955 = t9953 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * t9958 ** 2 * (6 * t9953 + 11 * t9955 - t9960 + (14 * t9953 + 3 * t9955) * t9952) * np.sin((4 * phi1 + 11 * phi2)) * (t9960 ** (-0.1e1 / 0.2e1)) * ((1 - t9952) ** (-0.1e1 / 0.2e1))

        if Bindx == 1346:
            t9962 = np.cos(phi)
            t9974 = 4 * t9962
            t9963 = t9962 ** 2
            t9964 = t9962 * t9963
            t9967 = t9964 ** 2
            t9965 = t9963 ** 2
            t9966 = t9962 * t9965
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * np.cos((4 * phi1 + 12 * phi2)) * (2 * t9963 - 12 * t9964 + t9974 + 1 + (8 * t9962 + 28 + t9967) * t9967 + (8 + (t9974 + 2) * t9966) * t9966 + (-17 + (-12 * t9962 - 17) * t9965) * t9965)

        if Bindx == 1347:
            t9975 = np.cos(phi)
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.4807e4) * ((1 - t9975) ** (0.17e2 / 0.2e1)) * ((1 + t9975) ** (0.7e1 / 0.2e1)) * np.sin((5 * phi1 - 12 * phi2))

        if Bindx == 1348:
            t9976 = np.cos(phi)
            t9977 = t9976 ** 2
            t9979 = t9977 ** 2
            t9980 = t9976 * t9979
            t9985 = t9980 ** 2
            t9983 = t9979 ** 2
            t9978 = t9976 * t9977
            t9981 = t9978 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.14421e5) * (-25 * t9977 + 109 * t9978 - 50 * t9979 - 194 * t9980 - 239 * t9983 + 59 * t9985 + 5 + (238 + 12 * t9981) * t9981 + (58 * t9981 + 95 * t9983 - 55 * t9985 - 13) * t9976) * np.cos((5 * phi1 - 11 * phi2))

        if Bindx == 1349:
            t9998 = np.sin(phi)
            t9995 = t9998 ** 2
            t9996 = t9998 * t9995
            t9988 = np.cos(phi)
            t9989 = t9988 ** 2
            t9990 = t9988 * t9989
            t9993 = t9990 ** 2
            t9991 = t9989 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.627e3) * t9996 ** 2 * (247 * t9989 - 270 * t9990 - 325 * t9991 - 575 * t9993 - 19 + (824 * t9991 + 138 * t9993 - 20) * t9988) * np.sin((5 * phi1 - 10 * phi2)) * ((1 + t9988) ** (-0.1e1 / 0.2e1)) * ((1 - t9988) ** (-0.1e1 / 0.2e1))

        if Bindx == 1350:
            t9999 = np.cos(phi)
            t10000 = t9999 ** 2
            t10002 = t10000 ** 2
            t10003 = t9999 * t10002
            t10008 = t10003 ** 2
            t10006 = t10002 ** 2
            t10001 = t9999 * t10000
            t10004 = t10001 ** 2
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (625 * t10000 + 1969 * t10001 - 4710 * t10002 - 2594 * t10003 - 10949 * t10006 + 2189 * t10008 - 25 + (11858 + 1012 * t10004) * t10004 + (-3342 * t10004 + 8055 * t10006 - 3795 * t10008 - 293) * t9999) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 1351:
            t10022 = np.sin(phi)
            t10020 = t10022 ** 2
            t10011 = np.cos(phi)
            t10012 = t10011 ** 2
            t10014 = t10012 ** 2
            t10018 = t10014 ** 2
            t10013 = t10011 * t10012
            t10016 = t10013 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t10020 ** 2 * (-192 * t10012 + 1060 * t10013 + 76 * t10014 + 2000 * t10016 - 2530 * t10018 + 6 + (-2966 * t10014 + 1892 * t10016 + 759 * t10018 - 105) * t10011) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t10011) ** (-0.1e1 / 0.2e1)) * ((1 - t10011) ** (-0.1e1 / 0.2e1))

        if Bindx == 1352:
            t10023 = np.cos(phi)
            t10024 = t10023 ** 2
            t10026 = t10024 ** 2
            t10027 = t10023 * t10026
            t10032 = t10027 ** 2
            t10030 = t10026 ** 2
            t10025 = t10023 * t10024
            t10028 = t10025 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * (1107 * t10024 - 515 * t10025 - 7090 * t10026 + 5638 * t10027 - 13055 * t10030 - 121 * t10032 - 27 + (16150 + 3036 * t10028) * t10028 + (-17878 * t10028 + 21595 * t10030 - 8855 * t10032 + 15) * t10023) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 1353:
            t10036 = np.cos(phi)
            t10037 = t10036 ** 2
            t10039 = t10037 ** 2
            t10040 = t10036 * t10039
            t10045 = t10040 ** 2
            t10043 = t10039 ** 2
            t10038 = t10036 * t10037
            t10041 = t10038 ** 2
            t10035 = np.sin(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.7e1) * t10035 ** 2 * (-1175 * t10037 - 5570 * t10038 + 10290 * t10039 + 18880 * t10040 - 35302 * t10041 + 49685 * t10043 - 24035 * t10045 + 25 + (-18620 * t10041 - 4180 * t10043 + 9614 * t10045 + 388) * t10036) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t10036) ** (-0.1e1 / 0.2e1)) * ((1 - t10036) ** (-0.1e1 / 0.2e1))

        if Bindx == 1354:
            t10047 = np.cos(phi)
            t10048 = t10047 ** 2
            t10050 = t10048 ** 2
            t10051 = t10047 * t10050
            t10056 = t10051 ** 2
            t10054 = t10050 ** 2
            t10049 = t10047 * t10048
            t10052 = t10049 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (13939 * t10048 - 79585 * t10049 - 98650 * t10050 + 419402 * t10051 + 25365 * t10054 - 292809 * t10056 - 263 + (180390 + 173052 * t10052) * t10052 + (-949506 * t10052 + 964725 * t10054 - 360525 * t10056 + 4465) * t10047) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 1355:
            t10060 = np.cos(phi)
            t10061 = t10060 ** 2
            t10063 = t10061 ** 2
            t10064 = t10060 * t10063
            t10069 = t10064 ** 2
            t10067 = t10063 ** 2
            t10062 = t10060 * t10061
            t10065 = t10062 ** 2
            t10059 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.17e2) * t10059 ** 2 * (-4845 * t10061 - 1285 * t10062 + 42610 * t10063 - 3150 * t10064 - 130074 * t10065 + 163305 * t10067 - 72105 * t10069 + 85 + (40470 * t10065 - 78375 * t10067 + 43263 * t10069 + 101) * t10060) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t10060) ** (-0.1e1 / 0.2e1)) * ((1 - t10060) ** (-0.1e1 / 0.2e1))

        if Bindx == 1356:
            t10071 = np.cos(phi)
            t10072 = t10071 ** 2
            t10074 = t10072 ** 2
            t10075 = t10071 * t10074
            t10080 = t10075 ** 2
            t10078 = t10074 ** 2
            t10073 = t10071 * t10072
            t10076 = t10073 ** 2
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.17e2) * (-549 * t10072 - 5855 * t10073 + 6070 * t10074 + 31894 * t10075 + 55765 * t10078 - 53713 * t10080 + 9 + (-26810 + 19228 * t10076) * t10076 + (-70414 * t10076 + 68115 * t10078 - 24035 * t10080 + 295) * t10071) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 1357:
            t10094 = np.sin(phi)
            t10092 = t10094 ** 2
            t10083 = np.cos(phi)
            t10084 = t10083 ** 2
            t10086 = t10084 ** 2
            t10090 = t10086 ** 2
            t10085 = t10083 * t10084
            t10088 = t10085 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t10092 ** 2 * (1550 * t10084 - 5110 * t10085 - 13300 * t10086 + 33250 * t10088 - 24035 * t10090 - 25 + (25802 * t10086 - 47234 * t10088 + 28842 * t10090 + 260) * t10083) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t10083) ** (-0.1e1 / 0.2e1)) * ((1 - t10083) ** (-0.1e1 / 0.2e1))

        if Bindx == 1358:
            t10095 = np.cos(phi)
            t10096 = t10095 ** 2
            t10098 = t10096 ** 2
            t10099 = t10095 * t10098
            t10104 = t10099 ** 2
            t10102 = t10098 ** 2
            t10097 = t10095 * t10096
            t10100 = t10097 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3927e4) * (-325 * t10096 - 525 * t10097 + 3390 * t10098 + 2970 * t10099 + 22097 * t10102 - 17537 * t10104 + 5 + (-12874 + 5244 * t10100) * t10100 + (-6650 * t10100 + 6365 * t10102 - 2185 * t10104 + 25) * t10095) * np.cos((5 * phi1 - phi2))

        if Bindx == 1359:
            t10114 = np.sin(phi)
            t10111 = t10114 ** 2
            t10112 = t10114 * t10111
            t10107 = np.cos(phi)
            t10108 = t10107 ** 2
            t10109 = t10108 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t10107 * t10112 ** 2 * (-399 * t10109 - 5 + (437 * t10109 + 95) * t10108) * np.sin((5 * phi1)) * ((1 + t10107) ** (-0.1e1 / 0.2e1)) * ((1 - t10107) ** (-0.1e1 / 0.2e1))

        if Bindx == 1360:
            t10115 = np.cos(phi)
            t10116 = t10115 ** 2
            t10118 = t10116 ** 2
            t10119 = t10115 * t10118
            t10124 = t10119 ** 2
            t10122 = t10118 ** 2
            t10117 = t10115 * t10116
            t10120 = t10117 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.3927e4) * (-325 * t10116 + 525 * t10117 + 3390 * t10118 - 2970 * t10119 + 22097 * t10122 - 17537 * t10124 + 5 + (-12874 + 5244 * t10120) * t10120 + (6650 * t10120 - 6365 * t10122 + 2185 * t10124 - 25) * t10115) * np.cos((5 * phi1 + phi2))

        if Bindx == 1361:
            t10138 = np.sin(phi)
            t10136 = t10138 ** 2
            t10127 = np.cos(phi)
            t10128 = t10127 ** 2
            t10130 = t10128 ** 2
            t10134 = t10130 ** 2
            t10129 = t10127 * t10128
            t10132 = t10129 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t10136 ** 2 * (-1550 * t10128 - 5110 * t10129 + 13300 * t10130 - 33250 * t10132 + 24035 * t10134 + 25 + (25802 * t10130 - 47234 * t10132 + 28842 * t10134 + 260) * t10127) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t10127) ** (-0.1e1 / 0.2e1)) * ((1 - t10127) ** (-0.1e1 / 0.2e1))

        if Bindx == 1362:
            t10139 = np.cos(phi)
            t10140 = t10139 ** 2
            t10142 = t10140 ** 2
            t10143 = t10139 * t10142
            t10148 = t10143 ** 2
            t10146 = t10142 ** 2
            t10141 = t10139 * t10140
            t10144 = t10141 ** 2
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.17e2) * (-549 * t10140 + 5855 * t10141 + 6070 * t10142 - 31894 * t10143 + 55765 * t10146 - 53713 * t10148 + 9 + (-26810 + 19228 * t10144) * t10144 + (70414 * t10144 - 68115 * t10146 + 24035 * t10148 - 295) * t10139) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 1363:
            t10152 = np.cos(phi)
            t10153 = t10152 ** 2
            t10155 = t10153 ** 2
            t10156 = t10152 * t10155
            t10161 = t10156 ** 2
            t10159 = t10155 ** 2
            t10154 = t10152 * t10153
            t10157 = t10154 ** 2
            t10151 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.17e2) * t10151 ** 2 * (4845 * t10153 - 1285 * t10154 - 42610 * t10155 - 3150 * t10156 + 130074 * t10157 - 163305 * t10159 + 72105 * t10161 - 85 + (40470 * t10157 - 78375 * t10159 + 43263 * t10161 + 101) * t10152) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t10152) ** (-0.1e1 / 0.2e1)) * ((1 - t10152) ** (-0.1e1 / 0.2e1))

        if Bindx == 1364:
            t10163 = np.cos(phi)
            t10164 = t10163 ** 2
            t10166 = t10164 ** 2
            t10167 = t10163 * t10166
            t10172 = t10167 ** 2
            t10170 = t10166 ** 2
            t10165 = t10163 * t10164
            t10168 = t10165 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (13939 * t10164 + 79585 * t10165 - 98650 * t10166 - 419402 * t10167 + 25365 * t10170 - 292809 * t10172 - 263 + (180390 + 173052 * t10168) * t10168 + (949506 * t10168 - 964725 * t10170 + 360525 * t10172 - 4465) * t10163) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 1365:
            t10176 = np.cos(phi)
            t10177 = t10176 ** 2
            t10179 = t10177 ** 2
            t10180 = t10176 * t10179
            t10185 = t10180 ** 2
            t10183 = t10179 ** 2
            t10178 = t10176 * t10177
            t10181 = t10178 ** 2
            t10175 = np.sin(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.7e1) * t10175 ** 2 * (1175 * t10177 - 5570 * t10178 - 10290 * t10179 + 18880 * t10180 + 35302 * t10181 - 49685 * t10183 + 24035 * t10185 - 25 + (-18620 * t10181 - 4180 * t10183 + 9614 * t10185 + 388) * t10176) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t10176) ** (-0.1e1 / 0.2e1)) * ((1 - t10176) ** (-0.1e1 / 0.2e1))

        if Bindx == 1366:
            t10187 = np.cos(phi)
            t10188 = t10187 ** 2
            t10190 = t10188 ** 2
            t10191 = t10187 * t10190
            t10196 = t10191 ** 2
            t10194 = t10190 ** 2
            t10189 = t10187 * t10188
            t10192 = t10189 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * (1107 * t10188 + 515 * t10189 - 7090 * t10190 - 5638 * t10191 - 13055 * t10194 - 121 * t10196 - 27 + (16150 + 3036 * t10192) * t10192 + (17878 * t10192 - 21595 * t10194 + 8855 * t10196 - 15) * t10187) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 1367:
            t10210 = np.sin(phi)
            t10208 = t10210 ** 2
            t10199 = np.cos(phi)
            t10200 = t10199 ** 2
            t10202 = t10200 ** 2
            t10206 = t10202 ** 2
            t10201 = t10199 * t10200
            t10204 = t10201 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t10208 ** 2 * (192 * t10200 + 1060 * t10201 - 76 * t10202 - 2000 * t10204 + 2530 * t10206 - 6 + (-2966 * t10202 + 1892 * t10204 + 759 * t10206 - 105) * t10199) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t10199) ** (-0.1e1 / 0.2e1)) * ((1 - t10199) ** (-0.1e1 / 0.2e1))

        if Bindx == 1368:
            t10211 = np.cos(phi)
            t10212 = t10211 ** 2
            t10214 = t10212 ** 2
            t10215 = t10211 * t10214
            t10220 = t10215 ** 2
            t10218 = t10214 ** 2
            t10213 = t10211 * t10212
            t10216 = t10213 ** 2
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (625 * t10212 - 1969 * t10213 - 4710 * t10214 + 2594 * t10215 - 10949 * t10218 + 2189 * t10220 - 25 + (11858 + 1012 * t10216) * t10216 + (3342 * t10216 - 8055 * t10218 + 3795 * t10220 + 293) * t10211) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 1369:
            t10233 = np.sin(phi)
            t10230 = t10233 ** 2
            t10231 = t10233 * t10230
            t10223 = np.cos(phi)
            t10224 = t10223 ** 2
            t10225 = t10223 * t10224
            t10228 = t10225 ** 2
            t10226 = t10224 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.627e3) * t10231 ** 2 * (-247 * t10224 - 270 * t10225 + 325 * t10226 + 575 * t10228 + 19 + (824 * t10226 + 138 * t10228 - 20) * t10223) * np.sin((5 * phi1 + 10 * phi2)) * ((1 + t10223) ** (-0.1e1 / 0.2e1)) * ((1 - t10223) ** (-0.1e1 / 0.2e1))

        if Bindx == 1370:
            t10234 = np.cos(phi)
            t10235 = t10234 ** 2
            t10237 = t10235 ** 2
            t10238 = t10234 * t10237
            t10243 = t10238 ** 2
            t10241 = t10237 ** 2
            t10236 = t10234 * t10235
            t10239 = t10236 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.14421e5) * (-25 * t10235 - 109 * t10236 - 50 * t10237 + 194 * t10238 - 239 * t10241 + 59 * t10243 + 5 + (238 + 12 * t10239) * t10239 + (-58 * t10239 - 95 * t10241 + 55 * t10243 + 13) * t10234) * np.cos((5 * phi1 + 11 * phi2))

        if Bindx == 1371:
            t10246 = np.cos(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.4807e4) * ((1 - t10246) ** (0.7e1 / 0.2e1)) * ((1 + t10246) ** (0.17e2 / 0.2e1)) * np.sin((5 * phi1 + 12 * phi2))

        if Bindx == 1372:
            t10247 = np.cos(phi)
            t10248 = t10247 ** 2
            t10250 = t10248 ** 2
            t10251 = t10247 * t10250
            t10255 = t10251 ** 2
            t10256 = t10247 * t10255
            t10253 = t10250 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.33649e5) * np.cos((6 * phi1 - 12 * phi2)) * (27 * t10250 - 36 * t10251 - 27 * t10253 + 12 * t10255 - 6 * t10256 - 1 + (36 * t10251 - 12) * t10248 + (2 * t10248 - 2 * t10253 + t10256 + 6) * t10247)

        if Bindx == 1373:
            t10268 = np.sin(phi)
            t10265 = t10268 ** 2
            t10266 = t10268 * t10265
            t10258 = np.cos(phi)
            t10259 = t10258 ** 2
            t10260 = t10258 * t10259
            t10263 = t10260 ** 2
            t10261 = t10259 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.100947e6) * t10266 ** 2 * (3 * t10259 + 10 * t10260 - 25 * t10261 - 11 * t10263 + 1 + (24 * t10261 + 2 * t10263 - 4) * t10258) * np.sin((6 * phi1 - 11 * phi2)) * ((1 + t10258) ** (-0.1e1 / 0.2e1)) * ((1 - t10258) ** (-0.1e1 / 0.2e1))

        if Bindx == 1374:
            t10269 = np.cos(phi)
            t10270 = t10269 ** 2
            t10272 = t10270 ** 2
            t10273 = t10269 * t10272
            t10278 = t10273 ** 2
            t10276 = t10272 ** 2
            t10271 = t10269 * t10270
            t10274 = t10271 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4389e4) * (-50 * t10270 + 121 * t10271 + 45 * t10272 - 366 * t10273 - 441 * t10276 + 166 * t10278 + 5 + (252 + 23 * t10274) * t10274 + (282 * t10274 + 85 * t10276 - 115 * t10278 - 7) * t10269) * np.cos((6 * phi1 - 10 * phi2))

        if Bindx == 1375:
            t10292 = np.sin(phi)
            t10290 = t10292 ** 2
            t10281 = np.cos(phi)
            t10282 = t10281 ** 2
            t10284 = t10282 ** 2
            t10288 = t10284 ** 2
            t10283 = t10281 * t10282
            t10286 = t10283 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.133e3) * t10290 ** 2 * (-666 * t10282 + 162 * t10283 + 2304 * t10284 - 678 * t10286 - 2277 * t10288 + 37 + (-2862 * t10284 + 3366 * t10286 + 506 * t10288 + 108) * t10281) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t10281) ** (-0.1e1 / 0.2e1)) * ((1 - t10281) ** (-0.1e1 / 0.2e1))

        if Bindx == 1376:
            t10293 = np.cos(phi)
            t10294 = t10293 ** 2
            t10296 = t10294 ** 2
            t10297 = t10293 * t10296
            t10302 = t10297 ** 2
            t10300 = t10296 ** 2
            t10295 = t10293 * t10294
            t10298 = t10295 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * (532 * t10294 + 3332 * t10295 - 5607 * t10296 - 6888 * t10297 - 20337 * t10300 + 5852 * t10302 - 19 + (17808 + 1771 * t10298) * t10298 + (-408 * t10298 + 11452 * t10300 - 7084 * t10302 - 404) * t10293) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 1377:
            t10306 = np.cos(phi)
            t10307 = t10306 ** 2
            t10309 = t10307 ** 2
            t10310 = t10306 * t10309
            t10315 = t10310 ** 2
            t10313 = t10309 ** 2
            t10308 = t10306 * t10307
            t10311 = t10308 ** 2
            t10305 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * t10305 ** 2 * (1015 * t10307 - 4410 * t10308 - 2730 * t10309 + 17136 * t10310 - 4746 * t10311 + 18375 * t10313 - 12397 * t10315 - 29 + (-23820 * t10311 + 7700 * t10313 + 3542 * t10315 + 364) * t10306) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t10306) ** (-0.1e1 / 0.2e1)) * ((1 - t10306) ** (-0.1e1 / 0.2e1))

        if Bindx == 1378:
            t10317 = np.cos(phi)
            t10318 = t10317 ** 2
            t10320 = t10318 ** 2
            t10321 = t10317 * t10320
            t10326 = t10321 ** 2
            t10324 = t10320 ** 2
            t10319 = t10317 * t10318
            t10322 = t10319 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (11298 * t10318 - 2695 * t10319 - 75285 * t10320 + 49266 * t10321 - 158175 * t10324 + 8778 * t10326 - 269 + (180516 + 33649 * t10322) * t10322 + (-178182 * t10322 + 232085 * t10324 - 100947 * t10326 - 39) * t10317) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 1379:
            t10330 = np.cos(phi)
            t10331 = t10330 ** 2
            t10333 = t10331 ** 2
            t10334 = t10330 * t10333
            t10339 = t10334 ** 2
            t10337 = t10333 ** 2
            t10332 = t10330 * t10331
            t10335 = t10332 ** 2
            t10329 = np.sin(phi)
            tfunc[..., c] = 0.75e2 / 0.1024e4 * np.sqrt(0.7e1) * t10329 ** 2 * (-1175 * t10331 - 5570 * t10332 + 10290 * t10333 + 18880 * t10334 - 35302 * t10335 + 49685 * t10337 - 24035 * t10339 + 25 + (-18620 * t10335 - 4180 * t10337 + 9614 * t10339 + 388) * t10330) * np.sin((6 * phi1 - 5 * phi2)) * ((1 - t10330) ** (-0.1e1 / 0.2e1)) * ((1 + t10330) ** (-0.1e1 / 0.2e1))

        if Bindx == 1380:
            t10341 = np.cos(phi)
            t10342 = t10341 ** 2
            t10344 = t10342 ** 2
            t10345 = t10341 * t10344
            t10350 = t10345 ** 2
            t10348 = t10344 ** 2
            t10343 = t10341 * t10342
            t10346 = t10343 ** 2
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (364 * t10342 - 2470 * t10343 - 2435 * t10344 + 12588 * t10345 + 2755 * t10348 - 9196 * t10350 - 7 + (3712 + 4807 * t10346) * t10346 + (-27436 * t10346 + 26790 * t10348 - 9614 * t10350 + 142) * t10341) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 1381:
            t10364 = np.sin(phi)
            t10362 = t10364 ** 2
            t10353 = np.cos(phi)
            t10354 = t10353 ** 2
            t10356 = t10354 ** 2
            t10360 = t10356 ** 2
            t10355 = t10353 * t10354
            t10358 = t10355 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * t10362 ** 2 * (1242 * t10354 - 338 * t10355 - 9348 * t10356 + 21014 * t10358 - 14421 * t10360 - 23 + (3534 * t10356 - 11286 * t10358 + 9614 * t10360 + 12) * t10353) * np.sin((6 * phi1 - 3 * phi2)) * ((1 - t10353) ** (-0.1e1 / 0.2e1)) * ((1 + t10353) ** (-0.1e1 / 0.2e1))

        if Bindx == 1382:
            t10365 = np.cos(phi)
            t10366 = t10365 ** 2
            t10368 = t10366 ** 2
            t10369 = t10365 * t10368
            t10374 = t10369 ** 2
            t10372 = t10368 ** 2
            t10367 = t10365 * t10366
            t10370 = t10367 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.357e3) * (-290 * t10366 - 1595 * t10367 + 2845 * t10368 + 8122 * t10369 + 18791 * t10372 - 15466 * t10374 + 5 + (-10692 + 4807 * t10370) * t10370 + (-16606 * t10370 + 14801 * t10372 - 4807 * t10374 + 85) * t10365) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 1383:
            t10387 = np.sin(phi)
            t10384 = t10387 ** 2
            t10385 = t10387 * t10384
            t10377 = np.cos(phi)
            t10378 = t10377 ** 2
            t10379 = t10377 * t10378
            t10382 = t10379 ** 2
            t10380 = t10378 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.561e3) * t10385 ** 2 * (-285 * t10378 + 1710 * t10379 + 1995 * t10380 - 3059 * t10382 + 5 + (-6384 * t10380 + 6118 * t10382 - 100) * t10377) * np.sin((6 * phi1 - phi2)) * ((1 - t10377) ** (-0.1e1 / 0.2e1)) * ((1 + t10377) ** (-0.1e1 / 0.2e1))

        if Bindx == 1384:
            t10388 = np.cos(phi)
            t10389 = t10388 ** 2
            t10390 = t10389 ** 2
            t10392 = t10390 ** 2
            t10391 = t10389 * t10390
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t10390 + 15447 * t10392 + 5 + (-9904 + 3059 * t10391) * t10391 + (-11172 * t10392 - 300) * t10389) * np.cos((6 * phi1))

        if Bindx == 1385:
            t10405 = np.sin(phi)
            t10402 = t10405 ** 2
            t10403 = t10405 * t10402
            t10395 = np.cos(phi)
            t10396 = t10395 ** 2
            t10397 = t10395 * t10396
            t10400 = t10397 ** 2
            t10398 = t10396 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.561e3) * t10403 ** 2 * (285 * t10396 + 1710 * t10397 - 1995 * t10398 + 3059 * t10400 - 5 + (-6384 * t10398 + 6118 * t10400 - 100) * t10395) * np.sin((6 * phi1 + phi2)) * ((1 - t10395) ** (-0.1e1 / 0.2e1)) * ((1 + t10395) ** (-0.1e1 / 0.2e1))

        if Bindx == 1386:
            t10406 = np.cos(phi)
            t10407 = t10406 ** 2
            t10409 = t10407 ** 2
            t10410 = t10406 * t10409
            t10415 = t10410 ** 2
            t10413 = t10409 ** 2
            t10408 = t10406 * t10407
            t10411 = t10408 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.357e3) * (-290 * t10407 + 1595 * t10408 + 2845 * t10409 - 8122 * t10410 + 18791 * t10413 - 15466 * t10415 + 5 + (-10692 + 4807 * t10411) * t10411 + (16606 * t10411 - 14801 * t10413 + 4807 * t10415 - 85) * t10406) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 1387:
            t10429 = np.sin(phi)
            t10427 = t10429 ** 2
            t10418 = np.cos(phi)
            t10419 = t10418 ** 2
            t10421 = t10419 ** 2
            t10425 = t10421 ** 2
            t10420 = t10418 * t10419
            t10423 = t10420 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * t10427 ** 2 * (-1242 * t10419 - 338 * t10420 + 9348 * t10421 - 21014 * t10423 + 14421 * t10425 + 23 + (3534 * t10421 - 11286 * t10423 + 9614 * t10425 + 12) * t10418) * np.sin((6 * phi1 + 3 * phi2)) * ((1 - t10418) ** (-0.1e1 / 0.2e1)) * ((1 + t10418) ** (-0.1e1 / 0.2e1))

        if Bindx == 1388:
            t10430 = np.cos(phi)
            t10431 = t10430 ** 2
            t10433 = t10431 ** 2
            t10434 = t10430 * t10433
            t10439 = t10434 ** 2
            t10437 = t10433 ** 2
            t10432 = t10430 * t10431
            t10435 = t10432 ** 2
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (364 * t10431 + 2470 * t10432 - 2435 * t10433 - 12588 * t10434 + 2755 * t10437 - 9196 * t10439 - 7 + (3712 + 4807 * t10435) * t10435 + (27436 * t10435 - 26790 * t10437 + 9614 * t10439 - 142) * t10430) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 1389:
            t10443 = np.cos(phi)
            t10444 = t10443 ** 2
            t10446 = t10444 ** 2
            t10447 = t10443 * t10446
            t10452 = t10447 ** 2
            t10450 = t10446 ** 2
            t10445 = t10443 * t10444
            t10448 = t10445 ** 2
            t10442 = np.sin(phi)
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.7e1) * t10442 ** 2 * (1175 * t10444 - 5570 * t10445 - 10290 * t10446 + 18880 * t10447 + 35302 * t10448 - 49685 * t10450 + 24035 * t10452 - 25 + (-18620 * t10448 - 4180 * t10450 + 9614 * t10452 + 388) * t10443) * np.sin((6 * phi1 + 5 * phi2)) * ((1 - t10443) ** (-0.1e1 / 0.2e1)) * ((1 + t10443) ** (-0.1e1 / 0.2e1))

        if Bindx == 1390:
            t10454 = np.cos(phi)
            t10455 = t10454 ** 2
            t10457 = t10455 ** 2
            t10458 = t10454 * t10457
            t10463 = t10458 ** 2
            t10461 = t10457 ** 2
            t10456 = t10454 * t10455
            t10459 = t10456 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (11298 * t10455 + 2695 * t10456 - 75285 * t10457 - 49266 * t10458 - 158175 * t10461 + 8778 * t10463 - 269 + (180516 + 33649 * t10459) * t10459 + (178182 * t10459 - 232085 * t10461 + 100947 * t10463 + 39) * t10454) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 1391:
            t10467 = np.cos(phi)
            t10468 = t10467 ** 2
            t10470 = t10468 ** 2
            t10471 = t10467 * t10470
            t10476 = t10471 ** 2
            t10474 = t10470 ** 2
            t10469 = t10467 * t10468
            t10472 = t10469 ** 2
            t10466 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * t10466 ** 2 * (-1015 * t10468 - 4410 * t10469 + 2730 * t10470 + 17136 * t10471 + 4746 * t10472 - 18375 * t10474 + 12397 * t10476 + 29 + (-23820 * t10472 + 7700 * t10474 + 3542 * t10476 + 364) * t10467) * np.sin((6 * phi1 + 7 * phi2)) * ((1 - t10467) ** (-0.1e1 / 0.2e1)) * ((1 + t10467) ** (-0.1e1 / 0.2e1))

        if Bindx == 1392:
            t10478 = np.cos(phi)
            t10479 = t10478 ** 2
            t10481 = t10479 ** 2
            t10482 = t10478 * t10481
            t10487 = t10482 ** 2
            t10485 = t10481 ** 2
            t10480 = t10478 * t10479
            t10483 = t10480 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * (532 * t10479 - 3332 * t10480 - 5607 * t10481 + 6888 * t10482 - 20337 * t10485 + 5852 * t10487 - 19 + (17808 + 1771 * t10483) * t10483 + (408 * t10483 - 11452 * t10485 + 7084 * t10487 + 404) * t10478) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 1393:
            t10501 = np.sin(phi)
            t10499 = t10501 ** 2
            t10490 = np.cos(phi)
            t10491 = t10490 ** 2
            t10493 = t10491 ** 2
            t10497 = t10493 ** 2
            t10492 = t10490 * t10491
            t10495 = t10492 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.133e3) * t10499 ** 2 * (666 * t10491 + 162 * t10492 - 2304 * t10493 + 678 * t10495 + 2277 * t10497 - 37 + (-2862 * t10493 + 3366 * t10495 + 506 * t10497 + 108) * t10490) * np.sin((6 * phi1 + 9 * phi2)) * ((1 - t10490) ** (-0.1e1 / 0.2e1)) * ((1 + t10490) ** (-0.1e1 / 0.2e1))

        if Bindx == 1394:
            t10502 = np.cos(phi)
            t10503 = t10502 ** 2
            t10505 = t10503 ** 2
            t10506 = t10502 * t10505
            t10511 = t10506 ** 2
            t10509 = t10505 ** 2
            t10504 = t10502 * t10503
            t10507 = t10504 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4389e4) * (-50 * t10503 - 121 * t10504 + 45 * t10505 + 366 * t10506 - 441 * t10509 + 166 * t10511 + 5 + (252 + 23 * t10507) * t10507 + (-282 * t10507 - 85 * t10509 + 115 * t10511 + 7) * t10502) * np.cos((6 * phi1 + 10 * phi2))

        if Bindx == 1395:
            t10524 = np.sin(phi)
            t10521 = t10524 ** 2
            t10522 = t10524 * t10521
            t10514 = np.cos(phi)
            t10515 = t10514 ** 2
            t10516 = t10514 * t10515
            t10519 = t10516 ** 2
            t10517 = t10515 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.100947e6) * t10522 ** 2 * (-3 * t10515 + 10 * t10516 + 25 * t10517 + 11 * t10519 - 1 + (24 * t10517 + 2 * t10519 - 4) * t10514) * np.sin((6 * phi1 + 11 * phi2)) * ((1 - t10514) ** (-0.1e1 / 0.2e1)) * ((1 + t10514) ** (-0.1e1 / 0.2e1))

        if Bindx == 1396:
            t10525 = np.cos(phi)
            t10526 = t10525 ** 2
            t10528 = t10526 ** 2
            t10529 = t10525 * t10528
            t10533 = t10529 ** 2
            t10534 = t10525 * t10533
            t10531 = t10528 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.33649e5) * np.cos((6 * phi1 + 12 * phi2)) * (27 * t10528 + 36 * t10529 - 27 * t10531 + 12 * t10533 + 6 * t10534 - 1 + (-36 * t10529 - 12) * t10526 + (-2 * t10526 + 2 * t10531 + t10534 - 6) * t10525)

        if Bindx == 1397:
            t10536 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.5313e4) * ((1 - t10536) ** (0.19e2 / 0.2e1)) * ((1 + t10536) ** (0.5e1 / 0.2e1)) * np.sin((7 * phi1 - 12 * phi2))

        if Bindx == 1398:
            t10537 = np.cos(phi)
            t10538 = t10537 ** 2
            t10540 = t10538 ** 2
            t10541 = t10537 * t10540
            t10546 = t10541 ** 2
            t10544 = t10540 ** 2
            t10539 = t10537 * t10538
            t10542 = t10539 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (-49 * t10538 - 81 * t10539 + 294 * t10540 - 222 * t10541 - 219 * t10544 + 179 * t10546 - 7 + (-210 + 12 * t10542) * t10542 + (462 * t10542 - 119 * t10544 - 77 * t10546 + 37) * t10537) * np.cos((7 * phi1 - 11 * phi2))

        if Bindx == 1399:
            t10560 = np.sin(phi)
            t10558 = t10560 ** 2
            t10549 = np.cos(phi)
            t10550 = t10549 ** 2
            t10552 = t10550 ** 2
            t10556 = t10552 ** 2
            t10551 = t10549 * t10550
            t10554 = t10551 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * t10558 ** 2 * (86 * t10550 - 910 * t10551 + 1232 * t10552 - 1750 * t10554 - 805 * t10556 - 43 + (98 * t10552 + 1814 * t10554 + 138 * t10556 + 140) * t10549) * np.sin((7 * phi1 - 10 * phi2)) * ((1 - t10549) ** (-0.1e1 / 0.2e1)) * ((1 + t10549) ** (-0.1e1 / 0.2e1))

        if Bindx == 1400:
            t10561 = np.cos(phi)
            t10562 = t10561 ** 2
            t10564 = t10562 ** 2
            t10565 = t10561 * t10564
            t10570 = t10565 ** 2
            t10568 = t10564 ** 2
            t10563 = t10561 * t10562
            t10566 = t10563 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * (-1911 * t10562 + 3419 * t10563 + 3906 * t10564 - 14046 * t10565 - 17529 * t10568 + 8789 * t10570 + 147 + (5586 + 1012 * t10566) * t10566 + (15414 * t10566 + 609 * t10568 - 5313 * t10570 - 83) * t10561) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 1401:
            t10574 = np.cos(phi)
            t10575 = t10574 ** 2
            t10577 = t10575 ** 2
            t10578 = t10574 * t10577
            t10583 = t10578 ** 2
            t10581 = t10577 ** 2
            t10576 = t10574 * t10575
            t10579 = t10576 ** 2
            t10573 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * t10573 ** 2 * (5838 * t10575 + 2037 * t10576 - 28812 * t10577 + 22302 * t10578 + 37548 * t10579 + 7938 * t10581 - 24794 * t10583 - 278 + (-60678 * t10579 + 34727 * t10581 + 5313 * t10583 - 1141) * t10574) * np.sin((7 * phi1 - 8 * phi2)) * ((1 - t10574) ** (-0.1e1 / 0.2e1)) * ((1 + t10574) ** (-0.1e1 / 0.2e1))

        if Bindx == 1402:
            t10585 = np.cos(phi)
            t10586 = t10585 ** 2
            t10588 = t10586 ** 2
            t10589 = t10585 * t10588
            t10594 = t10589 ** 2
            t10592 = t10588 ** 2
            t10587 = t10585 * t10586
            t10590 = t10587 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (4669 * t10586 + 38745 * t10587 - 57750 * t10588 - 88746 * t10589 - 245565 * t10592 + 78617 * t10594 - 161 + (199962 + 21252 * t10590) * t10590 + (14994 * t10590 + 125195 * t10592 - 86779 * t10594 - 4433) * t10585) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 1403:
            t10598 = np.cos(phi)
            t10599 = t10598 ** 2
            t10601 = t10599 ** 2
            t10602 = t10598 * t10601
            t10607 = t10602 ** 2
            t10605 = t10601 ** 2
            t10600 = t10598 * t10599
            t10603 = t10600 ** 2
            t10597 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * t10597 ** 2 * (1015 * t10599 - 4410 * t10600 - 2730 * t10601 + 17136 * t10602 - 4746 * t10603 + 18375 * t10605 - 12397 * t10607 - 29 + (-23820 * t10603 + 7700 * t10605 + 3542 * t10607 + 364) * t10598) * np.sin((7 * phi1 - 6 * phi2)) * ((1 - t10598) ** (-0.1e1 / 0.2e1)) * ((1 + t10598) ** (-0.1e1 / 0.2e1))

        if Bindx == 1404:
            t10609 = np.cos(phi)
            t10610 = t10609 ** 2
            t10612 = t10610 ** 2
            t10613 = t10609 * t10612
            t10618 = t10613 ** 2
            t10616 = t10612 ** 2
            t10611 = t10609 * t10610
            t10614 = t10611 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * (1107 * t10610 - 515 * t10611 - 7090 * t10612 + 5638 * t10613 - 13055 * t10616 - 121 * t10618 - 27 + (16150 + 3036 * t10614) * t10614 + (-17878 * t10614 + 21595 * t10616 - 8855 * t10618 + 15) * t10609) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 1405:
            t10632 = np.sin(phi)
            t10630 = t10632 ** 2
            t10621 = np.cos(phi)
            t10622 = t10621 ** 2
            t10624 = t10622 ** 2
            t10628 = t10624 ** 2
            t10623 = t10621 * t10622
            t10626 = t10623 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * t10630 ** 2 * (132 * t10622 + 412 * t10623 - 938 * t10624 + 2324 * t10626 - 1771 * t10628 - 3 + (-926 * t10624 + 44 * t10626 + 759 * t10628 - 33) * t10621) * np.sin((7 * phi1 - 4 * phi2)) * ((1 - t10621) ** (-0.1e1 / 0.2e1)) * ((1 + t10621) ** (-0.1e1 / 0.2e1))

        if Bindx == 1406:
            t10633 = np.cos(phi)
            t10634 = t10633 ** 2
            t10636 = t10634 ** 2
            t10637 = t10633 * t10636
            t10642 = t10637 ** 2
            t10640 = t10636 ** 2
            t10635 = t10633 * t10634
            t10638 = t10635 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * (49 * t10634 - 695 * t10635 - 230 * t10636 + 3214 * t10637 + 1955 * t10640 - 2563 * t10642 - 1 + (-222 + 1012 * t10638) * t10638 + (-6286 * t10638 + 5495 * t10640 - 1771 * t10642 + 43) * t10633) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 1407:
            t10655 = np.sin(phi)
            t10652 = t10655 ** 2
            t10653 = t10655 * t10652
            t10645 = np.cos(phi)
            t10646 = t10645 ** 2
            t10647 = t10645 * t10646
            t10650 = t10647 ** 2
            t10648 = t10646 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t10653 ** 2 * (-245 * t10646 + 310 * t10647 + 1435 * t10648 - 1771 * t10650 + 5 + (-1232 * t10648 + 1518 * t10650 - 20) * t10645) * np.sin((7 * phi1 - 2 * phi2)) * ((1 - t10645) ** (-0.1e1 / 0.2e1)) * ((1 + t10645) ** (-0.1e1 / 0.2e1))

        if Bindx == 1408:
            t10656 = np.cos(phi)
            t10657 = t10656 ** 2
            t10659 = t10657 ** 2
            t10660 = t10656 * t10659
            t10665 = t10660 ** 2
            t10663 = t10659 ** 2
            t10658 = t10656 * t10657
            t10661 = t10658 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.3553e4) * (-265 * t10657 - 595 * t10658 + 2270 * t10659 + 2702 * t10660 + 10561 * t10663 - 7301 * t10665 + 5 + (-7202 + 1932 * t10661) * t10661 + (-4886 * t10661 + 3871 * t10663 - 1127 * t10665 + 35) * t10656) * np.cos((7 * phi1 - phi2))

        if Bindx == 1409:
            t10674 = np.sin(phi)
            t10671 = t10674 ** 2
            t10672 = t10671 ** 2
            t10668 = np.cos(phi)
            t10669 = t10668 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t10668 * t10672 ** 2 * (5 + (-70 + 161 * t10669) * t10669) * np.sin((7 * phi1)) * ((1 - t10668) ** (-0.1e1 / 0.2e1)) * ((1 + t10668) ** (-0.1e1 / 0.2e1))

        if Bindx == 1410:
            t10675 = np.cos(phi)
            t10676 = t10675 ** 2
            t10678 = t10676 ** 2
            t10679 = t10675 * t10678
            t10684 = t10679 ** 2
            t10682 = t10678 ** 2
            t10677 = t10675 * t10676
            t10680 = t10677 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3553e4) * (-265 * t10676 + 595 * t10677 + 2270 * t10678 - 2702 * t10679 + 10561 * t10682 - 7301 * t10684 + 5 + (-7202 + 1932 * t10680) * t10680 + (4886 * t10680 - 3871 * t10682 + 1127 * t10684 - 35) * t10675) * np.cos((7 * phi1 + phi2))

        if Bindx == 1411:
            t10697 = np.sin(phi)
            t10694 = t10697 ** 2
            t10695 = t10697 * t10694
            t10687 = np.cos(phi)
            t10688 = t10687 ** 2
            t10689 = t10687 * t10688
            t10692 = t10689 ** 2
            t10690 = t10688 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t10695 ** 2 * (245 * t10688 + 310 * t10689 - 1435 * t10690 + 1771 * t10692 - 5 + (-1232 * t10690 + 1518 * t10692 - 20) * t10687) * np.sin((7 * phi1 + 2 * phi2)) * ((1 - t10687) ** (-0.1e1 / 0.2e1)) * ((1 + t10687) ** (-0.1e1 / 0.2e1))

        if Bindx == 1412:
            t10698 = np.cos(phi)
            t10699 = t10698 ** 2
            t10701 = t10699 ** 2
            t10702 = t10698 * t10701
            t10707 = t10702 ** 2
            t10705 = t10701 ** 2
            t10700 = t10698 * t10699
            t10703 = t10700 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * (49 * t10699 + 695 * t10700 - 230 * t10701 - 3214 * t10702 + 1955 * t10705 - 2563 * t10707 - 1 + (-222 + 1012 * t10703) * t10703 + (6286 * t10703 - 5495 * t10705 + 1771 * t10707 - 43) * t10698) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 1413:
            t10721 = np.sin(phi)
            t10719 = t10721 ** 2
            t10710 = np.cos(phi)
            t10711 = t10710 ** 2
            t10713 = t10711 ** 2
            t10717 = t10713 ** 2
            t10712 = t10710 * t10711
            t10715 = t10712 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.6783e4) * t10719 ** 2 * (-132 * t10711 + 412 * t10712 + 938 * t10713 - 2324 * t10715 + 1771 * t10717 + 3 + (-926 * t10713 + 44 * t10715 + 759 * t10717 - 33) * t10710) * np.sin((7 * phi1 + 4 * phi2)) * ((1 - t10710) ** (-0.1e1 / 0.2e1)) * ((1 + t10710) ** (-0.1e1 / 0.2e1))

        if Bindx == 1414:
            t10722 = np.cos(phi)
            t10723 = t10722 ** 2
            t10725 = t10723 ** 2
            t10726 = t10722 * t10725
            t10731 = t10726 ** 2
            t10729 = t10725 ** 2
            t10724 = t10722 * t10723
            t10727 = t10724 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * (1107 * t10723 + 515 * t10724 - 7090 * t10725 - 5638 * t10726 - 13055 * t10729 - 121 * t10731 - 27 + (16150 + 3036 * t10727) * t10727 + (17878 * t10727 - 21595 * t10729 + 8855 * t10731 - 15) * t10722) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 1415:
            t10735 = np.cos(phi)
            t10736 = t10735 ** 2
            t10738 = t10736 ** 2
            t10739 = t10735 * t10738
            t10744 = t10739 ** 2
            t10742 = t10738 ** 2
            t10737 = t10735 * t10736
            t10740 = t10737 ** 2
            t10734 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * t10734 ** 2 * (-1015 * t10736 - 4410 * t10737 + 2730 * t10738 + 17136 * t10739 + 4746 * t10740 - 18375 * t10742 + 12397 * t10744 + 29 + (-23820 * t10740 + 7700 * t10742 + 3542 * t10744 + 364) * t10735) * np.sin((7 * phi1 + 6 * phi2)) * ((1 - t10735) ** (-0.1e1 / 0.2e1)) * ((1 + t10735) ** (-0.1e1 / 0.2e1))

        if Bindx == 1416:
            t10746 = np.cos(phi)
            t10747 = t10746 ** 2
            t10749 = t10747 ** 2
            t10750 = t10746 * t10749
            t10755 = t10750 ** 2
            t10753 = t10749 ** 2
            t10748 = t10746 * t10747
            t10751 = t10748 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (4669 * t10747 - 38745 * t10748 - 57750 * t10749 + 88746 * t10750 - 245565 * t10753 + 78617 * t10755 - 161 + (199962 + 21252 * t10751) * t10751 + (-14994 * t10751 - 125195 * t10753 + 86779 * t10755 + 4433) * t10746) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 1417:
            t10759 = np.cos(phi)
            t10760 = t10759 ** 2
            t10762 = t10760 ** 2
            t10763 = t10759 * t10762
            t10768 = t10763 ** 2
            t10766 = t10762 ** 2
            t10761 = t10759 * t10760
            t10764 = t10761 ** 2
            t10758 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * t10758 ** 2 * (-5838 * t10760 + 2037 * t10761 + 28812 * t10762 + 22302 * t10763 - 37548 * t10764 - 7938 * t10766 + 24794 * t10768 + 278 + (-60678 * t10764 + 34727 * t10766 + 5313 * t10768 - 1141) * t10759) * np.sin((7 * phi1 + 8 * phi2)) * ((1 - t10759) ** (-0.1e1 / 0.2e1)) * ((1 + t10759) ** (-0.1e1 / 0.2e1))

        if Bindx == 1418:
            t10770 = np.cos(phi)
            t10771 = t10770 ** 2
            t10773 = t10771 ** 2
            t10774 = t10770 * t10773
            t10779 = t10774 ** 2
            t10777 = t10773 ** 2
            t10772 = t10770 * t10771
            t10775 = t10772 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * (-1911 * t10771 - 3419 * t10772 + 3906 * t10773 + 14046 * t10774 - 17529 * t10777 + 8789 * t10779 + 147 + (5586 + 1012 * t10775) * t10775 + (-15414 * t10775 - 609 * t10777 + 5313 * t10779 + 83) * t10770) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 1419:
            t10793 = np.sin(phi)
            t10791 = t10793 ** 2
            t10782 = np.cos(phi)
            t10783 = t10782 ** 2
            t10785 = t10783 ** 2
            t10789 = t10785 ** 2
            t10784 = t10782 * t10783
            t10787 = t10784 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * t10791 ** 2 * (-86 * t10783 - 910 * t10784 - 1232 * t10785 + 1750 * t10787 + 805 * t10789 + 43 + (98 * t10785 + 1814 * t10787 + 138 * t10789 + 140) * t10782) * np.sin((7 * phi1 + 10 * phi2)) * ((1 - t10782) ** (-0.1e1 / 0.2e1)) * ((1 + t10782) ** (-0.1e1 / 0.2e1))

        if Bindx == 1420:
            t10794 = np.cos(phi)
            t10795 = t10794 ** 2
            t10797 = t10795 ** 2
            t10798 = t10794 * t10797
            t10803 = t10798 ** 2
            t10801 = t10797 ** 2
            t10796 = t10794 * t10795
            t10799 = t10796 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (-49 * t10795 + 81 * t10796 + 294 * t10797 + 222 * t10798 - 219 * t10801 + 179 * t10803 - 7 + (-210 + 12 * t10799) * t10799 + (-462 * t10799 + 119 * t10801 + 77 * t10803 - 37) * t10794) * np.cos((7 * phi1 + 11 * phi2))

        if Bindx == 1421:
            t10806 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.5313e4) * ((1 - t10806) ** (0.5e1 / 0.2e1)) * ((1 + t10806) ** (0.19e2 / 0.2e1)) * np.sin((7 * phi1 + 12 * phi2))

        if Bindx == 1422:
            t10807 = np.cos(phi)
            t10819 = -8 * t10807
            t10808 = t10807 ** 2
            t10809 = t10807 * t10808
            t10812 = t10809 ** 2
            t10810 = t10808 ** 2
            t10811 = t10807 * t10810
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.5313e4) * np.cos((8 * phi1 - 12 * phi2)) * (26 * t10808 - 40 * t10809 + t10819 + 1 + (48 * t10807 - 84 + t10812) * t10812 + (48 + (t10819 + 26) * t10811) * t10811 + (15 + (-40 * t10807 + 15) * t10810) * t10810)

        if Bindx == 1423:
            t10831 = np.sin(phi)
            t10829 = t10831 ** 2
            t10820 = np.cos(phi)
            t10821 = t10820 ** 2
            t10823 = t10821 ** 2
            t10827 = t10823 ** 2
            t10822 = t10820 * t10821
            t10825 = t10822 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * t10829 ** 2 * (32 * t10821 - 28 * t10822 - 28 * t10823 - 112 * t10825 - 22 * t10827 + 2 + (98 * t10823 + 68 * t10825 + 3 * t10827 - 13) * t10820) * np.sin((8 * phi1 - 11 * phi2)) * ((1 - t10820) ** (-0.1e1 / 0.2e1)) * ((1 + t10820) ** (-0.1e1 / 0.2e1))

        if Bindx == 1424:
            t10832 = np.cos(phi)
            t10833 = t10832 ** 2
            t10835 = t10833 ** 2
            t10836 = t10832 * t10835
            t10841 = t10836 ** 2
            t10839 = t10835 ** 2
            t10834 = t10832 * t10833
            t10837 = t10834 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * (-116 * t10833 - 540 * t10834 + 1335 * t10835 - 552 * t10836 - 735 * t10839 + 1156 * t10841 - 29 + (-1680 + 69 * t10837) * t10837 + (2472 * t10837 - 1060 * t10839 - 460 * t10841 + 140) * t10832) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 1425:
            t10845 = np.cos(phi)
            t10846 = t10845 ** 2
            t10848 = t10846 ** 2
            t10849 = t10845 * t10848
            t10854 = t10849 ** 2
            t10852 = t10848 ** 2
            t10847 = t10845 * t10846
            t10850 = t10847 ** 2
            t10844 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t10844 ** 2 * (-310 * t10846 + 1665 * t10847 - 1380 * t10848 - 2394 * t10849 + 5124 * t10850 - 2490 * t10852 - 1518 * t10854 + 62 + (-2190 * t10850 + 3355 * t10852 + 253 * t10854 - 177) * t10845) * np.sin((8 * phi1 - 9 * phi2)) * ((1 - t10845) ** (-0.1e1 / 0.2e1)) * ((1 + t10845) ** (-0.1e1 / 0.2e1))

        if Bindx == 1426:
            t10856 = np.cos(phi)
            t10857 = t10856 ** 2
            t10859 = t10857 ** 2
            t10860 = t10856 * t10859
            t10865 = t10860 ** 2
            t10863 = t10859 ** 2
            t10858 = t10856 * t10857
            t10861 = t10858 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (-9422 * t10857 + 15120 * t10858 + 22575 * t10859 - 69216 * t10860 - 87345 * t10863 + 48818 * t10865 + 673 + (20412 + 5313 * t10861) * t10861 + (84384 * t10861 - 2800 * t10863 - 28336 * t10865 - 176) * t10856) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 1427:
            t10869 = np.cos(phi)
            t10870 = t10869 ** 2
            t10872 = t10870 ** 2
            t10873 = t10869 * t10872
            t10878 = t10873 ** 2
            t10876 = t10872 ** 2
            t10871 = t10869 * t10870
            t10874 = t10871 ** 2
            t10868 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * t10868 ** 2 * (5838 * t10870 + 2037 * t10871 - 28812 * t10872 + 22302 * t10873 + 37548 * t10874 + 7938 * t10876 - 24794 * t10878 - 278 + (-60678 * t10874 + 34727 * t10876 + 5313 * t10878 - 1141) * t10869) * np.sin((8 * phi1 - 7 * phi2)) * ((1 - t10869) ** (-0.1e1 / 0.2e1)) * ((1 + t10869) ** (-0.1e1 / 0.2e1))

        if Bindx == 1428:
            t10880 = np.cos(phi)
            t10881 = t10880 ** 2
            t10883 = t10881 ** 2
            t10884 = t10880 * t10883
            t10889 = t10884 ** 2
            t10887 = t10883 ** 2
            t10882 = t10880 * t10881
            t10885 = t10882 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * (532 * t10881 + 3332 * t10882 - 5607 * t10883 - 6888 * t10884 - 20337 * t10887 + 5852 * t10889 - 19 + (17808 + 1771 * t10885) * t10885 + (-408 * t10885 + 11452 * t10887 - 7084 * t10889 - 404) * t10880) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 1429:
            t10903 = np.sin(phi)
            t10901 = t10903 ** 2
            t10892 = np.cos(phi)
            t10893 = t10892 ** 2
            t10895 = t10893 ** 2
            t10899 = t10895 ** 2
            t10894 = t10892 * t10893
            t10897 = t10894 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t10901 ** 2 * (-192 * t10893 + 1060 * t10894 + 76 * t10895 + 2000 * t10897 - 2530 * t10899 + 6 + (-2966 * t10895 + 1892 * t10897 + 759 * t10899 - 105) * t10892) * np.sin((8 * phi1 - 5 * phi2)) * ((1 - t10892) ** (-0.1e1 / 0.2e1)) * ((1 + t10892) ** (-0.1e1 / 0.2e1))

        if Bindx == 1430:
            t10904 = np.cos(phi)
            t10905 = t10904 ** 2
            t10907 = t10905 ** 2
            t10908 = t10904 * t10907
            t10913 = t10908 ** 2
            t10911 = t10907 ** 2
            t10906 = t10904 * t10905
            t10909 = t10906 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6783e4) * (342 * t10905 - 392 * t10906 - 1927 * t10907 + 2416 * t10908 - 2183 * t10911 - 682 * t10913 - 9 + (3700 + 759 * t10909) * t10909 + (-5776 * t10909 + 5752 * t10911 - 2024 * t10913 + 24) * t10904) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 1431:
            t10926 = np.sin(phi)
            t10923 = t10926 ** 2
            t10924 = t10926 * t10923
            t10916 = np.cos(phi)
            t10917 = t10916 ** 2
            t10918 = t10916 * t10917
            t10921 = t10918 ** 2
            t10919 = t10917 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.6783e4) * t10924 ** 2 * (-78 * t10917 - 105 * t10918 + 390 * t10919 - 506 * t10921 + 2 + (33 * t10919 + 253 * t10921 + 11) * t10916) * np.sin((8 * phi1 - 3 * phi2)) * ((1 - t10916) ** (-0.1e1 / 0.2e1)) * ((1 + t10916) ** (-0.1e1 / 0.2e1))

        if Bindx == 1432:
            t10927 = np.cos(phi)
            t10928 = t10927 ** 2
            t10930 = t10928 ** 2
            t10931 = t10927 * t10930
            t10936 = t10931 ** 2
            t10934 = t10930 ** 2
            t10929 = t10927 * t10928
            t10932 = t10929 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * (-44 * t10928 - 740 * t10929 + 445 * t10930 + 2920 * t10931 + 3275 * t10934 - 2596 * t10936 + 1 + (-1840 + 759 * t10932) * t10932 + (-4840 * t10932 + 3620 * t10934 - 1012 * t10936 + 52) * t10927) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 1433:
            t10947 = np.sin(phi)
            t10944 = t10947 ** 2
            t10945 = t10944 ** 2
            t10939 = np.cos(phi)
            t10940 = t10939 ** 2
            t10942 = t10940 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * t10945 ** 2 * (84 * t10940 - 322 * t10942 - 2 + (-266 * t10940 + 483 * t10942 + 23) * t10939) * np.sin((8 * phi1 - phi2)) * ((1 - t10939) ** (-0.1e1 / 0.2e1)) * ((1 + t10939) ** (-0.1e1 / 0.2e1))

        if Bindx == 1434:
            t10948 = np.cos(phi)
            t10949 = t10948 ** 2
            t10950 = t10949 ** 2
            t10952 = t10950 ** 2
            t10951 = t10949 * t10950
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t10950 + 1135 * t10952 + 1 + (-900 + 161 * t10951) * t10951 + (-686 * t10952 - 46) * t10949) * np.cos((8 * phi1))

        if Bindx == 1435:
            t10963 = np.sin(phi)
            t10960 = t10963 ** 2
            t10961 = t10960 ** 2
            t10955 = np.cos(phi)
            t10956 = t10955 ** 2
            t10958 = t10956 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * t10961 ** 2 * (-84 * t10956 + 322 * t10958 + 2 + (-266 * t10956 + 483 * t10958 + 23) * t10955) * np.sin((8 * phi1 + phi2)) * ((1 - t10955) ** (-0.1e1 / 0.2e1)) * ((1 + t10955) ** (-0.1e1 / 0.2e1))

        if Bindx == 1436:
            t10964 = np.cos(phi)
            t10965 = t10964 ** 2
            t10967 = t10965 ** 2
            t10968 = t10964 * t10967
            t10973 = t10968 ** 2
            t10971 = t10967 ** 2
            t10966 = t10964 * t10965
            t10969 = t10966 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * (-44 * t10965 + 740 * t10966 + 445 * t10967 - 2920 * t10968 + 3275 * t10971 - 2596 * t10973 + 1 + (-1840 + 759 * t10969) * t10969 + (4840 * t10969 - 3620 * t10971 + 1012 * t10973 - 52) * t10964) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 1437:
            t10986 = np.sin(phi)
            t10983 = t10986 ** 2
            t10984 = t10986 * t10983
            t10976 = np.cos(phi)
            t10977 = t10976 ** 2
            t10978 = t10976 * t10977
            t10981 = t10978 ** 2
            t10979 = t10977 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.6783e4) * t10984 ** 2 * (78 * t10977 - 105 * t10978 - 390 * t10979 + 506 * t10981 - 2 + (33 * t10979 + 253 * t10981 + 11) * t10976) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t10976) ** (-0.1e1 / 0.2e1)) * ((1 + t10976) ** (-0.1e1 / 0.2e1))

        if Bindx == 1438:
            t10987 = np.cos(phi)
            t10988 = t10987 ** 2
            t10990 = t10988 ** 2
            t10991 = t10987 * t10990
            t10996 = t10991 ** 2
            t10994 = t10990 ** 2
            t10989 = t10987 * t10988
            t10992 = t10989 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6783e4) * (342 * t10988 + 392 * t10989 - 1927 * t10990 - 2416 * t10991 - 2183 * t10994 - 682 * t10996 - 9 + (3700 + 759 * t10992) * t10992 + (5776 * t10992 - 5752 * t10994 + 2024 * t10996 - 24) * t10987) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 1439:
            t11010 = np.sin(phi)
            t11008 = t11010 ** 2
            t10999 = np.cos(phi)
            t11000 = t10999 ** 2
            t11002 = t11000 ** 2
            t11006 = t11002 ** 2
            t11001 = t10999 * t11000
            t11004 = t11001 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t11008 ** 2 * (192 * t11000 + 1060 * t11001 - 76 * t11002 - 2000 * t11004 + 2530 * t11006 - 6 + (-2966 * t11002 + 1892 * t11004 + 759 * t11006 - 105) * t10999) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t10999) ** (-0.1e1 / 0.2e1)) * ((1 + t10999) ** (-0.1e1 / 0.2e1))

        if Bindx == 1440:
            t11011 = np.cos(phi)
            t11012 = t11011 ** 2
            t11014 = t11012 ** 2
            t11015 = t11011 * t11014
            t11020 = t11015 ** 2
            t11018 = t11014 ** 2
            t11013 = t11011 * t11012
            t11016 = t11013 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.57e2) * (532 * t11012 - 3332 * t11013 - 5607 * t11014 + 6888 * t11015 - 20337 * t11018 + 5852 * t11020 - 19 + (17808 + 1771 * t11016) * t11016 + (408 * t11016 - 11452 * t11018 + 7084 * t11020 + 404) * t11011) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 1441:
            t11024 = np.cos(phi)
            t11025 = t11024 ** 2
            t11027 = t11025 ** 2
            t11028 = t11024 * t11027
            t11033 = t11028 ** 2
            t11031 = t11027 ** 2
            t11026 = t11024 * t11025
            t11029 = t11026 ** 2
            t11023 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * t11023 ** 2 * (-5838 * t11025 + 2037 * t11026 + 28812 * t11027 + 22302 * t11028 - 37548 * t11029 - 7938 * t11031 + 24794 * t11033 + 278 + (-60678 * t11029 + 34727 * t11031 + 5313 * t11033 - 1141) * t11024) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t11024) ** (-0.1e1 / 0.2e1)) * ((1 + t11024) ** (-0.1e1 / 0.2e1))

        if Bindx == 1442:
            t11035 = np.cos(phi)
            t11036 = t11035 ** 2
            t11038 = t11036 ** 2
            t11039 = t11035 * t11038
            t11044 = t11039 ** 2
            t11042 = t11038 ** 2
            t11037 = t11035 * t11036
            t11040 = t11037 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (-9422 * t11036 - 15120 * t11037 + 22575 * t11038 + 69216 * t11039 - 87345 * t11042 + 48818 * t11044 + 673 + (20412 + 5313 * t11040) * t11040 + (-84384 * t11040 + 2800 * t11042 + 28336 * t11044 + 176) * t11035) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 1443:
            t11048 = np.cos(phi)
            t11049 = t11048 ** 2
            t11051 = t11049 ** 2
            t11052 = t11048 * t11051
            t11057 = t11052 ** 2
            t11055 = t11051 ** 2
            t11050 = t11048 * t11049
            t11053 = t11050 ** 2
            t11047 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t11047 ** 2 * (310 * t11049 + 1665 * t11050 + 1380 * t11051 - 2394 * t11052 - 5124 * t11053 + 2490 * t11055 + 1518 * t11057 - 62 + (-2190 * t11053 + 3355 * t11055 + 253 * t11057 - 177) * t11048) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t11048) ** (-0.1e1 / 0.2e1)) * ((1 + t11048) ** (-0.1e1 / 0.2e1))

        if Bindx == 1444:
            t11059 = np.cos(phi)
            t11060 = t11059 ** 2
            t11062 = t11060 ** 2
            t11063 = t11059 * t11062
            t11068 = t11063 ** 2
            t11066 = t11062 ** 2
            t11061 = t11059 * t11060
            t11064 = t11061 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * (-116 * t11060 + 540 * t11061 + 1335 * t11062 + 552 * t11063 - 735 * t11066 + 1156 * t11068 - 29 + (-1680 + 69 * t11064) * t11064 + (-2472 * t11064 + 1060 * t11066 + 460 * t11068 - 140) * t11059) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 1445:
            t11082 = np.sin(phi)
            t11080 = t11082 ** 2
            t11071 = np.cos(phi)
            t11072 = t11071 ** 2
            t11074 = t11072 ** 2
            t11078 = t11074 ** 2
            t11073 = t11071 * t11072
            t11076 = t11073 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * t11080 ** 2 * (-32 * t11072 - 28 * t11073 + 28 * t11074 + 112 * t11076 + 22 * t11078 - 2 + (98 * t11074 + 68 * t11076 + 3 * t11078 - 13) * t11071) * np.sin((8 * phi1 + 11 * phi2)) * ((1 - t11071) ** (-0.1e1 / 0.2e1)) * ((1 + t11071) ** (-0.1e1 / 0.2e1))

        if Bindx == 1446:
            t11083 = np.cos(phi)
            t11095 = 8 * t11083
            t11084 = t11083 ** 2
            t11085 = t11083 * t11084
            t11088 = t11085 ** 2
            t11086 = t11084 ** 2
            t11087 = t11083 * t11086
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.5313e4) * np.cos((8 * phi1 + 12 * phi2)) * (26 * t11084 + 40 * t11085 + t11095 + 1 + (-48 * t11083 - 84 + t11088) * t11088 + (-48 + (t11095 + 26) * t11087) * t11087 + (15 + (40 * t11083 + 15) * t11086) * t11086)

        if Bindx == 1447:
            t11096 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.253e3) * ((1 - t11096) ** (0.21e2 / 0.2e1)) * ((1 + t11096) ** (0.3e1 / 0.2e1)) * np.sin((9 * phi1 - 12 * phi2))

        if Bindx == 1448:
            t11097 = np.cos(phi)
            t11098 = t11097 ** 2
            t11100 = t11098 ** 2
            t11101 = t11097 * t11100
            t11106 = t11101 ** 2
            t11104 = t11100 ** 2
            t11099 = t11097 * t11098
            t11102 = t11099 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (69 * t11098 - 85 * t11099 - 30 * t11100 + 234 * t11101 + 135 * t11104 + 113 * t11106 + 3 + (-294 + 4 * t11102) * t11102 + (102 * t11102 - 195 * t11104 - 33 * t11106 - 23) * t11097) * np.cos((9 * phi1 - 11 * phi2))

        if Bindx == 1449:
            t11110 = np.cos(phi)
            t11111 = t11110 ** 2
            t11113 = t11111 ** 2
            t11114 = t11110 * t11113
            t11119 = t11114 ** 2
            t11117 = t11113 ** 2
            t11112 = t11110 * t11111
            t11115 = t11112 ** 2
            t11109 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.33e2) * t11109 ** 2 * (-325 * t11111 + 30 * t11112 + 990 * t11113 - 1680 * t11114 + 798 * t11115 - 1605 * t11117 - 345 * t11119 - 25 + (900 * t11115 + 1060 * t11117 + 46 * t11119 + 156) * t11110) * np.sin((9 * phi1 - 10 * phi2)) * ((1 - t11110) ** (-0.1e1 / 0.2e1)) * ((1 + t11110) ** (-0.1e1 / 0.2e1))

        if Bindx == 1450:
            t11121 = np.cos(phi)
            t11122 = t11121 ** 2
            t11124 = t11122 ** 2
            t11125 = t11121 * t11124
            t11130 = t11125 ** 2
            t11128 = t11124 ** 2
            t11123 = t11121 * t11122
            t11126 = t11123 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (-1143 * t11122 - 7915 * t11123 + 17730 * t11124 - 5058 * t11125 - 7785 * t11128 + 17589 * t11130 - 381 + (-25998 + 1012 * t11126) * t11126 + (34506 * t11126 - 17505 * t11128 - 6831 * t11130 + 1779) * t11121) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 1451:
            t11134 = np.cos(phi)
            t11135 = t11134 ** 2
            t11137 = t11135 ** 2
            t11138 = t11134 * t11137
            t11143 = t11138 ** 2
            t11141 = t11137 ** 2
            t11136 = t11134 * t11135
            t11139 = t11136 ** 2
            t11133 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t11133 ** 2 * (-310 * t11135 + 1665 * t11136 - 1380 * t11137 - 2394 * t11138 + 5124 * t11139 - 2490 * t11141 - 1518 * t11143 + 62 + (-2190 * t11139 + 3355 * t11141 + 253 * t11143 - 177) * t11134) * np.sin((9 * phi1 - 8 * phi2)) * ((1 - t11134) ** (-0.1e1 / 0.2e1)) * ((1 + t11134) ** (-0.1e1 / 0.2e1))

        if Bindx == 1452:
            t11145 = np.cos(phi)
            t11146 = t11145 ** 2
            t11148 = t11146 ** 2
            t11149 = t11145 * t11148
            t11154 = t11149 ** 2
            t11152 = t11148 ** 2
            t11147 = t11145 * t11146
            t11150 = t11147 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * (-1911 * t11146 + 3419 * t11147 + 3906 * t11148 - 14046 * t11149 - 17529 * t11152 + 8789 * t11154 + 147 + (5586 + 1012 * t11150) * t11150 + (15414 * t11150 + 609 * t11152 - 5313 * t11154 - 83) * t11145) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 1453:
            t11168 = np.sin(phi)
            t11166 = t11168 ** 2
            t11157 = np.cos(phi)
            t11158 = t11157 ** 2
            t11160 = t11158 ** 2
            t11164 = t11160 ** 2
            t11159 = t11157 * t11158
            t11162 = t11159 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.133e3) * t11166 ** 2 * (-666 * t11158 + 162 * t11159 + 2304 * t11160 - 678 * t11162 - 2277 * t11164 + 37 + (-2862 * t11160 + 3366 * t11162 + 506 * t11164 + 108) * t11157) * np.sin((9 * phi1 - 6 * phi2)) * ((1 - t11157) ** (-0.1e1 / 0.2e1)) * ((1 + t11157) ** (-0.1e1 / 0.2e1))

        if Bindx == 1454:
            t11169 = np.cos(phi)
            t11170 = t11169 ** 2
            t11172 = t11170 ** 2
            t11173 = t11169 * t11172
            t11178 = t11173 ** 2
            t11176 = t11172 ** 2
            t11171 = t11169 * t11170
            t11174 = t11171 ** 2
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (625 * t11170 + 1969 * t11171 - 4710 * t11172 - 2594 * t11173 - 10949 * t11176 + 2189 * t11178 - 25 + (11858 + 1012 * t11174) * t11174 + (-3342 * t11174 + 8055 * t11176 - 3795 * t11178 - 293) * t11169) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 1455:
            t11191 = np.sin(phi)
            t11188 = t11191 ** 2
            t11189 = t11191 * t11188
            t11181 = np.cos(phi)
            t11182 = t11181 ** 2
            t11183 = t11181 * t11182
            t11186 = t11183 ** 2
            t11184 = t11182 ** 2
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.323e3) * t11189 ** 2 * (27 * t11182 - 425 * t11183 + 285 * t11184 - 759 * t11186 - 1 + (561 * t11184 + 253 * t11186 + 59) * t11181) * np.sin((9 * phi1 - 4 * phi2)) * ((1 - t11181) ** (-0.1e1 / 0.2e1)) * ((1 + t11181) ** (-0.1e1 / 0.2e1))

        if Bindx == 1456:
            t11192 = np.cos(phi)
            t11193 = t11192 ** 2
            t11195 = t11193 ** 2
            t11196 = t11192 * t11195
            t11201 = t11196 ** 2
            t11199 = t11195 ** 2
            t11194 = t11192 * t11193
            t11197 = t11194 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.323e3) * (561 * t11193 - 1401 * t11194 - 2406 * t11195 + 5778 * t11196 + 51 * t11199 - 2211 * t11201 - 17 + (3010 + 1012 * t11197) * t11197 + (-10098 * t11197 + 7881 * t11199 - 2277 * t11201 + 117) * t11192) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 1457:
            t11212 = np.sin(phi)
            t11209 = t11212 ** 2
            t11210 = t11209 ** 2
            t11204 = np.cos(phi)
            t11205 = t11204 ** 2
            t11207 = t11205 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t11210 ** 2 * (288 * t11205 - 759 * t11207 - 9 + (-22 * t11205 + 506 * t11207 - 4) * t11204) * np.sin((9 * phi1 - 2 * phi2)) * ((1 - t11204) ** (-0.1e1 / 0.2e1)) * ((1 + t11204) ** (-0.1e1 / 0.2e1))

        if Bindx == 1458:
            t11213 = np.cos(phi)
            t11214 = t11213 ** 2
            t11216 = t11214 ** 2
            t11217 = t11213 * t11216
            t11222 = t11217 ** 2
            t11220 = t11216 ** 2
            t11215 = t11213 * t11214
            t11218 = t11215 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.74613e5) * (-37 * t11214 - 105 * t11215 + 230 * t11216 + 330 * t11217 + 685 * t11220 - 401 * t11222 + 1 + (-570 + 92 * t11218) * t11218 + (-450 * t11218 + 285 * t11220 - 69 * t11222 + 9) * t11213) * np.cos((9 * phi1 - phi2))

        if Bindx == 1459:
            t11230 = np.sin(phi)
            t11226 = t11230 ** 2
            t11228 = t11230 * t11226 ** 2
            t11225 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t11225 * t11228 ** 2 * (23 * t11225 ** 2 - 3) * np.sin((9 * phi1)) * ((1 - t11225) ** (-0.1e1 / 0.2e1)) * ((1 + t11225) ** (-0.1e1 / 0.2e1))

        if Bindx == 1460:
            t11231 = np.cos(phi)
            t11232 = t11231 ** 2
            t11234 = t11232 ** 2
            t11235 = t11231 * t11234
            t11240 = t11235 ** 2
            t11238 = t11234 ** 2
            t11233 = t11231 * t11232
            t11236 = t11233 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.74613e5) * (-37 * t11232 + 105 * t11233 + 230 * t11234 - 330 * t11235 + 685 * t11238 - 401 * t11240 + 1 + (-570 + 92 * t11236) * t11236 + (450 * t11236 - 285 * t11238 + 69 * t11240 - 9) * t11231) * np.cos((9 * phi1 + phi2))

        if Bindx == 1461:
            t11251 = np.sin(phi)
            t11248 = t11251 ** 2
            t11249 = t11248 ** 2
            t11243 = np.cos(phi)
            t11244 = t11243 ** 2
            t11246 = t11244 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t11249 ** 2 * (-288 * t11244 + 759 * t11246 + 9 + (-22 * t11244 + 506 * t11246 - 4) * t11243) * np.sin((9 * phi1 + 2 * phi2)) * ((1 - t11243) ** (-0.1e1 / 0.2e1)) * ((1 + t11243) ** (-0.1e1 / 0.2e1))

        if Bindx == 1462:
            t11252 = np.cos(phi)
            t11253 = t11252 ** 2
            t11255 = t11253 ** 2
            t11256 = t11252 * t11255
            t11261 = t11256 ** 2
            t11259 = t11255 ** 2
            t11254 = t11252 * t11253
            t11257 = t11254 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.323e3) * (561 * t11253 + 1401 * t11254 - 2406 * t11255 - 5778 * t11256 + 51 * t11259 - 2211 * t11261 - 17 + (3010 + 1012 * t11257) * t11257 + (10098 * t11257 - 7881 * t11259 + 2277 * t11261 - 117) * t11252) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 1463:
            t11274 = np.sin(phi)
            t11271 = t11274 ** 2
            t11272 = t11274 * t11271
            t11264 = np.cos(phi)
            t11265 = t11264 ** 2
            t11266 = t11264 * t11265
            t11269 = t11266 ** 2
            t11267 = t11265 ** 2
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.323e3) * t11272 ** 2 * (-27 * t11265 - 425 * t11266 - 285 * t11267 + 759 * t11269 + 1 + (561 * t11267 + 253 * t11269 + 59) * t11264) * np.sin((9 * phi1 + 4 * phi2)) * ((1 - t11264) ** (-0.1e1 / 0.2e1)) * ((1 + t11264) ** (-0.1e1 / 0.2e1))

        if Bindx == 1464:
            t11275 = np.cos(phi)
            t11276 = t11275 ** 2
            t11278 = t11276 ** 2
            t11279 = t11275 * t11278
            t11284 = t11279 ** 2
            t11282 = t11278 ** 2
            t11277 = t11275 * t11276
            t11280 = t11277 ** 2
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (625 * t11276 - 1969 * t11277 - 4710 * t11278 + 2594 * t11279 - 10949 * t11282 + 2189 * t11284 - 25 + (11858 + 1012 * t11280) * t11280 + (3342 * t11280 - 8055 * t11282 + 3795 * t11284 + 293) * t11275) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 1465:
            t11298 = np.sin(phi)
            t11296 = t11298 ** 2
            t11287 = np.cos(phi)
            t11288 = t11287 ** 2
            t11290 = t11288 ** 2
            t11294 = t11290 ** 2
            t11289 = t11287 * t11288
            t11292 = t11289 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.133e3) * t11296 ** 2 * (666 * t11288 + 162 * t11289 - 2304 * t11290 + 678 * t11292 + 2277 * t11294 - 37 + (-2862 * t11290 + 3366 * t11292 + 506 * t11294 + 108) * t11287) * np.sin((9 * phi1 + 6 * phi2)) * ((1 - t11287) ** (-0.1e1 / 0.2e1)) * ((1 + t11287) ** (-0.1e1 / 0.2e1))

        if Bindx == 1466:
            t11299 = np.cos(phi)
            t11300 = t11299 ** 2
            t11302 = t11300 ** 2
            t11303 = t11299 * t11302
            t11308 = t11303 ** 2
            t11306 = t11302 ** 2
            t11301 = t11299 * t11300
            t11304 = t11301 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * (-1911 * t11300 - 3419 * t11301 + 3906 * t11302 + 14046 * t11303 - 17529 * t11306 + 8789 * t11308 + 147 + (5586 + 1012 * t11304) * t11304 + (-15414 * t11304 - 609 * t11306 + 5313 * t11308 + 83) * t11299) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 1467:
            t11312 = np.cos(phi)
            t11313 = t11312 ** 2
            t11315 = t11313 ** 2
            t11316 = t11312 * t11315
            t11321 = t11316 ** 2
            t11319 = t11315 ** 2
            t11314 = t11312 * t11313
            t11317 = t11314 ** 2
            t11311 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t11311 ** 2 * (310 * t11313 + 1665 * t11314 + 1380 * t11315 - 2394 * t11316 - 5124 * t11317 + 2490 * t11319 + 1518 * t11321 - 62 + (-2190 * t11317 + 3355 * t11319 + 253 * t11321 - 177) * t11312) * np.sin((9 * phi1 + 8 * phi2)) * ((1 - t11312) ** (-0.1e1 / 0.2e1)) * ((1 + t11312) ** (-0.1e1 / 0.2e1))

        if Bindx == 1468:
            t11323 = np.cos(phi)
            t11324 = t11323 ** 2
            t11326 = t11324 ** 2
            t11327 = t11323 * t11326
            t11332 = t11327 ** 2
            t11330 = t11326 ** 2
            t11325 = t11323 * t11324
            t11328 = t11325 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (-1143 * t11324 + 7915 * t11325 + 17730 * t11326 + 5058 * t11327 - 7785 * t11330 + 17589 * t11332 - 381 + (-25998 + 1012 * t11328) * t11328 + (-34506 * t11328 + 17505 * t11330 + 6831 * t11332 - 1779) * t11323) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 1469:
            t11336 = np.cos(phi)
            t11337 = t11336 ** 2
            t11339 = t11337 ** 2
            t11340 = t11336 * t11339
            t11345 = t11340 ** 2
            t11343 = t11339 ** 2
            t11338 = t11336 * t11337
            t11341 = t11338 ** 2
            t11335 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.33e2) * t11335 ** 2 * (325 * t11337 + 30 * t11338 - 990 * t11339 - 1680 * t11340 - 798 * t11341 + 1605 * t11343 + 345 * t11345 + 25 + (900 * t11341 + 1060 * t11343 + 46 * t11345 + 156) * t11336) * np.sin((9 * phi1 + 10 * phi2)) * ((1 - t11336) ** (-0.1e1 / 0.2e1)) * ((1 + t11336) ** (-0.1e1 / 0.2e1))

        if Bindx == 1470:
            t11347 = np.cos(phi)
            t11348 = t11347 ** 2
            t11350 = t11348 ** 2
            t11351 = t11347 * t11350
            t11356 = t11351 ** 2
            t11354 = t11350 ** 2
            t11349 = t11347 * t11348
            t11352 = t11349 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (69 * t11348 + 85 * t11349 - 30 * t11350 - 234 * t11351 + 135 * t11354 + 113 * t11356 + 3 + (-294 + 4 * t11352) * t11352 + (-102 * t11352 + 195 * t11354 + 33 * t11356 + 23) * t11347) * np.cos((9 * phi1 + 11 * phi2))

        if Bindx == 1471:
            t11359 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.253e3) * ((1 - t11359) ** (0.3e1 / 0.2e1)) * ((1 + t11359) ** (0.21e2 / 0.2e1)) * np.sin((9 * phi1 + 12 * phi2))

        if Bindx == 1472:
            t11360 = np.cos(phi)
            t11361 = t11360 ** 2
            t11363 = t11361 ** 2
            t11364 = t11360 * t11363
            t11368 = t11364 ** 2
            t11369 = t11360 * t11368
            t11366 = t11363 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (-165 * t11363 + 132 * t11364 + 165 * t11366 + 44 * t11368 - 10 * t11369 - 1 + (-132 * t11364 - 44) * t11361 + (110 * t11361 - 110 * t11366 + t11369 + 10) * t11360) * np.cos((10 * phi1 - 12 * phi2))

        if Bindx == 1473:
            t11372 = np.cos(phi)
            t11373 = t11372 ** 2
            t11375 = t11373 ** 2
            t11378 = t11375 ** 2
            t11379 = t11372 * t11378
            t11380 = t11372 * t11379
            t11374 = t11372 * t11373
            t11376 = t11374 ** 2
            t11371 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.23e2) * t11371 ** 2 * (165 * t11373 - 330 * t11374 + 330 * t11375 - 462 * t11376 - 495 * t11378 + 220 * t11379 - 55 * t11380 + 5 + (660 * t11376 + 6 * t11380 - 44) * t11372) * np.sin((10 * phi1 - 11 * phi2)) * ((1 - t11372) ** (-0.1e1 / 0.2e1)) * ((1 + t11372) ** (-0.1e1 / 0.2e1))

        if Bindx == 1474:
            t11382 = np.cos(phi)
            t11383 = t11382 ** 2
            t11385 = t11383 ** 2
            t11386 = t11382 * t11385
            t11391 = t11386 ** 2
            t11389 = t11385 ** 2
            t11384 = t11382 * t11383
            t11387 = t11384 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (1034 * t11383 - 1155 * t11384 - 825 * t11385 + 4026 * t11386 + 2805 * t11389 + 2002 * t11391 + 47 + (-4620 + 69 * t11387) * t11387 + (1122 * t11387 - 3575 * t11389 - 575 * t11391 - 355) * t11382) * np.cos((10 * phi1 - 10 * phi2))

        if Bindx == 1475:
            t11395 = np.cos(phi)
            t11396 = t11395 ** 2
            t11398 = t11396 ** 2
            t11399 = t11395 * t11398
            t11404 = t11399 ** 2
            t11402 = t11398 ** 2
            t11397 = t11395 * t11396
            t11400 = t11397 ** 2
            t11394 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.33e2) * t11394 ** 2 * (-325 * t11396 + 30 * t11397 + 990 * t11398 - 1680 * t11399 + 798 * t11400 - 1605 * t11402 - 345 * t11404 - 25 + (900 * t11400 + 1060 * t11402 + 46 * t11404 + 156) * t11395) * np.sin((10 * phi1 - 9 * phi2)) * ((1 - t11395) ** (-0.1e1 / 0.2e1)) * ((1 + t11395) ** (-0.1e1 / 0.2e1))

        if Bindx == 1476:
            t11406 = np.cos(phi)
            t11407 = t11406 ** 2
            t11409 = t11407 ** 2
            t11410 = t11406 * t11409
            t11415 = t11410 ** 2
            t11413 = t11409 ** 2
            t11408 = t11406 * t11407
            t11411 = t11408 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * (-116 * t11407 - 540 * t11408 + 1335 * t11409 - 552 * t11410 - 735 * t11413 + 1156 * t11415 - 29 + (-1680 + 69 * t11411) * t11411 + (2472 * t11411 - 1060 * t11413 - 460 * t11415 + 140) * t11406) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 1477:
            t11429 = np.sin(phi)
            t11427 = t11429 ** 2
            t11418 = np.cos(phi)
            t11419 = t11418 ** 2
            t11421 = t11419 ** 2
            t11425 = t11421 ** 2
            t11420 = t11418 * t11419
            t11423 = t11420 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * t11427 ** 2 * (86 * t11419 - 910 * t11420 + 1232 * t11421 - 1750 * t11423 - 805 * t11425 - 43 + (98 * t11421 + 1814 * t11423 + 138 * t11425 + 140) * t11418) * np.sin((10 * phi1 - 7 * phi2)) * ((1 - t11418) ** (-0.1e1 / 0.2e1)) * ((1 + t11418) ** (-0.1e1 / 0.2e1))

        if Bindx == 1478:
            t11430 = np.cos(phi)
            t11431 = t11430 ** 2
            t11433 = t11431 ** 2
            t11434 = t11430 * t11433
            t11439 = t11434 ** 2
            t11437 = t11433 ** 2
            t11432 = t11430 * t11431
            t11435 = t11432 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4389e4) * (-50 * t11431 + 121 * t11432 + 45 * t11433 - 366 * t11434 - 441 * t11437 + 166 * t11439 + 5 + (252 + 23 * t11435) * t11435 + (282 * t11435 + 85 * t11437 - 115 * t11439 - 7) * t11430) * np.cos((10 * phi1 - 6 * phi2))

        if Bindx == 1479:
            t11452 = np.sin(phi)
            t11449 = t11452 ** 2
            t11450 = t11452 * t11449
            t11442 = np.cos(phi)
            t11443 = t11442 ** 2
            t11444 = t11442 * t11443
            t11447 = t11444 ** 2
            t11445 = t11443 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.627e3) * t11450 ** 2 * (247 * t11443 - 270 * t11444 - 325 * t11445 - 575 * t11447 - 19 + (824 * t11445 + 138 * t11447 - 20) * t11442) * np.sin((10 * phi1 - 5 * phi2)) * ((1 - t11442) ** (-0.1e1 / 0.2e1)) * ((1 + t11442) ** (-0.1e1 / 0.2e1))

        if Bindx == 1480:
            t11453 = np.cos(phi)
            t11454 = t11453 ** 2
            t11456 = t11454 ** 2
            t11457 = t11453 * t11456
            t11462 = t11457 ** 2
            t11460 = t11456 ** 2
            t11455 = t11453 * t11454
            t11458 = t11455 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (100 * t11454 + 98 * t11455 - 505 * t11456 + 92 * t11457 - 583 * t11460 + 28 * t11462 - 5 + (896 + 69 * t11458) * t11458 + (-604 * t11458 + 670 * t11460 - 230 * t11462 - 26) * t11453) * np.cos((10 * phi1 - 4 * phi2))

        if Bindx == 1481:
            t11473 = np.sin(phi)
            t11470 = t11473 ** 2
            t11471 = t11470 ** 2
            t11465 = np.cos(phi)
            t11466 = t11465 ** 2
            t11468 = t11466 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * t11471 ** 2 * (20 * t11466 - 115 * t11468 - 1 + (70 * t11466 + 46 * t11468 - 20) * t11465) * np.sin((10 * phi1 - 3 * phi2)) * ((1 - t11465) ** (-0.1e1 / 0.2e1)) * ((1 + t11465) ** (-0.1e1 / 0.2e1))

        if Bindx == 1482:
            t11474 = np.cos(phi)
            t11475 = t11474 ** 2
            t11477 = t11475 ** 2
            t11478 = t11474 * t11477
            t11483 = t11478 ** 2
            t11481 = t11477 ** 2
            t11476 = t11474 * t11475
            t11479 = t11476 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * (26 * t11475 - 215 * t11476 - 25 * t11477 + 610 * t11478 + 325 * t11481 - 254 * t11483 - 1 + (-140 + 69 * t11479) * t11479 + (-790 * t11479 + 485 * t11481 - 115 * t11483 + 25) * t11474) * np.cos((10 * phi1 - 2 * phi2))

        if Bindx == 1483:
            t11493 = np.sin(phi)
            t11489 = t11493 ** 2
            t11491 = t11493 * t11489 ** 2
            t11486 = np.cos(phi)
            t11487 = t11486 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t11491 ** 2 * (-115 * t11487 + 5 + (138 * t11487 - 28) * t11486) * np.sin((10 * phi1 - phi2)) * ((1 - t11486) ** (-0.1e1 / 0.2e1)) * ((1 + t11486) ** (-0.1e1 / 0.2e1))

        if Bindx == 1484:
            t11494 = np.cos(phi)
            t11495 = t11494 ** 2
            t11496 = t11495 ** 2
            t11498 = t11496 ** 2
            t11497 = t11495 * t11496
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t11496 + 235 * t11498 + 1 + (-240 + 23 * t11497) * t11497 + (-116 * t11498 - 28) * t11495) * np.cos((10 * phi1))

        if Bindx == 1485:
            t11508 = np.sin(phi)
            t11504 = t11508 ** 2
            t11506 = t11508 * t11504 ** 2
            t11501 = np.cos(phi)
            t11502 = t11501 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2261e4) * t11506 ** 2 * (115 * t11502 - 5 + (138 * t11502 - 28) * t11501) * np.sin((10 * phi1 + phi2)) * ((1 - t11501) ** (-0.1e1 / 0.2e1)) * ((1 + t11501) ** (-0.1e1 / 0.2e1))

        if Bindx == 1486:
            t11509 = np.cos(phi)
            t11510 = t11509 ** 2
            t11512 = t11510 ** 2
            t11513 = t11509 * t11512
            t11518 = t11513 ** 2
            t11516 = t11512 ** 2
            t11511 = t11509 * t11510
            t11514 = t11511 ** 2
            tfunc[..., c] = 0.25e2 / 0.512e3 * np.sqrt(0.3553e4) * (26 * t11510 + 215 * t11511 - 25 * t11512 - 610 * t11513 + 325 * t11516 - 254 * t11518 - 1 + (-140 + 69 * t11514) * t11514 + (790 * t11514 - 485 * t11516 + 115 * t11518 - 25) * t11509) * np.cos((10 * phi1 + 2 * phi2))

        if Bindx == 1487:
            t11529 = np.sin(phi)
            t11526 = t11529 ** 2
            t11527 = t11526 ** 2
            t11521 = np.cos(phi)
            t11522 = t11521 ** 2
            t11524 = t11522 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * t11527 ** 2 * (-20 * t11522 + 115 * t11524 + 1 + (70 * t11522 + 46 * t11524 - 20) * t11521) * np.sin((10 * phi1 + 3 * phi2)) * ((1 - t11521) ** (-0.1e1 / 0.2e1)) * ((1 + t11521) ** (-0.1e1 / 0.2e1))

        if Bindx == 1488:
            t11530 = np.cos(phi)
            t11531 = t11530 ** 2
            t11533 = t11531 ** 2
            t11534 = t11530 * t11533
            t11539 = t11534 ** 2
            t11537 = t11533 ** 2
            t11532 = t11530 * t11531
            t11535 = t11532 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (100 * t11531 - 98 * t11532 - 505 * t11533 - 92 * t11534 - 583 * t11537 + 28 * t11539 - 5 + (896 + 69 * t11535) * t11535 + (604 * t11535 - 670 * t11537 + 230 * t11539 + 26) * t11530) * np.cos((10 * phi1 + 4 * phi2))

        if Bindx == 1489:
            t11552 = np.sin(phi)
            t11549 = t11552 ** 2
            t11550 = t11552 * t11549
            t11542 = np.cos(phi)
            t11543 = t11542 ** 2
            t11544 = t11542 * t11543
            t11547 = t11544 ** 2
            t11545 = t11543 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.627e3) * t11550 ** 2 * (-247 * t11543 - 270 * t11544 + 325 * t11545 + 575 * t11547 + 19 + (824 * t11545 + 138 * t11547 - 20) * t11542) * np.sin((10 * phi1 + 5 * phi2)) * ((1 - t11542) ** (-0.1e1 / 0.2e1)) * ((1 + t11542) ** (-0.1e1 / 0.2e1))

        if Bindx == 1490:
            t11553 = np.cos(phi)
            t11554 = t11553 ** 2
            t11556 = t11554 ** 2
            t11557 = t11553 * t11556
            t11562 = t11557 ** 2
            t11560 = t11556 ** 2
            t11555 = t11553 * t11554
            t11558 = t11555 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4389e4) * (-50 * t11554 - 121 * t11555 + 45 * t11556 + 366 * t11557 - 441 * t11560 + 166 * t11562 + 5 + (252 + 23 * t11558) * t11558 + (-282 * t11558 - 85 * t11560 + 115 * t11562 + 7) * t11553) * np.cos((10 * phi1 + 6 * phi2))

        if Bindx == 1491:
            t11576 = np.sin(phi)
            t11574 = t11576 ** 2
            t11565 = np.cos(phi)
            t11566 = t11565 ** 2
            t11568 = t11566 ** 2
            t11572 = t11568 ** 2
            t11567 = t11565 * t11566
            t11570 = t11567 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * t11574 ** 2 * (-86 * t11566 - 910 * t11567 - 1232 * t11568 + 1750 * t11570 + 805 * t11572 + 43 + (98 * t11568 + 1814 * t11570 + 138 * t11572 + 140) * t11565) * np.sin((10 * phi1 + 7 * phi2)) * ((1 - t11565) ** (-0.1e1 / 0.2e1)) * ((1 + t11565) ** (-0.1e1 / 0.2e1))

        if Bindx == 1492:
            t11577 = np.cos(phi)
            t11578 = t11577 ** 2
            t11580 = t11578 ** 2
            t11581 = t11577 * t11580
            t11586 = t11581 ** 2
            t11584 = t11580 ** 2
            t11579 = t11577 * t11578
            t11582 = t11579 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.77e2) * (-116 * t11578 + 540 * t11579 + 1335 * t11580 + 552 * t11581 - 735 * t11584 + 1156 * t11586 - 29 + (-1680 + 69 * t11582) * t11582 + (-2472 * t11582 + 1060 * t11584 + 460 * t11586 - 140) * t11577) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 1493:
            t11590 = np.cos(phi)
            t11591 = t11590 ** 2
            t11593 = t11591 ** 2
            t11594 = t11590 * t11593
            t11599 = t11594 ** 2
            t11597 = t11593 ** 2
            t11592 = t11590 * t11591
            t11595 = t11592 ** 2
            t11589 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.33e2) * t11589 ** 2 * (325 * t11591 + 30 * t11592 - 990 * t11593 - 1680 * t11594 - 798 * t11595 + 1605 * t11597 + 345 * t11599 + 25 + (900 * t11595 + 1060 * t11597 + 46 * t11599 + 156) * t11590) * np.sin((10 * phi1 + 9 * phi2)) * ((1 - t11590) ** (-0.1e1 / 0.2e1)) * ((1 + t11590) ** (-0.1e1 / 0.2e1))

        if Bindx == 1494:
            t11601 = np.cos(phi)
            t11602 = t11601 ** 2
            t11604 = t11602 ** 2
            t11605 = t11601 * t11604
            t11610 = t11605 ** 2
            t11608 = t11604 ** 2
            t11603 = t11601 * t11602
            t11606 = t11603 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * (1034 * t11602 + 1155 * t11603 - 825 * t11604 - 4026 * t11605 + 2805 * t11608 + 2002 * t11610 + 47 + (-4620 + 69 * t11606) * t11606 + (-1122 * t11606 + 3575 * t11608 + 575 * t11610 + 355) * t11601) * np.cos((10 * phi1 + 10 * phi2))

        if Bindx == 1495:
            t11614 = np.cos(phi)
            t11615 = t11614 ** 2
            t11617 = t11615 ** 2
            t11620 = t11617 ** 2
            t11621 = t11614 * t11620
            t11622 = t11614 * t11621
            t11616 = t11614 * t11615
            t11618 = t11616 ** 2
            t11613 = np.sin(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.23e2) * t11613 ** 2 * (-165 * t11615 - 330 * t11616 - 330 * t11617 + 462 * t11618 + 495 * t11620 + 220 * t11621 + 55 * t11622 - 5 + (660 * t11618 + 6 * t11622 - 44) * t11614) * np.sin((10 * phi1 + 11 * phi2)) * ((1 - t11614) ** (-0.1e1 / 0.2e1)) * ((1 + t11614) ** (-0.1e1 / 0.2e1))

        if Bindx == 1496:
            t11624 = np.cos(phi)
            t11625 = t11624 ** 2
            t11627 = t11625 ** 2
            t11628 = t11624 * t11627
            t11632 = t11628 ** 2
            t11633 = t11624 * t11632
            t11630 = t11627 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (-165 * t11627 - 132 * t11628 + 165 * t11630 + 44 * t11632 + 10 * t11633 - 1 + (132 * t11628 - 44) * t11625 + (-110 * t11625 + 110 * t11630 + t11633 - 10) * t11624) * np.cos((10 * phi1 + 12 * phi2))

        if Bindx == 1497:
            t11635 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * ((1 - t11635) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t11635)) * np.sin((11 * phi1 - 12 * phi2))

        if Bindx == 1498:
            t11636 = np.cos(phi)
            t11637 = t11636 ** 2
            t11639 = t11637 ** 2
            t11640 = t11636 * t11639
            t11645 = t11640 ** 2
            t11643 = t11639 ** 2
            t11638 = t11636 * t11637
            t11641 = t11638 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (-473 * t11637 + 1155 * t11638 - 1650 * t11639 + 1122 * t11640 + 2145 * t11643 + 539 * t11645 - 11 + (462 + 12 * t11641) * t11641 + (-1914 * t11641 - 1375 * t11643 - 121 * t11645 + 109) * t11636) * np.cos((11 * phi1 - 11 * phi2))

        if Bindx == 1499:
            t11649 = np.cos(phi)
            t11650 = t11649 ** 2
            t11652 = t11650 ** 2
            t11655 = t11652 ** 2
            t11656 = t11649 * t11655
            t11657 = t11649 * t11656
            t11651 = t11649 * t11650
            t11653 = t11651 ** 2
            t11648 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.23e2) * t11648 ** 2 * (165 * t11650 - 330 * t11651 + 330 * t11652 - 462 * t11653 - 495 * t11655 + 220 * t11656 - 55 * t11657 + 5 + (660 * t11653 + 6 * t11657 - 44) * t11649) * np.sin((11 * phi1 - 10 * phi2)) * ((1 - t11649) ** (-0.1e1 / 0.2e1)) * ((1 + t11649) ** (-0.1e1 / 0.2e1))

        if Bindx == 1500:
            t11659 = np.cos(phi)
            t11660 = t11659 ** 2
            t11662 = t11660 ** 2
            t11663 = t11659 * t11662
            t11668 = t11663 ** 2
            t11666 = t11662 ** 2
            t11661 = t11659 * t11660
            t11664 = t11661 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (69 * t11660 - 85 * t11661 - 30 * t11662 + 234 * t11663 + 135 * t11666 + 113 * t11668 + 3 + (-294 + 4 * t11664) * t11664 + (102 * t11664 - 195 * t11666 - 33 * t11668 - 23) * t11659) * np.cos((11 * phi1 - 9 * phi2))

        if Bindx == 1501:
            t11682 = np.sin(phi)
            t11680 = t11682 ** 2
            t11671 = np.cos(phi)
            t11672 = t11671 ** 2
            t11674 = t11672 ** 2
            t11678 = t11674 ** 2
            t11673 = t11671 * t11672
            t11676 = t11673 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * t11680 ** 2 * (32 * t11672 - 28 * t11673 - 28 * t11674 - 112 * t11676 - 22 * t11678 + 2 + (98 * t11674 + 68 * t11676 + 3 * t11678 - 13) * t11671) * np.sin((11 * phi1 - 8 * phi2)) * ((1 - t11671) ** (-0.1e1 / 0.2e1)) * ((1 + t11671) ** (-0.1e1 / 0.2e1))

        if Bindx == 1502:
            t11683 = np.cos(phi)
            t11684 = t11683 ** 2
            t11686 = t11684 ** 2
            t11687 = t11683 * t11686
            t11692 = t11687 ** 2
            t11690 = t11686 ** 2
            t11685 = t11683 * t11684
            t11688 = t11685 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (-49 * t11684 - 81 * t11685 + 294 * t11686 - 222 * t11687 - 219 * t11690 + 179 * t11692 - 7 + (-210 + 12 * t11688) * t11688 + (462 * t11688 - 119 * t11690 - 77 * t11692 + 37) * t11683) * np.cos((11 * phi1 - 7 * phi2))

        if Bindx == 1503:
            t11705 = np.sin(phi)
            t11702 = t11705 ** 2
            t11703 = t11705 * t11702
            t11695 = np.cos(phi)
            t11696 = t11695 ** 2
            t11697 = t11695 * t11696
            t11700 = t11697 ** 2
            t11698 = t11696 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.100947e6) * t11703 ** 2 * (3 * t11696 + 10 * t11697 - 25 * t11698 - 11 * t11700 + 1 + (24 * t11698 + 2 * t11700 - 4) * t11695) * np.sin((11 * phi1 - 6 * phi2)) * ((1 - t11695) ** (-0.1e1 / 0.2e1)) * ((1 + t11695) ** (-0.1e1 / 0.2e1))

        if Bindx == 1504:
            t11706 = np.cos(phi)
            t11707 = t11706 ** 2
            t11709 = t11707 ** 2
            t11710 = t11706 * t11709
            t11715 = t11710 ** 2
            t11713 = t11709 ** 2
            t11708 = t11706 * t11707
            t11711 = t11708 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.14421e5) * (-25 * t11707 + 109 * t11708 - 50 * t11709 - 194 * t11710 - 239 * t11713 + 59 * t11715 + 5 + (238 + 12 * t11711) * t11711 + (58 * t11711 + 95 * t11713 - 55 * t11715 - 13) * t11706) * np.cos((11 * phi1 - 5 * phi2))

        if Bindx == 1505:
            t11727 = np.sin(phi)
            t11718 = np.cos(phi)
            t11726 = 1 - t11718
            t11723 = t11727 ** 2
            t11724 = t11723 ** 2
            t11719 = t11718 ** 2
            t11721 = t11719 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * t11724 ** 2 * (-6 * t11719 - 11 * t11721 + t11726 + (14 * t11719 + 3 * t11721) * t11718) * np.sin((11 * phi1 - 4 * phi2)) * (t11726 ** (-0.1e1 / 0.2e1)) * ((1 + t11718) ** (-0.1e1 / 0.2e1))

        if Bindx == 1506:
            t11728 = np.cos(phi)
            t11729 = t11728 ** 2
            t11731 = t11729 ** 2
            t11732 = t11728 * t11731
            t11737 = t11732 ** 2
            t11735 = t11731 ** 2
            t11730 = t11728 * t11729
            t11733 = t11730 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * (13 * t11729 - 7 * t11730 - 38 * t11731 + 38 * t11732 - 13 * t11735 - 7 * t11737 - 1 + (42 + 4 * t11733) * t11733 + (-62 * t11733 + 43 * t11735 - 11 * t11737 - 1) * t11728) * np.cos((11 * phi1 - 3 * phi2))

        if Bindx == 1507:
            t11747 = np.sin(phi)
            t11743 = t11747 ** 2
            t11745 = t11747 * t11743 ** 2
            t11740 = np.cos(phi)
            t11741 = t11740 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * t11745 ** 2 * (-11 * t11741 + 1 + (6 * t11741 + 4) * t11740) * np.sin((11 * phi1 - 2 * phi2)) * ((1 - t11740) ** (-0.1e1 / 0.2e1)) * ((1 + t11740) ** (-0.1e1 / 0.2e1))

        if Bindx == 1508:
            t11748 = np.cos(phi)
            t11749 = t11748 ** 2
            t11751 = t11749 ** 2
            t11752 = t11748 * t11751
            t11757 = t11752 ** 2
            t11755 = t11751 ** 2
            t11750 = t11748 * t11749
            t11753 = t11750 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.52003e5) * (-17 * t11749 - 55 * t11750 + 70 * t11751 + 110 * t11752 + 125 * t11755 - 61 * t11757 + 1 + (-130 + 12 * t11753) * t11753 + (-110 * t11753 + 55 * t11755 - 11 * t11757 + 11) * t11748) * np.cos((11 * phi1 - phi2))

        if Bindx == 1509:
            t11765 = np.sin(phi)
            t11761 = t11765 ** 2
            t11762 = t11765 * t11761
            t11763 = t11762 ** 2
            t11760 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t11760 * t11763 ** 2 * np.sin((11 * phi1)) * ((1 - t11760) ** (-0.1e1 / 0.2e1)) * ((1 + t11760) ** (-0.1e1 / 0.2e1))

        if Bindx == 1510:
            t11766 = np.cos(phi)
            t11767 = t11766 ** 2
            t11769 = t11767 ** 2
            t11770 = t11766 * t11769
            t11775 = t11770 ** 2
            t11773 = t11769 ** 2
            t11768 = t11766 * t11767
            t11771 = t11768 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.52003e5) * (-17 * t11767 + 55 * t11768 + 70 * t11769 - 110 * t11770 + 125 * t11773 - 61 * t11775 + 1 + (-130 + 12 * t11771) * t11771 + (110 * t11771 - 55 * t11773 + 11 * t11775 - 11) * t11766) * np.cos((11 * phi1 + phi2))

        if Bindx == 1511:
            t11785 = np.sin(phi)
            t11781 = t11785 ** 2
            t11783 = t11785 * t11781 ** 2
            t11778 = np.cos(phi)
            t11779 = t11778 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * t11783 ** 2 * (11 * t11779 - 1 + (6 * t11779 + 4) * t11778) * np.sin((11 * phi1 + 2 * phi2)) * ((1 - t11778) ** (-0.1e1 / 0.2e1)) * ((1 + t11778) ** (-0.1e1 / 0.2e1))

        if Bindx == 1512:
            t11786 = np.cos(phi)
            t11787 = t11786 ** 2
            t11789 = t11787 ** 2
            t11790 = t11786 * t11789
            t11795 = t11790 ** 2
            t11793 = t11789 ** 2
            t11788 = t11786 * t11787
            t11791 = t11788 ** 2
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * (13 * t11787 + 7 * t11788 - 38 * t11789 - 38 * t11790 - 13 * t11793 - 7 * t11795 - 1 + (42 + 4 * t11791) * t11791 + (62 * t11791 - 43 * t11793 + 11 * t11795 + 1) * t11786) * np.cos((11 * phi1 + 3 * phi2))

        if Bindx == 1513:
            t11807 = np.sin(phi)
            t11798 = np.cos(phi)
            t11806 = 1 + t11798
            t11803 = t11807 ** 2
            t11804 = t11803 ** 2
            t11799 = t11798 ** 2
            t11801 = t11799 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * t11804 ** 2 * (6 * t11799 + 11 * t11801 - t11806 + (14 * t11799 + 3 * t11801) * t11798) * np.sin((11 * phi1 + 4 * phi2)) * ((1 - t11798) ** (-0.1e1 / 0.2e1)) * (t11806 ** (-0.1e1 / 0.2e1))

        if Bindx == 1514:
            t11808 = np.cos(phi)
            t11809 = t11808 ** 2
            t11811 = t11809 ** 2
            t11812 = t11808 * t11811
            t11817 = t11812 ** 2
            t11815 = t11811 ** 2
            t11810 = t11808 * t11809
            t11813 = t11810 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.14421e5) * (-25 * t11809 - 109 * t11810 - 50 * t11811 + 194 * t11812 - 239 * t11815 + 59 * t11817 + 5 + (238 + 12 * t11813) * t11813 + (-58 * t11813 - 95 * t11815 + 55 * t11817 + 13) * t11808) * np.cos((11 * phi1 + 5 * phi2))

        if Bindx == 1515:
            t11830 = np.sin(phi)
            t11827 = t11830 ** 2
            t11828 = t11830 * t11827
            t11820 = np.cos(phi)
            t11821 = t11820 ** 2
            t11822 = t11820 * t11821
            t11825 = t11822 ** 2
            t11823 = t11821 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.100947e6) * t11828 ** 2 * (-3 * t11821 + 10 * t11822 + 25 * t11823 + 11 * t11825 - 1 + (24 * t11823 + 2 * t11825 - 4) * t11820) * np.sin((11 * phi1 + 6 * phi2)) * ((1 - t11820) ** (-0.1e1 / 0.2e1)) * ((1 + t11820) ** (-0.1e1 / 0.2e1))

        if Bindx == 1516:
            t11831 = np.cos(phi)
            t11832 = t11831 ** 2
            t11834 = t11832 ** 2
            t11835 = t11831 * t11834
            t11840 = t11835 ** 2
            t11838 = t11834 ** 2
            t11833 = t11831 * t11832
            t11836 = t11833 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (-49 * t11832 + 81 * t11833 + 294 * t11834 + 222 * t11835 - 219 * t11838 + 179 * t11840 - 7 + (-210 + 12 * t11836) * t11836 + (-462 * t11836 + 119 * t11838 + 77 * t11840 - 37) * t11831) * np.cos((11 * phi1 + 7 * phi2))

        if Bindx == 1517:
            t11854 = np.sin(phi)
            t11852 = t11854 ** 2
            t11843 = np.cos(phi)
            t11844 = t11843 ** 2
            t11846 = t11844 ** 2
            t11850 = t11846 ** 2
            t11845 = t11843 * t11844
            t11848 = t11845 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * t11852 ** 2 * (-32 * t11844 - 28 * t11845 + 28 * t11846 + 112 * t11848 + 22 * t11850 - 2 + (98 * t11846 + 68 * t11848 + 3 * t11850 - 13) * t11843) * np.sin((11 * phi1 + 8 * phi2)) * ((1 - t11843) ** (-0.1e1 / 0.2e1)) * ((1 + t11843) ** (-0.1e1 / 0.2e1))

        if Bindx == 1518:
            t11855 = np.cos(phi)
            t11856 = t11855 ** 2
            t11858 = t11856 ** 2
            t11859 = t11855 * t11858
            t11864 = t11859 ** 2
            t11862 = t11858 ** 2
            t11857 = t11855 * t11856
            t11860 = t11857 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (69 * t11856 + 85 * t11857 - 30 * t11858 - 234 * t11859 + 135 * t11862 + 113 * t11864 + 3 + (-294 + 4 * t11860) * t11860 + (-102 * t11860 + 195 * t11862 + 33 * t11864 + 23) * t11855) * np.cos((11 * phi1 + 9 * phi2))

        if Bindx == 1519:
            t11868 = np.cos(phi)
            t11869 = t11868 ** 2
            t11871 = t11869 ** 2
            t11874 = t11871 ** 2
            t11875 = t11868 * t11874
            t11876 = t11868 * t11875
            t11870 = t11868 * t11869
            t11872 = t11870 ** 2
            t11867 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.23e2) * t11867 ** 2 * (-165 * t11869 - 330 * t11870 - 330 * t11871 + 462 * t11872 + 495 * t11874 + 220 * t11875 + 55 * t11876 - 5 + (660 * t11872 + 6 * t11876 - 44) * t11868) * np.sin((11 * phi1 + 10 * phi2)) * ((1 - t11868) ** (-0.1e1 / 0.2e1)) * ((1 + t11868) ** (-0.1e1 / 0.2e1))

        if Bindx == 1520:
            t11878 = np.cos(phi)
            t11879 = t11878 ** 2
            t11881 = t11879 ** 2
            t11882 = t11878 * t11881
            t11887 = t11882 ** 2
            t11885 = t11881 ** 2
            t11880 = t11878 * t11879
            t11883 = t11880 ** 2
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * (-473 * t11879 - 1155 * t11880 - 1650 * t11881 - 1122 * t11882 + 2145 * t11885 + 539 * t11887 - 11 + (462 + 12 * t11883) * t11883 + (1914 * t11883 + 1375 * t11885 + 121 * t11887 - 109) * t11878) * np.cos((11 * phi1 + 11 * phi2))

        if Bindx == 1521:
            t11890 = np.cos(phi)
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * np.sqrt((1 - t11890)) * ((1 + t11890) ** (0.23e2 / 0.2e1)) * np.sin((11 * phi1 + 12 * phi2))

        if Bindx == 1522:
            t11891 = np.cos(phi)
            t11903 = -12 * t11891
            t11892 = t11891 ** 2
            t11893 = t11891 * t11892
            t11896 = t11893 ** 2
            t11894 = t11892 ** 2
            t11895 = t11891 * t11894
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.2e1) * np.cos((12 * phi1 - 12 * phi2)) * (66 * t11892 - 220 * t11893 + t11903 + 1 + (-792 * t11891 + 924 + t11896) * t11896 + (-792 + (t11903 + 66) * t11895) * t11895 + (495 + (-220 * t11891 + 495) * t11894) * t11894)

        if Bindx == 1523:
            t11904 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * ((1 - t11904) ** (0.23e2 / 0.2e1)) * np.sqrt((1 + t11904)) * np.sin((12 * phi1 - 11 * phi2))

        if Bindx == 1524:
            t11905 = np.cos(phi)
            t11906 = t11905 ** 2
            t11908 = t11906 ** 2
            t11909 = t11905 * t11908
            t11913 = t11909 ** 2
            t11914 = t11905 * t11913
            t11911 = t11908 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (-165 * t11908 + 132 * t11909 + 165 * t11911 + 44 * t11913 - 10 * t11914 - 1 + (-132 * t11909 - 44) * t11906 + (110 * t11906 - 110 * t11911 + t11914 + 10) * t11905) * np.cos((12 * phi1 - 10 * phi2))

        if Bindx == 1525:
            t11916 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.253e3) * ((1 - t11916) ** (0.21e2 / 0.2e1)) * ((1 + t11916) ** (0.3e1 / 0.2e1)) * np.sin((12 * phi1 - 9 * phi2))

        if Bindx == 1526:
            t11917 = np.cos(phi)
            t11929 = -8 * t11917
            t11918 = t11917 ** 2
            t11919 = t11917 * t11918
            t11922 = t11919 ** 2
            t11920 = t11918 ** 2
            t11921 = t11917 * t11920
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.5313e4) * np.cos((12 * phi1 - 8 * phi2)) * (26 * t11918 - 40 * t11919 + t11929 + 1 + (48 * t11917 - 84 + t11922) * t11922 + (48 + (t11929 + 26) * t11921) * t11921 + (15 + (-40 * t11917 + 15) * t11920) * t11920)

        if Bindx == 1527:
            t11930 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.5313e4) * ((1 - t11930) ** (0.19e2 / 0.2e1)) * ((1 + t11930) ** (0.5e1 / 0.2e1)) * np.sin((12 * phi1 - 7 * phi2))

        if Bindx == 1528:
            t11931 = np.cos(phi)
            t11932 = t11931 ** 2
            t11934 = t11932 ** 2
            t11935 = t11931 * t11934
            t11939 = t11935 ** 2
            t11940 = t11931 * t11939
            t11937 = t11934 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.33649e5) * np.cos((12 * phi1 - 6 * phi2)) * (27 * t11934 - 36 * t11935 - 27 * t11937 + 12 * t11939 - 6 * t11940 - 1 + (36 * t11935 - 12) * t11932 + (2 * t11932 - 2 * t11937 + t11940 + 6) * t11931)

        if Bindx == 1529:
            t11942 = np.cos(phi)
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.4807e4) * ((1 - t11942) ** (0.17e2 / 0.2e1)) * ((1 + t11942) ** (0.7e1 / 0.2e1)) * np.sin((12 * phi1 - 5 * phi2))

        if Bindx == 1530:
            t11943 = np.cos(phi)
            t11955 = -4 * t11943
            t11944 = t11943 ** 2
            t11945 = t11943 * t11944
            t11948 = t11945 ** 2
            t11946 = t11944 ** 2
            t11947 = t11943 * t11946
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * np.cos((12 * phi1 - 4 * phi2)) * (2 * t11944 + 12 * t11945 + t11955 + 1 + (-8 * t11943 + 28 + t11948) * t11948 + (-8 + (t11955 + 2) * t11947) * t11947 + (-17 + (12 * t11943 - 17) * t11946) * t11946)

        if Bindx == 1531:
            t11956 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * ((1 - t11956) ** (0.15e2 / 0.2e1)) * ((1 + t11956) ** (0.9e1 / 0.2e1)) * np.sin((12 * phi1 - 3 * phi2))

        if Bindx == 1532:
            t11957 = np.cos(phi)
            t11958 = t11957 ** 2
            t11960 = t11958 ** 2
            t11961 = t11957 * t11960
            t11965 = t11961 ** 2
            t11966 = t11957 * t11965
            t11963 = t11960 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * np.cos((12 * phi1 - 2 * phi2)) * (-5 * t11960 + 20 * t11961 + 5 * t11963 - 4 * t11965 - 2 * t11966 - 1 + (-20 * t11961 + 4) * t11958 + (-10 * t11958 + 10 * t11963 + t11966 + 2) * t11957)

        if Bindx == 1533:
            t11968 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * ((1 - t11968) ** (0.13e2 / 0.2e1)) * ((1 + t11968) ** (0.11e2 / 0.2e1)) * np.sin((12 * phi1 - phi2))

        if Bindx == 1534:
            t11969 = np.cos(phi)
            t11970 = t11969 ** 2
            t11976 = -6 * t11970
            t11971 = t11970 ** 2
            t11972 = t11970 * t11971
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t11976 + 1 + (-20 + t11972) * t11972 + (15 + (t11976 + 15) * t11971) * t11971)

        if Bindx == 1535:
            t11977 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * ((1 - t11977) ** (0.11e2 / 0.2e1)) * ((1 + t11977) ** (0.13e2 / 0.2e1)) * np.sin((12 * phi1 + phi2))

        if Bindx == 1536:
            t11978 = np.cos(phi)
            t11979 = t11978 ** 2
            t11981 = t11979 ** 2
            t11982 = t11978 * t11981
            t11986 = t11982 ** 2
            t11987 = t11978 * t11986
            t11984 = t11981 ** 2
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.245157e6) * np.cos((12 * phi1 + 2 * phi2)) * (-5 * t11981 - 20 * t11982 + 5 * t11984 - 4 * t11986 + 2 * t11987 - 1 + (20 * t11982 + 4) * t11979 + (10 * t11979 - 10 * t11984 + t11987 - 2) * t11978)

        if Bindx == 1537:
            t11989 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * ((1 - t11989) ** (0.9e1 / 0.2e1)) * ((1 + t11989) ** (0.15e2 / 0.2e1)) * np.sin((12 * phi1 + 3 * phi2))

        if Bindx == 1538:
            t11990 = np.cos(phi)
            t12002 = 4 * t11990
            t11991 = t11990 ** 2
            t11992 = t11990 * t11991
            t11995 = t11992 ** 2
            t11993 = t11991 ** 2
            t11994 = t11990 * t11993
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * np.cos((12 * phi1 + 4 * phi2)) * (2 * t11991 - 12 * t11992 + t12002 + 1 + (8 * t11990 + 28 + t11995) * t11995 + (8 + (t12002 + 2) * t11994) * t11994 + (-17 + (-12 * t11990 - 17) * t11993) * t11993)

        if Bindx == 1539:
            t12003 = np.cos(phi)
            tfunc[..., c] = -0.75e2 / 0.1024e4 * np.sqrt(0.4807e4) * ((1 - t12003) ** (0.7e1 / 0.2e1)) * ((1 + t12003) ** (0.17e2 / 0.2e1)) * np.sin((12 * phi1 + 5 * phi2))

        if Bindx == 1540:
            t12004 = np.cos(phi)
            t12005 = t12004 ** 2
            t12007 = t12005 ** 2
            t12008 = t12004 * t12007
            t12012 = t12008 ** 2
            t12013 = t12004 * t12012
            t12010 = t12007 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.33649e5) * np.cos((12 * phi1 + 6 * phi2)) * (27 * t12007 + 36 * t12008 - 27 * t12010 + 12 * t12012 + 6 * t12013 - 1 + (-36 * t12008 - 12) * t12005 + (-2 * t12005 + 2 * t12010 + t12013 - 6) * t12004)

        if Bindx == 1541:
            t12015 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.5313e4) * ((1 - t12015) ** (0.5e1 / 0.2e1)) * ((1 + t12015) ** (0.19e2 / 0.2e1)) * np.sin((12 * phi1 + 7 * phi2))

        if Bindx == 1542:
            t12016 = np.cos(phi)
            t12028 = 8 * t12016
            t12017 = t12016 ** 2
            t12018 = t12016 * t12017
            t12021 = t12018 ** 2
            t12019 = t12017 ** 2
            t12020 = t12016 * t12019
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.5313e4) * np.cos((12 * phi1 + 8 * phi2)) * (26 * t12017 + 40 * t12018 + t12028 + 1 + (-48 * t12016 - 84 + t12021) * t12021 + (-48 + (t12028 + 26) * t12020) * t12020 + (15 + (40 * t12016 + 15) * t12019) * t12019)

        if Bindx == 1543:
            t12029 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.253e3) * ((1 - t12029) ** (0.3e1 / 0.2e1)) * ((1 + t12029) ** (0.21e2 / 0.2e1)) * np.sin((12 * phi1 + 9 * phi2))

        if Bindx == 1544:
            t12030 = np.cos(phi)
            t12031 = t12030 ** 2
            t12033 = t12031 ** 2
            t12034 = t12030 * t12033
            t12038 = t12034 ** 2
            t12039 = t12030 * t12038
            t12036 = t12033 ** 2
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (-165 * t12033 - 132 * t12034 + 165 * t12036 + 44 * t12038 + 10 * t12039 - 1 + (132 * t12034 - 44) * t12031 + (-110 * t12031 + 110 * t12036 + t12039 - 10) * t12030) * np.cos((12 * phi1 + 10 * phi2))

        if Bindx == 1545:
            t12041 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.3e1) * ((1 + t12041) ** (0.23e2 / 0.2e1)) * np.sin((12 * phi1 + 11 * phi2)) * np.sqrt((1 - t12041))

        if Bindx == 1546:
            t12042 = np.cos(phi)
            t12054 = 12 * t12042
            t12043 = t12042 ** 2
            t12044 = t12042 * t12043
            t12047 = t12044 ** 2
            t12045 = t12043 ** 2
            t12046 = t12042 * t12045
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.2e1) * np.cos((12 * phi1 + 12 * phi2)) * (66 * t12043 + 220 * t12044 + t12054 + 1 + (792 * t12042 + 924 + t12047) * t12047 + (792 + (t12054 + 66) * t12046) * t12046 + (495 + (220 * t12042 + 495) * t12045) * t12045)

        if Bindx == 1547:
            t12055 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.52003e5) * ((1 - t12055) ** (0.13e2 / 0.2e1)) * ((1 + t12055) ** (0.13e2 / 0.2e1)) * np.sin((13 * phi2))

        if Bindx == 1548:
            t12056 = np.cos(phi)
            t12057 = t12056 ** 2
            t12063 = -6 * t12057
            t12058 = t12057 ** 2
            t12059 = t12057 * t12058
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t12056 * np.cos((12 * phi2)) * (t12063 + 1 + (-20 + t12059) * t12059 + (15 + (t12063 + 15) * t12058) * t12058)

        if Bindx == 1549:
            t12069 = np.sin(phi)
            t12065 = t12069 ** 2
            t12066 = t12069 * t12065
            t12067 = t12066 ** 2
            t12064 = np.cos(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.676039e6) * t12067 ** 2 * (25 * t12064 ** 2 - 1) * np.sin((11 * phi2)) * ((1 - t12064) ** (-0.1e1 / 0.2e1)) * ((1 + t12064) ** (-0.1e1 / 0.2e1))

        if Bindx == 1550:
            t12070 = np.cos(phi)
            t12071 = t12070 ** 2
            t12072 = t12071 ** 2
            t12074 = t12072 ** 2
            t12073 = t12071 * t12072
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t12070 * (155 * t12072 + 265 * t12074 + 3 + (-280 + 25 * t12073) * t12073 + (-128 * t12074 - 40) * t12071) * np.cos((10 * phi2))

        if Bindx == 1551:
            t12084 = np.sin(phi)
            t12080 = t12084 ** 2
            t12082 = t12084 * t12080 ** 2
            t12077 = np.cos(phi)
            t12078 = t12077 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t12082 ** 2 * (3 + (-138 + 575 * t12078) * t12078) * np.sin((9 * phi2)) * ((1 - t12077) ** (-0.1e1 / 0.2e1)) * ((1 + t12077) ** (-0.1e1 / 0.2e1))

        if Bindx == 1552:
            t12085 = np.cos(phi)
            t12086 = t12085 ** 2
            t12087 = t12086 ** 2
            t12089 = t12087 ** 2
            t12088 = t12086 * t12087
            tfunc[..., c] = 0.27e2 / 0.1024e4 * t12085 * np.sqrt(0.1616615e7) * (317 * t12087 + 877 * t12089 + 3 + (-748 + 115 * t12088) * t12088 + (-506 * t12089 - 58) * t12086) * np.cos((8 * phi2))

        if Bindx == 1553:
            t12099 = np.sin(phi)
            t12096 = t12099 ** 2
            t12097 = t12096 ** 2
            t12092 = np.cos(phi)
            t12093 = t12092 ** 2
            t12094 = t12093 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t12097 ** 2 * (-483 * t12094 - 1 + (805 * t12094 + 63) * t12093) * np.sin((7 * phi2)) * ((1 - t12092) ** (-0.1e1 / 0.2e1)) * ((1 + t12092) ** (-0.1e1 / 0.2e1))

        if Bindx == 1554:
            t12100 = np.cos(phi)
            t12101 = t12100 ** 2
            t12102 = t12101 ** 2
            t12104 = t12102 ** 2
            t12103 = t12101 * t12102
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t12100 * (813 * t12102 + 3279 * t12104 + 5 + (-2344 + 575 * t12103) * t12103 + (-2208 * t12104 - 120) * t12101) * np.cos((6 * phi2))

        if Bindx == 1555:
            t12115 = np.sin(phi)
            t12112 = t12115 ** 2
            t12113 = t12115 * t12112
            t12107 = np.cos(phi)
            t12108 = t12107 ** 2
            t12109 = t12108 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.17017e5) * t12113 ** 2 * (-380 * t12108 + 5 + (-12236 * t12108 + 3990 + 10925 * t12109) * t12109) * np.sin((5 * phi2)) * ((1 - t12107) ** (-0.1e1 / 0.2e1)) * ((1 + t12107) ** (-0.1e1 / 0.2e1))

        if Bindx == 1556:
            t12116 = np.cos(phi)
            t12117 = t12116 ** 2
            t12118 = t12117 ** 2
            t12120 = t12118 ** 2
            t12119 = t12117 * t12118
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17017e5) * t12116 * (9507 * t12118 + 49571 * t12120 + 45 + (-31236 + 10925 * t12119) * t12119 + (-37582 * t12120 - 1230) * t12117) * np.cos((4 * phi2))

        if Bindx == 1557:
            t12131 = np.sin(phi)
            t12129 = t12131 ** 2
            t12123 = np.cos(phi)
            t12124 = t12123 ** 2
            t12125 = t12124 ** 2
            t12127 = t12125 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.5005e4) * t12129 ** 2 * (-9690 * t12125 - 66861 * t12127 - 9 + (40698 * t12125 + 37145 * t12127 + 765) * t12124) * np.sin((3 * phi2)) * ((1 - t12123) ** (-0.1e1 / 0.2e1)) * ((1 + t12123) ** (-0.1e1 / 0.2e1))

        if Bindx == 1558:
            t12132 = np.cos(phi)
            t12133 = t12132 ** 2
            t12134 = t12133 ** 2
            t12136 = t12134 ** 2
            t12135 = t12133 * t12134
            tfunc[..., c] = -0.27e2 / 0.512e3 * t12132 * np.sqrt(0.455e3) * (24123 * t12134 + 145673 * t12136 + 99 + (-85272 + 37145 * t12135) * t12135 + (-118864 * t12136 - 2904) * t12133) * np.cos((2 * phi2))

        if Bindx == 1559:
            t12140 = np.cos(phi)
            t12141 = t12140 ** 2
            t12142 = t12141 ** 2
            t12144 = t12142 ** 2
            t12143 = t12141 * t12142
            t12139 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.91e2) * t12139 ** 2 * (42075 * t12142 + 479655 * t12144 + 33 + (-213180 + 185725 * t12143) * t12143 + (-490314 * t12144 - 2970) * t12141) * np.sin(phi2) * ((1 - t12140) ** (-0.1e1 / 0.2e1)) * ((1 + t12140) ** (-0.1e1 / 0.2e1))

        if Bindx == 1560:
            t12147 = np.cos(phi)
            t12148 = t12147 ** 2
            t12149 = t12148 ** 2
            t12151 = t12149 ** 2
            t12150 = t12148 * t12149
            tfunc[..., c] = 0.27e2 / 0.1024e4 * t12147 * (765765 * t12149 + 4849845 * t12151 + 3003 + (-2771340 + 1300075 * t12150) * t12150 + (-4056234 * t12151 - 90090) * t12148)

        if Bindx == 1561:
            t12155 = np.cos(phi)
            t12156 = t12155 ** 2
            t12157 = t12156 ** 2
            t12159 = t12157 ** 2
            t12158 = t12156 * t12157
            t12154 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.91e2) * t12154 ** 2 * (42075 * t12157 + 479655 * t12159 + 33 + (-213180 + 185725 * t12158) * t12158 + (-490314 * t12159 - 2970) * t12156) * np.sin(phi2) * ((1 - t12155) ** (-0.1e1 / 0.2e1)) * ((1 + t12155) ** (-0.1e1 / 0.2e1))

        if Bindx == 1562:
            t12162 = np.cos(phi)
            t12163 = t12162 ** 2
            t12164 = t12163 ** 2
            t12166 = t12164 ** 2
            t12165 = t12163 * t12164
            tfunc[..., c] = -0.27e2 / 0.512e3 * t12162 * np.sqrt(0.455e3) * (24123 * t12164 + 145673 * t12166 + 99 + (-85272 + 37145 * t12165) * t12165 + (-118864 * t12166 - 2904) * t12163) * np.cos((2 * phi2))

        if Bindx == 1563:
            t12177 = np.sin(phi)
            t12175 = t12177 ** 2
            t12169 = np.cos(phi)
            t12170 = t12169 ** 2
            t12171 = t12170 ** 2
            t12173 = t12171 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.5005e4) * t12175 ** 2 * (-9690 * t12171 - 66861 * t12173 - 9 + (40698 * t12171 + 37145 * t12173 + 765) * t12170) * np.sin((3 * phi2)) * ((1 - t12169) ** (-0.1e1 / 0.2e1)) * ((1 + t12169) ** (-0.1e1 / 0.2e1))

        if Bindx == 1564:
            t12178 = np.cos(phi)
            t12179 = t12178 ** 2
            t12180 = t12179 ** 2
            t12182 = t12180 ** 2
            t12181 = t12179 * t12180
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17017e5) * t12178 * (9507 * t12180 + 49571 * t12182 + 45 + (-31236 + 10925 * t12181) * t12181 + (-37582 * t12182 - 1230) * t12179) * np.cos((4 * phi2))

        if Bindx == 1565:
            t12193 = np.sin(phi)
            t12190 = t12193 ** 2
            t12191 = t12193 * t12190
            t12185 = np.cos(phi)
            t12186 = t12185 ** 2
            t12187 = t12186 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.17017e5) * t12191 ** 2 * (-380 * t12186 + 5 + (-12236 * t12186 + 3990 + 10925 * t12187) * t12187) * np.sin((5 * phi2)) * ((1 - t12185) ** (-0.1e1 / 0.2e1)) * ((1 + t12185) ** (-0.1e1 / 0.2e1))

        if Bindx == 1566:
            t12194 = np.cos(phi)
            t12195 = t12194 ** 2
            t12196 = t12195 ** 2
            t12198 = t12196 ** 2
            t12197 = t12195 * t12196
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t12194 * (813 * t12196 + 3279 * t12198 + 5 + (-2344 + 575 * t12197) * t12197 + (-2208 * t12198 - 120) * t12195) * np.cos((6 * phi2))

        if Bindx == 1567:
            t12208 = np.sin(phi)
            t12205 = t12208 ** 2
            t12206 = t12205 ** 2
            t12201 = np.cos(phi)
            t12202 = t12201 ** 2
            t12203 = t12202 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t12206 ** 2 * (-483 * t12203 - 1 + (805 * t12203 + 63) * t12202) * np.sin((7 * phi2)) * ((1 - t12201) ** (-0.1e1 / 0.2e1)) * ((1 + t12201) ** (-0.1e1 / 0.2e1))

        if Bindx == 1568:
            t12209 = np.cos(phi)
            t12210 = t12209 ** 2
            t12211 = t12210 ** 2
            t12213 = t12211 ** 2
            t12212 = t12210 * t12211
            tfunc[..., c] = 0.27e2 / 0.1024e4 * t12209 * np.sqrt(0.1616615e7) * (317 * t12211 + 877 * t12213 + 3 + (-748 + 115 * t12212) * t12212 + (-506 * t12213 - 58) * t12210) * np.cos((8 * phi2))

        if Bindx == 1569:
            t12223 = np.sin(phi)
            t12219 = t12223 ** 2
            t12221 = t12223 * t12219 ** 2
            t12216 = np.cos(phi)
            t12217 = t12216 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t12221 ** 2 * (3 + (-138 + 575 * t12217) * t12217) * np.sin((9 * phi2)) * ((1 - t12216) ** (-0.1e1 / 0.2e1)) * ((1 + t12216) ** (-0.1e1 / 0.2e1))

        if Bindx == 1570:
            t12224 = np.cos(phi)
            t12225 = t12224 ** 2
            t12226 = t12225 ** 2
            t12228 = t12226 ** 2
            t12227 = t12225 * t12226
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t12224 * (155 * t12226 + 265 * t12228 + 3 + (-280 + 25 * t12227) * t12227 + (-128 * t12228 - 40) * t12225) * np.cos((10 * phi2))

        if Bindx == 1571:
            t12236 = np.sin(phi)
            t12232 = t12236 ** 2
            t12233 = t12236 * t12232
            t12234 = t12233 ** 2
            t12231 = np.cos(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.676039e6) * t12234 ** 2 * (25 * t12231 ** 2 - 1) * np.sin((11 * phi2)) * ((1 - t12231) ** (-0.1e1 / 0.2e1)) * ((1 + t12231) ** (-0.1e1 / 0.2e1))

        if Bindx == 1572:
            t12237 = np.cos(phi)
            t12238 = t12237 ** 2
            t12244 = -6 * t12238
            t12239 = t12238 ** 2
            t12240 = t12238 * t12239
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t12237 * np.cos((12 * phi2)) * (t12244 + 1 + (-20 + t12240) * t12240 + (15 + (t12244 + 15) * t12239) * t12239)

        if Bindx == 1573:
            t12245 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.52003e5) * ((1 - t12245) ** (0.13e2 / 0.2e1)) * ((1 + t12245) ** (0.13e2 / 0.2e1)) * np.sin((13 * phi2))

        if Bindx == 1574:
            t12246 = np.cos(phi)
            t12247 = t12246 ** 2
            t12249 = t12247 ** 2
            t12250 = t12246 * t12249
            t12248 = t12246 * t12247
            t12251 = t12248 ** 2
            t12259 = 15 * t12249 ** 2 - 6 * t12250 ** 2 + 1 + (-20 + t12251) * t12251
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.96577e5) * np.cos((phi1 - 13 * phi2)) * (t12259 * t12246 + 6 * t12247 - 6 * t12248 - 15 * t12249 + 15 * t12250 - t12259)

        if Bindx == 1575:
            t12265 = np.sin(phi)
            t12261 = t12265 ** 2
            t12262 = t12265 * t12261
            t12263 = t12262 ** 2
            t12260 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.7429e4) * t12263 ** 2 * (-1 + (-12 + 13 * t12260) * t12260) * np.sin((phi1 - 12 * phi2)) * ((1 - t12260) ** (-0.1e1 / 0.2e1)) * ((1 + t12260) ** (-0.1e1 / 0.2e1))

        if Bindx == 1576:
            t12266 = np.cos(phi)
            t12267 = t12266 ** 2
            t12268 = t12266 * t12267
            t12271 = t12268 ** 2
            t12277 = t12271 ** 2
            t12269 = t12267 ** 2
            t12270 = t12266 * t12269
            t12275 = t12270 ** 2
            t12273 = t12269 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (330 * t12267 - 630 * t12268 - 1485 * t12269 + 2235 * t12270 + 2860 * t12271 - 2805 * t12273 + 1386 * t12275 - 275 * t12277 - 11 + (-3860 * t12271 + 3555 * t12273 - 1686 * t12275 + 325 * t12277 + 61) * t12266) * np.cos((phi1 - 11 * phi2))

        if Bindx == 1577:
            t12287 = np.sin(phi)
            t12283 = t12287 ** 2
            t12285 = t12287 * t12283 ** 2
            t12279 = np.cos(phi)
            t12280 = t12279 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.7429e4) * t12285 ** 2 * (30 * t12279 + 3 + (-250 * t12279 - 108 + 325 * t12280) * t12280) * np.sin((phi1 - 10 * phi2)) * ((1 - t12279) ** (-0.1e1 / 0.2e1)) * ((1 + t12279) ** (-0.1e1 / 0.2e1))

        if Bindx == 1578:
            t12288 = np.cos(phi)
            t12289 = t12288 ** 2
            t12290 = t12288 * t12289
            t12293 = t12290 ** 2
            t12299 = t12293 ** 2
            t12291 = t12289 ** 2
            t12292 = t12288 * t12291
            t12297 = t12292 ** 2
            t12295 = t12291 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.323e3) * (1350 * t12289 - 5030 * t12290 - 10305 * t12291 + 24565 * t12292 + 28260 * t12293 - 36045 * t12295 + 21942 * t12297 - 5175 * t12299 - 27 + (-54020 * t12293 + 60425 * t12295 - 33718 * t12297 + 7475 * t12299 + 303) * t12288) * np.cos((phi1 - 9 * phi2))

        if Bindx == 1579:
            t12310 = np.sin(phi)
            t12307 = t12310 ** 2
            t12308 = t12307 ** 2
            t12301 = np.cos(phi)
            t12302 = t12301 ** 2
            t12304 = t12302 ** 2
            t12303 = t12301 * t12302
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17765e5) * t12308 ** 2 * (165 * t12302 - 1081 * t12304 - 3 + (368 + 1495 * t12303) * t12303 + (-920 * t12304 - 24) * t12301) * np.sin((phi1 - 8 * phi2)) * ((1 - t12301) ** (-0.1e1 / 0.2e1)) * ((1 + t12301) ** (-0.1e1 / 0.2e1))

        if Bindx == 1580:
            t12311 = np.cos(phi)
            t12312 = t12311 ** 2
            t12313 = t12311 * t12312
            t12316 = t12313 ** 2
            t12322 = t12316 ** 2
            t12314 = t12312 ** 2
            t12315 = t12311 * t12314
            t12320 = t12315 ** 2
            t12318 = t12314 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.124355e6) * (66 * t12312 - 414 * t12313 - 675 * t12314 + 2577 * t12315 + 2444 * t12316 - 3927 * t12318 + 2898 * t12320 - 805 * t12322 - 1 + (-6932 * t12316 + 9189 * t12318 - 5934 * t12320 + 1495 * t12322 + 19) * t12311) * np.cos((phi1 - 7 * phi2))

        if Bindx == 1581:
            t12335 = np.sin(phi)
            t12332 = t12335 ** 2
            t12333 = t12335 * t12332
            t12324 = np.cos(phi)
            t12325 = t12324 ** 2
            t12326 = t12324 * t12325
            t12329 = t12326 ** 2
            t12327 = t12325 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.3553e4) * t12333 ** 2 * (-350 * t12325 - 630 * t12326 - 9338 * t12329 + 5 + (3360 + 7475 * t12327) * t12327 + (2898 * t12327 - 3450 * t12329 + 30) * t12324) * np.sin((phi1 - 6 * phi2)) * ((1 - t12324) ** (-0.1e1 / 0.2e1)) * ((1 + t12324) ** (-0.1e1 / 0.2e1))

        if Bindx == 1582:
            t12336 = np.cos(phi)
            t12337 = t12336 ** 2
            t12338 = t12336 * t12337
            t12341 = t12338 ** 2
            t12347 = t12341 ** 2
            t12339 = t12337 ** 2
            t12340 = t12336 * t12339
            t12345 = t12340 ** 2
            t12343 = t12339 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.187e3) * (1950 * t12337 - 20190 * t12338 - 23775 * t12339 + 147351 * t12340 + 102980 * t12341 - 196935 * t12343 + 170430 * t12345 - 54625 * t12347 - 25 + (-459268 * t12341 + 695343 * t12343 - 506046 * t12345 + 142025 * t12347 + 785) * t12336) * np.cos((phi1 - 5 * phi2))

        if Bindx == 1583:
            t12361 = np.sin(phi)
            t12359 = t12361 ** 2
            t12349 = np.cos(phi)
            t12350 = t12349 ** 2
            t12352 = t12350 ** 2
            t12356 = t12352 ** 2
            t12351 = t12349 * t12350
            t12354 = t12351 ** 2
            t12353 = t12349 * t12352
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.187e3) * t12359 ** 2 * (3645 * t12350 + 4560 * t12351 - 43890 * t12352 + 174762 * t12354 - 271377 * t12356 - 45 + (-28728 + 142025 * t12353) * t12353 + (62928 * t12354 - 43700 * t12356 - 180) * t12349) * np.sin((phi1 - 4 * phi2)) * ((1 - t12349) ** (-0.1e1 / 0.2e1)) * ((1 + t12349) ** (-0.1e1 / 0.2e1))

        if Bindx == 1584:
            t12362 = np.cos(phi)
            t12363 = t12362 ** 2
            t12364 = t12362 * t12363
            t12367 = t12364 ** 2
            t12373 = t12367 ** 2
            t12365 = t12363 ** 2
            t12366 = t12362 * t12365
            t12371 = t12366 ** 2
            t12369 = t12365 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * (2322 * t12363 - 44142 * t12364 - 31365 * t12365 + 354603 * t12366 + 151164 * t12367 - 322677 * t12369 + 312018 * t12371 - 111435 * t12373 - 27 + (-1213188 * t12367 + 2008091 * t12369 - 1589806 * t12371 + 482885 * t12373 + 1557) * t12362) * np.cos((phi1 - 3 * phi2))

        if Bindx == 1585:
            t12376 = np.cos(phi)
            t12377 = t12376 ** 2
            t12379 = t12377 ** 2
            t12380 = t12376 * t12379
            t12385 = t12380 ** 2
            t12383 = t12379 ** 2
            t12378 = t12376 * t12377
            t12381 = t12378 ** 2
            t12375 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t12375 ** 2 * (-8712 * t12377 - 5610 * t12378 + 120615 * t12379 + 42636 * t12380 + 1311057 * t12383 - 1307504 * t12385 + 99 + (-596904 + 482885 * t12381) * t12381 + (-127908 * t12381 + 163438 * t12383 - 74290 * t12385 + 198) * t12376) * np.sin((phi1 - 2 * phi2)) * ((1 + t12376) ** (-0.1e1 / 0.2e1)) * ((1 - t12376) ** (-0.1e1 / 0.2e1))

        if Bindx == 1586:
            t12388 = np.cos(phi)
            t12389 = t12388 ** 2
            t12390 = t12388 * t12389
            t12393 = t12390 ** 2
            t12399 = t12393 ** 2
            t12391 = t12389 ** 2
            t12392 = t12388 * t12391
            t12397 = t12392 ** 2
            t12395 = t12391 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * (2970 * t12389 - 177210 * t12390 - 42075 * t12391 + 1489455 * t12392 + 213180 * t12393 - 479655 * t12395 + 490314 * t12397 - 185725 * t12399 - 33 + (-5329500 * t12393 + 9220035 * t12395 - 7622154 * t12397 + 2414425 * t12399 + 5973) * t12388) * np.cos(phi1 - phi2)

        if Bindx == 1587:
            t12402 = np.cos(phi)
            t12403 = t12402 ** 2
            t12404 = t12403 ** 2
            t12406 = t12404 ** 2
            t12405 = t12403 * t12404
            t12401 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.91e2) * t12401 ** 2 * (42075 * t12404 + 479655 * t12406 + 33 + (-213180 + 185725 * t12405) * t12405 + (-490314 * t12406 - 2970) * t12403) * np.sin(phi1) * ((1 + t12402) ** (-0.1e1 / 0.2e1)) * ((1 - t12402) ** (-0.1e1 / 0.2e1))

        if Bindx == 1588:
            t12409 = np.cos(phi)
            t12410 = t12409 ** 2
            t12411 = t12409 * t12410
            t12414 = t12411 ** 2
            t12420 = t12414 ** 2
            t12412 = t12410 ** 2
            t12413 = t12409 * t12412
            t12418 = t12413 ** 2
            t12416 = t12412 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * (-2970 * t12410 - 177210 * t12411 + 42075 * t12412 + 1489455 * t12413 - 213180 * t12414 + 479655 * t12416 - 490314 * t12418 + 185725 * t12420 + 33 + (-5329500 * t12414 + 9220035 * t12416 - 7622154 * t12418 + 2414425 * t12420 + 5973) * t12409) * np.cos(phi1 + phi2)

        if Bindx == 1589:
            t12423 = np.cos(phi)
            t12424 = t12423 ** 2
            t12426 = t12424 ** 2
            t12427 = t12423 * t12426
            t12432 = t12427 ** 2
            t12430 = t12426 ** 2
            t12425 = t12423 * t12424
            t12428 = t12425 ** 2
            t12422 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t12422 ** 2 * (-8712 * t12424 + 5610 * t12425 + 120615 * t12426 - 42636 * t12427 + 1311057 * t12430 - 1307504 * t12432 + 99 + (-596904 + 482885 * t12428) * t12428 + (127908 * t12428 - 163438 * t12430 + 74290 * t12432 - 198) * t12423) * np.sin((phi1 + 2 * phi2)) * ((1 + t12423) ** (-0.1e1 / 0.2e1)) * ((1 - t12423) ** (-0.1e1 / 0.2e1))

        if Bindx == 1590:
            t12435 = np.cos(phi)
            t12436 = t12435 ** 2
            t12437 = t12435 * t12436
            t12440 = t12437 ** 2
            t12446 = t12440 ** 2
            t12438 = t12436 ** 2
            t12439 = t12435 * t12438
            t12444 = t12439 ** 2
            t12442 = t12438 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * (-2322 * t12436 - 44142 * t12437 + 31365 * t12438 + 354603 * t12439 - 151164 * t12440 + 322677 * t12442 - 312018 * t12444 + 111435 * t12446 + 27 + (-1213188 * t12440 + 2008091 * t12442 - 1589806 * t12444 + 482885 * t12446 + 1557) * t12435) * np.cos((phi1 + 3 * phi2))

        if Bindx == 1591:
            t12460 = np.sin(phi)
            t12458 = t12460 ** 2
            t12448 = np.cos(phi)
            t12449 = t12448 ** 2
            t12451 = t12449 ** 2
            t12455 = t12451 ** 2
            t12450 = t12448 * t12449
            t12453 = t12450 ** 2
            t12452 = t12448 * t12451
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.187e3) * t12458 ** 2 * (3645 * t12449 - 4560 * t12450 - 43890 * t12451 + 174762 * t12453 - 271377 * t12455 - 45 + (28728 + 142025 * t12452) * t12452 + (-62928 * t12453 + 43700 * t12455 + 180) * t12448) * np.sin((phi1 + 4 * phi2)) * ((1 + t12448) ** (-0.1e1 / 0.2e1)) * ((1 - t12448) ** (-0.1e1 / 0.2e1))

        if Bindx == 1592:
            t12461 = np.cos(phi)
            t12462 = t12461 ** 2
            t12463 = t12461 * t12462
            t12466 = t12463 ** 2
            t12472 = t12466 ** 2
            t12464 = t12462 ** 2
            t12465 = t12461 * t12464
            t12470 = t12465 ** 2
            t12468 = t12464 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.187e3) * (-1950 * t12462 - 20190 * t12463 + 23775 * t12464 + 147351 * t12465 - 102980 * t12466 + 196935 * t12468 - 170430 * t12470 + 54625 * t12472 + 25 + (-459268 * t12466 + 695343 * t12468 - 506046 * t12470 + 142025 * t12472 + 785) * t12461) * np.cos((phi1 + 5 * phi2))

        if Bindx == 1593:
            t12485 = np.sin(phi)
            t12482 = t12485 ** 2
            t12483 = t12485 * t12482
            t12474 = np.cos(phi)
            t12475 = t12474 ** 2
            t12476 = t12474 * t12475
            t12479 = t12476 ** 2
            t12477 = t12475 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.3553e4) * t12483 ** 2 * (-350 * t12475 + 630 * t12476 - 9338 * t12479 + 5 + (3360 + 7475 * t12477) * t12477 + (-2898 * t12477 + 3450 * t12479 - 30) * t12474) * np.sin((phi1 + 6 * phi2)) * ((1 + t12474) ** (-0.1e1 / 0.2e1)) * ((1 - t12474) ** (-0.1e1 / 0.2e1))

        if Bindx == 1594:
            t12486 = np.cos(phi)
            t12487 = t12486 ** 2
            t12488 = t12486 * t12487
            t12491 = t12488 ** 2
            t12497 = t12491 ** 2
            t12489 = t12487 ** 2
            t12490 = t12486 * t12489
            t12495 = t12490 ** 2
            t12493 = t12489 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.124355e6) * (-66 * t12487 - 414 * t12488 + 675 * t12489 + 2577 * t12490 - 2444 * t12491 + 3927 * t12493 - 2898 * t12495 + 805 * t12497 + 1 + (-6932 * t12491 + 9189 * t12493 - 5934 * t12495 + 1495 * t12497 + 19) * t12486) * np.cos((phi1 + 7 * phi2))

        if Bindx == 1595:
            t12508 = np.sin(phi)
            t12505 = t12508 ** 2
            t12506 = t12505 ** 2
            t12499 = np.cos(phi)
            t12500 = t12499 ** 2
            t12502 = t12500 ** 2
            t12501 = t12499 * t12500
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17765e5) * t12506 ** 2 * (165 * t12500 - 1081 * t12502 - 3 + (-368 + 1495 * t12501) * t12501 + (920 * t12502 + 24) * t12499) * np.sin((phi1 + 8 * phi2)) * ((1 + t12499) ** (-0.1e1 / 0.2e1)) * ((1 - t12499) ** (-0.1e1 / 0.2e1))

        if Bindx == 1596:
            t12509 = np.cos(phi)
            t12510 = t12509 ** 2
            t12511 = t12509 * t12510
            t12514 = t12511 ** 2
            t12520 = t12514 ** 2
            t12512 = t12510 ** 2
            t12513 = t12509 * t12512
            t12518 = t12513 ** 2
            t12516 = t12512 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.323e3) * (-1350 * t12510 - 5030 * t12511 + 10305 * t12512 + 24565 * t12513 - 28260 * t12514 + 36045 * t12516 - 21942 * t12518 + 5175 * t12520 + 27 + (-54020 * t12514 + 60425 * t12516 - 33718 * t12518 + 7475 * t12520 + 303) * t12509) * np.cos((phi1 + 9 * phi2))

        if Bindx == 1597:
            t12530 = np.sin(phi)
            t12526 = t12530 ** 2
            t12528 = t12530 * t12526 ** 2
            t12522 = np.cos(phi)
            t12523 = t12522 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.7429e4) * t12528 ** 2 * (-30 * t12522 + 3 + (250 * t12522 - 108 + 325 * t12523) * t12523) * np.sin((phi1 + 10 * phi2)) * ((1 + t12522) ** (-0.1e1 / 0.2e1)) * ((1 - t12522) ** (-0.1e1 / 0.2e1))

        if Bindx == 1598:
            t12531 = np.cos(phi)
            t12532 = t12531 ** 2
            t12533 = t12531 * t12532
            t12536 = t12533 ** 2
            t12542 = t12536 ** 2
            t12534 = t12532 ** 2
            t12535 = t12531 * t12534
            t12540 = t12535 ** 2
            t12538 = t12534 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (-330 * t12532 - 630 * t12533 + 1485 * t12534 + 2235 * t12535 - 2860 * t12536 + 2805 * t12538 - 1386 * t12540 + 275 * t12542 + 11 + (-3860 * t12536 + 3555 * t12538 - 1686 * t12540 + 325 * t12542 + 61) * t12531) * np.cos((phi1 + 11 * phi2))

        if Bindx == 1599:
            t12549 = np.sin(phi)
            t12545 = t12549 ** 2
            t12546 = t12549 * t12545
            t12547 = t12546 ** 2
            t12544 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.7429e4) * t12547 ** 2 * (-1 + (12 + 13 * t12544) * t12544) * np.sin((phi1 + 12 * phi2)) * ((1 + t12544) ** (-0.1e1 / 0.2e1)) * ((1 - t12544) ** (-0.1e1 / 0.2e1))

        if Bindx == 1600:
            t12550 = np.cos(phi)
            t12551 = t12550 ** 2
            t12553 = t12551 ** 2
            t12554 = t12550 * t12553
            t12552 = t12550 * t12551
            t12555 = t12552 ** 2
            t12566 = 15 * t12553 ** 2 - 6 * t12554 ** 2 + 1 + (-20 + t12555) * t12555
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.96577e5) * np.cos((phi1 + 13 * phi2)) * (t12566 * t12550 - 6 * t12551 - 6 * t12552 + 15 * t12553 + 15 * t12554 + t12566)

        if Bindx == 1601:
            t12567 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * ((1 - t12567) ** (0.15e2 / 0.2e1)) * ((1 + t12567) ** (0.11e2 / 0.2e1)) * np.sin((2 * phi1 - 13 * phi2))

        if Bindx == 1602:
            t12568 = np.cos(phi)
            t12569 = t12568 ** 2
            t12570 = t12568 * t12569
            t12573 = t12570 ** 2
            t12579 = t12573 ** 2
            t12571 = t12569 ** 2
            t12572 = t12568 * t12571
            t12577 = t12572 ** 2
            t12575 = t12571 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.37145e5) * (34 * t12569 + 32 * t12570 - 140 * t12571 - 25 * t12572 + 260 * t12573 - 250 * t12575 + 122 * t12577 - 24 * t12579 - 2 + (-40 * t12573 + 85 * t12575 - 56 * t12577 + 13 * t12579 - 9) * t12568) * np.cos((2 * phi1 - 12 * phi2))

        if Bindx == 1603:
            t12589 = np.sin(phi)
            t12585 = t12589 ** 2
            t12587 = t12589 * t12585 ** 2
            t12581 = np.cos(phi)
            t12582 = t12581 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t12587 ** 2 * (22 * t12581 - 1 + (-110 * t12581 + 24 + 65 * t12582) * t12582) * np.sin((2 * phi1 - 11 * phi2)) * ((1 + t12581) ** (-0.1e1 / 0.2e1)) * ((1 - t12581) ** (-0.1e1 / 0.2e1))

        if Bindx == 1604:
            t12590 = np.cos(phi)
            t12591 = t12590 ** 2
            t12592 = t12590 * t12591
            t12595 = t12592 ** 2
            t12601 = t12595 ** 2
            t12593 = t12591 ** 2
            t12594 = t12590 * t12593
            t12599 = t12594 ** 2
            t12597 = t12593 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.37145e5) * (39 * t12591 + 6 * t12592 - 246 * t12593 + 51 * t12594 + 614 * t12595 - 741 * t12597 + 435 * t12599 - 100 * t12601 - 1 + (-244 * t12595 + 381 * t12597 - 258 * t12599 + 65 * t12601 - 1) * t12590) * np.cos((2 * phi1 - 10 * phi2))

        if Bindx == 1605:
            t12612 = np.sin(phi)
            t12609 = t12612 ** 2
            t12610 = t12609 ** 2
            t12603 = np.cos(phi)
            t12604 = t12603 ** 2
            t12606 = t12604 ** 2
            t12605 = t12603 * t12604
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1615e4) * t12610 ** 2 * (45 * t12604 - 483 * t12606 - 1 + (1104 + 1495 * t12605) * t12605 + (-2070 * t12606 - 90) * t12603) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t12603) ** (-0.1e1 / 0.2e1)) * ((1 - t12603) ** (-0.1e1 / 0.2e1))

        if Bindx == 1606:
            t12613 = np.cos(phi)
            t12614 = t12613 ** 2
            t12615 = t12613 * t12614
            t12618 = t12615 ** 2
            t12624 = t12618 ** 2
            t12616 = t12614 ** 2
            t12617 = t12613 * t12616
            t12622 = t12617 ** 2
            t12620 = t12616 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.3553e4) * (228 * t12614 - 264 * t12615 - 2040 * t12616 + 1749 * t12617 + 6632 * t12618 - 9876 * t12620 + 6900 * t12622 - 1840 * t12624 - 4 + (-5288 * t12618 + 7815 * t12620 - 5520 * t12622 + 1495 * t12624 + 13) * t12613) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 1607:
            t12638 = np.sin(phi)
            t12626 = np.cos(phi)
            t12627 = t12626 ** 2
            t12628 = t12626 * t12627
            t12637 = -1610 * t12628 ** 2
            t12634 = t12638 ** 2
            t12635 = t12638 * t12634
            t12629 = t12627 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.24871e5) * t12635 ** 2 * (-62 * t12627 - 406 * t12628 + t12637 + 1 + (560 + 1495 * t12629) * t12629 + (1610 * t12629 + t12637 + 22) * t12626) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t12626) ** (-0.1e1 / 0.2e1)) * ((1 - t12626) ** (-0.1e1 / 0.2e1))

        if Bindx == 1608:
            t12639 = np.cos(phi)
            t12640 = t12639 ** 2
            t12641 = t12639 * t12640
            t12644 = t12641 ** 2
            t12650 = t12644 ** 2
            t12642 = t12640 ** 2
            t12643 = t12639 * t12642
            t12648 = t12643 ** 2
            t12646 = t12642 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.17765e5) * (71 * t12640 - 214 * t12641 - 790 * t12642 + 1493 * t12643 + 3142 * t12644 - 5573 * t12646 + 4531 * t12648 - 1380 * t12650 - 1 + (-4588 * t12644 + 7003 * t12646 - 5198 * t12648 + 1495 * t12650 + 9) * t12639) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 1609:
            t12664 = np.sin(phi)
            t12662 = t12664 ** 2
            t12652 = np.cos(phi)
            t12653 = t12652 ** 2
            t12655 = t12653 ** 2
            t12659 = t12655 ** 2
            t12654 = t12652 * t12653
            t12657 = t12654 ** 2
            t12656 = t12652 * t12655
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.935e3) * t12662 ** 2 * (825 * t12653 + 3040 * t12654 - 9310 * t12655 + 35378 * t12657 - 53751 * t12659 - 11 + (-17556 + 28405 * t12656) * t12656 + (34960 * t12657 - 21850 * t12659 - 130) * t12652) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t12652) ** (-0.1e1 / 0.2e1)) * ((1 - t12652) ** (-0.1e1 / 0.2e1))

        if Bindx == 1610:
            t12665 = np.cos(phi)
            t12666 = t12665 ** 2
            t12667 = t12665 * t12666
            t12670 = t12667 ** 2
            t12676 = t12670 ** 2
            t12668 = t12666 ** 2
            t12669 = t12665 * t12668
            t12674 = t12669 ** 2
            t12672 = t12668 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.935e3) * (486 * t12666 - 2976 * t12667 - 6180 * t12668 + 22815 * t12669 + 28044 * t12670 - 56430 * t12672 + 51566 * t12674 - 17480 * t12676 - 6 + (-75240 * t12670 + 121277 * t12672 - 94392 * t12674 + 28405 * t12676 + 111) * t12665) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 1611:
            t12679 = np.cos(phi)
            t12680 = t12679 ** 2
            t12682 = t12680 ** 2
            t12683 = t12679 * t12682
            t12688 = t12683 ** 2
            t12686 = t12682 ** 2
            t12681 = t12679 * t12680
            t12684 = t12681 ** 2
            t12678 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t12678 ** 2 * (-10332 * t12680 - 20910 * t12681 + 136935 * t12682 + 151164 * t12683 + 1380825 * t12686 - 1337220 * t12688 + 123 + (-651168 + 482885 * t12684) * t12684 + (-430236 * t12684 + 520030 * t12686 - 222870 * t12688 + 774) * t12679) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t12679) ** (-0.1e1 / 0.2e1)) * ((1 - t12679) ** (-0.1e1 / 0.2e1))

        if Bindx == 1612:
            t12691 = np.cos(phi)
            t12692 = t12691 ** 2
            t12693 = t12691 * t12692
            t12696 = t12693 ** 2
            t12702 = t12696 ** 2
            t12694 = t12692 ** 2
            t12695 = t12691 * t12694
            t12700 = t12695 ** 2
            t12698 = t12694 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.2e1) * (2871 * t12692 - 40722 * t12693 - 39270 * t12694 + 331551 * t12695 + 191862 * t12696 - 415701 * t12698 + 408595 * t12700 - 148580 * t12702 - 33 + (-1151172 * t12696 + 1936385 * t12698 - 1560090 * t12700 + 482885 * t12702 + 1419) * t12691) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 1613:
            t12705 = np.cos(phi)
            t12706 = t12705 ** 2
            t12708 = t12706 ** 2
            t12709 = t12705 * t12708
            t12714 = t12709 ** 2
            t12712 = t12708 ** 2
            t12707 = t12705 * t12706
            t12710 = t12707 ** 2
            t12704 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t12704 ** 2 * (-8712 * t12706 - 5610 * t12707 + 120615 * t12708 + 42636 * t12709 + 1311057 * t12712 - 1307504 * t12714 + 99 + (-596904 + 482885 * t12710) * t12710 + (-127908 * t12710 + 163438 * t12712 - 74290 * t12714 + 198) * t12705) * np.sin((2 * phi1 - phi2)) * ((1 + t12705) ** (-0.1e1 / 0.2e1)) * ((1 - t12705) ** (-0.1e1 / 0.2e1))

        if Bindx == 1614:
            t12717 = np.cos(phi)
            t12718 = t12717 ** 2
            t12719 = t12718 ** 2
            t12721 = t12719 ** 2
            t12720 = t12718 * t12719
            tfunc[..., c] = -0.27e2 / 0.512e3 * t12717 * np.sqrt(0.455e3) * (24123 * t12719 + 145673 * t12721 + 99 + (-85272 + 37145 * t12720) * t12720 + (-118864 * t12721 - 2904) * t12718) * np.cos((2 * phi1))

        if Bindx == 1615:
            t12725 = np.cos(phi)
            t12726 = t12725 ** 2
            t12728 = t12726 ** 2
            t12729 = t12725 * t12728
            t12734 = t12729 ** 2
            t12732 = t12728 ** 2
            t12727 = t12725 * t12726
            t12730 = t12727 ** 2
            t12724 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t12724 ** 2 * (-8712 * t12726 + 5610 * t12727 + 120615 * t12728 - 42636 * t12729 + 1311057 * t12732 - 1307504 * t12734 + 99 + (-596904 + 482885 * t12730) * t12730 + (127908 * t12730 - 163438 * t12732 + 74290 * t12734 - 198) * t12725) * np.sin((2 * phi1 + phi2)) * ((1 + t12725) ** (-0.1e1 / 0.2e1)) * ((1 - t12725) ** (-0.1e1 / 0.2e1))

        if Bindx == 1616:
            t12737 = np.cos(phi)
            t12738 = t12737 ** 2
            t12739 = t12737 * t12738
            t12742 = t12739 ** 2
            t12748 = t12742 ** 2
            t12740 = t12738 ** 2
            t12741 = t12737 * t12740
            t12746 = t12741 ** 2
            t12744 = t12740 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.2e1) * (-2871 * t12738 - 40722 * t12739 + 39270 * t12740 + 331551 * t12741 - 191862 * t12742 + 415701 * t12744 - 408595 * t12746 + 148580 * t12748 + 33 + (-1151172 * t12742 + 1936385 * t12744 - 1560090 * t12746 + 482885 * t12748 + 1419) * t12737) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 1617:
            t12751 = np.cos(phi)
            t12752 = t12751 ** 2
            t12754 = t12752 ** 2
            t12755 = t12751 * t12754
            t12760 = t12755 ** 2
            t12758 = t12754 ** 2
            t12753 = t12751 * t12752
            t12756 = t12753 ** 2
            t12750 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t12750 ** 2 * (-10332 * t12752 + 20910 * t12753 + 136935 * t12754 - 151164 * t12755 + 1380825 * t12758 - 1337220 * t12760 + 123 + (-651168 + 482885 * t12756) * t12756 + (430236 * t12756 - 520030 * t12758 + 222870 * t12760 - 774) * t12751) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t12751) ** (-0.1e1 / 0.2e1)) * ((1 - t12751) ** (-0.1e1 / 0.2e1))

        if Bindx == 1618:
            t12763 = np.cos(phi)
            t12764 = t12763 ** 2
            t12765 = t12763 * t12764
            t12768 = t12765 ** 2
            t12774 = t12768 ** 2
            t12766 = t12764 ** 2
            t12767 = t12763 * t12766
            t12772 = t12767 ** 2
            t12770 = t12766 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.935e3) * (-486 * t12764 - 2976 * t12765 + 6180 * t12766 + 22815 * t12767 - 28044 * t12768 + 56430 * t12770 - 51566 * t12772 + 17480 * t12774 + 6 + (-75240 * t12768 + 121277 * t12770 - 94392 * t12772 + 28405 * t12774 + 111) * t12763) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 1619:
            t12788 = np.sin(phi)
            t12786 = t12788 ** 2
            t12776 = np.cos(phi)
            t12777 = t12776 ** 2
            t12779 = t12777 ** 2
            t12783 = t12779 ** 2
            t12778 = t12776 * t12777
            t12781 = t12778 ** 2
            t12780 = t12776 * t12779
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.935e3) * t12786 ** 2 * (825 * t12777 - 3040 * t12778 - 9310 * t12779 + 35378 * t12781 - 53751 * t12783 - 11 + (17556 + 28405 * t12780) * t12780 + (-34960 * t12781 + 21850 * t12783 + 130) * t12776) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t12776) ** (-0.1e1 / 0.2e1)) * ((1 - t12776) ** (-0.1e1 / 0.2e1))

        if Bindx == 1620:
            t12789 = np.cos(phi)
            t12790 = t12789 ** 2
            t12791 = t12789 * t12790
            t12794 = t12791 ** 2
            t12800 = t12794 ** 2
            t12792 = t12790 ** 2
            t12793 = t12789 * t12792
            t12798 = t12793 ** 2
            t12796 = t12792 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.17765e5) * (-71 * t12790 - 214 * t12791 + 790 * t12792 + 1493 * t12793 - 3142 * t12794 + 5573 * t12796 - 4531 * t12798 + 1380 * t12800 + 1 + (-4588 * t12794 + 7003 * t12796 - 5198 * t12798 + 1495 * t12800 + 9) * t12789) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 1621:
            t12813 = np.sin(phi)
            t12810 = t12813 ** 2
            t12811 = t12813 * t12810
            t12802 = np.cos(phi)
            t12803 = t12802 ** 2
            t12804 = t12802 * t12803
            t12807 = t12804 ** 2
            t12805 = t12803 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.24871e5) * t12811 ** 2 * (-62 * t12803 + 406 * t12804 - 1610 * t12807 + 1 + (560 + 1495 * t12805) * t12805 + (-1610 * t12805 + 1610 * t12807 - 22) * t12802) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t12802) ** (-0.1e1 / 0.2e1)) * ((1 - t12802) ** (-0.1e1 / 0.2e1))

        if Bindx == 1622:
            t12814 = np.cos(phi)
            t12815 = t12814 ** 2
            t12816 = t12814 * t12815
            t12819 = t12816 ** 2
            t12825 = t12819 ** 2
            t12817 = t12815 ** 2
            t12818 = t12814 * t12817
            t12823 = t12818 ** 2
            t12821 = t12817 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.3553e4) * (-228 * t12815 - 264 * t12816 + 2040 * t12817 + 1749 * t12818 - 6632 * t12819 + 9876 * t12821 - 6900 * t12823 + 1840 * t12825 + 4 + (-5288 * t12819 + 7815 * t12821 - 5520 * t12823 + 1495 * t12825 + 13) * t12814) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 1623:
            t12836 = np.sin(phi)
            t12833 = t12836 ** 2
            t12834 = t12833 ** 2
            t12827 = np.cos(phi)
            t12828 = t12827 ** 2
            t12830 = t12828 ** 2
            t12829 = t12827 * t12828
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.1615e4) * t12834 ** 2 * (45 * t12828 - 483 * t12830 - 1 + (-1104 + 1495 * t12829) * t12829 + (2070 * t12830 + 90) * t12827) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t12827) ** (-0.1e1 / 0.2e1)) * ((1 - t12827) ** (-0.1e1 / 0.2e1))

        if Bindx == 1624:
            t12837 = np.cos(phi)
            t12838 = t12837 ** 2
            t12839 = t12837 * t12838
            t12842 = t12839 ** 2
            t12848 = t12842 ** 2
            t12840 = t12838 ** 2
            t12841 = t12837 * t12840
            t12846 = t12841 ** 2
            t12844 = t12840 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.37145e5) * (-39 * t12838 + 6 * t12839 + 246 * t12840 + 51 * t12841 - 614 * t12842 + 741 * t12844 - 435 * t12846 + 100 * t12848 + 1 + (-244 * t12842 + 381 * t12844 - 258 * t12846 + 65 * t12848 - 1) * t12837) * np.cos((2 * phi1 + 10 * phi2))

        if Bindx == 1625:
            t12858 = np.sin(phi)
            t12854 = t12858 ** 2
            t12856 = t12858 * t12854 ** 2
            t12850 = np.cos(phi)
            t12851 = t12850 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t12856 ** 2 * (-22 * t12850 - 1 + (110 * t12850 + 24 + 65 * t12851) * t12851) * np.sin((2 * phi1 + 11 * phi2)) * ((1 + t12850) ** (-0.1e1 / 0.2e1)) * ((1 - t12850) ** (-0.1e1 / 0.2e1))

        if Bindx == 1626:
            t12859 = np.cos(phi)
            t12860 = t12859 ** 2
            t12861 = t12859 * t12860
            t12864 = t12861 ** 2
            t12870 = t12864 ** 2
            t12862 = t12860 ** 2
            t12863 = t12859 * t12862
            t12868 = t12863 ** 2
            t12866 = t12862 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.37145e5) * (-34 * t12860 + 32 * t12861 + 140 * t12862 - 25 * t12863 - 260 * t12864 + 250 * t12866 - 122 * t12868 + 24 * t12870 + 2 + (-40 * t12864 + 85 * t12866 - 56 * t12868 + 13 * t12870 - 9) * t12859) * np.cos((2 * phi1 + 12 * phi2))

        if Bindx == 1627:
            t12872 = np.cos(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * ((1 - t12872) ** (0.11e2 / 0.2e1)) * ((1 + t12872) ** (0.15e2 / 0.2e1)) * np.sin((2 * phi1 + 13 * phi2))

        if Bindx == 1628:
            t12873 = np.cos(phi)
            t12874 = t12873 ** 2
            t12875 = t12873 * t12874
            t12878 = t12875 ** 2
            t12886 = 20 * t12878
            t12884 = t12878 ** 2
            t12876 = t12874 ** 2
            t12877 = t12873 * t12876
            t12882 = t12877 ** 2
            t12880 = t12876 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5311735e7) * np.cos((3 * phi1 - 13 * phi2)) * (-2 * t12874 + 14 * t12875 - 5 * t12876 - 25 * t12877 - 25 * t12880 + 14 * t12882 - 3 * t12884 + t12886 + 1 + (-5 * t12880 - 2 * t12882 + t12884 + t12886 - 3) * t12873)

        if Bindx == 1629:
            t12895 = np.sin(phi)
            t12891 = t12895 ** 2
            t12893 = t12895 * t12891 ** 2
            t12887 = np.cos(phi)
            t12888 = t12887 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.408595e6) * t12893 ** 2 * (-4 * t12887 - 3 + (-36 * t12887 + 30 + 13 * t12888) * t12888) * np.sin((3 * phi1 - 12 * phi2)) * ((1 + t12887) ** (-0.1e1 / 0.2e1)) * ((1 - t12887) ** (-0.1e1 / 0.2e1))

        if Bindx == 1630:
            t12896 = np.cos(phi)
            t12897 = t12896 ** 2
            t12898 = t12896 * t12897
            t12901 = t12898 ** 2
            t12907 = t12901 ** 2
            t12899 = t12897 ** 2
            t12900 = t12896 * t12899
            t12905 = t12900 ** 2
            t12903 = t12899 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.408595e6) * (26 * t12897 + 214 * t12898 - 259 * t12899 - 521 * t12900 + 796 * t12901 - 1079 * t12903 + 682 * t12905 - 165 * t12907 - 1 + (484 * t12901 - 61 * t12903 - 154 * t12905 + 65 * t12907 - 27) * t12896) * np.cos((3 * phi1 - 11 * phi2))

        if Bindx == 1631:
            t12918 = np.sin(phi)
            t12915 = t12918 ** 2
            t12916 = t12915 ** 2
            t12909 = np.cos(phi)
            t12910 = t12909 ** 2
            t12912 = t12910 ** 2
            t12911 = t12909 * t12910
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.408595e6) * t12916 ** 2 * (-33 * t12910 + 63 * t12912 + 1 + (60 + 65 * t12911) * t12911 + (-150 * t12912 - 6) * t12909) * np.sin((3 * phi1 - 10 * phi2)) * ((1 + t12909) ** (-0.1e1 / 0.2e1)) * ((1 - t12909) ** (-0.1e1 / 0.2e1))

        if Bindx == 1632:
            t12919 = np.cos(phi)
            t12920 = t12919 ** 2
            t12921 = t12919 * t12920
            t12924 = t12921 ** 2
            t12930 = t12924 ** 2
            t12922 = t12920 ** 2
            t12923 = t12919 * t12922
            t12928 = t12923 ** 2
            t12926 = t12922 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.17765e5) * (414 * t12920 + 894 * t12921 - 3327 * t12922 - 2775 * t12923 + 10692 * t12924 - 16119 * t12926 + 11454 * t12928 - 3105 * t12930 - 9 + (2116 * t12924 + 2337 * t12926 - 4002 * t12928 + 1495 * t12930 - 65) * t12919) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 1633:
            t12943 = np.sin(phi)
            t12940 = t12943 ** 2
            t12941 = t12943 * t12940
            t12932 = np.cos(phi)
            t12933 = t12932 ** 2
            t12934 = t12932 * t12933
            t12937 = t12934 ** 2
            t12935 = t12933 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * t12941 ** 2 * (988 * t12933 - 8616 * t12934 - 5060 * t12937 - 19 + (-4290 + 16445 * t12935) * t12935 + (30360 * t12935 - 30360 * t12937 + 552) * t12932) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t12932) ** (-0.1e1 / 0.2e1)) * ((1 - t12932) ** (-0.1e1 / 0.2e1))

        if Bindx == 1634:
            t12944 = np.cos(phi)
            t12945 = t12944 ** 2
            t12946 = t12944 * t12945
            t12949 = t12946 ** 2
            t12955 = t12949 ** 2
            t12947 = t12945 ** 2
            t12948 = t12944 * t12947
            t12953 = t12948 ** 2
            t12951 = t12947 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2261e4) * (1798 * t12945 + 346 * t12946 - 17915 * t12947 + 1699 * t12948 + 65972 * t12949 - 111811 * t12951 + 88550 * t12953 - 26565 * t12955 - 29 + (-19508 * t12949 + 49115 * t12951 - 48070 * t12953 + 16445 * t12955 - 27) * t12944) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 1635:
            t12969 = np.sin(phi)
            t12967 = t12969 ** 2
            t12957 = np.cos(phi)
            t12958 = t12957 ** 2
            t12960 = t12958 ** 2
            t12964 = t12960 ** 2
            t12959 = t12957 * t12958
            t12962 = t12959 ** 2
            t12961 = t12957 * t12960
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1615e4) * t12967 ** 2 * (201 * t12958 + 4056 * t12959 - 2534 * t12960 + 12474 * t12962 - 25047 * t12964 - 3 + (-21084 + 16445 * t12961) * t12961 + (38456 * t12962 - 22770 * t12964 - 194) * t12957) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t12957) ** (-0.1e1 / 0.2e1)) * ((1 - t12957) ** (-0.1e1 / 0.2e1))

        if Bindx == 1636:
            t12970 = np.cos(phi)
            t12971 = t12970 ** 2
            t12972 = t12970 * t12971
            t12975 = t12972 ** 2
            t12981 = t12975 ** 2
            t12973 = t12971 ** 2
            t12974 = t12970 * t12973
            t12979 = t12974 ** 2
            t12977 = t12973 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (13690 * t12971 - 25526 * t12972 - 159995 * t12973 + 195553 * t12974 + 673436 * t12975 - 1272031 * t12977 + 1105610 * t12979 - 360525 * t12981 - 185 + (-673892 * t12975 + 1161413 * t12977 - 971014 * t12979 + 312455 * t12981 + 1011) * t12970) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 1637:
            t12984 = np.cos(phi)
            t12985 = t12984 ** 2
            t12987 = t12985 ** 2
            t12988 = t12984 * t12987
            t12993 = t12988 ** 2
            t12991 = t12987 ** 2
            t12986 = t12984 * t12985
            t12989 = t12986 ** 2
            t12983 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.85e2) * t12983 ** 2 * (-6786 * t12985 - 35220 * t12986 + 85545 * t12987 + 236664 * t12988 + 844569 * t12991 - 836418 * t12993 + 87 + (-397404 + 312455 * t12989) * t12989 + (-627912 * t12989 + 711436 * t12991 - 288420 * t12993 + 1404) * t12984) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t12984) ** (-0.1e1 / 0.2e1)) * ((1 - t12984) ** (-0.1e1 / 0.2e1))

        if Bindx == 1638:
            t12996 = np.cos(phi)
            t12997 = t12996 ** 2
            t12998 = t12996 * t12997
            t13001 = t12998 ** 2
            t13007 = t13001 ** 2
            t12999 = t12997 ** 2
            t13000 = t12996 * t12999
            t13005 = t13000 ** 2
            t13003 = t12999 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * (93726 * t12997 - 495342 * t12998 - 1208445 * t12999 + 3864321 * t13000 + 5569812 * t13001 - 11404161 * t13003 + 10623470 * t13005 - 3677355 * t13007 - 1143 + (-13011732 * t13001 + 21477885 * t13003 - 17160990 * t13005 + 5311735 * t13007 + 18219) * t12996) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 1639:
            t13010 = np.cos(phi)
            t13011 = t13010 ** 2
            t13013 = t13011 ** 2
            t13014 = t13010 * t13013
            t13019 = t13014 ** 2
            t13017 = t13013 ** 2
            t13012 = t13010 * t13011
            t13015 = t13012 ** 2
            t13009 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t13009 ** 2 * (-10332 * t13011 - 20910 * t13012 + 136935 * t13013 + 151164 * t13014 + 1380825 * t13017 - 1337220 * t13019 + 123 + (-651168 + 482885 * t13015) * t13015 + (-430236 * t13015 + 520030 * t13017 - 222870 * t13019 + 774) * t13010) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t13010) ** (-0.1e1 / 0.2e1)) * ((1 - t13010) ** (-0.1e1 / 0.2e1))

        if Bindx == 1640:
            t13022 = np.cos(phi)
            t13023 = t13022 ** 2
            t13024 = t13022 * t13023
            t13027 = t13024 ** 2
            t13033 = t13027 ** 2
            t13025 = t13023 ** 2
            t13026 = t13022 * t13025
            t13031 = t13026 ** 2
            t13029 = t13025 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * (2322 * t13023 - 44142 * t13024 - 31365 * t13025 + 354603 * t13026 + 151164 * t13027 - 322677 * t13029 + 312018 * t13031 - 111435 * t13033 - 27 + (-1213188 * t13027 + 2008091 * t13029 - 1589806 * t13031 + 482885 * t13033 + 1557) * t13022) * np.cos((3 * phi1 - phi2))

        if Bindx == 1641:
            t13043 = np.sin(phi)
            t13041 = t13043 ** 2
            t13035 = np.cos(phi)
            t13036 = t13035 ** 2
            t13037 = t13036 ** 2
            t13039 = t13037 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.5005e4) * t13041 ** 2 * (-9690 * t13037 - 66861 * t13039 - 9 + (40698 * t13037 + 37145 * t13039 + 765) * t13036) * np.sin((3 * phi1)) * ((1 + t13035) ** (-0.1e1 / 0.2e1)) * ((1 - t13035) ** (-0.1e1 / 0.2e1))

        if Bindx == 1642:
            t13044 = np.cos(phi)
            t13045 = t13044 ** 2
            t13046 = t13044 * t13045
            t13049 = t13046 ** 2
            t13055 = t13049 ** 2
            t13047 = t13045 ** 2
            t13048 = t13044 * t13047
            t13053 = t13048 ** 2
            t13051 = t13047 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * (-2322 * t13045 - 44142 * t13046 + 31365 * t13047 + 354603 * t13048 - 151164 * t13049 + 322677 * t13051 - 312018 * t13053 + 111435 * t13055 + 27 + (-1213188 * t13049 + 2008091 * t13051 - 1589806 * t13053 + 482885 * t13055 + 1557) * t13044) * np.cos((3 * phi1 + phi2))

        if Bindx == 1643:
            t13058 = np.cos(phi)
            t13059 = t13058 ** 2
            t13061 = t13059 ** 2
            t13062 = t13058 * t13061
            t13067 = t13062 ** 2
            t13065 = t13061 ** 2
            t13060 = t13058 * t13059
            t13063 = t13060 ** 2
            t13057 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t13057 ** 2 * (-10332 * t13059 + 20910 * t13060 + 136935 * t13061 - 151164 * t13062 + 1380825 * t13065 - 1337220 * t13067 + 123 + (-651168 + 482885 * t13063) * t13063 + (430236 * t13063 - 520030 * t13065 + 222870 * t13067 - 774) * t13058) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t13058) ** (-0.1e1 / 0.2e1)) * ((1 - t13058) ** (-0.1e1 / 0.2e1))

        if Bindx == 1644:
            t13070 = np.cos(phi)
            t13071 = t13070 ** 2
            t13072 = t13070 * t13071
            t13075 = t13072 ** 2
            t13081 = t13075 ** 2
            t13073 = t13071 ** 2
            t13074 = t13070 * t13073
            t13079 = t13074 ** 2
            t13077 = t13073 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * (-93726 * t13071 - 495342 * t13072 + 1208445 * t13073 + 3864321 * t13074 - 5569812 * t13075 + 11404161 * t13077 - 10623470 * t13079 + 3677355 * t13081 + 1143 + (-13011732 * t13075 + 21477885 * t13077 - 17160990 * t13079 + 5311735 * t13081 + 18219) * t13070) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 1645:
            t13084 = np.cos(phi)
            t13085 = t13084 ** 2
            t13087 = t13085 ** 2
            t13088 = t13084 * t13087
            t13093 = t13088 ** 2
            t13091 = t13087 ** 2
            t13086 = t13084 * t13085
            t13089 = t13086 ** 2
            t13083 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.85e2) * t13083 ** 2 * (-6786 * t13085 + 35220 * t13086 + 85545 * t13087 - 236664 * t13088 + 844569 * t13091 - 836418 * t13093 + 87 + (-397404 + 312455 * t13089) * t13089 + (627912 * t13089 - 711436 * t13091 + 288420 * t13093 - 1404) * t13084) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t13084) ** (-0.1e1 / 0.2e1)) * ((1 - t13084) ** (-0.1e1 / 0.2e1))

        if Bindx == 1646:
            t13096 = np.cos(phi)
            t13097 = t13096 ** 2
            t13098 = t13096 * t13097
            t13101 = t13098 ** 2
            t13107 = t13101 ** 2
            t13099 = t13097 ** 2
            t13100 = t13096 * t13099
            t13105 = t13100 ** 2
            t13103 = t13099 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-13690 * t13097 - 25526 * t13098 + 159995 * t13099 + 195553 * t13100 - 673436 * t13101 + 1272031 * t13103 - 1105610 * t13105 + 360525 * t13107 + 185 + (-673892 * t13101 + 1161413 * t13103 - 971014 * t13105 + 312455 * t13107 + 1011) * t13096) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 1647:
            t13121 = np.sin(phi)
            t13119 = t13121 ** 2
            t13109 = np.cos(phi)
            t13110 = t13109 ** 2
            t13112 = t13110 ** 2
            t13116 = t13112 ** 2
            t13111 = t13109 * t13110
            t13114 = t13111 ** 2
            t13113 = t13109 * t13112
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1615e4) * t13119 ** 2 * (201 * t13110 - 4056 * t13111 - 2534 * t13112 + 12474 * t13114 - 25047 * t13116 - 3 + (21084 + 16445 * t13113) * t13113 + (-38456 * t13114 + 22770 * t13116 + 194) * t13109) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t13109) ** (-0.1e1 / 0.2e1)) * ((1 - t13109) ** (-0.1e1 / 0.2e1))

        if Bindx == 1648:
            t13122 = np.cos(phi)
            t13123 = t13122 ** 2
            t13124 = t13122 * t13123
            t13127 = t13124 ** 2
            t13133 = t13127 ** 2
            t13125 = t13123 ** 2
            t13126 = t13122 * t13125
            t13131 = t13126 ** 2
            t13129 = t13125 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2261e4) * (-1798 * t13123 + 346 * t13124 + 17915 * t13125 + 1699 * t13126 - 65972 * t13127 + 111811 * t13129 - 88550 * t13131 + 26565 * t13133 + 29 + (-19508 * t13127 + 49115 * t13129 - 48070 * t13131 + 16445 * t13133 - 27) * t13122) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 1649:
            t13146 = np.sin(phi)
            t13143 = t13146 ** 2
            t13144 = t13146 * t13143
            t13135 = np.cos(phi)
            t13136 = t13135 ** 2
            t13137 = t13135 * t13136
            t13140 = t13137 ** 2
            t13138 = t13136 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * t13144 ** 2 * (988 * t13136 + 8616 * t13137 - 5060 * t13140 - 19 + (-4290 + 16445 * t13138) * t13138 + (-30360 * t13138 + 30360 * t13140 - 552) * t13135) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t13135) ** (-0.1e1 / 0.2e1)) * ((1 - t13135) ** (-0.1e1 / 0.2e1))

        if Bindx == 1650:
            t13147 = np.cos(phi)
            t13148 = t13147 ** 2
            t13149 = t13147 * t13148
            t13152 = t13149 ** 2
            t13158 = t13152 ** 2
            t13150 = t13148 ** 2
            t13151 = t13147 * t13150
            t13156 = t13151 ** 2
            t13154 = t13150 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.17765e5) * (-414 * t13148 + 894 * t13149 + 3327 * t13150 - 2775 * t13151 - 10692 * t13152 + 16119 * t13154 - 11454 * t13156 + 3105 * t13158 + 9 + (2116 * t13152 + 2337 * t13154 - 4002 * t13156 + 1495 * t13158 - 65) * t13147) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 1651:
            t13169 = np.sin(phi)
            t13166 = t13169 ** 2
            t13167 = t13166 ** 2
            t13160 = np.cos(phi)
            t13161 = t13160 ** 2
            t13163 = t13161 ** 2
            t13162 = t13160 * t13161
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.408595e6) * t13167 ** 2 * (-33 * t13161 + 63 * t13163 + 1 + (-60 + 65 * t13162) * t13162 + (150 * t13163 + 6) * t13160) * np.sin((3 * phi1 + 10 * phi2)) * ((1 + t13160) ** (-0.1e1 / 0.2e1)) * ((1 - t13160) ** (-0.1e1 / 0.2e1))

        if Bindx == 1652:
            t13170 = np.cos(phi)
            t13171 = t13170 ** 2
            t13172 = t13170 * t13171
            t13175 = t13172 ** 2
            t13181 = t13175 ** 2
            t13173 = t13171 ** 2
            t13174 = t13170 * t13173
            t13179 = t13174 ** 2
            t13177 = t13173 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.408595e6) * (-26 * t13171 + 214 * t13172 + 259 * t13173 - 521 * t13174 - 796 * t13175 + 1079 * t13177 - 682 * t13179 + 165 * t13181 + 1 + (484 * t13175 - 61 * t13177 - 154 * t13179 + 65 * t13181 - 27) * t13170) * np.cos((3 * phi1 + 11 * phi2))

        if Bindx == 1653:
            t13191 = np.sin(phi)
            t13187 = t13191 ** 2
            t13189 = t13191 * t13187 ** 2
            t13183 = np.cos(phi)
            t13184 = t13183 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.408595e6) * t13189 ** 2 * (4 * t13183 - 3 + (36 * t13183 + 30 + 13 * t13184) * t13184) * np.sin((3 * phi1 + 12 * phi2)) * ((1 + t13183) ** (-0.1e1 / 0.2e1)) * ((1 - t13183) ** (-0.1e1 / 0.2e1))

        if Bindx == 1654:
            t13192 = np.cos(phi)
            t13193 = t13192 ** 2
            t13194 = t13192 * t13193
            t13197 = t13194 ** 2
            t13203 = t13197 ** 2
            t13195 = t13193 ** 2
            t13196 = t13192 * t13195
            t13201 = t13196 ** 2
            t13199 = t13195 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5311735e7) * np.cos((3 * phi1 + 13 * phi2)) * (2 * t13193 + 14 * t13194 + 5 * t13195 - 25 * t13196 - 20 * t13197 + 25 * t13199 - 14 * t13201 + 3 * t13203 - 1 + (20 * t13197 - 5 * t13199 - 2 * t13201 + t13203 - 3) * t13192)

        if Bindx == 1655:
            t13205 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.62491e5) * ((1 - t13205) ** (0.17e2 / 0.2e1)) * ((1 + t13205) ** (0.9e1 / 0.2e1)) * np.sin((4 * phi1 - 13 * phi2))

        if Bindx == 1656:
            t13206 = np.cos(phi)
            t13207 = t13206 ** 2
            t13208 = t13206 * t13207
            t13211 = t13208 ** 2
            t13217 = t13211 ** 2
            t13209 = t13207 ** 2
            t13210 = t13206 * t13209
            t13215 = t13210 ** 2
            t13213 = t13209 ** 2
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (-44 * t13207 + 74 * t13208 + 88 * t13209 - 253 * t13210 + 8 * t13211 - 172 * t13213 + 164 * t13215 - 48 * t13217 + 4 + (332 * t13211 - 173 * t13213 + 10 * t13215 + 13 * t13217 - 3) * t13206) * np.cos((4 * phi1 - 12 * phi2))

        if Bindx == 1657:
            t13228 = np.sin(phi)
            t13225 = t13228 ** 2
            t13226 = t13225 ** 2
            t13219 = np.cos(phi)
            t13220 = t13219 ** 2
            t13222 = t13220 ** 2
            t13221 = t13219 * t13220
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.4807e4) * t13226 ** 2 * (-361 * t13220 + 1169 * t13222 + 19 + (-176 + 325 * t13221) * t13221 + (-1100 * t13222 + 124) * t13219) * np.sin((4 * phi1 - 11 * phi2)) * ((1 + t13219) ** (-0.1e1 / 0.2e1)) * ((1 - t13219) ** (-0.1e1 / 0.2e1))

        if Bindx == 1658:
            t13229 = np.cos(phi)
            t13230 = t13229 ** 2
            t13231 = t13229 * t13230
            t13234 = t13231 ** 2
            t13240 = t13234 ** 2
            t13232 = t13230 ** 2
            t13233 = t13229 * t13232
            t13238 = t13233 ** 2
            t13236 = t13232 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (-66 * t13230 + 720 * t13231 - 84 * t13232 - 2577 * t13233 + 1628 * t13234 - 3750 * t13236 + 3270 * t13238 - 1000 * t13240 + 2 + (3736 * t13234 - 1971 * t13236 - 168 * t13238 + 325 * t13240 - 65) * t13229) * np.cos((4 * phi1 - 10 * phi2))

        if Bindx == 1659:
            t13253 = np.sin(phi)
            t13250 = t13253 ** 2
            t13251 = t13253 * t13250
            t13242 = np.cos(phi)
            t13243 = t13242 ** 2
            t13244 = t13242 * t13243
            t13247 = t13244 ** 2
            t13245 = t13243 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t13251 ** 2 * (2920 * t13243 - 2100 * t13244 + 10672 * t13247 - 73 + (-12930 + 7475 * t13245) * t13245 + (14628 * t13245 - 20700 * t13247 + 108) * t13242) * np.sin((4 * phi1 - 9 * phi2)) * ((1 + t13242) ** (-0.1e1 / 0.2e1)) * ((1 - t13242) ** (-0.1e1 / 0.2e1))

        if Bindx == 1660:
            t13254 = np.cos(phi)
            t13255 = t13254 ** 2
            t13256 = t13254 * t13255
            t13259 = t13256 ** 2
            t13265 = t13259 ** 2
            t13257 = t13255 ** 2
            t13258 = t13254 * t13257
            t13263 = t13258 ** 2
            t13261 = t13257 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.95e2) * (2040 * t13255 + 10290 * t13256 - 20016 * t13257 - 42477 * t13258 + 80624 * t13259 - 149640 * t13261 + 127512 * t13263 - 40480 * t13265 - 40 + (63740 * t13259 - 21549 * t13261 - 25806 * t13263 + 16445 * t13265 - 643) * t13254) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 1661:
            t13279 = np.sin(phi)
            t13277 = t13279 ** 2
            t13267 = np.cos(phi)
            t13268 = t13267 ** 2
            t13270 = t13268 ** 2
            t13274 = t13270 ** 2
            t13269 = t13267 * t13268
            t13272 = t13269 ** 2
            t13271 = t13267 * t13270
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.665e3) * t13277 ** 2 * (-1311 * t13268 + 6080 * t13269 + 9046 * t13270 - 12782 * t13272 - 8349 * t13274 + 23 + (-30072 + 16445 * t13271) * t13271 + (56672 * t13272 - 35420 * t13274 - 332) * t13267) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t13267) ** (-0.1e1 / 0.2e1)) * ((1 - t13267) ** (-0.1e1 / 0.2e1))

        if Bindx == 1662:
            t13280 = np.cos(phi)
            t13281 = t13280 ** 2
            t13282 = t13280 * t13281
            t13285 = t13282 ** 2
            t13291 = t13285 ** 2
            t13283 = t13281 ** 2
            t13284 = t13280 * t13283
            t13289 = t13284 ** 2
            t13287 = t13283 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (6890 * t13281 + 7280 * t13282 - 73180 * t13283 - 27661 * t13284 + 291124 * t13285 - 536930 * t13287 + 464002 * t13289 - 151800 * t13291 - 106 + (-1480 * t13285 + 136345 * t13287 - 196328 * t13289 + 82225 * t13291 - 381) * t13280) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 1663:
            t13294 = np.cos(phi)
            t13295 = t13294 ** 2
            t13297 = t13295 ** 2
            t13298 = t13294 * t13297
            t13303 = t13298 ** 2
            t13301 = t13297 ** 2
            t13296 = t13294 * t13295
            t13299 = t13296 ** 2
            t13293 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * t13293 ** 2 * (-3010 * t13295 - 361020 * t13296 + 85885 * t13297 + 2228168 * t13298 + 2609365 * t13301 - 3451426 * t13303 + 43 + (-784700 + 1562275 * t13299) * t13299 + (-5554840 * t13299 + 6056820 * t13301 - 2403500 * t13303 + 15940) * t13294) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t13294) ** (-0.1e1 / 0.2e1)) * ((1 - t13294) ** (-0.1e1 / 0.2e1))

        if Bindx == 1664:
            t13306 = np.cos(phi)
            t13307 = t13306 ** 2
            t13308 = t13306 * t13307
            t13311 = t13308 ** 2
            t13317 = t13311 ** 2
            t13309 = t13307 ** 2
            t13310 = t13306 * t13309
            t13315 = t13310 ** 2
            t13313 = t13309 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (65700 * t13307 - 100650 * t13308 - 780360 * t13309 + 804429 * t13310 + 3347496 * t13311 - 6460380 * t13313 + 5749172 * t13315 - 1922800 * t13317 - 876 + (-2917260 * t13311 + 5292925 * t13313 - 4643562 * t13315 + 1562275 * t13317 + 3891) * t13306) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 1665:
            t13320 = np.cos(phi)
            t13321 = t13320 ** 2
            t13323 = t13321 ** 2
            t13324 = t13320 * t13323
            t13329 = t13324 ** 2
            t13327 = t13323 ** 2
            t13322 = t13320 * t13321
            t13325 = t13322 ** 2
            t13319 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.85e2) * t13319 ** 2 * (-6786 * t13321 - 35220 * t13322 + 85545 * t13323 + 236664 * t13324 + 844569 * t13327 - 836418 * t13329 + 87 + (-397404 + 312455 * t13325) * t13325 + (-627912 * t13325 + 711436 * t13327 - 288420 * t13329 + 1404) * t13320) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t13320) ** (-0.1e1 / 0.2e1)) * ((1 - t13320) ** (-0.1e1 / 0.2e1))

        if Bindx == 1666:
            t13332 = np.cos(phi)
            t13333 = t13332 ** 2
            t13334 = t13332 * t13333
            t13337 = t13334 ** 2
            t13343 = t13337 ** 2
            t13335 = t13333 ** 2
            t13336 = t13332 * t13335
            t13341 = t13336 ** 2
            t13339 = t13335 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.935e3) * (486 * t13333 - 2976 * t13334 - 6180 * t13335 + 22815 * t13336 + 28044 * t13337 - 56430 * t13339 + 51566 * t13341 - 17480 * t13343 - 6 + (-75240 * t13337 + 121277 * t13339 - 94392 * t13341 + 28405 * t13343 + 111) * t13332) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 1667:
            t13357 = np.sin(phi)
            t13355 = t13357 ** 2
            t13345 = np.cos(phi)
            t13346 = t13345 ** 2
            t13348 = t13346 ** 2
            t13352 = t13348 ** 2
            t13347 = t13345 * t13346
            t13350 = t13347 ** 2
            t13349 = t13345 * t13348
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.187e3) * t13355 ** 2 * (3645 * t13346 + 4560 * t13347 - 43890 * t13348 + 174762 * t13350 - 271377 * t13352 - 45 + (-28728 + 142025 * t13349) * t13349 + (62928 * t13350 - 43700 * t13352 - 180) * t13345) * np.sin((4 * phi1 - phi2)) * ((1 + t13345) ** (-0.1e1 / 0.2e1)) * ((1 - t13345) ** (-0.1e1 / 0.2e1))

        if Bindx == 1668:
            t13358 = np.cos(phi)
            t13359 = t13358 ** 2
            t13360 = t13359 ** 2
            t13362 = t13360 ** 2
            t13361 = t13359 * t13360
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17017e5) * t13358 * (9507 * t13360 + 49571 * t13362 + 45 + (-31236 + 10925 * t13361) * t13361 + (-37582 * t13362 - 1230) * t13359) * np.cos((4 * phi1))

        if Bindx == 1669:
            t13377 = np.sin(phi)
            t13375 = t13377 ** 2
            t13365 = np.cos(phi)
            t13366 = t13365 ** 2
            t13368 = t13366 ** 2
            t13372 = t13368 ** 2
            t13367 = t13365 * t13366
            t13370 = t13367 ** 2
            t13369 = t13365 * t13368
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.187e3) * t13375 ** 2 * (3645 * t13366 - 4560 * t13367 - 43890 * t13368 + 174762 * t13370 - 271377 * t13372 - 45 + (28728 + 142025 * t13369) * t13369 + (-62928 * t13370 + 43700 * t13372 + 180) * t13365) * np.sin((4 * phi1 + phi2)) * ((1 + t13365) ** (-0.1e1 / 0.2e1)) * ((1 - t13365) ** (-0.1e1 / 0.2e1))

        if Bindx == 1670:
            t13378 = np.cos(phi)
            t13379 = t13378 ** 2
            t13380 = t13378 * t13379
            t13383 = t13380 ** 2
            t13389 = t13383 ** 2
            t13381 = t13379 ** 2
            t13382 = t13378 * t13381
            t13387 = t13382 ** 2
            t13385 = t13381 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.935e3) * (-486 * t13379 - 2976 * t13380 + 6180 * t13381 + 22815 * t13382 - 28044 * t13383 + 56430 * t13385 - 51566 * t13387 + 17480 * t13389 + 6 + (-75240 * t13383 + 121277 * t13385 - 94392 * t13387 + 28405 * t13389 + 111) * t13378) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 1671:
            t13392 = np.cos(phi)
            t13393 = t13392 ** 2
            t13395 = t13393 ** 2
            t13396 = t13392 * t13395
            t13401 = t13396 ** 2
            t13399 = t13395 ** 2
            t13394 = t13392 * t13393
            t13397 = t13394 ** 2
            t13391 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.85e2) * t13391 ** 2 * (-6786 * t13393 + 35220 * t13394 + 85545 * t13395 - 236664 * t13396 + 844569 * t13399 - 836418 * t13401 + 87 + (-397404 + 312455 * t13397) * t13397 + (627912 * t13397 - 711436 * t13399 + 288420 * t13401 - 1404) * t13392) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t13392) ** (-0.1e1 / 0.2e1)) * ((1 - t13392) ** (-0.1e1 / 0.2e1))

        if Bindx == 1672:
            t13404 = np.cos(phi)
            t13405 = t13404 ** 2
            t13406 = t13404 * t13405
            t13409 = t13406 ** 2
            t13415 = t13409 ** 2
            t13407 = t13405 ** 2
            t13408 = t13404 * t13407
            t13413 = t13408 ** 2
            t13411 = t13407 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (-65700 * t13405 - 100650 * t13406 + 780360 * t13407 + 804429 * t13408 - 3347496 * t13409 + 6460380 * t13411 - 5749172 * t13413 + 1922800 * t13415 + 876 + (-2917260 * t13409 + 5292925 * t13411 - 4643562 * t13413 + 1562275 * t13415 + 3891) * t13404) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 1673:
            t13418 = np.cos(phi)
            t13419 = t13418 ** 2
            t13421 = t13419 ** 2
            t13422 = t13418 * t13421
            t13427 = t13422 ** 2
            t13425 = t13421 ** 2
            t13420 = t13418 * t13419
            t13423 = t13420 ** 2
            t13417 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.4096e4 * t13417 ** 2 * (-3010 * t13419 + 361020 * t13420 + 85885 * t13421 - 2228168 * t13422 + 2609365 * t13425 - 3451426 * t13427 + 43 + (-784700 + 1562275 * t13423) * t13423 + (5554840 * t13423 - 6056820 * t13425 + 2403500 * t13427 - 15940) * t13418) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t13418) ** (-0.1e1 / 0.2e1)) * ((1 - t13418) ** (-0.1e1 / 0.2e1))

        if Bindx == 1674:
            t13430 = np.cos(phi)
            t13431 = t13430 ** 2
            t13432 = t13430 * t13431
            t13435 = t13432 ** 2
            t13441 = t13435 ** 2
            t13433 = t13431 ** 2
            t13434 = t13430 * t13433
            t13439 = t13434 ** 2
            t13437 = t13433 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (-6890 * t13431 + 7280 * t13432 + 73180 * t13433 - 27661 * t13434 - 291124 * t13435 + 536930 * t13437 - 464002 * t13439 + 151800 * t13441 + 106 + (-1480 * t13435 + 136345 * t13437 - 196328 * t13439 + 82225 * t13441 - 381) * t13430) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 1675:
            t13455 = np.sin(phi)
            t13453 = t13455 ** 2
            t13443 = np.cos(phi)
            t13444 = t13443 ** 2
            t13446 = t13444 ** 2
            t13450 = t13446 ** 2
            t13445 = t13443 * t13444
            t13448 = t13445 ** 2
            t13447 = t13443 * t13446
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.665e3) * t13453 ** 2 * (-1311 * t13444 - 6080 * t13445 + 9046 * t13446 - 12782 * t13448 - 8349 * t13450 + 23 + (30072 + 16445 * t13447) * t13447 + (-56672 * t13448 + 35420 * t13450 + 332) * t13443) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t13443) ** (-0.1e1 / 0.2e1)) * ((1 - t13443) ** (-0.1e1 / 0.2e1))

        if Bindx == 1676:
            t13456 = np.cos(phi)
            t13457 = t13456 ** 2
            t13458 = t13456 * t13457
            t13461 = t13458 ** 2
            t13467 = t13461 ** 2
            t13459 = t13457 ** 2
            t13460 = t13456 * t13459
            t13465 = t13460 ** 2
            t13463 = t13459 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.95e2) * (-2040 * t13457 + 10290 * t13458 + 20016 * t13459 - 42477 * t13460 - 80624 * t13461 + 149640 * t13463 - 127512 * t13465 + 40480 * t13467 + 40 + (63740 * t13461 - 21549 * t13463 - 25806 * t13465 + 16445 * t13467 - 643) * t13456) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 1677:
            t13480 = np.sin(phi)
            t13477 = t13480 ** 2
            t13478 = t13480 * t13477
            t13469 = np.cos(phi)
            t13470 = t13469 ** 2
            t13471 = t13469 * t13470
            t13474 = t13471 ** 2
            t13472 = t13470 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t13478 ** 2 * (2920 * t13470 + 2100 * t13471 + 10672 * t13474 - 73 + (-12930 + 7475 * t13472) * t13472 + (-14628 * t13472 + 20700 * t13474 - 108) * t13469) * np.sin((4 * phi1 + 9 * phi2)) * ((1 + t13469) ** (-0.1e1 / 0.2e1)) * ((1 - t13469) ** (-0.1e1 / 0.2e1))

        if Bindx == 1678:
            t13481 = np.cos(phi)
            t13482 = t13481 ** 2
            t13483 = t13481 * t13482
            t13486 = t13483 ** 2
            t13492 = t13486 ** 2
            t13484 = t13482 ** 2
            t13485 = t13481 * t13484
            t13490 = t13485 ** 2
            t13488 = t13484 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (66 * t13482 + 720 * t13483 + 84 * t13484 - 2577 * t13485 - 1628 * t13486 + 3750 * t13488 - 3270 * t13490 + 1000 * t13492 - 2 + (3736 * t13486 - 1971 * t13488 - 168 * t13490 + 325 * t13492 - 65) * t13481) * np.cos((4 * phi1 + 10 * phi2))

        if Bindx == 1679:
            t13503 = np.sin(phi)
            t13500 = t13503 ** 2
            t13501 = t13500 ** 2
            t13494 = np.cos(phi)
            t13495 = t13494 ** 2
            t13497 = t13495 ** 2
            t13496 = t13494 * t13495
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.4807e4) * t13501 ** 2 * (-361 * t13495 + 1169 * t13497 + 19 + (176 + 325 * t13496) * t13496 + (1100 * t13497 - 124) * t13494) * np.sin((4 * phi1 + 11 * phi2)) * ((1 + t13494) ** (-0.1e1 / 0.2e1)) * ((1 - t13494) ** (-0.1e1 / 0.2e1))

        if Bindx == 1680:
            t13504 = np.cos(phi)
            t13505 = t13504 ** 2
            t13506 = t13504 * t13505
            t13509 = t13506 ** 2
            t13515 = t13509 ** 2
            t13507 = t13505 ** 2
            t13508 = t13504 * t13507
            t13513 = t13508 ** 2
            t13511 = t13507 ** 2
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (44 * t13505 + 74 * t13506 - 88 * t13507 - 253 * t13508 - 8 * t13509 + 172 * t13511 - 164 * t13513 + 48 * t13515 - 4 + (332 * t13509 - 173 * t13511 + 10 * t13513 + 13 * t13515 - 3) * t13504) * np.cos((4 * phi1 + 12 * phi2))

        if Bindx == 1681:
            t13517 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.62491e5) * ((1 - t13517) ** (0.9e1 / 0.2e1)) * ((1 + t13517) ** (0.17e2 / 0.2e1)) * np.sin((4 * phi1 + 13 * phi2))

        if Bindx == 1682:
            t13518 = np.cos(phi)
            t13519 = t13518 ** 2
            t13520 = t13518 * t13519
            t13523 = t13520 ** 2
            t13529 = t13523 ** 2
            t13521 = t13519 ** 2
            t13522 = t13518 * t13521
            t13527 = t13522 ** 2
            t13525 = t13521 ** 2
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62491e5) * np.cos((5 * phi1 - 13 * phi2)) * (-6 * t13519 - 10 * t13520 + 29 * t13521 - 9 * t13522 - 36 * t13523 + 9 * t13525 + 10 * t13527 - 5 * t13529 - 1 + (36 * t13523 - 29 * t13525 + 6 * t13527 + t13529 + 5) * t13518)

        if Bindx == 1683:
            t13540 = np.sin(phi)
            t13537 = t13540 ** 2
            t13538 = t13537 ** 2
            t13531 = np.cos(phi)
            t13532 = t13531 ** 2
            t13534 = t13532 ** 2
            t13533 = t13531 * t13532
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * t13538 ** 2 * (15 * t13532 + 105 * t13534 - 5 + (-80 + 13 * t13533) * t13533 + (-60 * t13534 + 12) * t13531) * np.sin((5 * phi1 - 12 * phi2)) * ((1 + t13531) ** (-0.1e1 / 0.2e1)) * ((1 - t13531) ** (-0.1e1 / 0.2e1))

        if Bindx == 1684:
            t13541 = np.cos(phi)
            t13542 = t13541 ** 2
            t13543 = t13541 * t13542
            t13546 = t13543 ** 2
            t13552 = t13546 ** 2
            t13544 = t13542 ** 2
            t13545 = t13541 * t13544
            t13550 = t13545 ** 2
            t13548 = t13544 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (-666 * t13542 + 310 * t13543 + 2711 * t13544 - 3357 * t13545 - 3132 * t13546 - 765 * t13548 + 3190 * t13550 - 1375 * t13552 + 37 + (7236 * t13546 - 5641 * t13548 + 1062 * t13550 + 325 * t13552 + 65) * t13541) * np.cos((5 * phi1 - 11 * phi2))

        if Bindx == 1685:
            t13565 = np.sin(phi)
            t13562 = t13565 ** 2
            t13563 = t13565 * t13562
            t13554 = np.cos(phi)
            t13555 = t13554 ** 2
            t13556 = t13554 * t13555
            t13559 = t13556 ** 2
            t13557 = t13555 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.4807e4) * t13563 ** 2 * (130 * t13555 + 490 * t13556 + 1486 * t13559 - 5 + (-1040 + 325 * t13557) * t13557 + (-50 * t13557 - 1250 * t13559 - 86) * t13554) * np.sin((5 * phi1 - 10 * phi2)) * ((1 + t13554) ** (-0.1e1 / 0.2e1)) * ((1 - t13554) ** (-0.1e1 / 0.2e1))

        if Bindx == 1686:
            t13566 = np.cos(phi)
            t13567 = t13566 ** 2
            t13568 = t13566 * t13567
            t13571 = t13568 ** 2
            t13577 = t13571 ** 2
            t13569 = t13567 ** 2
            t13570 = t13566 * t13569
            t13575 = t13570 ** 2
            t13573 = t13569 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.209e3) * (-2318 * t13567 + 10350 * t13568 + 8323 * t13569 - 47331 * t13570 + 5244 * t13571 - 52365 * t13573 + 66930 * t13575 - 25875 * t13577 + 61 + (89028 * t13571 - 66163 * t13573 + 7406 * t13575 + 7475 * t13577 - 765) * t13566) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 1687:
            t13591 = np.sin(phi)
            t13589 = t13591 ** 2
            t13579 = np.cos(phi)
            t13580 = t13579 ** 2
            t13582 = t13580 ** 2
            t13586 = t13582 ** 2
            t13581 = t13579 * t13580
            t13584 = t13581 ** 2
            t13583 = t13579 * t13582
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.95e2) * t13589 ** 2 * (-4815 * t13580 - 432 * t13581 + 30510 * t13582 - 60126 * t13584 + 25047 * t13586 + 107 + (-16992 + 16445 * t13583) * t13583 + (60720 * t13584 - 50600 * t13586 + 136) * t13579) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t13579) ** (-0.1e1 / 0.2e1)) * ((1 - t13579) ** (-0.1e1 / 0.2e1))

        if Bindx == 1688:
            t13592 = np.cos(phi)
            t13593 = t13592 ** 2
            t13594 = t13592 * t13593
            t13597 = t13594 ** 2
            t13603 = t13597 ** 2
            t13595 = t13593 ** 2
            t13596 = t13592 * t13595
            t13601 = t13596 ** 2
            t13599 = t13595 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.665e3) * (1026 * t13593 + 9442 * t13594 - 12029 * t13595 - 43821 * t13596 + 58524 * t13597 - 127197 * t13599 + 123970 * t13601 - 44275 * t13603 - 19 + (78684 * t13597 - 46541 * t13599 - 13662 * t13601 + 16445 * t13603 - 547) * t13592) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 1689:
            t13606 = np.cos(phi)
            t13607 = t13606 ** 2
            t13609 = t13607 ** 2
            t13610 = t13606 * t13609
            t13615 = t13610 ** 2
            t13613 = t13609 ** 2
            t13608 = t13606 * t13607
            t13611 = t13608 ** 2
            t13605 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * t13605 ** 2 * (6780 * t13607 - 24910 * t13608 - 56565 * t13609 + 150732 * t13610 - 81675 * t13613 - 88044 * t13615 - 113 + (139440 + 82225 * t13611) * t13611 + (-392220 * t13611 + 452870 * t13613 - 189750 * t13615 + 1230) * t13606) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t13606) ** (-0.1e1 / 0.2e1)) * ((1 - t13606) ** (-0.1e1 / 0.2e1))

        if Bindx == 1690:
            t13618 = np.cos(phi)
            t13619 = t13618 ** 2
            t13620 = t13618 * t13619
            t13623 = t13620 ** 2
            t13629 = t13623 ** 2
            t13621 = t13619 ** 2
            t13622 = t13618 * t13621
            t13627 = t13622 ** 2
            t13625 = t13621 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * (118470 * t13619 + 162730 * t13620 - 1285585 * t13621 - 705195 * t13622 + 5251524 * t13623 - 9975285 * t13625 + 8892950 * t13627 - 3004375 * t13629 - 1795 + (505020 * t13623 + 1919665 * t13625 - 3432198 * t13627 + 1562275 * t13629 - 8201) * t13618) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 1691:
            t13632 = np.cos(phi)
            t13633 = t13632 ** 2
            t13635 = t13633 ** 2
            t13636 = t13632 * t13635
            t13641 = t13636 ** 2
            t13639 = t13635 ** 2
            t13634 = t13632 * t13633
            t13637 = t13634 ** 2
            t13631 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * t13631 ** 2 * (-3010 * t13633 - 361020 * t13634 + 85885 * t13635 + 2228168 * t13636 + 2609365 * t13639 - 3451426 * t13641 + 43 + (-784700 + 1562275 * t13637) * t13637 + (-5554840 * t13637 + 6056820 * t13639 - 2403500 * t13641 + 15940) * t13632) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t13632) ** (-0.1e1 / 0.2e1)) * ((1 - t13632) ** (-0.1e1 / 0.2e1))

        if Bindx == 1692:
            t13644 = np.cos(phi)
            t13645 = t13644 ** 2
            t13646 = t13644 * t13645
            t13649 = t13646 ** 2
            t13655 = t13649 ** 2
            t13647 = t13645 ** 2
            t13648 = t13644 * t13647
            t13653 = t13648 ** 2
            t13651 = t13647 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (13690 * t13645 - 25526 * t13646 - 159995 * t13647 + 195553 * t13648 + 673436 * t13649 - 1272031 * t13651 + 1105610 * t13653 - 360525 * t13655 - 185 + (-673892 * t13649 + 1161413 * t13651 - 971014 * t13653 + 312455 * t13655 + 1011) * t13644) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 1693:
            t13669 = np.sin(phi)
            t13667 = t13669 ** 2
            t13657 = np.cos(phi)
            t13658 = t13657 ** 2
            t13660 = t13658 ** 2
            t13664 = t13660 ** 2
            t13659 = t13657 * t13658
            t13662 = t13659 ** 2
            t13661 = t13657 * t13660
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.935e3) * t13667 ** 2 * (825 * t13658 + 3040 * t13659 - 9310 * t13660 + 35378 * t13662 - 53751 * t13664 - 11 + (-17556 + 28405 * t13661) * t13661 + (34960 * t13662 - 21850 * t13664 - 130) * t13657) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t13657) ** (-0.1e1 / 0.2e1)) * ((1 - t13657) ** (-0.1e1 / 0.2e1))

        if Bindx == 1694:
            t13670 = np.cos(phi)
            t13671 = t13670 ** 2
            t13672 = t13670 * t13671
            t13675 = t13672 ** 2
            t13681 = t13675 ** 2
            t13673 = t13671 ** 2
            t13674 = t13670 * t13673
            t13679 = t13674 ** 2
            t13677 = t13673 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.187e3) * (1950 * t13671 - 20190 * t13672 - 23775 * t13673 + 147351 * t13674 + 102980 * t13675 - 196935 * t13677 + 170430 * t13679 - 54625 * t13681 - 25 + (-459268 * t13675 + 695343 * t13677 - 506046 * t13679 + 142025 * t13681 + 785) * t13670) * np.cos((5 * phi1 - phi2))

        if Bindx == 1695:
            t13691 = np.sin(phi)
            t13688 = t13691 ** 2
            t13689 = t13691 * t13688
            t13683 = np.cos(phi)
            t13684 = t13683 ** 2
            t13685 = t13684 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.17017e5) * t13689 ** 2 * (-380 * t13684 + 5 + (-12236 * t13684 + 3990 + 10925 * t13685) * t13685) * np.sin((5 * phi1)) * ((1 + t13683) ** (-0.1e1 / 0.2e1)) * ((1 - t13683) ** (-0.1e1 / 0.2e1))

        if Bindx == 1696:
            t13692 = np.cos(phi)
            t13693 = t13692 ** 2
            t13694 = t13692 * t13693
            t13697 = t13694 ** 2
            t13703 = t13697 ** 2
            t13695 = t13693 ** 2
            t13696 = t13692 * t13695
            t13701 = t13696 ** 2
            t13699 = t13695 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.187e3) * (-1950 * t13693 - 20190 * t13694 + 23775 * t13695 + 147351 * t13696 - 102980 * t13697 + 196935 * t13699 - 170430 * t13701 + 54625 * t13703 + 25 + (-459268 * t13697 + 695343 * t13699 - 506046 * t13701 + 142025 * t13703 + 785) * t13692) * np.cos((5 * phi1 + phi2))

        if Bindx == 1697:
            t13717 = np.sin(phi)
            t13715 = t13717 ** 2
            t13705 = np.cos(phi)
            t13706 = t13705 ** 2
            t13708 = t13706 ** 2
            t13712 = t13708 ** 2
            t13707 = t13705 * t13706
            t13710 = t13707 ** 2
            t13709 = t13705 * t13708
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.935e3) * t13715 ** 2 * (825 * t13706 - 3040 * t13707 - 9310 * t13708 + 35378 * t13710 - 53751 * t13712 - 11 + (17556 + 28405 * t13709) * t13709 + (-34960 * t13710 + 21850 * t13712 + 130) * t13705) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t13705) ** (-0.1e1 / 0.2e1)) * ((1 - t13705) ** (-0.1e1 / 0.2e1))

        if Bindx == 1698:
            t13718 = np.cos(phi)
            t13719 = t13718 ** 2
            t13720 = t13718 * t13719
            t13723 = t13720 ** 2
            t13729 = t13723 ** 2
            t13721 = t13719 ** 2
            t13722 = t13718 * t13721
            t13727 = t13722 ** 2
            t13725 = t13721 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-13690 * t13719 - 25526 * t13720 + 159995 * t13721 + 195553 * t13722 - 673436 * t13723 + 1272031 * t13725 - 1105610 * t13727 + 360525 * t13729 + 185 + (-673892 * t13723 + 1161413 * t13725 - 971014 * t13727 + 312455 * t13729 + 1011) * t13718) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 1699:
            t13732 = np.cos(phi)
            t13733 = t13732 ** 2
            t13735 = t13733 ** 2
            t13736 = t13732 * t13735
            t13741 = t13736 ** 2
            t13739 = t13735 ** 2
            t13734 = t13732 * t13733
            t13737 = t13734 ** 2
            t13731 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * t13731 ** 2 * (-3010 * t13733 + 361020 * t13734 + 85885 * t13735 - 2228168 * t13736 + 2609365 * t13739 - 3451426 * t13741 + 43 + (-784700 + 1562275 * t13737) * t13737 + (5554840 * t13737 - 6056820 * t13739 + 2403500 * t13741 - 15940) * t13732) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t13732) ** (-0.1e1 / 0.2e1)) * ((1 - t13732) ** (-0.1e1 / 0.2e1))

        if Bindx == 1700:
            t13744 = np.cos(phi)
            t13745 = t13744 ** 2
            t13746 = t13744 * t13745
            t13749 = t13746 ** 2
            t13755 = t13749 ** 2
            t13747 = t13745 ** 2
            t13748 = t13744 * t13747
            t13753 = t13748 ** 2
            t13751 = t13747 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * (-118470 * t13745 + 162730 * t13746 + 1285585 * t13747 - 705195 * t13748 - 5251524 * t13749 + 9975285 * t13751 - 8892950 * t13753 + 3004375 * t13755 + 1795 + (505020 * t13749 + 1919665 * t13751 - 3432198 * t13753 + 1562275 * t13755 - 8201) * t13744) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 1701:
            t13758 = np.cos(phi)
            t13759 = t13758 ** 2
            t13761 = t13759 ** 2
            t13762 = t13758 * t13761
            t13767 = t13762 ** 2
            t13765 = t13761 ** 2
            t13760 = t13758 * t13759
            t13763 = t13760 ** 2
            t13757 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * t13757 ** 2 * (6780 * t13759 + 24910 * t13760 - 56565 * t13761 - 150732 * t13762 - 81675 * t13765 - 88044 * t13767 - 113 + (139440 + 82225 * t13763) * t13763 + (392220 * t13763 - 452870 * t13765 + 189750 * t13767 - 1230) * t13758) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t13758) ** (-0.1e1 / 0.2e1)) * ((1 - t13758) ** (-0.1e1 / 0.2e1))

        if Bindx == 1702:
            t13770 = np.cos(phi)
            t13771 = t13770 ** 2
            t13772 = t13770 * t13771
            t13775 = t13772 ** 2
            t13781 = t13775 ** 2
            t13773 = t13771 ** 2
            t13774 = t13770 * t13773
            t13779 = t13774 ** 2
            t13777 = t13773 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.665e3) * (-1026 * t13771 + 9442 * t13772 + 12029 * t13773 - 43821 * t13774 - 58524 * t13775 + 127197 * t13777 - 123970 * t13779 + 44275 * t13781 + 19 + (78684 * t13775 - 46541 * t13777 - 13662 * t13779 + 16445 * t13781 - 547) * t13770) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 1703:
            t13795 = np.sin(phi)
            t13793 = t13795 ** 2
            t13783 = np.cos(phi)
            t13784 = t13783 ** 2
            t13786 = t13784 ** 2
            t13790 = t13786 ** 2
            t13785 = t13783 * t13784
            t13788 = t13785 ** 2
            t13787 = t13783 * t13786
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.95e2) * t13793 ** 2 * (-4815 * t13784 + 432 * t13785 + 30510 * t13786 - 60126 * t13788 + 25047 * t13790 + 107 + (16992 + 16445 * t13787) * t13787 + (-60720 * t13788 + 50600 * t13790 - 136) * t13783) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t13783) ** (-0.1e1 / 0.2e1)) * ((1 - t13783) ** (-0.1e1 / 0.2e1))

        if Bindx == 1704:
            t13796 = np.cos(phi)
            t13797 = t13796 ** 2
            t13798 = t13796 * t13797
            t13801 = t13798 ** 2
            t13807 = t13801 ** 2
            t13799 = t13797 ** 2
            t13800 = t13796 * t13799
            t13805 = t13800 ** 2
            t13803 = t13799 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.209e3) * (2318 * t13797 + 10350 * t13798 - 8323 * t13799 - 47331 * t13800 - 5244 * t13801 + 52365 * t13803 - 66930 * t13805 + 25875 * t13807 - 61 + (89028 * t13801 - 66163 * t13803 + 7406 * t13805 + 7475 * t13807 - 765) * t13796) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 1705:
            t13820 = np.sin(phi)
            t13817 = t13820 ** 2
            t13818 = t13820 * t13817
            t13809 = np.cos(phi)
            t13810 = t13809 ** 2
            t13811 = t13809 * t13810
            t13814 = t13811 ** 2
            t13812 = t13810 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.4807e4) * t13818 ** 2 * (130 * t13810 - 490 * t13811 + 1486 * t13814 - 5 + (-1040 + 325 * t13812) * t13812 + (50 * t13812 + 1250 * t13814 + 86) * t13809) * np.sin((5 * phi1 + 10 * phi2)) * ((1 + t13809) ** (-0.1e1 / 0.2e1)) * ((1 - t13809) ** (-0.1e1 / 0.2e1))

        if Bindx == 1706:
            t13821 = np.cos(phi)
            t13822 = t13821 ** 2
            t13823 = t13821 * t13822
            t13826 = t13823 ** 2
            t13832 = t13826 ** 2
            t13824 = t13822 ** 2
            t13825 = t13821 * t13824
            t13830 = t13825 ** 2
            t13828 = t13824 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (666 * t13822 + 310 * t13823 - 2711 * t13824 - 3357 * t13825 + 3132 * t13826 + 765 * t13828 - 3190 * t13830 + 1375 * t13832 - 37 + (7236 * t13826 - 5641 * t13828 + 1062 * t13830 + 325 * t13832 + 65) * t13821) * np.cos((5 * phi1 + 11 * phi2))

        if Bindx == 1707:
            t13843 = np.sin(phi)
            t13840 = t13843 ** 2
            t13841 = t13840 ** 2
            t13834 = np.cos(phi)
            t13835 = t13834 ** 2
            t13837 = t13835 ** 2
            t13836 = t13834 * t13835
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * t13841 ** 2 * (15 * t13835 + 105 * t13837 - 5 + (80 + 13 * t13836) * t13836 + (60 * t13837 - 12) * t13834) * np.sin((5 * phi1 + 12 * phi2)) * ((1 + t13834) ** (-0.1e1 / 0.2e1)) * ((1 - t13834) ** (-0.1e1 / 0.2e1))

        if Bindx == 1708:
            t13844 = np.cos(phi)
            t13845 = t13844 ** 2
            t13846 = t13844 * t13845
            t13849 = t13846 ** 2
            t13857 = 36 * t13849
            t13855 = t13849 ** 2
            t13847 = t13845 ** 2
            t13848 = t13844 * t13847
            t13853 = t13848 ** 2
            t13851 = t13847 ** 2
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62491e5) * np.cos((5 * phi1 + 13 * phi2)) * (6 * t13845 - 10 * t13846 - 29 * t13847 - 9 * t13848 - 9 * t13851 - 10 * t13853 + 5 * t13855 + t13857 + 1 + (-29 * t13851 + 6 * t13853 + t13855 + t13857 + 5) * t13844)

        if Bindx == 1709:
            t13858 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.3289e4) * ((1 - t13858) ** (0.19e2 / 0.2e1)) * ((1 + t13858) ** (0.7e1 / 0.2e1)) * np.sin((6 * phi1 - 13 * phi2))

        if Bindx == 1710:
            t13859 = np.cos(phi)
            t13860 = t13859 ** 2
            t13861 = t13859 * t13860
            t13864 = t13861 ** 2
            t13870 = t13864 ** 2
            t13862 = t13860 ** 2
            t13863 = t13859 * t13862
            t13868 = t13863 ** 2
            t13866 = t13862 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (6 * t13860 - 144 * t13861 + 188 * t13862 + 135 * t13863 - 468 * t13864 + 306 * t13866 + 46 * t13868 - 72 * t13870 - 6 + (216 * t13864 - 363 * t13866 + 120 * t13868 + 13 * t13870 + 23) * t13859) * np.cos((6 * phi1 - 12 * phi2))

        if Bindx == 1711:
            t13883 = np.sin(phi)
            t13880 = t13883 ** 2
            t13881 = t13883 * t13880
            t13872 = np.cos(phi)
            t13873 = t13872 ** 2
            t13874 = t13872 * t13873
            t13877 = t13874 ** 2
            t13875 = t13873 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.253e3) * t13881 ** 2 * (-590 * t13873 + 1370 * t13874 + 3134 * t13877 + 59 + (-240 + 325 * t13875) * t13875 + (-2354 * t13875 - 1650 * t13877 - 54) * t13872) * np.sin((6 * phi1 - 11 * phi2)) * ((1 + t13872) ** (-0.1e1 / 0.2e1)) * ((1 - t13872) ** (-0.1e1 / 0.2e1))

        if Bindx == 1712:
            t13884 = np.cos(phi)
            t13885 = t13884 ** 2
            t13886 = t13884 * t13885
            t13889 = t13886 ** 2
            t13895 = t13889 ** 2
            t13887 = t13885 ** 2
            t13888 = t13884 * t13887
            t13893 = t13888 ** 2
            t13891 = t13887 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (-391 * t13885 - 210 * t13886 + 2246 * t13887 - 1377 * t13888 - 4182 * t13889 + 1605 * t13891 + 2205 * t13893 - 1500 * t13895 + 17 + (5436 * t13889 - 5951 * t13891 + 1702 * t13893 + 325 * t13895 + 75) * t13884) * np.cos((6 * phi1 - 10 * phi2))

        if Bindx == 1713:
            t13909 = np.sin(phi)
            t13907 = t13909 ** 2
            t13897 = np.cos(phi)
            t13898 = t13897 ** 2
            t13900 = t13898 ** 2
            t13904 = t13900 ** 2
            t13899 = t13897 * t13898
            t13902 = t13899 ** 2
            t13901 = t13897 * t13900
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t13907 ** 2 * (-837 * t13898 - 12132 * t13899 + 15930 * t13900 - 51102 * t13902 + 37467 * t13904 + 27 + (22608 + 7475 * t13901) * t13901 + (10212 * t13902 - 31050 * t13904 + 1402) * t13897) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t13897) ** (-0.1e1 / 0.2e1)) * ((1 - t13897) ** (-0.1e1 / 0.2e1))

        if Bindx == 1714:
            t13910 = np.cos(phi)
            t13911 = t13910 ** 2
            t13912 = t13910 * t13911
            t13915 = t13912 ** 2
            t13921 = t13915 ** 2
            t13913 = t13911 ** 2
            t13914 = t13910 * t13913
            t13919 = t13914 ** 2
            t13917 = t13913 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.5e1) * (-5084 * t13911 + 15864 * t13912 + 24904 * t13913 - 84537 * t13914 - 20568 * t13915 - 69204 * t13917 + 130548 * t13919 - 60720 * t13921 + 124 + (185544 * t13915 - 164659 * t13917 + 32384 * t13919 + 16445 * t13921 - 1041) * t13910) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 1715:
            t13924 = np.cos(phi)
            t13925 = t13924 ** 2
            t13927 = t13925 ** 2
            t13928 = t13924 * t13927
            t13933 = t13928 ** 2
            t13931 = t13927 ** 2
            t13926 = t13924 * t13925
            t13929 = t13926 ** 2
            t13923 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13923 ** 2 * (4080 * t13925 + 2398 * t13926 - 31473 * t13927 + 6444 * t13928 - 94743 * t13931 + 18216 * t13933 - 85 + (88584 + 16445 * t13929) * t13929 + (-59220 * t13929 + 102718 * t13931 - 53130 * t13933 - 234) * t13924) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t13924) ** (-0.1e1 / 0.2e1)) * ((1 - t13924) ** (-0.1e1 / 0.2e1))

        if Bindx == 1716:
            t13936 = np.cos(phi)
            t13937 = t13936 ** 2
            t13938 = t13936 * t13937
            t13941 = t13938 ** 2
            t13947 = t13941 ** 2
            t13939 = t13937 ** 2
            t13940 = t13936 * t13939
            t13945 = t13940 ** 2
            t13943 = t13939 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * (3795 * t13937 + 45270 * t13938 - 48670 * t13939 - 217629 * t13940 + 257454 * t13941 - 595305 * t13943 + 609983 * t13945 - 227700 * t13947 - 69 + (410700 * t13941 - 270435 * t13943 - 47058 * t13945 + 82225 * t13947 - 2561) * t13936) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 1717:
            t13950 = np.cos(phi)
            t13951 = t13950 ** 2
            t13953 = t13951 ** 2
            t13954 = t13950 * t13953
            t13959 = t13954 ** 2
            t13957 = t13953 ** 2
            t13952 = t13950 * t13951
            t13955 = t13952 ** 2
            t13949 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * t13949 ** 2 * (6780 * t13951 - 24910 * t13952 - 56565 * t13953 + 150732 * t13954 - 81675 * t13957 - 88044 * t13959 - 113 + (139440 + 82225 * t13955) * t13955 + (-392220 * t13955 + 452870 * t13957 - 189750 * t13959 + 1230) * t13950) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t13950) ** (-0.1e1 / 0.2e1)) * ((1 - t13950) ** (-0.1e1 / 0.2e1))

        if Bindx == 1718:
            t13962 = np.cos(phi)
            t13963 = t13962 ** 2
            t13964 = t13962 * t13963
            t13967 = t13964 ** 2
            t13973 = t13967 ** 2
            t13965 = t13963 ** 2
            t13966 = t13962 * t13965
            t13971 = t13966 ** 2
            t13969 = t13965 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (6890 * t13963 + 7280 * t13964 - 73180 * t13965 - 27661 * t13966 + 291124 * t13967 - 536930 * t13969 + 464002 * t13971 - 151800 * t13973 - 106 + (-1480 * t13967 + 136345 * t13969 - 196328 * t13971 + 82225 * t13973 - 381) * t13962) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 1719:
            t13987 = np.sin(phi)
            t13985 = t13987 ** 2
            t13975 = np.cos(phi)
            t13976 = t13975 ** 2
            t13978 = t13976 ** 2
            t13982 = t13978 ** 2
            t13977 = t13975 * t13976
            t13980 = t13977 ** 2
            t13979 = t13975 * t13978
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1615e4) * t13985 ** 2 * (201 * t13976 + 4056 * t13977 - 2534 * t13978 + 12474 * t13980 - 25047 * t13982 - 3 + (-21084 + 16445 * t13979) * t13979 + (38456 * t13980 - 22770 * t13982 - 194) * t13975) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t13975) ** (-0.1e1 / 0.2e1)) * ((1 - t13975) ** (-0.1e1 / 0.2e1))

        if Bindx == 1720:
            t13988 = np.cos(phi)
            t13989 = t13988 ** 2
            t13990 = t13988 * t13989
            t13993 = t13990 ** 2
            t13999 = t13993 ** 2
            t13991 = t13989 ** 2
            t13992 = t13988 * t13991
            t13997 = t13992 ** 2
            t13995 = t13991 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.17765e5) * (71 * t13989 - 214 * t13990 - 790 * t13991 + 1493 * t13992 + 3142 * t13993 - 5573 * t13995 + 4531 * t13997 - 1380 * t13999 - 1 + (-4588 * t13993 + 7003 * t13995 - 5198 * t13997 + 1495 * t13999 + 9) * t13988) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 1721:
            t14012 = np.sin(phi)
            t14009 = t14012 ** 2
            t14010 = t14012 * t14009
            t14001 = np.cos(phi)
            t14002 = t14001 ** 2
            t14003 = t14001 * t14002
            t14006 = t14003 ** 2
            t14004 = t14002 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.3553e4) * t14010 ** 2 * (-350 * t14002 - 630 * t14003 - 9338 * t14006 + 5 + (3360 + 7475 * t14004) * t14004 + (2898 * t14004 - 3450 * t14006 + 30) * t14001) * np.sin((6 * phi1 - phi2)) * ((1 + t14001) ** (-0.1e1 / 0.2e1)) * ((1 - t14001) ** (-0.1e1 / 0.2e1))

        if Bindx == 1722:
            t14013 = np.cos(phi)
            t14014 = t14013 ** 2
            t14015 = t14014 ** 2
            t14017 = t14015 ** 2
            t14016 = t14014 * t14015
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t14013 * (813 * t14015 + 3279 * t14017 + 5 + (-2344 + 575 * t14016) * t14016 + (-2208 * t14017 - 120) * t14014) * np.cos((6 * phi1))

        if Bindx == 1723:
            t14031 = np.sin(phi)
            t14028 = t14031 ** 2
            t14029 = t14031 * t14028
            t14020 = np.cos(phi)
            t14021 = t14020 ** 2
            t14022 = t14020 * t14021
            t14025 = t14022 ** 2
            t14023 = t14021 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.3553e4) * t14029 ** 2 * (-350 * t14021 + 630 * t14022 - 9338 * t14025 + 5 + (3360 + 7475 * t14023) * t14023 + (-2898 * t14023 + 3450 * t14025 - 30) * t14020) * np.sin((6 * phi1 + phi2)) * ((1 + t14020) ** (-0.1e1 / 0.2e1)) * ((1 - t14020) ** (-0.1e1 / 0.2e1))

        if Bindx == 1724:
            t14032 = np.cos(phi)
            t14033 = t14032 ** 2
            t14034 = t14032 * t14033
            t14037 = t14034 ** 2
            t14043 = t14037 ** 2
            t14035 = t14033 ** 2
            t14036 = t14032 * t14035
            t14041 = t14036 ** 2
            t14039 = t14035 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.17765e5) * (-71 * t14033 - 214 * t14034 + 790 * t14035 + 1493 * t14036 - 3142 * t14037 + 5573 * t14039 - 4531 * t14041 + 1380 * t14043 + 1 + (-4588 * t14037 + 7003 * t14039 - 5198 * t14041 + 1495 * t14043 + 9) * t14032) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 1725:
            t14057 = np.sin(phi)
            t14055 = t14057 ** 2
            t14045 = np.cos(phi)
            t14046 = t14045 ** 2
            t14048 = t14046 ** 2
            t14052 = t14048 ** 2
            t14047 = t14045 * t14046
            t14050 = t14047 ** 2
            t14049 = t14045 * t14048
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.1615e4) * t14055 ** 2 * (201 * t14046 - 4056 * t14047 - 2534 * t14048 + 12474 * t14050 - 25047 * t14052 - 3 + (21084 + 16445 * t14049) * t14049 + (-38456 * t14050 + 22770 * t14052 + 194) * t14045) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t14045) ** (-0.1e1 / 0.2e1)) * ((1 - t14045) ** (-0.1e1 / 0.2e1))

        if Bindx == 1726:
            t14058 = np.cos(phi)
            t14059 = t14058 ** 2
            t14060 = t14058 * t14059
            t14063 = t14060 ** 2
            t14069 = t14063 ** 2
            t14061 = t14059 ** 2
            t14062 = t14058 * t14061
            t14067 = t14062 ** 2
            t14065 = t14061 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (-6890 * t14059 + 7280 * t14060 + 73180 * t14061 - 27661 * t14062 - 291124 * t14063 + 536930 * t14065 - 464002 * t14067 + 151800 * t14069 + 106 + (-1480 * t14063 + 136345 * t14065 - 196328 * t14067 + 82225 * t14069 - 381) * t14058) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 1727:
            t14072 = np.cos(phi)
            t14073 = t14072 ** 2
            t14075 = t14073 ** 2
            t14076 = t14072 * t14075
            t14081 = t14076 ** 2
            t14079 = t14075 ** 2
            t14074 = t14072 * t14073
            t14077 = t14074 ** 2
            t14071 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * t14071 ** 2 * (6780 * t14073 + 24910 * t14074 - 56565 * t14075 - 150732 * t14076 - 81675 * t14079 - 88044 * t14081 - 113 + (139440 + 82225 * t14077) * t14077 + (392220 * t14077 - 452870 * t14079 + 189750 * t14081 - 1230) * t14072) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t14072) ** (-0.1e1 / 0.2e1)) * ((1 - t14072) ** (-0.1e1 / 0.2e1))

        if Bindx == 1728:
            t14084 = np.cos(phi)
            t14085 = t14084 ** 2
            t14086 = t14084 * t14085
            t14089 = t14086 ** 2
            t14095 = t14089 ** 2
            t14087 = t14085 ** 2
            t14088 = t14084 * t14087
            t14093 = t14088 ** 2
            t14091 = t14087 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * (-3795 * t14085 + 45270 * t14086 + 48670 * t14087 - 217629 * t14088 - 257454 * t14089 + 595305 * t14091 - 609983 * t14093 + 227700 * t14095 + 69 + (410700 * t14089 - 270435 * t14091 - 47058 * t14093 + 82225 * t14095 - 2561) * t14084) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 1729:
            t14098 = np.cos(phi)
            t14099 = t14098 ** 2
            t14101 = t14099 ** 2
            t14102 = t14098 * t14101
            t14107 = t14102 ** 2
            t14105 = t14101 ** 2
            t14100 = t14098 * t14099
            t14103 = t14100 ** 2
            t14097 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t14097 ** 2 * (4080 * t14099 - 2398 * t14100 - 31473 * t14101 - 6444 * t14102 - 94743 * t14105 + 18216 * t14107 - 85 + (88584 + 16445 * t14103) * t14103 + (59220 * t14103 - 102718 * t14105 + 53130 * t14107 + 234) * t14098) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t14098) ** (-0.1e1 / 0.2e1)) * ((1 - t14098) ** (-0.1e1 / 0.2e1))

        if Bindx == 1730:
            t14110 = np.cos(phi)
            t14111 = t14110 ** 2
            t14112 = t14110 * t14111
            t14115 = t14112 ** 2
            t14121 = t14115 ** 2
            t14113 = t14111 ** 2
            t14114 = t14110 * t14113
            t14119 = t14114 ** 2
            t14117 = t14113 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.5e1) * (5084 * t14111 + 15864 * t14112 - 24904 * t14113 - 84537 * t14114 + 20568 * t14115 + 69204 * t14117 - 130548 * t14119 + 60720 * t14121 - 124 + (185544 * t14115 - 164659 * t14117 + 32384 * t14119 + 16445 * t14121 - 1041) * t14110) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 1731:
            t14135 = np.sin(phi)
            t14133 = t14135 ** 2
            t14123 = np.cos(phi)
            t14124 = t14123 ** 2
            t14126 = t14124 ** 2
            t14130 = t14126 ** 2
            t14125 = t14123 * t14124
            t14128 = t14125 ** 2
            t14127 = t14123 * t14126
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t14133 ** 2 * (-837 * t14124 + 12132 * t14125 + 15930 * t14126 - 51102 * t14128 + 37467 * t14130 + 27 + (-22608 + 7475 * t14127) * t14127 + (-10212 * t14128 + 31050 * t14130 - 1402) * t14123) * np.sin((6 * phi1 + 9 * phi2)) * ((1 + t14123) ** (-0.1e1 / 0.2e1)) * ((1 - t14123) ** (-0.1e1 / 0.2e1))

        if Bindx == 1732:
            t14136 = np.cos(phi)
            t14137 = t14136 ** 2
            t14138 = t14136 * t14137
            t14141 = t14138 ** 2
            t14147 = t14141 ** 2
            t14139 = t14137 ** 2
            t14140 = t14136 * t14139
            t14145 = t14140 ** 2
            t14143 = t14139 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (391 * t14137 - 210 * t14138 - 2246 * t14139 - 1377 * t14140 + 4182 * t14141 - 1605 * t14143 - 2205 * t14145 + 1500 * t14147 - 17 + (5436 * t14141 - 5951 * t14143 + 1702 * t14145 + 325 * t14147 + 75) * t14136) * np.cos((6 * phi1 + 10 * phi2))

        if Bindx == 1733:
            t14160 = np.sin(phi)
            t14157 = t14160 ** 2
            t14158 = t14160 * t14157
            t14149 = np.cos(phi)
            t14150 = t14149 ** 2
            t14151 = t14149 * t14150
            t14154 = t14151 ** 2
            t14152 = t14150 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.253e3) * t14158 ** 2 * (-590 * t14150 - 1370 * t14151 + 3134 * t14154 + 59 + (-240 + 325 * t14152) * t14152 + (2354 * t14152 + 1650 * t14154 + 54) * t14149) * np.sin((6 * phi1 + 11 * phi2)) * ((1 + t14149) ** (-0.1e1 / 0.2e1)) * ((1 - t14149) ** (-0.1e1 / 0.2e1))

        if Bindx == 1734:
            t14161 = np.cos(phi)
            t14162 = t14161 ** 2
            t14163 = t14161 * t14162
            t14166 = t14163 ** 2
            t14172 = t14166 ** 2
            t14164 = t14162 ** 2
            t14165 = t14161 * t14164
            t14170 = t14165 ** 2
            t14168 = t14164 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (-6 * t14162 - 144 * t14163 - 188 * t14164 + 135 * t14165 + 468 * t14166 - 306 * t14168 - 46 * t14170 + 72 * t14172 + 6 + (216 * t14166 - 363 * t14168 + 120 * t14170 + 13 * t14172 + 23) * t14161) * np.cos((6 * phi1 + 12 * phi2))

        if Bindx == 1735:
            t14174 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.3289e4) * ((1 - t14174) ** (0.7e1 / 0.2e1)) * ((1 + t14174) ** (0.19e2 / 0.2e1)) * np.sin((6 * phi1 + 13 * phi2))

        if Bindx == 1736:
            t14175 = np.cos(phi)
            t14176 = t14175 ** 2
            t14177 = t14175 * t14176
            t14180 = t14177 ** 2
            t14188 = -36 * t14180
            t14186 = t14180 ** 2
            t14178 = t14176 ** 2
            t14179 = t14175 * t14178
            t14184 = t14179 ** 2
            t14182 = t14178 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.115115e6) * np.cos((7 * phi1 - 13 * phi2)) * (18 * t14176 - 14 * t14177 - 25 * t14178 + 63 * t14179 + 63 * t14182 - 14 * t14184 - 7 * t14186 + t14188 + 1 + (-25 * t14182 + 18 * t14184 + t14186 + t14188 - 7) * t14175)

        if Bindx == 1737:
            t14200 = np.sin(phi)
            t14197 = t14200 ** 2
            t14198 = t14200 * t14197
            t14189 = np.cos(phi)
            t14190 = t14189 ** 2
            t14191 = t14189 * t14190
            t14194 = t14191 ** 2
            t14192 = t14190 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t14198 ** 2 * (-56 * t14190 - 28 * t14191 + 224 * t14194 - 7 + (210 + 13 * t14192) * t14192 + (-308 * t14192 - 84 * t14194 + 36) * t14189) * np.sin((7 * phi1 - 12 * phi2)) * ((1 + t14189) ** (-0.1e1 / 0.2e1)) * ((1 - t14189) ** (-0.1e1 / 0.2e1))

        if Bindx == 1738:
            t14201 = np.cos(phi)
            t14202 = t14201 ** 2
            t14203 = t14201 * t14202
            t14206 = t14203 ** 2
            t14212 = t14206 ** 2
            t14204 = t14202 ** 2
            t14205 = t14201 * t14204
            t14210 = t14205 ** 2
            t14208 = t14204 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (102 * t14202 - 518 * t14203 + 337 * t14204 + 1071 * t14205 - 1836 * t14206 + 1953 * t14208 - 154 * t14210 - 385 * t14212 - 17 + (108 * t14206 - 1537 * t14208 + 762 * t14210 + 65 * t14212 + 49) * t14201) * np.cos((7 * phi1 - 11 * phi2))

        if Bindx == 1739:
            t14226 = np.sin(phi)
            t14224 = t14226 ** 2
            t14214 = np.cos(phi)
            t14215 = t14214 ** 2
            t14217 = t14215 ** 2
            t14221 = t14217 ** 2
            t14216 = t14214 * t14215
            t14219 = t14216 ** 2
            t14218 = t14214 * t14217
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t14224 ** 2 * (105 * t14215 - 156 * t14216 - 210 * t14217 - 378 * t14219 + 681 * t14221 - 7 + (672 + 65 * t14218) * t14218 + (-420 * t14219 - 350 * t14221 - 2) * t14214) * np.sin((7 * phi1 - 10 * phi2)) * ((1 + t14214) ** (-0.1e1 / 0.2e1)) * ((1 - t14214) ** (-0.1e1 / 0.2e1))

        if Bindx == 1740:
            t14227 = np.cos(phi)
            t14228 = t14227 ** 2
            t14229 = t14227 * t14228
            t14232 = t14229 ** 2
            t14238 = t14232 ** 2
            t14230 = t14228 ** 2
            t14231 = t14227 * t14230
            t14236 = t14231 ** 2
            t14234 = t14230 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * (-1222 * t14228 - 1638 * t14229 + 8501 * t14230 - 2079 * t14231 - 19716 * t14232 + 12873 * t14234 + 6762 * t14236 - 7245 * t14238 + 47 + (18972 * t14232 - 26771 * t14234 + 9706 * t14236 + 1495 * t14238 + 315) * t14227) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 1741:
            t14241 = np.cos(phi)
            t14242 = t14241 ** 2
            t14244 = t14242 ** 2
            t14245 = t14241 * t14244
            t14250 = t14245 ** 2
            t14248 = t14244 ** 2
            t14243 = t14241 * t14242
            t14246 = t14243 ** 2
            t14240 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.7e1) * t14240 ** 2 * (238 * t14242 + 26920 * t14243 - 24885 * t14244 - 80208 * t14245 - 192225 * t14248 + 78430 * t14250 - 7 + (125076 + 16445 * t14246) * t14246 + (52752 * t14246 + 70840 * t14248 - 70840 * t14250 - 2536) * t14241) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t14241) ** (-0.1e1 / 0.2e1)) * ((1 - t14241) ** (-0.1e1 / 0.2e1))

        if Bindx == 1742:
            t14253 = np.cos(phi)
            t14254 = t14253 ** 2
            t14255 = t14253 * t14254
            t14258 = t14255 ** 2
            t14264 = t14258 ** 2
            t14256 = t14254 ** 2
            t14257 = t14253 * t14256
            t14262 = t14257 ** 2
            t14260 = t14256 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (-34818 * t14254 + 96866 * t14255 + 183295 * t14256 - 545139 * t14257 - 205548 * t14258 - 379701 * t14260 + 867790 * t14262 - 433895 * t14264 + 829 + (1261068 * t14258 - 1185415 * t14260 + 265650 * t14262 + 115115 * t14264 - 6097) * t14253) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 1743:
            t14267 = np.cos(phi)
            t14268 = t14267 ** 2
            t14270 = t14268 ** 2
            t14271 = t14267 * t14270
            t14276 = t14271 ** 2
            t14274 = t14270 ** 2
            t14269 = t14267 * t14268
            t14272 = t14269 ** 2
            t14266 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t14266 ** 2 * (4080 * t14268 + 2398 * t14269 - 31473 * t14270 + 6444 * t14271 - 94743 * t14274 + 18216 * t14276 - 85 + (88584 + 16445 * t14272) * t14272 + (-59220 * t14272 + 102718 * t14274 - 53130 * t14276 - 234) * t14267) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t14267) ** (-0.1e1 / 0.2e1)) * ((1 - t14267) ** (-0.1e1 / 0.2e1))

        if Bindx == 1744:
            t14279 = np.cos(phi)
            t14280 = t14279 ** 2
            t14281 = t14279 * t14280
            t14284 = t14281 ** 2
            t14290 = t14284 ** 2
            t14282 = t14280 ** 2
            t14283 = t14279 * t14282
            t14288 = t14283 ** 2
            t14286 = t14282 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.665e3) * (1026 * t14280 + 9442 * t14281 - 12029 * t14282 - 43821 * t14283 + 58524 * t14284 - 127197 * t14286 + 123970 * t14288 - 44275 * t14290 - 19 + (78684 * t14284 - 46541 * t14286 - 13662 * t14288 + 16445 * t14290 - 547) * t14279) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 1745:
            t14304 = np.sin(phi)
            t14302 = t14304 ** 2
            t14292 = np.cos(phi)
            t14293 = t14292 ** 2
            t14295 = t14293 ** 2
            t14299 = t14295 ** 2
            t14294 = t14292 * t14293
            t14297 = t14294 ** 2
            t14296 = t14292 * t14295
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.665e3) * t14302 ** 2 * (-1311 * t14293 + 6080 * t14294 + 9046 * t14295 - 12782 * t14297 - 8349 * t14299 + 23 + (-30072 + 16445 * t14296) * t14296 + (56672 * t14297 - 35420 * t14299 - 332) * t14292) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t14292) ** (-0.1e1 / 0.2e1)) * ((1 - t14292) ** (-0.1e1 / 0.2e1))

        if Bindx == 1746:
            t14305 = np.cos(phi)
            t14306 = t14305 ** 2
            t14307 = t14305 * t14306
            t14310 = t14307 ** 2
            t14316 = t14310 ** 2
            t14308 = t14306 ** 2
            t14309 = t14305 * t14308
            t14314 = t14309 ** 2
            t14312 = t14308 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2261e4) * (1798 * t14306 + 346 * t14307 - 17915 * t14308 + 1699 * t14309 + 65972 * t14310 - 111811 * t14312 + 88550 * t14314 - 26565 * t14316 - 29 + (-19508 * t14310 + 49115 * t14312 - 48070 * t14314 + 16445 * t14316 - 27) * t14305) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 1747:
            t14330 = np.sin(phi)
            t14318 = np.cos(phi)
            t14319 = t14318 ** 2
            t14320 = t14318 * t14319
            t14329 = -1610 * t14320 ** 2
            t14326 = t14330 ** 2
            t14327 = t14330 * t14326
            t14321 = t14319 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.24871e5) * t14327 ** 2 * (-62 * t14319 - 406 * t14320 + t14329 + 1 + (560 + 1495 * t14321) * t14321 + (1610 * t14321 + t14329 + 22) * t14318) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t14318) ** (-0.1e1 / 0.2e1)) * ((1 - t14318) ** (-0.1e1 / 0.2e1))

        if Bindx == 1748:
            t14331 = np.cos(phi)
            t14332 = t14331 ** 2
            t14333 = t14331 * t14332
            t14336 = t14333 ** 2
            t14342 = t14336 ** 2
            t14334 = t14332 ** 2
            t14335 = t14331 * t14334
            t14340 = t14335 ** 2
            t14338 = t14334 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.124355e6) * (66 * t14332 - 414 * t14333 - 675 * t14334 + 2577 * t14335 + 2444 * t14336 - 3927 * t14338 + 2898 * t14340 - 805 * t14342 - 1 + (-6932 * t14336 + 9189 * t14338 - 5934 * t14340 + 1495 * t14342 + 19) * t14331) * np.cos((7 * phi1 - phi2))

        if Bindx == 1749:
            t14351 = np.sin(phi)
            t14348 = t14351 ** 2
            t14349 = t14348 ** 2
            t14344 = np.cos(phi)
            t14345 = t14344 ** 2
            t14346 = t14345 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t14349 ** 2 * (-483 * t14346 - 1 + (805 * t14346 + 63) * t14345) * np.sin((7 * phi1)) * ((1 + t14344) ** (-0.1e1 / 0.2e1)) * ((1 - t14344) ** (-0.1e1 / 0.2e1))

        if Bindx == 1750:
            t14352 = np.cos(phi)
            t14353 = t14352 ** 2
            t14354 = t14352 * t14353
            t14357 = t14354 ** 2
            t14363 = t14357 ** 2
            t14355 = t14353 ** 2
            t14356 = t14352 * t14355
            t14361 = t14356 ** 2
            t14359 = t14355 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.124355e6) * (-66 * t14353 - 414 * t14354 + 675 * t14355 + 2577 * t14356 - 2444 * t14357 + 3927 * t14359 - 2898 * t14361 + 805 * t14363 + 1 + (-6932 * t14357 + 9189 * t14359 - 5934 * t14361 + 1495 * t14363 + 19) * t14352) * np.cos((7 * phi1 + phi2))

        if Bindx == 1751:
            t14376 = np.sin(phi)
            t14373 = t14376 ** 2
            t14374 = t14376 * t14373
            t14365 = np.cos(phi)
            t14366 = t14365 ** 2
            t14367 = t14365 * t14366
            t14370 = t14367 ** 2
            t14368 = t14366 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.24871e5) * t14374 ** 2 * (-62 * t14366 + 406 * t14367 - 1610 * t14370 + 1 + (560 + 1495 * t14368) * t14368 + (-1610 * t14368 + 1610 * t14370 - 22) * t14365) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t14365) ** (-0.1e1 / 0.2e1)) * ((1 - t14365) ** (-0.1e1 / 0.2e1))

        if Bindx == 1752:
            t14377 = np.cos(phi)
            t14378 = t14377 ** 2
            t14379 = t14377 * t14378
            t14382 = t14379 ** 2
            t14388 = t14382 ** 2
            t14380 = t14378 ** 2
            t14381 = t14377 * t14380
            t14386 = t14381 ** 2
            t14384 = t14380 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2261e4) * (-1798 * t14378 + 346 * t14379 + 17915 * t14380 + 1699 * t14381 - 65972 * t14382 + 111811 * t14384 - 88550 * t14386 + 26565 * t14388 + 29 + (-19508 * t14382 + 49115 * t14384 - 48070 * t14386 + 16445 * t14388 - 27) * t14377) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 1753:
            t14402 = np.sin(phi)
            t14400 = t14402 ** 2
            t14390 = np.cos(phi)
            t14391 = t14390 ** 2
            t14393 = t14391 ** 2
            t14397 = t14393 ** 2
            t14392 = t14390 * t14391
            t14395 = t14392 ** 2
            t14394 = t14390 * t14393
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.665e3) * t14400 ** 2 * (-1311 * t14391 - 6080 * t14392 + 9046 * t14393 - 12782 * t14395 - 8349 * t14397 + 23 + (30072 + 16445 * t14394) * t14394 + (-56672 * t14395 + 35420 * t14397 + 332) * t14390) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t14390) ** (-0.1e1 / 0.2e1)) * ((1 - t14390) ** (-0.1e1 / 0.2e1))

        if Bindx == 1754:
            t14403 = np.cos(phi)
            t14404 = t14403 ** 2
            t14405 = t14403 * t14404
            t14408 = t14405 ** 2
            t14414 = t14408 ** 2
            t14406 = t14404 ** 2
            t14407 = t14403 * t14406
            t14412 = t14407 ** 2
            t14410 = t14406 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.665e3) * (-1026 * t14404 + 9442 * t14405 + 12029 * t14406 - 43821 * t14407 - 58524 * t14408 + 127197 * t14410 - 123970 * t14412 + 44275 * t14414 + 19 + (78684 * t14408 - 46541 * t14410 - 13662 * t14412 + 16445 * t14414 - 547) * t14403) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 1755:
            t14417 = np.cos(phi)
            t14418 = t14417 ** 2
            t14420 = t14418 ** 2
            t14421 = t14417 * t14420
            t14426 = t14421 ** 2
            t14424 = t14420 ** 2
            t14419 = t14417 * t14418
            t14422 = t14419 ** 2
            t14416 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t14416 ** 2 * (4080 * t14418 - 2398 * t14419 - 31473 * t14420 - 6444 * t14421 - 94743 * t14424 + 18216 * t14426 - 85 + (88584 + 16445 * t14422) * t14422 + (59220 * t14422 - 102718 * t14424 + 53130 * t14426 + 234) * t14417) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t14417) ** (-0.1e1 / 0.2e1)) * ((1 - t14417) ** (-0.1e1 / 0.2e1))

        if Bindx == 1756:
            t14429 = np.cos(phi)
            t14430 = t14429 ** 2
            t14431 = t14429 * t14430
            t14434 = t14431 ** 2
            t14440 = t14434 ** 2
            t14432 = t14430 ** 2
            t14433 = t14429 * t14432
            t14438 = t14433 ** 2
            t14436 = t14432 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (34818 * t14430 + 96866 * t14431 - 183295 * t14432 - 545139 * t14433 + 205548 * t14434 + 379701 * t14436 - 867790 * t14438 + 433895 * t14440 - 829 + (1261068 * t14434 - 1185415 * t14436 + 265650 * t14438 + 115115 * t14440 - 6097) * t14429) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 1757:
            t14443 = np.cos(phi)
            t14444 = t14443 ** 2
            t14446 = t14444 ** 2
            t14447 = t14443 * t14446
            t14452 = t14447 ** 2
            t14450 = t14446 ** 2
            t14445 = t14443 * t14444
            t14448 = t14445 ** 2
            t14442 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.7e1) * t14442 ** 2 * (238 * t14444 - 26920 * t14445 - 24885 * t14446 + 80208 * t14447 - 192225 * t14450 + 78430 * t14452 - 7 + (125076 + 16445 * t14448) * t14448 + (-52752 * t14448 - 70840 * t14450 + 70840 * t14452 + 2536) * t14443) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t14443) ** (-0.1e1 / 0.2e1)) * ((1 - t14443) ** (-0.1e1 / 0.2e1))

        if Bindx == 1758:
            t14455 = np.cos(phi)
            t14456 = t14455 ** 2
            t14457 = t14455 * t14456
            t14460 = t14457 ** 2
            t14466 = t14460 ** 2
            t14458 = t14456 ** 2
            t14459 = t14455 * t14458
            t14464 = t14459 ** 2
            t14462 = t14458 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * (1222 * t14456 - 1638 * t14457 - 8501 * t14458 - 2079 * t14459 + 19716 * t14460 - 12873 * t14462 - 6762 * t14464 + 7245 * t14466 - 47 + (18972 * t14460 - 26771 * t14462 + 9706 * t14464 + 1495 * t14466 + 315) * t14455) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 1759:
            t14480 = np.sin(phi)
            t14478 = t14480 ** 2
            t14468 = np.cos(phi)
            t14469 = t14468 ** 2
            t14471 = t14469 ** 2
            t14475 = t14471 ** 2
            t14470 = t14468 * t14469
            t14473 = t14470 ** 2
            t14472 = t14468 * t14471
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t14478 ** 2 * (105 * t14469 + 156 * t14470 - 210 * t14471 - 378 * t14473 + 681 * t14475 - 7 + (-672 + 65 * t14472) * t14472 + (420 * t14473 + 350 * t14475 + 2) * t14468) * np.sin((7 * phi1 + 10 * phi2)) * ((1 + t14468) ** (-0.1e1 / 0.2e1)) * ((1 - t14468) ** (-0.1e1 / 0.2e1))

        if Bindx == 1760:
            t14481 = np.cos(phi)
            t14482 = t14481 ** 2
            t14483 = t14481 * t14482
            t14486 = t14483 ** 2
            t14492 = t14486 ** 2
            t14484 = t14482 ** 2
            t14485 = t14481 * t14484
            t14490 = t14485 ** 2
            t14488 = t14484 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-102 * t14482 - 518 * t14483 - 337 * t14484 + 1071 * t14485 + 1836 * t14486 - 1953 * t14488 + 154 * t14490 + 385 * t14492 + 17 + (108 * t14486 - 1537 * t14488 + 762 * t14490 + 65 * t14492 + 49) * t14481) * np.cos((7 * phi1 + 11 * phi2))

        if Bindx == 1761:
            t14505 = np.sin(phi)
            t14502 = t14505 ** 2
            t14503 = t14505 * t14502
            t14494 = np.cos(phi)
            t14495 = t14494 ** 2
            t14496 = t14494 * t14495
            t14499 = t14496 ** 2
            t14497 = t14495 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t14503 ** 2 * (-56 * t14495 + 28 * t14496 + 224 * t14499 - 7 + (210 + 13 * t14497) * t14497 + (308 * t14497 + 84 * t14499 - 36) * t14494) * np.sin((7 * phi1 + 12 * phi2)) * ((1 + t14494) ** (-0.1e1 / 0.2e1)) * ((1 - t14494) ** (-0.1e1 / 0.2e1))

        if Bindx == 1762:
            t14506 = np.cos(phi)
            t14507 = t14506 ** 2
            t14508 = t14506 * t14507
            t14511 = t14508 ** 2
            t14517 = t14511 ** 2
            t14509 = t14507 ** 2
            t14510 = t14506 * t14509
            t14515 = t14510 ** 2
            t14513 = t14509 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.115115e6) * np.cos((7 * phi1 + 13 * phi2)) * (-18 * t14507 - 14 * t14508 + 25 * t14509 + 63 * t14510 + 36 * t14511 - 63 * t14513 + 14 * t14515 + 7 * t14517 - 1 + (-36 * t14511 - 25 * t14513 + 18 * t14515 + t14517 - 7) * t14506)

        if Bindx == 1763:
            t14519 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.16445e5) * ((1 - t14519) ** (0.21e2 / 0.2e1)) * ((1 + t14519) ** (0.5e1 / 0.2e1)) * np.sin((8 * phi1 - 13 * phi2))

        if Bindx == 1764:
            t14520 = np.cos(phi)
            t14521 = t14520 ** 2
            t14522 = t14520 * t14521
            t14525 = t14522 ** 2
            t14531 = t14525 ** 2
            t14523 = t14521 ** 2
            t14524 = t14520 * t14523
            t14529 = t14524 ** 2
            t14527 = t14523 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1265e4) * (104 * t14521 + 18 * t14522 - 400 * t14523 + 579 * t14524 - 48 * t14525 + 744 * t14527 - 312 * t14529 - 96 * t14531 + 8 + (-708 * t14525 - 125 * t14527 + 274 * t14529 + 13 * t14531 - 51) * t14520) * np.cos((8 * phi1 - 12 * phi2))

        if Bindx == 1765:
            t14545 = np.sin(phi)
            t14543 = t14545 ** 2
            t14533 = np.cos(phi)
            t14534 = t14533 ** 2
            t14536 = t14534 ** 2
            t14540 = t14536 ** 2
            t14535 = t14533 * t14534
            t14538 = t14535 ** 2
            t14537 = t14533 * t14536
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * t14543 ** 2 * (69 * t14534 + 432 * t14535 - 1050 * t14536 + 714 * t14538 + 1203 * t14540 + 23 + (672 + 65 * t14537) * t14537 + (-1584 * t14538 - 440 * t14540 - 104) * t14533) * np.sin((8 * phi1 - 11 * phi2)) * ((1 + t14533) ** (-0.1e1 / 0.2e1)) * ((1 - t14533) ** (-0.1e1 / 0.2e1))

        if Bindx == 1766:
            t14546 = np.cos(phi)
            t14547 = t14546 ** 2
            t14548 = t14546 * t14547
            t14551 = t14548 ** 2
            t14557 = t14551 ** 2
            t14549 = t14547 ** 2
            t14550 = t14546 * t14549
            t14555 = t14550 ** 2
            t14553 = t14549 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1265e4) * (108 * t14547 - 392 * t14548 + 88 * t14549 + 1107 * t14550 - 1416 * t14551 + 2052 * t14553 - 420 * t14555 - 400 * t14557 - 12 + (-408 * t14551 - 1263 * t14553 + 864 * t14555 + 65 * t14557 + 27) * t14546) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 1767:
            t14560 = np.cos(phi)
            t14561 = t14560 ** 2
            t14563 = t14561 ** 2
            t14564 = t14560 * t14563
            t14569 = t14564 ** 2
            t14567 = t14563 ** 2
            t14562 = t14560 * t14561
            t14565 = t14562 ** 2
            t14559 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.55e2) * t14559 ** 2 * (-2214 * t14561 + 2312 * t14562 + 7713 * t14563 - 16272 * t14564 - 21267 * t14567 + 15594 * t14569 + 123 + (-420 + 1495 * t14565) * t14565 + (26064 * t14565 - 4968 * t14567 - 8280 * t14569 + 120) * t14560) * np.sin((8 * phi1 - 9 * phi2)) * ((1 + t14560) ** (-0.1e1 / 0.2e1)) * ((1 - t14560) ** (-0.1e1 / 0.2e1))

        if Bindx == 1768:
            t14572 = np.cos(phi)
            t14573 = t14572 ** 2
            t14574 = t14572 * t14573
            t14577 = t14574 ** 2
            t14583 = t14577 ** 2
            t14575 = t14573 ** 2
            t14576 = t14572 * t14575
            t14581 = t14576 ** 2
            t14579 = t14575 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * (-11664 * t14573 - 19462 * t14574 + 86560 * t14575 - 9837 * t14576 - 214944 * t14577 + 158832 * t14579 + 60720 * t14581 - 80960 * t14583 + 432 + (185964 * t14577 - 289245 * t14579 + 113850 * t14581 + 16445 * t14583 + 3309) * t14572) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 1769:
            t14586 = np.cos(phi)
            t14587 = t14586 ** 2
            t14589 = t14587 ** 2
            t14590 = t14586 * t14589
            t14595 = t14590 ** 2
            t14593 = t14589 ** 2
            t14588 = t14586 * t14587
            t14591 = t14588 ** 2
            t14585 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.7e1) * t14585 ** 2 * (238 * t14587 + 26920 * t14588 - 24885 * t14589 - 80208 * t14590 - 192225 * t14593 + 78430 * t14595 - 7 + (125076 + 16445 * t14591) * t14591 + (52752 * t14591 + 70840 * t14593 - 70840 * t14595 - 2536) * t14586) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t14586) ** (-0.1e1 / 0.2e1)) * ((1 - t14586) ** (-0.1e1 / 0.2e1))

        if Bindx == 1770:
            t14598 = np.cos(phi)
            t14599 = t14598 ** 2
            t14600 = t14598 * t14599
            t14603 = t14600 ** 2
            t14609 = t14603 ** 2
            t14601 = t14599 ** 2
            t14602 = t14598 * t14601
            t14607 = t14602 ** 2
            t14605 = t14601 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.5e1) * (-5084 * t14599 + 15864 * t14600 + 24904 * t14601 - 84537 * t14602 - 20568 * t14603 - 69204 * t14605 + 130548 * t14607 - 60720 * t14609 + 124 + (185544 * t14603 - 164659 * t14605 + 32384 * t14607 + 16445 * t14609 - 1041) * t14598) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 1771:
            t14623 = np.sin(phi)
            t14621 = t14623 ** 2
            t14611 = np.cos(phi)
            t14612 = t14611 ** 2
            t14614 = t14612 ** 2
            t14618 = t14614 ** 2
            t14613 = t14611 * t14612
            t14616 = t14613 ** 2
            t14615 = t14611 * t14614
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.95e2) * t14621 ** 2 * (-4815 * t14612 - 432 * t14613 + 30510 * t14614 - 60126 * t14616 + 25047 * t14618 + 107 + (-16992 + 16445 * t14615) * t14615 + (60720 * t14616 - 50600 * t14618 + 136) * t14611) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t14611) ** (-0.1e1 / 0.2e1)) * ((1 - t14611) ** (-0.1e1 / 0.2e1))

        if Bindx == 1772:
            t14624 = np.cos(phi)
            t14625 = t14624 ** 2
            t14626 = t14624 * t14625
            t14629 = t14626 ** 2
            t14635 = t14629 ** 2
            t14627 = t14625 ** 2
            t14628 = t14624 * t14627
            t14633 = t14628 ** 2
            t14631 = t14627 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.95e2) * (2040 * t14625 + 10290 * t14626 - 20016 * t14627 - 42477 * t14628 + 80624 * t14629 - 149640 * t14631 + 127512 * t14633 - 40480 * t14635 - 40 + (63740 * t14629 - 21549 * t14631 - 25806 * t14633 + 16445 * t14635 - 643) * t14624) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 1773:
            t14648 = np.sin(phi)
            t14645 = t14648 ** 2
            t14646 = t14648 * t14645
            t14637 = np.cos(phi)
            t14638 = t14637 ** 2
            t14639 = t14637 * t14638
            t14642 = t14639 ** 2
            t14640 = t14638 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * t14646 ** 2 * (988 * t14638 - 8616 * t14639 - 5060 * t14642 - 19 + (-4290 + 16445 * t14640) * t14640 + (30360 * t14640 - 30360 * t14642 + 552) * t14637) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t14637) ** (-0.1e1 / 0.2e1)) * ((1 - t14637) ** (-0.1e1 / 0.2e1))

        if Bindx == 1774:
            t14649 = np.cos(phi)
            t14650 = t14649 ** 2
            t14651 = t14649 * t14650
            t14654 = t14651 ** 2
            t14660 = t14654 ** 2
            t14652 = t14650 ** 2
            t14653 = t14649 * t14652
            t14658 = t14653 ** 2
            t14656 = t14652 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.3553e4) * (228 * t14650 - 264 * t14651 - 2040 * t14652 + 1749 * t14653 + 6632 * t14654 - 9876 * t14656 + 6900 * t14658 - 1840 * t14660 - 4 + (-5288 * t14654 + 7815 * t14656 - 5520 * t14658 + 1495 * t14660 + 13) * t14649) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 1775:
            t14671 = np.sin(phi)
            t14668 = t14671 ** 2
            t14669 = t14668 ** 2
            t14662 = np.cos(phi)
            t14663 = t14662 ** 2
            t14665 = t14663 ** 2
            t14664 = t14662 * t14663
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17765e5) * t14669 ** 2 * (165 * t14663 - 1081 * t14665 - 3 + (368 + 1495 * t14664) * t14664 + (-920 * t14665 - 24) * t14662) * np.sin((8 * phi1 - phi2)) * ((1 + t14662) ** (-0.1e1 / 0.2e1)) * ((1 - t14662) ** (-0.1e1 / 0.2e1))

        if Bindx == 1776:
            t14672 = np.cos(phi)
            t14673 = t14672 ** 2
            t14674 = t14673 ** 2
            t14676 = t14674 ** 2
            t14675 = t14673 * t14674
            tfunc[..., c] = 0.27e2 / 0.1024e4 * t14672 * np.sqrt(0.1616615e7) * (317 * t14674 + 877 * t14676 + 3 + (-748 + 115 * t14675) * t14675 + (-506 * t14676 - 58) * t14673) * np.cos((8 * phi1))

        if Bindx == 1777:
            t14688 = np.sin(phi)
            t14685 = t14688 ** 2
            t14686 = t14685 ** 2
            t14679 = np.cos(phi)
            t14680 = t14679 ** 2
            t14682 = t14680 ** 2
            t14681 = t14679 * t14680
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.17765e5) * t14686 ** 2 * (165 * t14680 - 1081 * t14682 - 3 + (-368 + 1495 * t14681) * t14681 + (920 * t14682 + 24) * t14679) * np.sin((8 * phi1 + phi2)) * ((1 - t14679) ** (-0.1e1 / 0.2e1)) * ((1 + t14679) ** (-0.1e1 / 0.2e1))

        if Bindx == 1778:
            t14689 = np.cos(phi)
            t14690 = t14689 ** 2
            t14691 = t14689 * t14690
            t14694 = t14691 ** 2
            t14700 = t14694 ** 2
            t14692 = t14690 ** 2
            t14693 = t14689 * t14692
            t14698 = t14693 ** 2
            t14696 = t14692 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.3553e4) * (-228 * t14690 - 264 * t14691 + 2040 * t14692 + 1749 * t14693 - 6632 * t14694 + 9876 * t14696 - 6900 * t14698 + 1840 * t14700 + 4 + (-5288 * t14694 + 7815 * t14696 - 5520 * t14698 + 1495 * t14700 + 13) * t14689) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 1779:
            t14713 = np.sin(phi)
            t14710 = t14713 ** 2
            t14711 = t14713 * t14710
            t14702 = np.cos(phi)
            t14703 = t14702 ** 2
            t14704 = t14702 * t14703
            t14707 = t14704 ** 2
            t14705 = t14703 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * t14711 ** 2 * (988 * t14703 + 8616 * t14704 - 5060 * t14707 - 19 + (-4290 + 16445 * t14705) * t14705 + (-30360 * t14705 + 30360 * t14707 - 552) * t14702) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t14702) ** (-0.1e1 / 0.2e1)) * ((1 + t14702) ** (-0.1e1 / 0.2e1))

        if Bindx == 1780:
            t14714 = np.cos(phi)
            t14715 = t14714 ** 2
            t14716 = t14714 * t14715
            t14719 = t14716 ** 2
            t14725 = t14719 ** 2
            t14717 = t14715 ** 2
            t14718 = t14714 * t14717
            t14723 = t14718 ** 2
            t14721 = t14717 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.95e2) * (-2040 * t14715 + 10290 * t14716 + 20016 * t14717 - 42477 * t14718 - 80624 * t14719 + 149640 * t14721 - 127512 * t14723 + 40480 * t14725 + 40 + (63740 * t14719 - 21549 * t14721 - 25806 * t14723 + 16445 * t14725 - 643) * t14714) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 1781:
            t14739 = np.sin(phi)
            t14737 = t14739 ** 2
            t14727 = np.cos(phi)
            t14728 = t14727 ** 2
            t14730 = t14728 ** 2
            t14734 = t14730 ** 2
            t14729 = t14727 * t14728
            t14732 = t14729 ** 2
            t14731 = t14727 * t14730
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.95e2) * t14737 ** 2 * (-4815 * t14728 + 432 * t14729 + 30510 * t14730 - 60126 * t14732 + 25047 * t14734 + 107 + (16992 + 16445 * t14731) * t14731 + (-60720 * t14732 + 50600 * t14734 - 136) * t14727) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t14727) ** (-0.1e1 / 0.2e1)) * ((1 + t14727) ** (-0.1e1 / 0.2e1))

        if Bindx == 1782:
            t14740 = np.cos(phi)
            t14741 = t14740 ** 2
            t14742 = t14740 * t14741
            t14745 = t14742 ** 2
            t14751 = t14745 ** 2
            t14743 = t14741 ** 2
            t14744 = t14740 * t14743
            t14749 = t14744 ** 2
            t14747 = t14743 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.5e1) * (5084 * t14741 + 15864 * t14742 - 24904 * t14743 - 84537 * t14744 + 20568 * t14745 + 69204 * t14747 - 130548 * t14749 + 60720 * t14751 - 124 + (185544 * t14745 - 164659 * t14747 + 32384 * t14749 + 16445 * t14751 - 1041) * t14740) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 1783:
            t14754 = np.cos(phi)
            t14755 = t14754 ** 2
            t14757 = t14755 ** 2
            t14758 = t14754 * t14757
            t14763 = t14758 ** 2
            t14761 = t14757 ** 2
            t14756 = t14754 * t14755
            t14759 = t14756 ** 2
            t14753 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.7e1) * t14753 ** 2 * (238 * t14755 - 26920 * t14756 - 24885 * t14757 + 80208 * t14758 - 192225 * t14761 + 78430 * t14763 - 7 + (125076 + 16445 * t14759) * t14759 + (-52752 * t14759 - 70840 * t14761 + 70840 * t14763 + 2536) * t14754) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t14754) ** (-0.1e1 / 0.2e1)) * ((1 + t14754) ** (-0.1e1 / 0.2e1))

        if Bindx == 1784:
            t14766 = np.cos(phi)
            t14767 = t14766 ** 2
            t14768 = t14766 * t14767
            t14771 = t14768 ** 2
            t14777 = t14771 ** 2
            t14769 = t14767 ** 2
            t14770 = t14766 * t14769
            t14775 = t14770 ** 2
            t14773 = t14769 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * (11664 * t14767 - 19462 * t14768 - 86560 * t14769 - 9837 * t14770 + 214944 * t14771 - 158832 * t14773 - 60720 * t14775 + 80960 * t14777 - 432 + (185964 * t14771 - 289245 * t14773 + 113850 * t14775 + 16445 * t14777 + 3309) * t14766) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 1785:
            t14780 = np.cos(phi)
            t14781 = t14780 ** 2
            t14783 = t14781 ** 2
            t14784 = t14780 * t14783
            t14789 = t14784 ** 2
            t14787 = t14783 ** 2
            t14782 = t14780 * t14781
            t14785 = t14782 ** 2
            t14779 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.55e2) * t14779 ** 2 * (-2214 * t14781 - 2312 * t14782 + 7713 * t14783 + 16272 * t14784 - 21267 * t14787 + 15594 * t14789 + 123 + (-420 + 1495 * t14785) * t14785 + (-26064 * t14785 + 4968 * t14787 + 8280 * t14789 - 120) * t14780) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t14780) ** (-0.1e1 / 0.2e1)) * ((1 + t14780) ** (-0.1e1 / 0.2e1))

        if Bindx == 1786:
            t14792 = np.cos(phi)
            t14793 = t14792 ** 2
            t14794 = t14792 * t14793
            t14797 = t14794 ** 2
            t14803 = t14797 ** 2
            t14795 = t14793 ** 2
            t14796 = t14792 * t14795
            t14801 = t14796 ** 2
            t14799 = t14795 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1265e4) * (-108 * t14793 - 392 * t14794 - 88 * t14795 + 1107 * t14796 + 1416 * t14797 - 2052 * t14799 + 420 * t14801 + 400 * t14803 + 12 + (-408 * t14797 - 1263 * t14799 + 864 * t14801 + 65 * t14803 + 27) * t14792) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 1787:
            t14817 = np.sin(phi)
            t14815 = t14817 ** 2
            t14805 = np.cos(phi)
            t14806 = t14805 ** 2
            t14808 = t14806 ** 2
            t14812 = t14808 ** 2
            t14807 = t14805 * t14806
            t14810 = t14807 ** 2
            t14809 = t14805 * t14808
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * t14815 ** 2 * (69 * t14806 - 432 * t14807 - 1050 * t14808 + 714 * t14810 + 1203 * t14812 + 23 + (-672 + 65 * t14809) * t14809 + (1584 * t14810 + 440 * t14812 + 104) * t14805) * np.sin((8 * phi1 + 11 * phi2)) * ((1 - t14805) ** (-0.1e1 / 0.2e1)) * ((1 + t14805) ** (-0.1e1 / 0.2e1))

        if Bindx == 1788:
            t14818 = np.cos(phi)
            t14819 = t14818 ** 2
            t14820 = t14818 * t14819
            t14823 = t14820 ** 2
            t14829 = t14823 ** 2
            t14821 = t14819 ** 2
            t14822 = t14818 * t14821
            t14827 = t14822 ** 2
            t14825 = t14821 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1265e4) * (-104 * t14819 + 18 * t14820 + 400 * t14821 + 579 * t14822 + 48 * t14823 - 744 * t14825 + 312 * t14827 + 96 * t14829 - 8 + (-708 * t14823 - 125 * t14825 + 274 * t14827 + 13 * t14829 - 51) * t14818) * np.cos((8 * phi1 + 12 * phi2))

        if Bindx == 1789:
            t14831 = np.cos(phi)
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.16445e5) * ((1 - t14831) ** (0.5e1 / 0.2e1)) * ((1 + t14831) ** (0.21e2 / 0.2e1)) * np.sin((8 * phi1 + 13 * phi2))

        if Bindx == 1790:
            t14832 = np.cos(phi)
            t14833 = t14832 ** 2
            t14834 = t14832 * t14833
            t14837 = t14834 ** 2
            t14843 = t14837 ** 2
            t14835 = t14833 ** 2
            t14836 = t14832 * t14835
            t14841 = t14836 ** 2
            t14839 = t14835 ** 2
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.299e3) * np.cos((9 * phi1 - 13 * phi2)) * (-34 * t14833 + 66 * t14834 - 55 * t14835 - 33 * t14836 + 132 * t14837 + 33 * t14839 - 66 * t14841 - 9 * t14843 - 1 + (-132 * t14837 + 55 * t14839 + 34 * t14841 + t14843 + 9) * t14832)

        if Bindx == 1791:
            t14857 = np.sin(phi)
            t14855 = t14857 ** 2
            t14845 = np.cos(phi)
            t14846 = t14845 ** 2
            t14848 = t14846 ** 2
            t14852 = t14848 ** 2
            t14847 = t14845 * t14846
            t14850 = t14847 ** 2
            t14849 = t14845 * t14848
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t14855 ** 2 * (-207 * t14846 + 288 * t14847 - 42 * t14848 + 882 * t14850 + 387 * t14852 - 9 + (-504 + 13 * t14849) * t14849 + (-768 * t14850 - 108 * t14852 + 68) * t14845) * np.sin((9 * phi1 - 12 * phi2)) * ((1 - t14845) ** (-0.1e1 / 0.2e1)) * ((1 + t14845) ** (-0.1e1 / 0.2e1))

        if Bindx == 1792:
            t14858 = np.cos(phi)
            t14859 = t14858 ** 2
            t14860 = t14858 * t14859
            t14863 = t14860 ** 2
            t14869 = t14863 ** 2
            t14861 = t14859 ** 2
            t14862 = t14858 * t14861
            t14867 = t14862 ** 2
            t14865 = t14861 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.23e2) * (1490 * t14859 + 1650 * t14860 - 8965 * t14861 + 9867 * t14862 + 4092 * t14863 + 15675 * t14865 - 9966 * t14867 - 2475 * t14869 + 149 + (-19140 * t14863 + 715 * t14865 + 7474 * t14867 + 325 * t14869 - 891) * t14858) * np.cos((9 * phi1 - 11 * phi2))

        if Bindx == 1793:
            t14872 = np.cos(phi)
            t14873 = t14872 ** 2
            t14875 = t14873 ** 2
            t14876 = t14872 * t14875
            t14881 = t14876 ** 2
            t14879 = t14875 ** 2
            t14874 = t14872 * t14873
            t14877 = t14874 ** 2
            t14871 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t14871 ** 2 * (-2530 * t14874 + 4455 * t14875 + 396 * t14876 - 495 * t14879 + 6072 * t14881 - 93 + (-9240 + 325 * t14877) * t14877 + (9900 * t14877 - 6930 * t14879 - 2250 * t14881 + 390) * t14872) * np.sin((9 * phi1 - 10 * phi2)) * ((1 - t14872) ** (-0.1e1 / 0.2e1)) * ((1 + t14872) ** (-0.1e1 / 0.2e1))

        if Bindx == 1794:
            t14884 = np.cos(phi)
            t14885 = t14884 ** 2
            t14886 = t14884 * t14885
            t14889 = t14886 ** 2
            t14895 = t14889 ** 2
            t14887 = t14885 ** 2
            t14888 = t14884 * t14887
            t14893 = t14888 ** 2
            t14891 = t14887 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (12270 * t14885 - 40590 * t14886 + 2695 * t14887 + 125829 * t14888 - 146124 * t14889 + 236115 * t14891 - 59202 * t14893 - 46575 * t14895 - 1227 + (-64020 * t14889 - 132495 * t14891 + 103362 * t14893 + 7475 * t14895 + 2487) * t14884) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 1795:
            t14898 = np.cos(phi)
            t14899 = t14898 ** 2
            t14901 = t14899 ** 2
            t14902 = t14898 * t14901
            t14907 = t14902 ** 2
            t14905 = t14901 ** 2
            t14900 = t14898 * t14899
            t14903 = t14900 ** 2
            t14897 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.55e2) * t14897 ** 2 * (-2214 * t14899 + 2312 * t14900 + 7713 * t14901 - 16272 * t14902 - 21267 * t14905 + 15594 * t14907 + 123 + (-420 + 1495 * t14903) * t14903 + (26064 * t14903 - 4968 * t14905 - 8280 * t14907 + 120) * t14898) * np.sin((9 * phi1 - 8 * phi2)) * ((1 - t14898) ** (-0.1e1 / 0.2e1)) * ((1 + t14898) ** (-0.1e1 / 0.2e1))

        if Bindx == 1796:
            t14910 = np.cos(phi)
            t14911 = t14910 ** 2
            t14912 = t14910 * t14911
            t14915 = t14912 ** 2
            t14921 = t14915 ** 2
            t14913 = t14911 ** 2
            t14914 = t14910 * t14913
            t14919 = t14914 ** 2
            t14917 = t14913 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * (-1222 * t14911 - 1638 * t14912 + 8501 * t14913 - 2079 * t14914 - 19716 * t14915 + 12873 * t14917 + 6762 * t14919 - 7245 * t14921 + 47 + (18972 * t14915 - 26771 * t14917 + 9706 * t14919 + 1495 * t14921 + 315) * t14910) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 1797:
            t14935 = np.sin(phi)
            t14933 = t14935 ** 2
            t14923 = np.cos(phi)
            t14924 = t14923 ** 2
            t14926 = t14924 ** 2
            t14930 = t14926 ** 2
            t14925 = t14923 * t14924
            t14928 = t14925 ** 2
            t14927 = t14923 * t14926
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t14933 ** 2 * (-837 * t14924 - 12132 * t14925 + 15930 * t14926 - 51102 * t14928 + 37467 * t14930 + 27 + (22608 + 7475 * t14927) * t14927 + (10212 * t14928 - 31050 * t14930 + 1402) * t14923) * np.sin((9 * phi1 - 6 * phi2)) * ((1 - t14923) ** (-0.1e1 / 0.2e1)) * ((1 + t14923) ** (-0.1e1 / 0.2e1))

        if Bindx == 1798:
            t14936 = np.cos(phi)
            t14937 = t14936 ** 2
            t14938 = t14936 * t14937
            t14941 = t14938 ** 2
            t14947 = t14941 ** 2
            t14939 = t14937 ** 2
            t14940 = t14936 * t14939
            t14945 = t14940 ** 2
            t14943 = t14939 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.209e3) * (-2318 * t14937 + 10350 * t14938 + 8323 * t14939 - 47331 * t14940 + 5244 * t14941 - 52365 * t14943 + 66930 * t14945 - 25875 * t14947 + 61 + (89028 * t14941 - 66163 * t14943 + 7406 * t14945 + 7475 * t14947 - 765) * t14936) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 1799:
            t14960 = np.sin(phi)
            t14957 = t14960 ** 2
            t14958 = t14960 * t14957
            t14949 = np.cos(phi)
            t14950 = t14949 ** 2
            t14951 = t14949 * t14950
            t14954 = t14951 ** 2
            t14952 = t14950 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t14958 ** 2 * (2920 * t14950 - 2100 * t14951 + 10672 * t14954 - 73 + (-12930 + 7475 * t14952) * t14952 + (14628 * t14952 - 20700 * t14954 + 108) * t14949) * np.sin((9 * phi1 - 4 * phi2)) * ((1 - t14949) ** (-0.1e1 / 0.2e1)) * ((1 + t14949) ** (-0.1e1 / 0.2e1))

        if Bindx == 1800:
            t14961 = np.cos(phi)
            t14962 = t14961 ** 2
            t14963 = t14961 * t14962
            t14966 = t14963 ** 2
            t14972 = t14966 ** 2
            t14964 = t14962 ** 2
            t14965 = t14961 * t14964
            t14970 = t14965 ** 2
            t14968 = t14964 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.17765e5) * (414 * t14962 + 894 * t14963 - 3327 * t14964 - 2775 * t14965 + 10692 * t14966 - 16119 * t14968 + 11454 * t14970 - 3105 * t14972 - 9 + (2116 * t14966 + 2337 * t14968 - 4002 * t14970 + 1495 * t14972 - 65) * t14961) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 1801:
            t14983 = np.sin(phi)
            t14980 = t14983 ** 2
            t14981 = t14980 ** 2
            t14974 = np.cos(phi)
            t14975 = t14974 ** 2
            t14977 = t14975 ** 2
            t14976 = t14974 * t14975
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1615e4) * t14981 ** 2 * (45 * t14975 - 483 * t14977 - 1 + (1104 + 1495 * t14976) * t14976 + (-2070 * t14977 - 90) * t14974) * np.sin((9 * phi1 - 2 * phi2)) * ((1 - t14974) ** (-0.1e1 / 0.2e1)) * ((1 + t14974) ** (-0.1e1 / 0.2e1))

        if Bindx == 1802:
            t14984 = np.cos(phi)
            t14985 = t14984 ** 2
            t14986 = t14984 * t14985
            t14989 = t14986 ** 2
            t14995 = t14989 ** 2
            t14987 = t14985 ** 2
            t14988 = t14984 * t14987
            t14993 = t14988 ** 2
            t14991 = t14987 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.323e3) * (1350 * t14985 - 5030 * t14986 - 10305 * t14987 + 24565 * t14988 + 28260 * t14989 - 36045 * t14991 + 21942 * t14993 - 5175 * t14995 - 27 + (-54020 * t14989 + 60425 * t14991 - 33718 * t14993 + 7475 * t14995 + 303) * t14984) * np.cos((9 * phi1 - phi2))

        if Bindx == 1803:
            t15004 = np.sin(phi)
            t15000 = t15004 ** 2
            t15002 = t15004 * t15000 ** 2
            t14997 = np.cos(phi)
            t14998 = t14997 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.29393e5) * t15002 ** 2 * (3 + (-138 + 575 * t14998) * t14998) * np.sin((9 * phi1)) * ((1 - t14997) ** (-0.1e1 / 0.2e1)) * ((1 + t14997) ** (-0.1e1 / 0.2e1))

        if Bindx == 1804:
            t15005 = np.cos(phi)
            t15006 = t15005 ** 2
            t15007 = t15005 * t15006
            t15010 = t15007 ** 2
            t15016 = t15010 ** 2
            t15008 = t15006 ** 2
            t15009 = t15005 * t15008
            t15014 = t15009 ** 2
            t15012 = t15008 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.323e3) * (-1350 * t15006 - 5030 * t15007 + 10305 * t15008 + 24565 * t15009 - 28260 * t15010 + 36045 * t15012 - 21942 * t15014 + 5175 * t15016 + 27 + (-54020 * t15010 + 60425 * t15012 - 33718 * t15014 + 7475 * t15016 + 303) * t15005) * np.cos((9 * phi1 + phi2))

        if Bindx == 1805:
            t15027 = np.sin(phi)
            t15024 = t15027 ** 2
            t15025 = t15024 ** 2
            t15018 = np.cos(phi)
            t15019 = t15018 ** 2
            t15021 = t15019 ** 2
            t15020 = t15018 * t15019
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1615e4) * t15025 ** 2 * (45 * t15019 - 483 * t15021 - 1 + (-1104 + 1495 * t15020) * t15020 + (2070 * t15021 + 90) * t15018) * np.sin((9 * phi1 + 2 * phi2)) * ((1 - t15018) ** (-0.1e1 / 0.2e1)) * ((1 + t15018) ** (-0.1e1 / 0.2e1))

        if Bindx == 1806:
            t15028 = np.cos(phi)
            t15029 = t15028 ** 2
            t15030 = t15028 * t15029
            t15033 = t15030 ** 2
            t15039 = t15033 ** 2
            t15031 = t15029 ** 2
            t15032 = t15028 * t15031
            t15037 = t15032 ** 2
            t15035 = t15031 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.17765e5) * (-414 * t15029 + 894 * t15030 + 3327 * t15031 - 2775 * t15032 - 10692 * t15033 + 16119 * t15035 - 11454 * t15037 + 3105 * t15039 + 9 + (2116 * t15033 + 2337 * t15035 - 4002 * t15037 + 1495 * t15039 - 65) * t15028) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 1807:
            t15052 = np.sin(phi)
            t15049 = t15052 ** 2
            t15050 = t15052 * t15049
            t15041 = np.cos(phi)
            t15042 = t15041 ** 2
            t15043 = t15041 * t15042
            t15046 = t15043 ** 2
            t15044 = t15042 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t15050 ** 2 * (2920 * t15042 + 2100 * t15043 + 10672 * t15046 - 73 + (-12930 + 7475 * t15044) * t15044 + (-14628 * t15044 + 20700 * t15046 - 108) * t15041) * np.sin((9 * phi1 + 4 * phi2)) * ((1 - t15041) ** (-0.1e1 / 0.2e1)) * ((1 + t15041) ** (-0.1e1 / 0.2e1))

        if Bindx == 1808:
            t15053 = np.cos(phi)
            t15054 = t15053 ** 2
            t15055 = t15053 * t15054
            t15058 = t15055 ** 2
            t15064 = t15058 ** 2
            t15056 = t15054 ** 2
            t15057 = t15053 * t15056
            t15062 = t15057 ** 2
            t15060 = t15056 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.209e3) * (2318 * t15054 + 10350 * t15055 - 8323 * t15056 - 47331 * t15057 - 5244 * t15058 + 52365 * t15060 - 66930 * t15062 + 25875 * t15064 - 61 + (89028 * t15058 - 66163 * t15060 + 7406 * t15062 + 7475 * t15064 - 765) * t15053) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 1809:
            t15078 = np.sin(phi)
            t15076 = t15078 ** 2
            t15066 = np.cos(phi)
            t15067 = t15066 ** 2
            t15069 = t15067 ** 2
            t15073 = t15069 ** 2
            t15068 = t15066 * t15067
            t15071 = t15068 ** 2
            t15070 = t15066 * t15069
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t15076 ** 2 * (-837 * t15067 + 12132 * t15068 + 15930 * t15069 - 51102 * t15071 + 37467 * t15073 + 27 + (-22608 + 7475 * t15070) * t15070 + (-10212 * t15071 + 31050 * t15073 - 1402) * t15066) * np.sin((9 * phi1 + 6 * phi2)) * ((1 - t15066) ** (-0.1e1 / 0.2e1)) * ((1 + t15066) ** (-0.1e1 / 0.2e1))

        if Bindx == 1810:
            t15079 = np.cos(phi)
            t15080 = t15079 ** 2
            t15081 = t15079 * t15080
            t15084 = t15081 ** 2
            t15090 = t15084 ** 2
            t15082 = t15080 ** 2
            t15083 = t15079 * t15082
            t15088 = t15083 ** 2
            t15086 = t15082 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.385e3) * (1222 * t15080 - 1638 * t15081 - 8501 * t15082 - 2079 * t15083 + 19716 * t15084 - 12873 * t15086 - 6762 * t15088 + 7245 * t15090 - 47 + (18972 * t15084 - 26771 * t15086 + 9706 * t15088 + 1495 * t15090 + 315) * t15079) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 1811:
            t15093 = np.cos(phi)
            t15094 = t15093 ** 2
            t15096 = t15094 ** 2
            t15097 = t15093 * t15096
            t15102 = t15097 ** 2
            t15100 = t15096 ** 2
            t15095 = t15093 * t15094
            t15098 = t15095 ** 2
            t15092 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.55e2) * t15092 ** 2 * (-2214 * t15094 - 2312 * t15095 + 7713 * t15096 + 16272 * t15097 - 21267 * t15100 + 15594 * t15102 + 123 + (-420 + 1495 * t15098) * t15098 + (-26064 * t15098 + 4968 * t15100 + 8280 * t15102 - 120) * t15093) * np.sin((9 * phi1 + 8 * phi2)) * ((1 - t15093) ** (-0.1e1 / 0.2e1)) * ((1 + t15093) ** (-0.1e1 / 0.2e1))

        if Bindx == 1812:
            t15105 = np.cos(phi)
            t15106 = t15105 ** 2
            t15107 = t15105 * t15106
            t15110 = t15107 ** 2
            t15116 = t15110 ** 2
            t15108 = t15106 ** 2
            t15109 = t15105 * t15108
            t15114 = t15109 ** 2
            t15112 = t15108 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (-12270 * t15106 - 40590 * t15107 - 2695 * t15108 + 125829 * t15109 + 146124 * t15110 - 236115 * t15112 + 59202 * t15114 + 46575 * t15116 + 1227 + (-64020 * t15110 - 132495 * t15112 + 103362 * t15114 + 7475 * t15116 + 2487) * t15105) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 1813:
            t15119 = np.cos(phi)
            t15120 = t15119 ** 2
            t15122 = t15120 ** 2
            t15123 = t15119 * t15122
            t15128 = t15123 ** 2
            t15126 = t15122 ** 2
            t15121 = t15119 * t15120
            t15124 = t15121 ** 2
            t15118 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t15118 ** 2 * (2530 * t15121 + 4455 * t15122 - 396 * t15123 - 495 * t15126 + 6072 * t15128 - 93 + (-9240 + 325 * t15124) * t15124 + (-9900 * t15124 + 6930 * t15126 + 2250 * t15128 - 390) * t15119) * np.sin((9 * phi1 + 10 * phi2)) * ((1 - t15119) ** (-0.1e1 / 0.2e1)) * ((1 + t15119) ** (-0.1e1 / 0.2e1))

        if Bindx == 1814:
            t15131 = np.cos(phi)
            t15132 = t15131 ** 2
            t15133 = t15131 * t15132
            t15136 = t15133 ** 2
            t15142 = t15136 ** 2
            t15134 = t15132 ** 2
            t15135 = t15131 * t15134
            t15140 = t15135 ** 2
            t15138 = t15134 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.23e2) * (-1490 * t15132 + 1650 * t15133 + 8965 * t15134 + 9867 * t15135 - 4092 * t15136 - 15675 * t15138 + 9966 * t15140 + 2475 * t15142 - 149 + (-19140 * t15136 + 715 * t15138 + 7474 * t15140 + 325 * t15142 - 891) * t15131) * np.cos((9 * phi1 + 11 * phi2))

        if Bindx == 1815:
            t15156 = np.sin(phi)
            t15154 = t15156 ** 2
            t15144 = np.cos(phi)
            t15145 = t15144 ** 2
            t15147 = t15145 ** 2
            t15151 = t15147 ** 2
            t15146 = t15144 * t15145
            t15149 = t15146 ** 2
            t15148 = t15144 * t15147
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t15154 ** 2 * (-207 * t15145 - 288 * t15146 - 42 * t15147 + 882 * t15149 + 387 * t15151 - 9 + (504 + 13 * t15148) * t15148 + (768 * t15149 + 108 * t15151 - 68) * t15144) * np.sin((9 * phi1 + 12 * phi2)) * ((1 - t15144) ** (-0.1e1 / 0.2e1)) * ((1 + t15144) ** (-0.1e1 / 0.2e1))

        if Bindx == 1816:
            t15157 = np.cos(phi)
            t15158 = t15157 ** 2
            t15159 = t15157 * t15158
            t15162 = t15159 ** 2
            t15170 = -132 * t15162
            t15168 = t15162 ** 2
            t15160 = t15158 ** 2
            t15161 = t15157 * t15160
            t15166 = t15161 ** 2
            t15164 = t15160 ** 2
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.299e3) * np.cos((9 * phi1 + 13 * phi2)) * (34 * t15158 + 66 * t15159 + 55 * t15160 - 33 * t15161 - 33 * t15164 + 66 * t15166 + 9 * t15168 + t15170 + 1 + (55 * t15164 + 34 * t15166 + t15168 + t15170 + 9) * t15157)

        if Bindx == 1817:
            t15171 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.13e2) * ((1 - t15171) ** (0.23e2 / 0.2e1)) * ((1 + t15171) ** (0.3e1 / 0.2e1)) * np.sin((10 * phi1 - 13 * phi2))

        if Bindx == 1818:
            t15172 = np.cos(phi)
            t15173 = t15172 ** 2
            t15174 = t15172 * t15173
            t15177 = t15174 ** 2
            t15183 = t15177 ** 2
            t15175 = t15173 ** 2
            t15176 = t15172 * t15175
            t15181 = t15176 ** 2
            t15179 = t15175 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * (-310 * t15173 + 528 * t15174 - 220 * t15175 - 825 * t15176 + 1716 * t15177 - 66 * t15179 - 990 * t15181 - 120 * t15183 - 10 + (-1320 * t15177 + 1045 * t15179 + 472 * t15181 + 13 * t15183 + 87) * t15172) * np.cos((10 * phi1 - 12 * phi2))

        if Bindx == 1819:
            t15186 = np.cos(phi)
            t15187 = t15186 ** 2
            t15189 = t15187 ** 2
            t15190 = t15186 * t15189
            t15195 = t15190 ** 2
            t15193 = t15189 ** 2
            t15188 = t15186 * t15187
            t15191 = t15188 ** 2
            t15185 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * t15185 ** 2 * (3740 * t15187 - 3190 * t15188 - 6105 * t15189 + 18876 * t15190 + 16665 * t15193 + 9812 * t15195 + 187 + (-18480 + 325 * t15191) * t15191 + (660 * t15191 - 18370 * t15193 - 2750 * t15195 - 1370) * t15186) * np.sin((10 * phi1 - 11 * phi2)) * ((1 - t15186) ** (-0.1e1 / 0.2e1)) * ((1 + t15186) ** (-0.1e1 / 0.2e1))

        if Bindx == 1820:
            t15198 = np.cos(phi)
            t15199 = t15198 ** 2
            t15200 = t15198 * t15199
            t15203 = t15200 ** 2
            t15209 = t15203 ** 2
            t15201 = t15199 ** 2
            t15202 = t15198 * t15201
            t15207 = t15202 ** 2
            t15205 = t15201 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * (1215 * t15199 + 1870 * t15200 - 8470 * t15201 + 8415 * t15202 + 5478 * t15203 + 14355 * t15205 - 10725 * t15207 - 2500 * t15209 + 135 + (-19140 * t15203 + 2145 * t15205 + 7686 * t15207 + 325 * t15209 - 789) * t15198) * np.cos((10 * phi1 - 10 * phi2))

        if Bindx == 1821:
            t15212 = np.cos(phi)
            t15213 = t15212 ** 2
            t15215 = t15213 ** 2
            t15216 = t15212 * t15215
            t15221 = t15216 ** 2
            t15219 = t15215 ** 2
            t15214 = t15212 * t15213
            t15217 = t15214 ** 2
            t15211 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t15211 ** 2 * (-2530 * t15214 + 4455 * t15215 + 396 * t15216 - 495 * t15219 + 6072 * t15221 - 93 + (-9240 + 325 * t15217) * t15217 + (9900 * t15217 - 6930 * t15219 - 2250 * t15221 + 390) * t15212) * np.sin((10 * phi1 - 9 * phi2)) * ((1 - t15212) ** (-0.1e1 / 0.2e1)) * ((1 + t15212) ** (-0.1e1 / 0.2e1))

        if Bindx == 1822:
            t15224 = np.cos(phi)
            t15225 = t15224 ** 2
            t15226 = t15224 * t15225
            t15229 = t15226 ** 2
            t15235 = t15229 ** 2
            t15227 = t15225 ** 2
            t15228 = t15224 * t15227
            t15233 = t15228 ** 2
            t15231 = t15227 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1265e4) * (108 * t15225 - 392 * t15226 + 88 * t15227 + 1107 * t15228 - 1416 * t15229 + 2052 * t15231 - 420 * t15233 - 400 * t15235 - 12 + (-408 * t15229 - 1263 * t15231 + 864 * t15233 + 65 * t15235 + 27) * t15224) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 1823:
            t15249 = np.sin(phi)
            t15247 = t15249 ** 2
            t15237 = np.cos(phi)
            t15238 = t15237 ** 2
            t15240 = t15238 ** 2
            t15244 = t15240 ** 2
            t15239 = t15237 * t15238
            t15242 = t15239 ** 2
            t15241 = t15237 * t15240
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t15247 ** 2 * (105 * t15238 - 156 * t15239 - 210 * t15240 - 378 * t15242 + 681 * t15244 - 7 + (672 + 65 * t15241) * t15241 + (-420 * t15242 - 350 * t15244 - 2) * t15237) * np.sin((10 * phi1 - 7 * phi2)) * ((1 - t15237) ** (-0.1e1 / 0.2e1)) * ((1 + t15237) ** (-0.1e1 / 0.2e1))

        if Bindx == 1824:
            t15250 = np.cos(phi)
            t15251 = t15250 ** 2
            t15252 = t15250 * t15251
            t15255 = t15252 ** 2
            t15261 = t15255 ** 2
            t15253 = t15251 ** 2
            t15254 = t15250 * t15253
            t15259 = t15254 ** 2
            t15257 = t15253 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (-391 * t15251 - 210 * t15252 + 2246 * t15253 - 1377 * t15254 - 4182 * t15255 + 1605 * t15257 + 2205 * t15259 - 1500 * t15261 + 17 + (5436 * t15255 - 5951 * t15257 + 1702 * t15259 + 325 * t15261 + 75) * t15250) * np.cos((10 * phi1 - 6 * phi2))

        if Bindx == 1825:
            t15274 = np.sin(phi)
            t15271 = t15274 ** 2
            t15272 = t15274 * t15271
            t15263 = np.cos(phi)
            t15264 = t15263 ** 2
            t15265 = t15263 * t15264
            t15268 = t15265 ** 2
            t15266 = t15264 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.4807e4) * t15272 ** 2 * (130 * t15264 + 490 * t15265 + 1486 * t15268 - 5 + (-1040 + 325 * t15266) * t15266 + (-50 * t15266 - 1250 * t15268 - 86) * t15263) * np.sin((10 * phi1 - 5 * phi2)) * ((1 - t15263) ** (-0.1e1 / 0.2e1)) * ((1 + t15263) ** (-0.1e1 / 0.2e1))

        if Bindx == 1826:
            t15275 = np.cos(phi)
            t15276 = t15275 ** 2
            t15277 = t15275 * t15276
            t15280 = t15277 ** 2
            t15286 = t15280 ** 2
            t15278 = t15276 ** 2
            t15279 = t15275 * t15278
            t15284 = t15279 ** 2
            t15282 = t15278 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (-66 * t15276 + 720 * t15277 - 84 * t15278 - 2577 * t15279 + 1628 * t15280 - 3750 * t15282 + 3270 * t15284 - 1000 * t15286 + 2 + (3736 * t15280 - 1971 * t15282 - 168 * t15284 + 325 * t15286 - 65) * t15275) * np.cos((10 * phi1 - 4 * phi2))

        if Bindx == 1827:
            t15297 = np.sin(phi)
            t15294 = t15297 ** 2
            t15295 = t15294 ** 2
            t15288 = np.cos(phi)
            t15289 = t15288 ** 2
            t15291 = t15289 ** 2
            t15290 = t15288 * t15289
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.408595e6) * t15295 ** 2 * (-33 * t15289 + 63 * t15291 + 1 + (60 + 65 * t15290) * t15290 + (-150 * t15291 - 6) * t15288) * np.sin((10 * phi1 - 3 * phi2)) * ((1 - t15288) ** (-0.1e1 / 0.2e1)) * ((1 + t15288) ** (-0.1e1 / 0.2e1))

        if Bindx == 1828:
            t15298 = np.cos(phi)
            t15299 = t15298 ** 2
            t15300 = t15298 * t15299
            t15303 = t15300 ** 2
            t15309 = t15303 ** 2
            t15301 = t15299 ** 2
            t15302 = t15298 * t15301
            t15307 = t15302 ** 2
            t15305 = t15301 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.37145e5) * (39 * t15299 + 6 * t15300 - 246 * t15301 + 51 * t15302 + 614 * t15303 - 741 * t15305 + 435 * t15307 - 100 * t15309 - 1 + (-244 * t15303 + 381 * t15305 - 258 * t15307 + 65 * t15309 - 1) * t15298) * np.cos((10 * phi1 - 2 * phi2))

        if Bindx == 1829:
            t15319 = np.sin(phi)
            t15315 = t15319 ** 2
            t15317 = t15319 * t15315 ** 2
            t15311 = np.cos(phi)
            t15312 = t15311 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.7429e4) * t15317 ** 2 * (30 * t15311 + 3 + (-250 * t15311 - 108 + 325 * t15312) * t15312) * np.sin((10 * phi1 - phi2)) * ((1 - t15311) ** (-0.1e1 / 0.2e1)) * ((1 + t15311) ** (-0.1e1 / 0.2e1))

        if Bindx == 1830:
            t15320 = np.cos(phi)
            t15321 = t15320 ** 2
            t15322 = t15321 ** 2
            t15324 = t15322 ** 2
            t15323 = t15321 * t15322
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t15320 * (155 * t15322 + 265 * t15324 + 3 + (-280 + 25 * t15323) * t15323 + (-128 * t15324 - 40) * t15321) * np.cos((10 * phi1))

        if Bindx == 1831:
            t15335 = np.sin(phi)
            t15331 = t15335 ** 2
            t15333 = t15335 * t15331 ** 2
            t15327 = np.cos(phi)
            t15328 = t15327 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.7429e4) * t15333 ** 2 * (-30 * t15327 + 3 + (250 * t15327 - 108 + 325 * t15328) * t15328) * np.sin((10 * phi1 + phi2)) * ((1 - t15327) ** (-0.1e1 / 0.2e1)) * ((1 + t15327) ** (-0.1e1 / 0.2e1))

        if Bindx == 1832:
            t15336 = np.cos(phi)
            t15337 = t15336 ** 2
            t15338 = t15336 * t15337
            t15341 = t15338 ** 2
            t15347 = t15341 ** 2
            t15339 = t15337 ** 2
            t15340 = t15336 * t15339
            t15345 = t15340 ** 2
            t15343 = t15339 ** 2
            tfunc[..., c] = 0.27e2 / 0.512e3 * np.sqrt(0.37145e5) * (-39 * t15337 + 6 * t15338 + 246 * t15339 + 51 * t15340 - 614 * t15341 + 741 * t15343 - 435 * t15345 + 100 * t15347 + 1 + (-244 * t15341 + 381 * t15343 - 258 * t15345 + 65 * t15347 - 1) * t15336) * np.cos((10 * phi1 + 2 * phi2))

        if Bindx == 1833:
            t15358 = np.sin(phi)
            t15355 = t15358 ** 2
            t15356 = t15355 ** 2
            t15349 = np.cos(phi)
            t15350 = t15349 ** 2
            t15352 = t15350 ** 2
            t15351 = t15349 * t15350
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.408595e6) * t15356 ** 2 * (-33 * t15350 + 63 * t15352 + 1 + (-60 + 65 * t15351) * t15351 + (150 * t15352 + 6) * t15349) * np.sin((10 * phi1 + 3 * phi2)) * ((1 - t15349) ** (-0.1e1 / 0.2e1)) * ((1 + t15349) ** (-0.1e1 / 0.2e1))

        if Bindx == 1834:
            t15359 = np.cos(phi)
            t15360 = t15359 ** 2
            t15361 = t15359 * t15360
            t15364 = t15361 ** 2
            t15370 = t15364 ** 2
            t15362 = t15360 ** 2
            t15363 = t15359 * t15362
            t15368 = t15363 ** 2
            t15366 = t15362 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (66 * t15360 + 720 * t15361 + 84 * t15362 - 2577 * t15363 - 1628 * t15364 + 3750 * t15366 - 3270 * t15368 + 1000 * t15370 - 2 + (3736 * t15364 - 1971 * t15366 - 168 * t15368 + 325 * t15370 - 65) * t15359) * np.cos((10 * phi1 + 4 * phi2))

        if Bindx == 1835:
            t15383 = np.sin(phi)
            t15380 = t15383 ** 2
            t15381 = t15383 * t15380
            t15372 = np.cos(phi)
            t15373 = t15372 ** 2
            t15374 = t15372 * t15373
            t15377 = t15374 ** 2
            t15375 = t15373 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.4807e4) * t15381 ** 2 * (130 * t15373 - 490 * t15374 + 1486 * t15377 - 5 + (-1040 + 325 * t15375) * t15375 + (50 * t15375 + 1250 * t15377 + 86) * t15372) * np.sin((10 * phi1 + 5 * phi2)) * ((1 - t15372) ** (-0.1e1 / 0.2e1)) * ((1 + t15372) ** (-0.1e1 / 0.2e1))

        if Bindx == 1836:
            t15384 = np.cos(phi)
            t15385 = t15384 ** 2
            t15386 = t15384 * t15385
            t15389 = t15386 ** 2
            t15395 = t15389 ** 2
            t15387 = t15385 ** 2
            t15388 = t15384 * t15387
            t15393 = t15388 ** 2
            t15391 = t15387 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (391 * t15385 - 210 * t15386 - 2246 * t15387 - 1377 * t15388 + 4182 * t15389 - 1605 * t15391 - 2205 * t15393 + 1500 * t15395 - 17 + (5436 * t15389 - 5951 * t15391 + 1702 * t15393 + 325 * t15395 + 75) * t15384) * np.cos((10 * phi1 + 6 * phi2))

        if Bindx == 1837:
            t15409 = np.sin(phi)
            t15407 = t15409 ** 2
            t15397 = np.cos(phi)
            t15398 = t15397 ** 2
            t15400 = t15398 ** 2
            t15404 = t15400 ** 2
            t15399 = t15397 * t15398
            t15402 = t15399 ** 2
            t15401 = t15397 * t15400
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t15407 ** 2 * (105 * t15398 + 156 * t15399 - 210 * t15400 - 378 * t15402 + 681 * t15404 - 7 + (-672 + 65 * t15401) * t15401 + (420 * t15402 + 350 * t15404 + 2) * t15397) * np.sin((10 * phi1 + 7 * phi2)) * ((1 - t15397) ** (-0.1e1 / 0.2e1)) * ((1 + t15397) ** (-0.1e1 / 0.2e1))

        if Bindx == 1838:
            t15410 = np.cos(phi)
            t15411 = t15410 ** 2
            t15412 = t15410 * t15411
            t15415 = t15412 ** 2
            t15421 = t15415 ** 2
            t15413 = t15411 ** 2
            t15414 = t15410 * t15413
            t15419 = t15414 ** 2
            t15417 = t15413 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.1265e4) * (-108 * t15411 - 392 * t15412 - 88 * t15413 + 1107 * t15414 + 1416 * t15415 - 2052 * t15417 + 420 * t15419 + 400 * t15421 + 12 + (-408 * t15415 - 1263 * t15417 + 864 * t15419 + 65 * t15421 + 27) * t15410) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 1839:
            t15424 = np.cos(phi)
            t15425 = t15424 ** 2
            t15427 = t15425 ** 2
            t15428 = t15424 * t15427
            t15433 = t15428 ** 2
            t15431 = t15427 ** 2
            t15426 = t15424 * t15425
            t15429 = t15426 ** 2
            t15423 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t15423 ** 2 * (2530 * t15426 + 4455 * t15427 - 396 * t15428 - 495 * t15431 + 6072 * t15433 - 93 + (-9240 + 325 * t15429) * t15429 + (-9900 * t15429 + 6930 * t15431 + 2250 * t15433 - 390) * t15424) * np.sin((10 * phi1 + 9 * phi2)) * ((1 - t15424) ** (-0.1e1 / 0.2e1)) * ((1 + t15424) ** (-0.1e1 / 0.2e1))

        if Bindx == 1840:
            t15436 = np.cos(phi)
            t15437 = t15436 ** 2
            t15438 = t15436 * t15437
            t15441 = t15438 ** 2
            t15447 = t15441 ** 2
            t15439 = t15437 ** 2
            t15440 = t15436 * t15439
            t15445 = t15440 ** 2
            t15443 = t15439 ** 2
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.2e1) * (-1215 * t15437 + 1870 * t15438 + 8470 * t15439 + 8415 * t15440 - 5478 * t15441 - 14355 * t15443 + 10725 * t15445 + 2500 * t15447 - 135 + (-19140 * t15441 + 2145 * t15443 + 7686 * t15445 + 325 * t15447 - 789) * t15436) * np.cos((10 * phi1 + 10 * phi2))

        if Bindx == 1841:
            t15450 = np.cos(phi)
            t15451 = t15450 ** 2
            t15453 = t15451 ** 2
            t15454 = t15450 * t15453
            t15459 = t15454 ** 2
            t15457 = t15453 ** 2
            t15452 = t15450 * t15451
            t15455 = t15452 ** 2
            t15449 = np.sin(phi)
            tfunc[..., c] = 0.27e2 / 0.2048e4 * t15449 ** 2 * (3740 * t15451 + 3190 * t15452 - 6105 * t15453 - 18876 * t15454 + 16665 * t15457 + 9812 * t15459 + 187 + (-18480 + 325 * t15455) * t15455 + (-660 * t15455 + 18370 * t15457 + 2750 * t15459 + 1370) * t15450) * np.sin((10 * phi1 + 11 * phi2)) * ((1 - t15450) ** (-0.1e1 / 0.2e1)) * ((1 + t15450) ** (-0.1e1 / 0.2e1))

        if Bindx == 1842:
            t15462 = np.cos(phi)
            t15463 = t15462 ** 2
            t15464 = t15462 * t15463
            t15467 = t15464 ** 2
            t15473 = t15467 ** 2
            t15465 = t15463 ** 2
            t15466 = t15462 * t15465
            t15471 = t15466 ** 2
            t15469 = t15465 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * (310 * t15463 + 528 * t15464 + 220 * t15465 - 825 * t15466 - 1716 * t15467 + 66 * t15469 + 990 * t15471 + 120 * t15473 + 10 + (-1320 * t15467 + 1045 * t15469 + 472 * t15471 + 13 * t15473 + 87) * t15462) * np.cos((10 * phi1 + 12 * phi2))

        if Bindx == 1843:
            t15475 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.13e2) * ((1 - t15475) ** (0.3e1 / 0.2e1)) * ((1 + t15475) ** (0.23e2 / 0.2e1)) * np.sin((10 * phi1 + 13 * phi2))

        if Bindx == 1844:
            t15476 = np.cos(phi)
            t15477 = t15476 ** 2
            t15478 = t15476 * t15477
            t15481 = t15478 ** 2
            t15489 = 132 * t15481
            t15487 = t15481 ** 2
            t15479 = t15477 ** 2
            t15480 = t15476 * t15479
            t15485 = t15480 ** 2
            t15483 = t15479 ** 2
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (54 * t15477 - 154 * t15478 + 275 * t15479 - 297 * t15480 - 297 * t15483 - 154 * t15485 - 11 * t15487 + t15489 + 1 + (275 * t15483 + 54 * t15485 + t15487 + t15489 - 11) * t15476) * np.cos((11 * phi1 - 13 * phi2))

        if Bindx == 1845:
            t15491 = np.cos(phi)
            t15492 = t15491 ** 2
            t15494 = t15492 ** 2
            t15495 = t15491 * t15494
            t15500 = t15495 ** 2
            t15498 = t15494 ** 2
            t15493 = t15491 * t15492
            t15496 = t15493 ** 2
            t15490 = np.sin(phi)
            tfunc[..., c] = 0.135e3 / 0.4096e4 * t15490 ** 2 * (-462 * t15492 + 1100 * t15493 - 1485 * t15494 + 792 * t15495 + 2475 * t15498 + 594 * t15500 - 11 + (924 + 13 * t15496) * t15496 + (-2376 * t15496 - 1540 * t15498 - 132 * t15500 + 108) * t15491) * np.sin((11 * phi1 - 12 * phi2)) * ((1 - t15491) ** (-0.1e1 / 0.2e1)) * ((1 + t15491) ** (-0.1e1 / 0.2e1))

        if Bindx == 1846:
            t15503 = np.cos(phi)
            t15504 = t15503 ** 2
            t15505 = t15503 * t15504
            t15508 = t15505 ** 2
            t15514 = t15508 ** 2
            t15506 = t15504 ** 2
            t15507 = t15503 * t15506
            t15512 = t15507 ** 2
            t15510 = t15506 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * (-6870 * t15504 + 11110 * t15505 - 2695 * t15506 - 22077 * t15507 + 41052 * t15508 - 6435 * t15510 - 25894 * t15512 - 3025 * t15514 - 229 + (-28380 * t15508 + 29095 * t15510 + 12054 * t15512 + 325 * t15514 + 1969) * t15503) * np.cos((11 * phi1 - 11 * phi2))

        if Bindx == 1847:
            t15517 = np.cos(phi)
            t15518 = t15517 ** 2
            t15520 = t15518 ** 2
            t15521 = t15517 * t15520
            t15526 = t15521 ** 2
            t15524 = t15520 ** 2
            t15519 = t15517 * t15518
            t15522 = t15519 ** 2
            t15516 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * t15516 ** 2 * (3740 * t15518 - 3190 * t15519 - 6105 * t15520 + 18876 * t15521 + 16665 * t15524 + 9812 * t15526 + 187 + (-18480 + 325 * t15522) * t15522 + (660 * t15522 - 18370 * t15524 - 2750 * t15526 - 1370) * t15517) * np.sin((11 * phi1 - 10 * phi2)) * ((1 - t15517) ** (-0.1e1 / 0.2e1)) * ((1 + t15517) ** (-0.1e1 / 0.2e1))

        if Bindx == 1848:
            t15529 = np.cos(phi)
            t15530 = t15529 ** 2
            t15531 = t15529 * t15530
            t15534 = t15531 ** 2
            t15540 = t15534 ** 2
            t15532 = t15530 ** 2
            t15533 = t15529 * t15532
            t15538 = t15533 ** 2
            t15536 = t15532 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.23e2) * (1490 * t15530 + 1650 * t15531 - 8965 * t15532 + 9867 * t15533 + 4092 * t15534 + 15675 * t15536 - 9966 * t15538 - 2475 * t15540 + 149 + (-19140 * t15534 + 715 * t15536 + 7474 * t15538 + 325 * t15540 - 891) * t15529) * np.cos((11 * phi1 - 9 * phi2))

        if Bindx == 1849:
            t15554 = np.sin(phi)
            t15552 = t15554 ** 2
            t15542 = np.cos(phi)
            t15543 = t15542 ** 2
            t15545 = t15543 ** 2
            t15549 = t15545 ** 2
            t15544 = t15542 * t15543
            t15547 = t15544 ** 2
            t15546 = t15542 * t15545
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * t15552 ** 2 * (69 * t15543 + 432 * t15544 - 1050 * t15545 + 714 * t15547 + 1203 * t15549 + 23 + (672 + 65 * t15546) * t15546 + (-1584 * t15547 - 440 * t15549 - 104) * t15542) * np.sin((11 * phi1 - 8 * phi2)) * ((1 - t15542) ** (-0.1e1 / 0.2e1)) * ((1 + t15542) ** (-0.1e1 / 0.2e1))

        if Bindx == 1850:
            t15555 = np.cos(phi)
            t15556 = t15555 ** 2
            t15557 = t15555 * t15556
            t15560 = t15557 ** 2
            t15566 = t15560 ** 2
            t15558 = t15556 ** 2
            t15559 = t15555 * t15558
            t15564 = t15559 ** 2
            t15562 = t15558 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (102 * t15556 - 518 * t15557 + 337 * t15558 + 1071 * t15559 - 1836 * t15560 + 1953 * t15562 - 154 * t15564 - 385 * t15566 - 17 + (108 * t15560 - 1537 * t15562 + 762 * t15564 + 65 * t15566 + 49) * t15555) * np.cos((11 * phi1 - 7 * phi2))

        if Bindx == 1851:
            t15579 = np.sin(phi)
            t15576 = t15579 ** 2
            t15577 = t15579 * t15576
            t15568 = np.cos(phi)
            t15569 = t15568 ** 2
            t15570 = t15568 * t15569
            t15573 = t15570 ** 2
            t15571 = t15569 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.253e3) * t15577 ** 2 * (-590 * t15569 + 1370 * t15570 + 3134 * t15573 + 59 + (-240 + 325 * t15571) * t15571 + (-2354 * t15571 - 1650 * t15573 - 54) * t15568) * np.sin((11 * phi1 - 6 * phi2)) * ((1 - t15568) ** (-0.1e1 / 0.2e1)) * ((1 + t15568) ** (-0.1e1 / 0.2e1))

        if Bindx == 1852:
            t15580 = np.cos(phi)
            t15581 = t15580 ** 2
            t15582 = t15580 * t15581
            t15585 = t15582 ** 2
            t15591 = t15585 ** 2
            t15583 = t15581 ** 2
            t15584 = t15580 * t15583
            t15589 = t15584 ** 2
            t15587 = t15583 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (-666 * t15581 + 310 * t15582 + 2711 * t15583 - 3357 * t15584 - 3132 * t15585 - 765 * t15587 + 3190 * t15589 - 1375 * t15591 + 37 + (7236 * t15585 - 5641 * t15587 + 1062 * t15589 + 325 * t15591 + 65) * t15580) * np.cos((11 * phi1 - 5 * phi2))

        if Bindx == 1853:
            t15602 = np.sin(phi)
            t15599 = t15602 ** 2
            t15600 = t15599 ** 2
            t15593 = np.cos(phi)
            t15594 = t15593 ** 2
            t15596 = t15594 ** 2
            t15595 = t15593 * t15594
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.4807e4) * t15600 ** 2 * (-361 * t15594 + 1169 * t15596 + 19 + (-176 + 325 * t15595) * t15595 + (-1100 * t15596 + 124) * t15593) * np.sin((11 * phi1 - 4 * phi2)) * ((1 - t15593) ** (-0.1e1 / 0.2e1)) * ((1 + t15593) ** (-0.1e1 / 0.2e1))

        if Bindx == 1854:
            t15603 = np.cos(phi)
            t15604 = t15603 ** 2
            t15605 = t15603 * t15604
            t15608 = t15605 ** 2
            t15614 = t15608 ** 2
            t15606 = t15604 ** 2
            t15607 = t15603 * t15606
            t15612 = t15607 ** 2
            t15610 = t15606 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.408595e6) * (26 * t15604 + 214 * t15605 - 259 * t15606 - 521 * t15607 + 796 * t15608 - 1079 * t15610 + 682 * t15612 - 165 * t15614 - 1 + (484 * t15608 - 61 * t15610 - 154 * t15612 + 65 * t15614 - 27) * t15603) * np.cos((11 * phi1 - 3 * phi2))

        if Bindx == 1855:
            t15624 = np.sin(phi)
            t15620 = t15624 ** 2
            t15622 = t15624 * t15620 ** 2
            t15616 = np.cos(phi)
            t15617 = t15616 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t15622 ** 2 * (22 * t15616 - 1 + (-110 * t15616 + 24 + 65 * t15617) * t15617) * np.sin((11 * phi1 - 2 * phi2)) * ((1 - t15616) ** (-0.1e1 / 0.2e1)) * ((1 + t15616) ** (-0.1e1 / 0.2e1))

        if Bindx == 1856:
            t15625 = np.cos(phi)
            t15626 = t15625 ** 2
            t15627 = t15625 * t15626
            t15630 = t15627 ** 2
            t15636 = t15630 ** 2
            t15628 = t15626 ** 2
            t15629 = t15625 * t15628
            t15634 = t15629 ** 2
            t15632 = t15628 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (330 * t15626 - 630 * t15627 - 1485 * t15628 + 2235 * t15629 + 2860 * t15630 - 2805 * t15632 + 1386 * t15634 - 275 * t15636 - 11 + (-3860 * t15630 + 3555 * t15632 - 1686 * t15634 + 325 * t15636 + 61) * t15625) * np.cos((11 * phi1 - phi2))

        if Bindx == 1857:
            t15643 = np.sin(phi)
            t15639 = t15643 ** 2
            t15640 = t15643 * t15639
            t15641 = t15640 ** 2
            t15638 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.676039e6) * t15641 ** 2 * (25 * t15638 ** 2 - 1) * np.sin((11 * phi1)) * ((1 - t15638) ** (-0.1e1 / 0.2e1)) * ((1 + t15638) ** (-0.1e1 / 0.2e1))

        if Bindx == 1858:
            t15644 = np.cos(phi)
            t15645 = t15644 ** 2
            t15646 = t15644 * t15645
            t15649 = t15646 ** 2
            t15655 = t15649 ** 2
            t15647 = t15645 ** 2
            t15648 = t15644 * t15647
            t15653 = t15648 ** 2
            t15651 = t15647 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (-330 * t15645 - 630 * t15646 + 1485 * t15647 + 2235 * t15648 - 2860 * t15649 + 2805 * t15651 - 1386 * t15653 + 275 * t15655 + 11 + (-3860 * t15649 + 3555 * t15651 - 1686 * t15653 + 325 * t15655 + 61) * t15644) * np.cos((11 * phi1 + phi2))

        if Bindx == 1859:
            t15665 = np.sin(phi)
            t15661 = t15665 ** 2
            t15663 = t15665 * t15661 ** 2
            t15657 = np.cos(phi)
            t15658 = t15657 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t15663 ** 2 * (-22 * t15657 - 1 + (110 * t15657 + 24 + 65 * t15658) * t15658) * np.sin((11 * phi1 + 2 * phi2)) * ((1 - t15657) ** (-0.1e1 / 0.2e1)) * ((1 + t15657) ** (-0.1e1 / 0.2e1))

        if Bindx == 1860:
            t15666 = np.cos(phi)
            t15667 = t15666 ** 2
            t15668 = t15666 * t15667
            t15671 = t15668 ** 2
            t15677 = t15671 ** 2
            t15669 = t15667 ** 2
            t15670 = t15666 * t15669
            t15675 = t15670 ** 2
            t15673 = t15669 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.408595e6) * (-26 * t15667 + 214 * t15668 + 259 * t15669 - 521 * t15670 - 796 * t15671 + 1079 * t15673 - 682 * t15675 + 165 * t15677 + 1 + (484 * t15671 - 61 * t15673 - 154 * t15675 + 65 * t15677 - 27) * t15666) * np.cos((11 * phi1 + 3 * phi2))

        if Bindx == 1861:
            t15688 = np.sin(phi)
            t15685 = t15688 ** 2
            t15686 = t15685 ** 2
            t15679 = np.cos(phi)
            t15680 = t15679 ** 2
            t15682 = t15680 ** 2
            t15681 = t15679 * t15680
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.4807e4) * t15686 ** 2 * (-361 * t15680 + 1169 * t15682 + 19 + (176 + 325 * t15681) * t15681 + (1100 * t15682 - 124) * t15679) * np.sin((11 * phi1 + 4 * phi2)) * ((1 - t15679) ** (-0.1e1 / 0.2e1)) * ((1 + t15679) ** (-0.1e1 / 0.2e1))

        if Bindx == 1862:
            t15689 = np.cos(phi)
            t15690 = t15689 ** 2
            t15691 = t15689 * t15690
            t15694 = t15691 ** 2
            t15700 = t15694 ** 2
            t15692 = t15690 ** 2
            t15693 = t15689 * t15692
            t15698 = t15693 ** 2
            t15696 = t15692 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (666 * t15690 + 310 * t15691 - 2711 * t15692 - 3357 * t15693 + 3132 * t15694 + 765 * t15696 - 3190 * t15698 + 1375 * t15700 - 37 + (7236 * t15694 - 5641 * t15696 + 1062 * t15698 + 325 * t15700 + 65) * t15689) * np.cos((11 * phi1 + 5 * phi2))

        if Bindx == 1863:
            t15713 = np.sin(phi)
            t15710 = t15713 ** 2
            t15711 = t15713 * t15710
            t15702 = np.cos(phi)
            t15703 = t15702 ** 2
            t15704 = t15702 * t15703
            t15707 = t15704 ** 2
            t15705 = t15703 ** 2
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.253e3) * t15711 ** 2 * (-590 * t15703 - 1370 * t15704 + 3134 * t15707 + 59 + (-240 + 325 * t15705) * t15705 + (2354 * t15705 + 1650 * t15707 + 54) * t15702) * np.sin((11 * phi1 + 6 * phi2)) * ((1 - t15702) ** (-0.1e1 / 0.2e1)) * ((1 + t15702) ** (-0.1e1 / 0.2e1))

        if Bindx == 1864:
            t15714 = np.cos(phi)
            t15715 = t15714 ** 2
            t15716 = t15714 * t15715
            t15719 = t15716 ** 2
            t15725 = t15719 ** 2
            t15717 = t15715 ** 2
            t15718 = t15714 * t15717
            t15723 = t15718 ** 2
            t15721 = t15717 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-102 * t15715 - 518 * t15716 - 337 * t15717 + 1071 * t15718 + 1836 * t15719 - 1953 * t15721 + 154 * t15723 + 385 * t15725 + 17 + (108 * t15719 - 1537 * t15721 + 762 * t15723 + 65 * t15725 + 49) * t15714) * np.cos((11 * phi1 + 7 * phi2))

        if Bindx == 1865:
            t15739 = np.sin(phi)
            t15737 = t15739 ** 2
            t15727 = np.cos(phi)
            t15728 = t15727 ** 2
            t15730 = t15728 ** 2
            t15734 = t15730 ** 2
            t15729 = t15727 * t15728
            t15732 = t15729 ** 2
            t15731 = t15727 * t15730
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * t15737 ** 2 * (69 * t15728 - 432 * t15729 - 1050 * t15730 + 714 * t15732 + 1203 * t15734 + 23 + (-672 + 65 * t15731) * t15731 + (1584 * t15732 + 440 * t15734 + 104) * t15727) * np.sin((11 * phi1 + 8 * phi2)) * ((1 - t15727) ** (-0.1e1 / 0.2e1)) * ((1 + t15727) ** (-0.1e1 / 0.2e1))

        if Bindx == 1866:
            t15740 = np.cos(phi)
            t15741 = t15740 ** 2
            t15742 = t15740 * t15741
            t15745 = t15742 ** 2
            t15751 = t15745 ** 2
            t15743 = t15741 ** 2
            t15744 = t15740 * t15743
            t15749 = t15744 ** 2
            t15747 = t15743 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.23e2) * (-1490 * t15741 + 1650 * t15742 + 8965 * t15743 + 9867 * t15744 - 4092 * t15745 - 15675 * t15747 + 9966 * t15749 + 2475 * t15751 - 149 + (-19140 * t15745 + 715 * t15747 + 7474 * t15749 + 325 * t15751 - 891) * t15740) * np.cos((11 * phi1 + 9 * phi2))

        if Bindx == 1867:
            t15754 = np.cos(phi)
            t15755 = t15754 ** 2
            t15757 = t15755 ** 2
            t15758 = t15754 * t15757
            t15763 = t15758 ** 2
            t15761 = t15757 ** 2
            t15756 = t15754 * t15755
            t15759 = t15756 ** 2
            t15753 = np.sin(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * t15753 ** 2 * (3740 * t15755 + 3190 * t15756 - 6105 * t15757 - 18876 * t15758 + 16665 * t15761 + 9812 * t15763 + 187 + (-18480 + 325 * t15759) * t15759 + (-660 * t15759 + 18370 * t15761 + 2750 * t15763 + 1370) * t15754) * np.sin((11 * phi1 + 10 * phi2)) * ((1 - t15754) ** (-0.1e1 / 0.2e1)) * ((1 + t15754) ** (-0.1e1 / 0.2e1))

        if Bindx == 1868:
            t15766 = np.cos(phi)
            t15767 = t15766 ** 2
            t15768 = t15766 * t15767
            t15771 = t15768 ** 2
            t15777 = t15771 ** 2
            t15769 = t15767 ** 2
            t15770 = t15766 * t15769
            t15775 = t15770 ** 2
            t15773 = t15769 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * (6870 * t15767 + 11110 * t15768 + 2695 * t15769 - 22077 * t15770 - 41052 * t15771 + 6435 * t15773 + 25894 * t15775 + 3025 * t15777 + 229 + (-28380 * t15771 + 29095 * t15773 + 12054 * t15775 + 325 * t15777 + 1969) * t15766) * np.cos((11 * phi1 + 11 * phi2))

        if Bindx == 1869:
            t15780 = np.cos(phi)
            t15781 = t15780 ** 2
            t15783 = t15781 ** 2
            t15784 = t15780 * t15783
            t15789 = t15784 ** 2
            t15787 = t15783 ** 2
            t15782 = t15780 * t15781
            t15785 = t15782 ** 2
            t15779 = np.sin(phi)
            tfunc[..., c] = 0.135e3 / 0.4096e4 * t15779 ** 2 * (-462 * t15781 - 1100 * t15782 - 1485 * t15783 - 792 * t15784 + 2475 * t15787 + 594 * t15789 - 11 + (924 + 13 * t15785) * t15785 + (2376 * t15785 + 1540 * t15787 + 132 * t15789 - 108) * t15780) * np.sin((11 * phi1 + 12 * phi2)) * ((1 - t15780) ** (-0.1e1 / 0.2e1)) * ((1 + t15780) ** (-0.1e1 / 0.2e1))

        if Bindx == 1870:
            t15792 = np.cos(phi)
            t15793 = t15792 ** 2
            t15794 = t15792 * t15793
            t15797 = t15794 ** 2
            t15803 = t15797 ** 2
            t15795 = t15793 ** 2
            t15796 = t15792 * t15795
            t15801 = t15796 ** 2
            t15799 = t15795 ** 2
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (-54 * t15793 - 154 * t15794 - 275 * t15795 - 297 * t15796 - 132 * t15797 + 297 * t15799 + 154 * t15801 + 11 * t15803 - 1 + (132 * t15797 + 275 * t15799 + 54 * t15801 + t15803 - 11) * t15792) * np.cos((11 * phi1 + 13 * phi2))

        if Bindx == 1871:
            t15805 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.13e2) * ((1 - t15805) ** (0.25e2 / 0.2e1)) * np.sqrt((1 + t15805)) * np.sin((12 * phi1 - 13 * phi2))

        if Bindx == 1872:
            t15806 = np.cos(phi)
            t15807 = t15806 ** 2
            t15808 = t15806 * t15807
            t15811 = t15808 ** 2
            t15817 = t15811 ** 2
            t15809 = t15807 ** 2
            t15810 = t15806 * t15809
            t15815 = t15810 ** 2
            t15813 = t15809 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (636 * t15807 - 1782 * t15808 + 3080 * t15809 - 3069 * t15810 + 792 * t15811 - 4356 * t15813 - 2068 * t15815 - 144 * t15817 + 12 + (2508 * t15811 + 3795 * t15813 + 714 * t15815 + 13 * t15817 - 131) * t15806) * np.cos((12 * phi1 - 12 * phi2))

        if Bindx == 1873:
            t15820 = np.cos(phi)
            t15821 = t15820 ** 2
            t15823 = t15821 ** 2
            t15824 = t15820 * t15823
            t15829 = t15824 ** 2
            t15827 = t15823 ** 2
            t15822 = t15820 * t15821
            t15825 = t15822 ** 2
            t15819 = np.sin(phi)
            tfunc[..., c] = 0.135e3 / 0.4096e4 * t15819 ** 2 * (-462 * t15821 + 1100 * t15822 - 1485 * t15823 + 792 * t15824 + 2475 * t15827 + 594 * t15829 - 11 + (924 + 13 * t15825) * t15825 + (-2376 * t15825 - 1540 * t15827 - 132 * t15829 + 108) * t15820) * np.sin((12 * phi1 - 11 * phi2)) * ((1 - t15820) ** (-0.1e1 / 0.2e1)) * ((1 + t15820) ** (-0.1e1 / 0.2e1))

        if Bindx == 1874:
            t15832 = np.cos(phi)
            t15833 = t15832 ** 2
            t15834 = t15832 * t15833
            t15837 = t15834 ** 2
            t15843 = t15837 ** 2
            t15835 = t15833 ** 2
            t15836 = t15832 * t15835
            t15841 = t15836 ** 2
            t15839 = t15835 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * (-310 * t15833 + 528 * t15834 - 220 * t15835 - 825 * t15836 + 1716 * t15837 - 66 * t15839 - 990 * t15841 - 120 * t15843 - 10 + (-1320 * t15837 + 1045 * t15839 + 472 * t15841 + 13 * t15843 + 87) * t15832) * np.cos((12 * phi1 - 10 * phi2))

        if Bindx == 1875:
            t15857 = np.sin(phi)
            t15855 = t15857 ** 2
            t15845 = np.cos(phi)
            t15846 = t15845 ** 2
            t15848 = t15846 ** 2
            t15852 = t15848 ** 2
            t15847 = t15845 * t15846
            t15850 = t15847 ** 2
            t15849 = t15845 * t15848
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t15855 ** 2 * (-207 * t15846 + 288 * t15847 - 42 * t15848 + 882 * t15850 + 387 * t15852 - 9 + (-504 + 13 * t15849) * t15849 + (-768 * t15850 - 108 * t15852 + 68) * t15845) * np.sin((12 * phi1 - 9 * phi2)) * ((1 - t15845) ** (-0.1e1 / 0.2e1)) * ((1 + t15845) ** (-0.1e1 / 0.2e1))

        if Bindx == 1876:
            t15858 = np.cos(phi)
            t15859 = t15858 ** 2
            t15860 = t15858 * t15859
            t15863 = t15860 ** 2
            t15869 = t15863 ** 2
            t15861 = t15859 ** 2
            t15862 = t15858 * t15861
            t15867 = t15862 ** 2
            t15865 = t15861 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1265e4) * (104 * t15859 + 18 * t15860 - 400 * t15861 + 579 * t15862 - 48 * t15863 + 744 * t15865 - 312 * t15867 - 96 * t15869 + 8 + (-708 * t15863 - 125 * t15865 + 274 * t15867 + 13 * t15869 - 51) * t15858) * np.cos((12 * phi1 - 8 * phi2))

        if Bindx == 1877:
            t15882 = np.sin(phi)
            t15879 = t15882 ** 2
            t15880 = t15882 * t15879
            t15871 = np.cos(phi)
            t15872 = t15871 ** 2
            t15873 = t15871 * t15872
            t15876 = t15873 ** 2
            t15874 = t15872 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t15880 ** 2 * (-56 * t15872 - 28 * t15873 + 224 * t15876 - 7 + (210 + 13 * t15874) * t15874 + (-308 * t15874 - 84 * t15876 + 36) * t15871) * np.sin((12 * phi1 - 7 * phi2)) * ((1 - t15871) ** (-0.1e1 / 0.2e1)) * ((1 + t15871) ** (-0.1e1 / 0.2e1))

        if Bindx == 1878:
            t15883 = np.cos(phi)
            t15884 = t15883 ** 2
            t15885 = t15883 * t15884
            t15888 = t15885 ** 2
            t15894 = t15888 ** 2
            t15886 = t15884 ** 2
            t15887 = t15883 * t15886
            t15892 = t15887 ** 2
            t15890 = t15886 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (6 * t15884 - 144 * t15885 + 188 * t15886 + 135 * t15887 - 468 * t15888 + 306 * t15890 + 46 * t15892 - 72 * t15894 - 6 + (216 * t15888 - 363 * t15890 + 120 * t15892 + 13 * t15894 + 23) * t15883) * np.cos((12 * phi1 - 6 * phi2))

        if Bindx == 1879:
            t15905 = np.sin(phi)
            t15902 = t15905 ** 2
            t15903 = t15902 ** 2
            t15896 = np.cos(phi)
            t15897 = t15896 ** 2
            t15899 = t15897 ** 2
            t15898 = t15896 * t15897
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * t15903 ** 2 * (15 * t15897 + 105 * t15899 - 5 + (-80 + 13 * t15898) * t15898 + (-60 * t15899 + 12) * t15896) * np.sin((12 * phi1 - 5 * phi2)) * ((1 - t15896) ** (-0.1e1 / 0.2e1)) * ((1 + t15896) ** (-0.1e1 / 0.2e1))

        if Bindx == 1880:
            t15906 = np.cos(phi)
            t15907 = t15906 ** 2
            t15908 = t15906 * t15907
            t15911 = t15908 ** 2
            t15917 = t15911 ** 2
            t15909 = t15907 ** 2
            t15910 = t15906 * t15909
            t15915 = t15910 ** 2
            t15913 = t15909 ** 2
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (-44 * t15907 + 74 * t15908 + 88 * t15909 - 253 * t15910 + 8 * t15911 - 172 * t15913 + 164 * t15915 - 48 * t15917 + 4 + (332 * t15911 - 173 * t15913 + 10 * t15915 + 13 * t15917 - 3) * t15906) * np.cos((12 * phi1 - 4 * phi2))

        if Bindx == 1881:
            t15927 = np.sin(phi)
            t15923 = t15927 ** 2
            t15925 = t15927 * t15923 ** 2
            t15919 = np.cos(phi)
            t15920 = t15919 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.408595e6) * t15925 ** 2 * (-4 * t15919 - 3 + (-36 * t15919 + 30 + 13 * t15920) * t15920) * np.sin((12 * phi1 - 3 * phi2)) * ((1 - t15919) ** (-0.1e1 / 0.2e1)) * ((1 + t15919) ** (-0.1e1 / 0.2e1))

        if Bindx == 1882:
            t15928 = np.cos(phi)
            t15929 = t15928 ** 2
            t15930 = t15928 * t15929
            t15933 = t15930 ** 2
            t15939 = t15933 ** 2
            t15931 = t15929 ** 2
            t15932 = t15928 * t15931
            t15937 = t15932 ** 2
            t15935 = t15931 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.37145e5) * (34 * t15929 + 32 * t15930 - 140 * t15931 - 25 * t15932 + 260 * t15933 - 250 * t15935 + 122 * t15937 - 24 * t15939 - 2 + (-40 * t15933 + 85 * t15935 - 56 * t15937 + 13 * t15939 - 9) * t15928) * np.cos((12 * phi1 - 2 * phi2))

        if Bindx == 1883:
            t15946 = np.sin(phi)
            t15942 = t15946 ** 2
            t15943 = t15946 * t15942
            t15944 = t15943 ** 2
            t15941 = np.cos(phi)
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.7429e4) * t15944 ** 2 * (-1 + (-12 + 13 * t15941) * t15941) * np.sin((12 * phi1 - phi2)) * ((1 - t15941) ** (-0.1e1 / 0.2e1)) * ((1 + t15941) ** (-0.1e1 / 0.2e1))

        if Bindx == 1884:
            t15947 = np.cos(phi)
            t15948 = t15947 ** 2
            t15954 = -6 * t15948
            t15949 = t15948 ** 2
            t15950 = t15948 * t15949
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * t15947 * np.cos((12 * phi1)) * (t15954 + 1 + (-20 + t15950) * t15950 + (15 + (t15954 + 15) * t15949) * t15949)

        if Bindx == 1885:
            t15960 = np.sin(phi)
            t15956 = t15960 ** 2
            t15957 = t15960 * t15956
            t15958 = t15957 ** 2
            t15955 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.7429e4) * t15958 ** 2 * (-1 + (12 + 13 * t15955) * t15955) * np.sin((12 * phi1 + phi2)) * ((1 - t15955) ** (-0.1e1 / 0.2e1)) * ((1 + t15955) ** (-0.1e1 / 0.2e1))

        if Bindx == 1886:
            t15961 = np.cos(phi)
            t15962 = t15961 ** 2
            t15963 = t15961 * t15962
            t15966 = t15963 ** 2
            t15972 = t15966 ** 2
            t15964 = t15962 ** 2
            t15965 = t15961 * t15964
            t15970 = t15965 ** 2
            t15968 = t15964 ** 2
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.37145e5) * (-34 * t15962 + 32 * t15963 + 140 * t15964 - 25 * t15965 - 260 * t15966 + 250 * t15968 - 122 * t15970 + 24 * t15972 + 2 + (-40 * t15966 + 85 * t15968 - 56 * t15970 + 13 * t15972 - 9) * t15961) * np.cos((12 * phi1 + 2 * phi2))

        if Bindx == 1887:
            t15982 = np.sin(phi)
            t15978 = t15982 ** 2
            t15980 = t15982 * t15978 ** 2
            t15974 = np.cos(phi)
            t15975 = t15974 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.408595e6) * t15980 ** 2 * (4 * t15974 - 3 + (36 * t15974 + 30 + 13 * t15975) * t15975) * np.sin((12 * phi1 + 3 * phi2)) * ((1 - t15974) ** (-0.1e1 / 0.2e1)) * ((1 + t15974) ** (-0.1e1 / 0.2e1))

        if Bindx == 1888:
            t15983 = np.cos(phi)
            t15984 = t15983 ** 2
            t15985 = t15983 * t15984
            t15988 = t15985 ** 2
            t15994 = t15988 ** 2
            t15986 = t15984 ** 2
            t15987 = t15983 * t15986
            t15992 = t15987 ** 2
            t15990 = t15986 ** 2
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * (44 * t15984 + 74 * t15985 - 88 * t15986 - 253 * t15987 - 8 * t15988 + 172 * t15990 - 164 * t15992 + 48 * t15994 - 4 + (332 * t15988 - 173 * t15990 + 10 * t15992 + 13 * t15994 - 3) * t15983) * np.cos((12 * phi1 + 4 * phi2))

        if Bindx == 1889:
            t16005 = np.sin(phi)
            t16002 = t16005 ** 2
            t16003 = t16002 ** 2
            t15996 = np.cos(phi)
            t15997 = t15996 ** 2
            t15999 = t15997 ** 2
            t15998 = t15996 * t15997
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * t16003 ** 2 * (15 * t15997 + 105 * t15999 - 5 + (80 + 13 * t15998) * t15998 + (60 * t15999 - 12) * t15996) * np.sin((12 * phi1 + 5 * phi2)) * ((1 - t15996) ** (-0.1e1 / 0.2e1)) * ((1 + t15996) ** (-0.1e1 / 0.2e1))

        if Bindx == 1890:
            t16006 = np.cos(phi)
            t16007 = t16006 ** 2
            t16008 = t16006 * t16007
            t16011 = t16008 ** 2
            t16017 = t16011 ** 2
            t16009 = t16007 ** 2
            t16010 = t16006 * t16009
            t16015 = t16010 ** 2
            t16013 = t16009 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (-6 * t16007 - 144 * t16008 - 188 * t16009 + 135 * t16010 + 468 * t16011 - 306 * t16013 - 46 * t16015 + 72 * t16017 + 6 + (216 * t16011 - 363 * t16013 + 120 * t16015 + 13 * t16017 + 23) * t16006) * np.cos((12 * phi1 + 6 * phi2))

        if Bindx == 1891:
            t16030 = np.sin(phi)
            t16027 = t16030 ** 2
            t16028 = t16030 * t16027
            t16019 = np.cos(phi)
            t16020 = t16019 ** 2
            t16021 = t16019 * t16020
            t16024 = t16021 ** 2
            t16022 = t16020 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.8855e4) * t16028 ** 2 * (-56 * t16020 + 28 * t16021 + 224 * t16024 - 7 + (210 + 13 * t16022) * t16022 + (308 * t16022 + 84 * t16024 - 36) * t16019) * np.sin((12 * phi1 + 7 * phi2)) * ((1 - t16019) ** (-0.1e1 / 0.2e1)) * ((1 + t16019) ** (-0.1e1 / 0.2e1))

        if Bindx == 1892:
            t16031 = np.cos(phi)
            t16032 = t16031 ** 2
            t16033 = t16031 * t16032
            t16036 = t16033 ** 2
            t16042 = t16036 ** 2
            t16034 = t16032 ** 2
            t16035 = t16031 * t16034
            t16040 = t16035 ** 2
            t16038 = t16034 ** 2
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.1265e4) * (-104 * t16032 + 18 * t16033 + 400 * t16034 + 579 * t16035 + 48 * t16036 - 744 * t16038 + 312 * t16040 + 96 * t16042 - 8 + (-708 * t16036 - 125 * t16038 + 274 * t16040 + 13 * t16042 - 51) * t16031) * np.cos((12 * phi1 + 8 * phi2))

        if Bindx == 1893:
            t16056 = np.sin(phi)
            t16054 = t16056 ** 2
            t16044 = np.cos(phi)
            t16045 = t16044 ** 2
            t16047 = t16045 ** 2
            t16051 = t16047 ** 2
            t16046 = t16044 * t16045
            t16049 = t16046 ** 2
            t16048 = t16044 * t16047
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t16054 ** 2 * (-207 * t16045 - 288 * t16046 - 42 * t16047 + 882 * t16049 + 387 * t16051 - 9 + (504 + 13 * t16048) * t16048 + (768 * t16049 + 108 * t16051 - 68) * t16044) * np.sin((12 * phi1 + 9 * phi2)) * ((1 - t16044) ** (-0.1e1 / 0.2e1)) * ((1 + t16044) ** (-0.1e1 / 0.2e1))

        if Bindx == 1894:
            t16057 = np.cos(phi)
            t16058 = t16057 ** 2
            t16059 = t16057 * t16058
            t16062 = t16059 ** 2
            t16068 = t16062 ** 2
            t16060 = t16058 ** 2
            t16061 = t16057 * t16060
            t16066 = t16061 ** 2
            t16064 = t16060 ** 2
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.2e1) * (310 * t16058 + 528 * t16059 + 220 * t16060 - 825 * t16061 - 1716 * t16062 + 66 * t16064 + 990 * t16066 + 120 * t16068 + 10 + (-1320 * t16062 + 1045 * t16064 + 472 * t16066 + 13 * t16068 + 87) * t16057) * np.cos((12 * phi1 + 10 * phi2))

        if Bindx == 1895:
            t16071 = np.cos(phi)
            t16072 = t16071 ** 2
            t16074 = t16072 ** 2
            t16075 = t16071 * t16074
            t16080 = t16075 ** 2
            t16078 = t16074 ** 2
            t16073 = t16071 * t16072
            t16076 = t16073 ** 2
            t16070 = np.sin(phi)
            tfunc[..., c] = -0.135e3 / 0.4096e4 * t16070 ** 2 * (-462 * t16072 - 1100 * t16073 - 1485 * t16074 - 792 * t16075 + 2475 * t16078 + 594 * t16080 - 11 + (924 + 13 * t16076) * t16076 + (2376 * t16076 + 1540 * t16078 + 132 * t16080 - 108) * t16071) * np.sin((12 * phi1 + 11 * phi2)) * ((1 - t16071) ** (-0.1e1 / 0.2e1)) * ((1 + t16071) ** (-0.1e1 / 0.2e1))

        if Bindx == 1896:
            t16083 = np.cos(phi)
            t16084 = t16083 ** 2
            t16085 = t16083 * t16084
            t16088 = t16085 ** 2
            t16094 = t16088 ** 2
            t16086 = t16084 ** 2
            t16087 = t16083 * t16086
            t16092 = t16087 ** 2
            t16090 = t16086 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * (-636 * t16084 - 1782 * t16085 - 3080 * t16086 - 3069 * t16087 - 792 * t16088 + 4356 * t16090 + 2068 * t16092 + 144 * t16094 - 12 + (2508 * t16088 + 3795 * t16090 + 714 * t16092 + 13 * t16094 - 131) * t16083) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 1897:
            t16096 = np.cos(phi)
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.13e2) * np.sqrt((1 - t16096)) * ((1 + t16096) ** (0.25e2 / 0.2e1)) * np.sin((12 * phi1 + 13 * phi2))

        if Bindx == 1898:
            t16097 = np.cos(phi)
            t16098 = t16097 ** 2
            t16099 = t16097 * t16098
            t16102 = t16099 ** 2
            t16108 = t16102 ** 2
            t16100 = t16098 ** 2
            t16101 = t16097 * t16100
            t16106 = t16101 ** 2
            t16104 = t16100 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.cos((13 * phi1 - 13 * phi2)) * (-78 * t16098 + 286 * t16099 - 715 * t16100 + 1287 * t16101 - 1716 * t16102 - 1287 * t16104 - 286 * t16106 - 13 * t16108 - 1 + (1716 * t16102 + 715 * t16104 + 78 * t16106 + t16108 + 13) * t16097)

        if Bindx == 1899:
            t16110 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.13e2) * ((1 - t16110) ** (0.25e2 / 0.2e1)) * np.sqrt((1 + t16110)) * np.sin((13 * phi1 - 12 * phi2))

        if Bindx == 1900:
            t16111 = np.cos(phi)
            t16112 = t16111 ** 2
            t16113 = t16111 * t16112
            t16116 = t16113 ** 2
            t16124 = 132 * t16116
            t16122 = t16116 ** 2
            t16114 = t16112 ** 2
            t16115 = t16111 * t16114
            t16120 = t16115 ** 2
            t16118 = t16114 ** 2
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (54 * t16112 - 154 * t16113 + 275 * t16114 - 297 * t16115 - 297 * t16118 - 154 * t16120 - 11 * t16122 + t16124 + 1 + (275 * t16118 + 54 * t16120 + t16122 + t16124 - 11) * t16111) * np.cos((13 * phi1 - 11 * phi2))

        if Bindx == 1901:
            t16125 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.13e2) * ((1 - t16125) ** (0.23e2 / 0.2e1)) * ((1 + t16125) ** (0.3e1 / 0.2e1)) * np.sin((13 * phi1 - 10 * phi2))

        if Bindx == 1902:
            t16126 = np.cos(phi)
            t16127 = t16126 ** 2
            t16128 = t16126 * t16127
            t16131 = t16128 ** 2
            t16137 = t16131 ** 2
            t16129 = t16127 ** 2
            t16130 = t16126 * t16129
            t16135 = t16130 ** 2
            t16133 = t16129 ** 2
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.299e3) * np.cos((13 * phi1 - 9 * phi2)) * (-34 * t16127 + 66 * t16128 - 55 * t16129 - 33 * t16130 + 132 * t16131 + 33 * t16133 - 66 * t16135 - 9 * t16137 - 1 + (-132 * t16131 + 55 * t16133 + 34 * t16135 + t16137 + 9) * t16126)

        if Bindx == 1903:
            t16139 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.16445e5) * ((1 - t16139) ** (0.21e2 / 0.2e1)) * ((1 + t16139) ** (0.5e1 / 0.2e1)) * np.sin((13 * phi1 - 8 * phi2))

        if Bindx == 1904:
            t16140 = np.cos(phi)
            t16141 = t16140 ** 2
            t16142 = t16140 * t16141
            t16145 = t16142 ** 2
            t16153 = -36 * t16145
            t16151 = t16145 ** 2
            t16143 = t16141 ** 2
            t16144 = t16140 * t16143
            t16149 = t16144 ** 2
            t16147 = t16143 ** 2
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.115115e6) * np.cos((13 * phi1 - 7 * phi2)) * (18 * t16141 - 14 * t16142 - 25 * t16143 + 63 * t16144 + 63 * t16147 - 14 * t16149 - 7 * t16151 + t16153 + 1 + (-25 * t16147 + 18 * t16149 + t16151 + t16153 - 7) * t16140)

        if Bindx == 1905:
            t16154 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.3289e4) * ((1 - t16154) ** (0.19e2 / 0.2e1)) * ((1 + t16154) ** (0.7e1 / 0.2e1)) * np.sin((13 * phi1 - 6 * phi2))

        if Bindx == 1906:
            t16155 = np.cos(phi)
            t16156 = t16155 ** 2
            t16157 = t16155 * t16156
            t16160 = t16157 ** 2
            t16166 = t16160 ** 2
            t16158 = t16156 ** 2
            t16159 = t16155 * t16158
            t16164 = t16159 ** 2
            t16162 = t16158 ** 2
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62491e5) * np.cos((13 * phi1 - 5 * phi2)) * (-6 * t16156 - 10 * t16157 + 29 * t16158 - 9 * t16159 - 36 * t16160 + 9 * t16162 + 10 * t16164 - 5 * t16166 - 1 + (36 * t16160 - 29 * t16162 + 6 * t16164 + t16166 + 5) * t16155)

        if Bindx == 1907:
            t16168 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.62491e5) * ((1 - t16168) ** (0.17e2 / 0.2e1)) * ((1 + t16168) ** (0.9e1 / 0.2e1)) * np.sin((13 * phi1 - 4 * phi2))

        if Bindx == 1908:
            t16169 = np.cos(phi)
            t16170 = t16169 ** 2
            t16171 = t16169 * t16170
            t16174 = t16171 ** 2
            t16182 = 20 * t16174
            t16180 = t16174 ** 2
            t16172 = t16170 ** 2
            t16173 = t16169 * t16172
            t16178 = t16173 ** 2
            t16176 = t16172 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5311735e7) * np.cos((13 * phi1 - 3 * phi2)) * (-2 * t16170 + 14 * t16171 - 5 * t16172 - 25 * t16173 - 25 * t16176 + 14 * t16178 - 3 * t16180 + t16182 + 1 + (-5 * t16176 - 2 * t16178 + t16180 + t16182 - 3) * t16169)

        if Bindx == 1909:
            t16183 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * ((1 - t16183) ** (0.15e2 / 0.2e1)) * ((1 + t16183) ** (0.11e2 / 0.2e1)) * np.sin((13 * phi1 - 2 * phi2))

        if Bindx == 1910:
            t16184 = np.cos(phi)
            t16185 = t16184 ** 2
            t16187 = t16185 ** 2
            t16188 = t16184 * t16187
            t16186 = t16184 * t16185
            t16189 = t16186 ** 2
            t16197 = 15 * t16187 ** 2 - 6 * t16188 ** 2 + 1 + (-20 + t16189) * t16189
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.96577e5) * np.cos((13 * phi1 - phi2)) * (t16197 * t16184 + 6 * t16185 - 6 * t16186 - 15 * t16187 + 15 * t16188 - t16197)

        if Bindx == 1911:
            t16198 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.52003e5) * ((1 - t16198) ** (0.13e2 / 0.2e1)) * ((1 + t16198) ** (0.13e2 / 0.2e1)) * np.sin((13 * phi1))

        if Bindx == 1912:
            t16199 = np.cos(phi)
            t16200 = t16199 ** 2
            t16202 = t16200 ** 2
            t16203 = t16199 * t16202
            t16201 = t16199 * t16200
            t16204 = t16201 ** 2
            t16215 = 15 * t16202 ** 2 - 6 * t16203 ** 2 + 1 + (-20 + t16204) * t16204
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.96577e5) * np.cos((13 * phi1 + phi2)) * (t16215 * t16199 - 6 * t16200 - 6 * t16201 + 15 * t16202 + 15 * t16203 + t16215)

        if Bindx == 1913:
            t16216 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * ((1 - t16216) ** (0.11e2 / 0.2e1)) * ((1 + t16216) ** (0.15e2 / 0.2e1)) * np.sin((13 * phi1 + 2 * phi2))

        if Bindx == 1914:
            t16217 = np.cos(phi)
            t16218 = t16217 ** 2
            t16219 = t16217 * t16218
            t16222 = t16219 ** 2
            t16228 = t16222 ** 2
            t16220 = t16218 ** 2
            t16221 = t16217 * t16220
            t16226 = t16221 ** 2
            t16224 = t16220 ** 2
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5311735e7) * np.cos((13 * phi1 + 3 * phi2)) * (2 * t16218 + 14 * t16219 + 5 * t16220 - 25 * t16221 - 20 * t16222 + 25 * t16224 - 14 * t16226 + 3 * t16228 - 1 + (20 * t16222 - 5 * t16224 - 2 * t16226 + t16228 - 3) * t16217)

        if Bindx == 1915:
            t16230 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.62491e5) * ((1 - t16230) ** (0.9e1 / 0.2e1)) * ((1 + t16230) ** (0.17e2 / 0.2e1)) * np.sin((13 * phi1 + 4 * phi2))

        if Bindx == 1916:
            t16231 = np.cos(phi)
            t16232 = t16231 ** 2
            t16233 = t16231 * t16232
            t16236 = t16233 ** 2
            t16244 = 36 * t16236
            t16242 = t16236 ** 2
            t16234 = t16232 ** 2
            t16235 = t16231 * t16234
            t16240 = t16235 ** 2
            t16238 = t16234 ** 2
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62491e5) * np.cos((13 * phi1 + 5 * phi2)) * (6 * t16232 - 10 * t16233 - 29 * t16234 - 9 * t16235 - 9 * t16238 - 10 * t16240 + 5 * t16242 + t16244 + 1 + (-29 * t16238 + 6 * t16240 + t16242 + t16244 + 5) * t16231)

        if Bindx == 1917:
            t16245 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.3289e4) * ((1 - t16245) ** (0.7e1 / 0.2e1)) * ((1 + t16245) ** (0.19e2 / 0.2e1)) * np.sin((13 * phi1 + 6 * phi2))

        if Bindx == 1918:
            t16246 = np.cos(phi)
            t16247 = t16246 ** 2
            t16248 = t16246 * t16247
            t16251 = t16248 ** 2
            t16257 = t16251 ** 2
            t16249 = t16247 ** 2
            t16250 = t16246 * t16249
            t16255 = t16250 ** 2
            t16253 = t16249 ** 2
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.115115e6) * np.cos((13 * phi1 + 7 * phi2)) * (-18 * t16247 - 14 * t16248 + 25 * t16249 + 63 * t16250 + 36 * t16251 - 63 * t16253 + 14 * t16255 + 7 * t16257 - 1 + (-36 * t16251 - 25 * t16253 + 18 * t16255 + t16257 - 7) * t16246)

        if Bindx == 1919:
            t16259 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.16445e5) * ((1 - t16259) ** (0.5e1 / 0.2e1)) * ((1 + t16259) ** (0.21e2 / 0.2e1)) * np.sin((13 * phi1 + 8 * phi2))

        if Bindx == 1920:
            t16260 = np.cos(phi)
            t16261 = t16260 ** 2
            t16262 = t16260 * t16261
            t16265 = t16262 ** 2
            t16273 = -132 * t16265
            t16271 = t16265 ** 2
            t16263 = t16261 ** 2
            t16264 = t16260 * t16263
            t16269 = t16264 ** 2
            t16267 = t16263 ** 2
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.299e3) * np.cos((13 * phi1 + 9 * phi2)) * (34 * t16261 + 66 * t16262 + 55 * t16263 - 33 * t16264 - 33 * t16267 + 66 * t16269 + 9 * t16271 + t16273 + 1 + (55 * t16267 + 34 * t16269 + t16271 + t16273 + 9) * t16260)

        if Bindx == 1921:
            t16274 = np.cos(phi)
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.13e2) * ((1 - t16274) ** (0.3e1 / 0.2e1)) * ((1 + t16274) ** (0.23e2 / 0.2e1)) * np.sin((13 * phi1 + 10 * phi2))

        if Bindx == 1922:
            t16275 = np.cos(phi)
            t16276 = t16275 ** 2
            t16277 = t16275 * t16276
            t16280 = t16277 ** 2
            t16286 = t16280 ** 2
            t16278 = t16276 ** 2
            t16279 = t16275 * t16278
            t16284 = t16279 ** 2
            t16282 = t16278 ** 2
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (-54 * t16276 - 154 * t16277 - 275 * t16278 - 297 * t16279 - 132 * t16280 + 297 * t16282 + 154 * t16284 + 11 * t16286 - 1 + (132 * t16280 + 275 * t16282 + 54 * t16284 + t16286 - 11) * t16275) * np.cos((13 * phi1 + 11 * phi2))

        if Bindx == 1923:
            t16288 = np.cos(phi)
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.13e2) * ((1 + t16288) ** (0.25e2 / 0.2e1)) * np.sin((13 * phi1 + 12 * phi2)) * np.sqrt((1 - t16288))

        if Bindx == 1924:
            t16289 = np.cos(phi)
            t16290 = t16289 ** 2
            t16291 = t16289 * t16290
            t16294 = t16291 ** 2
            t16302 = 1716 * t16294
            t16300 = t16294 ** 2
            t16292 = t16290 ** 2
            t16293 = t16289 * t16292
            t16298 = t16293 ** 2
            t16296 = t16292 ** 2
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.2e1) * np.cos((13 * phi1 + 13 * phi2)) * (78 * t16290 + 286 * t16291 + 715 * t16292 + 1287 * t16293 + 1287 * t16296 + 286 * t16298 + 13 * t16300 + t16302 + 1 + (715 * t16296 + 78 * t16298 + t16300 + t16302 + 13) * t16289)

        if Bindx == 1925:
            t16303 = np.cos(phi)
            t16304 = t16303 ** 2
            t16305 = t16304 ** 2
            t16306 = t16304 * t16305
            t16309 = t16306 ** 2
            t16307 = t16305 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi2)) * (-21 * t16305 + 35 * t16306 - 35 * t16307 - 7 * t16309 - 1 + (21 * t16307 + t16309 + 7) * t16304)

        if Bindx == 1926:
            t16317 = np.sin(phi)
            t16312 = t16317 ** 2
            t16313 = t16317 * t16312
            t16315 = t16317 * t16313 ** 2
            t16311 = np.cos(phi)
            tfunc[..., c] = 0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t16311 * t16315 ** 2 * np.sin((13 * phi2)) * ((1 + t16311) ** (-0.1e1 / 0.2e1)) * ((1 - t16311) ** (-0.1e1 / 0.2e1))

        if Bindx == 1927:
            t16318 = np.cos(phi)
            t16319 = t16318 ** 2
            t16320 = t16319 ** 2
            t16321 = t16319 * t16320
            t16324 = t16321 ** 2
            t16322 = t16320 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t16320 + 425 * t16321 - 555 * t16322 - 163 * t16324 - 1 + (411 * t16322 + 27 * t16324 + 33) * t16319) * np.cos((12 * phi2))

        if Bindx == 1928:
            t16331 = np.sin(phi)
            t16327 = t16331 ** 2
            t16328 = t16331 * t16327
            t16329 = t16328 ** 2
            t16326 = np.cos(phi)
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t16326 * t16329 ** 2 * (9 * t16326 ** 2 - 1) * np.sin((11 * phi2)) * ((1 + t16326) ** (-0.1e1 / 0.2e1)) * ((1 - t16326) ** (-0.1e1 / 0.2e1))

        if Bindx == 1929:
            t16332 = np.cos(phi)
            t16333 = t16332 ** 2
            t16334 = t16333 ** 2
            t16335 = t16333 * t16334
            t16338 = t16335 ** 2
            t16336 = t16334 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t16334 + 1635 * t16335 - 2755 * t16336 - 1175 * t16338 - 1 + (2501 * t16336 + 225 * t16338 + 55) * t16333) * np.cos((10 * phi2))

        if Bindx == 1930:
            t16347 = np.sin(phi)
            t16343 = t16347 ** 2
            t16345 = t16347 * t16343 ** 2
            t16340 = np.cos(phi)
            t16341 = t16340 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t16340 * t16345 ** 2 * (3 + (-50 + 135 * t16341) * t16341) * np.sin((9 * phi2)) * ((1 + t16340) ** (-0.1e1 / 0.2e1)) * ((1 - t16340) ** (-0.1e1 / 0.2e1))

        if Bindx == 1931:
            t16348 = np.cos(phi)
            t16349 = t16348 ** 2
            t16350 = t16349 ** 2
            t16351 = t16349 * t16350
            t16354 = t16351 ** 2
            t16352 = t16350 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t16350 + 3753 * t16351 - 7867 * t16352 - 4715 * t16354 - 1 + (8579 * t16352 + 1035 * t16354 + 73) * t16349) * np.cos((8 * phi2))

        if Bindx == 1932:
            t16363 = np.sin(phi)
            t16360 = t16363 ** 2
            t16361 = t16360 ** 2
            t16356 = np.cos(phi)
            t16357 = t16356 ** 2
            t16358 = t16357 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t16356 * t16361 ** 2 * (-805 * t16358 - 7 + (1035 * t16358 + 161) * t16357) * np.sin((7 * phi2)) * ((1 + t16356) ** (-0.1e1 / 0.2e1)) * ((1 - t16356) ** (-0.1e1 / 0.2e1))

        if Bindx == 1933:
            t16364 = np.cos(phi)
            t16365 = t16364 ** 2
            t16366 = t16365 ** 2
            t16367 = t16365 * t16366
            t16370 = t16367 ** 2
            t16368 = t16366 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t16366 + 6371 * t16367 - 15747 * t16368 - 12535 * t16370 - 1 + (19941 * t16368 + 3105 * t16370 + 87) * t16365) * np.cos((6 * phi2))

        if Bindx == 1934:
            t16380 = np.sin(phi)
            t16377 = t16380 ** 2
            t16378 = t16380 * t16377
            t16372 = np.cos(phi)
            t16373 = t16372 ** 2
            t16374 = t16373 ** 2
            tfunc[..., c] = 0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t16372 * t16378 ** 2 * (-140 * t16373 + 5 + (-2300 * t16373 + 966 + 1725 * t16374) * t16374) * np.sin((5 * phi2)) * ((1 + t16372) ** (-0.1e1 / 0.2e1)) * ((1 - t16372) ** (-0.1e1 / 0.2e1))

        if Bindx == 1935:
            t16381 = np.cos(phi)
            t16382 = t16381 ** 2
            t16383 = t16382 ** 2
            t16384 = t16382 * t16383
            t16387 = t16384 ** 2
            t16385 = t16383 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t16383 + 8873 * t16384 - 24491 * t16385 - 24035 * t16387 - 1 + (34523 * t16385 + 6555 * t16387 + 97) * t16382) * np.cos((4 * phi2))

        if Bindx == 1936:
            t16397 = np.sin(phi)
            t16395 = t16397 ** 2
            t16389 = np.cos(phi)
            t16390 = t16389 ** 2
            t16391 = t16390 ** 2
            t16393 = t16391 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t16389 * t16395 ** 2 * (-26334 * t16391 - 120175 * t16393 - 99 + (86526 * t16391 + 58995 * t16393 + 3135) * t16390) * np.sin((3 * phi2)) * ((1 + t16389) ** (-0.1e1 / 0.2e1)) * ((1 - t16389) ** (-0.1e1 / 0.2e1))

        if Bindx == 1937:
            t16398 = np.cos(phi)
            t16399 = t16398 ** 2
            t16400 = t16399 ** 2
            t16401 = t16399 * t16400
            t16404 = t16401 ** 2
            t16402 = t16400 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t16400 + 351747 * t16401 - 1033923 * t16402 - 1151495 * t16404 - 33 + (1552661 * t16402 + 334305 * t16404 + 3399) * t16399) * np.cos((2 * phi2))

        if Bindx == 1938:
            t16407 = np.cos(phi)
            t16408 = t16407 ** 2
            t16409 = t16408 ** 2
            t16411 = t16409 ** 2
            t16410 = t16408 * t16409
            t16406 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t16407 * t16406 ** 2 * (138567 * t16409 + 1062347 * t16411 + 429 + (-554268 + 334305 * t16410) * t16410 + (-965770 * t16411 - 14586) * t16408) * np.sin(phi2) * ((1 + t16407) ** (-0.1e1 / 0.2e1)) * ((1 - t16407) ** (-0.1e1 / 0.2e1))

        if Bindx == 1939:
            t16414 = np.cos(phi)
            t16415 = t16414 ** 2
            t16416 = t16415 ** 2
            t16417 = t16415 * t16416
            t16420 = t16417 ** 2
            t16418 = t16416 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t16420 - 0.421936515e9 / 0.2048e4 * t16418 + 0.140645505e9 / 0.2048e4 * t16417 - 0.22207185e8 / 0.2048e4 * t16416 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t16420 + 0.646969323e9 / 0.2048e4 * t16418 + 0.1306305e7 / 0.2048e4) * t16415

        if Bindx == 1940:
            t16423 = np.cos(phi)
            t16424 = t16423 ** 2
            t16425 = t16424 ** 2
            t16427 = t16425 ** 2
            t16426 = t16424 * t16425
            t16422 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t16423 * t16422 ** 2 * (138567 * t16425 + 1062347 * t16427 + 429 + (-554268 + 334305 * t16426) * t16426 + (-965770 * t16427 - 14586) * t16424) * np.sin(phi2) * ((1 + t16423) ** (-0.1e1 / 0.2e1)) * ((1 - t16423) ** (-0.1e1 / 0.2e1))

        if Bindx == 1941:
            t16430 = np.cos(phi)
            t16431 = t16430 ** 2
            t16432 = t16431 ** 2
            t16433 = t16431 * t16432
            t16436 = t16433 ** 2
            t16434 = t16432 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t16432 + 351747 * t16433 - 1033923 * t16434 - 1151495 * t16436 - 33 + (1552661 * t16434 + 334305 * t16436 + 3399) * t16431) * np.cos((2 * phi2))

        if Bindx == 1942:
            t16446 = np.sin(phi)
            t16444 = t16446 ** 2
            t16438 = np.cos(phi)
            t16439 = t16438 ** 2
            t16440 = t16439 ** 2
            t16442 = t16440 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t16438 * t16444 ** 2 * (-26334 * t16440 - 120175 * t16442 - 99 + (86526 * t16440 + 58995 * t16442 + 3135) * t16439) * np.sin((3 * phi2)) * ((1 + t16438) ** (-0.1e1 / 0.2e1)) * ((1 - t16438) ** (-0.1e1 / 0.2e1))

        if Bindx == 1943:
            t16447 = np.cos(phi)
            t16448 = t16447 ** 2
            t16449 = t16448 ** 2
            t16450 = t16448 * t16449
            t16453 = t16450 ** 2
            t16451 = t16449 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t16449 + 8873 * t16450 - 24491 * t16451 - 24035 * t16453 - 1 + (34523 * t16451 + 6555 * t16453 + 97) * t16448) * np.cos((4 * phi2))

        if Bindx == 1944:
            t16463 = np.sin(phi)
            t16460 = t16463 ** 2
            t16461 = t16463 * t16460
            t16455 = np.cos(phi)
            t16456 = t16455 ** 2
            t16457 = t16456 ** 2
            tfunc[..., c] = 0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t16455 * t16461 ** 2 * (-140 * t16456 + 5 + (-2300 * t16456 + 966 + 1725 * t16457) * t16457) * np.sin((5 * phi2)) * ((1 + t16455) ** (-0.1e1 / 0.2e1)) * ((1 - t16455) ** (-0.1e1 / 0.2e1))

        if Bindx == 1945:
            t16464 = np.cos(phi)
            t16465 = t16464 ** 2
            t16466 = t16465 ** 2
            t16467 = t16465 * t16466
            t16470 = t16467 ** 2
            t16468 = t16466 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t16466 + 6371 * t16467 - 15747 * t16468 - 12535 * t16470 - 1 + (19941 * t16468 + 3105 * t16470 + 87) * t16465) * np.cos((6 * phi2))

        if Bindx == 1946:
            t16479 = np.sin(phi)
            t16476 = t16479 ** 2
            t16477 = t16476 ** 2
            t16472 = np.cos(phi)
            t16473 = t16472 ** 2
            t16474 = t16473 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t16472 * t16477 ** 2 * (-805 * t16474 - 7 + (1035 * t16474 + 161) * t16473) * np.sin((7 * phi2)) * ((1 + t16472) ** (-0.1e1 / 0.2e1)) * ((1 - t16472) ** (-0.1e1 / 0.2e1))

        if Bindx == 1947:
            t16480 = np.cos(phi)
            t16481 = t16480 ** 2
            t16482 = t16481 ** 2
            t16483 = t16481 * t16482
            t16486 = t16483 ** 2
            t16484 = t16482 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t16482 + 3753 * t16483 - 7867 * t16484 - 4715 * t16486 - 1 + (8579 * t16484 + 1035 * t16486 + 73) * t16481) * np.cos((8 * phi2))

        if Bindx == 1948:
            t16495 = np.sin(phi)
            t16491 = t16495 ** 2
            t16493 = t16495 * t16491 ** 2
            t16488 = np.cos(phi)
            t16489 = t16488 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t16488 * t16493 ** 2 * (3 + (-50 + 135 * t16489) * t16489) * np.sin((9 * phi2)) * ((1 + t16488) ** (-0.1e1 / 0.2e1)) * ((1 - t16488) ** (-0.1e1 / 0.2e1))

        if Bindx == 1949:
            t16496 = np.cos(phi)
            t16497 = t16496 ** 2
            t16498 = t16497 ** 2
            t16499 = t16497 * t16498
            t16502 = t16499 ** 2
            t16500 = t16498 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t16498 + 1635 * t16499 - 2755 * t16500 - 1175 * t16502 - 1 + (2501 * t16500 + 225 * t16502 + 55) * t16497) * np.cos((10 * phi2))

        if Bindx == 1950:
            t16509 = np.sin(phi)
            t16505 = t16509 ** 2
            t16506 = t16509 * t16505
            t16507 = t16506 ** 2
            t16504 = np.cos(phi)
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t16504 * t16507 ** 2 * (9 * t16504 ** 2 - 1) * np.sin((11 * phi2)) * ((1 + t16504) ** (-0.1e1 / 0.2e1)) * ((1 - t16504) ** (-0.1e1 / 0.2e1))

        if Bindx == 1951:
            t16510 = np.cos(phi)
            t16511 = t16510 ** 2
            t16512 = t16511 ** 2
            t16513 = t16511 * t16512
            t16516 = t16513 ** 2
            t16514 = t16512 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t16512 + 425 * t16513 - 555 * t16514 - 163 * t16516 - 1 + (411 * t16514 + 27 * t16516 + 33) * t16511) * np.cos((12 * phi2))

        if Bindx == 1952:
            t16524 = np.sin(phi)
            t16519 = t16524 ** 2
            t16520 = t16524 * t16519
            t16522 = t16524 * t16520 ** 2
            t16518 = np.cos(phi)
            tfunc[..., c] = 0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t16518 * t16522 ** 2 * np.sin((13 * phi2)) * ((1 + t16518) ** (-0.1e1 / 0.2e1)) * ((1 - t16518) ** (-0.1e1 / 0.2e1))

        if Bindx == 1953:
            t16525 = np.cos(phi)
            t16526 = t16525 ** 2
            t16527 = t16526 ** 2
            t16528 = t16526 * t16527
            t16531 = t16528 ** 2
            t16529 = t16527 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi2)) * (-21 * t16527 + 35 * t16528 - 35 * t16529 - 7 * t16531 - 1 + (21 * t16529 + t16531 + 7) * t16526)

        if Bindx == 1954:
            t16533 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * ((1 - t16533) ** (0.15e2 / 0.2e1)) * ((1 + t16533) ** (0.13e2 / 0.2e1)) * np.sin((phi1 - 14 * phi2))

        if Bindx == 1955:
            t16534 = np.cos(phi)
            t16548 = -13 * t16534
            t16535 = t16534 ** 2
            t16537 = t16535 ** 2
            t16538 = t16534 * t16537
            t16543 = t16538 ** 2
            t16541 = t16537 ** 2
            t16536 = t16534 * t16535
            t16539 = t16536 ** 2
            t16540 = t16534 * t16539
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (20 * t16535 + 78 * t16536 - 99 * t16537 - 195 * t16538 - 295 * t16541 + 216 * t16543 + t16548 - 1 + (260 + 14 * t16540) * t16540 + (-195 * t16541 + 78 * t16543) * t16534 + (230 + (t16548 - 85) * t16539) * t16539) * np.cos((phi1 - 13 * phi2))

        if Bindx == 1956:
            t16556 = np.sin(phi)
            t16552 = t16556 ** 2
            t16553 = t16556 * t16552
            t16554 = t16553 ** 2
            t16549 = np.cos(phi)
            t16550 = t16549 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.111435e6) * t16554 ** 2 * (-54 * t16550 + 2 + (63 * t16550 - 11) * t16549) * np.sin((phi1 - 12 * phi2)) * ((1 + t16549) ** (-0.1e1 / 0.2e1)) * ((1 - t16549) ** (-0.1e1 / 0.2e1))

        if Bindx == 1957:
            t16557 = np.cos(phi)
            t16558 = t16557 ** 2
            t16559 = t16557 * t16558
            t16562 = t16559 ** 2
            t16568 = t16562 ** 2
            t16560 = t16558 ** 2
            t16561 = t16557 * t16560
            t16566 = t16561 ** 2
            t16564 = t16560 ** 2
            t16563 = t16557 * t16562
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * (44 * t16558 + 154 * t16559 - 331 * t16560 - 605 * t16561 + 1030 * t16562 - 1655 * t16564 + 1456 * t16566 - 669 * t16568 - 1 + (1100 + 126 * t16563) * t16563 + (-1045 * t16564 + 506 * t16566 - 99 * t16568 - 11) * t16557) * np.cos((phi1 - 11 * phi2))

        if Bindx == 1958:
            t16580 = np.sin(phi)
            t16576 = t16580 ** 2
            t16578 = t16580 * t16576 ** 2
            t16571 = np.cos(phi)
            t16572 = t16571 ** 2
            t16574 = t16572 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t16578 ** 2 * (50 * t16572 - 225 * t16574 - 1 + (-150 * t16572 + 315 * t16574 + 11) * t16571) * np.sin((phi1 - 10 * phi2)) * ((1 + t16571) ** (-0.1e1 / 0.2e1)) * ((1 - t16571) ** (-0.1e1 / 0.2e1))

        if Bindx == 1959:
            t16581 = np.cos(phi)
            t16582 = t16581 ** 2
            t16583 = t16581 * t16582
            t16586 = t16583 ** 2
            t16592 = t16586 ** 2
            t16584 = t16582 ** 2
            t16585 = t16581 * t16584
            t16590 = t16585 ** 2
            t16588 = t16584 ** 2
            t16587 = t16581 * t16586
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.289731e6) * (64 * t16582 + 186 * t16583 - 671 * t16584 - 1059 * t16585 + 2694 * t16586 - 5311 * t16588 + 5540 * t16590 - 2945 * t16592 - 1 + (2556 + 630 * t16587) * t16587 + (-3039 * t16588 + 1770 * t16590 - 405 * t16592 - 9) * t16581) * np.cos((phi1 - 9 * phi2))

        if Bindx == 1960:
            t16605 = np.sin(phi)
            t16602 = t16605 ** 2
            t16603 = t16602 ** 2
            t16595 = np.cos(phi)
            t16596 = t16595 ** 2
            t16597 = t16595 * t16596
            t16600 = t16597 ** 2
            t16598 = t16596 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * t16603 ** 2 * (-276 * t16596 + 1495 * t16597 + 2300 * t16598 - 4140 * t16600 + 4 + (-6555 * t16598 + 7245 * t16600 - 73) * t16595) * np.sin((phi1 - 8 * phi2)) * ((1 + t16595) ** (-0.1e1 / 0.2e1)) * ((1 - t16595) ** (-0.1e1 / 0.2e1))

        if Bindx == 1961:
            t16606 = np.cos(phi)
            t16607 = t16606 ** 2
            t16608 = t16606 * t16607
            t16611 = t16608 ** 2
            t16617 = t16611 ** 2
            t16609 = t16607 ** 2
            t16610 = t16606 * t16609
            t16615 = t16610 ** 2
            t16613 = t16609 ** 2
            t16612 = t16606 * t16611
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.323323e6) * (80 * t16607 + 182 * t16608 - 1039 * t16609 - 1309 * t16610 + 5062 * t16611 - 11807 * t16613 + 14260 * t16615 - 8625 * t16617 - 1 + (3940 + 2070 * t16612) * t16612 + (-5681 * t16613 + 3910 * t16615 - 1035 * t16617 - 7) * t16606) * np.cos((phi1 - 7 * phi2))

        if Bindx == 1962:
            t16632 = np.sin(phi)
            t16629 = t16632 ** 2
            t16630 = t16632 * t16629
            t16620 = np.cos(phi)
            t16621 = t16620 ** 2
            t16623 = t16621 ** 2
            t16627 = t16623 ** 2
            t16622 = t16620 * t16621
            t16625 = t16622 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.138567e6) * t16630 ** 2 * (84 * t16621 - 756 * t16622 - 966 * t16623 + 3220 * t16625 - 3105 * t16627 - 1 + (4830 * t16623 - 10580 * t16625 + 7245 * t16627 + 29) * t16620) * np.sin((phi1 - 6 * phi2)) * ((1 + t16620) ** (-0.1e1 / 0.2e1)) * ((1 - t16620) ** (-0.1e1 / 0.2e1))

        if Bindx == 1963:
            t16633 = np.cos(phi)
            t16634 = t16633 ** 2
            t16635 = t16633 * t16634
            t16638 = t16635 ** 2
            t16644 = t16638 ** 2
            t16636 = t16634 ** 2
            t16637 = t16633 * t16636
            t16642 = t16637 ** 2
            t16640 = t16636 ** 2
            t16639 = t16633 * t16638
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * (92 * t16634 + 150 * t16635 - 1371 * t16636 - 1251 * t16637 + 7622 * t16638 - 20119 * t16640 + 27232 * t16642 - 18285 * t16644 - 1 + (4372 + 4830 * t16639) * t16639 + (-7291 * t16640 + 5750 * t16642 - 1725 * t16644 - 5) * t16633) * np.cos((phi1 - 5 * phi2))

        if Bindx == 1964:
            t16660 = np.sin(phi)
            t16658 = t16660 ** 2
            t16647 = np.cos(phi)
            t16648 = t16647 ** 2
            t16650 = t16648 ** 2
            t16651 = t16647 * t16650
            t16656 = t16651 ** 2
            t16654 = t16650 ** 2
            t16649 = t16647 * t16648
            t16652 = t16649 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.7293e4) * t16658 ** 2 * (-190 * t16648 + 2945 * t16649 + 2660 * t16650 - 23674 * t16651 - 12236 * t16652 + 21850 * t16654 - 13110 * t16656 + 2 + (74290 * t16652 - 98325 * t16654 + 45885 * t16656 - 97) * t16647) * np.sin((phi1 - 4 * phi2)) * ((1 + t16647) ** (-0.1e1 / 0.2e1)) * ((1 - t16647) ** (-0.1e1 / 0.2e1))

        if Bindx == 1965:
            t16661 = np.cos(phi)
            t16662 = t16661 ** 2
            t16663 = t16661 * t16662
            t16666 = t16663 ** 2
            t16672 = t16666 ** 2
            t16664 = t16662 ** 2
            t16665 = t16661 * t16664
            t16670 = t16665 ** 2
            t16668 = t16664 ** 2
            t16667 = t16661 * t16666
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (3300 * t16662 + 3234 * t16663 - 53427 * t16664 - 29469 * t16665 + 322278 * t16666 - 921063 * t16668 + 1345960 * t16670 - 972325 * t16672 - 33 + (112860 + 275310 * t16667) * t16667 + (-206701 * t16668 + 179170 * t16670 - 58995 * t16672 - 99) * t16661) * np.cos((phi1 - 3 * phi2))

        if Bindx == 1966:
            t16676 = np.cos(phi)
            t16677 = t16676 ** 2
            t16678 = t16676 * t16677
            t16681 = t16678 ** 2
            t16687 = t16681 ** 2
            t16679 = t16677 ** 2
            t16680 = t16676 * t16679
            t16685 = t16680 ** 2
            t16683 = t16679 ** 2
            t16675 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t16675 ** 2 * (3366 * t16677 - 113322 * t16678 - 53295 * t16679 + 1055241 * t16680 + 298452 * t16681 - 735471 * t16683 + 817190 * t16685 - 334305 * t16687 - 33 + (-4135692 * t16681 + 7763305 * t16683 - 6908970 * t16685 + 2340135 * t16687 + 3399) * t16676) * np.sin((phi1 - 2 * phi2)) * ((1 + t16676) ** (-0.1e1 / 0.2e1)) * ((1 - t16676) ** (-0.1e1 / 0.2e1))

        if Bindx == 1967:
            t16689 = np.cos(phi)
            t16690 = t16689 ** 2
            t16691 = t16689 * t16690
            t16694 = t16691 ** 2
            t16700 = t16694 ** 2
            t16692 = t16690 ** 2
            t16693 = t16689 * t16692
            t16698 = t16693 ** 2
            t16696 = t16692 ** 2
            t16695 = t16689 * t16694
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * (44616 * t16690 + 14586 * t16691 - 751179 * t16692 - 138567 * t16693 + 4711278 * t16694 - 13995267 * t16696 + 21246940 * t16698 - 15935205 * t16700 - 429 + (554268 + 4680270 * t16695) * t16695 + (-1062347 * t16696 + 965770 * t16698 - 334305 * t16700 - 429) * t16689) * np.cos(phi1 - phi2)

        if Bindx == 1968:
            t16704 = np.cos(phi)
            t16705 = t16704 ** 2
            t16706 = t16705 ** 2
            t16708 = t16706 ** 2
            t16707 = t16705 * t16706
            t16703 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t16704 * t16703 ** 2 * (138567 * t16706 + 1062347 * t16708 + 429 + (-554268 + 334305 * t16707) * t16707 + (-965770 * t16708 - 14586) * t16705) * np.sin(phi1) * ((1 + t16704) ** (-0.1e1 / 0.2e1)) * ((1 - t16704) ** (-0.1e1 / 0.2e1))

        if Bindx == 1969:
            t16711 = np.cos(phi)
            t16712 = t16711 ** 2
            t16713 = t16711 * t16712
            t16716 = t16713 ** 2
            t16722 = t16716 ** 2
            t16714 = t16712 ** 2
            t16715 = t16711 * t16714
            t16720 = t16715 ** 2
            t16718 = t16714 ** 2
            t16717 = t16711 * t16716
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * (44616 * t16712 - 14586 * t16713 - 751179 * t16714 + 138567 * t16715 + 4711278 * t16716 - 13995267 * t16718 + 21246940 * t16720 - 15935205 * t16722 - 429 + (-554268 + 4680270 * t16717) * t16717 + (1062347 * t16718 - 965770 * t16720 + 334305 * t16722 + 429) * t16711) * np.cos(phi1 + phi2)

        if Bindx == 1970:
            t16726 = np.cos(phi)
            t16727 = t16726 ** 2
            t16728 = t16726 * t16727
            t16731 = t16728 ** 2
            t16737 = t16731 ** 2
            t16729 = t16727 ** 2
            t16730 = t16726 * t16729
            t16735 = t16730 ** 2
            t16733 = t16729 ** 2
            t16725 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t16725 ** 2 * (-3366 * t16727 - 113322 * t16728 + 53295 * t16729 + 1055241 * t16730 - 298452 * t16731 + 735471 * t16733 - 817190 * t16735 + 334305 * t16737 + 33 + (-4135692 * t16731 + 7763305 * t16733 - 6908970 * t16735 + 2340135 * t16737 + 3399) * t16726) * np.sin((phi1 + 2 * phi2)) * ((1 + t16726) ** (-0.1e1 / 0.2e1)) * ((1 - t16726) ** (-0.1e1 / 0.2e1))

        if Bindx == 1971:
            t16739 = np.cos(phi)
            t16740 = t16739 ** 2
            t16741 = t16739 * t16740
            t16744 = t16741 ** 2
            t16750 = t16744 ** 2
            t16742 = t16740 ** 2
            t16743 = t16739 * t16742
            t16748 = t16743 ** 2
            t16746 = t16742 ** 2
            t16745 = t16739 * t16744
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (3300 * t16740 - 3234 * t16741 - 53427 * t16742 + 29469 * t16743 + 322278 * t16744 - 921063 * t16746 + 1345960 * t16748 - 972325 * t16750 - 33 + (-112860 + 275310 * t16745) * t16745 + (206701 * t16746 - 179170 * t16748 + 58995 * t16750 + 99) * t16739) * np.cos((phi1 + 3 * phi2))

        if Bindx == 1972:
            t16766 = np.sin(phi)
            t16764 = t16766 ** 2
            t16753 = np.cos(phi)
            t16754 = t16753 ** 2
            t16756 = t16754 ** 2
            t16757 = t16753 * t16756
            t16762 = t16757 ** 2
            t16760 = t16756 ** 2
            t16755 = t16753 * t16754
            t16758 = t16755 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.7293e4) * t16764 ** 2 * (190 * t16754 + 2945 * t16755 - 2660 * t16756 - 23674 * t16757 + 12236 * t16758 - 21850 * t16760 + 13110 * t16762 - 2 + (74290 * t16758 - 98325 * t16760 + 45885 * t16762 - 97) * t16753) * np.sin((phi1 + 4 * phi2)) * ((1 + t16753) ** (-0.1e1 / 0.2e1)) * ((1 - t16753) ** (-0.1e1 / 0.2e1))

        if Bindx == 1973:
            t16767 = np.cos(phi)
            t16768 = t16767 ** 2
            t16769 = t16767 * t16768
            t16772 = t16769 ** 2
            t16778 = t16772 ** 2
            t16770 = t16768 ** 2
            t16771 = t16767 * t16770
            t16776 = t16771 ** 2
            t16774 = t16770 ** 2
            t16773 = t16767 * t16772
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * (92 * t16768 - 150 * t16769 - 1371 * t16770 + 1251 * t16771 + 7622 * t16772 - 20119 * t16774 + 27232 * t16776 - 18285 * t16778 - 1 + (-4372 + 4830 * t16773) * t16773 + (7291 * t16774 - 5750 * t16776 + 1725 * t16778 + 5) * t16767) * np.cos((phi1 + 5 * phi2))

        if Bindx == 1974:
            t16793 = np.sin(phi)
            t16790 = t16793 ** 2
            t16791 = t16793 * t16790
            t16781 = np.cos(phi)
            t16782 = t16781 ** 2
            t16784 = t16782 ** 2
            t16788 = t16784 ** 2
            t16783 = t16781 * t16782
            t16786 = t16783 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.138567e6) * t16791 ** 2 * (-84 * t16782 - 756 * t16783 + 966 * t16784 - 3220 * t16786 + 3105 * t16788 + 1 + (4830 * t16784 - 10580 * t16786 + 7245 * t16788 + 29) * t16781) * np.sin((phi1 + 6 * phi2)) * ((1 + t16781) ** (-0.1e1 / 0.2e1)) * ((1 - t16781) ** (-0.1e1 / 0.2e1))

        if Bindx == 1975:
            t16794 = np.cos(phi)
            t16795 = t16794 ** 2
            t16796 = t16794 * t16795
            t16799 = t16796 ** 2
            t16805 = t16799 ** 2
            t16797 = t16795 ** 2
            t16798 = t16794 * t16797
            t16803 = t16798 ** 2
            t16801 = t16797 ** 2
            t16800 = t16794 * t16799
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.323323e6) * (80 * t16795 - 182 * t16796 - 1039 * t16797 + 1309 * t16798 + 5062 * t16799 - 11807 * t16801 + 14260 * t16803 - 8625 * t16805 - 1 + (-3940 + 2070 * t16800) * t16800 + (5681 * t16801 - 3910 * t16803 + 1035 * t16805 + 7) * t16794) * np.cos((phi1 + 7 * phi2))

        if Bindx == 1976:
            t16818 = np.sin(phi)
            t16815 = t16818 ** 2
            t16816 = t16815 ** 2
            t16808 = np.cos(phi)
            t16809 = t16808 ** 2
            t16810 = t16808 * t16809
            t16813 = t16810 ** 2
            t16811 = t16809 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * t16816 ** 2 * (276 * t16809 + 1495 * t16810 - 2300 * t16811 + 4140 * t16813 - 4 + (-6555 * t16811 + 7245 * t16813 - 73) * t16808) * np.sin((phi1 + 8 * phi2)) * ((1 + t16808) ** (-0.1e1 / 0.2e1)) * ((1 - t16808) ** (-0.1e1 / 0.2e1))

        if Bindx == 1977:
            t16819 = np.cos(phi)
            t16820 = t16819 ** 2
            t16821 = t16819 * t16820
            t16824 = t16821 ** 2
            t16830 = t16824 ** 2
            t16822 = t16820 ** 2
            t16823 = t16819 * t16822
            t16828 = t16823 ** 2
            t16826 = t16822 ** 2
            t16825 = t16819 * t16824
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.289731e6) * (64 * t16820 - 186 * t16821 - 671 * t16822 + 1059 * t16823 + 2694 * t16824 - 5311 * t16826 + 5540 * t16828 - 2945 * t16830 - 1 + (-2556 + 630 * t16825) * t16825 + (3039 * t16826 - 1770 * t16828 + 405 * t16830 + 9) * t16819) * np.cos((phi1 + 9 * phi2))

        if Bindx == 1978:
            t16842 = np.sin(phi)
            t16838 = t16842 ** 2
            t16840 = t16842 * t16838 ** 2
            t16833 = np.cos(phi)
            t16834 = t16833 ** 2
            t16836 = t16834 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t16840 ** 2 * (-50 * t16834 + 225 * t16836 + 1 + (-150 * t16834 + 315 * t16836 + 11) * t16833) * np.sin((phi1 + 10 * phi2)) * ((1 + t16833) ** (-0.1e1 / 0.2e1)) * ((1 - t16833) ** (-0.1e1 / 0.2e1))

        if Bindx == 1979:
            t16843 = np.cos(phi)
            t16844 = t16843 ** 2
            t16845 = t16843 * t16844
            t16848 = t16845 ** 2
            t16854 = t16848 ** 2
            t16846 = t16844 ** 2
            t16847 = t16843 * t16846
            t16852 = t16847 ** 2
            t16850 = t16846 ** 2
            t16849 = t16843 * t16848
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * (44 * t16844 - 154 * t16845 - 331 * t16846 + 605 * t16847 + 1030 * t16848 - 1655 * t16850 + 1456 * t16852 - 669 * t16854 - 1 + (-1100 + 126 * t16849) * t16849 + (1045 * t16850 - 506 * t16852 + 99 * t16854 + 11) * t16843) * np.cos((phi1 + 11 * phi2))

        if Bindx == 1980:
            t16864 = np.sin(phi)
            t16860 = t16864 ** 2
            t16861 = t16864 * t16860
            t16862 = t16861 ** 2
            t16857 = np.cos(phi)
            t16858 = t16857 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.111435e6) * t16862 ** 2 * (54 * t16858 - 2 + (63 * t16858 - 11) * t16857) * np.sin((phi1 + 12 * phi2)) * ((1 + t16857) ** (-0.1e1 / 0.2e1)) * ((1 - t16857) ** (-0.1e1 / 0.2e1))

        if Bindx == 1981:
            t16865 = np.cos(phi)
            t16879 = 13 * t16865
            t16866 = t16865 ** 2
            t16868 = t16866 ** 2
            t16869 = t16865 * t16868
            t16874 = t16869 ** 2
            t16872 = t16868 ** 2
            t16867 = t16865 * t16866
            t16870 = t16867 ** 2
            t16871 = t16865 * t16870
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (20 * t16866 - 78 * t16867 - 99 * t16868 + 195 * t16869 - 295 * t16872 + 216 * t16874 + t16879 - 1 + (-260 + 14 * t16871) * t16871 + (195 * t16872 - 78 * t16874) * t16865 + (230 + (t16879 - 85) * t16870) * t16870) * np.cos((phi1 + 13 * phi2))

        if Bindx == 1982:
            t16880 = np.cos(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * ((1 - t16880) ** (0.13e2 / 0.2e1)) * ((1 + t16880) ** (0.15e2 / 0.2e1)) * np.sin((phi1 + 14 * phi2))

        if Bindx == 1983:
            t16881 = np.cos(phi)
            t16895 = -2 * t16881
            t16882 = t16881 ** 2
            t16884 = t16882 ** 2
            t16885 = t16881 * t16884
            t16890 = t16885 ** 2
            t16888 = t16884 ** 2
            t16883 = t16881 * t16882
            t16886 = t16883 ** 2
            t16887 = t16881 * t16886
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * np.cos((2 * phi1 - 14 * phi2)) * (-5 * t16882 + 12 * t16883 + 9 * t16884 - 30 * t16885 - 5 * t16888 + 9 * t16890 + t16895 + 1 + (40 + t16887) * t16887 + (-30 * t16888 + 12 * t16890) * t16881 + (-5 + (t16895 - 5) * t16886) * t16886)

        if Bindx == 1984:
            t16903 = np.sin(phi)
            t16899 = t16903 ** 2
            t16900 = t16903 * t16899
            t16901 = t16900 ** 2
            t16896 = np.cos(phi)
            t16897 = t16896 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t16901 ** 2 * (-13 * t16897 + 1 + (7 * t16897 + 5) * t16896) * np.sin((2 * phi1 - 13 * phi2)) * ((1 + t16896) ** (-0.1e1 / 0.2e1)) * ((1 - t16896) ** (-0.1e1 / 0.2e1))

        if Bindx == 1985:
            t16904 = np.cos(phi)
            t16905 = t16904 ** 2
            t16906 = t16904 * t16905
            t16909 = t16906 ** 2
            t16915 = t16909 ** 2
            t16907 = t16905 ** 2
            t16908 = t16904 * t16907
            t16913 = t16908 ** 2
            t16911 = t16907 ** 2
            t16910 = t16904 * t16909
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.1448655e7) * (-31 * t16905 + 208 * t16906 + 77 * t16907 - 740 * t16908 + 45 * t16909 - 365 * t16911 + 499 * t16913 - 289 * t16915 + 1 + (1280 + 63 * t16910) * t16910 + (-1180 * t16911 + 560 * t16913 - 108 * t16915 - 20) * t16904) * np.cos((2 * phi1 - 12 * phi2))

        if Bindx == 1986:
            t16927 = np.sin(phi)
            t16923 = t16927 ** 2
            t16925 = t16927 * t16923 ** 2
            t16918 = np.cos(phi)
            t16919 = t16918 ** 2
            t16921 = t16919 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t16925 ** 2 * (418 * t16919 - 1287 * t16921 - 11 + (78 * t16919 + 819 * t16921 - 17) * t16918) * np.sin((2 * phi1 - 11 * phi2)) * ((1 + t16918) ** (-0.1e1 / 0.2e1)) * ((1 - t16918) ** (-0.1e1 / 0.2e1))

        if Bindx == 1987:
            t16928 = np.cos(phi)
            t16929 = t16928 ** 2
            t16930 = t16928 * t16929
            t16933 = t16930 ** 2
            t16939 = t16933 ** 2
            t16931 = t16929 ** 2
            t16932 = t16928 * t16931
            t16937 = t16932 ** 2
            t16935 = t16931 ** 2
            t16934 = t16928 * t16933
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (53 * t16929 + 3772 * t16930 - 1177 * t16931 - 18758 * t16932 + 8293 * t16933 - 22427 * t16935 + 28519 * t16937 - 17355 * t16939 - 1 + (41672 + 4095 * t16934) * t16934 + (-46918 * t16935 + 26300 * t16937 - 5850 * t16939 - 218) * t16928) * np.cos((2 * phi1 - 10 * phi2))

        if Bindx == 1988:
            t16952 = np.sin(phi)
            t16949 = t16952 ** 2
            t16950 = t16949 ** 2
            t16942 = np.cos(phi)
            t16943 = t16942 ** 2
            t16944 = t16942 * t16943
            t16947 = t16944 ** 2
            t16945 = t16943 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.22287e5) * t16950 ** 2 * (-531 * t16943 + 445 * t16944 + 3675 * t16945 - 5265 * t16947 + 9 + (-2405 * t16945 + 4095 * t16947 - 23) * t16942) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t16942) ** (-0.1e1 / 0.2e1)) * ((1 - t16942) ** (-0.1e1 / 0.2e1))

        if Bindx == 1989:
            t16953 = np.cos(phi)
            t16954 = t16953 ** 2
            t16955 = t16953 * t16954
            t16958 = t16955 ** 2
            t16964 = t16958 ** 2
            t16956 = t16954 ** 2
            t16957 = t16953 * t16956
            t16962 = t16957 ** 2
            t16960 = t16956 ** 2
            t16959 = t16953 * t16958
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (2911 * t16954 + 26848 * t16955 - 36317 * t16956 - 173864 * t16957 + 181595 * t16958 - 449563 * t16960 + 579485 * t16962 - 372255 * t16964 - 41 + (479744 + 94185 * t16959) * t16959 + (-647128 * t16960 + 423200 * t16962 - 107640 * t16964 - 1160) * t16953) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 1990:
            t16979 = np.sin(phi)
            t16976 = t16979 ** 2
            t16977 = t16979 * t16976
            t16967 = np.cos(phi)
            t16968 = t16967 ** 2
            t16970 = t16968 ** 2
            t16974 = t16970 ** 2
            t16969 = t16967 * t16968
            t16972 = t16969 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.24871e5) * t16977 ** 2 * (532 * t16968 - 1316 * t16969 - 5474 * t16970 + 16100 * t16972 - 13455 * t16974 - 7 + (8050 * t16970 - 17940 * t16972 + 13455 * t16974 + 55) * t16967) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t16967) ** (-0.1e1 / 0.2e1)) * ((1 - t16967) ** (-0.1e1 / 0.2e1))

        if Bindx == 1991:
            t16980 = np.cos(phi)
            t16981 = t16980 ** 2
            t16982 = t16980 * t16981
            t16985 = t16982 ** 2
            t16991 = t16985 ** 2
            t16983 = t16981 ** 2
            t16984 = t16980 * t16983
            t16989 = t16984 ** 2
            t16987 = t16983 ** 2
            t16986 = t16980 * t16985
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (1955 * t16981 + 9596 * t16982 - 27487 * t16983 - 74182 * t16984 + 147411 * t16985 - 383021 * t16987 + 518305 * t16989 - 351325 * t16991 - 23 + (241480 + 94185 * t16986) * t16986 + (-377798 * t16987 + 281980 * t16989 - 80730 * t16991 - 346) * t16980) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 1992:
            t17007 = np.sin(phi)
            t17005 = t17007 ** 2
            t16994 = np.cos(phi)
            t16995 = t16994 ** 2
            t16997 = t16995 ** 2
            t16998 = t16994 * t16997
            t17003 = t16998 ** 2
            t17001 = t16997 ** 2
            t16996 = t16994 * t16995
            t16999 = t16996 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.53295e5) * t17005 ** 2 * (-445 * t16995 + 2255 * t16996 + 5810 * t16997 - 17206 * t16998 - 24794 * t16999 + 40825 * t17001 - 22425 * t17003 + 5 + (51934 * t16999 - 67275 * t17001 + 31395 * t17003 - 79) * t16994) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t16994) ** (-0.1e1 / 0.2e1)) * ((1 - t16994) ** (-0.1e1 / 0.2e1))

        if Bindx == 1993:
            t17008 = np.cos(phi)
            t17009 = t17008 ** 2
            t17010 = t17008 * t17009
            t17013 = t17010 ** 2
            t17019 = t17013 ** 2
            t17011 = t17009 ** 2
            t17012 = t17008 * t17011
            t17017 = t17012 ** 2
            t17015 = t17011 ** 2
            t17014 = t17008 * t17013
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.561e3) * (8455 * t17009 + 23952 * t17010 - 130821 * t17011 - 207252 * t17012 + 759259 * t17013 - 2102939 * t17015 + 3000005 * t17017 - 2130375 * t17019 - 89 + (753920 + 596505 * t17014) * t17014 + (-1312748 * t17015 + 1083760 * t17017 - 340860 * t17019 - 772) * t17008) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 1994:
            t17023 = np.cos(phi)
            t17024 = t17023 ** 2
            t17025 = t17023 * t17024
            t17028 = t17025 ** 2
            t17034 = t17028 ** 2
            t17026 = t17024 ** 2
            t17027 = t17023 * t17026
            t17032 = t17027 ** 2
            t17030 = t17026 ** 2
            t17022 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t17022 ** 2 * (9702 * t17024 - 100518 * t17025 - 147345 * t17026 + 902253 * t17027 + 790020 * t17028 - 1860309 * t17030 + 1970870 * t17032 - 766935 * t17034 - 99 + (-3418404 * t17028 + 6225065 * t17030 - 5396950 * t17032 + 1789515 * t17034 + 3135) * t17023) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t17023) ** (-0.1e1 / 0.2e1)) * ((1 - t17023) ** (-0.1e1 / 0.2e1))

        if Bindx == 1995:
            t17036 = np.cos(phi)
            t17037 = t17036 ** 2
            t17038 = t17036 * t17037
            t17041 = t17038 ** 2
            t17047 = t17041 ** 2
            t17039 = t17037 ** 2
            t17040 = t17036 * t17039
            t17045 = t17040 ** 2
            t17043 = t17039 ** 2
            t17042 = t17036 * t17041
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * (336633 * t17037 + 446556 * t17038 - 5509581 * t17039 - 4114374 * t17040 + 33629145 * t17041 - 97348647 * t17043 + 144234035 * t17045 - 105751815 * t17047 - 3333 + (15945864 + 30421755 * t17042) * t17042 + (-29582278 * t17043 + 26001500 * t17045 - 8691930 * t17047 - 13530) * t17036) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 1996:
            t17051 = np.cos(phi)
            t17052 = t17051 ** 2
            t17053 = t17051 * t17052
            t17056 = t17053 ** 2
            t17062 = t17056 ** 2
            t17054 = t17052 ** 2
            t17055 = t17051 * t17054
            t17060 = t17055 ** 2
            t17058 = t17054 ** 2
            t17050 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t17050 ** 2 * (3366 * t17052 - 113322 * t17053 - 53295 * t17054 + 1055241 * t17055 + 298452 * t17056 - 735471 * t17058 + 817190 * t17060 - 334305 * t17062 - 33 + (-4135692 * t17056 + 7763305 * t17058 - 6908970 * t17060 + 2340135 * t17062 + 3399) * t17051) * np.sin((2 * phi1 - phi2)) * ((1 - t17051) ** (-0.1e1 / 0.2e1)) * ((1 + t17051) ** (-0.1e1 / 0.2e1))

        if Bindx == 1997:
            t17064 = np.cos(phi)
            t17065 = t17064 ** 2
            t17066 = t17065 ** 2
            t17067 = t17065 * t17066
            t17070 = t17067 ** 2
            t17068 = t17066 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t17066 + 351747 * t17067 - 1033923 * t17068 - 1151495 * t17070 - 33 + (1552661 * t17068 + 334305 * t17070 + 3399) * t17065) * np.cos((2 * phi1))

        if Bindx == 1998:
            t17073 = np.cos(phi)
            t17074 = t17073 ** 2
            t17075 = t17073 * t17074
            t17078 = t17075 ** 2
            t17084 = t17078 ** 2
            t17076 = t17074 ** 2
            t17077 = t17073 * t17076
            t17082 = t17077 ** 2
            t17080 = t17076 ** 2
            t17072 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t17072 ** 2 * (-3366 * t17074 - 113322 * t17075 + 53295 * t17076 + 1055241 * t17077 - 298452 * t17078 + 735471 * t17080 - 817190 * t17082 + 334305 * t17084 + 33 + (-4135692 * t17078 + 7763305 * t17080 - 6908970 * t17082 + 2340135 * t17084 + 3399) * t17073) * np.sin((2 * phi1 + phi2)) * ((1 - t17073) ** (-0.1e1 / 0.2e1)) * ((1 + t17073) ** (-0.1e1 / 0.2e1))

        if Bindx == 1999:
            t17086 = np.cos(phi)
            t17087 = t17086 ** 2
            t17088 = t17086 * t17087
            t17091 = t17088 ** 2
            t17097 = t17091 ** 2
            t17089 = t17087 ** 2
            t17090 = t17086 * t17089
            t17095 = t17090 ** 2
            t17093 = t17089 ** 2
            t17092 = t17086 * t17091
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * (336633 * t17087 - 446556 * t17088 - 5509581 * t17089 + 4114374 * t17090 + 33629145 * t17091 - 97348647 * t17093 + 144234035 * t17095 - 105751815 * t17097 - 3333 + (-15945864 + 30421755 * t17092) * t17092 + (29582278 * t17093 - 26001500 * t17095 + 8691930 * t17097 + 13530) * t17086) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 2000:
            t17101 = np.cos(phi)
            t17102 = t17101 ** 2
            t17103 = t17101 * t17102
            t17106 = t17103 ** 2
            t17112 = t17106 ** 2
            t17104 = t17102 ** 2
            t17105 = t17101 * t17104
            t17110 = t17105 ** 2
            t17108 = t17104 ** 2
            t17100 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t17100 ** 2 * (-9702 * t17102 - 100518 * t17103 + 147345 * t17104 + 902253 * t17105 - 790020 * t17106 + 1860309 * t17108 - 1970870 * t17110 + 766935 * t17112 + 99 + (-3418404 * t17106 + 6225065 * t17108 - 5396950 * t17110 + 1789515 * t17112 + 3135) * t17101) * np.sin((2 * phi1 + 3 * phi2)) * ((1 - t17101) ** (-0.1e1 / 0.2e1)) * ((1 + t17101) ** (-0.1e1 / 0.2e1))

        if Bindx == 2001:
            t17114 = np.cos(phi)
            t17115 = t17114 ** 2
            t17116 = t17114 * t17115
            t17119 = t17116 ** 2
            t17125 = t17119 ** 2
            t17117 = t17115 ** 2
            t17118 = t17114 * t17117
            t17123 = t17118 ** 2
            t17121 = t17117 ** 2
            t17120 = t17114 * t17119
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.561e3) * (8455 * t17115 - 23952 * t17116 - 130821 * t17117 + 207252 * t17118 + 759259 * t17119 - 2102939 * t17121 + 3000005 * t17123 - 2130375 * t17125 - 89 + (-753920 + 596505 * t17120) * t17120 + (1312748 * t17121 - 1083760 * t17123 + 340860 * t17125 + 772) * t17114) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 2002:
            t17141 = np.sin(phi)
            t17139 = t17141 ** 2
            t17128 = np.cos(phi)
            t17129 = t17128 ** 2
            t17131 = t17129 ** 2
            t17132 = t17128 * t17131
            t17137 = t17132 ** 2
            t17135 = t17131 ** 2
            t17130 = t17128 * t17129
            t17133 = t17130 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.53295e5) * t17139 ** 2 * (445 * t17129 + 2255 * t17130 - 5810 * t17131 - 17206 * t17132 + 24794 * t17133 - 40825 * t17135 + 22425 * t17137 - 5 + (51934 * t17133 - 67275 * t17135 + 31395 * t17137 - 79) * t17128) * np.sin((2 * phi1 + 5 * phi2)) * ((1 - t17128) ** (-0.1e1 / 0.2e1)) * ((1 + t17128) ** (-0.1e1 / 0.2e1))

        if Bindx == 2003:
            t17142 = np.cos(phi)
            t17143 = t17142 ** 2
            t17144 = t17142 * t17143
            t17147 = t17144 ** 2
            t17153 = t17147 ** 2
            t17145 = t17143 ** 2
            t17146 = t17142 * t17145
            t17151 = t17146 ** 2
            t17149 = t17145 ** 2
            t17148 = t17142 * t17147
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (1955 * t17143 - 9596 * t17144 - 27487 * t17145 + 74182 * t17146 + 147411 * t17147 - 383021 * t17149 + 518305 * t17151 - 351325 * t17153 - 23 + (-241480 + 94185 * t17148) * t17148 + (377798 * t17149 - 281980 * t17151 + 80730 * t17153 + 346) * t17142) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 2004:
            t17169 = np.sin(phi)
            t17156 = np.cos(phi)
            t17157 = t17156 ** 2
            t17159 = t17157 ** 2
            t17168 = 13455 * t17159 ** 2
            t17165 = t17169 ** 2
            t17166 = t17169 * t17165
            t17158 = t17156 * t17157
            t17161 = t17158 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.24871e5) * t17166 ** 2 * (-532 * t17157 - 1316 * t17158 + 5474 * t17159 - 16100 * t17161 + t17168 + 7 + (8050 * t17159 - 17940 * t17161 + t17168 + 55) * t17156) * np.sin((2 * phi1 + 7 * phi2)) * ((1 - t17156) ** (-0.1e1 / 0.2e1)) * ((1 + t17156) ** (-0.1e1 / 0.2e1))

        if Bindx == 2005:
            t17170 = np.cos(phi)
            t17171 = t17170 ** 2
            t17172 = t17170 * t17171
            t17175 = t17172 ** 2
            t17181 = t17175 ** 2
            t17173 = t17171 ** 2
            t17174 = t17170 * t17173
            t17179 = t17174 ** 2
            t17177 = t17173 ** 2
            t17176 = t17170 * t17175
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (2911 * t17171 - 26848 * t17172 - 36317 * t17173 + 173864 * t17174 + 181595 * t17175 - 449563 * t17177 + 579485 * t17179 - 372255 * t17181 - 41 + (-479744 + 94185 * t17176) * t17176 + (647128 * t17177 - 423200 * t17179 + 107640 * t17181 + 1160) * t17170) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 2006:
            t17194 = np.sin(phi)
            t17191 = t17194 ** 2
            t17192 = t17191 ** 2
            t17184 = np.cos(phi)
            t17185 = t17184 ** 2
            t17186 = t17184 * t17185
            t17189 = t17186 ** 2
            t17187 = t17185 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.22287e5) * t17192 ** 2 * (531 * t17185 + 445 * t17186 - 3675 * t17187 + 5265 * t17189 - 9 + (-2405 * t17187 + 4095 * t17189 - 23) * t17184) * np.sin((2 * phi1 + 9 * phi2)) * ((1 - t17184) ** (-0.1e1 / 0.2e1)) * ((1 + t17184) ** (-0.1e1 / 0.2e1))

        if Bindx == 2007:
            t17195 = np.cos(phi)
            t17196 = t17195 ** 2
            t17197 = t17195 * t17196
            t17200 = t17197 ** 2
            t17206 = t17200 ** 2
            t17198 = t17196 ** 2
            t17199 = t17195 * t17198
            t17204 = t17199 ** 2
            t17202 = t17198 ** 2
            t17201 = t17195 * t17200
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (53 * t17196 - 3772 * t17197 - 1177 * t17198 + 18758 * t17199 + 8293 * t17200 - 22427 * t17202 + 28519 * t17204 - 17355 * t17206 - 1 + (-41672 + 4095 * t17201) * t17201 + (46918 * t17202 - 26300 * t17204 + 5850 * t17206 + 218) * t17195) * np.cos((2 * phi1 + 10 * phi2))

        if Bindx == 2008:
            t17218 = np.sin(phi)
            t17214 = t17218 ** 2
            t17216 = t17218 * t17214 ** 2
            t17209 = np.cos(phi)
            t17210 = t17209 ** 2
            t17212 = t17210 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t17216 ** 2 * (-418 * t17210 + 1287 * t17212 + 11 + (78 * t17210 + 819 * t17212 - 17) * t17209) * np.sin((2 * phi1 + 11 * phi2)) * ((1 - t17209) ** (-0.1e1 / 0.2e1)) * ((1 + t17209) ** (-0.1e1 / 0.2e1))

        if Bindx == 2009:
            t17219 = np.cos(phi)
            t17220 = t17219 ** 2
            t17221 = t17219 * t17220
            t17224 = t17221 ** 2
            t17230 = t17224 ** 2
            t17222 = t17220 ** 2
            t17223 = t17219 * t17222
            t17228 = t17223 ** 2
            t17226 = t17222 ** 2
            t17225 = t17219 * t17224
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.1448655e7) * (-31 * t17220 - 208 * t17221 + 77 * t17222 + 740 * t17223 + 45 * t17224 - 365 * t17226 + 499 * t17228 - 289 * t17230 + 1 + (-1280 + 63 * t17225) * t17225 + (1180 * t17226 - 560 * t17228 + 108 * t17230 + 20) * t17219) * np.cos((2 * phi1 + 12 * phi2))

        if Bindx == 2010:
            t17240 = np.sin(phi)
            t17236 = t17240 ** 2
            t17237 = t17240 * t17236
            t17238 = t17237 ** 2
            t17233 = np.cos(phi)
            t17234 = t17233 ** 2
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t17238 ** 2 * (13 * t17234 - 1 + (7 * t17234 + 5) * t17233) * np.sin((2 * phi1 + 13 * phi2)) * ((1 - t17233) ** (-0.1e1 / 0.2e1)) * ((1 + t17233) ** (-0.1e1 / 0.2e1))

        if Bindx == 2011:
            t17241 = np.cos(phi)
            t17255 = 2 * t17241
            t17242 = t17241 ** 2
            t17244 = t17242 ** 2
            t17245 = t17241 * t17244
            t17250 = t17245 ** 2
            t17248 = t17244 ** 2
            t17243 = t17241 * t17242
            t17246 = t17243 ** 2
            t17247 = t17241 * t17246
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * np.cos((2 * phi1 + 14 * phi2)) * (-5 * t17242 - 12 * t17243 + 9 * t17244 + 30 * t17245 - 5 * t17248 + 9 * t17250 + t17255 + 1 + (-40 + t17247) * t17247 + (30 * t17248 - 12 * t17250) * t17241 + (-5 + (t17255 - 5) * t17246) * t17246)

        if Bindx == 2012:
            t17256 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.596505e6) * ((1 - t17256) ** (0.17e2 / 0.2e1)) * ((1 + t17256) ** (0.11e2 / 0.2e1)) * np.sin((3 * phi1 - 14 * phi2))

        if Bindx == 2013:
            t17257 = np.cos(phi)
            t17258 = t17257 ** 2
            t17259 = t17257 * t17258
            t17262 = t17259 ** 2
            t17268 = t17262 ** 2
            t17260 = t17258 ** 2
            t17261 = t17257 * t17260
            t17266 = t17261 ** 2
            t17264 = t17260 ** 2
            t17263 = t17257 * t17262
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-48 * t17258 + 14 * t17259 + 181 * t17260 - 145 * t17261 - 290 * t17262 + 205 * t17264 - 28 * t17266 - 37 * t17268 + 3 + (340 + 14 * t17263) * t17263 + (-365 * t17264 + 190 * t17266 - 39 * t17268 + 5) * t17257) * np.cos((3 * phi1 - 13 * phi2))

        if Bindx == 2014:
            t17280 = np.sin(phi)
            t17276 = t17280 ** 2
            t17278 = t17280 * t17276 ** 2
            t17271 = np.cos(phi)
            t17272 = t17271 ** 2
            t17274 = t17272 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.28405e5) * t17278 ** 2 * (48 * t17272 - 486 * t17274 - 2 + (326 * t17272 + 189 * t17274 - 75) * t17271) * np.sin((3 * phi1 - 12 * phi2)) * ((1 - t17271) ** (-0.1e1 / 0.2e1)) * ((1 + t17271) ** (-0.1e1 / 0.2e1))

        if Bindx == 2015:
            t17281 = np.cos(phi)
            t17282 = t17281 ** 2
            t17283 = t17281 * t17282
            t17286 = t17283 ** 2
            t17292 = t17286 ** 2
            t17284 = t17282 ** 2
            t17285 = t17281 * t17284
            t17290 = t17285 ** 2
            t17288 = t17284 ** 2
            t17287 = t17281 * t17286
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * (-920 * t17282 + 1826 * t17283 + 5257 * t17284 - 9955 * t17285 - 10650 * t17286 + 7625 * t17288 + 1772 * t17290 - 4745 * t17292 + 23 + (23980 + 1638 * t17287) * t17287 + (-28655 * t17288 + 16786 * t17290 - 3861 * t17292 - 121) * t17281) * np.cos((3 * phi1 - 11 * phi2))

        if Bindx == 2016:
            t17305 = np.sin(phi)
            t17302 = t17305 ** 2
            t17303 = t17302 ** 2
            t17295 = np.cos(phi)
            t17296 = t17295 ** 2
            t17297 = t17295 * t17296
            t17300 = t17297 ** 2
            t17298 = t17296 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * t17303 ** 2 * (-893 * t17296 - 2059 * t17297 + 5425 * t17298 - 8775 * t17300 + 19 + (2015 * t17298 + 4095 * t17300 + 173) * t17295) * np.sin((3 * phi1 - 10 * phi2)) * ((1 - t17295) ** (-0.1e1 / 0.2e1)) * ((1 + t17295) ** (-0.1e1 / 0.2e1))

        if Bindx == 2017:
            t17306 = np.cos(phi)
            t17307 = t17306 ** 2
            t17308 = t17306 * t17307
            t17311 = t17308 ** 2
            t17317 = t17311 ** 2
            t17309 = t17307 ** 2
            t17310 = t17306 * t17309
            t17315 = t17310 ** 2
            t17313 = t17309 ** 2
            t17312 = t17306 * t17311
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.437e3) * (-1740 * t17307 + 13182 * t17308 + 13791 * t17309 - 78759 * t17310 - 28558 * t17311 - 4677 * t17313 + 72960 * t17315 - 76375 * t17317 + 29 + (211140 + 24570 * t17312) * t17312 + (-282831 * t17313 + 185310 * t17315 - 47385 * t17317 - 657) * t17306) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 2018:
            t17332 = np.sin(phi)
            t17329 = t17332 ** 2
            t17330 = t17332 * t17329
            t17320 = np.cos(phi)
            t17321 = t17320 ** 2
            t17323 = t17321 ** 2
            t17327 = t17323 ** 2
            t17322 = t17320 * t17321
            t17325 = t17322 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t17330 ** 2 * (8184 * t17321 + 4908 * t17322 - 73968 * t17323 + 197800 * t17325 - 161460 * t17327 - 124 + (-3450 * t17323 - 65780 * t17325 + 94185 * t17327 - 295) * t17320) * np.sin((3 * phi1 - 8 * phi2)) * ((1 - t17320) ** (-0.1e1 / 0.2e1)) * ((1 + t17320) ** (-0.1e1 / 0.2e1))

        if Bindx == 2019:
            t17333 = np.cos(phi)
            t17334 = t17333 ** 2
            t17335 = t17333 * t17334
            t17338 = t17335 ** 2
            t17344 = t17338 ** 2
            t17336 = t17334 ** 2
            t17337 = t17333 * t17336
            t17342 = t17337 ** 2
            t17340 = t17336 ** 2
            t17339 = t17333 * t17338
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.4389e4) * (76 * t17334 + 6118 * t17335 - 1787 * t17336 - 43379 * t17337 + 16230 * t17338 - 61783 * t17340 + 108560 * t17342 - 88205 * t17344 - 1 + (132404 + 26910 * t17339) * t17339 + (-198283 * t17340 + 143750 * t17342 - 40365 * t17344 - 245) * t17333) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 2020:
            t17360 = np.sin(phi)
            t17358 = t17360 ** 2
            t17347 = np.cos(phi)
            t17348 = t17347 ** 2
            t17350 = t17348 ** 2
            t17351 = t17347 * t17350
            t17356 = t17351 ** 2
            t17354 = t17350 ** 2
            t17349 = t17347 * t17348
            t17352 = t17349 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t17358 ** 2 * (-9801 * t17348 + 12199 * t17349 + 116634 * t17350 - 98742 * t17351 - 456274 * t17352 + 697245 * t17354 - 363285 * t17356 + 121 + (341550 * t17352 - 521755 * t17354 + 282555 * t17356 - 447) * t17347) * np.sin((3 * phi1 - 6 * phi2)) * ((1 - t17347) ** (-0.1e1 / 0.2e1)) * ((1 + t17347) ** (-0.1e1 / 0.2e1))

        if Bindx == 2021:
            t17361 = np.cos(phi)
            t17362 = t17361 ** 2
            t17363 = t17361 * t17362
            t17366 = t17363 ** 2
            t17372 = t17366 ** 2
            t17364 = t17362 ** 2
            t17365 = t17361 * t17364
            t17370 = t17365 ** 2
            t17368 = t17364 ** 2
            t17367 = t17361 * t17366
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1045e4) * (792 * t17362 + 6190 * t17363 - 11783 * t17364 - 49949 * t17365 + 68134 * t17366 - 193271 * t17368 + 287132 * t17370 - 213785 * t17372 - 9 + (170612 + 62790 * t17367) * t17367 + (-281313 * t17368 + 221950 * t17370 - 67275 * t17372 - 215) * t17361) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 2022:
            t17376 = np.cos(phi)
            t17377 = t17376 ** 2
            t17378 = t17376 * t17377
            t17381 = t17378 ** 2
            t17387 = t17381 ** 2
            t17379 = t17377 ** 2
            t17380 = t17376 * t17379
            t17385 = t17380 ** 2
            t17383 = t17379 ** 2
            t17375 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.11e2) * t17375 ** 2 * (8648 * t17377 - 34486 * t17378 - 123310 * t17379 + 297863 * t17380 + 621376 * t17381 - 1378298 * t17383 + 1380920 * t17385 - 511290 * t17387 - 94 + (-1105876 * t17381 + 2008015 * t17383 - 1761110 * t17385 + 596505 * t17387 + 1137) * t17376) * np.sin((3 * phi1 - 4 * phi2)) * ((1 - t17376) ** (-0.1e1 / 0.2e1)) * ((1 + t17376) ** (-0.1e1 / 0.2e1))

        if Bindx == 2023:
            t17389 = np.cos(phi)
            t17390 = t17389 ** 2
            t17391 = t17389 * t17390
            t17394 = t17391 ** 2
            t17400 = t17394 ** 2
            t17392 = t17390 ** 2
            t17393 = t17389 * t17392
            t17398 = t17393 ** 2
            t17396 = t17392 ** 2
            t17395 = t17389 * t17394
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (136224 * t17390 + 450318 * t17391 - 2135133 * t17392 - 3944457 * t17393 + 12583890 * t17394 - 35477541 * t17396 + 51627180 * t17398 - 37466195 * t17400 - 1419 + (14543892 + 10737090 * t17395) * t17395 + (-25703029 * t17396 + 21565950 * t17398 - 6902415 * t17400 - 14355) * t17389) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 2024:
            t17404 = np.cos(phi)
            t17405 = t17404 ** 2
            t17406 = t17404 * t17405
            t17409 = t17406 ** 2
            t17415 = t17409 ** 2
            t17407 = t17405 ** 2
            t17408 = t17404 * t17407
            t17413 = t17408 ** 2
            t17411 = t17407 ** 2
            t17403 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t17403 ** 2 * (9702 * t17405 - 100518 * t17406 - 147345 * t17407 + 902253 * t17408 + 790020 * t17409 - 1860309 * t17411 + 1970870 * t17413 - 766935 * t17415 - 99 + (-3418404 * t17409 + 6225065 * t17411 - 5396950 * t17413 + 1789515 * t17415 + 3135) * t17404) * np.sin((3 * phi1 - 2 * phi2)) * ((1 - t17404) ** (-0.1e1 / 0.2e1)) * ((1 + t17404) ** (-0.1e1 / 0.2e1))

        if Bindx == 2025:
            t17417 = np.cos(phi)
            t17418 = t17417 ** 2
            t17419 = t17417 * t17418
            t17422 = t17419 ** 2
            t17428 = t17422 ** 2
            t17420 = t17418 ** 2
            t17421 = t17417 * t17420
            t17426 = t17421 ** 2
            t17424 = t17420 ** 2
            t17423 = t17417 * t17422
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (3300 * t17418 + 3234 * t17419 - 53427 * t17420 - 29469 * t17421 + 322278 * t17422 - 921063 * t17424 + 1345960 * t17426 - 972325 * t17428 - 33 + (112860 + 275310 * t17423) * t17423 + (-206701 * t17424 + 179170 * t17426 - 58995 * t17428 - 99) * t17417) * np.cos((3 * phi1 - phi2))

        if Bindx == 2026:
            t17439 = np.sin(phi)
            t17437 = t17439 ** 2
            t17431 = np.cos(phi)
            t17432 = t17431 ** 2
            t17433 = t17432 ** 2
            t17435 = t17433 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t17431 * t17437 ** 2 * (-26334 * t17433 - 120175 * t17435 - 99 + (86526 * t17433 + 58995 * t17435 + 3135) * t17432) * np.sin((3 * phi1)) * ((1 - t17431) ** (-0.1e1 / 0.2e1)) * ((1 + t17431) ** (-0.1e1 / 0.2e1))

        if Bindx == 2027:
            t17440 = np.cos(phi)
            t17441 = t17440 ** 2
            t17442 = t17440 * t17441
            t17445 = t17442 ** 2
            t17451 = t17445 ** 2
            t17443 = t17441 ** 2
            t17444 = t17440 * t17443
            t17449 = t17444 ** 2
            t17447 = t17443 ** 2
            t17446 = t17440 * t17445
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (3300 * t17441 - 3234 * t17442 - 53427 * t17443 + 29469 * t17444 + 322278 * t17445 - 921063 * t17447 + 1345960 * t17449 - 972325 * t17451 - 33 + (-112860 + 275310 * t17446) * t17446 + (206701 * t17447 - 179170 * t17449 + 58995 * t17451 + 99) * t17440) * np.cos((3 * phi1 + phi2))

        if Bindx == 2028:
            t17455 = np.cos(phi)
            t17456 = t17455 ** 2
            t17457 = t17455 * t17456
            t17460 = t17457 ** 2
            t17466 = t17460 ** 2
            t17458 = t17456 ** 2
            t17459 = t17455 * t17458
            t17464 = t17459 ** 2
            t17462 = t17458 ** 2
            t17454 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * t17454 ** 2 * (-9702 * t17456 - 100518 * t17457 + 147345 * t17458 + 902253 * t17459 - 790020 * t17460 + 1860309 * t17462 - 1970870 * t17464 + 766935 * t17466 + 99 + (-3418404 * t17460 + 6225065 * t17462 - 5396950 * t17464 + 1789515 * t17466 + 3135) * t17455) * np.sin((3 * phi1 + 2 * phi2)) * ((1 - t17455) ** (-0.1e1 / 0.2e1)) * ((1 + t17455) ** (-0.1e1 / 0.2e1))

        if Bindx == 2029:
            t17468 = np.cos(phi)
            t17469 = t17468 ** 2
            t17470 = t17468 * t17469
            t17473 = t17470 ** 2
            t17479 = t17473 ** 2
            t17471 = t17469 ** 2
            t17472 = t17468 * t17471
            t17477 = t17472 ** 2
            t17475 = t17471 ** 2
            t17474 = t17468 * t17473
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (136224 * t17469 - 450318 * t17470 - 2135133 * t17471 + 3944457 * t17472 + 12583890 * t17473 - 35477541 * t17475 + 51627180 * t17477 - 37466195 * t17479 - 1419 + (-14543892 + 10737090 * t17474) * t17474 + (25703029 * t17475 - 21565950 * t17477 + 6902415 * t17479 + 14355) * t17468) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 2030:
            t17483 = np.cos(phi)
            t17484 = t17483 ** 2
            t17485 = t17483 * t17484
            t17488 = t17485 ** 2
            t17494 = t17488 ** 2
            t17486 = t17484 ** 2
            t17487 = t17483 * t17486
            t17492 = t17487 ** 2
            t17490 = t17486 ** 2
            t17482 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.11e2) * t17482 ** 2 * (-8648 * t17484 - 34486 * t17485 + 123310 * t17486 + 297863 * t17487 - 621376 * t17488 + 1378298 * t17490 - 1380920 * t17492 + 511290 * t17494 + 94 + (-1105876 * t17488 + 2008015 * t17490 - 1761110 * t17492 + 596505 * t17494 + 1137) * t17483) * np.sin((3 * phi1 + 4 * phi2)) * ((1 - t17483) ** (-0.1e1 / 0.2e1)) * ((1 + t17483) ** (-0.1e1 / 0.2e1))

        if Bindx == 2031:
            t17496 = np.cos(phi)
            t17497 = t17496 ** 2
            t17498 = t17496 * t17497
            t17501 = t17498 ** 2
            t17507 = t17501 ** 2
            t17499 = t17497 ** 2
            t17500 = t17496 * t17499
            t17505 = t17500 ** 2
            t17503 = t17499 ** 2
            t17502 = t17496 * t17501
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1045e4) * (792 * t17497 - 6190 * t17498 - 11783 * t17499 + 49949 * t17500 + 68134 * t17501 - 193271 * t17503 + 287132 * t17505 - 213785 * t17507 - 9 + (-170612 + 62790 * t17502) * t17502 + (281313 * t17503 - 221950 * t17505 + 67275 * t17507 + 215) * t17496) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 2032:
            t17523 = np.sin(phi)
            t17521 = t17523 ** 2
            t17510 = np.cos(phi)
            t17511 = t17510 ** 2
            t17513 = t17511 ** 2
            t17514 = t17510 * t17513
            t17519 = t17514 ** 2
            t17517 = t17513 ** 2
            t17512 = t17510 * t17511
            t17515 = t17512 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t17521 ** 2 * (9801 * t17511 + 12199 * t17512 - 116634 * t17513 - 98742 * t17514 + 456274 * t17515 - 697245 * t17517 + 363285 * t17519 - 121 + (341550 * t17515 - 521755 * t17517 + 282555 * t17519 - 447) * t17510) * np.sin((3 * phi1 + 6 * phi2)) * ((1 - t17510) ** (-0.1e1 / 0.2e1)) * ((1 + t17510) ** (-0.1e1 / 0.2e1))

        if Bindx == 2033:
            t17524 = np.cos(phi)
            t17525 = t17524 ** 2
            t17526 = t17524 * t17525
            t17529 = t17526 ** 2
            t17535 = t17529 ** 2
            t17527 = t17525 ** 2
            t17528 = t17524 * t17527
            t17533 = t17528 ** 2
            t17531 = t17527 ** 2
            t17530 = t17524 * t17529
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.4389e4) * (76 * t17525 - 6118 * t17526 - 1787 * t17527 + 43379 * t17528 + 16230 * t17529 - 61783 * t17531 + 108560 * t17533 - 88205 * t17535 - 1 + (-132404 + 26910 * t17530) * t17530 + (198283 * t17531 - 143750 * t17533 + 40365 * t17535 + 245) * t17524) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 2034:
            t17550 = np.sin(phi)
            t17547 = t17550 ** 2
            t17548 = t17550 * t17547
            t17538 = np.cos(phi)
            t17539 = t17538 ** 2
            t17541 = t17539 ** 2
            t17545 = t17541 ** 2
            t17540 = t17538 * t17539
            t17543 = t17540 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t17548 ** 2 * (-8184 * t17539 + 4908 * t17540 + 73968 * t17541 - 197800 * t17543 + 161460 * t17545 + 124 + (-3450 * t17541 - 65780 * t17543 + 94185 * t17545 - 295) * t17538) * np.sin((3 * phi1 + 8 * phi2)) * ((1 - t17538) ** (-0.1e1 / 0.2e1)) * ((1 + t17538) ** (-0.1e1 / 0.2e1))

        if Bindx == 2035:
            t17551 = np.cos(phi)
            t17552 = t17551 ** 2
            t17553 = t17551 * t17552
            t17556 = t17553 ** 2
            t17562 = t17556 ** 2
            t17554 = t17552 ** 2
            t17555 = t17551 * t17554
            t17560 = t17555 ** 2
            t17558 = t17554 ** 2
            t17557 = t17551 * t17556
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.437e3) * (-1740 * t17552 - 13182 * t17553 + 13791 * t17554 + 78759 * t17555 - 28558 * t17556 - 4677 * t17558 + 72960 * t17560 - 76375 * t17562 + 29 + (-211140 + 24570 * t17557) * t17557 + (282831 * t17558 - 185310 * t17560 + 47385 * t17562 + 657) * t17551) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 2036:
            t17575 = np.sin(phi)
            t17572 = t17575 ** 2
            t17573 = t17572 ** 2
            t17565 = np.cos(phi)
            t17566 = t17565 ** 2
            t17567 = t17565 * t17566
            t17570 = t17567 ** 2
            t17568 = t17566 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * t17573 ** 2 * (893 * t17566 - 2059 * t17567 - 5425 * t17568 + 8775 * t17570 - 19 + (2015 * t17568 + 4095 * t17570 + 173) * t17565) * np.sin((3 * phi1 + 10 * phi2)) * ((1 - t17565) ** (-0.1e1 / 0.2e1)) * ((1 + t17565) ** (-0.1e1 / 0.2e1))

        if Bindx == 2037:
            t17576 = np.cos(phi)
            t17577 = t17576 ** 2
            t17578 = t17576 * t17577
            t17581 = t17578 ** 2
            t17587 = t17581 ** 2
            t17579 = t17577 ** 2
            t17580 = t17576 * t17579
            t17585 = t17580 ** 2
            t17583 = t17579 ** 2
            t17582 = t17576 * t17581
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * (-920 * t17577 - 1826 * t17578 + 5257 * t17579 + 9955 * t17580 - 10650 * t17581 + 7625 * t17583 + 1772 * t17585 - 4745 * t17587 + 23 + (-23980 + 1638 * t17582) * t17582 + (28655 * t17583 - 16786 * t17585 + 3861 * t17587 + 121) * t17576) * np.cos((3 * phi1 + 11 * phi2))

        if Bindx == 2038:
            t17599 = np.sin(phi)
            t17595 = t17599 ** 2
            t17597 = t17599 * t17595 ** 2
            t17590 = np.cos(phi)
            t17591 = t17590 ** 2
            t17593 = t17591 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.28405e5) * t17597 ** 2 * (-48 * t17591 + 486 * t17593 + 2 + (326 * t17591 + 189 * t17593 - 75) * t17590) * np.sin((3 * phi1 + 12 * phi2)) * ((1 - t17590) ** (-0.1e1 / 0.2e1)) * ((1 + t17590) ** (-0.1e1 / 0.2e1))

        if Bindx == 2039:
            t17600 = np.cos(phi)
            t17601 = t17600 ** 2
            t17602 = t17600 * t17601
            t17605 = t17602 ** 2
            t17611 = t17605 ** 2
            t17603 = t17601 ** 2
            t17604 = t17600 * t17603
            t17609 = t17604 ** 2
            t17607 = t17603 ** 2
            t17606 = t17600 * t17605
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-48 * t17601 - 14 * t17602 + 181 * t17603 + 145 * t17604 - 290 * t17605 + 205 * t17607 - 28 * t17609 - 37 * t17611 + 3 + (-340 + 14 * t17606) * t17606 + (365 * t17607 - 190 * t17609 + 39 * t17611 - 5) * t17600) * np.cos((3 * phi1 + 13 * phi2))

        if Bindx == 2040:
            t17614 = np.cos(phi)
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.596505e6) * ((1 - t17614) ** (0.11e2 / 0.2e1)) * ((1 + t17614) ** (0.17e2 / 0.2e1)) * np.sin((3 * phi1 + 14 * phi2))

        if Bindx == 2041:
            t17615 = np.cos(phi)
            t17616 = t17615 ** 2
            t17617 = t17615 * t17616
            t17620 = t17617 ** 2
            t17625 = t17620 ** 2
            t17626 = t17615 * t17625
            t17618 = t17616 ** 2
            t17619 = t17615 * t17618
            t17623 = t17619 ** 2
            t17621 = t17618 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.6561555e7) * np.cos((4 * phi1 - 14 * phi2)) * (-t17616 - 16 * t17617 + 19 * t17618 + 20 * t17619 - 45 * t17620 + 45 * t17621 - 19 * t17623 + t17625 - 4 * t17626 - 1 + (-20 * t17621 + 16 * t17623 + t17626 + 4) * t17615)

        if Bindx == 2042:
            t17637 = np.sin(phi)
            t17633 = t17637 ** 2
            t17635 = t17637 * t17633 ** 2
            t17628 = np.cos(phi)
            t17629 = t17628 ** 2
            t17631 = t17629 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.937365e6) * t17635 ** 2 * (-16 * t17629 - 26 * t17631 + 2 + (34 * t17629 + 7 * t17631 - 1) * t17628) * np.sin((4 * phi1 - 13 * phi2)) * ((1 - t17628) ** (-0.1e1 / 0.2e1)) * ((1 + t17628) ** (-0.1e1 / 0.2e1))

        if Bindx == 2043:
            t17638 = np.cos(phi)
            t17639 = t17638 ** 2
            t17640 = t17638 * t17639
            t17643 = t17640 ** 2
            t17649 = t17643 ** 2
            t17641 = t17639 ** 2
            t17642 = t17638 * t17641
            t17647 = t17642 ** 2
            t17645 = t17641 ** 2
            t17644 = t17638 * t17643
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.312455e6) * (-25 * t17639 - 48 * t17640 + 169 * t17641 + 40 * t17642 - 425 * t17643 + 475 * t17645 - 211 * t17647 - 5 * t17649 + 1 + (160 + 21 * t17644) * t17644 + (-360 * t17645 + 272 * t17647 - 72 * t17649 + 8) * t17638) * np.cos((4 * phi1 - 12 * phi2))

        if Bindx == 2044:
            t17662 = np.sin(phi)
            t17659 = t17662 ** 2
            t17660 = t17659 ** 2
            t17652 = np.cos(phi)
            t17653 = t17652 ** 2
            t17654 = t17652 * t17653
            t17657 = t17654 ** 2
            t17655 = t17653 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.72105e5) * t17660 ** 2 * (66 * t17653 - 421 * t17654 + 154 * t17655 - 858 * t17657 - 2 + (741 * t17655 + 273 * t17657 + 47) * t17652) * np.sin((4 * phi1 - 11 * phi2)) * ((1 - t17652) ** (-0.1e1 / 0.2e1)) * ((1 + t17652) ** (-0.1e1 / 0.2e1))

        if Bindx == 2045:
            t17663 = np.cos(phi)
            t17664 = t17663 ** 2
            t17665 = t17663 * t17664
            t17668 = t17665 ** 2
            t17674 = t17668 ** 2
            t17666 = t17664 ** 2
            t17667 = t17663 * t17666
            t17672 = t17667 ** 2
            t17670 = t17666 ** 2
            t17669 = t17663 * t17668
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.72105e5) * (-517 * t17664 + 208 * t17665 + 3871 * t17666 - 2900 * t17667 - 10961 * t17668 + 13297 * t17670 - 5311 * t17672 - 1755 * t17674 + 11 + (11392 + 1365 * t17669) * t17669 + (-18796 * t17670 + 14000 * t17672 - 3900 * t17674 - 4) * t17663) * np.cos((4 * phi1 - 10 * phi2))

        if Bindx == 2046:
            t17689 = np.sin(phi)
            t17686 = t17689 ** 2
            t17687 = t17689 * t17686
            t17677 = np.cos(phi)
            t17678 = t17677 ** 2
            t17680 = t17678 ** 2
            t17684 = t17680 ** 2
            t17679 = t17677 * t17678
            t17682 = t17679 ** 2
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * t17687 ** 2 * (108 * t17678 + 728 * t17679 - 1032 * t17680 + 3540 * t17682 - 3510 * t17684 - 2 + (-2190 * t17680 + 1040 * t17682 + 1365 * t17684 - 47) * t17677) * np.sin((4 * phi1 - 9 * phi2)) * ((1 - t17677) ** (-0.1e1 / 0.2e1)) * ((1 + t17677) ** (-0.1e1 / 0.2e1))

        if Bindx == 2047:
            t17690 = np.cos(phi)
            t17691 = t17690 ** 2
            t17692 = t17690 * t17691
            t17695 = t17692 ** 2
            t17701 = t17695 ** 2
            t17693 = t17691 ** 2
            t17694 = t17690 * t17693
            t17699 = t17694 ** 2
            t17697 = t17693 ** 2
            t17696 = t17690 * t17695
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.627e3) * (-2535 * t17691 + 9632 * t17692 + 24151 * t17693 - 66544 * t17694 - 75583 * t17695 + 84173 * t17697 + 5635 * t17699 - 67275 * t17701 + 39 + (208960 + 31395 * t17696) * t17696 + (-326416 * t17697 + 246560 * t17699 - 71760 * t17701 - 432) * t17690) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 2048:
            t17717 = np.sin(phi)
            t17715 = t17717 ** 2
            t17704 = np.cos(phi)
            t17705 = t17704 ** 2
            t17707 = t17705 ** 2
            t17708 = t17704 * t17707
            t17713 = t17708 ** 2
            t17711 = t17707 ** 2
            t17706 = t17704 * t17705
            t17709 = t17706 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t17715 ** 2 * (-2982 * t17705 - 5437 * t17706 + 32228 * t17707 + 22946 * t17708 - 120428 * t17709 + 184690 * t17711 - 98670 * t17713 + 42 + (-12650 * t17709 - 49335 * t17711 + 49335 * t17713 + 261) * t17704) * np.sin((4 * phi1 - 7 * phi2)) * ((1 - t17704) ** (-0.1e1 / 0.2e1)) * ((1 + t17704) ** (-0.1e1 / 0.2e1))

        if Bindx == 2049:
            t17718 = np.cos(phi)
            t17719 = t17718 ** 2
            t17720 = t17718 * t17719
            t17723 = t17720 ** 2
            t17729 = t17723 ** 2
            t17721 = t17719 ** 2
            t17722 = t17718 * t17721
            t17727 = t17722 ** 2
            t17725 = t17721 ** 2
            t17724 = t17718 * t17723
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.19e2) * (-2449 * t17719 + 64624 * t17720 + 21251 * t17721 - 483996 * t17722 - 2509 * t17723 - 338899 * t17725 + 947485 * t17727 - 970255 * t17729 + 31 + (1573504 + 345345 * t17724) * t17724 + (-2522916 * t17725 + 1963280 * t17727 - 592020 * t17729 - 2476) * t17718) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 2050:
            t17733 = np.cos(phi)
            t17734 = t17733 ** 2
            t17735 = t17733 * t17734
            t17738 = t17735 ** 2
            t17744 = t17738 ** 2
            t17736 = t17734 ** 2
            t17737 = t17733 * t17736
            t17742 = t17737 ** 2
            t17740 = t17736 ** 2
            t17732 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.95e2) * t17732 ** 2 * (10920 * t17734 - 7454 * t17735 - 143410 * t17736 + 77967 * t17737 + 674016 * t17738 - 1416294 * t17740 + 1366200 * t17742 - 493350 * t17744 - 130 + (-370788 * t17738 + 844767 * t17740 - 888030 * t17742 + 345345 * t17744 + 241) * t17733) * np.sin((4 * phi1 - 5 * phi2)) * ((1 - t17733) ** (-0.1e1 / 0.2e1)) * ((1 + t17733) ** (-0.1e1 / 0.2e1))

        if Bindx == 2051:
            t17746 = np.cos(phi)
            t17747 = t17746 ** 2
            t17748 = t17746 * t17747
            t17751 = t17748 ** 2
            t17757 = t17751 ** 2
            t17749 = t17747 ** 2
            t17750 = t17746 * t17749
            t17755 = t17750 ** 2
            t17753 = t17749 ** 2
            t17752 = t17746 * t17751
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (67729 * t17747 + 631184 * t17748 - 1030561 * t17749 - 5166328 * t17750 + 6149217 * t17751 - 18088323 * t17753 + 27904635 * t17755 - 21559395 * t17757 - 761 + (17935392 + 6561555 * t17752) * t17752 + (-30111048 * t17753 + 24227280 * t17755 - 7498920 * t17757 - 21656) * t17746) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 2052:
            t17761 = np.cos(phi)
            t17762 = t17761 ** 2
            t17763 = t17761 * t17762
            t17766 = t17763 ** 2
            t17772 = t17766 ** 2
            t17764 = t17762 ** 2
            t17765 = t17761 * t17764
            t17770 = t17765 ** 2
            t17768 = t17764 ** 2
            t17760 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.11e2) * t17760 ** 2 * (8648 * t17762 - 34486 * t17763 - 123310 * t17764 + 297863 * t17765 + 621376 * t17766 - 1378298 * t17768 + 1380920 * t17770 - 511290 * t17772 - 94 + (-1105876 * t17766 + 2008015 * t17768 - 1761110 * t17770 + 596505 * t17772 + 1137) * t17761) * np.sin((4 * phi1 - 3 * phi2)) * ((1 - t17761) ** (-0.1e1 / 0.2e1)) * ((1 + t17761) ** (-0.1e1 / 0.2e1))

        if Bindx == 2053:
            t17774 = np.cos(phi)
            t17775 = t17774 ** 2
            t17776 = t17774 * t17775
            t17779 = t17776 ** 2
            t17785 = t17779 ** 2
            t17777 = t17775 ** 2
            t17778 = t17774 * t17777
            t17783 = t17778 ** 2
            t17781 = t17777 ** 2
            t17780 = t17774 * t17779
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.561e3) * (8455 * t17775 + 23952 * t17776 - 130821 * t17777 - 207252 * t17778 + 759259 * t17779 - 2102939 * t17781 + 3000005 * t17783 - 2130375 * t17785 - 89 + (753920 + 596505 * t17780) * t17780 + (-1312748 * t17781 + 1083760 * t17783 - 340860 * t17785 - 772) * t17774) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 2054:
            t17801 = np.sin(phi)
            t17799 = t17801 ** 2
            t17788 = np.cos(phi)
            t17789 = t17788 ** 2
            t17791 = t17789 ** 2
            t17792 = t17788 * t17791
            t17797 = t17792 ** 2
            t17795 = t17791 ** 2
            t17790 = t17788 * t17789
            t17793 = t17790 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.7293e4) * t17799 ** 2 * (-190 * t17789 + 2945 * t17790 + 2660 * t17791 - 23674 * t17792 - 12236 * t17793 + 21850 * t17795 - 13110 * t17797 + 2 + (74290 * t17793 - 98325 * t17795 + 45885 * t17797 - 97) * t17788) * np.sin((4 * phi1 - phi2)) * ((1 - t17788) ** (-0.1e1 / 0.2e1)) * ((1 + t17788) ** (-0.1e1 / 0.2e1))

        if Bindx == 2055:
            t17802 = np.cos(phi)
            t17803 = t17802 ** 2
            t17804 = t17803 ** 2
            t17805 = t17803 * t17804
            t17808 = t17805 ** 2
            t17806 = t17804 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t17804 + 8873 * t17805 - 24491 * t17806 - 24035 * t17808 - 1 + (34523 * t17806 + 6555 * t17808 + 97) * t17803) * np.cos((4 * phi1))

        if Bindx == 2056:
            t17823 = np.sin(phi)
            t17821 = t17823 ** 2
            t17810 = np.cos(phi)
            t17811 = t17810 ** 2
            t17813 = t17811 ** 2
            t17814 = t17810 * t17813
            t17819 = t17814 ** 2
            t17817 = t17813 ** 2
            t17812 = t17810 * t17811
            t17815 = t17812 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7293e4) * t17821 ** 2 * (190 * t17811 + 2945 * t17812 - 2660 * t17813 - 23674 * t17814 + 12236 * t17815 - 21850 * t17817 + 13110 * t17819 - 2 + (74290 * t17815 - 98325 * t17817 + 45885 * t17819 - 97) * t17810) * np.sin((4 * phi1 + phi2)) * ((1 - t17810) ** (-0.1e1 / 0.2e1)) * ((1 + t17810) ** (-0.1e1 / 0.2e1))

        if Bindx == 2057:
            t17824 = np.cos(phi)
            t17825 = t17824 ** 2
            t17826 = t17824 * t17825
            t17829 = t17826 ** 2
            t17835 = t17829 ** 2
            t17827 = t17825 ** 2
            t17828 = t17824 * t17827
            t17833 = t17828 ** 2
            t17831 = t17827 ** 2
            t17830 = t17824 * t17829
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.561e3) * (8455 * t17825 - 23952 * t17826 - 130821 * t17827 + 207252 * t17828 + 759259 * t17829 - 2102939 * t17831 + 3000005 * t17833 - 2130375 * t17835 - 89 + (-753920 + 596505 * t17830) * t17830 + (1312748 * t17831 - 1083760 * t17833 + 340860 * t17835 + 772) * t17824) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 2058:
            t17839 = np.cos(phi)
            t17840 = t17839 ** 2
            t17841 = t17839 * t17840
            t17844 = t17841 ** 2
            t17850 = t17844 ** 2
            t17842 = t17840 ** 2
            t17843 = t17839 * t17842
            t17848 = t17843 ** 2
            t17846 = t17842 ** 2
            t17838 = np.sin(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.11e2) * t17838 ** 2 * (-8648 * t17840 - 34486 * t17841 + 123310 * t17842 + 297863 * t17843 - 621376 * t17844 + 1378298 * t17846 - 1380920 * t17848 + 511290 * t17850 + 94 + (-1105876 * t17844 + 2008015 * t17846 - 1761110 * t17848 + 596505 * t17850 + 1137) * t17839) * np.sin((4 * phi1 + 3 * phi2)) * ((1 - t17839) ** (-0.1e1 / 0.2e1)) * ((1 + t17839) ** (-0.1e1 / 0.2e1))

        if Bindx == 2059:
            t17852 = np.cos(phi)
            t17853 = t17852 ** 2
            t17854 = t17852 * t17853
            t17857 = t17854 ** 2
            t17863 = t17857 ** 2
            t17855 = t17853 ** 2
            t17856 = t17852 * t17855
            t17861 = t17856 ** 2
            t17859 = t17855 ** 2
            t17858 = t17852 * t17857
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (67729 * t17853 - 631184 * t17854 - 1030561 * t17855 + 5166328 * t17856 + 6149217 * t17857 - 18088323 * t17859 + 27904635 * t17861 - 21559395 * t17863 - 761 + (-17935392 + 6561555 * t17858) * t17858 + (30111048 * t17859 - 24227280 * t17861 + 7498920 * t17863 + 21656) * t17852) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 2060:
            t17867 = np.cos(phi)
            t17868 = t17867 ** 2
            t17869 = t17867 * t17868
            t17872 = t17869 ** 2
            t17878 = t17872 ** 2
            t17870 = t17868 ** 2
            t17871 = t17867 * t17870
            t17876 = t17871 ** 2
            t17874 = t17870 ** 2
            t17866 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.95e2) * t17866 ** 2 * (-10920 * t17868 - 7454 * t17869 + 143410 * t17870 + 77967 * t17871 - 674016 * t17872 + 1416294 * t17874 - 1366200 * t17876 + 493350 * t17878 + 130 + (-370788 * t17872 + 844767 * t17874 - 888030 * t17876 + 345345 * t17878 + 241) * t17867) * np.sin((4 * phi1 + 5 * phi2)) * ((1 - t17867) ** (-0.1e1 / 0.2e1)) * ((1 + t17867) ** (-0.1e1 / 0.2e1))

        if Bindx == 2061:
            t17880 = np.cos(phi)
            t17881 = t17880 ** 2
            t17882 = t17880 * t17881
            t17885 = t17882 ** 2
            t17891 = t17885 ** 2
            t17883 = t17881 ** 2
            t17884 = t17880 * t17883
            t17889 = t17884 ** 2
            t17887 = t17883 ** 2
            t17886 = t17880 * t17885
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.19e2) * (-2449 * t17881 - 64624 * t17882 + 21251 * t17883 + 483996 * t17884 - 2509 * t17885 - 338899 * t17887 + 947485 * t17889 - 970255 * t17891 + 31 + (-1573504 + 345345 * t17886) * t17886 + (2522916 * t17887 - 1963280 * t17889 + 592020 * t17891 + 2476) * t17880) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 2062:
            t17907 = np.sin(phi)
            t17905 = t17907 ** 2
            t17894 = np.cos(phi)
            t17895 = t17894 ** 2
            t17897 = t17895 ** 2
            t17898 = t17894 * t17897
            t17903 = t17898 ** 2
            t17901 = t17897 ** 2
            t17896 = t17894 * t17895
            t17899 = t17896 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t17905 ** 2 * (2982 * t17895 - 5437 * t17896 - 32228 * t17897 + 22946 * t17898 + 120428 * t17899 - 184690 * t17901 + 98670 * t17903 - 42 + (-12650 * t17899 - 49335 * t17901 + 49335 * t17903 + 261) * t17894) * np.sin((4 * phi1 + 7 * phi2)) * ((1 - t17894) ** (-0.1e1 / 0.2e1)) * ((1 + t17894) ** (-0.1e1 / 0.2e1))

        if Bindx == 2063:
            t17908 = np.cos(phi)
            t17909 = t17908 ** 2
            t17910 = t17908 * t17909
            t17913 = t17910 ** 2
            t17919 = t17913 ** 2
            t17911 = t17909 ** 2
            t17912 = t17908 * t17911
            t17917 = t17912 ** 2
            t17915 = t17911 ** 2
            t17914 = t17908 * t17913
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.627e3) * (-2535 * t17909 - 9632 * t17910 + 24151 * t17911 + 66544 * t17912 - 75583 * t17913 + 84173 * t17915 + 5635 * t17917 - 67275 * t17919 + 39 + (-208960 + 31395 * t17914) * t17914 + (326416 * t17915 - 246560 * t17917 + 71760 * t17919 + 432) * t17908) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 2064:
            t17934 = np.sin(phi)
            t17931 = t17934 ** 2
            t17932 = t17934 * t17931
            t17922 = np.cos(phi)
            t17923 = t17922 ** 2
            t17925 = t17923 ** 2
            t17929 = t17925 ** 2
            t17924 = t17922 * t17923
            t17927 = t17924 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * t17932 ** 2 * (-108 * t17923 + 728 * t17924 + 1032 * t17925 - 3540 * t17927 + 3510 * t17929 + 2 + (-2190 * t17925 + 1040 * t17927 + 1365 * t17929 - 47) * t17922) * np.sin((4 * phi1 + 9 * phi2)) * ((1 - t17922) ** (-0.1e1 / 0.2e1)) * ((1 + t17922) ** (-0.1e1 / 0.2e1))

        if Bindx == 2065:
            t17935 = np.cos(phi)
            t17936 = t17935 ** 2
            t17937 = t17935 * t17936
            t17940 = t17937 ** 2
            t17946 = t17940 ** 2
            t17938 = t17936 ** 2
            t17939 = t17935 * t17938
            t17944 = t17939 ** 2
            t17942 = t17938 ** 2
            t17941 = t17935 * t17940
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.72105e5) * (-517 * t17936 - 208 * t17937 + 3871 * t17938 + 2900 * t17939 - 10961 * t17940 + 13297 * t17942 - 5311 * t17944 - 1755 * t17946 + 11 + (-11392 + 1365 * t17941) * t17941 + (18796 * t17942 - 14000 * t17944 + 3900 * t17946 + 4) * t17935) * np.cos((4 * phi1 + 10 * phi2))

        if Bindx == 2066:
            t17959 = np.sin(phi)
            t17956 = t17959 ** 2
            t17957 = t17956 ** 2
            t17949 = np.cos(phi)
            t17950 = t17949 ** 2
            t17951 = t17949 * t17950
            t17954 = t17951 ** 2
            t17952 = t17950 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.72105e5) * t17957 ** 2 * (-66 * t17950 - 421 * t17951 - 154 * t17952 + 858 * t17954 + 2 + (741 * t17952 + 273 * t17954 + 47) * t17949) * np.sin((4 * phi1 + 11 * phi2)) * ((1 - t17949) ** (-0.1e1 / 0.2e1)) * ((1 + t17949) ** (-0.1e1 / 0.2e1))

        if Bindx == 2067:
            t17960 = np.cos(phi)
            t17961 = t17960 ** 2
            t17962 = t17960 * t17961
            t17965 = t17962 ** 2
            t17971 = t17965 ** 2
            t17963 = t17961 ** 2
            t17964 = t17960 * t17963
            t17969 = t17964 ** 2
            t17967 = t17963 ** 2
            t17966 = t17960 * t17965
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.312455e6) * (-25 * t17961 + 48 * t17962 + 169 * t17963 - 40 * t17964 - 425 * t17965 + 475 * t17967 - 211 * t17969 - 5 * t17971 + 1 + (-160 + 21 * t17966) * t17966 + (360 * t17967 - 272 * t17969 + 72 * t17971 - 8) * t17960) * np.cos((4 * phi1 + 12 * phi2))

        if Bindx == 2068:
            t17983 = np.sin(phi)
            t17979 = t17983 ** 2
            t17981 = t17983 * t17979 ** 2
            t17974 = np.cos(phi)
            t17975 = t17974 ** 2
            t17977 = t17975 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.937365e6) * t17981 ** 2 * (16 * t17975 + 26 * t17977 - 2 + (34 * t17975 + 7 * t17977 - 1) * t17974) * np.sin((4 * phi1 + 13 * phi2)) * ((1 - t17974) ** (-0.1e1 / 0.2e1)) * ((1 + t17974) ** (-0.1e1 / 0.2e1))

        if Bindx == 2069:
            t17984 = np.cos(phi)
            t17985 = t17984 ** 2
            t17986 = t17984 * t17985
            t17989 = t17986 ** 2
            t17994 = t17989 ** 2
            t17995 = t17984 * t17994
            t17987 = t17985 ** 2
            t17988 = t17984 * t17987
            t17992 = t17988 ** 2
            t17990 = t17987 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.6561555e7) * np.cos((4 * phi1 + 14 * phi2)) * (-t17985 + 16 * t17986 + 19 * t17987 - 20 * t17988 - 45 * t17989 + 45 * t17990 - 19 * t17992 + t17994 + 4 * t17995 - 1 + (20 * t17990 - 16 * t17992 + t17995 - 4) * t17984)

        if Bindx == 2070:
            t17997 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * ((1 - t17997) ** (0.19e2 / 0.2e1)) * ((1 + t17997) ** (0.9e1 / 0.2e1)) * np.sin((5 * phi1 - 14 * phi2))

        if Bindx == 2071:
            t17998 = np.cos(phi)
            t17999 = t17998 ** 2
            t18000 = t17998 * t17999
            t18003 = t18000 ** 2
            t18009 = t18003 ** 2
            t18001 = t17999 ** 2
            t18002 = t17998 * t18001
            t18007 = t18002 ** 2
            t18005 = t18001 ** 2
            t18004 = t17998 * t18003
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (40 * t17999 - 134 * t18000 + 5 * t18001 + 361 * t18002 - 306 * t18003 + 549 * t18005 - 356 * t18007 + 59 * t18009 - 5 + (-324 + 14 * t18004) * t18004 + (-19 * t18005 + 170 * t18007 - 65 * t18009 + 11) * t17998) * np.cos((5 * phi1 - 13 * phi2))

        if Bindx == 2072:
            t18022 = np.sin(phi)
            t18019 = t18022 ** 2
            t18020 = t18019 ** 2
            t18012 = np.cos(phi)
            t18013 = t18012 ** 2
            t18014 = t18012 * t18013
            t18017 = t18014 ** 2
            t18015 = t18013 ** 2
            tfunc[..., c] = 0.435e3 / 0.4096e4 * np.sqrt(0.3289e4) * t18020 ** 2 * (34 * t18013 - 25 * t18014 - 70 * t18015 - 90 * t18017 - 2 + (137 * t18015 + 21 * t18017 - 5) * t18012) * np.sin((5 * phi1 - 12 * phi2)) * ((1 - t18012) ** (-0.1e1 / 0.2e1)) * ((1 + t18012) ** (-0.1e1 / 0.2e1))

        if Bindx == 2073:
            t18023 = np.cos(phi)
            t18024 = t18023 ** 2
            t18025 = t18023 * t18024
            t18028 = t18025 ** 2
            t18034 = t18028 ** 2
            t18026 = t18024 ** 2
            t18027 = t18023 * t18026
            t18032 = t18027 ** 2
            t18030 = t18026 ** 2
            t18029 = t18023 * t18028
            tfunc[..., c] = 0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (-160 * t18024 - 1262 * t18025 + 2035 * t18026 + 3385 * t18027 - 7886 * t18028 + 12427 * t18030 - 8020 * t18032 + 1053 * t18034 + 5 + (-1748 + 546 * t18029) * t18029 + (-4411 * t18030 + 6050 * t18032 - 2145 * t18034 + 131) * t18023) * np.cos((5 * phi1 - 11 * phi2))

        if Bindx == 2074:
            t18049 = np.sin(phi)
            t18046 = t18049 ** 2
            t18047 = t18049 * t18046
            t18037 = np.cos(phi)
            t18038 = t18037 ** 2
            t18040 = t18038 ** 2
            t18044 = t18040 ** 2
            t18039 = t18037 * t18038
            t18042 = t18039 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * t18047 ** 2 * (-2120 * t18038 + 6720 * t18039 + 5690 * t18040 + 10000 * t18042 - 24375 * t18044 + 53 + (-25678 * t18040 + 23400 * t18042 + 6825 * t18044 - 515) * t18037) * np.sin((5 * phi1 - 10 * phi2)) * ((1 - t18037) ** (-0.1e1 / 0.2e1)) * ((1 + t18037) ** (-0.1e1 / 0.2e1))

        if Bindx == 2075:
            t18050 = np.cos(phi)
            t18051 = t18050 ** 2
            t18052 = t18050 * t18051
            t18055 = t18052 ** 2
            t18061 = t18055 ** 2
            t18053 = t18051 ** 2
            t18054 = t18050 * t18053
            t18059 = t18054 ** 2
            t18057 = t18053 ** 2
            t18056 = t18050 * t18055
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.1265e4) * (-676 * t18051 - 502 * t18052 + 5943 * t18053 - 457 * t18054 - 20366 * t18055 + 31067 * t18057 - 18776 * t18059 + 65 * t18061 + 13 + (10956 + 2730 * t18056) * t18056 + (-27513 * t18057 + 26250 * t18059 - 8775 * t18061 + 41) * t18050) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 2076:
            t18077 = np.sin(phi)
            t18075 = t18077 ** 2
            t18064 = np.cos(phi)
            t18065 = t18064 ** 2
            t18067 = t18065 ** 2
            t18068 = t18064 * t18067
            t18073 = t18068 ** 2
            t18071 = t18067 ** 2
            t18066 = t18064 * t18065
            t18069 = t18066 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t18075 ** 2 * (-708 * t18065 - 15185 * t18066 + 11560 * t18067 + 67378 * t18068 - 68632 * t18069 + 140300 * t18071 - 89700 * t18073 + 12 + (-99682 * t18069 + 22425 * t18071 + 31395 * t18073 + 837) * t18064) * np.sin((5 * phi1 - 8 * phi2)) * ((1 - t18064) ** (-0.1e1 / 0.2e1)) * ((1 + t18064) ** (-0.1e1 / 0.2e1))

        if Bindx == 2077:
            t18078 = np.cos(phi)
            t18079 = t18078 ** 2
            t18080 = t18078 * t18079
            t18083 = t18080 ** 2
            t18089 = t18083 ** 2
            t18081 = t18079 ** 2
            t18082 = t18078 * t18081
            t18087 = t18082 ** 2
            t18085 = t18081 ** 2
            t18084 = t18078 * t18083
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.105e3) * (-7548 * t18079 + 19586 * t18080 + 77677 * t18081 - 150493 * t18082 - 274906 * t18083 + 389609 * t18085 - 135608 * t18087 - 148005 * t18089 + 111 + (529948 + 98670 * t18084) * t18084 + (-923197 * t18085 + 771650 * t18087 - 246675 * t18089 - 819) * t18078) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 2078:
            t18093 = np.cos(phi)
            t18094 = t18093 ** 2
            t18095 = t18093 * t18094
            t18098 = t18095 ** 2
            t18104 = t18098 ** 2
            t18096 = t18094 ** 2
            t18097 = t18093 * t18096
            t18102 = t18097 ** 2
            t18100 = t18096 ** 2
            t18092 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t18092 ** 2 * (16946 * t18094 + 44822 * t18095 - 205839 * t18096 - 247081 * t18097 + 942508 * t18098 - 2003507 * t18100 + 1986050 * t18102 - 740025 * t18104 - 229 + (426404 * t18098 - 4301 * t18100 - 559130 * t18102 + 345345 * t18104 - 1963) * t18093) * np.sin((5 * phi1 - 6 * phi2)) * ((1 - t18093) ** (-0.1e1 / 0.2e1)) * ((1 + t18093) ** (-0.1e1 / 0.2e1))

        if Bindx == 2079:
            t18106 = np.cos(phi)
            t18107 = t18106 ** 2
            t18108 = t18106 * t18107
            t18111 = t18108 ** 2
            t18117 = t18111 ** 2
            t18109 = t18107 ** 2
            t18110 = t18106 * t18109
            t18115 = t18110 ** 2
            t18113 = t18109 ** 2
            t18112 = t18106 * t18111
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (-32720 * t18107 + 599990 * t18108 + 327215 * t18109 - 4577341 * t18110 - 618630 * t18111 - 2004585 * t18113 + 8005932 * t18115 - 9126975 * t18117 + 409 + (15206340 + 3453450 * t18112) * t18112 + (-24967305 * t18113 + 19923750 * t18115 - 6166875 * t18117 - 22655) * t18106) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 2080:
            t18121 = np.cos(phi)
            t18122 = t18121 ** 2
            t18123 = t18121 * t18122
            t18126 = t18123 ** 2
            t18132 = t18126 ** 2
            t18124 = t18122 ** 2
            t18125 = t18121 * t18124
            t18130 = t18125 ** 2
            t18128 = t18124 ** 2
            t18120 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.95e2) * t18120 ** 2 * (10920 * t18122 - 7454 * t18123 - 143410 * t18124 + 77967 * t18125 + 674016 * t18126 - 1416294 * t18128 + 1366200 * t18130 - 493350 * t18132 - 130 + (-370788 * t18126 + 844767 * t18128 - 888030 * t18130 + 345345 * t18132 + 241) * t18121) * np.sin((5 * phi1 - 4 * phi2)) * ((1 - t18121) ** (-0.1e1 / 0.2e1)) * ((1 + t18121) ** (-0.1e1 / 0.2e1))

        if Bindx == 2081:
            t18134 = np.cos(phi)
            t18135 = t18134 ** 2
            t18136 = t18134 * t18135
            t18139 = t18136 ** 2
            t18145 = t18139 ** 2
            t18137 = t18135 ** 2
            t18138 = t18134 * t18137
            t18143 = t18138 ** 2
            t18141 = t18137 ** 2
            t18140 = t18134 * t18139
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1045e4) * (792 * t18135 + 6190 * t18136 - 11783 * t18137 - 49949 * t18138 + 68134 * t18139 - 193271 * t18141 + 287132 * t18143 - 213785 * t18145 - 9 + (170612 + 62790 * t18140) * t18140 + (-281313 * t18141 + 221950 * t18143 - 67275 * t18145 - 215) * t18134) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 2082:
            t18161 = np.sin(phi)
            t18159 = t18161 ** 2
            t18148 = np.cos(phi)
            t18149 = t18148 ** 2
            t18151 = t18149 ** 2
            t18152 = t18148 * t18151
            t18157 = t18152 ** 2
            t18155 = t18151 ** 2
            t18150 = t18148 * t18149
            t18153 = t18150 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.53295e5) * t18159 ** 2 * (-445 * t18149 + 2255 * t18150 + 5810 * t18151 - 17206 * t18152 - 24794 * t18153 + 40825 * t18155 - 22425 * t18157 + 5 + (51934 * t18153 - 67275 * t18155 + 31395 * t18157 - 79) * t18148) * np.sin((5 * phi1 - 2 * phi2)) * ((1 - t18148) ** (-0.1e1 / 0.2e1)) * ((1 + t18148) ** (-0.1e1 / 0.2e1))

        if Bindx == 2083:
            t18162 = np.cos(phi)
            t18163 = t18162 ** 2
            t18164 = t18162 * t18163
            t18167 = t18164 ** 2
            t18173 = t18167 ** 2
            t18165 = t18163 ** 2
            t18166 = t18162 * t18165
            t18171 = t18166 ** 2
            t18169 = t18165 ** 2
            t18168 = t18162 * t18167
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * (92 * t18163 + 150 * t18164 - 1371 * t18165 - 1251 * t18166 + 7622 * t18167 - 20119 * t18169 + 27232 * t18171 - 18285 * t18173 - 1 + (4372 + 4830 * t18168) * t18168 + (-7291 * t18169 + 5750 * t18171 - 1725 * t18173 - 5) * t18162) * np.cos((5 * phi1 - phi2))

        if Bindx == 2084:
            t18184 = np.sin(phi)
            t18181 = t18184 ** 2
            t18182 = t18184 * t18181
            t18176 = np.cos(phi)
            t18177 = t18176 ** 2
            t18178 = t18177 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t18176 * t18182 ** 2 * (-140 * t18177 + 5 + (-2300 * t18177 + 966 + 1725 * t18178) * t18178) * np.sin((5 * phi1)) * ((1 - t18176) ** (-0.1e1 / 0.2e1)) * ((1 + t18176) ** (-0.1e1 / 0.2e1))

        if Bindx == 2085:
            t18185 = np.cos(phi)
            t18186 = t18185 ** 2
            t18187 = t18185 * t18186
            t18190 = t18187 ** 2
            t18196 = t18190 ** 2
            t18188 = t18186 ** 2
            t18189 = t18185 * t18188
            t18194 = t18189 ** 2
            t18192 = t18188 ** 2
            t18191 = t18185 * t18190
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * (92 * t18186 - 150 * t18187 - 1371 * t18188 + 1251 * t18189 + 7622 * t18190 - 20119 * t18192 + 27232 * t18194 - 18285 * t18196 - 1 + (-4372 + 4830 * t18191) * t18191 + (7291 * t18192 - 5750 * t18194 + 1725 * t18196 + 5) * t18185) * np.cos((5 * phi1 + phi2))

        if Bindx == 2086:
            t18212 = np.sin(phi)
            t18210 = t18212 ** 2
            t18199 = np.cos(phi)
            t18200 = t18199 ** 2
            t18202 = t18200 ** 2
            t18203 = t18199 * t18202
            t18208 = t18203 ** 2
            t18206 = t18202 ** 2
            t18201 = t18199 * t18200
            t18204 = t18201 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.53295e5) * t18210 ** 2 * (445 * t18200 + 2255 * t18201 - 5810 * t18202 - 17206 * t18203 + 24794 * t18204 - 40825 * t18206 + 22425 * t18208 - 5 + (51934 * t18204 - 67275 * t18206 + 31395 * t18208 - 79) * t18199) * np.sin((5 * phi1 + 2 * phi2)) * ((1 - t18199) ** (-0.1e1 / 0.2e1)) * ((1 + t18199) ** (-0.1e1 / 0.2e1))

        if Bindx == 2087:
            t18213 = np.cos(phi)
            t18214 = t18213 ** 2
            t18215 = t18213 * t18214
            t18218 = t18215 ** 2
            t18224 = t18218 ** 2
            t18216 = t18214 ** 2
            t18217 = t18213 * t18216
            t18222 = t18217 ** 2
            t18220 = t18216 ** 2
            t18219 = t18213 * t18218
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1045e4) * (792 * t18214 - 6190 * t18215 - 11783 * t18216 + 49949 * t18217 + 68134 * t18218 - 193271 * t18220 + 287132 * t18222 - 213785 * t18224 - 9 + (-170612 + 62790 * t18219) * t18219 + (281313 * t18220 - 221950 * t18222 + 67275 * t18224 + 215) * t18213) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 2088:
            t18228 = np.cos(phi)
            t18229 = t18228 ** 2
            t18230 = t18228 * t18229
            t18233 = t18230 ** 2
            t18239 = t18233 ** 2
            t18231 = t18229 ** 2
            t18232 = t18228 * t18231
            t18237 = t18232 ** 2
            t18235 = t18231 ** 2
            t18227 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.95e2) * t18227 ** 2 * (-10920 * t18229 - 7454 * t18230 + 143410 * t18231 + 77967 * t18232 - 674016 * t18233 + 1416294 * t18235 - 1366200 * t18237 + 493350 * t18239 + 130 + (-370788 * t18233 + 844767 * t18235 - 888030 * t18237 + 345345 * t18239 + 241) * t18228) * np.sin((5 * phi1 + 4 * phi2)) * ((1 - t18228) ** (-0.1e1 / 0.2e1)) * ((1 + t18228) ** (-0.1e1 / 0.2e1))

        if Bindx == 2089:
            t18241 = np.cos(phi)
            t18242 = t18241 ** 2
            t18243 = t18241 * t18242
            t18246 = t18243 ** 2
            t18252 = t18246 ** 2
            t18244 = t18242 ** 2
            t18245 = t18241 * t18244
            t18250 = t18245 ** 2
            t18248 = t18244 ** 2
            t18247 = t18241 * t18246
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (-32720 * t18242 - 599990 * t18243 + 327215 * t18244 + 4577341 * t18245 - 618630 * t18246 - 2004585 * t18248 + 8005932 * t18250 - 9126975 * t18252 + 409 + (-15206340 + 3453450 * t18247) * t18247 + (24967305 * t18248 - 19923750 * t18250 + 6166875 * t18252 + 22655) * t18241) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 2090:
            t18256 = np.cos(phi)
            t18257 = t18256 ** 2
            t18258 = t18256 * t18257
            t18261 = t18258 ** 2
            t18267 = t18261 ** 2
            t18259 = t18257 ** 2
            t18260 = t18256 * t18259
            t18265 = t18260 ** 2
            t18263 = t18259 ** 2
            t18255 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t18255 ** 2 * (-16946 * t18257 + 44822 * t18258 + 205839 * t18259 - 247081 * t18260 - 942508 * t18261 + 2003507 * t18263 - 1986050 * t18265 + 740025 * t18267 + 229 + (426404 * t18261 - 4301 * t18263 - 559130 * t18265 + 345345 * t18267 - 1963) * t18256) * np.sin((5 * phi1 + 6 * phi2)) * ((1 - t18256) ** (-0.1e1 / 0.2e1)) * ((1 + t18256) ** (-0.1e1 / 0.2e1))

        if Bindx == 2091:
            t18269 = np.cos(phi)
            t18270 = t18269 ** 2
            t18271 = t18269 * t18270
            t18274 = t18271 ** 2
            t18280 = t18274 ** 2
            t18272 = t18270 ** 2
            t18273 = t18269 * t18272
            t18278 = t18273 ** 2
            t18276 = t18272 ** 2
            t18275 = t18269 * t18274
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.105e3) * (-7548 * t18270 - 19586 * t18271 + 77677 * t18272 + 150493 * t18273 - 274906 * t18274 + 389609 * t18276 - 135608 * t18278 - 148005 * t18280 + 111 + (-529948 + 98670 * t18275) * t18275 + (923197 * t18276 - 771650 * t18278 + 246675 * t18280 + 819) * t18269) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 2092:
            t18296 = np.sin(phi)
            t18294 = t18296 ** 2
            t18283 = np.cos(phi)
            t18284 = t18283 ** 2
            t18286 = t18284 ** 2
            t18287 = t18283 * t18286
            t18292 = t18287 ** 2
            t18290 = t18286 ** 2
            t18285 = t18283 * t18284
            t18288 = t18285 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t18294 ** 2 * (708 * t18284 - 15185 * t18285 - 11560 * t18286 + 67378 * t18287 + 68632 * t18288 - 140300 * t18290 + 89700 * t18292 - 12 + (-99682 * t18288 + 22425 * t18290 + 31395 * t18292 + 837) * t18283) * np.sin((5 * phi1 + 8 * phi2)) * ((1 - t18283) ** (-0.1e1 / 0.2e1)) * ((1 + t18283) ** (-0.1e1 / 0.2e1))

        if Bindx == 2093:
            t18297 = np.cos(phi)
            t18298 = t18297 ** 2
            t18299 = t18297 * t18298
            t18302 = t18299 ** 2
            t18308 = t18302 ** 2
            t18300 = t18298 ** 2
            t18301 = t18297 * t18300
            t18306 = t18301 ** 2
            t18304 = t18300 ** 2
            t18303 = t18297 * t18302
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.1265e4) * (-676 * t18298 + 502 * t18299 + 5943 * t18300 + 457 * t18301 - 20366 * t18302 + 31067 * t18304 - 18776 * t18306 + 65 * t18308 + 13 + (-10956 + 2730 * t18303) * t18303 + (27513 * t18304 - 26250 * t18306 + 8775 * t18308 - 41) * t18297) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 2094:
            t18323 = np.sin(phi)
            t18320 = t18323 ** 2
            t18321 = t18323 * t18320
            t18311 = np.cos(phi)
            t18312 = t18311 ** 2
            t18314 = t18312 ** 2
            t18318 = t18314 ** 2
            t18313 = t18311 * t18312
            t18316 = t18313 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * t18321 ** 2 * (2120 * t18312 + 6720 * t18313 - 5690 * t18314 - 10000 * t18316 + 24375 * t18318 - 53 + (-25678 * t18314 + 23400 * t18316 + 6825 * t18318 - 515) * t18311) * np.sin((5 * phi1 + 10 * phi2)) * ((1 - t18311) ** (-0.1e1 / 0.2e1)) * ((1 + t18311) ** (-0.1e1 / 0.2e1))

        if Bindx == 2095:
            t18324 = np.cos(phi)
            t18325 = t18324 ** 2
            t18326 = t18324 * t18325
            t18329 = t18326 ** 2
            t18335 = t18329 ** 2
            t18327 = t18325 ** 2
            t18328 = t18324 * t18327
            t18333 = t18328 ** 2
            t18331 = t18327 ** 2
            t18330 = t18324 * t18329
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (-160 * t18325 + 1262 * t18326 + 2035 * t18327 - 3385 * t18328 - 7886 * t18329 + 12427 * t18331 - 8020 * t18333 + 1053 * t18335 + 5 + (1748 + 546 * t18330) * t18330 + (4411 * t18331 - 6050 * t18333 + 2145 * t18335 - 131) * t18324) * np.cos((5 * phi1 + 11 * phi2))

        if Bindx == 2096:
            t18348 = np.sin(phi)
            t18345 = t18348 ** 2
            t18346 = t18345 ** 2
            t18338 = np.cos(phi)
            t18339 = t18338 ** 2
            t18340 = t18338 * t18339
            t18343 = t18340 ** 2
            t18341 = t18339 ** 2
            tfunc[..., c] = 0.435e3 / 0.4096e4 * np.sqrt(0.3289e4) * t18346 ** 2 * (-34 * t18339 - 25 * t18340 + 70 * t18341 + 90 * t18343 + 2 + (137 * t18341 + 21 * t18343 - 5) * t18338) * np.sin((5 * phi1 + 12 * phi2)) * ((1 - t18338) ** (-0.1e1 / 0.2e1)) * ((1 + t18338) ** (-0.1e1 / 0.2e1))

        if Bindx == 2097:
            t18349 = np.cos(phi)
            t18350 = t18349 ** 2
            t18351 = t18349 * t18350
            t18354 = t18351 ** 2
            t18360 = t18354 ** 2
            t18352 = t18350 ** 2
            t18353 = t18349 * t18352
            t18358 = t18353 ** 2
            t18356 = t18352 ** 2
            t18355 = t18349 * t18354
            tfunc[..., c] = 0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (40 * t18350 + 134 * t18351 + 5 * t18352 - 361 * t18353 - 306 * t18354 + 549 * t18356 - 356 * t18358 + 59 * t18360 - 5 + (324 + 14 * t18355) * t18355 + (19 * t18356 - 170 * t18358 + 65 * t18360 - 11) * t18349) * np.cos((5 * phi1 + 13 * phi2))

        if Bindx == 2098:
            t18363 = np.cos(phi)
            tfunc[..., c] = 0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * ((1 - t18363) ** (0.9e1 / 0.2e1)) * ((1 + t18363) ** (0.19e2 / 0.2e1)) * np.sin((5 * phi1 + 14 * phi2))

        if Bindx == 2099:
            t18364 = np.cos(phi)
            t18378 = -6 * t18364
            t18365 = t18364 ** 2
            t18367 = t18365 ** 2
            t18368 = t18364 * t18367
            t18373 = t18368 ** 2
            t18371 = t18367 ** 2
            t18366 = t18364 * t18365
            t18369 = t18366 ** 2
            t18370 = t18364 * t18369
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * np.cos((6 * phi1 - 14 * phi2)) * (11 * t18365 + 4 * t18366 - 39 * t18367 + 38 * t18368 + 27 * t18371 - 39 * t18373 + t18378 + 1 + (-72 + t18370) * t18370 + (38 * t18371 + 4 * t18373) * t18364 + (27 + (t18378 + 11) * t18369) * t18369)

        if Bindx == 2100:
            t18389 = np.sin(phi)
            t18386 = t18389 ** 2
            t18387 = t18386 ** 2
            t18379 = np.cos(phi)
            t18380 = t18379 ** 2
            t18381 = t18379 * t18380
            t18384 = t18381 ** 2
            t18382 = t18380 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.49335e5) * t18387 ** 2 * (3 * t18380 + 45 * t18381 - 95 * t18382 - 39 * t18384 + 3 + (87 * t18382 + 7 * t18384 - 11) * t18379) * np.sin((6 * phi1 - 13 * phi2)) * ((1 - t18379) ** (-0.1e1 / 0.2e1)) * ((1 + t18379) ** (-0.1e1 / 0.2e1))

        if Bindx == 2101:
            t18390 = np.cos(phi)
            t18391 = t18390 ** 2
            t18392 = t18390 * t18391
            t18395 = t18392 ** 2
            t18401 = t18395 ** 2
            t18393 = t18391 ** 2
            t18394 = t18390 * t18393
            t18399 = t18394 ** 2
            t18397 = t18393 ** 2
            t18396 = t18390 * t18395
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.16445e5) * (435 * t18391 - 752 * t18392 - 1161 * t18393 + 3708 * t18394 - 729 * t18395 + 5049 * t18397 - 5079 * t18399 + 1325 * t18401 - 29 + (-5760 + 189 * t18396) * t18396 + (2372 * t18397 + 1392 * t18399 - 972 * t18401 + 12) * t18390) * np.cos((6 * phi1 - 12 * phi2))

        if Bindx == 2102:
            t18416 = np.sin(phi)
            t18413 = t18416 ** 2
            t18414 = t18416 * t18413
            t18404 = np.cos(phi)
            t18405 = t18404 ** 2
            t18407 = t18405 ** 2
            t18411 = t18407 ** 2
            t18406 = t18404 * t18405
            t18409 = t18406 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * t18414 ** 2 * (-744 * t18405 - 464 * t18406 + 3806 * t18407 - 2816 * t18409 - 3861 * t18411 + 31 + (-3306 * t18407 + 6344 * t18409 + 819 * t18411 + 191) * t18404) * np.sin((6 * phi1 - 11 * phi2)) * ((1 - t18404) ** (-0.1e1 / 0.2e1)) * ((1 + t18404) ** (-0.1e1 / 0.2e1))

        if Bindx == 2103:
            t18417 = np.cos(phi)
            t18418 = t18417 ** 2
            t18419 = t18417 * t18418
            t18422 = t18419 ** 2
            t18428 = t18422 ** 2
            t18420 = t18418 ** 2
            t18421 = t18417 * t18420
            t18426 = t18421 ** 2
            t18424 = t18420 ** 2
            t18423 = t18417 * t18422
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * (37 * t18418 - 7532 * t18419 + 6039 * t18420 + 27822 * t18421 - 38331 * t18422 + 81477 * t18424 - 68201 * t18426 + 14885 * t18428 - 1 + (-34152 + 4095 * t18423) * t18423 + (-5714 * t18424 + 36500 * t18426 - 17550 * t18428 + 626) * t18417) * np.cos((6 * phi1 - 10 * phi2))

        if Bindx == 2104:
            t18444 = np.sin(phi)
            t18442 = t18444 ** 2
            t18431 = np.cos(phi)
            t18432 = t18431 ** 2
            t18434 = t18432 ** 2
            t18435 = t18431 * t18434
            t18440 = t18435 ** 2
            t18438 = t18434 ** 2
            t18433 = t18431 * t18432
            t18436 = t18433 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.253e3) * t18442 ** 2 * (3555 * t18432 - 7695 * t18433 - 17910 * t18434 + 44334 * t18435 + 13926 * t18436 + 40725 * t18438 - 47385 * t18440 - 79 + (-87390 * t18436 + 45175 * t18438 + 12285 * t18440 + 459) * t18431) * np.sin((6 * phi1 - 9 * phi2)) * ((1 - t18431) ** (-0.1e1 / 0.2e1)) * ((1 + t18431) ** (-0.1e1 / 0.2e1))

        if Bindx == 2105:
            t18445 = np.cos(phi)
            t18446 = t18445 ** 2
            t18447 = t18445 * t18446
            t18450 = t18447 ** 2
            t18456 = t18450 ** 2
            t18448 = t18446 ** 2
            t18449 = t18445 * t18448
            t18454 = t18449 ** 2
            t18452 = t18448 ** 2
            t18451 = t18445 * t18450
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-17105 * t18446 - 26848 * t18447 + 164979 * t18448 + 59784 * t18449 - 631173 * t18450 + 1090533 * t18452 - 783955 * t18454 + 82225 * t18456 + 311 + (165120 + 94185 * t18451) * t18451 + (-719624 * t18452 + 842720 * t18454 - 322920 * t18456 + 1768) * t18445) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 2106:
            t18460 = np.cos(phi)
            t18461 = t18460 ** 2
            t18462 = t18460 * t18461
            t18465 = t18462 ** 2
            t18471 = t18465 ** 2
            t18463 = t18461 ** 2
            t18464 = t18460 * t18463
            t18469 = t18464 ** 2
            t18467 = t18463 ** 2
            t18459 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.21e2) * t18459 ** 2 * (434 * t18461 + 67482 * t18462 - 27825 * t18463 - 370053 * t18464 + 269724 * t18465 - 837177 * t18467 + 1034770 * t18469 - 444015 * t18471 - 7 + (813516 * t18465 - 684365 * t18467 + 32890 * t18469 + 148005 * t18471 - 3379) * t18460) * np.sin((6 * phi1 - 7 * phi2)) * ((1 - t18460) ** (-0.1e1 / 0.2e1)) * ((1 + t18460) ** (-0.1e1 / 0.2e1))

        if Bindx == 2107:
            t18473 = np.cos(phi)
            t18474 = t18473 ** 2
            t18475 = t18473 * t18474
            t18478 = t18475 ** 2
            t18484 = t18478 ** 2
            t18476 = t18474 ** 2
            t18477 = t18473 * t18476
            t18482 = t18477 ** 2
            t18480 = t18476 ** 2
            t18479 = t18473 * t18478
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * (-230253 * t18474 + 520532 * t18475 + 2425617 * t18476 - 4172562 * t18477 - 8886957 * t18478 + 13338963 * t18480 - 5787375 * t18482 - 3963245 * t18484 + 3337 + (15354648 + 3108105 * t18479) * t18479 + (-27848722 * t18480 + 24151380 * t18482 - 7992270 * t18484 - 21198) * t18473) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 2108:
            t18488 = np.cos(phi)
            t18489 = t18488 ** 2
            t18490 = t18488 * t18489
            t18493 = t18490 ** 2
            t18499 = t18493 ** 2
            t18491 = t18489 ** 2
            t18492 = t18488 * t18491
            t18497 = t18492 ** 2
            t18495 = t18491 ** 2
            t18487 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t18487 ** 2 * (16946 * t18489 + 44822 * t18490 - 205839 * t18491 - 247081 * t18492 + 942508 * t18493 - 2003507 * t18495 + 1986050 * t18497 - 740025 * t18499 - 229 + (426404 * t18493 - 4301 * t18495 - 559130 * t18497 + 345345 * t18499 - 1963) * t18488) * np.sin((6 * phi1 - 5 * phi2)) * ((1 - t18488) ** (-0.1e1 / 0.2e1)) * ((1 + t18488) ** (-0.1e1 / 0.2e1))

        if Bindx == 2109:
            t18501 = np.cos(phi)
            t18502 = t18501 ** 2
            t18503 = t18501 * t18502
            t18506 = t18503 ** 2
            t18512 = t18506 ** 2
            t18504 = t18502 ** 2
            t18505 = t18501 * t18504
            t18510 = t18505 ** 2
            t18508 = t18504 ** 2
            t18507 = t18501 * t18506
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.19e2) * (-2449 * t18502 + 64624 * t18503 + 21251 * t18504 - 483996 * t18505 - 2509 * t18506 - 338899 * t18508 + 947485 * t18510 - 970255 * t18512 + 31 + (1573504 + 345345 * t18507) * t18507 + (-2522916 * t18508 + 1963280 * t18510 - 592020 * t18512 - 2476) * t18501) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 2110:
            t18528 = np.sin(phi)
            t18526 = t18528 ** 2
            t18515 = np.cos(phi)
            t18516 = t18515 ** 2
            t18518 = t18516 ** 2
            t18519 = t18515 * t18518
            t18524 = t18519 ** 2
            t18522 = t18518 ** 2
            t18517 = t18515 * t18516
            t18520 = t18517 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t18526 ** 2 * (-9801 * t18516 + 12199 * t18517 + 116634 * t18518 - 98742 * t18519 - 456274 * t18520 + 697245 * t18522 - 363285 * t18524 + 121 + (341550 * t18520 - 521755 * t18522 + 282555 * t18524 - 447) * t18515) * np.sin((6 * phi1 - 3 * phi2)) * ((1 - t18515) ** (-0.1e1 / 0.2e1)) * ((1 + t18515) ** (-0.1e1 / 0.2e1))

        if Bindx == 2111:
            t18529 = np.cos(phi)
            t18530 = t18529 ** 2
            t18531 = t18529 * t18530
            t18534 = t18531 ** 2
            t18540 = t18534 ** 2
            t18532 = t18530 ** 2
            t18533 = t18529 * t18532
            t18538 = t18533 ** 2
            t18536 = t18532 ** 2
            t18535 = t18529 * t18534
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (1955 * t18530 + 9596 * t18531 - 27487 * t18532 - 74182 * t18533 + 147411 * t18534 - 383021 * t18536 + 518305 * t18538 - 351325 * t18540 - 23 + (241480 + 94185 * t18535) * t18535 + (-377798 * t18536 + 281980 * t18538 - 80730 * t18540 - 346) * t18529) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 2112:
            t18555 = np.sin(phi)
            t18552 = t18555 ** 2
            t18553 = t18555 * t18552
            t18543 = np.cos(phi)
            t18544 = t18543 ** 2
            t18546 = t18544 ** 2
            t18550 = t18546 ** 2
            t18545 = t18543 * t18544
            t18548 = t18545 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.138567e6) * t18553 ** 2 * (84 * t18544 - 756 * t18545 - 966 * t18546 + 3220 * t18548 - 3105 * t18550 - 1 + (4830 * t18546 - 10580 * t18548 + 7245 * t18550 + 29) * t18543) * np.sin((6 * phi1 - phi2)) * ((1 - t18543) ** (-0.1e1 / 0.2e1)) * ((1 + t18543) ** (-0.1e1 / 0.2e1))

        if Bindx == 2113:
            t18556 = np.cos(phi)
            t18557 = t18556 ** 2
            t18558 = t18557 ** 2
            t18559 = t18557 * t18558
            t18562 = t18559 ** 2
            t18560 = t18558 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t18558 + 6371 * t18559 - 15747 * t18560 - 12535 * t18562 - 1 + (19941 * t18560 + 3105 * t18562 + 87) * t18557) * np.cos((6 * phi1))

        if Bindx == 2114:
            t18576 = np.sin(phi)
            t18573 = t18576 ** 2
            t18574 = t18576 * t18573
            t18564 = np.cos(phi)
            t18565 = t18564 ** 2
            t18567 = t18565 ** 2
            t18571 = t18567 ** 2
            t18566 = t18564 * t18565
            t18569 = t18566 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.138567e6) * t18574 ** 2 * (-84 * t18565 - 756 * t18566 + 966 * t18567 - 3220 * t18569 + 3105 * t18571 + 1 + (4830 * t18567 - 10580 * t18569 + 7245 * t18571 + 29) * t18564) * np.sin((6 * phi1 + phi2)) * ((1 - t18564) ** (-0.1e1 / 0.2e1)) * ((1 + t18564) ** (-0.1e1 / 0.2e1))

        if Bindx == 2115:
            t18577 = np.cos(phi)
            t18578 = t18577 ** 2
            t18579 = t18577 * t18578
            t18582 = t18579 ** 2
            t18588 = t18582 ** 2
            t18580 = t18578 ** 2
            t18581 = t18577 * t18580
            t18586 = t18581 ** 2
            t18584 = t18580 ** 2
            t18583 = t18577 * t18582
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * (1955 * t18578 - 9596 * t18579 - 27487 * t18580 + 74182 * t18581 + 147411 * t18582 - 383021 * t18584 + 518305 * t18586 - 351325 * t18588 - 23 + (-241480 + 94185 * t18583) * t18583 + (377798 * t18584 - 281980 * t18586 + 80730 * t18588 + 346) * t18577) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 2116:
            t18604 = np.sin(phi)
            t18602 = t18604 ** 2
            t18591 = np.cos(phi)
            t18592 = t18591 ** 2
            t18594 = t18592 ** 2
            t18595 = t18591 * t18594
            t18600 = t18595 ** 2
            t18598 = t18594 ** 2
            t18593 = t18591 * t18592
            t18596 = t18593 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.209e3) * t18602 ** 2 * (9801 * t18592 + 12199 * t18593 - 116634 * t18594 - 98742 * t18595 + 456274 * t18596 - 697245 * t18598 + 363285 * t18600 - 121 + (341550 * t18596 - 521755 * t18598 + 282555 * t18600 - 447) * t18591) * np.sin((6 * phi1 + 3 * phi2)) * ((1 - t18591) ** (-0.1e1 / 0.2e1)) * ((1 + t18591) ** (-0.1e1 / 0.2e1))

        if Bindx == 2117:
            t18605 = np.cos(phi)
            t18606 = t18605 ** 2
            t18607 = t18605 * t18606
            t18610 = t18607 ** 2
            t18616 = t18610 ** 2
            t18608 = t18606 ** 2
            t18609 = t18605 * t18608
            t18614 = t18609 ** 2
            t18612 = t18608 ** 2
            t18611 = t18605 * t18610
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.19e2) * (-2449 * t18606 - 64624 * t18607 + 21251 * t18608 + 483996 * t18609 - 2509 * t18610 - 338899 * t18612 + 947485 * t18614 - 970255 * t18616 + 31 + (-1573504 + 345345 * t18611) * t18611 + (2522916 * t18612 - 1963280 * t18614 + 592020 * t18616 + 2476) * t18605) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 2118:
            t18620 = np.cos(phi)
            t18621 = t18620 ** 2
            t18622 = t18620 * t18621
            t18625 = t18622 ** 2
            t18631 = t18625 ** 2
            t18623 = t18621 ** 2
            t18624 = t18620 * t18623
            t18629 = t18624 ** 2
            t18627 = t18623 ** 2
            t18619 = np.sin(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t18619 ** 2 * (-16946 * t18621 + 44822 * t18622 + 205839 * t18623 - 247081 * t18624 - 942508 * t18625 + 2003507 * t18627 - 1986050 * t18629 + 740025 * t18631 + 229 + (426404 * t18625 - 4301 * t18627 - 559130 * t18629 + 345345 * t18631 - 1963) * t18620) * np.sin((6 * phi1 + 5 * phi2)) * ((1 - t18620) ** (-0.1e1 / 0.2e1)) * ((1 + t18620) ** (-0.1e1 / 0.2e1))

        if Bindx == 2119:
            t18633 = np.cos(phi)
            t18634 = t18633 ** 2
            t18635 = t18633 * t18634
            t18638 = t18635 ** 2
            t18644 = t18638 ** 2
            t18636 = t18634 ** 2
            t18637 = t18633 * t18636
            t18642 = t18637 ** 2
            t18640 = t18636 ** 2
            t18639 = t18633 * t18638
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * (-230253 * t18634 - 520532 * t18635 + 2425617 * t18636 + 4172562 * t18637 - 8886957 * t18638 + 13338963 * t18640 - 5787375 * t18642 - 3963245 * t18644 + 3337 + (-15354648 + 3108105 * t18639) * t18639 + (27848722 * t18640 - 24151380 * t18642 + 7992270 * t18644 + 21198) * t18633) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 2120:
            t18648 = np.cos(phi)
            t18649 = t18648 ** 2
            t18650 = t18648 * t18649
            t18653 = t18650 ** 2
            t18659 = t18653 ** 2
            t18651 = t18649 ** 2
            t18652 = t18648 * t18651
            t18657 = t18652 ** 2
            t18655 = t18651 ** 2
            t18647 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.21e2) * t18647 ** 2 * (-434 * t18649 + 67482 * t18650 + 27825 * t18651 - 370053 * t18652 - 269724 * t18653 + 837177 * t18655 - 1034770 * t18657 + 444015 * t18659 + 7 + (813516 * t18653 - 684365 * t18655 + 32890 * t18657 + 148005 * t18659 - 3379) * t18648) * np.sin((6 * phi1 + 7 * phi2)) * ((1 - t18648) ** (-0.1e1 / 0.2e1)) * ((1 + t18648) ** (-0.1e1 / 0.2e1))

        if Bindx == 2121:
            t18661 = np.cos(phi)
            t18662 = t18661 ** 2
            t18663 = t18661 * t18662
            t18666 = t18663 ** 2
            t18672 = t18666 ** 2
            t18664 = t18662 ** 2
            t18665 = t18661 * t18664
            t18670 = t18665 ** 2
            t18668 = t18664 ** 2
            t18667 = t18661 * t18666
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-17105 * t18662 + 26848 * t18663 + 164979 * t18664 - 59784 * t18665 - 631173 * t18666 + 1090533 * t18668 - 783955 * t18670 + 82225 * t18672 + 311 + (-165120 + 94185 * t18667) * t18667 + (719624 * t18668 - 842720 * t18670 + 322920 * t18672 - 1768) * t18661) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 2122:
            t18688 = np.sin(phi)
            t18686 = t18688 ** 2
            t18675 = np.cos(phi)
            t18676 = t18675 ** 2
            t18678 = t18676 ** 2
            t18679 = t18675 * t18678
            t18684 = t18679 ** 2
            t18682 = t18678 ** 2
            t18677 = t18675 * t18676
            t18680 = t18677 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.253e3) * t18686 ** 2 * (-3555 * t18676 - 7695 * t18677 + 17910 * t18678 + 44334 * t18679 - 13926 * t18680 - 40725 * t18682 + 47385 * t18684 + 79 + (-87390 * t18680 + 45175 * t18682 + 12285 * t18684 + 459) * t18675) * np.sin((6 * phi1 + 9 * phi2)) * ((1 - t18675) ** (-0.1e1 / 0.2e1)) * ((1 + t18675) ** (-0.1e1 / 0.2e1))

        if Bindx == 2123:
            t18689 = np.cos(phi)
            t18690 = t18689 ** 2
            t18691 = t18689 * t18690
            t18694 = t18691 ** 2
            t18700 = t18694 ** 2
            t18692 = t18690 ** 2
            t18693 = t18689 * t18692
            t18698 = t18693 ** 2
            t18696 = t18692 ** 2
            t18695 = t18689 * t18694
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * (37 * t18690 + 7532 * t18691 + 6039 * t18692 - 27822 * t18693 - 38331 * t18694 + 81477 * t18696 - 68201 * t18698 + 14885 * t18700 - 1 + (34152 + 4095 * t18695) * t18695 + (5714 * t18696 - 36500 * t18698 + 17550 * t18700 - 626) * t18689) * np.cos((6 * phi1 + 10 * phi2))

        if Bindx == 2124:
            t18715 = np.sin(phi)
            t18712 = t18715 ** 2
            t18713 = t18715 * t18712
            t18703 = np.cos(phi)
            t18704 = t18703 ** 2
            t18706 = t18704 ** 2
            t18710 = t18706 ** 2
            t18705 = t18703 * t18704
            t18708 = t18705 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * t18713 ** 2 * (744 * t18704 - 464 * t18705 - 3806 * t18706 + 2816 * t18708 + 3861 * t18710 - 31 + (-3306 * t18706 + 6344 * t18708 + 819 * t18710 + 191) * t18703) * np.sin((6 * phi1 + 11 * phi2)) * ((1 - t18703) ** (-0.1e1 / 0.2e1)) * ((1 + t18703) ** (-0.1e1 / 0.2e1))

        if Bindx == 2125:
            t18716 = np.cos(phi)
            t18717 = t18716 ** 2
            t18718 = t18716 * t18717
            t18721 = t18718 ** 2
            t18727 = t18721 ** 2
            t18719 = t18717 ** 2
            t18720 = t18716 * t18719
            t18725 = t18720 ** 2
            t18723 = t18719 ** 2
            t18722 = t18716 * t18721
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.16445e5) * (435 * t18717 + 752 * t18718 - 1161 * t18719 - 3708 * t18720 - 729 * t18721 + 5049 * t18723 - 5079 * t18725 + 1325 * t18727 - 29 + (5760 + 189 * t18722) * t18722 + (-2372 * t18723 - 1392 * t18725 + 972 * t18727 - 12) * t18716) * np.cos((6 * phi1 + 12 * phi2))

        if Bindx == 2126:
            t18740 = np.sin(phi)
            t18737 = t18740 ** 2
            t18738 = t18737 ** 2
            t18730 = np.cos(phi)
            t18731 = t18730 ** 2
            t18732 = t18730 * t18731
            t18735 = t18732 ** 2
            t18733 = t18731 ** 2
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.49335e5) * t18738 ** 2 * (-3 * t18731 + 45 * t18732 + 95 * t18733 + 39 * t18735 - 3 + (87 * t18733 + 7 * t18735 - 11) * t18730) * np.sin((6 * phi1 + 13 * phi2)) * ((1 - t18730) ** (-0.1e1 / 0.2e1)) * ((1 + t18730) ** (-0.1e1 / 0.2e1))

        if Bindx == 2127:
            t18741 = np.cos(phi)
            t18755 = 6 * t18741
            t18742 = t18741 ** 2
            t18744 = t18742 ** 2
            t18745 = t18741 * t18744
            t18750 = t18745 ** 2
            t18748 = t18744 ** 2
            t18743 = t18741 * t18742
            t18746 = t18743 ** 2
            t18747 = t18741 * t18746
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * np.cos((6 * phi1 + 14 * phi2)) * (11 * t18742 - 4 * t18743 - 39 * t18744 - 38 * t18745 + 27 * t18748 - 39 * t18750 + t18755 + 1 + (72 + t18747) * t18747 + (-38 * t18748 - 4 * t18750) * t18741 + (27 + (t18755 + 11) * t18746) * t18746)

        if Bindx == 2128:
            t18756 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.16445e5) * ((1 - t18756) ** (0.21e2 / 0.2e1)) * ((1 + t18756) ** (0.7e1 / 0.2e1)) * np.sin((7 * phi1 - 14 * phi2))

        if Bindx == 2129:
            t18757 = np.cos(phi)
            t18758 = t18757 ** 2
            t18759 = t18757 * t18758
            t18762 = t18759 ** 2
            t18768 = t18762 ** 2
            t18760 = t18758 ** 2
            t18761 = t18757 * t18760
            t18766 = t18761 ** 2
            t18764 = t18760 ** 2
            t18763 = t18757 * t18762
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.115115e6) * (4 * t18758 + 22 * t18759 - 53 * t18760 + 13 * t18761 + 90 * t18762 - 9 * t18764 - 64 * t18766 + 29 * t18768 + 1 + (-108 + 2 * t18763) * t18763 + (101 * t18764 - 10 * t18766 - 13 * t18768 - 5) * t18757) * np.cos((7 * phi1 - 13 * phi2))

        if Bindx == 2130:
            t18783 = np.sin(phi)
            t18780 = t18783 ** 2
            t18781 = t18783 * t18780
            t18771 = np.cos(phi)
            t18772 = t18771 ** 2
            t18774 = t18772 ** 2
            t18778 = t18774 ** 2
            t18773 = t18771 * t18772
            t18776 = t18773 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * t18781 ** 2 * (12 * t18772 - 56 * t18773 + 56 * t18774 - 140 * t18776 - 54 * t18778 - 2 + (42 * t18774 + 128 * t18776 + 9 * t18778 + 5) * t18771) * np.sin((7 * phi1 - 12 * phi2)) * ((1 - t18771) ** (-0.1e1 / 0.2e1)) * ((1 + t18771) ** (-0.1e1 / 0.2e1))

        if Bindx == 2131:
            t18784 = np.cos(phi)
            t18785 = t18784 ** 2
            t18786 = t18784 * t18785
            t18789 = t18786 ** 2
            t18795 = t18789 ** 2
            t18787 = t18785 ** 2
            t18788 = t18784 * t18787
            t18793 = t18788 ** 2
            t18791 = t18787 ** 2
            t18790 = t18784 * t18789
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * (380 * t18785 - 342 * t18786 - 1641 * t18787 + 3063 * t18788 + 1266 * t18789 + 3579 * t18791 - 5944 * t18793 + 2145 * t18795 - 19 + (-6900 + 234 * t18790) * t18790 + (4807 * t18791 + 682 * t18793 - 1287 * t18795 - 23) * t18784) * np.cos((7 * phi1 - 11 * phi2))

        if Bindx == 2132:
            t18811 = np.sin(phi)
            t18809 = t18811 ** 2
            t18798 = np.cos(phi)
            t18799 = t18798 ** 2
            t18801 = t18799 ** 2
            t18802 = t18798 * t18801
            t18807 = t18802 ** 2
            t18805 = t18801 ** 2
            t18800 = t18798 * t18799
            t18803 = t18800 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * t18809 ** 2 * (319 * t18799 + 685 * t18800 - 2510 * t18801 + 406 * t18802 + 5278 * t18803 - 1175 * t18805 - 2925 * t18807 - 11 + (-5414 * t18803 + 4875 * t18805 + 585 * t18807 - 113) * t18798) * np.sin((7 * phi1 - 10 * phi2)) * ((1 - t18798) ** (-0.1e1 / 0.2e1)) * ((1 + t18798) ** (-0.1e1 / 0.2e1))

        if Bindx == 2133:
            t18812 = np.cos(phi)
            t18813 = t18812 ** 2
            t18814 = t18812 * t18813
            t18817 = t18814 ** 2
            t18823 = t18817 ** 2
            t18815 = t18813 ** 2
            t18816 = t18812 * t18815
            t18821 = t18816 ** 2
            t18819 = t18815 ** 2
            t18818 = t18812 * t18817
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.5313e4) * (120 * t18813 - 1766 * t18814 + 603 * t18815 + 7593 * t18816 - 7566 * t18817 + 20211 * t18819 - 20060 * t18821 + 5525 * t18823 - 3 + (-11940 + 1170 * t18818) * t18818 + (2757 * t18819 + 8490 * t18821 - 5265 * t18823 + 131) * t18812) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 2134:
            t18827 = np.cos(phi)
            t18828 = t18827 ** 2
            t18829 = t18827 * t18828
            t18832 = t18829 ** 2
            t18838 = t18832 ** 2
            t18830 = t18828 ** 2
            t18831 = t18827 * t18830
            t18836 = t18831 ** 2
            t18834 = t18830 ** 2
            t18826 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.77e2) * t18826 ** 2 * (-3648 * t18828 + 6402 * t18829 + 23820 * t18830 - 46791 * t18831 - 44640 * t18832 - 7452 * t18834 + 84640 * t18836 - 53820 * t18838 + 76 + (132588 * t18832 - 149155 * t18834 + 44850 * t18836 + 13455 * t18838 - 325) * t18827) * np.sin((7 * phi1 - 8 * phi2)) * ((1 - t18827) ** (-0.1e1 / 0.2e1)) * ((1 + t18827) ** (-0.1e1 / 0.2e1))

        if Bindx == 2135:
            t18840 = np.cos(phi)
            t18841 = t18840 ** 2
            t18842 = t18840 * t18841
            t18845 = t18842 ** 2
            t18851 = t18845 ** 2
            t18843 = t18841 ** 2
            t18844 = t18840 * t18843
            t18849 = t18844 ** 2
            t18847 = t18843 ** 2
            t18846 = t18840 * t18845
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * (-47992 * t18841 - 90594 * t18842 + 477519 * t18843 + 249963 * t18844 - 1895670 * t18845 + 3411639 * t18847 - 2585660 * t18849 + 345345 * t18851 + 857 + (318132 + 296010 * t18846) * t18846 + (-2017169 * t18847 + 2567950 * t18849 - 1036035 * t18851 + 5705) * t18840) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 2136:
            t18855 = np.cos(phi)
            t18856 = t18855 ** 2
            t18857 = t18855 * t18856
            t18860 = t18857 ** 2
            t18866 = t18860 ** 2
            t18858 = t18856 ** 2
            t18859 = t18855 * t18858
            t18864 = t18859 ** 2
            t18862 = t18858 ** 2
            t18854 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.21e2) * t18854 ** 2 * (434 * t18856 + 67482 * t18857 - 27825 * t18858 - 370053 * t18859 + 269724 * t18860 - 837177 * t18862 + 1034770 * t18864 - 444015 * t18866 - 7 + (813516 * t18860 - 684365 * t18862 + 32890 * t18864 + 148005 * t18866 - 3379) * t18855) * np.sin((7 * phi1 - 6 * phi2)) * ((1 - t18855) ** (-0.1e1 / 0.2e1)) * ((1 + t18855) ** (-0.1e1 / 0.2e1))

        if Bindx == 2137:
            t18868 = np.cos(phi)
            t18869 = t18868 ** 2
            t18870 = t18868 * t18869
            t18873 = t18870 ** 2
            t18879 = t18873 ** 2
            t18871 = t18869 ** 2
            t18872 = t18868 * t18871
            t18877 = t18872 ** 2
            t18875 = t18871 ** 2
            t18874 = t18868 * t18873
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.105e3) * (-7548 * t18869 + 19586 * t18870 + 77677 * t18871 - 150493 * t18872 - 274906 * t18873 + 389609 * t18875 - 135608 * t18877 - 148005 * t18879 + 111 + (529948 + 98670 * t18874) * t18874 + (-923197 * t18875 + 771650 * t18877 - 246675 * t18879 - 819) * t18868) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 2138:
            t18895 = np.sin(phi)
            t18893 = t18895 ** 2
            t18882 = np.cos(phi)
            t18883 = t18882 ** 2
            t18885 = t18883 ** 2
            t18886 = t18882 * t18885
            t18891 = t18886 ** 2
            t18889 = t18885 ** 2
            t18884 = t18882 * t18883
            t18887 = t18884 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t18893 ** 2 * (-2982 * t18883 - 5437 * t18884 + 32228 * t18885 + 22946 * t18886 - 120428 * t18887 + 184690 * t18889 - 98670 * t18891 + 42 + (-12650 * t18887 - 49335 * t18889 + 49335 * t18891 + 261) * t18882) * np.sin((7 * phi1 - 4 * phi2)) * ((1 - t18882) ** (-0.1e1 / 0.2e1)) * ((1 + t18882) ** (-0.1e1 / 0.2e1))

        if Bindx == 2139:
            t18896 = np.cos(phi)
            t18897 = t18896 ** 2
            t18898 = t18896 * t18897
            t18901 = t18898 ** 2
            t18907 = t18901 ** 2
            t18899 = t18897 ** 2
            t18900 = t18896 * t18899
            t18905 = t18900 ** 2
            t18903 = t18899 ** 2
            t18902 = t18896 * t18901
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.4389e4) * (76 * t18897 + 6118 * t18898 - 1787 * t18899 - 43379 * t18900 + 16230 * t18901 - 61783 * t18903 + 108560 * t18905 - 88205 * t18907 - 1 + (132404 + 26910 * t18902) * t18902 + (-198283 * t18903 + 143750 * t18905 - 40365 * t18907 - 245) * t18896) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 2140:
            t18922 = np.sin(phi)
            t18919 = t18922 ** 2
            t18920 = t18922 * t18919
            t18910 = np.cos(phi)
            t18911 = t18910 ** 2
            t18913 = t18911 ** 2
            t18917 = t18913 ** 2
            t18912 = t18910 * t18911
            t18915 = t18912 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.24871e5) * t18920 ** 2 * (532 * t18911 - 1316 * t18912 - 5474 * t18913 + 16100 * t18915 - 13455 * t18917 - 7 + (8050 * t18913 - 17940 * t18915 + 13455 * t18917 + 55) * t18910) * np.sin((7 * phi1 - 2 * phi2)) * ((1 - t18910) ** (-0.1e1 / 0.2e1)) * ((1 + t18910) ** (-0.1e1 / 0.2e1))

        if Bindx == 2141:
            t18923 = np.cos(phi)
            t18924 = t18923 ** 2
            t18925 = t18923 * t18924
            t18928 = t18925 ** 2
            t18934 = t18928 ** 2
            t18926 = t18924 ** 2
            t18927 = t18923 * t18926
            t18932 = t18927 ** 2
            t18930 = t18926 ** 2
            t18929 = t18923 * t18928
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.323323e6) * (80 * t18924 + 182 * t18925 - 1039 * t18926 - 1309 * t18927 + 5062 * t18928 - 11807 * t18930 + 14260 * t18932 - 8625 * t18934 - 1 + (3940 + 2070 * t18929) * t18929 + (-5681 * t18930 + 3910 * t18932 - 1035 * t18934 - 7) * t18923) * np.cos((7 * phi1 - phi2))

        if Bindx == 2142:
            t18944 = np.sin(phi)
            t18941 = t18944 ** 2
            t18942 = t18941 ** 2
            t18937 = np.cos(phi)
            t18938 = t18937 ** 2
            t18939 = t18938 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t18937 * t18942 ** 2 * (-805 * t18939 - 7 + (1035 * t18939 + 161) * t18938) * np.sin((7 * phi1)) * ((1 - t18937) ** (-0.1e1 / 0.2e1)) * ((1 + t18937) ** (-0.1e1 / 0.2e1))

        if Bindx == 2143:
            t18945 = np.cos(phi)
            t18946 = t18945 ** 2
            t18947 = t18945 * t18946
            t18950 = t18947 ** 2
            t18956 = t18950 ** 2
            t18948 = t18946 ** 2
            t18949 = t18945 * t18948
            t18954 = t18949 ** 2
            t18952 = t18948 ** 2
            t18951 = t18945 * t18950
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.323323e6) * (80 * t18946 - 182 * t18947 - 1039 * t18948 + 1309 * t18949 + 5062 * t18950 - 11807 * t18952 + 14260 * t18954 - 8625 * t18956 - 1 + (-3940 + 2070 * t18951) * t18951 + (5681 * t18952 - 3910 * t18954 + 1035 * t18956 + 7) * t18945) * np.cos((7 * phi1 + phi2))

        if Bindx == 2144:
            t18972 = np.sin(phi)
            t18959 = np.cos(phi)
            t18960 = t18959 ** 2
            t18962 = t18960 ** 2
            t18971 = 13455 * t18962 ** 2
            t18968 = t18972 ** 2
            t18969 = t18972 * t18968
            t18961 = t18959 * t18960
            t18964 = t18961 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.24871e5) * t18969 ** 2 * (-532 * t18960 - 1316 * t18961 + 5474 * t18962 - 16100 * t18964 + t18971 + 7 + (8050 * t18962 - 17940 * t18964 + t18971 + 55) * t18959) * np.sin((7 * phi1 + 2 * phi2)) * ((1 - t18959) ** (-0.1e1 / 0.2e1)) * ((1 + t18959) ** (-0.1e1 / 0.2e1))

        if Bindx == 2145:
            t18973 = np.cos(phi)
            t18974 = t18973 ** 2
            t18975 = t18973 * t18974
            t18978 = t18975 ** 2
            t18984 = t18978 ** 2
            t18976 = t18974 ** 2
            t18977 = t18973 * t18976
            t18982 = t18977 ** 2
            t18980 = t18976 ** 2
            t18979 = t18973 * t18978
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.4389e4) * (76 * t18974 - 6118 * t18975 - 1787 * t18976 + 43379 * t18977 + 16230 * t18978 - 61783 * t18980 + 108560 * t18982 - 88205 * t18984 - 1 + (-132404 + 26910 * t18979) * t18979 + (198283 * t18980 - 143750 * t18982 + 40365 * t18984 + 245) * t18973) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 2146:
            t19000 = np.sin(phi)
            t18998 = t19000 ** 2
            t18987 = np.cos(phi)
            t18988 = t18987 ** 2
            t18990 = t18988 ** 2
            t18991 = t18987 * t18990
            t18996 = t18991 ** 2
            t18994 = t18990 ** 2
            t18989 = t18987 * t18988
            t18992 = t18989 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.399e3) * t18998 ** 2 * (2982 * t18988 - 5437 * t18989 - 32228 * t18990 + 22946 * t18991 + 120428 * t18992 - 184690 * t18994 + 98670 * t18996 - 42 + (-12650 * t18992 - 49335 * t18994 + 49335 * t18996 + 261) * t18987) * np.sin((7 * phi1 + 4 * phi2)) * ((1 - t18987) ** (-0.1e1 / 0.2e1)) * ((1 + t18987) ** (-0.1e1 / 0.2e1))

        if Bindx == 2147:
            t19001 = np.cos(phi)
            t19002 = t19001 ** 2
            t19003 = t19001 * t19002
            t19006 = t19003 ** 2
            t19012 = t19006 ** 2
            t19004 = t19002 ** 2
            t19005 = t19001 * t19004
            t19010 = t19005 ** 2
            t19008 = t19004 ** 2
            t19007 = t19001 * t19006
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.105e3) * (-7548 * t19002 - 19586 * t19003 + 77677 * t19004 + 150493 * t19005 - 274906 * t19006 + 389609 * t19008 - 135608 * t19010 - 148005 * t19012 + 111 + (-529948 + 98670 * t19007) * t19007 + (923197 * t19008 - 771650 * t19010 + 246675 * t19012 + 819) * t19001) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 2148:
            t19016 = np.cos(phi)
            t19017 = t19016 ** 2
            t19018 = t19016 * t19017
            t19021 = t19018 ** 2
            t19027 = t19021 ** 2
            t19019 = t19017 ** 2
            t19020 = t19016 * t19019
            t19025 = t19020 ** 2
            t19023 = t19019 ** 2
            t19015 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.21e2) * t19015 ** 2 * (-434 * t19017 + 67482 * t19018 + 27825 * t19019 - 370053 * t19020 - 269724 * t19021 + 837177 * t19023 - 1034770 * t19025 + 444015 * t19027 + 7 + (813516 * t19021 - 684365 * t19023 + 32890 * t19025 + 148005 * t19027 - 3379) * t19016) * np.sin((7 * phi1 + 6 * phi2)) * ((1 - t19016) ** (-0.1e1 / 0.2e1)) * ((1 + t19016) ** (-0.1e1 / 0.2e1))

        if Bindx == 2149:
            t19029 = np.cos(phi)
            t19030 = t19029 ** 2
            t19031 = t19029 * t19030
            t19034 = t19031 ** 2
            t19040 = t19034 ** 2
            t19032 = t19030 ** 2
            t19033 = t19029 * t19032
            t19038 = t19033 ** 2
            t19036 = t19032 ** 2
            t19035 = t19029 * t19034
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * (-47992 * t19030 + 90594 * t19031 + 477519 * t19032 - 249963 * t19033 - 1895670 * t19034 + 3411639 * t19036 - 2585660 * t19038 + 345345 * t19040 + 857 + (-318132 + 296010 * t19035) * t19035 + (2017169 * t19036 - 2567950 * t19038 + 1036035 * t19040 - 5705) * t19029) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 2150:
            t19044 = np.cos(phi)
            t19045 = t19044 ** 2
            t19046 = t19044 * t19045
            t19049 = t19046 ** 2
            t19055 = t19049 ** 2
            t19047 = t19045 ** 2
            t19048 = t19044 * t19047
            t19053 = t19048 ** 2
            t19051 = t19047 ** 2
            t19043 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.77e2) * t19043 ** 2 * (3648 * t19045 + 6402 * t19046 - 23820 * t19047 - 46791 * t19048 + 44640 * t19049 + 7452 * t19051 - 84640 * t19053 + 53820 * t19055 - 76 + (132588 * t19049 - 149155 * t19051 + 44850 * t19053 + 13455 * t19055 - 325) * t19044) * np.sin((7 * phi1 + 8 * phi2)) * ((1 - t19044) ** (-0.1e1 / 0.2e1)) * ((1 + t19044) ** (-0.1e1 / 0.2e1))

        if Bindx == 2151:
            t19057 = np.cos(phi)
            t19058 = t19057 ** 2
            t19059 = t19057 * t19058
            t19062 = t19059 ** 2
            t19068 = t19062 ** 2
            t19060 = t19058 ** 2
            t19061 = t19057 * t19060
            t19066 = t19061 ** 2
            t19064 = t19060 ** 2
            t19063 = t19057 * t19062
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.5313e4) * (120 * t19058 + 1766 * t19059 + 603 * t19060 - 7593 * t19061 - 7566 * t19062 + 20211 * t19064 - 20060 * t19066 + 5525 * t19068 - 3 + (11940 + 1170 * t19063) * t19063 + (-2757 * t19064 - 8490 * t19066 + 5265 * t19068 - 131) * t19057) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 2152:
            t19084 = np.sin(phi)
            t19082 = t19084 ** 2
            t19071 = np.cos(phi)
            t19072 = t19071 ** 2
            t19074 = t19072 ** 2
            t19075 = t19071 * t19074
            t19080 = t19075 ** 2
            t19078 = t19074 ** 2
            t19073 = t19071 * t19072
            t19076 = t19073 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * t19082 ** 2 * (-319 * t19072 + 685 * t19073 + 2510 * t19074 + 406 * t19075 - 5278 * t19076 + 1175 * t19078 + 2925 * t19080 + 11 + (-5414 * t19076 + 4875 * t19078 + 585 * t19080 - 113) * t19071) * np.sin((7 * phi1 + 10 * phi2)) * ((1 - t19071) ** (-0.1e1 / 0.2e1)) * ((1 + t19071) ** (-0.1e1 / 0.2e1))

        if Bindx == 2153:
            t19085 = np.cos(phi)
            t19086 = t19085 ** 2
            t19087 = t19085 * t19086
            t19090 = t19087 ** 2
            t19096 = t19090 ** 2
            t19088 = t19086 ** 2
            t19089 = t19085 * t19088
            t19094 = t19089 ** 2
            t19092 = t19088 ** 2
            t19091 = t19085 * t19090
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * (380 * t19086 + 342 * t19087 - 1641 * t19088 - 3063 * t19089 + 1266 * t19090 + 3579 * t19092 - 5944 * t19094 + 2145 * t19096 - 19 + (6900 + 234 * t19091) * t19091 + (-4807 * t19092 - 682 * t19094 + 1287 * t19096 + 23) * t19085) * np.cos((7 * phi1 + 11 * phi2))

        if Bindx == 2154:
            t19111 = np.sin(phi)
            t19108 = t19111 ** 2
            t19109 = t19111 * t19108
            t19099 = np.cos(phi)
            t19100 = t19099 ** 2
            t19102 = t19100 ** 2
            t19106 = t19102 ** 2
            t19101 = t19099 * t19100
            t19104 = t19101 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * t19109 ** 2 * (-12 * t19100 - 56 * t19101 - 56 * t19102 + 140 * t19104 + 54 * t19106 + 2 + (42 * t19102 + 128 * t19104 + 9 * t19106 + 5) * t19099) * np.sin((7 * phi1 + 12 * phi2)) * ((1 - t19099) ** (-0.1e1 / 0.2e1)) * ((1 + t19099) ** (-0.1e1 / 0.2e1))

        if Bindx == 2155:
            t19112 = np.cos(phi)
            t19113 = t19112 ** 2
            t19114 = t19112 * t19113
            t19117 = t19114 ** 2
            t19123 = t19117 ** 2
            t19115 = t19113 ** 2
            t19116 = t19112 * t19115
            t19121 = t19116 ** 2
            t19119 = t19115 ** 2
            t19118 = t19112 * t19117
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.115115e6) * (4 * t19113 - 22 * t19114 - 53 * t19115 - 13 * t19116 + 90 * t19117 - 9 * t19119 - 64 * t19121 + 29 * t19123 + 1 + (108 + 2 * t19118) * t19118 + (-101 * t19119 + 10 * t19121 + 13 * t19123 + 5) * t19112) * np.cos((7 * phi1 + 13 * phi2))

        if Bindx == 2156:
            t19126 = np.cos(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.16445e5) * ((1 - t19126) ** (0.7e1 / 0.2e1)) * ((1 + t19126) ** (0.21e2 / 0.2e1)) * np.sin((7 * phi1 + 14 * phi2))

        if Bindx == 2157:
            t19127 = np.cos(phi)
            t19128 = t19127 ** 2
            t19129 = t19127 * t19128
            t19132 = t19129 ** 2
            t19137 = t19132 ** 2
            t19138 = t19127 * t19137
            t19130 = t19128 ** 2
            t19131 = t19127 * t19130
            t19135 = t19131 ** 2
            t19133 = t19130 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * np.cos((8 * phi1 - 14 * phi2)) * (-25 * t19128 + 32 * t19129 + 11 * t19130 - 88 * t19131 + 99 * t19132 - 99 * t19133 - 11 * t19135 + 25 * t19137 - 8 * t19138 - 1 + (88 * t19133 - 32 * t19135 + t19138 + 8) * t19127)

        if Bindx == 2158:
            t19152 = np.sin(phi)
            t19149 = t19152 ** 2
            t19150 = t19152 * t19149
            t19140 = np.cos(phi)
            t19141 = t19140 ** 2
            t19143 = t19141 ** 2
            t19147 = t19143 ** 2
            t19142 = t19140 * t19141
            t19145 = t19142 ** 2
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * t19150 ** 2 * (56 * t19141 - 28 * t19142 - 112 * t19143 - 280 * t19145 - 52 * t19147 + 4 + (266 * t19143 + 164 * t19145 + 7 * t19147 - 25) * t19140) * np.sin((8 * phi1 - 13 * phi2)) * ((1 - t19140) ** (-0.1e1 / 0.2e1)) * ((1 + t19140) ** (-0.1e1 / 0.2e1))

        if Bindx == 2159:
            t19153 = np.cos(phi)
            t19154 = t19153 ** 2
            t19155 = t19153 * t19154
            t19158 = t19155 ** 2
            t19164 = t19158 ** 2
            t19156 = t19154 ** 2
            t19157 = t19153 * t19156
            t19162 = t19157 ** 2
            t19160 = t19156 ** 2
            t19159 = t19153 * t19158
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.4485e4) * (-19 * t19154 + 608 * t19155 - 957 * t19156 - 528 * t19157 + 2805 * t19158 - 1551 * t19160 - 1441 * t19162 + 1081 * t19164 + 19 + (-2112 + 63 * t19159) * t19159 + (3344 * t19160 - 800 * t19162 - 432 * t19164 - 80) * t19153) * np.cos((8 * phi1 - 12 * phi2))

        if Bindx == 2160:
            t19180 = np.sin(phi)
            t19178 = t19180 ** 2
            t19167 = np.cos(phi)
            t19168 = t19167 ** 2
            t19170 = t19168 ** 2
            t19171 = t19167 * t19170
            t19176 = t19171 ** 2
            t19174 = t19170 ** 2
            t19169 = t19167 * t19168
            t19172 = t19169 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * t19178 ** 2 * (-1276 * t19168 + 3839 * t19169 - 616 * t19170 - 10318 * t19171 + 14168 * t19172 - 12364 * t19174 - 5148 * t19176 + 116 + (-1474 * t19172 + 12441 * t19174 + 819 * t19176 - 187) * t19167) * np.sin((8 * phi1 - 11 * phi2)) * ((1 - t19167) ** (-0.1e1 / 0.2e1)) * ((1 + t19167) ** (-0.1e1 / 0.2e1))

        if Bindx == 2161:
            t19181 = np.cos(phi)
            t19182 = t19181 ** 2
            t19183 = t19181 * t19182
            t19186 = t19183 ** 2
            t19192 = t19186 ** 2
            t19184 = t19182 ** 2
            t19185 = t19181 * t19184
            t19190 = t19185 ** 2
            t19188 = t19184 ** 2
            t19187 = t19181 * t19186
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (5129 * t19182 - 2016 * t19183 - 27291 * t19184 + 38280 * t19185 + 36861 * t19186 + 33891 * t19188 - 95557 * t19190 + 43095 * t19192 - 223 + (-109824 + 4095 * t19187) * t19187 + (98296 * t19188 - 800 * t19190 - 23400 * t19192 - 536) * t19181) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 2162:
            t19196 = np.cos(phi)
            t19197 = t19196 ** 2
            t19198 = t19196 * t19197
            t19201 = t19198 ** 2
            t19207 = t19201 ** 2
            t19199 = t19197 ** 2
            t19200 = t19196 * t19199
            t19205 = t19200 ** 2
            t19203 = t19199 ** 2
            t19195 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.69e2) * t19195 ** 2 * (-1664 * t19197 - 5742 * t19198 + 16500 * t19199 + 6633 * t19200 - 51744 * t19201 + 51612 * t19203 + 5280 * t19205 - 21060 * t19207 + 52 + (29964 * t19201 - 68035 * t19203 + 33410 * t19205 + 4095 * t19207 + 699) * t19196) * np.sin((8 * phi1 - 9 * phi2)) * ((1 - t19196) ** (-0.1e1 / 0.2e1)) * ((1 + t19196) ** (-0.1e1 / 0.2e1))

        if Bindx == 2163:
            t19209 = np.cos(phi)
            t19210 = t19209 ** 2
            t19211 = t19209 * t19210
            t19214 = t19211 ** 2
            t19220 = t19214 ** 2
            t19212 = t19210 ** 2
            t19213 = t19209 * t19212
            t19218 = t19213 ** 2
            t19216 = t19212 ** 2
            t19215 = t19209 * t19214
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * (11603 * t19210 - 131904 * t19211 + 24189 * t19212 + 594528 * t19213 - 524205 * t19214 + 1534599 * t19216 - 1617935 * t19218 + 479895 * t19220 - 283 + (-1001088 + 94185 * t19215) * t19215 + (331936 * t19216 + 625600 * t19218 - 430560 * t19220 + 9440) * t19209) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 2164:
            t19224 = np.cos(phi)
            t19225 = t19224 ** 2
            t19226 = t19224 * t19225
            t19229 = t19226 ** 2
            t19235 = t19229 ** 2
            t19227 = t19225 ** 2
            t19228 = t19224 * t19227
            t19233 = t19228 ** 2
            t19231 = t19227 ** 2
            t19223 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.77e2) * t19223 ** 2 * (-3648 * t19225 + 6402 * t19226 + 23820 * t19227 - 46791 * t19228 - 44640 * t19229 - 7452 * t19231 + 84640 * t19233 - 53820 * t19235 + 76 + (132588 * t19229 - 149155 * t19231 + 44850 * t19233 + 13455 * t19235 - 325) * t19224) * np.sin((8 * phi1 - 7 * phi2)) * ((1 - t19224) ** (-0.1e1 / 0.2e1)) * ((1 + t19224) ** (-0.1e1 / 0.2e1))

        if Bindx == 2165:
            t19237 = np.cos(phi)
            t19238 = t19237 ** 2
            t19239 = t19237 * t19238
            t19242 = t19239 ** 2
            t19248 = t19242 ** 2
            t19240 = t19238 ** 2
            t19241 = t19237 * t19240
            t19246 = t19241 ** 2
            t19244 = t19240 ** 2
            t19243 = t19237 * t19242
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-17105 * t19238 - 26848 * t19239 + 164979 * t19240 + 59784 * t19241 - 631173 * t19242 + 1090533 * t19244 - 783955 * t19246 + 82225 * t19248 + 311 + (165120 + 94185 * t19243) * t19243 + (-719624 * t19244 + 842720 * t19246 - 322920 * t19248 + 1768) * t19237) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 2166:
            t19264 = np.sin(phi)
            t19262 = t19264 ** 2
            t19251 = np.cos(phi)
            t19252 = t19251 ** 2
            t19254 = t19252 ** 2
            t19255 = t19251 * t19254
            t19260 = t19255 ** 2
            t19258 = t19254 ** 2
            t19253 = t19251 * t19252
            t19256 = t19253 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t19262 ** 2 * (-708 * t19252 - 15185 * t19253 + 11560 * t19254 + 67378 * t19255 - 68632 * t19256 + 140300 * t19258 - 89700 * t19260 + 12 + (-99682 * t19256 + 22425 * t19258 + 31395 * t19260 + 837) * t19251) * np.sin((8 * phi1 - 5 * phi2)) * ((1 - t19251) ** (-0.1e1 / 0.2e1)) * ((1 + t19251) ** (-0.1e1 / 0.2e1))

        if Bindx == 2167:
            t19265 = np.cos(phi)
            t19266 = t19265 ** 2
            t19267 = t19265 * t19266
            t19270 = t19267 ** 2
            t19276 = t19270 ** 2
            t19268 = t19266 ** 2
            t19269 = t19265 * t19268
            t19274 = t19269 ** 2
            t19272 = t19268 ** 2
            t19271 = t19265 * t19270
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.627e3) * (-2535 * t19266 + 9632 * t19267 + 24151 * t19268 - 66544 * t19269 - 75583 * t19270 + 84173 * t19272 + 5635 * t19274 - 67275 * t19276 + 39 + (208960 + 31395 * t19271) * t19271 + (-326416 * t19272 + 246560 * t19274 - 71760 * t19276 - 432) * t19265) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 2168:
            t19291 = np.sin(phi)
            t19288 = t19291 ** 2
            t19289 = t19291 * t19288
            t19279 = np.cos(phi)
            t19280 = t19279 ** 2
            t19282 = t19280 ** 2
            t19286 = t19282 ** 2
            t19281 = t19279 * t19280
            t19284 = t19281 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t19289 ** 2 * (8184 * t19280 + 4908 * t19281 - 73968 * t19282 + 197800 * t19284 - 161460 * t19286 - 124 + (-3450 * t19282 - 65780 * t19284 + 94185 * t19286 - 295) * t19279) * np.sin((8 * phi1 - 3 * phi2)) * ((1 - t19279) ** (-0.1e1 / 0.2e1)) * ((1 + t19279) ** (-0.1e1 / 0.2e1))

        if Bindx == 2169:
            t19292 = np.cos(phi)
            t19293 = t19292 ** 2
            t19294 = t19292 * t19293
            t19297 = t19294 ** 2
            t19303 = t19297 ** 2
            t19295 = t19293 ** 2
            t19296 = t19292 * t19295
            t19301 = t19296 ** 2
            t19299 = t19295 ** 2
            t19298 = t19292 * t19297
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (2911 * t19293 + 26848 * t19294 - 36317 * t19295 - 173864 * t19296 + 181595 * t19297 - 449563 * t19299 + 579485 * t19301 - 372255 * t19303 - 41 + (479744 + 94185 * t19298) * t19298 + (-647128 * t19299 + 423200 * t19301 - 107640 * t19303 - 1160) * t19292) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 2170:
            t19316 = np.sin(phi)
            t19313 = t19316 ** 2
            t19314 = t19313 ** 2
            t19306 = np.cos(phi)
            t19307 = t19306 ** 2
            t19308 = t19306 * t19307
            t19311 = t19308 ** 2
            t19309 = t19307 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * t19314 ** 2 * (-276 * t19307 + 1495 * t19308 + 2300 * t19309 - 4140 * t19311 + 4 + (-6555 * t19309 + 7245 * t19311 - 73) * t19306) * np.sin((8 * phi1 - phi2)) * ((1 - t19306) ** (-0.1e1 / 0.2e1)) * ((1 + t19306) ** (-0.1e1 / 0.2e1))

        if Bindx == 2171:
            t19317 = np.cos(phi)
            t19318 = t19317 ** 2
            t19319 = t19318 ** 2
            t19320 = t19318 * t19319
            t19323 = t19320 ** 2
            t19321 = t19319 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t19319 + 3753 * t19320 - 7867 * t19321 - 4715 * t19323 - 1 + (8579 * t19321 + 1035 * t19323 + 73) * t19318) * np.cos((8 * phi1))

        if Bindx == 2172:
            t19335 = np.sin(phi)
            t19332 = t19335 ** 2
            t19333 = t19332 ** 2
            t19325 = np.cos(phi)
            t19326 = t19325 ** 2
            t19327 = t19325 * t19326
            t19330 = t19327 ** 2
            t19328 = t19326 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * t19333 ** 2 * (276 * t19326 + 1495 * t19327 - 2300 * t19328 + 4140 * t19330 - 4 + (-6555 * t19328 + 7245 * t19330 - 73) * t19325) * np.sin((8 * phi1 + phi2)) * ((1 - t19325) ** (-0.1e1 / 0.2e1)) * ((1 + t19325) ** (-0.1e1 / 0.2e1))

        if Bindx == 2173:
            t19336 = np.cos(phi)
            t19337 = t19336 ** 2
            t19338 = t19336 * t19337
            t19341 = t19338 ** 2
            t19347 = t19341 ** 2
            t19339 = t19337 ** 2
            t19340 = t19336 * t19339
            t19345 = t19340 ** 2
            t19343 = t19339 ** 2
            t19342 = t19336 * t19341
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323e3) * (2911 * t19337 - 26848 * t19338 - 36317 * t19339 + 173864 * t19340 + 181595 * t19341 - 449563 * t19343 + 579485 * t19345 - 372255 * t19347 - 41 + (-479744 + 94185 * t19342) * t19342 + (647128 * t19343 - 423200 * t19345 + 107640 * t19347 + 1160) * t19336) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 2174:
            t19362 = np.sin(phi)
            t19359 = t19362 ** 2
            t19360 = t19362 * t19359
            t19350 = np.cos(phi)
            t19351 = t19350 ** 2
            t19353 = t19351 ** 2
            t19357 = t19353 ** 2
            t19352 = t19350 * t19351
            t19355 = t19352 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t19360 ** 2 * (-8184 * t19351 + 4908 * t19352 + 73968 * t19353 - 197800 * t19355 + 161460 * t19357 + 124 + (-3450 * t19353 - 65780 * t19355 + 94185 * t19357 - 295) * t19350) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t19350) ** (-0.1e1 / 0.2e1)) * ((1 + t19350) ** (-0.1e1 / 0.2e1))

        if Bindx == 2175:
            t19363 = np.cos(phi)
            t19364 = t19363 ** 2
            t19365 = t19363 * t19364
            t19368 = t19365 ** 2
            t19374 = t19368 ** 2
            t19366 = t19364 ** 2
            t19367 = t19363 * t19366
            t19372 = t19367 ** 2
            t19370 = t19366 ** 2
            t19369 = t19363 * t19368
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.627e3) * (-2535 * t19364 - 9632 * t19365 + 24151 * t19366 + 66544 * t19367 - 75583 * t19368 + 84173 * t19370 + 5635 * t19372 - 67275 * t19374 + 39 + (-208960 + 31395 * t19369) * t19369 + (326416 * t19370 - 246560 * t19372 + 71760 * t19374 + 432) * t19363) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 2176:
            t19390 = np.sin(phi)
            t19388 = t19390 ** 2
            t19377 = np.cos(phi)
            t19378 = t19377 ** 2
            t19380 = t19378 ** 2
            t19381 = t19377 * t19380
            t19386 = t19381 ** 2
            t19384 = t19380 ** 2
            t19379 = t19377 * t19378
            t19382 = t19379 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t19388 ** 2 * (708 * t19378 - 15185 * t19379 - 11560 * t19380 + 67378 * t19381 + 68632 * t19382 - 140300 * t19384 + 89700 * t19386 - 12 + (-99682 * t19382 + 22425 * t19384 + 31395 * t19386 + 837) * t19377) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t19377) ** (-0.1e1 / 0.2e1)) * ((1 + t19377) ** (-0.1e1 / 0.2e1))

        if Bindx == 2177:
            t19391 = np.cos(phi)
            t19392 = t19391 ** 2
            t19393 = t19391 * t19392
            t19396 = t19393 ** 2
            t19402 = t19396 ** 2
            t19394 = t19392 ** 2
            t19395 = t19391 * t19394
            t19400 = t19395 ** 2
            t19398 = t19394 ** 2
            t19397 = t19391 * t19396
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-17105 * t19392 + 26848 * t19393 + 164979 * t19394 - 59784 * t19395 - 631173 * t19396 + 1090533 * t19398 - 783955 * t19400 + 82225 * t19402 + 311 + (-165120 + 94185 * t19397) * t19397 + (719624 * t19398 - 842720 * t19400 + 322920 * t19402 - 1768) * t19391) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 2178:
            t19406 = np.cos(phi)
            t19407 = t19406 ** 2
            t19408 = t19406 * t19407
            t19411 = t19408 ** 2
            t19417 = t19411 ** 2
            t19409 = t19407 ** 2
            t19410 = t19406 * t19409
            t19415 = t19410 ** 2
            t19413 = t19409 ** 2
            t19405 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.77e2) * t19405 ** 2 * (3648 * t19407 + 6402 * t19408 - 23820 * t19409 - 46791 * t19410 + 44640 * t19411 + 7452 * t19413 - 84640 * t19415 + 53820 * t19417 - 76 + (132588 * t19411 - 149155 * t19413 + 44850 * t19415 + 13455 * t19417 - 325) * t19406) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t19406) ** (-0.1e1 / 0.2e1)) * ((1 + t19406) ** (-0.1e1 / 0.2e1))

        if Bindx == 2179:
            t19419 = np.cos(phi)
            t19420 = t19419 ** 2
            t19421 = t19419 * t19420
            t19424 = t19421 ** 2
            t19430 = t19424 ** 2
            t19422 = t19420 ** 2
            t19423 = t19419 * t19422
            t19428 = t19423 ** 2
            t19426 = t19422 ** 2
            t19425 = t19419 * t19424
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * (11603 * t19420 + 131904 * t19421 + 24189 * t19422 - 594528 * t19423 - 524205 * t19424 + 1534599 * t19426 - 1617935 * t19428 + 479895 * t19430 - 283 + (1001088 + 94185 * t19425) * t19425 + (-331936 * t19426 - 625600 * t19428 + 430560 * t19430 - 9440) * t19419) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 2180:
            t19434 = np.cos(phi)
            t19435 = t19434 ** 2
            t19436 = t19434 * t19435
            t19439 = t19436 ** 2
            t19445 = t19439 ** 2
            t19437 = t19435 ** 2
            t19438 = t19434 * t19437
            t19443 = t19438 ** 2
            t19441 = t19437 ** 2
            t19433 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.69e2) * t19433 ** 2 * (1664 * t19435 - 5742 * t19436 - 16500 * t19437 + 6633 * t19438 + 51744 * t19439 - 51612 * t19441 - 5280 * t19443 + 21060 * t19445 - 52 + (29964 * t19439 - 68035 * t19441 + 33410 * t19443 + 4095 * t19445 + 699) * t19434) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t19434) ** (-0.1e1 / 0.2e1)) * ((1 + t19434) ** (-0.1e1 / 0.2e1))

        if Bindx == 2181:
            t19447 = np.cos(phi)
            t19448 = t19447 ** 2
            t19449 = t19447 * t19448
            t19452 = t19449 ** 2
            t19458 = t19452 ** 2
            t19450 = t19448 ** 2
            t19451 = t19447 * t19450
            t19456 = t19451 ** 2
            t19454 = t19450 ** 2
            t19453 = t19447 * t19452
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (5129 * t19448 + 2016 * t19449 - 27291 * t19450 - 38280 * t19451 + 36861 * t19452 + 33891 * t19454 - 95557 * t19456 + 43095 * t19458 - 223 + (109824 + 4095 * t19453) * t19453 + (-98296 * t19454 + 800 * t19456 + 23400 * t19458 + 536) * t19447) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 2182:
            t19474 = np.sin(phi)
            t19472 = t19474 ** 2
            t19461 = np.cos(phi)
            t19462 = t19461 ** 2
            t19464 = t19462 ** 2
            t19465 = t19461 * t19464
            t19470 = t19465 ** 2
            t19468 = t19464 ** 2
            t19463 = t19461 * t19462
            t19466 = t19463 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * t19472 ** 2 * (1276 * t19462 + 3839 * t19463 + 616 * t19464 - 10318 * t19465 - 14168 * t19466 + 12364 * t19468 + 5148 * t19470 - 116 + (-1474 * t19466 + 12441 * t19468 + 819 * t19470 - 187) * t19461) * np.sin((8 * phi1 + 11 * phi2)) * ((1 - t19461) ** (-0.1e1 / 0.2e1)) * ((1 + t19461) ** (-0.1e1 / 0.2e1))

        if Bindx == 2183:
            t19475 = np.cos(phi)
            t19476 = t19475 ** 2
            t19477 = t19475 * t19476
            t19480 = t19477 ** 2
            t19486 = t19480 ** 2
            t19478 = t19476 ** 2
            t19479 = t19475 * t19478
            t19484 = t19479 ** 2
            t19482 = t19478 ** 2
            t19481 = t19475 * t19480
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.4485e4) * (-19 * t19476 - 608 * t19477 - 957 * t19478 + 528 * t19479 + 2805 * t19480 - 1551 * t19482 - 1441 * t19484 + 1081 * t19486 + 19 + (2112 + 63 * t19481) * t19481 + (-3344 * t19482 + 800 * t19484 + 432 * t19486 + 80) * t19475) * np.cos((8 * phi1 + 12 * phi2))

        if Bindx == 2184:
            t19501 = np.sin(phi)
            t19498 = t19501 ** 2
            t19499 = t19501 * t19498
            t19489 = np.cos(phi)
            t19490 = t19489 ** 2
            t19492 = t19490 ** 2
            t19496 = t19492 ** 2
            t19491 = t19489 * t19490
            t19494 = t19491 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * t19499 ** 2 * (-56 * t19490 - 28 * t19491 + 112 * t19492 + 280 * t19494 + 52 * t19496 - 4 + (266 * t19492 + 164 * t19494 + 7 * t19496 - 25) * t19489) * np.sin((8 * phi1 + 13 * phi2)) * ((1 - t19489) ** (-0.1e1 / 0.2e1)) * ((1 + t19489) ** (-0.1e1 / 0.2e1))

        if Bindx == 2185:
            t19502 = np.cos(phi)
            t19503 = t19502 ** 2
            t19504 = t19502 * t19503
            t19507 = t19504 ** 2
            t19512 = t19507 ** 2
            t19513 = t19502 * t19512
            t19505 = t19503 ** 2
            t19506 = t19502 * t19505
            t19510 = t19506 ** 2
            t19508 = t19505 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * np.cos((8 * phi1 + 14 * phi2)) * (-25 * t19503 - 32 * t19504 + 11 * t19505 + 88 * t19506 + 99 * t19507 - 99 * t19508 - 11 * t19510 + 25 * t19512 + 8 * t19513 - 1 + (-88 * t19508 + 32 * t19510 + t19513 - 8) * t19502)

        if Bindx == 2186:
            t19515 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.1365e4) * ((1 - t19515) ** (0.23e2 / 0.2e1)) * ((1 + t19515) ** (0.5e1 / 0.2e1)) * np.sin((9 * phi1 - 14 * phi2))

        if Bindx == 2187:
            t19516 = np.cos(phi)
            t19517 = t19516 ** 2
            t19518 = t19516 * t19517
            t19521 = t19518 ** 2
            t19527 = t19521 ** 2
            t19519 = t19517 ** 2
            t19520 = t19516 * t19519
            t19525 = t19520 ** 2
            t19523 = t19519 ** 2
            t19522 = t19516 * t19521
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.195e3) * (-180 * t19517 + 118 * t19518 + 429 * t19519 - 1067 * t19520 + 726 * t19521 - 1551 * t19523 + 176 * t19525 + 395 * t19527 - 9 + (660 + 14 * t19522) * t19522 + (957 * t19523 - 618 * t19525 - 117 * t19527 + 67) * t19516) * np.cos((9 * phi1 - 13 * phi2))

        if Bindx == 2188:
            t19543 = np.sin(phi)
            t19541 = t19543 ** 2
            t19530 = np.cos(phi)
            t19531 = t19530 ** 2
            t19533 = t19531 ** 2
            t19534 = t19530 * t19533
            t19539 = t19534 ** 2
            t19537 = t19533 ** 2
            t19532 = t19530 * t19531
            t19535 = t19532 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t19541 ** 2 * (-666 * t19531 - 831 * t19532 + 4284 * t19533 - 5418 * t19534 + 588 * t19535 - 7794 * t19537 - 1458 * t19539 - 74 + (6066 * t19535 + 4691 * t19537 + 189 * t19539 + 423) * t19530) * np.sin((9 * phi1 - 12 * phi2)) * ((1 - t19530) ** (-0.1e1 / 0.2e1)) * ((1 + t19530) ** (-0.1e1 / 0.2e1))

        if Bindx == 2189:
            t19544 = np.cos(phi)
            t19545 = t19544 ** 2
            t19546 = t19544 * t19545
            t19549 = t19546 ** 2
            t19555 = t19549 ** 2
            t19547 = t19545 ** 2
            t19548 = t19544 * t19547
            t19553 = t19548 ** 2
            t19551 = t19547 ** 2
            t19550 = t19544 * t19549
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * (-1452 * t19545 + 13322 * t19546 - 15807 * t19547 - 21681 * t19548 + 65406 * t19549 - 55539 * t19551 - 25432 * t19553 + 30823 * t19555 + 363 + (-33396 + 1638 * t19550) * t19550 + (83919 * t19551 - 29238 * t19553 - 11583 * t19555 - 1343) * t19544) * np.cos((9 * phi1 - 11 * phi2))

        if Bindx == 2190:
            t19559 = np.cos(phi)
            t19560 = t19559 ** 2
            t19561 = t19559 * t19560
            t19564 = t19561 ** 2
            t19570 = t19564 ** 2
            t19562 = t19560 ** 2
            t19563 = t19559 * t19562
            t19568 = t19563 ** 2
            t19566 = t19562 ** 2
            t19558 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * t19558 ** 2 * (6454 * t19560 - 15906 * t19561 - 8811 * t19562 + 66561 * t19563 - 56364 * t19564 + 129261 * t19566 - 47850 * t19568 - 26325 * t19570 - 461 + (-59004 * t19564 - 54439 * t19566 + 62270 * t19568 + 4095 * t19570 + 519) * t19559) * np.sin((9 * phi1 - 10 * phi2)) * ((1 - t19559) ** (-0.1e1 / 0.2e1)) * ((1 + t19559) ** (-0.1e1 / 0.2e1))

        if Bindx == 2191:
            t19572 = np.cos(phi)
            t19573 = t19572 ** 2
            t19574 = t19572 * t19573
            t19577 = t19574 ** 2
            t19583 = t19577 ** 2
            t19575 = t19573 ** 2
            t19576 = t19572 * t19575
            t19581 = t19576 ** 2
            t19579 = t19575 ** 2
            t19578 = t19572 * t19577
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * (28008 * t19573 - 6002 * t19574 - 158697 * t19575 + 201267 * t19576 + 242682 * t19577 + 147807 * t19579 - 551100 * t19581 + 269945 * t19583 - 1167 + (-630828 + 24570 * t19578) * t19578 + (611127 * t19579 - 32130 * t19581 - 142155 * t19583 - 3327) * t19572) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 2192:
            t19587 = np.cos(phi)
            t19588 = t19587 ** 2
            t19589 = t19587 * t19588
            t19592 = t19589 ** 2
            t19598 = t19592 ** 2
            t19590 = t19588 ** 2
            t19591 = t19587 * t19590
            t19596 = t19591 ** 2
            t19594 = t19590 ** 2
            t19586 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.69e2) * t19586 ** 2 * (-1664 * t19588 - 5742 * t19589 + 16500 * t19590 + 6633 * t19591 - 51744 * t19592 + 51612 * t19594 + 5280 * t19596 - 21060 * t19598 + 52 + (29964 * t19592 - 68035 * t19594 + 33410 * t19596 + 4095 * t19598 + 699) * t19587) * np.sin((9 * phi1 - 8 * phi2)) * ((1 - t19587) ** (-0.1e1 / 0.2e1)) * ((1 + t19587) ** (-0.1e1 / 0.2e1))

        if Bindx == 2193:
            t19600 = np.cos(phi)
            t19601 = t19600 ** 2
            t19602 = t19600 * t19601
            t19605 = t19602 ** 2
            t19611 = t19605 ** 2
            t19603 = t19601 ** 2
            t19604 = t19600 * t19603
            t19609 = t19604 ** 2
            t19607 = t19603 ** 2
            t19606 = t19600 * t19605
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.5313e4) * (120 * t19601 - 1766 * t19602 + 603 * t19603 + 7593 * t19604 - 7566 * t19605 + 20211 * t19607 - 20060 * t19609 + 5525 * t19611 - 3 + (-11940 + 1170 * t19606) * t19606 + (2757 * t19607 + 8490 * t19609 - 5265 * t19611 + 131) * t19600) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 2194:
            t19627 = np.sin(phi)
            t19625 = t19627 ** 2
            t19614 = np.cos(phi)
            t19615 = t19614 ** 2
            t19617 = t19615 ** 2
            t19618 = t19614 * t19617
            t19623 = t19618 ** 2
            t19621 = t19617 ** 2
            t19616 = t19614 * t19615
            t19619 = t19616 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.253e3) * t19625 ** 2 * (3555 * t19615 - 7695 * t19616 - 17910 * t19617 + 44334 * t19618 + 13926 * t19619 + 40725 * t19621 - 47385 * t19623 - 79 + (-87390 * t19619 + 45175 * t19621 + 12285 * t19623 + 459) * t19614) * np.sin((9 * phi1 - 6 * phi2)) * ((1 - t19614) ** (-0.1e1 / 0.2e1)) * ((1 + t19614) ** (-0.1e1 / 0.2e1))

        if Bindx == 2195:
            t19628 = np.cos(phi)
            t19629 = t19628 ** 2
            t19630 = t19628 * t19629
            t19633 = t19630 ** 2
            t19639 = t19633 ** 2
            t19631 = t19629 ** 2
            t19632 = t19628 * t19631
            t19637 = t19632 ** 2
            t19635 = t19631 ** 2
            t19634 = t19628 * t19633
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.1265e4) * (-676 * t19629 - 502 * t19630 + 5943 * t19631 - 457 * t19632 - 20366 * t19633 + 31067 * t19635 - 18776 * t19637 + 65 * t19639 + 13 + (10956 + 2730 * t19634) * t19634 + (-27513 * t19635 + 26250 * t19637 - 8775 * t19639 + 41) * t19628) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 2196:
            t19654 = np.sin(phi)
            t19651 = t19654 ** 2
            t19652 = t19654 * t19651
            t19642 = np.cos(phi)
            t19643 = t19642 ** 2
            t19645 = t19643 ** 2
            t19649 = t19645 ** 2
            t19644 = t19642 * t19643
            t19647 = t19644 ** 2
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * t19652 ** 2 * (108 * t19643 + 728 * t19644 - 1032 * t19645 + 3540 * t19647 - 3510 * t19649 - 2 + (-2190 * t19645 + 1040 * t19647 + 1365 * t19649 - 47) * t19642) * np.sin((9 * phi1 - 4 * phi2)) * ((1 - t19642) ** (-0.1e1 / 0.2e1)) * ((1 + t19642) ** (-0.1e1 / 0.2e1))

        if Bindx == 2197:
            t19655 = np.cos(phi)
            t19656 = t19655 ** 2
            t19657 = t19655 * t19656
            t19660 = t19657 ** 2
            t19666 = t19660 ** 2
            t19658 = t19656 ** 2
            t19659 = t19655 * t19658
            t19664 = t19659 ** 2
            t19662 = t19658 ** 2
            t19661 = t19655 * t19660
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.437e3) * (-1740 * t19656 + 13182 * t19657 + 13791 * t19658 - 78759 * t19659 - 28558 * t19660 - 4677 * t19662 + 72960 * t19664 - 76375 * t19666 + 29 + (211140 + 24570 * t19661) * t19661 + (-282831 * t19662 + 185310 * t19664 - 47385 * t19666 - 657) * t19655) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 2198:
            t19679 = np.sin(phi)
            t19676 = t19679 ** 2
            t19677 = t19676 ** 2
            t19669 = np.cos(phi)
            t19670 = t19669 ** 2
            t19671 = t19669 * t19670
            t19674 = t19671 ** 2
            t19672 = t19670 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.22287e5) * t19677 ** 2 * (-531 * t19670 + 445 * t19671 + 3675 * t19672 - 5265 * t19674 + 9 + (-2405 * t19672 + 4095 * t19674 - 23) * t19669) * np.sin((9 * phi1 - 2 * phi2)) * ((1 - t19669) ** (-0.1e1 / 0.2e1)) * ((1 + t19669) ** (-0.1e1 / 0.2e1))

        if Bindx == 2199:
            t19680 = np.cos(phi)
            t19681 = t19680 ** 2
            t19682 = t19680 * t19681
            t19685 = t19682 ** 2
            t19691 = t19685 ** 2
            t19683 = t19681 ** 2
            t19684 = t19680 * t19683
            t19689 = t19684 ** 2
            t19687 = t19683 ** 2
            t19686 = t19680 * t19685
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.289731e6) * (64 * t19681 + 186 * t19682 - 671 * t19683 - 1059 * t19684 + 2694 * t19685 - 5311 * t19687 + 5540 * t19689 - 2945 * t19691 - 1 + (2556 + 630 * t19686) * t19686 + (-3039 * t19687 + 1770 * t19689 - 405 * t19691 - 9) * t19680) * np.cos((9 * phi1 - phi2))

        if Bindx == 2200:
            t19701 = np.sin(phi)
            t19697 = t19701 ** 2
            t19699 = t19701 * t19697 ** 2
            t19694 = np.cos(phi)
            t19695 = t19694 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t19694 * t19699 ** 2 * (3 + (-50 + 135 * t19695) * t19695) * np.sin((9 * phi1)) * ((1 - t19694) ** (-0.1e1 / 0.2e1)) * ((1 + t19694) ** (-0.1e1 / 0.2e1))

        if Bindx == 2201:
            t19702 = np.cos(phi)
            t19703 = t19702 ** 2
            t19704 = t19702 * t19703
            t19707 = t19704 ** 2
            t19713 = t19707 ** 2
            t19705 = t19703 ** 2
            t19706 = t19702 * t19705
            t19711 = t19706 ** 2
            t19709 = t19705 ** 2
            t19708 = t19702 * t19707
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.289731e6) * (64 * t19703 - 186 * t19704 - 671 * t19705 + 1059 * t19706 + 2694 * t19707 - 5311 * t19709 + 5540 * t19711 - 2945 * t19713 - 1 + (-2556 + 630 * t19708) * t19708 + (3039 * t19709 - 1770 * t19711 + 405 * t19713 + 9) * t19702) * np.cos((9 * phi1 + phi2))

        if Bindx == 2202:
            t19726 = np.sin(phi)
            t19723 = t19726 ** 2
            t19724 = t19723 ** 2
            t19716 = np.cos(phi)
            t19717 = t19716 ** 2
            t19718 = t19716 * t19717
            t19721 = t19718 ** 2
            t19719 = t19717 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.22287e5) * t19724 ** 2 * (531 * t19717 + 445 * t19718 - 3675 * t19719 + 5265 * t19721 - 9 + (-2405 * t19719 + 4095 * t19721 - 23) * t19716) * np.sin((9 * phi1 + 2 * phi2)) * ((1 - t19716) ** (-0.1e1 / 0.2e1)) * ((1 + t19716) ** (-0.1e1 / 0.2e1))

        if Bindx == 2203:
            t19727 = np.cos(phi)
            t19728 = t19727 ** 2
            t19729 = t19727 * t19728
            t19732 = t19729 ** 2
            t19738 = t19732 ** 2
            t19730 = t19728 ** 2
            t19731 = t19727 * t19730
            t19736 = t19731 ** 2
            t19734 = t19730 ** 2
            t19733 = t19727 * t19732
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.437e3) * (-1740 * t19728 - 13182 * t19729 + 13791 * t19730 + 78759 * t19731 - 28558 * t19732 - 4677 * t19734 + 72960 * t19736 - 76375 * t19738 + 29 + (-211140 + 24570 * t19733) * t19733 + (282831 * t19734 - 185310 * t19736 + 47385 * t19738 + 657) * t19727) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 2204:
            t19753 = np.sin(phi)
            t19750 = t19753 ** 2
            t19751 = t19753 * t19750
            t19741 = np.cos(phi)
            t19742 = t19741 ** 2
            t19744 = t19742 ** 2
            t19748 = t19744 ** 2
            t19743 = t19741 * t19742
            t19746 = t19743 ** 2
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.4807e4) * t19751 ** 2 * (-108 * t19742 + 728 * t19743 + 1032 * t19744 - 3540 * t19746 + 3510 * t19748 + 2 + (-2190 * t19744 + 1040 * t19746 + 1365 * t19748 - 47) * t19741) * np.sin((9 * phi1 + 4 * phi2)) * ((1 - t19741) ** (-0.1e1 / 0.2e1)) * ((1 + t19741) ** (-0.1e1 / 0.2e1))

        if Bindx == 2205:
            t19754 = np.cos(phi)
            t19755 = t19754 ** 2
            t19756 = t19754 * t19755
            t19759 = t19756 ** 2
            t19765 = t19759 ** 2
            t19757 = t19755 ** 2
            t19758 = t19754 * t19757
            t19763 = t19758 ** 2
            t19761 = t19757 ** 2
            t19760 = t19754 * t19759
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.1265e4) * (-676 * t19755 + 502 * t19756 + 5943 * t19757 + 457 * t19758 - 20366 * t19759 + 31067 * t19761 - 18776 * t19763 + 65 * t19765 + 13 + (-10956 + 2730 * t19760) * t19760 + (27513 * t19761 - 26250 * t19763 + 8775 * t19765 - 41) * t19754) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 2206:
            t19781 = np.sin(phi)
            t19779 = t19781 ** 2
            t19768 = np.cos(phi)
            t19769 = t19768 ** 2
            t19771 = t19769 ** 2
            t19772 = t19768 * t19771
            t19777 = t19772 ** 2
            t19775 = t19771 ** 2
            t19770 = t19768 * t19769
            t19773 = t19770 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.253e3) * t19779 ** 2 * (-3555 * t19769 - 7695 * t19770 + 17910 * t19771 + 44334 * t19772 - 13926 * t19773 - 40725 * t19775 + 47385 * t19777 + 79 + (-87390 * t19773 + 45175 * t19775 + 12285 * t19777 + 459) * t19768) * np.sin((9 * phi1 + 6 * phi2)) * ((1 - t19768) ** (-0.1e1 / 0.2e1)) * ((1 + t19768) ** (-0.1e1 / 0.2e1))

        if Bindx == 2207:
            t19782 = np.cos(phi)
            t19783 = t19782 ** 2
            t19784 = t19782 * t19783
            t19787 = t19784 ** 2
            t19793 = t19787 ** 2
            t19785 = t19783 ** 2
            t19786 = t19782 * t19785
            t19791 = t19786 ** 2
            t19789 = t19785 ** 2
            t19788 = t19782 * t19787
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.5313e4) * (120 * t19783 + 1766 * t19784 + 603 * t19785 - 7593 * t19786 - 7566 * t19787 + 20211 * t19789 - 20060 * t19791 + 5525 * t19793 - 3 + (11940 + 1170 * t19788) * t19788 + (-2757 * t19789 - 8490 * t19791 + 5265 * t19793 - 131) * t19782) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 2208:
            t19797 = np.cos(phi)
            t19798 = t19797 ** 2
            t19799 = t19797 * t19798
            t19802 = t19799 ** 2
            t19808 = t19802 ** 2
            t19800 = t19798 ** 2
            t19801 = t19797 * t19800
            t19806 = t19801 ** 2
            t19804 = t19800 ** 2
            t19796 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.69e2) * t19796 ** 2 * (1664 * t19798 - 5742 * t19799 - 16500 * t19800 + 6633 * t19801 + 51744 * t19802 - 51612 * t19804 - 5280 * t19806 + 21060 * t19808 - 52 + (29964 * t19802 - 68035 * t19804 + 33410 * t19806 + 4095 * t19808 + 699) * t19797) * np.sin((9 * phi1 + 8 * phi2)) * ((1 - t19797) ** (-0.1e1 / 0.2e1)) * ((1 + t19797) ** (-0.1e1 / 0.2e1))

        if Bindx == 2209:
            t19810 = np.cos(phi)
            t19811 = t19810 ** 2
            t19812 = t19810 * t19811
            t19815 = t19812 ** 2
            t19821 = t19815 ** 2
            t19813 = t19811 ** 2
            t19814 = t19810 * t19813
            t19819 = t19814 ** 2
            t19817 = t19813 ** 2
            t19816 = t19810 * t19815
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * (28008 * t19811 + 6002 * t19812 - 158697 * t19813 - 201267 * t19814 + 242682 * t19815 + 147807 * t19817 - 551100 * t19819 + 269945 * t19821 - 1167 + (630828 + 24570 * t19816) * t19816 + (-611127 * t19817 + 32130 * t19819 + 142155 * t19821 + 3327) * t19810) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 2210:
            t19825 = np.cos(phi)
            t19826 = t19825 ** 2
            t19827 = t19825 * t19826
            t19830 = t19827 ** 2
            t19836 = t19830 ** 2
            t19828 = t19826 ** 2
            t19829 = t19825 * t19828
            t19834 = t19829 ** 2
            t19832 = t19828 ** 2
            t19824 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * t19824 ** 2 * (-6454 * t19826 - 15906 * t19827 + 8811 * t19828 + 66561 * t19829 + 56364 * t19830 - 129261 * t19832 + 47850 * t19834 + 26325 * t19836 + 461 + (-59004 * t19830 - 54439 * t19832 + 62270 * t19834 + 4095 * t19836 + 519) * t19825) * np.sin((9 * phi1 + 10 * phi2)) * ((1 - t19825) ** (-0.1e1 / 0.2e1)) * ((1 + t19825) ** (-0.1e1 / 0.2e1))

        if Bindx == 2211:
            t19838 = np.cos(phi)
            t19839 = t19838 ** 2
            t19840 = t19838 * t19839
            t19843 = t19840 ** 2
            t19849 = t19843 ** 2
            t19841 = t19839 ** 2
            t19842 = t19838 * t19841
            t19847 = t19842 ** 2
            t19845 = t19841 ** 2
            t19844 = t19838 * t19843
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * (-1452 * t19839 - 13322 * t19840 - 15807 * t19841 + 21681 * t19842 + 65406 * t19843 - 55539 * t19845 - 25432 * t19847 + 30823 * t19849 + 363 + (33396 + 1638 * t19844) * t19844 + (-83919 * t19845 + 29238 * t19847 + 11583 * t19849 + 1343) * t19838) * np.cos((9 * phi1 + 11 * phi2))

        if Bindx == 2212:
            t19865 = np.sin(phi)
            t19863 = t19865 ** 2
            t19852 = np.cos(phi)
            t19853 = t19852 ** 2
            t19855 = t19853 ** 2
            t19856 = t19852 * t19855
            t19861 = t19856 ** 2
            t19859 = t19855 ** 2
            t19854 = t19852 * t19853
            t19857 = t19854 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t19863 ** 2 * (666 * t19853 - 831 * t19854 - 4284 * t19855 - 5418 * t19856 - 588 * t19857 + 7794 * t19859 + 1458 * t19861 + 74 + (6066 * t19857 + 4691 * t19859 + 189 * t19861 + 423) * t19852) * np.sin((9 * phi1 + 12 * phi2)) * ((1 - t19852) ** (-0.1e1 / 0.2e1)) * ((1 + t19852) ** (-0.1e1 / 0.2e1))

        if Bindx == 2213:
            t19866 = np.cos(phi)
            t19867 = t19866 ** 2
            t19868 = t19866 * t19867
            t19871 = t19868 ** 2
            t19877 = t19871 ** 2
            t19869 = t19867 ** 2
            t19870 = t19866 * t19869
            t19875 = t19870 ** 2
            t19873 = t19869 ** 2
            t19872 = t19866 * t19871
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.195e3) * (-180 * t19867 - 118 * t19868 + 429 * t19869 + 1067 * t19870 + 726 * t19871 - 1551 * t19873 + 176 * t19875 + 395 * t19877 - 9 + (-660 + 14 * t19872) * t19872 + (-957 * t19873 + 618 * t19875 + 117 * t19877 - 67) * t19866) * np.cos((9 * phi1 + 13 * phi2))

        if Bindx == 2214:
            t19880 = np.cos(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.1365e4) * ((1 - t19880) ** (0.5e1 / 0.2e1)) * ((1 + t19880) ** (0.23e2 / 0.2e1)) * np.sin((9 * phi1 + 14 * phi2))

        if Bindx == 2215:
            t19881 = np.cos(phi)
            t19895 = -10 * t19881
            t19882 = t19881 ** 2
            t19884 = t19882 ** 2
            t19885 = t19881 * t19884
            t19890 = t19885 ** 2
            t19888 = t19884 ** 2
            t19883 = t19881 * t19882
            t19886 = t19883 ** 2
            t19887 = t19881 * t19886
            tfunc[..., c] = 0.435e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * np.cos((10 * phi1 - 14 * phi2)) * (43 * t19882 - 100 * t19883 + 121 * t19884 - 22 * t19885 - 165 * t19888 + 121 * t19890 + t19895 + 1 + (264 + t19887) * t19887 + (-22 * t19888 - 100 * t19890) * t19881 + (-165 + (t19895 + 43) * t19886) * t19886)

        if Bindx == 2216:
            t19909 = np.sin(phi)
            t19907 = t19909 ** 2
            t19896 = np.cos(phi)
            t19897 = t19896 ** 2
            t19899 = t19897 ** 2
            t19900 = t19896 * t19899
            t19905 = t19900 ** 2
            t19903 = t19899 ** 2
            t19898 = t19896 * t19897
            t19901 = t19898 ** 2
            tfunc[..., c] = -0.435e3 / 0.8192e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t19907 ** 2 * (155 * t19897 - 285 * t19898 + 210 * t19899 + 210 * t19900 - 714 * t19901 - 615 * t19903 - 65 * t19905 + 5 + (870 * t19901 + 265 * t19903 + 7 * t19905 - 43) * t19896) * np.sin((10 * phi1 - 13 * phi2)) * ((1 - t19896) ** (-0.1e1 / 0.2e1)) * ((1 + t19896) ** (-0.1e1 / 0.2e1))

        if Bindx == 2217:
            t19910 = np.cos(phi)
            t19911 = t19910 ** 2
            t19912 = t19910 * t19911
            t19915 = t19912 ** 2
            t19921 = t19915 ** 2
            t19913 = t19911 ** 2
            t19914 = t19910 * t19913
            t19919 = t19914 ** 2
            t19917 = t19913 ** 2
            t19916 = t19910 * t19915
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.39e2) * (-527 * t19911 + 80 * t19912 + 2013 * t19913 - 3828 * t19914 + 1485 * t19915 - 6765 * t19917 + 1859 * t19919 + 1903 * t19921 - 31 + (4224 + 63 * t19916) * t19916 + (3124 * t19917 - 3280 * t19919 - 540 * t19921 + 220) * t19910) * np.cos((10 * phi1 - 12 * phi2))

        if Bindx == 2218:
            t19925 = np.cos(phi)
            t19926 = t19925 ** 2
            t19927 = t19925 * t19926
            t19930 = t19927 ** 2
            t19936 = t19930 ** 2
            t19928 = t19926 ** 2
            t19929 = t19925 * t19928
            t19934 = t19929 ** 2
            t19932 = t19928 ** 2
            t19924 = np.sin(phi)
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * t19924 ** 2 * (1590 * t19926 + 5874 * t19927 - 18645 * t19928 + 13365 * t19929 + 21252 * t19930 + 29007 * t19932 - 31130 * t19934 - 6435 * t19936 + 265 + (-48180 * t19930 + 13145 * t19932 + 20514 * t19934 + 819 * t19936 - 1441) * t19925) * np.sin((10 * phi1 - 11 * phi2)) * ((1 - t19925) ** (-0.1e1 / 0.2e1)) * ((1 + t19925) ** (-0.1e1 / 0.2e1))

        if Bindx == 2219:
            t19938 = np.cos(phi)
            t19939 = t19938 ** 2
            t19940 = t19938 * t19939
            t19943 = t19940 ** 2
            t19949 = t19943 ** 2
            t19941 = t19939 ** 2
            t19942 = t19938 * t19941
            t19947 = t19942 ** 2
            t19945 = t19941 ** 2
            t19944 = t19938 * t19943
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * (-20455 * t19939 + 155580 * t19940 - 165165 * t19941 - 292182 * t19942 + 776985 * t19943 - 743655 * t19945 - 260909 * t19947 + 396825 * t19949 + 4091 + (-331320 + 20475 * t19944) * t19944 + (1022890 * t19945 - 402500 * t19947 - 146250 * t19949 - 14410) * t19938) * np.cos((10 * phi1 - 10 * phi2))

        if Bindx == 2220:
            t19953 = np.cos(phi)
            t19954 = t19953 ** 2
            t19955 = t19953 * t19954
            t19958 = t19955 ** 2
            t19964 = t19958 ** 2
            t19956 = t19954 ** 2
            t19957 = t19953 * t19956
            t19962 = t19957 ** 2
            t19960 = t19956 ** 2
            t19952 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * t19952 ** 2 * (6454 * t19954 - 15906 * t19955 - 8811 * t19956 + 66561 * t19957 - 56364 * t19958 + 129261 * t19960 - 47850 * t19962 - 26325 * t19964 - 461 + (-59004 * t19958 - 54439 * t19960 + 62270 * t19962 + 4095 * t19964 + 519) * t19953) * np.sin((10 * phi1 - 9 * phi2)) * ((1 - t19953) ** (-0.1e1 / 0.2e1)) * ((1 + t19953) ** (-0.1e1 / 0.2e1))

        if Bindx == 2221:
            t19966 = np.cos(phi)
            t19967 = t19966 ** 2
            t19968 = t19966 * t19967
            t19971 = t19968 ** 2
            t19977 = t19971 ** 2
            t19969 = t19967 ** 2
            t19970 = t19966 * t19969
            t19975 = t19970 ** 2
            t19973 = t19969 ** 2
            t19972 = t19966 * t19971
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (5129 * t19967 - 2016 * t19968 - 27291 * t19969 + 38280 * t19970 + 36861 * t19971 + 33891 * t19973 - 95557 * t19975 + 43095 * t19977 - 223 + (-109824 + 4095 * t19972) * t19972 + (98296 * t19973 - 800 * t19975 - 23400 * t19977 - 536) * t19966) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 2222:
            t19993 = np.sin(phi)
            t19991 = t19993 ** 2
            t19980 = np.cos(phi)
            t19981 = t19980 ** 2
            t19983 = t19981 ** 2
            t19984 = t19980 * t19983
            t19989 = t19984 ** 2
            t19987 = t19983 ** 2
            t19982 = t19980 * t19981
            t19985 = t19982 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * t19991 ** 2 * (319 * t19981 + 685 * t19982 - 2510 * t19983 + 406 * t19984 + 5278 * t19985 - 1175 * t19987 - 2925 * t19989 - 11 + (-5414 * t19985 + 4875 * t19987 + 585 * t19989 - 113) * t19980) * np.sin((10 * phi1 - 7 * phi2)) * ((1 - t19980) ** (-0.1e1 / 0.2e1)) * ((1 + t19980) ** (-0.1e1 / 0.2e1))

        if Bindx == 2223:
            t19994 = np.cos(phi)
            t19995 = t19994 ** 2
            t19996 = t19994 * t19995
            t19999 = t19996 ** 2
            t20005 = t19999 ** 2
            t19997 = t19995 ** 2
            t19998 = t19994 * t19997
            t20003 = t19998 ** 2
            t20001 = t19997 ** 2
            t20000 = t19994 * t19999
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * (37 * t19995 - 7532 * t19996 + 6039 * t19997 + 27822 * t19998 - 38331 * t19999 + 81477 * t20001 - 68201 * t20003 + 14885 * t20005 - 1 + (-34152 + 4095 * t20000) * t20000 + (-5714 * t20001 + 36500 * t20003 - 17550 * t20005 + 626) * t19994) * np.cos((10 * phi1 - 6 * phi2))

        if Bindx == 2224:
            t20020 = np.sin(phi)
            t20017 = t20020 ** 2
            t20018 = t20020 * t20017
            t20008 = np.cos(phi)
            t20009 = t20008 ** 2
            t20011 = t20009 ** 2
            t20015 = t20011 ** 2
            t20010 = t20008 * t20009
            t20013 = t20010 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * t20018 ** 2 * (-2120 * t20009 + 6720 * t20010 + 5690 * t20011 + 10000 * t20013 - 24375 * t20015 + 53 + (-25678 * t20011 + 23400 * t20013 + 6825 * t20015 - 515) * t20008) * np.sin((10 * phi1 - 5 * phi2)) * ((1 - t20008) ** (-0.1e1 / 0.2e1)) * ((1 + t20008) ** (-0.1e1 / 0.2e1))

        if Bindx == 2225:
            t20021 = np.cos(phi)
            t20022 = t20021 ** 2
            t20023 = t20021 * t20022
            t20026 = t20023 ** 2
            t20032 = t20026 ** 2
            t20024 = t20022 ** 2
            t20025 = t20021 * t20024
            t20030 = t20025 ** 2
            t20028 = t20024 ** 2
            t20027 = t20021 * t20026
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.72105e5) * (-517 * t20022 + 208 * t20023 + 3871 * t20024 - 2900 * t20025 - 10961 * t20026 + 13297 * t20028 - 5311 * t20030 - 1755 * t20032 + 11 + (11392 + 1365 * t20027) * t20027 + (-18796 * t20028 + 14000 * t20030 - 3900 * t20032 - 4) * t20021) * np.cos((10 * phi1 - 4 * phi2))

        if Bindx == 2226:
            t20045 = np.sin(phi)
            t20042 = t20045 ** 2
            t20043 = t20042 ** 2
            t20035 = np.cos(phi)
            t20036 = t20035 ** 2
            t20037 = t20035 * t20036
            t20040 = t20037 ** 2
            t20038 = t20036 ** 2
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * t20043 ** 2 * (-893 * t20036 - 2059 * t20037 + 5425 * t20038 - 8775 * t20040 + 19 + (2015 * t20038 + 4095 * t20040 + 173) * t20035) * np.sin((10 * phi1 - 3 * phi2)) * ((1 - t20035) ** (-0.1e1 / 0.2e1)) * ((1 + t20035) ** (-0.1e1 / 0.2e1))

        if Bindx == 2227:
            t20046 = np.cos(phi)
            t20047 = t20046 ** 2
            t20048 = t20046 * t20047
            t20051 = t20048 ** 2
            t20057 = t20051 ** 2
            t20049 = t20047 ** 2
            t20050 = t20046 * t20049
            t20055 = t20050 ** 2
            t20053 = t20049 ** 2
            t20052 = t20046 * t20051
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (53 * t20047 + 3772 * t20048 - 1177 * t20049 - 18758 * t20050 + 8293 * t20051 - 22427 * t20053 + 28519 * t20055 - 17355 * t20057 - 1 + (41672 + 4095 * t20052) * t20052 + (-46918 * t20053 + 26300 * t20055 - 5850 * t20057 - 218) * t20046) * np.cos((10 * phi1 - 2 * phi2))

        if Bindx == 2228:
            t20069 = np.sin(phi)
            t20065 = t20069 ** 2
            t20067 = t20069 * t20065 ** 2
            t20060 = np.cos(phi)
            t20061 = t20060 ** 2
            t20063 = t20061 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t20067 ** 2 * (50 * t20061 - 225 * t20063 - 1 + (-150 * t20061 + 315 * t20063 + 11) * t20060) * np.sin((10 * phi1 - phi2)) * ((1 - t20060) ** (-0.1e1 / 0.2e1)) * ((1 + t20060) ** (-0.1e1 / 0.2e1))

        if Bindx == 2229:
            t20070 = np.cos(phi)
            t20071 = t20070 ** 2
            t20072 = t20071 ** 2
            t20073 = t20071 * t20072
            t20076 = t20073 ** 2
            t20074 = t20072 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t20072 + 1635 * t20073 - 2755 * t20074 - 1175 * t20076 - 1 + (2501 * t20074 + 225 * t20076 + 55) * t20071) * np.cos((10 * phi1))

        if Bindx == 2230:
            t20087 = np.sin(phi)
            t20083 = t20087 ** 2
            t20085 = t20087 * t20083 ** 2
            t20078 = np.cos(phi)
            t20079 = t20078 ** 2
            t20081 = t20079 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t20085 ** 2 * (-50 * t20079 + 225 * t20081 + 1 + (-150 * t20079 + 315 * t20081 + 11) * t20078) * np.sin((10 * phi1 + phi2)) * ((1 - t20078) ** (-0.1e1 / 0.2e1)) * ((1 + t20078) ** (-0.1e1 / 0.2e1))

        if Bindx == 2231:
            t20088 = np.cos(phi)
            t20089 = t20088 ** 2
            t20090 = t20088 * t20089
            t20093 = t20090 ** 2
            t20099 = t20093 ** 2
            t20091 = t20089 ** 2
            t20092 = t20088 * t20091
            t20097 = t20092 ** 2
            t20095 = t20091 ** 2
            t20094 = t20088 * t20093
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (53 * t20089 - 3772 * t20090 - 1177 * t20091 + 18758 * t20092 + 8293 * t20093 - 22427 * t20095 + 28519 * t20097 - 17355 * t20099 - 1 + (-41672 + 4095 * t20094) * t20094 + (46918 * t20095 - 26300 * t20097 + 5850 * t20099 + 218) * t20088) * np.cos((10 * phi1 + 2 * phi2))

        if Bindx == 2232:
            t20112 = np.sin(phi)
            t20109 = t20112 ** 2
            t20110 = t20109 ** 2
            t20102 = np.cos(phi)
            t20103 = t20102 ** 2
            t20104 = t20102 * t20103
            t20107 = t20104 ** 2
            t20105 = t20103 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * t20110 ** 2 * (893 * t20103 - 2059 * t20104 - 5425 * t20105 + 8775 * t20107 - 19 + (2015 * t20105 + 4095 * t20107 + 173) * t20102) * np.sin((10 * phi1 + 3 * phi2)) * ((1 - t20102) ** (-0.1e1 / 0.2e1)) * ((1 + t20102) ** (-0.1e1 / 0.2e1))

        if Bindx == 2233:
            t20113 = np.cos(phi)
            t20114 = t20113 ** 2
            t20115 = t20113 * t20114
            t20118 = t20115 ** 2
            t20124 = t20118 ** 2
            t20116 = t20114 ** 2
            t20117 = t20113 * t20116
            t20122 = t20117 ** 2
            t20120 = t20116 ** 2
            t20119 = t20113 * t20118
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.72105e5) * (-517 * t20114 - 208 * t20115 + 3871 * t20116 + 2900 * t20117 - 10961 * t20118 + 13297 * t20120 - 5311 * t20122 - 1755 * t20124 + 11 + (-11392 + 1365 * t20119) * t20119 + (18796 * t20120 - 14000 * t20122 + 3900 * t20124 + 4) * t20113) * np.cos((10 * phi1 + 4 * phi2))

        if Bindx == 2234:
            t20139 = np.sin(phi)
            t20136 = t20139 ** 2
            t20137 = t20139 * t20136
            t20127 = np.cos(phi)
            t20128 = t20127 ** 2
            t20130 = t20128 ** 2
            t20134 = t20130 ** 2
            t20129 = t20127 * t20128
            t20132 = t20129 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * t20137 ** 2 * (2120 * t20128 + 6720 * t20129 - 5690 * t20130 - 10000 * t20132 + 24375 * t20134 - 53 + (-25678 * t20130 + 23400 * t20132 + 6825 * t20134 - 515) * t20127) * np.sin((10 * phi1 + 5 * phi2)) * ((1 - t20127) ** (-0.1e1 / 0.2e1)) * ((1 + t20127) ** (-0.1e1 / 0.2e1))

        if Bindx == 2235:
            t20140 = np.cos(phi)
            t20141 = t20140 ** 2
            t20142 = t20140 * t20141
            t20145 = t20142 ** 2
            t20151 = t20145 ** 2
            t20143 = t20141 ** 2
            t20144 = t20140 * t20143
            t20149 = t20144 ** 2
            t20147 = t20143 ** 2
            t20146 = t20140 * t20145
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * (37 * t20141 + 7532 * t20142 + 6039 * t20143 - 27822 * t20144 - 38331 * t20145 + 81477 * t20147 - 68201 * t20149 + 14885 * t20151 - 1 + (34152 + 4095 * t20146) * t20146 + (5714 * t20147 - 36500 * t20149 + 17550 * t20151 - 626) * t20140) * np.cos((10 * phi1 + 6 * phi2))

        if Bindx == 2236:
            t20167 = np.sin(phi)
            t20165 = t20167 ** 2
            t20154 = np.cos(phi)
            t20155 = t20154 ** 2
            t20157 = t20155 ** 2
            t20158 = t20154 * t20157
            t20163 = t20158 ** 2
            t20161 = t20157 ** 2
            t20156 = t20154 * t20155
            t20159 = t20156 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * t20165 ** 2 * (-319 * t20155 + 685 * t20156 + 2510 * t20157 + 406 * t20158 - 5278 * t20159 + 1175 * t20161 + 2925 * t20163 + 11 + (-5414 * t20159 + 4875 * t20161 + 585 * t20163 - 113) * t20154) * np.sin((10 * phi1 + 7 * phi2)) * ((1 - t20154) ** (-0.1e1 / 0.2e1)) * ((1 + t20154) ** (-0.1e1 / 0.2e1))

        if Bindx == 2237:
            t20168 = np.cos(phi)
            t20169 = t20168 ** 2
            t20170 = t20168 * t20169
            t20173 = t20170 ** 2
            t20179 = t20173 ** 2
            t20171 = t20169 ** 2
            t20172 = t20168 * t20171
            t20177 = t20172 ** 2
            t20175 = t20171 ** 2
            t20174 = t20168 * t20173
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (5129 * t20169 + 2016 * t20170 - 27291 * t20171 - 38280 * t20172 + 36861 * t20173 + 33891 * t20175 - 95557 * t20177 + 43095 * t20179 - 223 + (109824 + 4095 * t20174) * t20174 + (-98296 * t20175 + 800 * t20177 + 23400 * t20179 + 536) * t20168) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 2238:
            t20183 = np.cos(phi)
            t20184 = t20183 ** 2
            t20185 = t20183 * t20184
            t20188 = t20185 ** 2
            t20194 = t20188 ** 2
            t20186 = t20184 ** 2
            t20187 = t20183 * t20186
            t20192 = t20187 ** 2
            t20190 = t20186 ** 2
            t20182 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * t20182 ** 2 * (-6454 * t20184 - 15906 * t20185 + 8811 * t20186 + 66561 * t20187 + 56364 * t20188 - 129261 * t20190 + 47850 * t20192 + 26325 * t20194 + 461 + (-59004 * t20188 - 54439 * t20190 + 62270 * t20192 + 4095 * t20194 + 519) * t20183) * np.sin((10 * phi1 + 9 * phi2)) * ((1 - t20183) ** (-0.1e1 / 0.2e1)) * ((1 + t20183) ** (-0.1e1 / 0.2e1))

        if Bindx == 2239:
            t20196 = np.cos(phi)
            t20197 = t20196 ** 2
            t20198 = t20196 * t20197
            t20201 = t20198 ** 2
            t20207 = t20201 ** 2
            t20199 = t20197 ** 2
            t20200 = t20196 * t20199
            t20205 = t20200 ** 2
            t20203 = t20199 ** 2
            t20202 = t20196 * t20201
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * (-20455 * t20197 - 155580 * t20198 - 165165 * t20199 + 292182 * t20200 + 776985 * t20201 - 743655 * t20203 - 260909 * t20205 + 396825 * t20207 + 4091 + (331320 + 20475 * t20202) * t20202 + (-1022890 * t20203 + 402500 * t20205 + 146250 * t20207 + 14410) * t20196) * np.cos((10 * phi1 + 10 * phi2))

        if Bindx == 2240:
            t20211 = np.cos(phi)
            t20212 = t20211 ** 2
            t20213 = t20211 * t20212
            t20216 = t20213 ** 2
            t20222 = t20216 ** 2
            t20214 = t20212 ** 2
            t20215 = t20211 * t20214
            t20220 = t20215 ** 2
            t20218 = t20214 ** 2
            t20210 = np.sin(phi)
            tfunc[..., c] = 0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * t20210 ** 2 * (-1590 * t20212 + 5874 * t20213 + 18645 * t20214 + 13365 * t20215 - 21252 * t20216 - 29007 * t20218 + 31130 * t20220 + 6435 * t20222 - 265 + (-48180 * t20216 + 13145 * t20218 + 20514 * t20220 + 819 * t20222 - 1441) * t20211) * np.sin((10 * phi1 + 11 * phi2)) * ((1 - t20211) ** (-0.1e1 / 0.2e1)) * ((1 + t20211) ** (-0.1e1 / 0.2e1))

        if Bindx == 2241:
            t20224 = np.cos(phi)
            t20225 = t20224 ** 2
            t20226 = t20224 * t20225
            t20229 = t20226 ** 2
            t20235 = t20229 ** 2
            t20227 = t20225 ** 2
            t20228 = t20224 * t20227
            t20233 = t20228 ** 2
            t20231 = t20227 ** 2
            t20230 = t20224 * t20229
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.39e2) * (-527 * t20225 - 80 * t20226 + 2013 * t20227 + 3828 * t20228 + 1485 * t20229 - 6765 * t20231 + 1859 * t20233 + 1903 * t20235 - 31 + (-4224 + 63 * t20230) * t20230 + (-3124 * t20231 + 3280 * t20233 + 540 * t20235 - 220) * t20224) * np.cos((10 * phi1 + 12 * phi2))

        if Bindx == 2242:
            t20251 = np.sin(phi)
            t20249 = t20251 ** 2
            t20238 = np.cos(phi)
            t20239 = t20238 ** 2
            t20241 = t20239 ** 2
            t20242 = t20238 * t20241
            t20247 = t20242 ** 2
            t20245 = t20241 ** 2
            t20240 = t20238 * t20239
            t20243 = t20240 ** 2
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t20249 ** 2 * (-155 * t20239 - 285 * t20240 - 210 * t20241 + 210 * t20242 + 714 * t20243 + 615 * t20245 + 65 * t20247 - 5 + (870 * t20243 + 265 * t20245 + 7 * t20247 - 43) * t20238) * np.sin((10 * phi1 + 13 * phi2)) * ((1 - t20238) ** (-0.1e1 / 0.2e1)) * ((1 + t20238) ** (-0.1e1 / 0.2e1))

        if Bindx == 2243:
            t20252 = np.cos(phi)
            t20266 = 10 * t20252
            t20253 = t20252 ** 2
            t20255 = t20253 ** 2
            t20256 = t20252 * t20255
            t20261 = t20256 ** 2
            t20259 = t20255 ** 2
            t20254 = t20252 * t20253
            t20257 = t20254 ** 2
            t20258 = t20252 * t20257
            tfunc[..., c] = 0.435e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * np.cos((10 * phi1 + 14 * phi2)) * (43 * t20253 + 100 * t20254 + 121 * t20255 + 22 * t20256 - 165 * t20259 + 121 * t20261 + t20266 + 1 + (-264 + t20258) * t20258 + (22 * t20259 + 100 * t20261) * t20252 + (-165 + (t20266 + 43) * t20257) * t20257)

        if Bindx == 2244:
            t20267 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t20267) ** (0.25e2 / 0.2e1)) * ((1 + t20267) ** (0.3e1 / 0.2e1)) * np.sin((11 * phi1 - 14 * phi2))

        if Bindx == 2245:
            t20268 = np.cos(phi)
            t20269 = t20268 ** 2
            t20270 = t20268 * t20269
            t20273 = t20270 ** 2
            t20279 = t20273 ** 2
            t20271 = t20269 ** 2
            t20272 = t20268 * t20271
            t20277 = t20272 ** 2
            t20275 = t20271 ** 2
            t20274 = t20268 * t20273
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (440 * t20269 - 938 * t20270 + 869 * t20271 + 583 * t20272 - 2706 * t20273 - 1419 * t20275 + 2156 * t20277 + 635 * t20279 + 11 + (3300 + 14 * t20274) * t20274 + (-1133 * t20275 - 1562 * t20277 - 143 * t20279 - 107) * t20268) * np.cos((11 * phi1 - 13 * phi2))

        if Bindx == 2246:
            t20283 = np.cos(phi)
            t20284 = t20283 ** 2
            t20285 = t20283 * t20284
            t20288 = t20285 ** 2
            t20294 = t20288 ** 2
            t20286 = t20284 ** 2
            t20287 = t20283 * t20286
            t20292 = t20287 ** 2
            t20290 = t20286 ** 2
            t20282 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.39e2) * t20282 ** 2 * (-1064 * t20284 + 1518 * t20285 + 330 * t20286 - 4719 * t20287 + 7392 * t20288 - 2706 * t20290 - 5368 * t20292 - 594 * t20294 - 38 + (-4092 * t20288 + 6545 * t20290 + 2414 * t20292 + 63 * t20294 + 319) * t20283) * np.sin((11 * phi1 - 12 * phi2)) * ((1 - t20283) ** (-0.1e1 / 0.2e1)) * ((1 + t20283) ** (-0.1e1 / 0.2e1))

        if Bindx == 2247:
            t20296 = np.cos(phi)
            t20297 = t20296 ** 2
            t20298 = t20296 * t20297
            t20301 = t20298 ** 2
            t20307 = t20301 ** 2
            t20299 = t20297 ** 2
            t20300 = t20296 * t20299
            t20305 = t20300 ** 2
            t20303 = t20299 ** 2
            t20302 = t20296 * t20301
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (-11792 * t20297 - 582 * t20298 + 51513 * t20299 - 90651 * t20300 + 25014 * t20301 - 170511 * t20303 + 58388 * t20305 + 50583 * t20307 - 737 + (117084 + 1638 * t20302) * t20302 + (68849 * t20303 - 89782 * t20305 - 14157 * t20307 + 5143) * t20296) * np.cos((11 * phi1 - 11 * phi2))

        if Bindx == 2248:
            t20311 = np.cos(phi)
            t20312 = t20311 ** 2
            t20313 = t20311 * t20312
            t20316 = t20313 ** 2
            t20322 = t20316 ** 2
            t20314 = t20312 ** 2
            t20315 = t20311 * t20314
            t20320 = t20315 ** 2
            t20318 = t20314 ** 2
            t20310 = np.sin(phi)
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * t20310 ** 2 * (1590 * t20312 + 5874 * t20313 - 18645 * t20314 + 13365 * t20315 + 21252 * t20316 + 29007 * t20318 - 31130 * t20320 - 6435 * t20322 + 265 + (-48180 * t20316 + 13145 * t20318 + 20514 * t20320 + 819 * t20322 - 1441) * t20311) * np.sin((11 * phi1 - 10 * phi2)) * ((1 - t20311) ** (-0.1e1 / 0.2e1)) * ((1 + t20311) ** (-0.1e1 / 0.2e1))

        if Bindx == 2249:
            t20324 = np.cos(phi)
            t20325 = t20324 ** 2
            t20326 = t20324 * t20325
            t20329 = t20326 ** 2
            t20335 = t20329 ** 2
            t20327 = t20325 ** 2
            t20328 = t20324 * t20327
            t20333 = t20328 ** 2
            t20331 = t20327 ** 2
            t20330 = t20324 * t20329
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * (-1452 * t20325 + 13322 * t20326 - 15807 * t20327 - 21681 * t20328 + 65406 * t20329 - 55539 * t20331 - 25432 * t20333 + 30823 * t20335 + 363 + (-33396 + 1638 * t20330) * t20330 + (83919 * t20331 - 29238 * t20333 - 11583 * t20335 - 1343) * t20324) * np.cos((11 * phi1 - 9 * phi2))

        if Bindx == 2250:
            t20351 = np.sin(phi)
            t20349 = t20351 ** 2
            t20338 = np.cos(phi)
            t20339 = t20338 ** 2
            t20341 = t20339 ** 2
            t20342 = t20338 * t20341
            t20347 = t20342 ** 2
            t20345 = t20341 ** 2
            t20340 = t20338 * t20339
            t20343 = t20340 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * t20349 ** 2 * (-1276 * t20339 + 3839 * t20340 - 616 * t20341 - 10318 * t20342 + 14168 * t20343 - 12364 * t20345 - 5148 * t20347 + 116 + (-1474 * t20343 + 12441 * t20345 + 819 * t20347 - 187) * t20338) * np.sin((11 * phi1 - 8 * phi2)) * ((1 - t20338) ** (-0.1e1 / 0.2e1)) * ((1 + t20338) ** (-0.1e1 / 0.2e1))

        if Bindx == 2251:
            t20352 = np.cos(phi)
            t20353 = t20352 ** 2
            t20354 = t20352 * t20353
            t20357 = t20354 ** 2
            t20363 = t20357 ** 2
            t20355 = t20353 ** 2
            t20356 = t20352 * t20355
            t20361 = t20356 ** 2
            t20359 = t20355 ** 2
            t20358 = t20352 * t20357
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * (380 * t20353 - 342 * t20354 - 1641 * t20355 + 3063 * t20356 + 1266 * t20357 + 3579 * t20359 - 5944 * t20361 + 2145 * t20363 - 19 + (-6900 + 234 * t20358) * t20358 + (4807 * t20359 + 682 * t20361 - 1287 * t20363 - 23) * t20352) * np.cos((11 * phi1 - 7 * phi2))

        if Bindx == 2252:
            t20378 = np.sin(phi)
            t20375 = t20378 ** 2
            t20376 = t20378 * t20375
            t20366 = np.cos(phi)
            t20367 = t20366 ** 2
            t20369 = t20367 ** 2
            t20373 = t20369 ** 2
            t20368 = t20366 * t20367
            t20371 = t20368 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * t20376 ** 2 * (-744 * t20367 - 464 * t20368 + 3806 * t20369 - 2816 * t20371 - 3861 * t20373 + 31 + (-3306 * t20369 + 6344 * t20371 + 819 * t20373 + 191) * t20366) * np.sin((11 * phi1 - 6 * phi2)) * ((1 - t20366) ** (-0.1e1 / 0.2e1)) * ((1 + t20366) ** (-0.1e1 / 0.2e1))

        if Bindx == 2253:
            t20379 = np.cos(phi)
            t20380 = t20379 ** 2
            t20381 = t20379 * t20380
            t20384 = t20381 ** 2
            t20390 = t20384 ** 2
            t20382 = t20380 ** 2
            t20383 = t20379 * t20382
            t20388 = t20383 ** 2
            t20386 = t20382 ** 2
            t20385 = t20379 * t20384
            tfunc[..., c] = 0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (-160 * t20380 - 1262 * t20381 + 2035 * t20382 + 3385 * t20383 - 7886 * t20384 + 12427 * t20386 - 8020 * t20388 + 1053 * t20390 + 5 + (-1748 + 546 * t20385) * t20385 + (-4411 * t20386 + 6050 * t20388 - 2145 * t20390 + 131) * t20379) * np.cos((11 * phi1 - 5 * phi2))

        if Bindx == 2254:
            t20403 = np.sin(phi)
            t20400 = t20403 ** 2
            t20401 = t20400 ** 2
            t20393 = np.cos(phi)
            t20394 = t20393 ** 2
            t20395 = t20393 * t20394
            t20398 = t20395 ** 2
            t20396 = t20394 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.72105e5) * t20401 ** 2 * (66 * t20394 - 421 * t20395 + 154 * t20396 - 858 * t20398 - 2 + (741 * t20396 + 273 * t20398 + 47) * t20393) * np.sin((11 * phi1 - 4 * phi2)) * ((1 - t20393) ** (-0.1e1 / 0.2e1)) * ((1 + t20393) ** (-0.1e1 / 0.2e1))

        if Bindx == 2255:
            t20404 = np.cos(phi)
            t20405 = t20404 ** 2
            t20406 = t20404 * t20405
            t20409 = t20406 ** 2
            t20415 = t20409 ** 2
            t20407 = t20405 ** 2
            t20408 = t20404 * t20407
            t20413 = t20408 ** 2
            t20411 = t20407 ** 2
            t20410 = t20404 * t20409
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * (-920 * t20405 + 1826 * t20406 + 5257 * t20407 - 9955 * t20408 - 10650 * t20409 + 7625 * t20411 + 1772 * t20413 - 4745 * t20415 + 23 + (23980 + 1638 * t20410) * t20410 + (-28655 * t20411 + 16786 * t20413 - 3861 * t20415 - 121) * t20404) * np.cos((11 * phi1 - 3 * phi2))

        if Bindx == 2256:
            t20427 = np.sin(phi)
            t20423 = t20427 ** 2
            t20425 = t20427 * t20423 ** 2
            t20418 = np.cos(phi)
            t20419 = t20418 ** 2
            t20421 = t20419 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t20425 ** 2 * (418 * t20419 - 1287 * t20421 - 11 + (78 * t20419 + 819 * t20421 - 17) * t20418) * np.sin((11 * phi1 - 2 * phi2)) * ((1 - t20418) ** (-0.1e1 / 0.2e1)) * ((1 + t20418) ** (-0.1e1 / 0.2e1))

        if Bindx == 2257:
            t20428 = np.cos(phi)
            t20429 = t20428 ** 2
            t20430 = t20428 * t20429
            t20433 = t20430 ** 2
            t20439 = t20433 ** 2
            t20431 = t20429 ** 2
            t20432 = t20428 * t20431
            t20437 = t20432 ** 2
            t20435 = t20431 ** 2
            t20434 = t20428 * t20433
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * (44 * t20429 + 154 * t20430 - 331 * t20431 - 605 * t20432 + 1030 * t20433 - 1655 * t20435 + 1456 * t20437 - 669 * t20439 - 1 + (1100 + 126 * t20434) * t20434 + (-1045 * t20435 + 506 * t20437 - 99 * t20439 - 11) * t20428) * np.cos((11 * phi1 - phi2))

        if Bindx == 2258:
            t20447 = np.sin(phi)
            t20443 = t20447 ** 2
            t20444 = t20447 * t20443
            t20445 = t20444 ** 2
            t20442 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t20442 * t20445 ** 2 * (9 * t20442 ** 2 - 1) * np.sin((11 * phi1)) * ((1 - t20442) ** (-0.1e1 / 0.2e1)) * ((1 + t20442) ** (-0.1e1 / 0.2e1))

        if Bindx == 2259:
            t20448 = np.cos(phi)
            t20449 = t20448 ** 2
            t20450 = t20448 * t20449
            t20453 = t20450 ** 2
            t20459 = t20453 ** 2
            t20451 = t20449 ** 2
            t20452 = t20448 * t20451
            t20457 = t20452 ** 2
            t20455 = t20451 ** 2
            t20454 = t20448 * t20453
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * (44 * t20449 - 154 * t20450 - 331 * t20451 + 605 * t20452 + 1030 * t20453 - 1655 * t20455 + 1456 * t20457 - 669 * t20459 - 1 + (-1100 + 126 * t20454) * t20454 + (1045 * t20455 - 506 * t20457 + 99 * t20459 + 11) * t20448) * np.cos((11 * phi1 + phi2))

        if Bindx == 2260:
            t20471 = np.sin(phi)
            t20467 = t20471 ** 2
            t20469 = t20471 * t20467 ** 2
            t20462 = np.cos(phi)
            t20463 = t20462 ** 2
            t20465 = t20463 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * t20469 ** 2 * (-418 * t20463 + 1287 * t20465 + 11 + (78 * t20463 + 819 * t20465 - 17) * t20462) * np.sin((11 * phi1 + 2 * phi2)) * ((1 - t20462) ** (-0.1e1 / 0.2e1)) * ((1 + t20462) ** (-0.1e1 / 0.2e1))

        if Bindx == 2261:
            t20472 = np.cos(phi)
            t20473 = t20472 ** 2
            t20474 = t20472 * t20473
            t20477 = t20474 ** 2
            t20483 = t20477 ** 2
            t20475 = t20473 ** 2
            t20476 = t20472 * t20475
            t20481 = t20476 ** 2
            t20479 = t20475 ** 2
            t20478 = t20472 * t20477
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6555e4) * (-920 * t20473 - 1826 * t20474 + 5257 * t20475 + 9955 * t20476 - 10650 * t20477 + 7625 * t20479 + 1772 * t20481 - 4745 * t20483 + 23 + (-23980 + 1638 * t20478) * t20478 + (28655 * t20479 - 16786 * t20481 + 3861 * t20483 + 121) * t20472) * np.cos((11 * phi1 + 3 * phi2))

        if Bindx == 2262:
            t20496 = np.sin(phi)
            t20493 = t20496 ** 2
            t20494 = t20493 ** 2
            t20486 = np.cos(phi)
            t20487 = t20486 ** 2
            t20488 = t20486 * t20487
            t20491 = t20488 ** 2
            t20489 = t20487 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.72105e5) * t20494 ** 2 * (-66 * t20487 - 421 * t20488 - 154 * t20489 + 858 * t20491 + 2 + (741 * t20489 + 273 * t20491 + 47) * t20486) * np.sin((11 * phi1 + 4 * phi2)) * ((1 - t20486) ** (-0.1e1 / 0.2e1)) * ((1 + t20486) ** (-0.1e1 / 0.2e1))

        if Bindx == 2263:
            t20497 = np.cos(phi)
            t20498 = t20497 ** 2
            t20499 = t20497 * t20498
            t20502 = t20499 ** 2
            t20508 = t20502 ** 2
            t20500 = t20498 ** 2
            t20501 = t20497 * t20500
            t20506 = t20501 ** 2
            t20504 = t20500 ** 2
            t20503 = t20497 * t20502
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.759e3) * (-160 * t20498 + 1262 * t20499 + 2035 * t20500 - 3385 * t20501 - 7886 * t20502 + 12427 * t20504 - 8020 * t20506 + 1053 * t20508 + 5 + (1748 + 546 * t20503) * t20503 + (4411 * t20504 - 6050 * t20506 + 2145 * t20508 - 131) * t20497) * np.cos((11 * phi1 + 5 * phi2))

        if Bindx == 2264:
            t20523 = np.sin(phi)
            t20520 = t20523 ** 2
            t20521 = t20523 * t20520
            t20511 = np.cos(phi)
            t20512 = t20511 ** 2
            t20514 = t20512 ** 2
            t20518 = t20514 ** 2
            t20513 = t20511 * t20512
            t20516 = t20513 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * t20521 ** 2 * (744 * t20512 - 464 * t20513 - 3806 * t20514 + 2816 * t20516 + 3861 * t20518 - 31 + (-3306 * t20514 + 6344 * t20516 + 819 * t20518 + 191) * t20511) * np.sin((11 * phi1 + 6 * phi2)) * ((1 - t20511) ** (-0.1e1 / 0.2e1)) * ((1 + t20511) ** (-0.1e1 / 0.2e1))

        if Bindx == 2265:
            t20524 = np.cos(phi)
            t20525 = t20524 ** 2
            t20526 = t20524 * t20525
            t20529 = t20526 ** 2
            t20535 = t20529 ** 2
            t20527 = t20525 ** 2
            t20528 = t20524 * t20527
            t20533 = t20528 ** 2
            t20531 = t20527 ** 2
            t20530 = t20524 * t20529
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.8855e4) * (380 * t20525 + 342 * t20526 - 1641 * t20527 - 3063 * t20528 + 1266 * t20529 + 3579 * t20531 - 5944 * t20533 + 2145 * t20535 - 19 + (6900 + 234 * t20530) * t20530 + (-4807 * t20531 - 682 * t20533 + 1287 * t20535 + 23) * t20524) * np.cos((11 * phi1 + 7 * phi2))

        if Bindx == 2266:
            t20551 = np.sin(phi)
            t20549 = t20551 ** 2
            t20538 = np.cos(phi)
            t20539 = t20538 ** 2
            t20541 = t20539 ** 2
            t20542 = t20538 * t20541
            t20547 = t20542 ** 2
            t20545 = t20541 ** 2
            t20540 = t20538 * t20539
            t20543 = t20540 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * t20549 ** 2 * (1276 * t20539 + 3839 * t20540 + 616 * t20541 - 10318 * t20542 - 14168 * t20543 + 12364 * t20545 + 5148 * t20547 - 116 + (-1474 * t20543 + 12441 * t20545 + 819 * t20547 - 187) * t20538) * np.sin((11 * phi1 + 8 * phi2)) * ((1 - t20538) ** (-0.1e1 / 0.2e1)) * ((1 + t20538) ** (-0.1e1 / 0.2e1))

        if Bindx == 2267:
            t20552 = np.cos(phi)
            t20553 = t20552 ** 2
            t20554 = t20552 * t20553
            t20557 = t20554 ** 2
            t20563 = t20557 ** 2
            t20555 = t20553 ** 2
            t20556 = t20552 * t20555
            t20561 = t20556 ** 2
            t20559 = t20555 ** 2
            t20558 = t20552 * t20557
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.15e2) * (-1452 * t20553 - 13322 * t20554 - 15807 * t20555 + 21681 * t20556 + 65406 * t20557 - 55539 * t20559 - 25432 * t20561 + 30823 * t20563 + 363 + (33396 + 1638 * t20558) * t20558 + (-83919 * t20559 + 29238 * t20561 + 11583 * t20563 + 1343) * t20552) * np.cos((11 * phi1 + 9 * phi2))

        if Bindx == 2268:
            t20567 = np.cos(phi)
            t20568 = t20567 ** 2
            t20569 = t20567 * t20568
            t20572 = t20569 ** 2
            t20578 = t20572 ** 2
            t20570 = t20568 ** 2
            t20571 = t20567 * t20570
            t20576 = t20571 ** 2
            t20574 = t20570 ** 2
            t20566 = np.sin(phi)
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * t20566 ** 2 * (-1590 * t20568 + 5874 * t20569 + 18645 * t20570 + 13365 * t20571 - 21252 * t20572 - 29007 * t20574 + 31130 * t20576 + 6435 * t20578 - 265 + (-48180 * t20572 + 13145 * t20574 + 20514 * t20576 + 819 * t20578 - 1441) * t20567) * np.sin((11 * phi1 + 10 * phi2)) * ((1 - t20567) ** (-0.1e1 / 0.2e1)) * ((1 + t20567) ** (-0.1e1 / 0.2e1))

        if Bindx == 2269:
            t20580 = np.cos(phi)
            t20581 = t20580 ** 2
            t20582 = t20580 * t20581
            t20585 = t20582 ** 2
            t20591 = t20585 ** 2
            t20583 = t20581 ** 2
            t20584 = t20580 * t20583
            t20589 = t20584 ** 2
            t20587 = t20583 ** 2
            t20586 = t20580 * t20585
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (-11792 * t20581 + 582 * t20582 + 51513 * t20583 + 90651 * t20584 + 25014 * t20585 - 170511 * t20587 + 58388 * t20589 + 50583 * t20591 - 737 + (-117084 + 1638 * t20586) * t20586 + (-68849 * t20587 + 89782 * t20589 + 14157 * t20591 - 5143) * t20580) * np.cos((11 * phi1 + 11 * phi2))

        if Bindx == 2270:
            t20595 = np.cos(phi)
            t20596 = t20595 ** 2
            t20597 = t20595 * t20596
            t20600 = t20597 ** 2
            t20606 = t20600 ** 2
            t20598 = t20596 ** 2
            t20599 = t20595 * t20598
            t20604 = t20599 ** 2
            t20602 = t20598 ** 2
            t20594 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.39e2) * t20594 ** 2 * (1064 * t20596 + 1518 * t20597 - 330 * t20598 - 4719 * t20599 - 7392 * t20600 + 2706 * t20602 + 5368 * t20604 + 594 * t20606 + 38 + (-4092 * t20600 + 6545 * t20602 + 2414 * t20604 + 63 * t20606 + 319) * t20595) * np.sin((11 * phi1 + 12 * phi2)) * ((1 - t20595) ** (-0.1e1 / 0.2e1)) * ((1 + t20595) ** (-0.1e1 / 0.2e1))

        if Bindx == 2271:
            t20608 = np.cos(phi)
            t20609 = t20608 ** 2
            t20610 = t20608 * t20609
            t20613 = t20610 ** 2
            t20619 = t20613 ** 2
            t20611 = t20609 ** 2
            t20612 = t20608 * t20611
            t20617 = t20612 ** 2
            t20615 = t20611 ** 2
            t20614 = t20608 * t20613
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (440 * t20609 + 938 * t20610 + 869 * t20611 - 583 * t20612 - 2706 * t20613 - 1419 * t20615 + 2156 * t20617 + 635 * t20619 + 11 + (-3300 + 14 * t20614) * t20614 + (1133 * t20615 + 1562 * t20617 + 143 * t20619 + 107) * t20608) * np.cos((11 * phi1 + 13 * phi2))

        if Bindx == 2272:
            t20622 = np.cos(phi)
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t20622) ** (0.3e1 / 0.2e1)) * ((1 + t20622) ** (0.25e2 / 0.2e1)) * np.sin((11 * phi1 + 14 * phi2))

        if Bindx == 2273:
            t20623 = np.cos(phi)
            t20624 = t20623 ** 2
            t20625 = t20623 * t20624
            t20628 = t20625 ** 2
            t20633 = t20628 ** 2
            t20634 = t20623 * t20633
            t20626 = t20624 ** 2
            t20627 = t20623 * t20626
            t20631 = t20627 ** 2
            t20629 = t20626 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.21e2) * (-65 * t20624 + 208 * t20625 - 429 * t20626 + 572 * t20627 - 429 * t20628 + 429 * t20629 + 429 * t20631 + 65 * t20633 - 12 * t20634 - 1 + (-572 * t20629 - 208 * t20631 + t20634 + 12) * t20623) * np.cos((12 * phi1 - 14 * phi2))

        if Bindx == 2274:
            t20637 = np.cos(phi)
            t20638 = t20637 ** 2
            t20640 = t20638 ** 2
            t20641 = t20637 * t20640
            t20645 = t20641 ** 2
            t20646 = t20637 * t20645
            t20647 = t20637 * t20646
            t20643 = t20640 ** 2
            t20636 = np.sin(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.3e1) * t20636 ** 2 * (1430 * t20640 - 1287 * t20641 - 2574 * t20643 - 1144 * t20645 + 390 * t20646 - 78 * t20647 + 6 + (1716 * t20641 + 312) * t20638 + (-858 * t20638 + 2145 * t20643 + 7 * t20647 - 65) * t20637) * np.sin((12 * phi1 - 13 * phi2)) * ((1 + t20637) ** (-0.1e1 / 0.2e1)) * ((1 - t20637) ** (-0.1e1 / 0.2e1))

        if Bindx == 2275:
            t20649 = np.cos(phi)
            t20650 = t20649 ** 2
            t20651 = t20649 * t20650
            t20654 = t20651 ** 2
            t20660 = t20654 ** 2
            t20652 = t20650 ** 2
            t20653 = t20649 * t20652
            t20658 = t20653 ** 2
            t20656 = t20652 ** 2
            t20655 = t20649 * t20654
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (5343 * t20650 - 11024 * t20651 + 9009 * t20652 + 10296 * t20653 - 36465 * t20654 - 14157 * t20656 + 31317 * t20658 + 8723 * t20660 + 137 + (41184 + 189 * t20655) * t20655 + (-19448 * t20656 - 21840 * t20658 - 1944 * t20660 - 1320) * t20649) * np.cos((12 * phi1 - 12 * phi2))

        if Bindx == 2276:
            t20664 = np.cos(phi)
            t20665 = t20664 ** 2
            t20666 = t20664 * t20665
            t20669 = t20666 ** 2
            t20675 = t20669 ** 2
            t20667 = t20665 ** 2
            t20668 = t20664 * t20667
            t20673 = t20668 ** 2
            t20671 = t20667 ** 2
            t20663 = np.sin(phi)
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.39e2) * t20663 ** 2 * (-1064 * t20665 + 1518 * t20666 + 330 * t20667 - 4719 * t20668 + 7392 * t20669 - 2706 * t20671 - 5368 * t20673 - 594 * t20675 - 38 + (-4092 * t20669 + 6545 * t20671 + 2414 * t20673 + 63 * t20675 + 319) * t20664) * np.sin((12 * phi1 - 11 * phi2)) * ((1 + t20664) ** (-0.1e1 / 0.2e1)) * ((1 - t20664) ** (-0.1e1 / 0.2e1))

        if Bindx == 2277:
            t20677 = np.cos(phi)
            t20678 = t20677 ** 2
            t20679 = t20677 * t20678
            t20682 = t20679 ** 2
            t20688 = t20682 ** 2
            t20680 = t20678 ** 2
            t20681 = t20677 * t20680
            t20686 = t20681 ** 2
            t20684 = t20680 ** 2
            t20683 = t20677 * t20682
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.39e2) * (-527 * t20678 + 80 * t20679 + 2013 * t20680 - 3828 * t20681 + 1485 * t20682 - 6765 * t20684 + 1859 * t20686 + 1903 * t20688 - 31 + (4224 + 63 * t20683) * t20683 + (3124 * t20684 - 3280 * t20686 - 540 * t20688 + 220) * t20677) * np.cos((12 * phi1 - 10 * phi2))

        if Bindx == 2278:
            t20704 = np.sin(phi)
            t20702 = t20704 ** 2
            t20691 = np.cos(phi)
            t20692 = t20691 ** 2
            t20694 = t20692 ** 2
            t20695 = t20691 * t20694
            t20700 = t20695 ** 2
            t20698 = t20694 ** 2
            t20693 = t20691 * t20692
            t20696 = t20693 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t20702 ** 2 * (-666 * t20692 - 831 * t20693 + 4284 * t20694 - 5418 * t20695 + 588 * t20696 - 7794 * t20698 - 1458 * t20700 - 74 + (6066 * t20696 + 4691 * t20698 + 189 * t20700 + 423) * t20691) * np.sin((12 * phi1 - 9 * phi2)) * ((1 + t20691) ** (-0.1e1 / 0.2e1)) * ((1 - t20691) ** (-0.1e1 / 0.2e1))

        if Bindx == 2279:
            t20705 = np.cos(phi)
            t20706 = t20705 ** 2
            t20707 = t20705 * t20706
            t20710 = t20707 ** 2
            t20716 = t20710 ** 2
            t20708 = t20706 ** 2
            t20709 = t20705 * t20708
            t20714 = t20709 ** 2
            t20712 = t20708 ** 2
            t20711 = t20705 * t20710
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.4485e4) * (-19 * t20706 + 608 * t20707 - 957 * t20708 - 528 * t20709 + 2805 * t20710 - 1551 * t20712 - 1441 * t20714 + 1081 * t20716 + 19 + (-2112 + 63 * t20711) * t20711 + (3344 * t20712 - 800 * t20714 - 432 * t20716 - 80) * t20705) * np.cos((12 * phi1 - 8 * phi2))

        if Bindx == 2280:
            t20731 = np.sin(phi)
            t20728 = t20731 ** 2
            t20729 = t20731 * t20728
            t20719 = np.cos(phi)
            t20720 = t20719 ** 2
            t20722 = t20720 ** 2
            t20726 = t20722 ** 2
            t20721 = t20719 * t20720
            t20724 = t20721 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * t20729 ** 2 * (12 * t20720 - 56 * t20721 + 56 * t20722 - 140 * t20724 - 54 * t20726 - 2 + (42 * t20722 + 128 * t20724 + 9 * t20726 + 5) * t20719) * np.sin((12 * phi1 - 7 * phi2)) * ((1 + t20719) ** (-0.1e1 / 0.2e1)) * ((1 - t20719) ** (-0.1e1 / 0.2e1))

        if Bindx == 2281:
            t20732 = np.cos(phi)
            t20733 = t20732 ** 2
            t20734 = t20732 * t20733
            t20737 = t20734 ** 2
            t20743 = t20737 ** 2
            t20735 = t20733 ** 2
            t20736 = t20732 * t20735
            t20741 = t20736 ** 2
            t20739 = t20735 ** 2
            t20738 = t20732 * t20737
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.16445e5) * (435 * t20733 - 752 * t20734 - 1161 * t20735 + 3708 * t20736 - 729 * t20737 + 5049 * t20739 - 5079 * t20741 + 1325 * t20743 - 29 + (-5760 + 189 * t20738) * t20738 + (2372 * t20739 + 1392 * t20741 - 972 * t20743 + 12) * t20732) * np.cos((12 * phi1 - 6 * phi2))

        if Bindx == 2282:
            t20756 = np.sin(phi)
            t20753 = t20756 ** 2
            t20754 = t20753 ** 2
            t20746 = np.cos(phi)
            t20747 = t20746 ** 2
            t20748 = t20746 * t20747
            t20751 = t20748 ** 2
            t20749 = t20747 ** 2
            tfunc[..., c] = 0.435e3 / 0.4096e4 * np.sqrt(0.3289e4) * t20754 ** 2 * (34 * t20747 - 25 * t20748 - 70 * t20749 - 90 * t20751 - 2 + (137 * t20749 + 21 * t20751 - 5) * t20746) * np.sin((12 * phi1 - 5 * phi2)) * ((1 + t20746) ** (-0.1e1 / 0.2e1)) * ((1 - t20746) ** (-0.1e1 / 0.2e1))

        if Bindx == 2283:
            t20757 = np.cos(phi)
            t20758 = t20757 ** 2
            t20759 = t20757 * t20758
            t20762 = t20759 ** 2
            t20768 = t20762 ** 2
            t20760 = t20758 ** 2
            t20761 = t20757 * t20760
            t20766 = t20761 ** 2
            t20764 = t20760 ** 2
            t20763 = t20757 * t20762
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.312455e6) * (-25 * t20758 - 48 * t20759 + 169 * t20760 + 40 * t20761 - 425 * t20762 + 475 * t20764 - 211 * t20766 - 5 * t20768 + 1 + (160 + 21 * t20763) * t20763 + (-360 * t20764 + 272 * t20766 - 72 * t20768 + 8) * t20757) * np.cos((12 * phi1 - 4 * phi2))

        if Bindx == 2284:
            t20780 = np.sin(phi)
            t20776 = t20780 ** 2
            t20778 = t20780 * t20776 ** 2
            t20771 = np.cos(phi)
            t20772 = t20771 ** 2
            t20774 = t20772 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.28405e5) * t20778 ** 2 * (48 * t20772 - 486 * t20774 - 2 + (326 * t20772 + 189 * t20774 - 75) * t20771) * np.sin((12 * phi1 - 3 * phi2)) * ((1 + t20771) ** (-0.1e1 / 0.2e1)) * ((1 - t20771) ** (-0.1e1 / 0.2e1))

        if Bindx == 2285:
            t20781 = np.cos(phi)
            t20782 = t20781 ** 2
            t20783 = t20781 * t20782
            t20786 = t20783 ** 2
            t20792 = t20786 ** 2
            t20784 = t20782 ** 2
            t20785 = t20781 * t20784
            t20790 = t20785 ** 2
            t20788 = t20784 ** 2
            t20787 = t20781 * t20786
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.1448655e7) * (-31 * t20782 + 208 * t20783 + 77 * t20784 - 740 * t20785 + 45 * t20786 - 365 * t20788 + 499 * t20790 - 289 * t20792 + 1 + (1280 + 63 * t20787) * t20787 + (-1180 * t20788 + 560 * t20790 - 108 * t20792 - 20) * t20781) * np.cos((12 * phi1 - 2 * phi2))

        if Bindx == 2286:
            t20802 = np.sin(phi)
            t20798 = t20802 ** 2
            t20799 = t20802 * t20798
            t20800 = t20799 ** 2
            t20795 = np.cos(phi)
            t20796 = t20795 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.111435e6) * t20800 ** 2 * (-54 * t20796 + 2 + (63 * t20796 - 11) * t20795) * np.sin((12 * phi1 - phi2)) * ((1 + t20795) ** (-0.1e1 / 0.2e1)) * ((1 - t20795) ** (-0.1e1 / 0.2e1))

        if Bindx == 2287:
            t20803 = np.cos(phi)
            t20804 = t20803 ** 2
            t20805 = t20804 ** 2
            t20806 = t20804 * t20805
            t20809 = t20806 ** 2
            t20807 = t20805 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t20805 + 425 * t20806 - 555 * t20807 - 163 * t20809 - 1 + (411 * t20807 + 27 * t20809 + 33) * t20804) * np.cos((12 * phi1))

        if Bindx == 2288:
            t20818 = np.sin(phi)
            t20814 = t20818 ** 2
            t20815 = t20818 * t20814
            t20816 = t20815 ** 2
            t20811 = np.cos(phi)
            t20812 = t20811 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.111435e6) * t20816 ** 2 * (54 * t20812 - 2 + (63 * t20812 - 11) * t20811) * np.sin((12 * phi1 + phi2)) * ((1 + t20811) ** (-0.1e1 / 0.2e1)) * ((1 - t20811) ** (-0.1e1 / 0.2e1))

        if Bindx == 2289:
            t20819 = np.cos(phi)
            t20820 = t20819 ** 2
            t20821 = t20819 * t20820
            t20824 = t20821 ** 2
            t20830 = t20824 ** 2
            t20822 = t20820 ** 2
            t20823 = t20819 * t20822
            t20828 = t20823 ** 2
            t20826 = t20822 ** 2
            t20825 = t20819 * t20824
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.1448655e7) * (-31 * t20820 - 208 * t20821 + 77 * t20822 + 740 * t20823 + 45 * t20824 - 365 * t20826 + 499 * t20828 - 289 * t20830 + 1 + (-1280 + 63 * t20825) * t20825 + (1180 * t20826 - 560 * t20828 + 108 * t20830 + 20) * t20819) * np.cos((12 * phi1 + 2 * phi2))

        if Bindx == 2290:
            t20842 = np.sin(phi)
            t20838 = t20842 ** 2
            t20840 = t20842 * t20838 ** 2
            t20833 = np.cos(phi)
            t20834 = t20833 ** 2
            t20836 = t20834 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.28405e5) * t20840 ** 2 * (-48 * t20834 + 486 * t20836 + 2 + (326 * t20834 + 189 * t20836 - 75) * t20833) * np.sin((12 * phi1 + 3 * phi2)) * ((1 + t20833) ** (-0.1e1 / 0.2e1)) * ((1 - t20833) ** (-0.1e1 / 0.2e1))

        if Bindx == 2291:
            t20843 = np.cos(phi)
            t20844 = t20843 ** 2
            t20845 = t20843 * t20844
            t20848 = t20845 ** 2
            t20854 = t20848 ** 2
            t20846 = t20844 ** 2
            t20847 = t20843 * t20846
            t20852 = t20847 ** 2
            t20850 = t20846 ** 2
            t20849 = t20843 * t20848
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.312455e6) * (-25 * t20844 + 48 * t20845 + 169 * t20846 - 40 * t20847 - 425 * t20848 + 475 * t20850 - 211 * t20852 - 5 * t20854 + 1 + (-160 + 21 * t20849) * t20849 + (360 * t20850 - 272 * t20852 + 72 * t20854 - 8) * t20843) * np.cos((12 * phi1 + 4 * phi2))

        if Bindx == 2292:
            t20867 = np.sin(phi)
            t20864 = t20867 ** 2
            t20865 = t20864 ** 2
            t20857 = np.cos(phi)
            t20858 = t20857 ** 2
            t20859 = t20857 * t20858
            t20862 = t20859 ** 2
            t20860 = t20858 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.3289e4) * t20865 ** 2 * (-34 * t20858 - 25 * t20859 + 70 * t20860 + 90 * t20862 + 2 + (137 * t20860 + 21 * t20862 - 5) * t20857) * np.sin((12 * phi1 + 5 * phi2)) * ((1 + t20857) ** (-0.1e1 / 0.2e1)) * ((1 - t20857) ** (-0.1e1 / 0.2e1))

        if Bindx == 2293:
            t20868 = np.cos(phi)
            t20869 = t20868 ** 2
            t20870 = t20868 * t20869
            t20873 = t20870 ** 2
            t20879 = t20873 ** 2
            t20871 = t20869 ** 2
            t20872 = t20868 * t20871
            t20877 = t20872 ** 2
            t20875 = t20871 ** 2
            t20874 = t20868 * t20873
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.16445e5) * (435 * t20869 + 752 * t20870 - 1161 * t20871 - 3708 * t20872 - 729 * t20873 + 5049 * t20875 - 5079 * t20877 + 1325 * t20879 - 29 + (5760 + 189 * t20874) * t20874 + (-2372 * t20875 - 1392 * t20877 + 972 * t20879 - 12) * t20868) * np.cos((12 * phi1 + 6 * phi2))

        if Bindx == 2294:
            t20894 = np.sin(phi)
            t20891 = t20894 ** 2
            t20892 = t20894 * t20891
            t20882 = np.cos(phi)
            t20883 = t20882 ** 2
            t20885 = t20883 ** 2
            t20889 = t20885 ** 2
            t20884 = t20882 * t20883
            t20887 = t20884 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * t20892 ** 2 * (-12 * t20883 - 56 * t20884 - 56 * t20885 + 140 * t20887 + 54 * t20889 + 2 + (42 * t20885 + 128 * t20887 + 9 * t20889 + 5) * t20882) * np.sin((12 * phi1 + 7 * phi2)) * ((1 + t20882) ** (-0.1e1 / 0.2e1)) * ((1 - t20882) ** (-0.1e1 / 0.2e1))

        if Bindx == 2295:
            t20895 = np.cos(phi)
            t20896 = t20895 ** 2
            t20897 = t20895 * t20896
            t20900 = t20897 ** 2
            t20906 = t20900 ** 2
            t20898 = t20896 ** 2
            t20899 = t20895 * t20898
            t20904 = t20899 ** 2
            t20902 = t20898 ** 2
            t20901 = t20895 * t20900
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.4485e4) * (-19 * t20896 - 608 * t20897 - 957 * t20898 + 528 * t20899 + 2805 * t20900 - 1551 * t20902 - 1441 * t20904 + 1081 * t20906 + 19 + (2112 + 63 * t20901) * t20901 + (-3344 * t20902 + 800 * t20904 + 432 * t20906 + 80) * t20895) * np.cos((12 * phi1 + 8 * phi2))

        if Bindx == 2296:
            t20922 = np.sin(phi)
            t20920 = t20922 ** 2
            t20909 = np.cos(phi)
            t20910 = t20909 ** 2
            t20912 = t20910 ** 2
            t20913 = t20909 * t20912
            t20918 = t20913 ** 2
            t20916 = t20912 ** 2
            t20911 = t20909 * t20910
            t20914 = t20911 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t20920 ** 2 * (666 * t20910 - 831 * t20911 - 4284 * t20912 - 5418 * t20913 - 588 * t20914 + 7794 * t20916 + 1458 * t20918 + 74 + (6066 * t20914 + 4691 * t20916 + 189 * t20918 + 423) * t20909) * np.sin((12 * phi1 + 9 * phi2)) * ((1 + t20909) ** (-0.1e1 / 0.2e1)) * ((1 - t20909) ** (-0.1e1 / 0.2e1))

        if Bindx == 2297:
            t20923 = np.cos(phi)
            t20924 = t20923 ** 2
            t20925 = t20923 * t20924
            t20928 = t20925 ** 2
            t20934 = t20928 ** 2
            t20926 = t20924 ** 2
            t20927 = t20923 * t20926
            t20932 = t20927 ** 2
            t20930 = t20926 ** 2
            t20929 = t20923 * t20928
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.39e2) * (-527 * t20924 - 80 * t20925 + 2013 * t20926 + 3828 * t20927 + 1485 * t20928 - 6765 * t20930 + 1859 * t20932 + 1903 * t20934 - 31 + (-4224 + 63 * t20929) * t20929 + (-3124 * t20930 + 3280 * t20932 + 540 * t20934 - 220) * t20923) * np.cos((12 * phi1 + 10 * phi2))

        if Bindx == 2298:
            t20938 = np.cos(phi)
            t20939 = t20938 ** 2
            t20940 = t20938 * t20939
            t20943 = t20940 ** 2
            t20949 = t20943 ** 2
            t20941 = t20939 ** 2
            t20942 = t20938 * t20941
            t20947 = t20942 ** 2
            t20945 = t20941 ** 2
            t20937 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.39e2) * t20937 ** 2 * (1064 * t20939 + 1518 * t20940 - 330 * t20941 - 4719 * t20942 - 7392 * t20943 + 2706 * t20945 + 5368 * t20947 + 594 * t20949 + 38 + (-4092 * t20943 + 6545 * t20945 + 2414 * t20947 + 63 * t20949 + 319) * t20938) * np.sin((12 * phi1 + 11 * phi2)) * ((1 - t20938) ** (-0.1e1 / 0.2e1)) * ((1 + t20938) ** (-0.1e1 / 0.2e1))

        if Bindx == 2299:
            t20951 = np.cos(phi)
            t20952 = t20951 ** 2
            t20953 = t20951 * t20952
            t20956 = t20953 ** 2
            t20962 = t20956 ** 2
            t20954 = t20952 ** 2
            t20955 = t20951 * t20954
            t20960 = t20955 ** 2
            t20958 = t20954 ** 2
            t20957 = t20951 * t20956
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (5343 * t20952 + 11024 * t20953 + 9009 * t20954 - 10296 * t20955 - 36465 * t20956 - 14157 * t20958 + 31317 * t20960 + 8723 * t20962 + 137 + (-41184 + 189 * t20957) * t20957 + (19448 * t20958 + 21840 * t20960 + 1944 * t20962 + 1320) * t20951) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 2300:
            t20966 = np.cos(phi)
            t20967 = t20966 ** 2
            t20969 = t20967 ** 2
            t20970 = t20966 * t20969
            t20974 = t20970 ** 2
            t20975 = t20966 * t20974
            t20976 = t20966 * t20975
            t20972 = t20969 ** 2
            t20965 = np.sin(phi)
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.3e1) * t20965 ** 2 * (-1430 * t20969 - 1287 * t20970 + 2574 * t20972 + 1144 * t20974 + 390 * t20975 + 78 * t20976 - 6 + (1716 * t20970 - 312) * t20967 + (-858 * t20967 + 2145 * t20972 + 7 * t20976 - 65) * t20966) * np.sin((12 * phi1 + 13 * phi2)) * ((1 - t20966) ** (-0.1e1 / 0.2e1)) * ((1 + t20966) ** (-0.1e1 / 0.2e1))

        if Bindx == 2301:
            t20978 = np.cos(phi)
            t20979 = t20978 ** 2
            t20980 = t20978 * t20979
            t20983 = t20980 ** 2
            t20988 = t20983 ** 2
            t20989 = t20978 * t20988
            t20981 = t20979 ** 2
            t20982 = t20978 * t20981
            t20986 = t20982 ** 2
            t20984 = t20981 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.21e2) * (-65 * t20979 - 208 * t20980 - 429 * t20981 - 572 * t20982 - 429 * t20983 + 429 * t20984 + 429 * t20986 + 65 * t20988 + 12 * t20989 - 1 + (572 * t20984 + 208 * t20986 + t20989 - 12) * t20978) * np.cos((12 * phi1 + 14 * phi2))

        if Bindx == 2302:
            t20991 = np.cos(phi)
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t20991) ** (0.27e2 / 0.2e1)) * np.sqrt((1 + t20991)) * np.sin((13 * phi1 - 14 * phi2))

        if Bindx == 2303:
            t20992 = np.cos(phi)
            t20993 = t20992 ** 2
            t20994 = t20992 * t20993
            t20997 = t20994 ** 2
            t21003 = t20997 ** 2
            t20995 = t20993 ** 2
            t20996 = t20992 * t20995
            t21001 = t20996 ** 2
            t20999 = t20995 ** 2
            t20998 = t20992 * t20997
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (-832 * t20993 + 2626 * t20994 - 5291 * t20995 + 6721 * t20996 - 4290 * t20997 + 7293 * t20999 + 6292 * t21001 + 923 * t21003 - 13 + (-1716 + 14 * t20998) * t20998 + (-8723 * t20999 - 2990 * t21001 - 169 * t21003 + 155) * t20992) * np.cos((13 * phi1 - 13 * phi2))

        if Bindx == 2304:
            t21007 = np.cos(phi)
            t21008 = t21007 ** 2
            t21010 = t21008 ** 2
            t21011 = t21007 * t21010
            t21015 = t21011 ** 2
            t21016 = t21007 * t21015
            t21017 = t21007 * t21016
            t21013 = t21010 ** 2
            t21006 = np.sin(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.3e1) * t21006 ** 2 * (1430 * t21010 - 1287 * t21011 - 2574 * t21013 - 1144 * t21015 + 390 * t21016 - 78 * t21017 + 6 + (1716 * t21011 + 312) * t21008 + (-858 * t21008 + 2145 * t21013 + 7 * t21017 - 65) * t21007) * np.sin((13 * phi1 - 12 * phi2)) * ((1 - t21007) ** (-0.1e1 / 0.2e1)) * ((1 + t21007) ** (-0.1e1 / 0.2e1))

        if Bindx == 2305:
            t21019 = np.cos(phi)
            t21020 = t21019 ** 2
            t21021 = t21019 * t21020
            t21024 = t21021 ** 2
            t21030 = t21024 ** 2
            t21022 = t21020 ** 2
            t21023 = t21019 * t21022
            t21028 = t21023 ** 2
            t21026 = t21022 ** 2
            t21025 = t21019 * t21024
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (440 * t21020 - 938 * t21021 + 869 * t21022 + 583 * t21023 - 2706 * t21024 - 1419 * t21026 + 2156 * t21028 + 635 * t21030 + 11 + (3300 + 14 * t21025) * t21025 + (-1133 * t21026 - 1562 * t21028 - 143 * t21030 - 107) * t21019) * np.cos((13 * phi1 - 11 * phi2))

        if Bindx == 2306:
            t21046 = np.sin(phi)
            t21044 = t21046 ** 2
            t21033 = np.cos(phi)
            t21034 = t21033 ** 2
            t21036 = t21034 ** 2
            t21037 = t21033 * t21036
            t21042 = t21037 ** 2
            t21040 = t21036 ** 2
            t21035 = t21033 * t21034
            t21038 = t21035 ** 2
            tfunc[..., c] = -0.435e3 / 0.8192e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t21044 ** 2 * (155 * t21034 - 285 * t21035 + 210 * t21036 + 210 * t21037 - 714 * t21038 - 615 * t21040 - 65 * t21042 + 5 + (870 * t21038 + 265 * t21040 + 7 * t21042 - 43) * t21033) * np.sin((13 * phi1 - 10 * phi2)) * ((1 - t21033) ** (-0.1e1 / 0.2e1)) * ((1 + t21033) ** (-0.1e1 / 0.2e1))

        if Bindx == 2307:
            t21047 = np.cos(phi)
            t21048 = t21047 ** 2
            t21049 = t21047 * t21048
            t21052 = t21049 ** 2
            t21058 = t21052 ** 2
            t21050 = t21048 ** 2
            t21051 = t21047 * t21050
            t21056 = t21051 ** 2
            t21054 = t21050 ** 2
            t21053 = t21047 * t21052
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.195e3) * (-180 * t21048 + 118 * t21049 + 429 * t21050 - 1067 * t21051 + 726 * t21052 - 1551 * t21054 + 176 * t21056 + 395 * t21058 - 9 + (660 + 14 * t21053) * t21053 + (957 * t21054 - 618 * t21056 - 117 * t21058 + 67) * t21047) * np.cos((13 * phi1 - 9 * phi2))

        if Bindx == 2308:
            t21073 = np.sin(phi)
            t21070 = t21073 ** 2
            t21071 = t21073 * t21070
            t21061 = np.cos(phi)
            t21062 = t21061 ** 2
            t21064 = t21062 ** 2
            t21068 = t21064 ** 2
            t21063 = t21061 * t21062
            t21066 = t21063 ** 2
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * t21071 ** 2 * (56 * t21062 - 28 * t21063 - 112 * t21064 - 280 * t21066 - 52 * t21068 + 4 + (266 * t21064 + 164 * t21066 + 7 * t21068 - 25) * t21061) * np.sin((13 * phi1 - 8 * phi2)) * ((1 - t21061) ** (-0.1e1 / 0.2e1)) * ((1 + t21061) ** (-0.1e1 / 0.2e1))

        if Bindx == 2309:
            t21074 = np.cos(phi)
            t21075 = t21074 ** 2
            t21076 = t21074 * t21075
            t21079 = t21076 ** 2
            t21085 = t21079 ** 2
            t21077 = t21075 ** 2
            t21078 = t21074 * t21077
            t21083 = t21078 ** 2
            t21081 = t21077 ** 2
            t21080 = t21074 * t21079
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.115115e6) * (4 * t21075 + 22 * t21076 - 53 * t21077 + 13 * t21078 + 90 * t21079 - 9 * t21081 - 64 * t21083 + 29 * t21085 + 1 + (-108 + 2 * t21080) * t21080 + (101 * t21081 - 10 * t21083 - 13 * t21085 - 5) * t21074) * np.cos((13 * phi1 - 7 * phi2))

        if Bindx == 2310:
            t21098 = np.sin(phi)
            t21095 = t21098 ** 2
            t21096 = t21095 ** 2
            t21088 = np.cos(phi)
            t21089 = t21088 ** 2
            t21090 = t21088 * t21089
            t21093 = t21090 ** 2
            t21091 = t21089 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.49335e5) * t21096 ** 2 * (3 * t21089 + 45 * t21090 - 95 * t21091 - 39 * t21093 + 3 + (87 * t21091 + 7 * t21093 - 11) * t21088) * np.sin((13 * phi1 - 6 * phi2)) * ((1 - t21088) ** (-0.1e1 / 0.2e1)) * ((1 + t21088) ** (-0.1e1 / 0.2e1))

        if Bindx == 2311:
            t21099 = np.cos(phi)
            t21100 = t21099 ** 2
            t21101 = t21099 * t21100
            t21104 = t21101 ** 2
            t21110 = t21104 ** 2
            t21102 = t21100 ** 2
            t21103 = t21099 * t21102
            t21108 = t21103 ** 2
            t21106 = t21102 ** 2
            t21105 = t21099 * t21104
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (40 * t21100 - 134 * t21101 + 5 * t21102 + 361 * t21103 - 306 * t21104 + 549 * t21106 - 356 * t21108 + 59 * t21110 - 5 + (-324 + 14 * t21105) * t21105 + (-19 * t21106 + 170 * t21108 - 65 * t21110 + 11) * t21099) * np.cos((13 * phi1 - 5 * phi2))

        if Bindx == 2312:
            t21122 = np.sin(phi)
            t21118 = t21122 ** 2
            t21120 = t21122 * t21118 ** 2
            t21113 = np.cos(phi)
            t21114 = t21113 ** 2
            t21116 = t21114 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.937365e6) * t21120 ** 2 * (-16 * t21114 - 26 * t21116 + 2 + (34 * t21114 + 7 * t21116 - 1) * t21113) * np.sin((13 * phi1 - 4 * phi2)) * ((1 - t21113) ** (-0.1e1 / 0.2e1)) * ((1 + t21113) ** (-0.1e1 / 0.2e1))

        if Bindx == 2313:
            t21123 = np.cos(phi)
            t21124 = t21123 ** 2
            t21125 = t21123 * t21124
            t21128 = t21125 ** 2
            t21134 = t21128 ** 2
            t21126 = t21124 ** 2
            t21127 = t21123 * t21126
            t21132 = t21127 ** 2
            t21130 = t21126 ** 2
            t21129 = t21123 * t21128
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-48 * t21124 + 14 * t21125 + 181 * t21126 - 145 * t21127 - 290 * t21128 + 205 * t21130 - 28 * t21132 - 37 * t21134 + 3 + (340 + 14 * t21129) * t21129 + (-365 * t21130 + 190 * t21132 - 39 * t21134 + 5) * t21123) * np.cos((13 * phi1 - 3 * phi2))

        if Bindx == 2314:
            t21144 = np.sin(phi)
            t21140 = t21144 ** 2
            t21141 = t21144 * t21140
            t21142 = t21141 ** 2
            t21137 = np.cos(phi)
            t21138 = t21137 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t21142 ** 2 * (-13 * t21138 + 1 + (7 * t21138 + 5) * t21137) * np.sin((13 * phi1 - 2 * phi2)) * ((1 - t21137) ** (-0.1e1 / 0.2e1)) * ((1 + t21137) ** (-0.1e1 / 0.2e1))

        if Bindx == 2315:
            t21145 = np.cos(phi)
            t21159 = -13 * t21145
            t21146 = t21145 ** 2
            t21148 = t21146 ** 2
            t21149 = t21145 * t21148
            t21154 = t21149 ** 2
            t21152 = t21148 ** 2
            t21147 = t21145 * t21146
            t21150 = t21147 ** 2
            t21151 = t21145 * t21150
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (20 * t21146 + 78 * t21147 - 99 * t21148 - 195 * t21149 - 295 * t21152 + 216 * t21154 + t21159 - 1 + (260 + 14 * t21151) * t21151 + (-195 * t21152 + 78 * t21154) * t21145 + (230 + (t21159 - 85) * t21150) * t21150) * np.cos((13 * phi1 - phi2))

        if Bindx == 2316:
            t21166 = np.sin(phi)
            t21161 = t21166 ** 2
            t21162 = t21166 * t21161
            t21164 = t21166 * t21162 ** 2
            t21160 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t21160 * t21164 ** 2 * np.sin((13 * phi1)) * ((1 - t21160) ** (-0.1e1 / 0.2e1)) * ((1 + t21160) ** (-0.1e1 / 0.2e1))

        if Bindx == 2317:
            t21167 = np.cos(phi)
            t21181 = 13 * t21167
            t21168 = t21167 ** 2
            t21170 = t21168 ** 2
            t21171 = t21167 * t21170
            t21176 = t21171 ** 2
            t21174 = t21170 ** 2
            t21169 = t21167 * t21168
            t21172 = t21169 ** 2
            t21173 = t21167 * t21172
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (20 * t21168 - 78 * t21169 - 99 * t21170 + 195 * t21171 - 295 * t21174 + 216 * t21176 + t21181 - 1 + (-260 + 14 * t21173) * t21173 + (195 * t21174 - 78 * t21176) * t21167 + (230 + (t21181 - 85) * t21172) * t21172) * np.cos((13 * phi1 + phi2))

        if Bindx == 2318:
            t21189 = np.sin(phi)
            t21185 = t21189 ** 2
            t21186 = t21189 * t21185
            t21187 = t21186 ** 2
            t21182 = np.cos(phi)
            t21183 = t21182 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t21187 ** 2 * (13 * t21183 - 1 + (7 * t21183 + 5) * t21182) * np.sin((13 * phi1 + 2 * phi2)) * ((1 - t21182) ** (-0.1e1 / 0.2e1)) * ((1 + t21182) ** (-0.1e1 / 0.2e1))

        if Bindx == 2319:
            t21190 = np.cos(phi)
            t21191 = t21190 ** 2
            t21192 = t21190 * t21191
            t21195 = t21192 ** 2
            t21201 = t21195 ** 2
            t21193 = t21191 ** 2
            t21194 = t21190 * t21193
            t21199 = t21194 ** 2
            t21197 = t21193 ** 2
            t21196 = t21190 * t21195
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-48 * t21191 - 14 * t21192 + 181 * t21193 + 145 * t21194 - 290 * t21195 + 205 * t21197 - 28 * t21199 - 37 * t21201 + 3 + (-340 + 14 * t21196) * t21196 + (365 * t21197 - 190 * t21199 + 39 * t21201 - 5) * t21190) * np.cos((13 * phi1 + 3 * phi2))

        if Bindx == 2320:
            t21213 = np.sin(phi)
            t21209 = t21213 ** 2
            t21211 = t21213 * t21209 ** 2
            t21204 = np.cos(phi)
            t21205 = t21204 ** 2
            t21207 = t21205 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.937365e6) * t21211 ** 2 * (16 * t21205 + 26 * t21207 - 2 + (34 * t21205 + 7 * t21207 - 1) * t21204) * np.sin((13 * phi1 + 4 * phi2)) * ((1 - t21204) ** (-0.1e1 / 0.2e1)) * ((1 + t21204) ** (-0.1e1 / 0.2e1))

        if Bindx == 2321:
            t21214 = np.cos(phi)
            t21215 = t21214 ** 2
            t21216 = t21214 * t21215
            t21219 = t21216 ** 2
            t21225 = t21219 ** 2
            t21217 = t21215 ** 2
            t21218 = t21214 * t21217
            t21223 = t21218 ** 2
            t21221 = t21217 ** 2
            t21220 = t21214 * t21219
            tfunc[..., c] = 0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (40 * t21215 + 134 * t21216 + 5 * t21217 - 361 * t21218 - 306 * t21219 + 549 * t21221 - 356 * t21223 + 59 * t21225 - 5 + (324 + 14 * t21220) * t21220 + (19 * t21221 - 170 * t21223 + 65 * t21225 - 11) * t21214) * np.cos((13 * phi1 + 5 * phi2))

        if Bindx == 2322:
            t21238 = np.sin(phi)
            t21235 = t21238 ** 2
            t21236 = t21235 ** 2
            t21228 = np.cos(phi)
            t21229 = t21228 ** 2
            t21230 = t21228 * t21229
            t21233 = t21230 ** 2
            t21231 = t21229 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.49335e5) * t21236 ** 2 * (-3 * t21229 + 45 * t21230 + 95 * t21231 + 39 * t21233 - 3 + (87 * t21231 + 7 * t21233 - 11) * t21228) * np.sin((13 * phi1 + 6 * phi2)) * ((1 - t21228) ** (-0.1e1 / 0.2e1)) * ((1 + t21228) ** (-0.1e1 / 0.2e1))

        if Bindx == 2323:
            t21239 = np.cos(phi)
            t21240 = t21239 ** 2
            t21241 = t21239 * t21240
            t21244 = t21241 ** 2
            t21250 = t21244 ** 2
            t21242 = t21240 ** 2
            t21243 = t21239 * t21242
            t21248 = t21243 ** 2
            t21246 = t21242 ** 2
            t21245 = t21239 * t21244
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.115115e6) * (4 * t21240 - 22 * t21241 - 53 * t21242 - 13 * t21243 + 90 * t21244 - 9 * t21246 - 64 * t21248 + 29 * t21250 + 1 + (108 + 2 * t21245) * t21245 + (-101 * t21246 + 10 * t21248 + 13 * t21250 + 5) * t21239) * np.cos((13 * phi1 + 7 * phi2))

        if Bindx == 2324:
            t21265 = np.sin(phi)
            t21262 = t21265 ** 2
            t21263 = t21265 * t21262
            t21253 = np.cos(phi)
            t21254 = t21253 ** 2
            t21256 = t21254 ** 2
            t21260 = t21256 ** 2
            t21255 = t21253 * t21254
            t21258 = t21255 ** 2
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * t21263 ** 2 * (-56 * t21254 - 28 * t21255 + 112 * t21256 + 280 * t21258 + 52 * t21260 - 4 + (266 * t21256 + 164 * t21258 + 7 * t21260 - 25) * t21253) * np.sin((13 * phi1 + 8 * phi2)) * ((1 - t21253) ** (-0.1e1 / 0.2e1)) * ((1 + t21253) ** (-0.1e1 / 0.2e1))

        if Bindx == 2325:
            t21266 = np.cos(phi)
            t21267 = t21266 ** 2
            t21268 = t21266 * t21267
            t21271 = t21268 ** 2
            t21277 = t21271 ** 2
            t21269 = t21267 ** 2
            t21270 = t21266 * t21269
            t21275 = t21270 ** 2
            t21273 = t21269 ** 2
            t21272 = t21266 * t21271
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.195e3) * (-180 * t21267 - 118 * t21268 + 429 * t21269 + 1067 * t21270 + 726 * t21271 - 1551 * t21273 + 176 * t21275 + 395 * t21277 - 9 + (-660 + 14 * t21272) * t21272 + (-957 * t21273 + 618 * t21275 + 117 * t21277 - 67) * t21266) * np.cos((13 * phi1 + 9 * phi2))

        if Bindx == 2326:
            t21293 = np.sin(phi)
            t21291 = t21293 ** 2
            t21280 = np.cos(phi)
            t21281 = t21280 ** 2
            t21283 = t21281 ** 2
            t21284 = t21280 * t21283
            t21289 = t21284 ** 2
            t21287 = t21283 ** 2
            t21282 = t21280 * t21281
            t21285 = t21282 ** 2
            tfunc[..., c] = -0.435e3 / 0.8192e4 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t21291 ** 2 * (-155 * t21281 - 285 * t21282 - 210 * t21283 + 210 * t21284 + 714 * t21285 + 615 * t21287 + 65 * t21289 - 5 + (870 * t21285 + 265 * t21287 + 7 * t21289 - 43) * t21280) * np.sin((13 * phi1 + 10 * phi2)) * ((1 - t21280) ** (-0.1e1 / 0.2e1)) * ((1 + t21280) ** (-0.1e1 / 0.2e1))

        if Bindx == 2327:
            t21294 = np.cos(phi)
            t21295 = t21294 ** 2
            t21296 = t21294 * t21295
            t21299 = t21296 ** 2
            t21305 = t21299 ** 2
            t21297 = t21295 ** 2
            t21298 = t21294 * t21297
            t21303 = t21298 ** 2
            t21301 = t21297 ** 2
            t21300 = t21294 * t21299
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (440 * t21295 + 938 * t21296 + 869 * t21297 - 583 * t21298 - 2706 * t21299 - 1419 * t21301 + 2156 * t21303 + 635 * t21305 + 11 + (-3300 + 14 * t21300) * t21300 + (1133 * t21301 + 1562 * t21303 + 143 * t21305 + 107) * t21294) * np.cos((13 * phi1 + 11 * phi2))

        if Bindx == 2328:
            t21309 = np.cos(phi)
            t21310 = t21309 ** 2
            t21312 = t21310 ** 2
            t21313 = t21309 * t21312
            t21317 = t21313 ** 2
            t21318 = t21309 * t21317
            t21319 = t21309 * t21318
            t21315 = t21312 ** 2
            t21308 = np.sin(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.3e1) * t21308 ** 2 * (-1430 * t21312 - 1287 * t21313 + 2574 * t21315 + 1144 * t21317 + 390 * t21318 + 78 * t21319 - 6 + (1716 * t21313 - 312) * t21310 + (-858 * t21310 + 2145 * t21315 + 7 * t21319 - 65) * t21309) * np.sin((13 * phi1 + 12 * phi2)) * ((1 - t21309) ** (-0.1e1 / 0.2e1)) * ((1 + t21309) ** (-0.1e1 / 0.2e1))

        if Bindx == 2329:
            t21321 = np.cos(phi)
            t21322 = t21321 ** 2
            t21323 = t21321 * t21322
            t21326 = t21323 ** 2
            t21332 = t21326 ** 2
            t21324 = t21322 ** 2
            t21325 = t21321 * t21324
            t21330 = t21325 ** 2
            t21328 = t21324 ** 2
            t21327 = t21321 * t21326
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * (-832 * t21322 - 2626 * t21323 - 5291 * t21324 - 6721 * t21325 - 4290 * t21326 + 7293 * t21328 + 6292 * t21330 + 923 * t21332 - 13 + (1716 + 14 * t21327) * t21327 + (8723 * t21328 + 2990 * t21330 + 169 * t21332 - 155) * t21321) * np.cos((13 * phi1 + 13 * phi2))

        if Bindx == 2330:
            t21335 = np.cos(phi)
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * np.sqrt((1 - t21335)) * ((1 + t21335) ** (0.27e2 / 0.2e1)) * np.sin((13 * phi1 + 14 * phi2))

        if Bindx == 2331:
            t21336 = np.cos(phi)
            t21350 = -14 * t21336
            t21337 = t21336 ** 2
            t21339 = t21337 ** 2
            t21340 = t21336 * t21339
            t21345 = t21340 ** 2
            t21343 = t21339 ** 2
            t21338 = t21336 * t21337
            t21341 = t21338 ** 2
            t21342 = t21336 * t21341
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.cos((14 * phi1 - 14 * phi2)) * (91 * t21337 - 364 * t21338 + 1001 * t21339 - 2002 * t21340 + 3003 * t21343 + 1001 * t21345 + t21350 + 1 + (-3432 + t21342) * t21342 + (-2002 * t21343 - 364 * t21345) * t21336 + (3003 + (t21350 + 91) * t21341) * t21341)

        if Bindx == 2332:
            t21351 = np.cos(phi)
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t21351) ** (0.27e2 / 0.2e1)) * np.sqrt((1 + t21351)) * np.sin((14 * phi1 - 13 * phi2))

        if Bindx == 2333:
            t21352 = np.cos(phi)
            t21353 = t21352 ** 2
            t21354 = t21352 * t21353
            t21357 = t21354 ** 2
            t21362 = t21357 ** 2
            t21363 = t21352 * t21362
            t21355 = t21353 ** 2
            t21356 = t21352 * t21355
            t21360 = t21356 ** 2
            t21358 = t21355 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.21e2) * (-65 * t21353 + 208 * t21354 - 429 * t21355 + 572 * t21356 - 429 * t21357 + 429 * t21358 + 429 * t21360 + 65 * t21362 - 12 * t21363 - 1 + (-572 * t21358 - 208 * t21360 + t21363 + 12) * t21352) * np.cos((14 * phi1 - 12 * phi2))

        if Bindx == 2334:
            t21365 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t21365) ** (0.25e2 / 0.2e1)) * ((1 + t21365) ** (0.3e1 / 0.2e1)) * np.sin((14 * phi1 - 11 * phi2))

        if Bindx == 2335:
            t21366 = np.cos(phi)
            t21380 = -10 * t21366
            t21367 = t21366 ** 2
            t21369 = t21367 ** 2
            t21370 = t21366 * t21369
            t21375 = t21370 ** 2
            t21373 = t21369 ** 2
            t21368 = t21366 * t21367
            t21371 = t21368 ** 2
            t21372 = t21366 * t21371
            tfunc[..., c] = 0.435e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * np.cos((14 * phi1 - 10 * phi2)) * (43 * t21367 - 100 * t21368 + 121 * t21369 - 22 * t21370 - 165 * t21373 + 121 * t21375 + t21380 + 1 + (264 + t21372) * t21372 + (-22 * t21373 - 100 * t21375) * t21366 + (-165 + (t21380 + 43) * t21371) * t21371)

        if Bindx == 2336:
            t21381 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.1365e4) * ((1 - t21381) ** (0.23e2 / 0.2e1)) * ((1 + t21381) ** (0.5e1 / 0.2e1)) * np.sin((14 * phi1 - 9 * phi2))

        if Bindx == 2337:
            t21382 = np.cos(phi)
            t21383 = t21382 ** 2
            t21384 = t21382 * t21383
            t21387 = t21384 ** 2
            t21392 = t21387 ** 2
            t21393 = t21382 * t21392
            t21385 = t21383 ** 2
            t21386 = t21382 * t21385
            t21390 = t21386 ** 2
            t21388 = t21385 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * np.cos((14 * phi1 - 8 * phi2)) * (-25 * t21383 + 32 * t21384 + 11 * t21385 - 88 * t21386 + 99 * t21387 - 99 * t21388 - 11 * t21390 + 25 * t21392 - 8 * t21393 - 1 + (88 * t21388 - 32 * t21390 + t21393 + 8) * t21382)

        if Bindx == 2338:
            t21395 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.16445e5) * ((1 - t21395) ** (0.21e2 / 0.2e1)) * ((1 + t21395) ** (0.7e1 / 0.2e1)) * np.sin((14 * phi1 - 7 * phi2))

        if Bindx == 2339:
            t21396 = np.cos(phi)
            t21410 = -6 * t21396
            t21397 = t21396 ** 2
            t21399 = t21397 ** 2
            t21400 = t21396 * t21399
            t21405 = t21400 ** 2
            t21403 = t21399 ** 2
            t21398 = t21396 * t21397
            t21401 = t21398 ** 2
            t21402 = t21396 * t21401
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * np.cos((14 * phi1 - 6 * phi2)) * (11 * t21397 + 4 * t21398 - 39 * t21399 + 38 * t21400 + 27 * t21403 - 39 * t21405 + t21410 + 1 + (-72 + t21402) * t21402 + (38 * t21403 + 4 * t21405) * t21396 + (27 + (t21410 + 11) * t21401) * t21401)

        if Bindx == 2340:
            t21411 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * ((1 - t21411) ** (0.19e2 / 0.2e1)) * ((1 + t21411) ** (0.9e1 / 0.2e1)) * np.sin((14 * phi1 - 5 * phi2))

        if Bindx == 2341:
            t21412 = np.cos(phi)
            t21413 = t21412 ** 2
            t21414 = t21412 * t21413
            t21417 = t21414 ** 2
            t21422 = t21417 ** 2
            t21423 = t21412 * t21422
            t21415 = t21413 ** 2
            t21416 = t21412 * t21415
            t21420 = t21416 ** 2
            t21418 = t21415 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.6561555e7) * np.cos((14 * phi1 - 4 * phi2)) * (-t21413 - 16 * t21414 + 19 * t21415 + 20 * t21416 - 45 * t21417 + 45 * t21418 - 19 * t21420 + t21422 - 4 * t21423 - 1 + (-20 * t21418 + 16 * t21420 + t21423 + 4) * t21412)

        if Bindx == 2342:
            t21425 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.596505e6) * ((1 - t21425) ** (0.17e2 / 0.2e1)) * ((1 + t21425) ** (0.11e2 / 0.2e1)) * np.sin((14 * phi1 - 3 * phi2))

        if Bindx == 2343:
            t21426 = np.cos(phi)
            t21440 = -2 * t21426
            t21427 = t21426 ** 2
            t21429 = t21427 ** 2
            t21430 = t21426 * t21429
            t21435 = t21430 ** 2
            t21433 = t21429 ** 2
            t21428 = t21426 * t21427
            t21431 = t21428 ** 2
            t21432 = t21426 * t21431
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * np.cos((14 * phi1 - 2 * phi2)) * (-5 * t21427 + 12 * t21428 + 9 * t21429 - 30 * t21430 - 5 * t21433 + 9 * t21435 + t21440 + 1 + (40 + t21432) * t21432 + (-30 * t21433 + 12 * t21435) * t21426 + (-5 + (t21440 - 5) * t21431) * t21431)

        if Bindx == 2344:
            t21441 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * ((1 - t21441) ** (0.15e2 / 0.2e1)) * ((1 + t21441) ** (0.13e2 / 0.2e1)) * np.sin((14 * phi1 - phi2))

        if Bindx == 2345:
            t21442 = np.cos(phi)
            t21443 = t21442 ** 2
            t21444 = t21443 ** 2
            t21445 = t21443 * t21444
            t21448 = t21445 ** 2
            t21446 = t21444 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t21444 + 35 * t21445 - 35 * t21446 - 7 * t21448 - 1 + (21 * t21446 + t21448 + 7) * t21443)

        if Bindx == 2346:
            t21450 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * ((1 - t21450) ** (0.13e2 / 0.2e1)) * ((1 + t21450) ** (0.15e2 / 0.2e1)) * np.sin((14 * phi1 + phi2))

        if Bindx == 2347:
            t21451 = np.cos(phi)
            t21465 = 2 * t21451
            t21452 = t21451 ** 2
            t21454 = t21452 ** 2
            t21455 = t21451 * t21454
            t21460 = t21455 ** 2
            t21458 = t21454 ** 2
            t21453 = t21451 * t21452
            t21456 = t21453 ** 2
            t21457 = t21451 * t21456
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * np.cos((14 * phi1 + 2 * phi2)) * (-5 * t21452 - 12 * t21453 + 9 * t21454 + 30 * t21455 - 5 * t21458 + 9 * t21460 + t21465 + 1 + (-40 + t21457) * t21457 + (30 * t21458 - 12 * t21460) * t21451 + (-5 + (t21465 - 5) * t21456) * t21456)

        if Bindx == 2348:
            t21466 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.596505e6) * ((1 - t21466) ** (0.11e2 / 0.2e1)) * ((1 + t21466) ** (0.17e2 / 0.2e1)) * np.sin((14 * phi1 + 3 * phi2))

        if Bindx == 2349:
            t21467 = np.cos(phi)
            t21468 = t21467 ** 2
            t21469 = t21467 * t21468
            t21472 = t21469 ** 2
            t21477 = t21472 ** 2
            t21478 = t21467 * t21477
            t21470 = t21468 ** 2
            t21471 = t21467 * t21470
            t21475 = t21471 ** 2
            t21473 = t21470 ** 2
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.6561555e7) * np.cos((14 * phi1 + 4 * phi2)) * (-t21468 + 16 * t21469 + 19 * t21470 - 20 * t21471 - 45 * t21472 + 45 * t21473 - 19 * t21475 + t21477 + 4 * t21478 - 1 + (20 * t21473 - 16 * t21475 + t21478 - 4) * t21467)

        if Bindx == 2350:
            t21480 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * ((1 - t21480) ** (0.9e1 / 0.2e1)) * ((1 + t21480) ** (0.19e2 / 0.2e1)) * np.sin((14 * phi1 + 5 * phi2))

        if Bindx == 2351:
            t21481 = np.cos(phi)
            t21495 = 6 * t21481
            t21482 = t21481 ** 2
            t21484 = t21482 ** 2
            t21485 = t21481 * t21484
            t21490 = t21485 ** 2
            t21488 = t21484 ** 2
            t21483 = t21481 * t21482
            t21486 = t21483 ** 2
            t21487 = t21481 * t21486
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * np.cos((14 * phi1 + 6 * phi2)) * (11 * t21482 - 4 * t21483 - 39 * t21484 - 38 * t21485 + 27 * t21488 - 39 * t21490 + t21495 + 1 + (72 + t21487) * t21487 + (-38 * t21488 - 4 * t21490) * t21481 + (27 + (t21495 + 11) * t21486) * t21486)

        if Bindx == 2352:
            t21496 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.16445e5) * ((1 - t21496) ** (0.7e1 / 0.2e1)) * ((1 + t21496) ** (0.21e2 / 0.2e1)) * np.sin((14 * phi1 + 7 * phi2))

        if Bindx == 2353:
            t21497 = np.cos(phi)
            t21498 = t21497 ** 2
            t21499 = t21497 * t21498
            t21502 = t21499 ** 2
            t21507 = t21502 ** 2
            t21508 = t21497 * t21507
            t21500 = t21498 ** 2
            t21501 = t21497 * t21500
            t21505 = t21501 ** 2
            t21503 = t21500 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * np.cos((14 * phi1 + 8 * phi2)) * (-25 * t21498 - 32 * t21499 + 11 * t21500 + 88 * t21501 + 99 * t21502 - 99 * t21503 - 11 * t21505 + 25 * t21507 + 8 * t21508 - 1 + (-88 * t21503 + 32 * t21505 + t21508 - 8) * t21497)

        if Bindx == 2354:
            t21510 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.4096e4 * np.sqrt(0.1365e4) * ((1 - t21510) ** (0.5e1 / 0.2e1)) * ((1 + t21510) ** (0.23e2 / 0.2e1)) * np.sin((14 * phi1 + 9 * phi2))

        if Bindx == 2355:
            t21511 = np.cos(phi)
            t21525 = 10 * t21511
            t21512 = t21511 ** 2
            t21514 = t21512 ** 2
            t21515 = t21511 * t21514
            t21520 = t21515 ** 2
            t21518 = t21514 ** 2
            t21513 = t21511 * t21512
            t21516 = t21513 ** 2
            t21517 = t21511 * t21516
            tfunc[..., c] = 0.435e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * np.cos((14 * phi1 + 10 * phi2)) * (43 * t21512 + 100 * t21513 + 121 * t21514 + 22 * t21515 - 165 * t21518 + 121 * t21520 + t21525 + 1 + (-264 + t21517) * t21517 + (22 * t21518 + 100 * t21520) * t21511 + (-165 + (t21525 + 43) * t21516) * t21516)

        if Bindx == 2356:
            t21526 = np.cos(phi)
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t21526) ** (0.3e1 / 0.2e1)) * ((1 + t21526) ** (0.25e2 / 0.2e1)) * np.sin((14 * phi1 + 11 * phi2))

        if Bindx == 2357:
            t21527 = np.cos(phi)
            t21528 = t21527 ** 2
            t21529 = t21527 * t21528
            t21532 = t21529 ** 2
            t21537 = t21532 ** 2
            t21538 = t21527 * t21537
            t21530 = t21528 ** 2
            t21531 = t21527 * t21530
            t21535 = t21531 ** 2
            t21533 = t21530 ** 2
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.21e2) * (-65 * t21528 - 208 * t21529 - 429 * t21530 - 572 * t21531 - 429 * t21532 + 429 * t21533 + 429 * t21535 + 65 * t21537 + 12 * t21538 - 1 + (572 * t21533 + 208 * t21535 + t21538 - 12) * t21527) * np.cos((14 * phi1 + 12 * phi2))

        if Bindx == 2358:
            t21540 = np.cos(phi)
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 + t21540) ** (0.27e2 / 0.2e1)) * np.sin((14 * phi1 + 13 * phi2)) * np.sqrt((1 - t21540))

        if Bindx == 2359:
            t21541 = np.cos(phi)
            t21555 = 14 * t21541
            t21542 = t21541 ** 2
            t21544 = t21542 ** 2
            t21545 = t21541 * t21544
            t21550 = t21545 ** 2
            t21548 = t21544 ** 2
            t21543 = t21541 * t21542
            t21546 = t21543 ** 2
            t21547 = t21541 * t21546
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.2e1) * np.cos((14 * phi1 + 14 * phi2)) * (91 * t21542 + 364 * t21543 + 1001 * t21544 + 2002 * t21545 + 3003 * t21548 + 1001 * t21550 + t21555 + 1 + (3432 + t21547) * t21547 + (2002 * t21548 + 364 * t21550) * t21541 + (3003 + (t21555 + 91) * t21546) * t21546)

        if Bindx == 2360:
            t21556 = np.cos(phi)
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1077205e7) * ((1 - t21556) ** (0.15e2 / 0.2e1)) * ((1 + t21556) ** (0.15e2 / 0.2e1)) * np.sin((15 * phi2))

        if Bindx == 2361:
            t21557 = np.cos(phi)
            t21558 = t21557 ** 2
            t21559 = t21558 ** 2
            t21560 = t21558 * t21559
            t21563 = t21560 ** 2
            t21561 = t21559 ** 2
            tfunc[..., c] = -0.465e3 / 0.4096e4 * np.sqrt(0.646323e6) * t21557 * np.cos((14 * phi2)) * (-21 * t21559 + 35 * t21560 - 35 * t21561 - 7 * t21563 - 1 + (21 * t21561 + t21563 + 7) * t21558)

        if Bindx == 2362:
            t21571 = np.sin(phi)
            t21566 = t21571 ** 2
            t21567 = t21571 * t21566
            t21569 = t21571 * t21567 ** 2
            t21565 = np.cos(phi)
            tfunc[..., c] = 0.465e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.22287e5) * t21569 ** 2 * (29 * t21565 ** 2 - 1) * np.sin((13 * phi2)) * ((1 + t21565) ** (-0.1e1 / 0.2e1)) * ((1 - t21565) ** (-0.1e1 / 0.2e1))

        if Bindx == 2363:
            t21572 = np.cos(phi)
            t21573 = t21572 ** 2
            t21574 = t21573 ** 2
            t21575 = t21573 * t21574
            t21578 = t21575 ** 2
            t21576 = t21574 ** 2
            tfunc[..., c] = 0.465e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * t21572 * (-219 * t21574 + 495 * t21575 - 625 * t21576 - 177 * t21578 - 3 + (453 * t21576 + 29 * t21578 + 47) * t21573) * np.cos((12 * phi2))

        if Bindx == 2364:
            t21587 = np.sin(phi)
            t21583 = t21587 ** 2
            t21584 = t21587 * t21583
            t21585 = t21584 ** 2
            t21580 = np.cos(phi)
            t21581 = t21580 ** 2
            tfunc[..., c] = 0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * t21585 ** 2 * (1 + (-54 + 261 * t21581) * t21581) * np.sin((11 * phi2)) * ((1 + t21580) ** (-0.1e1 / 0.2e1)) * ((1 - t21580) ** (-0.1e1 / 0.2e1))

        if Bindx == 2365:
            t21588 = np.cos(phi)
            t21589 = t21588 ** 2
            t21590 = t21589 ** 2
            t21591 = t21589 * t21590
            t21594 = t21591 ** 2
            t21592 = t21590 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t21588 * np.sqrt(0.10140585e8) * (-761 * t21590 + 2255 * t21591 - 3535 * t21592 - 1395 * t21594 - 5 + (3065 * t21592 + 261 * t21594 + 115) * t21589) * np.cos((10 * phi2))

        if Bindx == 2366:
            t21604 = np.sin(phi)
            t21600 = t21604 ** 2
            t21602 = t21604 * t21600 ** 2
            t21596 = np.cos(phi)
            t21597 = t21596 ** 2
            t21598 = t21597 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t21602 ** 2 * (-675 * t21598 - 1 + (1305 * t21598 + 75) * t21597) * np.sin((9 * phi2)) * ((1 + t21596) ** (-0.1e1 / 0.2e1)) * ((1 - t21596) ** (-0.1e1 / 0.2e1))

        if Bindx == 2367:
            t21605 = np.cos(phi)
            t21606 = t21605 ** 2
            t21607 = t21606 ** 2
            t21608 = t21606 * t21607
            t21611 = t21608 ** 2
            t21609 = t21607 ** 2
            tfunc[..., c] = 0.31e2 / 0.2048e4 * t21605 * np.sqrt(0.1448655e7) * (-1687 * t21607 + 6163 * t21608 - 11597 * t21609 - 6165 * t21611 - 7 + (11785 * t21609 + 1305 * t21611 + 203) * t21606) * np.cos((8 * phi2))

        if Bindx == 2368:
            t21621 = np.sin(phi)
            t21618 = t21621 ** 2
            t21619 = t21618 ** 2
            t21613 = np.cos(phi)
            t21614 = t21613 ** 2
            t21615 = t21614 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62985e5) * t21619 ** 2 * (-644 * t21614 + 7 + (-28980 * t21614 + 8050 + 30015 * t21615) * t21615) * np.sin((7 * phi2)) * ((1 + t21613) ** (-0.1e1 / 0.2e1)) * ((1 - t21613) ** (-0.1e1 / 0.2e1))

        if Bindx == 2369:
            t21622 = np.cos(phi)
            t21623 = t21622 ** 2
            t21624 = t21623 ** 2
            t21625 = t21623 * t21624
            t21628 = t21625 ** 2
            t21626 = t21624 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t21622 * np.sqrt(0.692835e6) * (-6825 * t21624 + 28863 * t21625 - 62399 * t21626 - 42435 * t21628 - 21 + (72105 * t21626 + 10005 * t21628 + 707) * t21623) * np.cos((6 * phi2))

        if Bindx == 2370:
            t21639 = np.sin(phi)
            t21636 = t21639 ** 2
            t21637 = t21639 * t21636
            t21630 = np.cos(phi)
            t21631 = t21630 ** 2
            t21632 = t21631 ** 2
            t21634 = t21632 ** 2
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t21637 ** 2 * (-1610 * t21632 - 15525 * t21634 - 1 + (8050 * t21632 + 10005 * t21634 + 105) * t21631) * np.sin((5 * phi2)) * ((1 + t21630) ** (-0.1e1 / 0.2e1)) * ((1 - t21630) ** (-0.1e1 / 0.2e1))

        if Bindx == 2371:
            t21640 = np.cos(phi)
            t21641 = t21640 ** 2
            t21642 = t21641 ** 2
            t21643 = t21641 * t21642
            t21646 = t21643 ** 2
            t21644 = t21642 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.146965e6) * t21640 * (-4323 * t21642 + 20119 * t21643 - 47817 * t21644 - 38985 * t21646 - 11 + (60605 * t21644 + 10005 * t21646 + 407) * t21641) * np.cos((4 * phi2))

        if Bindx == 2372:
            t21657 = np.sin(phi)
            t21655 = t21657 ** 2
            t21648 = np.cos(phi)
            t21649 = t21648 ** 2
            t21650 = t21649 ** 2
            t21652 = t21650 ** 2
            t21651 = t21649 * t21650
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.23205e5) * t21655 ** 2 * (21945 * t21650 + 360525 * t21652 + 11 + (-134596 + 190095 * t21651) * t21651 + (-432630 * t21652 - 1254) * t21649) * np.sin((3 * phi2)) * ((1 + t21648) ** (-0.1e1 / 0.2e1)) * ((1 - t21648) ** (-0.1e1 / 0.2e1))

        if Bindx == 2373:
            t21658 = np.cos(phi)
            t21659 = t21658 ** 2
            t21660 = t21659 ** 2
            t21661 = t21659 * t21660
            t21664 = t21661 ** 2
            t21662 = t21660 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t21658 * np.sqrt(0.1785e4) * (-187473 * t21660 + 921063 * t21661 - 2312167 * t21662 - 2104155 * t21664 - 429 + (3096145 * t21662 + 570285 * t21664 + 16731) * t21659) * np.cos((2 * phi2))

        if Bindx == 2374:
            t21667 = np.cos(phi)
            t21668 = t21667 ** 2
            t21669 = t21668 ** 2
            t21670 = t21668 * t21669
            t21673 = t21670 ** 2
            t21671 = t21669 ** 2
            t21666 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t21666 ** 2 * (-969969 * t21669 + 6789783 * t21670 - 22309287 * t21671 - 30421755 * t21673 - 429 + (37182145 * t21671 + 9694845 * t21673 + 51051) * t21668) * np.sin(phi2) * ((1 + t21667) ** (-0.1e1 / 0.2e1)) * ((1 - t21667) ** (-0.1e1 / 0.2e1))

        if Bindx == 2375:
            t21675 = np.cos(phi)
            t21676 = t21675 ** 2
            t21677 = t21676 ** 2
            t21678 = t21676 * t21677
            t21681 = t21678 ** 2
            t21679 = t21677 ** 2
            tfunc[..., c] = 0.31e2 / 0.2048e4 * t21675 * (-2909907 * t21677 + 14549535 * t21678 - 37182145 * t21679 - 35102025 * t21681 - 6435 + (50702925 * t21679 + 9694845 * t21681 + 255255) * t21676)

        if Bindx == 2376:
            t21684 = np.cos(phi)
            t21685 = t21684 ** 2
            t21686 = t21685 ** 2
            t21687 = t21685 * t21686
            t21690 = t21687 ** 2
            t21688 = t21686 ** 2
            t21683 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t21683 ** 2 * (-969969 * t21686 + 6789783 * t21687 - 22309287 * t21688 - 30421755 * t21690 - 429 + (37182145 * t21688 + 9694845 * t21690 + 51051) * t21685) * np.sin(phi2) * ((1 + t21684) ** (-0.1e1 / 0.2e1)) * ((1 - t21684) ** (-0.1e1 / 0.2e1))

        if Bindx == 2377:
            t21692 = np.cos(phi)
            t21693 = t21692 ** 2
            t21694 = t21693 ** 2
            t21695 = t21693 * t21694
            t21698 = t21695 ** 2
            t21696 = t21694 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t21692 * np.sqrt(0.1785e4) * (-187473 * t21694 + 921063 * t21695 - 2312167 * t21696 - 2104155 * t21698 - 429 + (3096145 * t21696 + 570285 * t21698 + 16731) * t21693) * np.cos((2 * phi2))

        if Bindx == 2378:
            t21709 = np.sin(phi)
            t21707 = t21709 ** 2
            t21700 = np.cos(phi)
            t21701 = t21700 ** 2
            t21702 = t21701 ** 2
            t21704 = t21702 ** 2
            t21703 = t21701 * t21702
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.23205e5) * t21707 ** 2 * (21945 * t21702 + 360525 * t21704 + 11 + (-134596 + 190095 * t21703) * t21703 + (-432630 * t21704 - 1254) * t21701) * np.sin((3 * phi2)) * ((1 + t21700) ** (-0.1e1 / 0.2e1)) * ((1 - t21700) ** (-0.1e1 / 0.2e1))

        if Bindx == 2379:
            t21710 = np.cos(phi)
            t21711 = t21710 ** 2
            t21712 = t21711 ** 2
            t21713 = t21711 * t21712
            t21716 = t21713 ** 2
            t21714 = t21712 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.146965e6) * t21710 * (-4323 * t21712 + 20119 * t21713 - 47817 * t21714 - 38985 * t21716 - 11 + (60605 * t21714 + 10005 * t21716 + 407) * t21711) * np.cos((4 * phi2))

        if Bindx == 2380:
            t21727 = np.sin(phi)
            t21724 = t21727 ** 2
            t21725 = t21727 * t21724
            t21718 = np.cos(phi)
            t21719 = t21718 ** 2
            t21720 = t21719 ** 2
            t21722 = t21720 ** 2
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t21725 ** 2 * (-1610 * t21720 - 15525 * t21722 - 1 + (8050 * t21720 + 10005 * t21722 + 105) * t21719) * np.sin((5 * phi2)) * ((1 + t21718) ** (-0.1e1 / 0.2e1)) * ((1 - t21718) ** (-0.1e1 / 0.2e1))

        if Bindx == 2381:
            t21728 = np.cos(phi)
            t21729 = t21728 ** 2
            t21730 = t21729 ** 2
            t21731 = t21729 * t21730
            t21734 = t21731 ** 2
            t21732 = t21730 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t21728 * np.sqrt(0.692835e6) * (-6825 * t21730 + 28863 * t21731 - 62399 * t21732 - 42435 * t21734 - 21 + (72105 * t21732 + 10005 * t21734 + 707) * t21729) * np.cos((6 * phi2))

        if Bindx == 2382:
            t21744 = np.sin(phi)
            t21741 = t21744 ** 2
            t21742 = t21741 ** 2
            t21736 = np.cos(phi)
            t21737 = t21736 ** 2
            t21738 = t21737 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62985e5) * t21742 ** 2 * (-644 * t21737 + 7 + (-28980 * t21737 + 8050 + 30015 * t21738) * t21738) * np.sin((7 * phi2)) * ((1 + t21736) ** (-0.1e1 / 0.2e1)) * ((1 - t21736) ** (-0.1e1 / 0.2e1))

        if Bindx == 2383:
            t21745 = np.cos(phi)
            t21746 = t21745 ** 2
            t21747 = t21746 ** 2
            t21748 = t21746 * t21747
            t21751 = t21748 ** 2
            t21749 = t21747 ** 2
            tfunc[..., c] = 0.31e2 / 0.2048e4 * t21745 * np.sqrt(0.1448655e7) * (-1687 * t21747 + 6163 * t21748 - 11597 * t21749 - 6165 * t21751 - 7 + (11785 * t21749 + 1305 * t21751 + 203) * t21746) * np.cos((8 * phi2))

        if Bindx == 2384:
            t21761 = np.sin(phi)
            t21757 = t21761 ** 2
            t21759 = t21761 * t21757 ** 2
            t21753 = np.cos(phi)
            t21754 = t21753 ** 2
            t21755 = t21754 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t21759 ** 2 * (-675 * t21755 - 1 + (1305 * t21755 + 75) * t21754) * np.sin((9 * phi2)) * ((1 + t21753) ** (-0.1e1 / 0.2e1)) * ((1 - t21753) ** (-0.1e1 / 0.2e1))

        if Bindx == 2385:
            t21762 = np.cos(phi)
            t21763 = t21762 ** 2
            t21764 = t21763 ** 2
            t21765 = t21763 * t21764
            t21768 = t21765 ** 2
            t21766 = t21764 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t21762 * np.sqrt(0.10140585e8) * (-761 * t21764 + 2255 * t21765 - 3535 * t21766 - 1395 * t21768 - 5 + (3065 * t21766 + 261 * t21768 + 115) * t21763) * np.cos((10 * phi2))

        if Bindx == 2386:
            t21777 = np.sin(phi)
            t21773 = t21777 ** 2
            t21774 = t21777 * t21773
            t21775 = t21774 ** 2
            t21770 = np.cos(phi)
            t21771 = t21770 ** 2
            tfunc[..., c] = 0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * t21775 ** 2 * (1 + (-54 + 261 * t21771) * t21771) * np.sin((11 * phi2)) * ((1 + t21770) ** (-0.1e1 / 0.2e1)) * ((1 - t21770) ** (-0.1e1 / 0.2e1))

        if Bindx == 2387:
            t21778 = np.cos(phi)
            t21779 = t21778 ** 2
            t21780 = t21779 ** 2
            t21781 = t21779 * t21780
            t21784 = t21781 ** 2
            t21782 = t21780 ** 2
            tfunc[..., c] = 0.465e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * t21778 * (-219 * t21780 + 495 * t21781 - 625 * t21782 - 177 * t21784 - 3 + (453 * t21782 + 29 * t21784 + 47) * t21779) * np.cos((12 * phi2))

        if Bindx == 2388:
            t21792 = np.sin(phi)
            t21787 = t21792 ** 2
            t21788 = t21792 * t21787
            t21790 = t21792 * t21788 ** 2
            t21786 = np.cos(phi)
            tfunc[..., c] = 0.465e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.22287e5) * t21790 ** 2 * (29 * t21786 ** 2 - 1) * np.sin((13 * phi2)) * ((1 + t21786) ** (-0.1e1 / 0.2e1)) * ((1 - t21786) ** (-0.1e1 / 0.2e1))

        if Bindx == 2389:
            t21793 = np.cos(phi)
            t21794 = t21793 ** 2
            t21795 = t21794 ** 2
            t21796 = t21794 * t21795
            t21799 = t21796 ** 2
            t21797 = t21795 ** 2
            tfunc[..., c] = -0.465e3 / 0.4096e4 * np.sqrt(0.646323e6) * t21793 * np.cos((14 * phi2)) * (-21 * t21795 + 35 * t21796 - 35 * t21797 - 7 * t21799 - 1 + (21 * t21797 + t21799 + 7) * t21794)

        if Bindx == 2390:
            t21801 = np.cos(phi)
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1077205e7) * ((1 - t21801) ** (0.15e2 / 0.2e1)) * ((1 + t21801) ** (0.15e2 / 0.2e1)) * np.sin((15 * phi2))

        if Bindx == 2391:
            t21802 = np.cos(phi)
            t21803 = t21802 ** 2
            t21805 = t21803 ** 2
            t21806 = t21802 * t21805
            t21804 = t21802 * t21803
            t21807 = t21804 ** 2
            t21808 = t21802 * t21807
            t21817 = -35 * t21805 ** 2 + 21 * t21806 ** 2 - 7 * t21807 ** 2 + t21808 ** 2 - 1
            tfunc[..., c] = 0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.646323e6) * np.cos((phi1 - 15 * phi2)) * (t21802 * t21817 - 7 * t21803 + 7 * t21804 + 21 * t21805 - 21 * t21806 - 35 * t21807 + 35 * t21808 - t21817)

        if Bindx == 2392:
            t21824 = np.sin(phi)
            t21819 = t21824 ** 2
            t21820 = t21824 * t21819
            t21822 = t21824 * t21820 ** 2
            t21818 = np.cos(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.1077205e7) * t21822 ** 2 * (-1 + (-14 + 15 * t21818) * t21818) * np.sin((phi1 - 14 * phi2)) * ((1 + t21818) ** (-0.1e1 / 0.2e1)) * ((1 - t21818) ** (-0.1e1 / 0.2e1))

        if Bindx == 2393:
            t21825 = np.cos(phi)
            t21826 = t21825 ** 2
            t21827 = t21825 * t21826
            t21830 = t21827 ** 2
            t21831 = t21825 * t21830
            t21838 = t21831 ** 2
            t21836 = t21830 ** 2
            t21828 = t21826 ** 2
            t21829 = t21825 * t21828
            t21834 = t21829 ** 2
            t21832 = t21828 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (-455 * t21826 + 861 * t21827 + 2457 * t21828 - 3675 * t21829 - 5915 * t21830 + 7945 * t21831 + 7735 * t21832 - 5733 * t21834 + 2275 * t21836 - 377 * t21838 + 13 + (-9765 * t21832 + 6951 * t21834 - 2681 * t21836 + 435 * t21838 - 71) * t21825) * np.cos((phi1 - 13 * phi2))

        if Bindx == 2394:
            t21848 = np.sin(phi)
            t21844 = t21848 ** 2
            t21845 = t21848 * t21844
            t21846 = t21845 ** 2
            t21840 = np.cos(phi)
            t21841 = t21840 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.780045e6) * t21846 ** 2 * (12 * t21840 + 1 + (-116 * t21840 - 42 + 145 * t21841) * t21841) * np.sin((phi1 - 12 * phi2)) * ((1 + t21840) ** (-0.1e1 / 0.2e1)) * ((1 - t21840) ** (-0.1e1 / 0.2e1))

        if Bindx == 2395:
            t21849 = np.cos(phi)
            t21850 = t21849 ** 2
            t21851 = t21849 * t21850
            t21854 = t21851 ** 2
            t21855 = t21849 * t21854
            t21862 = t21855 ** 2
            t21860 = t21854 ** 2
            t21852 = t21850 ** 2
            t21853 = t21849 * t21852
            t21858 = t21853 ** 2
            t21856 = t21852 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * (-649 * t21850 + 2341 * t21851 + 5951 * t21852 - 13835 * t21853 - 20405 * t21854 + 38225 * t21855 + 34705 * t21856 - 31691 * t21858 + 14949 * t21860 - 2871 * t21862 + 11 + (-57205 * t21856 + 47999 * t21858 - 21321 * t21860 + 3915 * t21862 - 119) * t21849) * np.cos((phi1 - 11 * phi2))

        if Bindx == 2396:
            t21874 = np.sin(phi)
            t21870 = t21874 ** 2
            t21872 = t21874 * t21870 ** 2
            t21864 = np.cos(phi)
            t21865 = t21864 ** 2
            t21867 = t21865 ** 2
            t21866 = t21864 * t21865
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.676039e6) * t21872 ** 2 * (65 * t21865 - 495 * t21867 - 1 + (180 + 783 * t21866) * t21866 + (-522 * t21867 - 10) * t21864) * np.sin((phi1 - 10 * phi2)) * ((1 + t21864) ** (-0.1e1 / 0.2e1)) * ((1 - t21864) ** (-0.1e1 / 0.2e1))

        if Bindx == 2397:
            t21875 = np.cos(phi)
            t21876 = t21875 ** 2
            t21877 = t21875 * t21876
            t21880 = t21877 ** 2
            t21881 = t21875 * t21880
            t21888 = t21881 ** 2
            t21886 = t21880 ** 2
            t21878 = t21876 ** 2
            t21879 = t21875 * t21878
            t21884 = t21879 ** 2
            t21882 = t21878 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2028117e7) * (-237 * t21876 + 1387 * t21877 + 2943 * t21878 - 10553 * t21879 - 13377 * t21880 + 35927 * t21881 + 28713 * t21882 - 31815 * t21884 + 17685 * t21886 - 3915 * t21888 + 3 + (-64063 * t21882 + 62465 * t21884 - 31635 * t21886 + 6525 * t21888 - 53) * t21875) * np.cos((phi1 - 9 * phi2))

        if Bindx == 2398:
            t21901 = np.sin(phi)
            t21898 = t21901 ** 2
            t21899 = t21898 ** 2
            t21890 = np.cos(phi)
            t21891 = t21890 ** 2
            t21892 = t21890 * t21891
            t21895 = t21892 ** 2
            t21893 = t21891 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.96577e5) * t21899 ** 2 * (-588 * t21891 - 1400 * t21892 - 21420 * t21895 + 7 + (6650 + 19575 * t21893) * t21893 + (7560 * t21893 - 10440 * t21895 + 56) * t21890) * np.sin((phi1 - 8 * phi2)) * ((1 + t21890) ** (-0.1e1 / 0.2e1)) * ((1 - t21890) ** (-0.1e1 / 0.2e1))

        if Bindx == 2399:
            t21902 = np.cos(phi)
            t21903 = t21902 ** 2
            t21904 = t21902 * t21903
            t21907 = t21904 ** 2
            t21908 = t21902 * t21907
            t21915 = t21908 ** 2
            t21913 = t21907 ** 2
            t21905 = t21903 ** 2
            t21906 = t21902 * t21905
            t21911 = t21906 ** 2
            t21909 = t21905 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * (-4655 * t21903 + 42007 * t21904 + 70021 * t21905 - 380429 * t21906 - 385483 * t21907 + 1519475 * t21908 + 992243 * t21909 - 1295245 * t21911 + 833175 * t21913 - 210105 * t21915 + 49 + (-3126091 * t21909 + 3463685 * t21911 - 1967535 * t21913 + 450225 * t21915 - 1337) * t21902) * np.cos((phi1 - 7 * phi2))

        if Bindx == 2400:
            t21930 = np.sin(phi)
            t21927 = t21930 ** 2
            t21928 = t21930 * t21927
            t21917 = np.cos(phi)
            t21918 = t21917 ** 2
            t21920 = t21918 ** 2
            t21924 = t21920 ** 2
            t21919 = t21917 * t21918
            t21922 = t21919 ** 2
            t21921 = t21917 * t21920
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.46189e5) * t21928 ** 2 * (693 * t21918 + 1288 * t21919 - 9982 * t21920 + 46690 * t21922 - 83835 * t21924 - 7 + (-9660 + 50025 * t21921) * t21921 + (24840 * t21922 - 20010 * t21924 - 42) * t21917) * np.sin((phi1 - 6 * phi2)) * ((1 + t21917) ** (-0.1e1 / 0.2e1)) * ((1 - t21917) ** (-0.1e1 / 0.2e1))

        if Bindx == 2401:
            t21931 = np.cos(phi)
            t21932 = t21931 ** 2
            t21933 = t21931 * t21932
            t21936 = t21933 ** 2
            t21937 = t21931 * t21936
            t21944 = t21937 ** 2
            t21942 = t21936 ** 2
            t21934 = t21932 ** 2
            t21935 = t21931 * t21934
            t21940 = t21935 ** 2
            t21938 = t21934 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4849845e7) * (-107 * t21932 + 1521 * t21933 + 1821 * t21934 - 15471 * t21935 - 11375 * t21936 + 69101 * t21937 + 33235 * t21938 - 49105 * t21940 + 35535 * t21942 - 10005 * t21944 + 1 + (-158033 * t21938 + 193315 * t21940 - 120405 * t21942 + 30015 * t21944 - 43) * t21931) * np.cos((phi1 - 5 * phi2))

        if Bindx == 2402:
            t21960 = np.sin(phi)
            t21958 = t21960 ** 2
            t21946 = np.cos(phi)
            t21947 = t21946 ** 2
            t21949 = t21947 ** 2
            t21950 = t21946 * t21949
            t21955 = t21950 ** 2
            t21953 = t21949 ** 2
            t21948 = t21946 * t21947
            t21951 = t21948 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * t21958 ** 2 * (-1210 * t21947 - 1540 * t21948 + 20405 * t21949 + 14168 * t21950 + 309925 * t21953 - 356730 * t21955 + 11 + (-120428 + 150075 * t21951) * t21951 + (-50600 * t21951 + 75900 * t21953 - 40020 * t21955 + 44) * t21946) * np.sin((phi1 - 4 * phi2)) * ((1 + t21946) ** (-0.1e1 / 0.2e1)) * ((1 - t21946) ** (-0.1e1 / 0.2e1))

        if Bindx == 2403:
            t21961 = np.cos(phi)
            t21962 = t21961 ** 2
            t21963 = t21961 * t21962
            t21966 = t21963 ** 2
            t21967 = t21961 * t21966
            t21974 = t21967 ** 2
            t21972 = t21966 ** 2
            t21964 = t21962 ** 2
            t21965 = t21961 * t21964
            t21970 = t21965 ** 2
            t21968 = t21964 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1547e4) * (-1265 * t21962 + 32197 * t21963 + 23199 * t21964 - 351747 * t21965 - 156541 * t21966 + 1685585 * t21967 + 495121 * t21968 - 793155 * t21970 + 622725 * t21972 - 190095 * t21974 + 11 + (-4129213 * t21968 + 5399135 * t21970 - 3585585 * t21972 + 950475 * t21974 - 847) * t21961) * np.cos((phi1 - 3 * phi2))

        if Bindx == 2404:
            t21977 = np.cos(phi)
            t21978 = t21977 ** 2
            t21979 = t21977 * t21978
            t21982 = t21979 ** 2
            t21988 = t21982 ** 2
            t21980 = t21978 ** 2
            t21981 = t21977 * t21980
            t21986 = t21981 ** 2
            t21984 = t21980 ** 2
            t21983 = t21977 * t21982
            t21976 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.119e3) * t21976 ** 2 * (50193 * t21978 + 32604 * t21979 - 937365 * t21980 - 342342 * t21981 + 6447441 * t21982 - 20809503 * t21984 + 34057595 * t21986 - 27354015 * t21988 - 429 + (1499784 + 8554275 * t21983) * t21983 + (-3124550 * t21984 + 3067740 * t21986 - 1140570 * t21988 - 858) * t21977) * np.sin((phi1 - 2 * phi2)) * ((1 + t21977) ** (-0.1e1 / 0.2e1)) * ((1 - t21977) ** (-0.1e1 / 0.2e1))

        if Bindx == 2405:
            t21991 = np.cos(phi)
            t21992 = t21991 ** 2
            t21993 = t21991 * t21992
            t21996 = t21993 ** 2
            t21997 = t21991 * t21996
            t22004 = t21997 ** 2
            t22002 = t21996 ** 2
            t21994 = t21992 ** 2
            t21995 = t21991 * t21994
            t22000 = t21995 ** 2
            t21998 = t21994 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-51051 * t21992 + 4033029 * t21993 + 969969 * t21994 - 45588543 * t21995 - 6789783 * t21996 + 226002777 * t21997 + 22309287 * t21998 - 37182145 * t22000 + 30421755 * t22002 - 9694845 * t22004 + 429 + (-572605033 * t21998 + 774064655 * t22000 - 531210645 * t22002 + 145422675 * t22004 - 102531) * t21991) * np.cos(phi1 - phi2)

        if Bindx == 2406:
            t22007 = np.cos(phi)
            t22008 = t22007 ** 2
            t22009 = t22008 ** 2
            t22010 = t22008 * t22009
            t22013 = t22010 ** 2
            t22011 = t22009 ** 2
            t22006 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.15e2) * np.sqrt(0.2e1) * t22006 ** 2 * (-969969 * t22009 + 6789783 * t22010 - 22309287 * t22011 - 30421755 * t22013 - 429 + (37182145 * t22011 + 9694845 * t22013 + 51051) * t22008) * np.sin(phi1) * ((1 + t22007) ** (-0.1e1 / 0.2e1)) * ((1 - t22007) ** (-0.1e1 / 0.2e1))

        if Bindx == 2407:
            t22015 = np.cos(phi)
            t22016 = t22015 ** 2
            t22017 = t22015 * t22016
            t22020 = t22017 ** 2
            t22021 = t22015 * t22020
            t22028 = t22021 ** 2
            t22026 = t22020 ** 2
            t22018 = t22016 ** 2
            t22019 = t22015 * t22018
            t22024 = t22019 ** 2
            t22022 = t22018 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (51051 * t22016 + 4033029 * t22017 - 969969 * t22018 - 45588543 * t22019 + 6789783 * t22020 + 226002777 * t22021 - 22309287 * t22022 + 37182145 * t22024 - 30421755 * t22026 + 9694845 * t22028 - 429 + (-572605033 * t22022 + 774064655 * t22024 - 531210645 * t22026 + 145422675 * t22028 - 102531) * t22015) * np.cos(phi1 + phi2)

        if Bindx == 2408:
            t22031 = np.cos(phi)
            t22032 = t22031 ** 2
            t22033 = t22031 * t22032
            t22036 = t22033 ** 2
            t22042 = t22036 ** 2
            t22034 = t22032 ** 2
            t22035 = t22031 * t22034
            t22040 = t22035 ** 2
            t22038 = t22034 ** 2
            t22037 = t22031 * t22036
            t22030 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.119e3) * t22030 ** 2 * (50193 * t22032 - 32604 * t22033 - 937365 * t22034 + 342342 * t22035 + 6447441 * t22036 - 20809503 * t22038 + 34057595 * t22040 - 27354015 * t22042 - 429 + (-1499784 + 8554275 * t22037) * t22037 + (3124550 * t22038 - 3067740 * t22040 + 1140570 * t22042 + 858) * t22031) * np.sin((phi1 + 2 * phi2)) * ((1 + t22031) ** (-0.1e1 / 0.2e1)) * ((1 - t22031) ** (-0.1e1 / 0.2e1))

        if Bindx == 2409:
            t22045 = np.cos(phi)
            t22046 = t22045 ** 2
            t22047 = t22045 * t22046
            t22050 = t22047 ** 2
            t22051 = t22045 * t22050
            t22058 = t22051 ** 2
            t22056 = t22050 ** 2
            t22048 = t22046 ** 2
            t22049 = t22045 * t22048
            t22054 = t22049 ** 2
            t22052 = t22048 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1547e4) * (1265 * t22046 + 32197 * t22047 - 23199 * t22048 - 351747 * t22049 + 156541 * t22050 + 1685585 * t22051 - 495121 * t22052 + 793155 * t22054 - 622725 * t22056 + 190095 * t22058 - 11 + (-4129213 * t22052 + 5399135 * t22054 - 3585585 * t22056 + 950475 * t22058 - 847) * t22045) * np.cos((phi1 + 3 * phi2))

        if Bindx == 2410:
            t22074 = np.sin(phi)
            t22072 = t22074 ** 2
            t22060 = np.cos(phi)
            t22061 = t22060 ** 2
            t22063 = t22061 ** 2
            t22064 = t22060 * t22063
            t22069 = t22064 ** 2
            t22067 = t22063 ** 2
            t22062 = t22060 * t22061
            t22065 = t22062 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * t22072 ** 2 * (-1210 * t22061 + 1540 * t22062 + 20405 * t22063 - 14168 * t22064 + 309925 * t22067 - 356730 * t22069 + 11 + (-120428 + 150075 * t22065) * t22065 + (50600 * t22065 - 75900 * t22067 + 40020 * t22069 - 44) * t22060) * np.sin((phi1 + 4 * phi2)) * ((1 + t22060) ** (-0.1e1 / 0.2e1)) * ((1 - t22060) ** (-0.1e1 / 0.2e1))

        if Bindx == 2411:
            t22075 = np.cos(phi)
            t22076 = t22075 ** 2
            t22077 = t22075 * t22076
            t22080 = t22077 ** 2
            t22081 = t22075 * t22080
            t22088 = t22081 ** 2
            t22086 = t22080 ** 2
            t22078 = t22076 ** 2
            t22079 = t22075 * t22078
            t22084 = t22079 ** 2
            t22082 = t22078 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4849845e7) * (107 * t22076 + 1521 * t22077 - 1821 * t22078 - 15471 * t22079 + 11375 * t22080 + 69101 * t22081 - 33235 * t22082 + 49105 * t22084 - 35535 * t22086 + 10005 * t22088 - 1 + (-158033 * t22082 + 193315 * t22084 - 120405 * t22086 + 30015 * t22088 - 43) * t22075) * np.cos((phi1 + 5 * phi2))

        if Bindx == 2412:
            t22103 = np.sin(phi)
            t22100 = t22103 ** 2
            t22101 = t22103 * t22100
            t22090 = np.cos(phi)
            t22091 = t22090 ** 2
            t22093 = t22091 ** 2
            t22097 = t22093 ** 2
            t22092 = t22090 * t22091
            t22095 = t22092 ** 2
            t22094 = t22090 * t22093
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.46189e5) * t22101 ** 2 * (693 * t22091 - 1288 * t22092 - 9982 * t22093 + 46690 * t22095 - 83835 * t22097 - 7 + (9660 + 50025 * t22094) * t22094 + (-24840 * t22095 + 20010 * t22097 + 42) * t22090) * np.sin((phi1 + 6 * phi2)) * ((1 + t22090) ** (-0.1e1 / 0.2e1)) * ((1 - t22090) ** (-0.1e1 / 0.2e1))

        if Bindx == 2413:
            t22104 = np.cos(phi)
            t22105 = t22104 ** 2
            t22106 = t22104 * t22105
            t22109 = t22106 ** 2
            t22110 = t22104 * t22109
            t22117 = t22110 ** 2
            t22115 = t22109 ** 2
            t22107 = t22105 ** 2
            t22108 = t22104 * t22107
            t22113 = t22108 ** 2
            t22111 = t22107 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * (4655 * t22105 + 42007 * t22106 - 70021 * t22107 - 380429 * t22108 + 385483 * t22109 + 1519475 * t22110 - 992243 * t22111 + 1295245 * t22113 - 833175 * t22115 + 210105 * t22117 - 49 + (-3126091 * t22111 + 3463685 * t22113 - 1967535 * t22115 + 450225 * t22117 - 1337) * t22104) * np.cos((phi1 + 7 * phi2))

        if Bindx == 2414:
            t22130 = np.sin(phi)
            t22127 = t22130 ** 2
            t22128 = t22127 ** 2
            t22119 = np.cos(phi)
            t22120 = t22119 ** 2
            t22121 = t22119 * t22120
            t22124 = t22121 ** 2
            t22122 = t22120 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.96577e5) * t22128 ** 2 * (-588 * t22120 + 1400 * t22121 - 21420 * t22124 + 7 + (6650 + 19575 * t22122) * t22122 + (-7560 * t22122 + 10440 * t22124 - 56) * t22119) * np.sin((phi1 + 8 * phi2)) * ((1 + t22119) ** (-0.1e1 / 0.2e1)) * ((1 - t22119) ** (-0.1e1 / 0.2e1))

        if Bindx == 2415:
            t22131 = np.cos(phi)
            t22132 = t22131 ** 2
            t22133 = t22131 * t22132
            t22136 = t22133 ** 2
            t22137 = t22131 * t22136
            t22144 = t22137 ** 2
            t22142 = t22136 ** 2
            t22134 = t22132 ** 2
            t22135 = t22131 * t22134
            t22140 = t22135 ** 2
            t22138 = t22134 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2028117e7) * (237 * t22132 + 1387 * t22133 - 2943 * t22134 - 10553 * t22135 + 13377 * t22136 + 35927 * t22137 - 28713 * t22138 + 31815 * t22140 - 17685 * t22142 + 3915 * t22144 - 3 + (-64063 * t22138 + 62465 * t22140 - 31635 * t22142 + 6525 * t22144 - 53) * t22131) * np.cos((phi1 + 9 * phi2))

        if Bindx == 2416:
            t22156 = np.sin(phi)
            t22152 = t22156 ** 2
            t22154 = t22156 * t22152 ** 2
            t22146 = np.cos(phi)
            t22147 = t22146 ** 2
            t22149 = t22147 ** 2
            t22148 = t22146 * t22147
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.676039e6) * t22154 ** 2 * (65 * t22147 - 495 * t22149 - 1 + (-180 + 783 * t22148) * t22148 + (522 * t22149 + 10) * t22146) * np.sin((phi1 + 10 * phi2)) * ((1 + t22146) ** (-0.1e1 / 0.2e1)) * ((1 - t22146) ** (-0.1e1 / 0.2e1))

        if Bindx == 2417:
            t22157 = np.cos(phi)
            t22158 = t22157 ** 2
            t22159 = t22157 * t22158
            t22162 = t22159 ** 2
            t22163 = t22157 * t22162
            t22170 = t22163 ** 2
            t22168 = t22162 ** 2
            t22160 = t22158 ** 2
            t22161 = t22157 * t22160
            t22166 = t22161 ** 2
            t22164 = t22160 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * (649 * t22158 + 2341 * t22159 - 5951 * t22160 - 13835 * t22161 + 20405 * t22162 + 38225 * t22163 - 34705 * t22164 + 31691 * t22166 - 14949 * t22168 + 2871 * t22170 - 11 + (-57205 * t22164 + 47999 * t22166 - 21321 * t22168 + 3915 * t22170 - 119) * t22157) * np.cos((phi1 + 11 * phi2))

        if Bindx == 2418:
            t22180 = np.sin(phi)
            t22176 = t22180 ** 2
            t22177 = t22180 * t22176
            t22178 = t22177 ** 2
            t22172 = np.cos(phi)
            t22173 = t22172 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.780045e6) * t22178 ** 2 * (-12 * t22172 + 1 + (116 * t22172 - 42 + 145 * t22173) * t22173) * np.sin((phi1 + 12 * phi2)) * ((1 + t22172) ** (-0.1e1 / 0.2e1)) * ((1 - t22172) ** (-0.1e1 / 0.2e1))

        if Bindx == 2419:
            t22181 = np.cos(phi)
            t22182 = t22181 ** 2
            t22183 = t22181 * t22182
            t22186 = t22183 ** 2
            t22187 = t22181 * t22186
            t22194 = t22187 ** 2
            t22192 = t22186 ** 2
            t22184 = t22182 ** 2
            t22185 = t22181 * t22184
            t22190 = t22185 ** 2
            t22188 = t22184 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (455 * t22182 + 861 * t22183 - 2457 * t22184 - 3675 * t22185 + 5915 * t22186 + 7945 * t22187 - 7735 * t22188 + 5733 * t22190 - 2275 * t22192 + 377 * t22194 - 13 + (-9765 * t22188 + 6951 * t22190 - 2681 * t22192 + 435 * t22194 - 71) * t22181) * np.cos((phi1 + 13 * phi2))

        if Bindx == 2420:
            t22202 = np.sin(phi)
            t22197 = t22202 ** 2
            t22198 = t22202 * t22197
            t22200 = t22202 * t22198 ** 2
            t22196 = np.cos(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.1077205e7) * t22200 ** 2 * (-1 + (14 + 15 * t22196) * t22196) * np.sin((phi1 + 14 * phi2)) * ((1 + t22196) ** (-0.1e1 / 0.2e1)) * ((1 - t22196) ** (-0.1e1 / 0.2e1))

        if Bindx == 2421:
            t22203 = np.cos(phi)
            t22204 = t22203 ** 2
            t22206 = t22204 ** 2
            t22207 = t22203 * t22206
            t22205 = t22203 * t22204
            t22208 = t22205 ** 2
            t22209 = t22203 * t22208
            t22221 = -35 * t22206 ** 2 + 21 * t22207 ** 2 - 7 * t22208 ** 2 + t22209 ** 2 - 1
            tfunc[..., c] = -0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.646323e6) * np.cos((phi1 + 15 * phi2)) * (t22203 * t22221 + 7 * t22204 + 7 * t22205 - 21 * t22206 - 21 * t22207 + 35 * t22208 + 35 * t22209 + t22221)

        if Bindx == 2422:
            t22222 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.266133e6) * ((1 - t22222) ** (0.17e2 / 0.2e1)) * ((1 + t22222) ** (0.13e2 / 0.2e1)) * np.sin((2 * phi1 - 15 * phi2))

        if Bindx == 2423:
            t22223 = np.cos(phi)
            t22224 = t22223 ** 2
            t22225 = t22223 * t22224
            t22228 = t22225 ** 2
            t22229 = t22223 * t22228
            t22236 = t22229 ** 2
            t22234 = t22228 ** 2
            t22226 = t22224 ** 2
            t22227 = t22223 * t22226
            t22232 = t22227 ** 2
            t22230 = t22226 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.443555e6) * (-40 * t22224 - 51 * t22225 + 198 * t22226 + 75 * t22227 - 460 * t22228 + 5 * t22229 + 590 * t22230 - 432 * t22232 + 170 * t22234 - 28 * t22236 + 2 + (-135 * t22230 + 159 * t22232 - 79 * t22234 + 15 * t22236 + 11) * t22223) * np.cos((2 * phi1 - 14 * phi2))

        if Bindx == 2424:
            t22246 = np.sin(phi)
            t22242 = t22246 ** 2
            t22243 = t22246 * t22242
            t22244 = t22243 ** 2
            t22238 = np.cos(phi)
            t22239 = t22238 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.15295e5) * t22244 ** 2 * (130 * t22238 - 7 + (-754 * t22238 + 196 + 435 * t22239) * t22239) * np.sin((2 * phi1 - 13 * phi2)) * ((1 + t22238) ** (-0.1e1 / 0.2e1)) * ((1 - t22238) ** (-0.1e1 / 0.2e1))

        if Bindx == 2425:
            t22247 = np.cos(phi)
            t22248 = t22247 ** 2
            t22249 = t22247 * t22248
            t22252 = t22249 ** 2
            t22253 = t22247 * t22252
            t22260 = t22253 ** 2
            t22258 = t22252 ** 2
            t22250 = t22248 ** 2
            t22251 = t22247 * t22250
            t22256 = t22251 ** 2
            t22254 = t22250 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.6555e4) * (-552 * t22248 - 279 * t22249 + 4204 * t22250 + 5 * t22251 - 13160 * t22252 + 3285 * t22253 + 21220 * t22254 - 18712 * t22256 + 8612 * t22258 - 1624 * t22260 + 12 + (-8485 * t22254 + 9355 * t22256 - 4921 * t22258 + 1015 * t22260 + 25) * t22247) * np.cos((2 * phi1 - 12 * phi2))

        if Bindx == 2426:
            t22272 = np.sin(phi)
            t22268 = t22272 ** 2
            t22270 = t22272 * t22268 ** 2
            t22262 = np.cos(phi)
            t22263 = t22262 ** 2
            t22265 = t22263 ** 2
            t22264 = t22262 * t22263
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2185e4) * t22270 ** 2 * (-53 * t22263 - 4473 * t22265 + 1 + (18612 + 27405 * t22264) * t22264 + (-40194 * t22265 - 1298) * t22262) * np.sin((2 * phi1 - 11 * phi2)) * ((1 + t22262) ** (-0.1e1 / 0.2e1)) * ((1 - t22262) ** (-0.1e1 / 0.2e1))

        if Bindx == 2427:
            t22273 = np.cos(phi)
            t22274 = t22273 ** 2
            t22275 = t22273 * t22274
            t22278 = t22275 ** 2
            t22279 = t22273 * t22278
            t22286 = t22279 ** 2
            t22284 = t22278 ** 2
            t22276 = t22274 ** 2
            t22277 = t22273 * t22276
            t22282 = t22277 ** 2
            t22280 = t22276 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5681e4) * (-680 * t22274 + 491 * t22275 + 7390 * t22276 - 4483 * t22277 - 30268 * t22278 + 18883 * t22279 + 60422 * t22280 - 63568 * t22282 + 34002 * t22284 - 7308 * t22286 + 10 + (-39857 * t22280 + 44137 * t22282 - 24633 * t22284 + 5481 * t22286 - 19) * t22273) * np.cos((2 * phi1 - 10 * phi2))

        if Bindx == 2428:
            t22299 = np.sin(phi)
            t22296 = t22299 ** 2
            t22297 = t22296 ** 2
            t22288 = np.cos(phi)
            t22289 = t22288 ** 2
            t22290 = t22288 * t22289
            t22293 = t22290 ** 2
            t22291 = t22289 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.17043e5) * t22297 ** 2 * (-962 * t22289 - 10350 * t22290 - 38430 * t22293 + 13 + (10600 + 45675 * t22291) * t22291 + (47790 * t22291 - 54810 * t22293 + 474) * t22288) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t22288) ** (-0.1e1 / 0.2e1)) * ((1 - t22288) ** (-0.1e1 / 0.2e1))

        if Bindx == 2429:
            t22300 = np.cos(phi)
            t22301 = t22300 ** 2
            t22302 = t22300 * t22301
            t22305 = t22302 ** 2
            t22306 = t22300 * t22305
            t22313 = t22306 ** 2
            t22311 = t22305 ** 2
            t22303 = t22301 ** 2
            t22304 = t22300 * t22303
            t22309 = t22304 ** 2
            t22307 = t22303 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.39767e5) * (-688 * t22301 + 1601 * t22302 + 9416 * t22303 - 14083 * t22304 - 47600 * t22305 + 56773 * t22306 + 113944 * t22307 - 140240 * t22309 + 86040 * t22311 - 20880 * t22313 + 8 + (-120581 * t22307 + 139075 * t22309 - 82305 * t22311 + 19575 * t22313 - 55) * t22300) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 2430:
            t22328 = np.sin(phi)
            t22325 = t22328 ** 2
            t22326 = t22328 * t22325
            t22315 = np.cos(phi)
            t22316 = t22315 ** 2
            t22318 = t22316 ** 2
            t22322 = t22318 ** 2
            t22317 = t22315 * t22316
            t22320 = t22317 ** 2
            t22319 = t22315 * t22318
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1729e4) * t22326 ** 2 * (6461 * t22316 + 37352 * t22317 - 87262 * t22318 + 394450 * t22320 - 713115 * t22322 - 71 + (-254380 + 450225 * t22319) * t22319 + (587880 * t22320 - 420210 * t22322 - 1330) * t22315) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t22315) ** (-0.1e1 / 0.2e1)) * ((1 - t22315) ** (-0.1e1 / 0.2e1))

        if Bindx == 2431:
            t22329 = np.cos(phi)
            t22330 = t22329 ** 2
            t22331 = t22329 * t22330
            t22334 = t22331 ** 2
            t22335 = t22329 * t22334
            t22342 = t22335 ** 2
            t22340 = t22334 ** 2
            t22332 = t22330 ** 2
            t22333 = t22329 * t22332
            t22338 = t22333 ** 2
            t22336 = t22332 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.19019e5) * (-600 * t22330 + 2763 * t22331 + 9554 * t22332 - 26851 * t22333 - 55972 * t22334 + 116355 * t22335 + 153962 * t22336 - 215280 * t22338 + 148350 * t22340 - 40020 * t22342 + 6 + (-261809 * t22336 + 318665 * t22338 - 199065 * t22340 + 50025 * t22342 - 83) * t22329) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 2432:
            t22358 = np.sin(phi)
            t22356 = t22358 ** 2
            t22344 = np.cos(phi)
            t22345 = t22344 ** 2
            t22347 = t22345 ** 2
            t22348 = t22344 * t22347
            t22353 = t22348 ** 2
            t22351 = t22347 ** 2
            t22346 = t22344 * t22345
            t22349 = t22346 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.40755e5) * t22356 ** 2 * (-1976 * t22345 - 7070 * t22346 + 31675 * t22347 + 61180 * t22348 + 445625 * t22351 - 502320 * t22353 + 19 + (-179032 + 210105 * t22349) * t22349 + (-204700 * t22349 + 286350 * t22351 - 140070 * t22353 + 214) * t22344) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t22344) ** (-0.1e1 / 0.2e1)) * ((1 - t22344) ** (-0.1e1 / 0.2e1))

        if Bindx == 2433:
            t22359 = np.cos(phi)
            t22360 = t22359 ** 2
            t22361 = t22359 * t22360
            t22364 = t22361 ** 2
            t22365 = t22359 * t22364
            t22372 = t22365 ** 2
            t22370 = t22364 ** 2
            t22362 = t22360 ** 2
            t22363 = t22359 * t22362
            t22368 = t22363 ** 2
            t22366 = t22362 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.741e3) * (-4840 * t22360 + 41283 * t22361 + 84876 * t22362 - 434313 * t22363 - 547624 * t22364 + 2014375 * t22365 + 1656644 * t22366 - 2540120 * t22368 + 1911300 * t22370 - 560280 * t22372 + 44 + (-4801687 * t22366 + 6142265 * t22368 - 4011315 * t22370 + 1050525 * t22372 - 1133) * t22359) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 2434:
            t22375 = np.cos(phi)
            t22376 = t22375 ** 2
            t22377 = t22375 * t22376
            t22380 = t22377 ** 2
            t22386 = t22380 ** 2
            t22378 = t22376 ** 2
            t22379 = t22375 * t22378
            t22384 = t22379 ** 2
            t22382 = t22378 ** 2
            t22381 = t22375 * t22380
            t22374 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.13e2) * t22374 ** 2 * (45991 * t22376 + 92796 * t22377 - 830775 * t22378 - 939246 * t22379 + 5537455 * t22380 - 17358077 * t22382 + 27664285 * t22384 - 21703605 * t22386 - 407 + (3960968 + 6653325 * t22381) * t22381 + (-7931550 * t22382 + 7472700 * t22384 - 2661330 * t22386 - 2530) * t22375) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t22375) ** (-0.1e1 / 0.2e1)) * ((1 - t22375) ** (-0.1e1 / 0.2e1))

        if Bindx == 2435:
            t22389 = np.cos(phi)
            t22390 = t22389 ** 2
            t22391 = t22389 * t22390
            t22394 = t22391 ** 2
            t22395 = t22389 * t22394
            t22402 = t22395 ** 2
            t22400 = t22394 ** 2
            t22392 = t22390 ** 2
            t22393 = t22389 * t22392
            t22398 = t22393 ** 2
            t22396 = t22392 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (-99528 * t22390 + 1892319 * t22391 + 1842126 * t22392 - 20874711 * t22393 - 12552540 * t22394 + 101080551 * t22395 + 40119222 * t22396 - 64990640 * t22398 + 51640290 * t22400 - 15967980 * t22402 + 858 + (-250401437 * t22396 + 331344325 * t22398 - 222863445 * t22400 + 59879925 * t22402 - 49335) * t22389) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 2436:
            t22405 = np.cos(phi)
            t22406 = t22405 ** 2
            t22407 = t22405 * t22406
            t22410 = t22407 ** 2
            t22416 = t22410 ** 2
            t22408 = t22406 ** 2
            t22409 = t22405 * t22408
            t22414 = t22409 ** 2
            t22412 = t22408 ** 2
            t22411 = t22405 * t22410
            t22404 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.119e3) * t22404 ** 2 * (50193 * t22406 + 32604 * t22407 - 937365 * t22408 - 342342 * t22409 + 6447441 * t22410 - 20809503 * t22412 + 34057595 * t22414 - 27354015 * t22416 - 429 + (1499784 + 8554275 * t22411) * t22411 + (-3124550 * t22412 + 3067740 * t22414 - 1140570 * t22416 - 858) * t22405) * np.sin((2 * phi1 - phi2)) * ((1 + t22405) ** (-0.1e1 / 0.2e1)) * ((1 - t22405) ** (-0.1e1 / 0.2e1))

        if Bindx == 2437:
            t22419 = np.cos(phi)
            t22420 = t22419 ** 2
            t22421 = t22420 ** 2
            t22422 = t22420 * t22421
            t22425 = t22422 ** 2
            t22423 = t22421 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t22419 * np.sqrt(0.1785e4) * (-187473 * t22421 + 921063 * t22422 - 2312167 * t22423 - 2104155 * t22425 - 429 + (3096145 * t22423 + 570285 * t22425 + 16731) * t22420) * np.cos((2 * phi1))

        if Bindx == 2438:
            t22428 = np.cos(phi)
            t22429 = t22428 ** 2
            t22430 = t22428 * t22429
            t22433 = t22430 ** 2
            t22439 = t22433 ** 2
            t22431 = t22429 ** 2
            t22432 = t22428 * t22431
            t22437 = t22432 ** 2
            t22435 = t22431 ** 2
            t22434 = t22428 * t22433
            t22427 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.119e3) * t22427 ** 2 * (50193 * t22429 - 32604 * t22430 - 937365 * t22431 + 342342 * t22432 + 6447441 * t22433 - 20809503 * t22435 + 34057595 * t22437 - 27354015 * t22439 - 429 + (-1499784 + 8554275 * t22434) * t22434 + (3124550 * t22435 - 3067740 * t22437 + 1140570 * t22439 + 858) * t22428) * np.sin((2 * phi1 + phi2)) * ((1 + t22428) ** (-0.1e1 / 0.2e1)) * ((1 - t22428) ** (-0.1e1 / 0.2e1))

        if Bindx == 2439:
            t22442 = np.cos(phi)
            t22443 = t22442 ** 2
            t22444 = t22442 * t22443
            t22447 = t22444 ** 2
            t22448 = t22442 * t22447
            t22455 = t22448 ** 2
            t22453 = t22447 ** 2
            t22445 = t22443 ** 2
            t22446 = t22442 * t22445
            t22451 = t22446 ** 2
            t22449 = t22445 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (99528 * t22443 + 1892319 * t22444 - 1842126 * t22445 - 20874711 * t22446 + 12552540 * t22447 + 101080551 * t22448 - 40119222 * t22449 + 64990640 * t22451 - 51640290 * t22453 + 15967980 * t22455 - 858 + (-250401437 * t22449 + 331344325 * t22451 - 222863445 * t22453 + 59879925 * t22455 - 49335) * t22442) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 2440:
            t22458 = np.cos(phi)
            t22459 = t22458 ** 2
            t22460 = t22458 * t22459
            t22463 = t22460 ** 2
            t22469 = t22463 ** 2
            t22461 = t22459 ** 2
            t22462 = t22458 * t22461
            t22467 = t22462 ** 2
            t22465 = t22461 ** 2
            t22464 = t22458 * t22463
            t22457 = np.sin(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13e2) * t22457 ** 2 * (45991 * t22459 - 92796 * t22460 - 830775 * t22461 + 939246 * t22462 + 5537455 * t22463 - 17358077 * t22465 + 27664285 * t22467 - 21703605 * t22469 - 407 + (-3960968 + 6653325 * t22464) * t22464 + (7931550 * t22465 - 7472700 * t22467 + 2661330 * t22469 + 2530) * t22458) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t22458) ** (-0.1e1 / 0.2e1)) * ((1 - t22458) ** (-0.1e1 / 0.2e1))

        if Bindx == 2441:
            t22472 = np.cos(phi)
            t22473 = t22472 ** 2
            t22474 = t22472 * t22473
            t22477 = t22474 ** 2
            t22478 = t22472 * t22477
            t22485 = t22478 ** 2
            t22483 = t22477 ** 2
            t22475 = t22473 ** 2
            t22476 = t22472 * t22475
            t22481 = t22476 ** 2
            t22479 = t22475 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.741e3) * (4840 * t22473 + 41283 * t22474 - 84876 * t22475 - 434313 * t22476 + 547624 * t22477 + 2014375 * t22478 - 1656644 * t22479 + 2540120 * t22481 - 1911300 * t22483 + 560280 * t22485 - 44 + (-4801687 * t22479 + 6142265 * t22481 - 4011315 * t22483 + 1050525 * t22485 - 1133) * t22472) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 2442:
            t22501 = np.sin(phi)
            t22499 = t22501 ** 2
            t22487 = np.cos(phi)
            t22488 = t22487 ** 2
            t22490 = t22488 ** 2
            t22491 = t22487 * t22490
            t22496 = t22491 ** 2
            t22494 = t22490 ** 2
            t22489 = t22487 * t22488
            t22492 = t22489 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.40755e5) * t22499 ** 2 * (-1976 * t22488 + 7070 * t22489 + 31675 * t22490 - 61180 * t22491 + 445625 * t22494 - 502320 * t22496 + 19 + (-179032 + 210105 * t22492) * t22492 + (204700 * t22492 - 286350 * t22494 + 140070 * t22496 - 214) * t22487) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t22487) ** (-0.1e1 / 0.2e1)) * ((1 - t22487) ** (-0.1e1 / 0.2e1))

        if Bindx == 2443:
            t22502 = np.cos(phi)
            t22503 = t22502 ** 2
            t22504 = t22502 * t22503
            t22507 = t22504 ** 2
            t22508 = t22502 * t22507
            t22515 = t22508 ** 2
            t22513 = t22507 ** 2
            t22505 = t22503 ** 2
            t22506 = t22502 * t22505
            t22511 = t22506 ** 2
            t22509 = t22505 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.19019e5) * (600 * t22503 + 2763 * t22504 - 9554 * t22505 - 26851 * t22506 + 55972 * t22507 + 116355 * t22508 - 153962 * t22509 + 215280 * t22511 - 148350 * t22513 + 40020 * t22515 - 6 + (-261809 * t22509 + 318665 * t22511 - 199065 * t22513 + 50025 * t22515 - 83) * t22502) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 2444:
            t22530 = np.sin(phi)
            t22527 = t22530 ** 2
            t22528 = t22530 * t22527
            t22517 = np.cos(phi)
            t22518 = t22517 ** 2
            t22520 = t22518 ** 2
            t22524 = t22520 ** 2
            t22519 = t22517 * t22518
            t22522 = t22519 ** 2
            t22521 = t22517 * t22520
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1729e4) * t22528 ** 2 * (6461 * t22518 - 37352 * t22519 - 87262 * t22520 + 394450 * t22522 - 713115 * t22524 - 71 + (254380 + 450225 * t22521) * t22521 + (-587880 * t22522 + 420210 * t22524 + 1330) * t22517) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t22517) ** (-0.1e1 / 0.2e1)) * ((1 - t22517) ** (-0.1e1 / 0.2e1))

        if Bindx == 2445:
            t22531 = np.cos(phi)
            t22532 = t22531 ** 2
            t22533 = t22531 * t22532
            t22536 = t22533 ** 2
            t22537 = t22531 * t22536
            t22544 = t22537 ** 2
            t22542 = t22536 ** 2
            t22534 = t22532 ** 2
            t22535 = t22531 * t22534
            t22540 = t22535 ** 2
            t22538 = t22534 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.39767e5) * (688 * t22532 + 1601 * t22533 - 9416 * t22534 - 14083 * t22535 + 47600 * t22536 + 56773 * t22537 - 113944 * t22538 + 140240 * t22540 - 86040 * t22542 + 20880 * t22544 - 8 + (-120581 * t22538 + 139075 * t22540 - 82305 * t22542 + 19575 * t22544 - 55) * t22531) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 2446:
            t22557 = np.sin(phi)
            t22554 = t22557 ** 2
            t22555 = t22554 ** 2
            t22546 = np.cos(phi)
            t22547 = t22546 ** 2
            t22548 = t22546 * t22547
            t22551 = t22548 ** 2
            t22549 = t22547 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.17043e5) * t22555 ** 2 * (-962 * t22547 + 10350 * t22548 - 38430 * t22551 + 13 + (10600 + 45675 * t22549) * t22549 + (-47790 * t22549 + 54810 * t22551 - 474) * t22546) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t22546) ** (-0.1e1 / 0.2e1)) * ((1 - t22546) ** (-0.1e1 / 0.2e1))

        if Bindx == 2447:
            t22558 = np.cos(phi)
            t22559 = t22558 ** 2
            t22560 = t22558 * t22559
            t22563 = t22560 ** 2
            t22564 = t22558 * t22563
            t22571 = t22564 ** 2
            t22569 = t22563 ** 2
            t22561 = t22559 ** 2
            t22562 = t22558 * t22561
            t22567 = t22562 ** 2
            t22565 = t22561 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5681e4) * (680 * t22559 + 491 * t22560 - 7390 * t22561 - 4483 * t22562 + 30268 * t22563 + 18883 * t22564 - 60422 * t22565 + 63568 * t22567 - 34002 * t22569 + 7308 * t22571 - 10 + (-39857 * t22565 + 44137 * t22567 - 24633 * t22569 + 5481 * t22571 - 19) * t22558) * np.cos((2 * phi1 + 10 * phi2))

        if Bindx == 2448:
            t22583 = np.sin(phi)
            t22579 = t22583 ** 2
            t22581 = t22583 * t22579 ** 2
            t22573 = np.cos(phi)
            t22574 = t22573 ** 2
            t22576 = t22574 ** 2
            t22575 = t22573 * t22574
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2185e4) * t22581 ** 2 * (-53 * t22574 - 4473 * t22576 + 1 + (-18612 + 27405 * t22575) * t22575 + (40194 * t22576 + 1298) * t22573) * np.sin((2 * phi1 + 11 * phi2)) * ((1 + t22573) ** (-0.1e1 / 0.2e1)) * ((1 - t22573) ** (-0.1e1 / 0.2e1))

        if Bindx == 2449:
            t22584 = np.cos(phi)
            t22585 = t22584 ** 2
            t22586 = t22584 * t22585
            t22589 = t22586 ** 2
            t22590 = t22584 * t22589
            t22597 = t22590 ** 2
            t22595 = t22589 ** 2
            t22587 = t22585 ** 2
            t22588 = t22584 * t22587
            t22593 = t22588 ** 2
            t22591 = t22587 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.6555e4) * (552 * t22585 - 279 * t22586 - 4204 * t22587 + 5 * t22588 + 13160 * t22589 + 3285 * t22590 - 21220 * t22591 + 18712 * t22593 - 8612 * t22595 + 1624 * t22597 - 12 + (-8485 * t22591 + 9355 * t22593 - 4921 * t22595 + 1015 * t22597 + 25) * t22584) * np.cos((2 * phi1 + 12 * phi2))

        if Bindx == 2450:
            t22607 = np.sin(phi)
            t22603 = t22607 ** 2
            t22604 = t22607 * t22603
            t22605 = t22604 ** 2
            t22599 = np.cos(phi)
            t22600 = t22599 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.15295e5) * t22605 ** 2 * (-130 * t22599 - 7 + (754 * t22599 + 196 + 435 * t22600) * t22600) * np.sin((2 * phi1 + 13 * phi2)) * ((1 + t22599) ** (-0.1e1 / 0.2e1)) * ((1 - t22599) ** (-0.1e1 / 0.2e1))

        if Bindx == 2451:
            t22608 = np.cos(phi)
            t22609 = t22608 ** 2
            t22610 = t22608 * t22609
            t22613 = t22610 ** 2
            t22614 = t22608 * t22613
            t22621 = t22614 ** 2
            t22619 = t22613 ** 2
            t22611 = t22609 ** 2
            t22612 = t22608 * t22611
            t22617 = t22612 ** 2
            t22615 = t22611 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.443555e6) * (40 * t22609 - 51 * t22610 - 198 * t22611 + 75 * t22612 + 460 * t22613 + 5 * t22614 - 590 * t22615 + 432 * t22617 - 170 * t22619 + 28 * t22621 - 2 + (-135 * t22615 + 159 * t22617 - 79 * t22619 + 15 * t22621 + 11) * t22608) * np.cos((2 * phi1 + 14 * phi2))

        if Bindx == 2452:
            t22623 = np.cos(phi)
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.266133e6) * ((1 - t22623) ** (0.13e2 / 0.2e1)) * ((1 + t22623) ** (0.17e2 / 0.2e1)) * np.sin((2 * phi1 + 15 * phi2))

        if Bindx == 2453:
            t22624 = np.cos(phi)
            t22639 = -3 * t22624
            t22625 = t22624 ** 2
            t22626 = t22624 * t22625
            t22629 = t22626 ** 2
            t22630 = t22624 * t22629
            t22637 = t22630 ** 2
            t22627 = t22625 ** 2
            t22631 = t22627 ** 2
            t22628 = t22624 * t22627
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3459729e7) * np.cos((3 * phi1 - 15 * phi2)) * (3 * t22625 - 17 * t22626 + 3 * t22627 - 45 * t22630 + 45 * t22631 - 3 * t22637 - 1 + (25 * t22631 + t22637 + 3) * t22624 + (-25 + (t22639 + 17) * t22629) * t22629 + (39 + (t22639 - 39) * t22628) * t22628)

        if Bindx == 2454:
            t22648 = np.sin(phi)
            t22644 = t22648 ** 2
            t22645 = t22648 * t22644
            t22646 = t22645 ** 2
            t22640 = np.cos(phi)
            t22641 = t22640 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.5766215e7) * t22646 ** 2 * (-2 * t22640 - 1 + (-14 * t22640 + 12 + 5 * t22641) * t22641) * np.sin((3 * phi1 - 14 * phi2)) * ((1 + t22640) ** (-0.1e1 / 0.2e1)) * ((1 - t22640) ** (-0.1e1 / 0.2e1))

        if Bindx == 2455:
            t22649 = np.cos(phi)
            t22650 = t22649 ** 2
            t22651 = t22649 * t22650
            t22654 = t22651 ** 2
            t22655 = t22649 * t22654
            t22662 = t22655 ** 2
            t22660 = t22654 ** 2
            t22652 = t22650 ** 2
            t22653 = t22649 * t22652
            t22658 = t22653 ** 2
            t22656 = t22652 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.198835e6) * (-31 * t22650 - 537 * t22651 + 517 * t22652 + 1715 * t22653 - 2155 * t22654 - 2445 * t22655 + 4035 * t22656 - 3901 * t22658 + 1911 * t22660 - 377 * t22662 + 1 + (1445 * t22656 + 85 * t22658 - 463 * t22660 + 145 * t22662 + 55) * t22649) * np.cos((3 * phi1 - 13 * phi2))

        if Bindx == 2456:
            t22674 = np.sin(phi)
            t22670 = t22674 ** 2
            t22672 = t22674 * t22670 ** 2
            t22664 = np.cos(phi)
            t22665 = t22664 ** 2
            t22667 = t22665 ** 2
            t22666 = t22664 * t22665
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * t22672 ** 2 * (-507 * t22665 + 1239 * t22667 + 13 + (736 + 1015 * t22666) * t22666 + (-2436 * t22667 - 60) * t22664) * np.sin((3 * phi1 - 12 * phi2)) * ((1 + t22664) ** (-0.1e1 / 0.2e1)) * ((1 - t22664) ** (-0.1e1 / 0.2e1))

        if Bindx == 2457:
            t22675 = np.cos(phi)
            t22676 = t22675 ** 2
            t22677 = t22675 * t22676
            t22680 = t22677 ** 2
            t22681 = t22675 * t22680
            t22688 = t22681 ** 2
            t22686 = t22680 ** 2
            t22678 = t22676 ** 2
            t22679 = t22675 * t22678
            t22684 = t22679 ** 2
            t22682 = t22678 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (-605 * t22676 - 2093 * t22677 + 6039 * t22678 + 9095 * t22679 - 25025 * t22680 - 14865 * t22681 + 51425 * t22682 - 55671 * t22684 + 30525 * t22686 - 6699 * t22688 + 11 + (6065 * t22682 + 8857 * t22684 - 10227 * t22686 + 3045 * t22688 + 123) * t22675) * np.cos((3 * phi1 - 11 * phi2))

        if Bindx == 2458:
            t22701 = np.sin(phi)
            t22698 = t22701 ** 2
            t22699 = t22698 ** 2
            t22690 = np.cos(phi)
            t22691 = t22690 ** 2
            t22692 = t22690 * t22691
            t22695 = t22692 ** 2
            t22693 = t22691 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.437e3) * t22699 ** 2 * (558 * t22691 - 3150 * t22692 + 546 * t22695 - 9 + (-3380 + 7917 * t22693) * t22693 + (13182 * t22693 - 15834 * t22695 + 170) * t22690) * np.sin((3 * phi1 - 10 * phi2)) * ((1 + t22690) ** (-0.1e1 / 0.2e1)) * ((1 - t22690) ** (-0.1e1 / 0.2e1))

        if Bindx == 2459:
            t22702 = np.cos(phi)
            t22703 = t22702 ** 2
            t22704 = t22702 * t22703
            t22707 = t22704 ** 2
            t22708 = t22702 * t22707
            t22715 = t22708 ** 2
            t22713 = t22707 ** 2
            t22705 = t22703 ** 2
            t22706 = t22702 * t22705
            t22711 = t22706 ** 2
            t22709 = t22705 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1311e4) * (-14775 * t22703 - 16949 * t22704 + 182193 * t22705 + 81003 * t22706 - 862379 * t22707 - 50625 * t22708 + 1995039 * t22709 - 2415285 * t22711 + 1471275 * t22713 - 356265 * t22715 + 197 + (-373963 * t22709 + 853905 * t22711 - 692055 * t22713 + 197925 * t22715 + 759) * t22702) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 2460:
            t22730 = np.sin(phi)
            t22727 = t22730 ** 2
            t22728 = t22730 * t22727
            t22717 = np.cos(phi)
            t22718 = t22717 ** 2
            t22720 = t22718 ** 2
            t22724 = t22720 ** 2
            t22719 = t22717 * t22718
            t22722 = t22719 ** 2
            t22721 = t22717 * t22720
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.3059e4) * t22728 ** 2 * (-81 * t22718 + 5008 * t22719 + 122 * t22720 + 7150 * t22722 - 29835 * t22724 + 1 + (-30720 + 28275 * t22721) * t22721 + (65520 * t22722 - 45240 * t22724 - 200) * t22717) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t22717) ** (-0.1e1 / 0.2e1)) * ((1 - t22717) ** (-0.1e1 / 0.2e1))

        if Bindx == 2461:
            t22731 = np.cos(phi)
            t22732 = t22731 ** 2
            t22733 = t22731 * t22732
            t22736 = t22733 ** 2
            t22737 = t22731 * t22736
            t22744 = t22737 ** 2
            t22742 = t22736 ** 2
            t22734 = t22732 ** 2
            t22735 = t22731 * t22734
            t22740 = t22735 ** 2
            t22738 = t22734 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (-18473 * t22732 + 14171 * t22733 + 270431 * t22734 - 160053 * t22735 - 1476405 * t22736 + 850383 * t22737 + 3842449 * t22738 - 5156715 * t22740 + 3448965 * t22742 - 910455 * t22744 + 203 + (-2320171 * t22738 + 3311425 * t22740 - 2345655 * t22742 + 650325 * t22744 - 425) * t22731) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 2462:
            t22760 = np.sin(phi)
            t22758 = t22760 ** 2
            t22746 = np.cos(phi)
            t22747 = t22746 ** 2
            t22749 = t22747 ** 2
            t22750 = t22746 * t22749
            t22755 = t22750 ** 2
            t22753 = t22749 ** 2
            t22748 = t22746 * t22747
            t22751 = t22748 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1463e4) * t22758 ** 2 * (-4512 * t22747 - 51422 * t22748 + 70623 * t22749 + 411516 * t22750 + 1116765 * t22753 - 1399320 * t22755 + 47 + (-413448 + 650325 * t22751) * t22751 + (-1279260 * t22751 + 1677390 * t22753 - 780390 * t22755 + 1686) * t22746) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t22746) ** (-0.1e1 / 0.2e1)) * ((1 - t22746) ** (-0.1e1 / 0.2e1))

        if Bindx == 2463:
            t22761 = np.cos(phi)
            t22762 = t22761 ** 2
            t22763 = t22761 * t22762
            t22766 = t22763 ** 2
            t22767 = t22761 * t22766
            t22776 = 910455 * t22767 ** 2
            t22772 = t22766 ** 2
            t22764 = t22762 ** 2
            t22765 = t22761 * t22764
            t22770 = t22765 ** 2
            t22768 = t22764 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3135e4) * (-10609 * t22762 + 33393 * t22763 + 174691 * t22764 - 341315 * t22765 - 1062565 * t22766 + 1573797 * t22767 + 3046005 * t22768 - 4452915 * t22770 + 3215745 * t22772 - t22776 + 103 + (-3798933 * t22768 + 4982835 * t22770 - 3359265 * t22772 - 967 + t22776) * t22761) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 2464:
            t22778 = np.cos(phi)
            t22779 = t22778 ** 2
            t22780 = t22778 * t22779
            t22783 = t22780 ** 2
            t22789 = t22783 ** 2
            t22781 = t22779 ** 2
            t22782 = t22778 * t22781
            t22787 = t22782 ** 2
            t22785 = t22781 ** 2
            t22784 = t22778 * t22783
            t22777 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t22777 ** 2 * (34133 * t22779 + 163504 * t22780 - 590315 * t22781 - 1567412 * t22782 + 3814041 * t22783 - 11739453 * t22785 + 18599295 * t22787 - 14661465 * t22789 - 319 + (6266304 + 4552275 * t22784) * t22784 + (-11916300 * t22785 + 10692240 * t22787 - 3641820 * t22789 - 4708) * t22778) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t22778) ** (-0.1e1 / 0.2e1)) * ((1 - t22778) ** (-0.1e1 / 0.2e1))

        if Bindx == 2465:
            t22792 = np.cos(phi)
            t22793 = t22792 ** 2
            t22794 = t22792 * t22793
            t22797 = t22794 ** 2
            t22798 = t22792 * t22797
            t22805 = t22798 ** 2
            t22803 = t22797 ** 2
            t22795 = t22793 ** 2
            t22796 = t22792 * t22795
            t22801 = t22796 ** 2
            t22799 = t22795 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-416361 * t22793 + 3090703 * t22794 + 7374147 * t22795 - 32899317 * t22796 - 48096125 * t22797 + 154668987 * t22798 + 147223989 * t22799 - 228644955 * t22801 + 174435105 * t22803 - 51895935 * t22805 + 3751 + (-374354739 * t22799 + 487003725 * t22801 - 323902215 * t22803 + 86493225 * t22805 - 83985) * t22792) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 2466:
            t22808 = np.cos(phi)
            t22809 = t22808 ** 2
            t22810 = t22808 * t22809
            t22813 = t22810 ** 2
            t22819 = t22813 ** 2
            t22811 = t22809 ** 2
            t22812 = t22808 * t22811
            t22817 = t22812 ** 2
            t22815 = t22811 ** 2
            t22814 = t22808 * t22813
            t22807 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.13e2) * t22807 ** 2 * (45991 * t22809 + 92796 * t22810 - 830775 * t22811 - 939246 * t22812 + 5537455 * t22813 - 17358077 * t22815 + 27664285 * t22817 - 21703605 * t22819 - 407 + (3960968 + 6653325 * t22814) * t22814 + (-7931550 * t22815 + 7472700 * t22817 - 2661330 * t22819 - 2530) * t22808) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t22808) ** (-0.1e1 / 0.2e1)) * ((1 - t22808) ** (-0.1e1 / 0.2e1))

        if Bindx == 2467:
            t22822 = np.cos(phi)
            t22823 = t22822 ** 2
            t22824 = t22822 * t22823
            t22827 = t22824 ** 2
            t22828 = t22822 * t22827
            t22835 = t22828 ** 2
            t22833 = t22827 ** 2
            t22825 = t22823 ** 2
            t22826 = t22822 * t22825
            t22831 = t22826 ** 2
            t22829 = t22825 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1547e4) * (-1265 * t22823 + 32197 * t22824 + 23199 * t22825 - 351747 * t22826 - 156541 * t22827 + 1685585 * t22828 + 495121 * t22829 - 793155 * t22831 + 622725 * t22833 - 190095 * t22835 + 11 + (-4129213 * t22829 + 5399135 * t22831 - 3585585 * t22833 + 950475 * t22835 - 847) * t22822) * np.cos((3 * phi1 - phi2))

        if Bindx == 2468:
            t22846 = np.sin(phi)
            t22844 = t22846 ** 2
            t22837 = np.cos(phi)
            t22838 = t22837 ** 2
            t22839 = t22838 ** 2
            t22841 = t22839 ** 2
            t22840 = t22838 * t22839
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.23205e5) * t22844 ** 2 * (21945 * t22839 + 360525 * t22841 + 11 + (-134596 + 190095 * t22840) * t22840 + (-432630 * t22841 - 1254) * t22838) * np.sin((3 * phi1)) * ((1 + t22837) ** (-0.1e1 / 0.2e1)) * ((1 - t22837) ** (-0.1e1 / 0.2e1))

        if Bindx == 2469:
            t22847 = np.cos(phi)
            t22848 = t22847 ** 2
            t22849 = t22847 * t22848
            t22852 = t22849 ** 2
            t22853 = t22847 * t22852
            t22860 = t22853 ** 2
            t22858 = t22852 ** 2
            t22850 = t22848 ** 2
            t22851 = t22847 * t22850
            t22856 = t22851 ** 2
            t22854 = t22850 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1547e4) * (1265 * t22848 + 32197 * t22849 - 23199 * t22850 - 351747 * t22851 + 156541 * t22852 + 1685585 * t22853 - 495121 * t22854 + 793155 * t22856 - 622725 * t22858 + 190095 * t22860 - 11 + (-4129213 * t22854 + 5399135 * t22856 - 3585585 * t22858 + 950475 * t22860 - 847) * t22847) * np.cos((3 * phi1 + phi2))

        if Bindx == 2470:
            t22863 = np.cos(phi)
            t22864 = t22863 ** 2
            t22865 = t22863 * t22864
            t22868 = t22865 ** 2
            t22874 = t22868 ** 2
            t22866 = t22864 ** 2
            t22867 = t22863 * t22866
            t22872 = t22867 ** 2
            t22870 = t22866 ** 2
            t22869 = t22863 * t22868
            t22862 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.13e2) * t22862 ** 2 * (45991 * t22864 - 92796 * t22865 - 830775 * t22866 + 939246 * t22867 + 5537455 * t22868 - 17358077 * t22870 + 27664285 * t22872 - 21703605 * t22874 - 407 + (-3960968 + 6653325 * t22869) * t22869 + (7931550 * t22870 - 7472700 * t22872 + 2661330 * t22874 + 2530) * t22863) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t22863) ** (-0.1e1 / 0.2e1)) * ((1 - t22863) ** (-0.1e1 / 0.2e1))

        if Bindx == 2471:
            t22877 = np.cos(phi)
            t22878 = t22877 ** 2
            t22879 = t22877 * t22878
            t22882 = t22879 ** 2
            t22883 = t22877 * t22882
            t22890 = t22883 ** 2
            t22888 = t22882 ** 2
            t22880 = t22878 ** 2
            t22881 = t22877 * t22880
            t22886 = t22881 ** 2
            t22884 = t22880 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (416361 * t22878 + 3090703 * t22879 - 7374147 * t22880 - 32899317 * t22881 + 48096125 * t22882 + 154668987 * t22883 - 147223989 * t22884 + 228644955 * t22886 - 174435105 * t22888 + 51895935 * t22890 - 3751 + (-374354739 * t22884 + 487003725 * t22886 - 323902215 * t22888 + 86493225 * t22890 - 83985) * t22877) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 2472:
            t22893 = np.cos(phi)
            t22894 = t22893 ** 2
            t22895 = t22893 * t22894
            t22898 = t22895 ** 2
            t22904 = t22898 ** 2
            t22896 = t22894 ** 2
            t22897 = t22893 * t22896
            t22902 = t22897 ** 2
            t22900 = t22896 ** 2
            t22899 = t22893 * t22898
            t22892 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t22892 ** 2 * (34133 * t22894 - 163504 * t22895 - 590315 * t22896 + 1567412 * t22897 + 3814041 * t22898 - 11739453 * t22900 + 18599295 * t22902 - 14661465 * t22904 - 319 + (-6266304 + 4552275 * t22899) * t22899 + (11916300 * t22900 - 10692240 * t22902 + 3641820 * t22904 + 4708) * t22893) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t22893) ** (-0.1e1 / 0.2e1)) * ((1 - t22893) ** (-0.1e1 / 0.2e1))

        if Bindx == 2473:
            t22907 = np.cos(phi)
            t22908 = t22907 ** 2
            t22909 = t22907 * t22908
            t22912 = t22909 ** 2
            t22913 = t22907 * t22912
            t22922 = 910455 * t22913 ** 2
            t22918 = t22912 ** 2
            t22910 = t22908 ** 2
            t22911 = t22907 * t22910
            t22916 = t22911 ** 2
            t22914 = t22910 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3135e4) * (10609 * t22908 + 33393 * t22909 - 174691 * t22910 - 341315 * t22911 + 1062565 * t22912 + 1573797 * t22913 - 3046005 * t22914 + 4452915 * t22916 - 3215745 * t22918 + t22922 - 103 + (-3798933 * t22914 + 4982835 * t22916 - 3359265 * t22918 + t22922 - 967) * t22907) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 2474:
            t22937 = np.sin(phi)
            t22935 = t22937 ** 2
            t22923 = np.cos(phi)
            t22924 = t22923 ** 2
            t22926 = t22924 ** 2
            t22927 = t22923 * t22926
            t22932 = t22927 ** 2
            t22930 = t22926 ** 2
            t22925 = t22923 * t22924
            t22928 = t22925 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1463e4) * t22935 ** 2 * (-4512 * t22924 + 51422 * t22925 + 70623 * t22926 - 411516 * t22927 + 1116765 * t22930 - 1399320 * t22932 + 47 + (-413448 + 650325 * t22928) * t22928 + (1279260 * t22928 - 1677390 * t22930 + 780390 * t22932 - 1686) * t22923) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t22923) ** (-0.1e1 / 0.2e1)) * ((1 - t22923) ** (-0.1e1 / 0.2e1))

        if Bindx == 2475:
            t22938 = np.cos(phi)
            t22939 = t22938 ** 2
            t22940 = t22938 * t22939
            t22943 = t22940 ** 2
            t22944 = t22938 * t22943
            t22951 = t22944 ** 2
            t22949 = t22943 ** 2
            t22941 = t22939 ** 2
            t22942 = t22938 * t22941
            t22947 = t22942 ** 2
            t22945 = t22941 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (18473 * t22939 + 14171 * t22940 - 270431 * t22941 - 160053 * t22942 + 1476405 * t22943 + 850383 * t22944 - 3842449 * t22945 + 5156715 * t22947 - 3448965 * t22949 + 910455 * t22951 - 203 + (-2320171 * t22945 + 3311425 * t22947 - 2345655 * t22949 + 650325 * t22951 - 425) * t22938) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 2476:
            t22966 = np.sin(phi)
            t22963 = t22966 ** 2
            t22964 = t22966 * t22963
            t22953 = np.cos(phi)
            t22954 = t22953 ** 2
            t22956 = t22954 ** 2
            t22960 = t22956 ** 2
            t22955 = t22953 * t22954
            t22958 = t22955 ** 2
            t22957 = t22953 * t22956
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.3059e4) * t22964 ** 2 * (-81 * t22954 - 5008 * t22955 + 122 * t22956 + 7150 * t22958 - 29835 * t22960 + 1 + (30720 + 28275 * t22957) * t22957 + (-65520 * t22958 + 45240 * t22960 + 200) * t22953) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t22953) ** (-0.1e1 / 0.2e1)) * ((1 - t22953) ** (-0.1e1 / 0.2e1))

        if Bindx == 2477:
            t22967 = np.cos(phi)
            t22968 = t22967 ** 2
            t22969 = t22967 * t22968
            t22972 = t22969 ** 2
            t22973 = t22967 * t22972
            t22980 = t22973 ** 2
            t22978 = t22972 ** 2
            t22970 = t22968 ** 2
            t22971 = t22967 * t22970
            t22976 = t22971 ** 2
            t22974 = t22970 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1311e4) * (14775 * t22968 - 16949 * t22969 - 182193 * t22970 + 81003 * t22971 + 862379 * t22972 - 50625 * t22973 - 1995039 * t22974 + 2415285 * t22976 - 1471275 * t22978 + 356265 * t22980 - 197 + (-373963 * t22974 + 853905 * t22976 - 692055 * t22978 + 197925 * t22980 + 759) * t22967) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 2478:
            t22993 = np.sin(phi)
            t22990 = t22993 ** 2
            t22991 = t22990 ** 2
            t22982 = np.cos(phi)
            t22983 = t22982 ** 2
            t22984 = t22982 * t22983
            t22987 = t22984 ** 2
            t22985 = t22983 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.437e3) * t22991 ** 2 * (558 * t22983 + 3150 * t22984 + 546 * t22987 - 9 + (-3380 + 7917 * t22985) * t22985 + (-13182 * t22985 + 15834 * t22987 - 170) * t22982) * np.sin((3 * phi1 + 10 * phi2)) * ((1 + t22982) ** (-0.1e1 / 0.2e1)) * ((1 - t22982) ** (-0.1e1 / 0.2e1))

        if Bindx == 2479:
            t22994 = np.cos(phi)
            t22995 = t22994 ** 2
            t22996 = t22994 * t22995
            t22999 = t22996 ** 2
            t23000 = t22994 * t22999
            t23007 = t23000 ** 2
            t23005 = t22999 ** 2
            t22997 = t22995 ** 2
            t22998 = t22994 * t22997
            t23003 = t22998 ** 2
            t23001 = t22997 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (605 * t22995 - 2093 * t22996 - 6039 * t22997 + 9095 * t22998 + 25025 * t22999 - 14865 * t23000 - 51425 * t23001 + 55671 * t23003 - 30525 * t23005 + 6699 * t23007 - 11 + (6065 * t23001 + 8857 * t23003 - 10227 * t23005 + 3045 * t23007 + 123) * t22994) * np.cos((3 * phi1 + 11 * phi2))

        if Bindx == 2480:
            t23019 = np.sin(phi)
            t23015 = t23019 ** 2
            t23017 = t23019 * t23015 ** 2
            t23009 = np.cos(phi)
            t23010 = t23009 ** 2
            t23012 = t23010 ** 2
            t23011 = t23009 * t23010
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * t23017 ** 2 * (-507 * t23010 + 1239 * t23012 + 13 + (-736 + 1015 * t23011) * t23011 + (2436 * t23012 + 60) * t23009) * np.sin((3 * phi1 + 12 * phi2)) * ((1 + t23009) ** (-0.1e1 / 0.2e1)) * ((1 - t23009) ** (-0.1e1 / 0.2e1))

        if Bindx == 2481:
            t23020 = np.cos(phi)
            t23021 = t23020 ** 2
            t23022 = t23020 * t23021
            t23025 = t23022 ** 2
            t23026 = t23020 * t23025
            t23033 = t23026 ** 2
            t23031 = t23025 ** 2
            t23023 = t23021 ** 2
            t23024 = t23020 * t23023
            t23029 = t23024 ** 2
            t23027 = t23023 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.198835e6) * (31 * t23021 - 537 * t23022 - 517 * t23023 + 1715 * t23024 + 2155 * t23025 - 2445 * t23026 - 4035 * t23027 + 3901 * t23029 - 1911 * t23031 + 377 * t23033 - 1 + (1445 * t23027 + 85 * t23029 - 463 * t23031 + 145 * t23033 + 55) * t23020) * np.cos((3 * phi1 + 13 * phi2))

        if Bindx == 2482:
            t23043 = np.sin(phi)
            t23039 = t23043 ** 2
            t23040 = t23043 * t23039
            t23041 = t23040 ** 2
            t23035 = np.cos(phi)
            t23036 = t23035 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.5766215e7) * t23041 ** 2 * (2 * t23035 - 1 + (14 * t23035 + 12 + 5 * t23036) * t23036) * np.sin((3 * phi1 + 14 * phi2)) * ((1 + t23035) ** (-0.1e1 / 0.2e1)) * ((1 - t23035) ** (-0.1e1 / 0.2e1))

        if Bindx == 2483:
            t23044 = np.cos(phi)
            t23059 = -3 * t23044
            t23045 = t23044 ** 2
            t23046 = t23044 * t23045
            t23049 = t23046 ** 2
            t23050 = t23044 * t23049
            t23057 = t23050 ** 2
            t23047 = t23045 ** 2
            t23051 = t23047 ** 2
            t23048 = t23044 * t23047
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3459729e7) * np.cos((3 * phi1 + 15 * phi2)) * (-3 * t23045 - 17 * t23046 - 3 * t23047 - 45 * t23050 - 45 * t23051 + 3 * t23057 + 1 + (25 * t23051 + t23057 + 3) * t23044 + (25 + (t23059 - 17) * t23049) * t23049 + (39 + (t23059 + 39) * t23048) * t23048)

        if Bindx == 2484:
            t23060 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.60697e5) * ((1 - t23060) ** (0.19e2 / 0.2e1)) * ((1 + t23060) ** (0.11e2 / 0.2e1)) * np.sin((4 * phi1 - 15 * phi2))

        if Bindx == 2485:
            t23061 = np.cos(phi)
            t23062 = t23061 ** 2
            t23063 = t23061 * t23062
            t23066 = t23063 ** 2
            t23067 = t23061 * t23066
            t23074 = t23067 ** 2
            t23072 = t23066 ** 2
            t23064 = t23062 ** 2
            t23065 = t23061 * t23064
            t23070 = t23065 ** 2
            t23068 = t23064 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.910455e6) * (56 * t23062 - 79 * t23063 - 164 * t23064 + 365 * t23065 + 120 * t23066 - 675 * t23067 + 180 * t23068 - 376 * t23070 + 244 * t23072 - 56 * t23074 - 4 + (595 * t23068 - 221 * t23070 - t23072 + 15 * t23074 + 1) * t23061) * np.cos((4 * phi1 - 14 * phi2))

        if Bindx == 2486:
            t23086 = np.sin(phi)
            t23082 = t23086 ** 2
            t23084 = t23086 * t23082 ** 2
            t23076 = np.cos(phi)
            t23077 = t23076 ** 2
            t23079 = t23077 ** 2
            t23078 = t23076 * t23077
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t23084 ** 2 * (-391 * t23077 + 1699 * t23079 + 17 + (-416 + 435 * t23078) * t23078 + (-1508 * t23079 + 164) * t23076) * np.sin((4 * phi1 - 13 * phi2)) * ((1 + t23076) ** (-0.1e1 / 0.2e1)) * ((1 - t23076) ** (-0.1e1 / 0.2e1))

        if Bindx == 2487:
            t23087 = np.cos(phi)
            t23088 = t23087 ** 2
            t23089 = t23087 * t23088
            t23092 = t23089 ** 2
            t23093 = t23087 * t23092
            t23100 = t23093 ** 2
            t23098 = t23092 ** 2
            t23090 = t23088 ** 2
            t23091 = t23087 * t23090
            t23096 = t23091 ** 2
            t23094 = t23090 ** 2
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (320 * t23088 - 2091 * t23089 - 872 * t23090 + 9815 * t23091 - 2800 * t23092 - 20355 * t23093 + 13800 * t23094 - 20512 * t23096 + 13320 * t23098 - 3248 * t23100 - 8 + (19805 * t23094 - 7241 * t23096 - 1099 * t23098 + 1015 * t23100 + 151) * t23087) * np.cos((4 * phi1 - 12 * phi2))

        if Bindx == 2488:
            t23113 = np.sin(phi)
            t23110 = t23113 ** 2
            t23111 = t23110 ** 2
            t23102 = np.cos(phi)
            t23103 = t23102 ** 2
            t23104 = t23102 * t23103
            t23107 = t23104 ** 2
            t23105 = t23103 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t23111 ** 2 * (2928 * t23103 - 308 * t23104 + 17976 * t23107 - 61 + (-15898 + 9135 * t23105) * t23105 + (13068 * t23105 - 26796 * t23107 - 44) * t23102) * np.sin((4 * phi1 - 11 * phi2)) * ((1 + t23102) ** (-0.1e1 / 0.2e1)) * ((1 - t23102) ** (-0.1e1 / 0.2e1))

        if Bindx == 2489:
            t23114 = np.cos(phi)
            t23115 = t23114 ** 2
            t23116 = t23114 * t23115
            t23119 = t23116 ** 2
            t23120 = t23114 * t23119
            t23127 = t23120 ** 2
            t23125 = t23119 ** 2
            t23117 = t23115 ** 2
            t23118 = t23114 * t23117
            t23123 = t23118 ** 2
            t23121 = t23117 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.69e2) * (-1240 * t23115 - 14231 * t23116 + 17140 * t23117 + 78949 * t23118 - 100184 * t23119 - 183707 * t23120 + 273148 * t23121 - 371560 * t23123 + 246012 * t23125 - 63336 * t23127 + 20 + (185291 * t23121 - 44629 * t23123 - 46137 * t23125 + 23751 * t23127 + 713) * t23114) * np.cos((4 * phi1 - 10 * phi2))

        if Bindx == 2490:
            t23142 = np.sin(phi)
            t23139 = t23142 ** 2
            t23140 = t23142 * t23139
            t23129 = np.cos(phi)
            t23130 = t23129 ** 2
            t23132 = t23130 ** 2
            t23136 = t23132 ** 2
            t23131 = t23129 * t23130
            t23134 = t23131 ** 2
            t23133 = t23129 * t23132
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t23140 ** 2 * (-14559 * t23130 + 41256 * t23131 + 126086 * t23132 - 267670 * t23134 + 36855 * t23136 + 211 + (-256320 + 197925 * t23133) * t23133 + (613080 * t23134 - 475020 * t23136 - 1844) * t23129) * np.sin((4 * phi1 - 9 * phi2)) * ((1 + t23129) ** (-0.1e1 / 0.2e1)) * ((1 - t23129) ** (-0.1e1 / 0.2e1))

        if Bindx == 2491:
            t23143 = np.cos(phi)
            t23144 = t23143 ** 2
            t23145 = t23143 * t23144
            t23148 = t23145 ** 2
            t23149 = t23143 * t23148
            t23156 = t23149 ** 2
            t23154 = t23148 ** 2
            t23146 = t23144 ** 2
            t23147 = t23143 * t23146
            t23152 = t23147 ** 2
            t23150 = t23146 ** 2
            tfunc[..., c] = 0.31e2 / 0.4096e4 * np.sqrt(0.483e3) * (-3840 * t23144 - 11101 * t23145 + 51952 * t23146 + 71777 * t23147 - 275296 * t23148 - 169085 * t23149 + 718736 * t23150 - 981440 * t23152 + 670800 * t23154 - 180960 * t23156 + 48 + (110243 * t23150 + 137345 * t23152 - 224445 * t23154 + 84825 * t23156 + 441) * t23143) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 2492:
            t23172 = np.sin(phi)
            t23170 = t23172 ** 2
            t23158 = np.cos(phi)
            t23159 = t23158 ** 2
            t23161 = t23159 ** 2
            t23162 = t23158 * t23161
            t23167 = t23162 ** 2
            t23165 = t23161 ** 2
            t23160 = t23158 * t23159
            t23163 = t23160 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t23170 ** 2 * (21414 * t23159 - 270956 * t23160 - 230111 * t23161 + 2010568 * t23162 + 644345 * t23165 - 2807610 * t23167 - 249 + (533876 + 1950975 * t23163) * t23163 + (-5988280 * t23163 + 7768020 * t23165 - 3641820 * t23167 + 9828) * t23158) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t23158) ** (-0.1e1 / 0.2e1)) * ((1 - t23158) ** (-0.1e1 / 0.2e1))

        if Bindx == 2493:
            t23173 = np.cos(phi)
            t23174 = t23173 ** 2
            t23175 = t23173 * t23174
            t23178 = t23175 ** 2
            t23179 = t23173 * t23178
            t23186 = t23179 ** 2
            t23184 = t23178 ** 2
            t23176 = t23174 ** 2
            t23177 = t23173 * t23176
            t23182 = t23177 ** 2
            t23180 = t23176 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.231e3) * (-15416 * t23174 - 1509 * t23175 + 234884 * t23176 - 23089 * t23177 - 1344056 * t23178 + 336111 * t23179 + 3687084 * t23180 - 5235720 * t23182 + 3713580 * t23184 - 1040520 * t23186 + 164 + (-1383519 * t23180 + 2498145 * t23182 - 2076555 * t23184 + 650325 * t23186 + 91) * t23173) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 2494:
            t23189 = np.cos(phi)
            t23190 = t23189 ** 2
            t23191 = t23189 * t23190
            t23194 = t23191 ** 2
            t23200 = t23194 ** 2
            t23192 = t23190 ** 2
            t23193 = t23189 * t23192
            t23198 = t23193 ** 2
            t23196 = t23192 ** 2
            t23195 = t23189 * t23194
            t23188 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t23188 ** 2 * (11187 * t23190 + 207344 * t23191 - 197093 * t23192 - 1856820 * t23193 + 1399503 * t23194 - 4914387 * t23196 + 8920665 * t23198 - 7942935 * t23200 - 113 + (6999360 + 2731365 * t23195) * t23195 + (-12689100 * t23196 + 10979280 * t23198 - 3641820 * t23200 - 6436) * t23189) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t23189) ** (-0.1e1 / 0.2e1)) * ((1 - t23189) ** (-0.1e1 / 0.2e1))

        if Bindx == 2495:
            t23203 = np.cos(phi)
            t23204 = t23203 ** 2
            t23205 = t23203 * t23204
            t23208 = t23205 ** 2
            t23209 = t23203 * t23208
            t23216 = t23209 ** 2
            t23214 = t23208 ** 2
            t23206 = t23204 ** 2
            t23207 = t23203 * t23206
            t23212 = t23207 ** 2
            t23210 = t23206 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * (-155584 * t23204 + 426811 * t23205 + 2590456 * t23206 - 4448807 * t23207 - 15955632 * t23208 + 21026643 * t23209 + 46384008 * t23210 - 68856480 * t23212 + 50554920 * t23214 - 14567280 * t23216 + 1496 + (-52191117 * t23210 + 70490745 * t23212 - 48944805 * t23214 + 13656825 * t23216 - 12199) * t23203) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 2496:
            t23219 = np.cos(phi)
            t23220 = t23219 ** 2
            t23221 = t23219 * t23220
            t23224 = t23221 ** 2
            t23230 = t23224 ** 2
            t23222 = t23220 ** 2
            t23223 = t23219 * t23222
            t23228 = t23223 ** 2
            t23226 = t23222 ** 2
            t23225 = t23219 * t23224
            t23218 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t23218 ** 2 * (34133 * t23220 + 163504 * t23221 - 590315 * t23222 - 1567412 * t23223 + 3814041 * t23224 - 11739453 * t23226 + 18599295 * t23228 - 14661465 * t23230 - 319 + (6266304 + 4552275 * t23225) * t23225 + (-11916300 * t23226 + 10692240 * t23228 - 3641820 * t23230 - 4708) * t23219) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t23219) ** (-0.1e1 / 0.2e1)) * ((1 - t23219) ** (-0.1e1 / 0.2e1))

        if Bindx == 2497:
            t23233 = np.cos(phi)
            t23234 = t23233 ** 2
            t23235 = t23233 * t23234
            t23238 = t23235 ** 2
            t23239 = t23233 * t23238
            t23246 = t23239 ** 2
            t23244 = t23238 ** 2
            t23236 = t23234 ** 2
            t23237 = t23233 * t23236
            t23242 = t23237 ** 2
            t23240 = t23236 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.741e3) * (-4840 * t23234 + 41283 * t23235 + 84876 * t23236 - 434313 * t23237 - 547624 * t23238 + 2014375 * t23239 + 1656644 * t23240 - 2540120 * t23242 + 1911300 * t23244 - 560280 * t23246 + 44 + (-4801687 * t23240 + 6142265 * t23242 - 4011315 * t23244 + 1050525 * t23246 - 1133) * t23233) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 2498:
            t23262 = np.sin(phi)
            t23260 = t23262 ** 2
            t23248 = np.cos(phi)
            t23249 = t23248 ** 2
            t23251 = t23249 ** 2
            t23252 = t23248 * t23251
            t23257 = t23252 ** 2
            t23255 = t23251 ** 2
            t23250 = t23248 * t23249
            t23253 = t23250 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * t23260 ** 2 * (-1210 * t23249 - 1540 * t23250 + 20405 * t23251 + 14168 * t23252 + 309925 * t23255 - 356730 * t23257 + 11 + (-120428 + 150075 * t23253) * t23253 + (-50600 * t23253 + 75900 * t23255 - 40020 * t23257 + 44) * t23248) * np.sin((4 * phi1 - phi2)) * ((1 + t23248) ** (-0.1e1 / 0.2e1)) * ((1 - t23248) ** (-0.1e1 / 0.2e1))

        if Bindx == 2499:
            t23263 = np.cos(phi)
            t23264 = t23263 ** 2
            t23265 = t23264 ** 2
            t23266 = t23264 * t23265
            t23269 = t23266 ** 2
            t23267 = t23265 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.146965e6) * t23263 * (-4323 * t23265 + 20119 * t23266 - 47817 * t23267 - 38985 * t23269 - 11 + (60605 * t23267 + 10005 * t23269 + 407) * t23264) * np.cos((4 * phi1))

        if Bindx == 2500:
            t23285 = np.sin(phi)
            t23283 = t23285 ** 2
            t23271 = np.cos(phi)
            t23272 = t23271 ** 2
            t23274 = t23272 ** 2
            t23275 = t23271 * t23274
            t23280 = t23275 ** 2
            t23278 = t23274 ** 2
            t23273 = t23271 * t23272
            t23276 = t23273 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * t23283 ** 2 * (-1210 * t23272 + 1540 * t23273 + 20405 * t23274 - 14168 * t23275 + 309925 * t23278 - 356730 * t23280 + 11 + (-120428 + 150075 * t23276) * t23276 + (50600 * t23276 - 75900 * t23278 + 40020 * t23280 - 44) * t23271) * np.sin((4 * phi1 + phi2)) * ((1 + t23271) ** (-0.1e1 / 0.2e1)) * ((1 - t23271) ** (-0.1e1 / 0.2e1))

        if Bindx == 2501:
            t23286 = np.cos(phi)
            t23287 = t23286 ** 2
            t23288 = t23286 * t23287
            t23291 = t23288 ** 2
            t23292 = t23286 * t23291
            t23299 = t23292 ** 2
            t23297 = t23291 ** 2
            t23289 = t23287 ** 2
            t23290 = t23286 * t23289
            t23295 = t23290 ** 2
            t23293 = t23289 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.741e3) * (4840 * t23287 + 41283 * t23288 - 84876 * t23289 - 434313 * t23290 + 547624 * t23291 + 2014375 * t23292 - 1656644 * t23293 + 2540120 * t23295 - 1911300 * t23297 + 560280 * t23299 - 44 + (-4801687 * t23293 + 6142265 * t23295 - 4011315 * t23297 + 1050525 * t23299 - 1133) * t23286) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 2502:
            t23302 = np.cos(phi)
            t23303 = t23302 ** 2
            t23304 = t23302 * t23303
            t23307 = t23304 ** 2
            t23313 = t23307 ** 2
            t23305 = t23303 ** 2
            t23306 = t23302 * t23305
            t23311 = t23306 ** 2
            t23309 = t23305 ** 2
            t23308 = t23302 * t23307
            t23301 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * t23301 ** 2 * (34133 * t23303 - 163504 * t23304 - 590315 * t23305 + 1567412 * t23306 + 3814041 * t23307 - 11739453 * t23309 + 18599295 * t23311 - 14661465 * t23313 - 319 + (-6266304 + 4552275 * t23308) * t23308 + (11916300 * t23309 - 10692240 * t23311 + 3641820 * t23313 + 4708) * t23302) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t23302) ** (-0.1e1 / 0.2e1)) * ((1 - t23302) ** (-0.1e1 / 0.2e1))

        if Bindx == 2503:
            t23316 = np.cos(phi)
            t23317 = t23316 ** 2
            t23318 = t23316 * t23317
            t23321 = t23318 ** 2
            t23322 = t23316 * t23321
            t23329 = t23322 ** 2
            t23327 = t23321 ** 2
            t23319 = t23317 ** 2
            t23320 = t23316 * t23319
            t23325 = t23320 ** 2
            t23323 = t23319 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * (155584 * t23317 + 426811 * t23318 - 2590456 * t23319 - 4448807 * t23320 + 15955632 * t23321 + 21026643 * t23322 - 46384008 * t23323 + 68856480 * t23325 - 50554920 * t23327 + 14567280 * t23329 - 1496 + (-52191117 * t23323 + 70490745 * t23325 - 48944805 * t23327 + 13656825 * t23329 - 12199) * t23316) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 2504:
            t23332 = np.cos(phi)
            t23333 = t23332 ** 2
            t23334 = t23332 * t23333
            t23337 = t23334 ** 2
            t23343 = t23337 ** 2
            t23335 = t23333 ** 2
            t23336 = t23332 * t23335
            t23341 = t23336 ** 2
            t23339 = t23335 ** 2
            t23338 = t23332 * t23337
            t23331 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t23331 ** 2 * (11187 * t23333 - 207344 * t23334 - 197093 * t23335 + 1856820 * t23336 + 1399503 * t23337 - 4914387 * t23339 + 8920665 * t23341 - 7942935 * t23343 - 113 + (-6999360 + 2731365 * t23338) * t23338 + (12689100 * t23339 - 10979280 * t23341 + 3641820 * t23343 + 6436) * t23332) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t23332) ** (-0.1e1 / 0.2e1)) * ((1 - t23332) ** (-0.1e1 / 0.2e1))

        if Bindx == 2505:
            t23346 = np.cos(phi)
            t23347 = t23346 ** 2
            t23348 = t23346 * t23347
            t23351 = t23348 ** 2
            t23352 = t23346 * t23351
            t23359 = t23352 ** 2
            t23357 = t23351 ** 2
            t23349 = t23347 ** 2
            t23350 = t23346 * t23349
            t23355 = t23350 ** 2
            t23353 = t23349 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.231e3) * (15416 * t23347 - 1509 * t23348 - 234884 * t23349 - 23089 * t23350 + 1344056 * t23351 + 336111 * t23352 - 3687084 * t23353 + 5235720 * t23355 - 3713580 * t23357 + 1040520 * t23359 - 164 + (-1383519 * t23353 + 2498145 * t23355 - 2076555 * t23357 + 650325 * t23359 + 91) * t23346) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 2506:
            t23375 = np.sin(phi)
            t23373 = t23375 ** 2
            t23361 = np.cos(phi)
            t23362 = t23361 ** 2
            t23364 = t23362 ** 2
            t23365 = t23361 * t23364
            t23370 = t23365 ** 2
            t23368 = t23364 ** 2
            t23363 = t23361 * t23362
            t23366 = t23363 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t23373 ** 2 * (21414 * t23362 + 270956 * t23363 - 230111 * t23364 - 2010568 * t23365 + 644345 * t23368 - 2807610 * t23370 - 249 + (533876 + 1950975 * t23366) * t23366 + (5988280 * t23366 - 7768020 * t23368 + 3641820 * t23370 - 9828) * t23361) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t23361) ** (-0.1e1 / 0.2e1)) * ((1 - t23361) ** (-0.1e1 / 0.2e1))

        if Bindx == 2507:
            t23376 = np.cos(phi)
            t23377 = t23376 ** 2
            t23378 = t23376 * t23377
            t23381 = t23378 ** 2
            t23382 = t23376 * t23381
            t23389 = t23382 ** 2
            t23387 = t23381 ** 2
            t23379 = t23377 ** 2
            t23380 = t23376 * t23379
            t23385 = t23380 ** 2
            t23383 = t23379 ** 2
            tfunc[..., c] = 0.31e2 / 0.4096e4 * np.sqrt(0.483e3) * (3840 * t23377 - 11101 * t23378 - 51952 * t23379 + 71777 * t23380 + 275296 * t23381 - 169085 * t23382 - 718736 * t23383 + 981440 * t23385 - 670800 * t23387 + 180960 * t23389 - 48 + (110243 * t23383 + 137345 * t23385 - 224445 * t23387 + 84825 * t23389 + 441) * t23376) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 2508:
            t23404 = np.sin(phi)
            t23401 = t23404 ** 2
            t23402 = t23404 * t23401
            t23391 = np.cos(phi)
            t23392 = t23391 ** 2
            t23394 = t23392 ** 2
            t23398 = t23394 ** 2
            t23393 = t23391 * t23392
            t23396 = t23393 ** 2
            t23395 = t23391 * t23394
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t23402 ** 2 * (-14559 * t23392 - 41256 * t23393 + 126086 * t23394 - 267670 * t23396 + 36855 * t23398 + 211 + (256320 + 197925 * t23395) * t23395 + (-613080 * t23396 + 475020 * t23398 + 1844) * t23391) * np.sin((4 * phi1 + 9 * phi2)) * ((1 + t23391) ** (-0.1e1 / 0.2e1)) * ((1 - t23391) ** (-0.1e1 / 0.2e1))

        if Bindx == 2509:
            t23405 = np.cos(phi)
            t23406 = t23405 ** 2
            t23407 = t23405 * t23406
            t23410 = t23407 ** 2
            t23411 = t23405 * t23410
            t23418 = t23411 ** 2
            t23416 = t23410 ** 2
            t23408 = t23406 ** 2
            t23409 = t23405 * t23408
            t23414 = t23409 ** 2
            t23412 = t23408 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.69e2) * (1240 * t23406 - 14231 * t23407 - 17140 * t23408 + 78949 * t23409 + 100184 * t23410 - 183707 * t23411 - 273148 * t23412 + 371560 * t23414 - 246012 * t23416 + 63336 * t23418 - 20 + (185291 * t23412 - 44629 * t23414 - 46137 * t23416 + 23751 * t23418 + 713) * t23405) * np.cos((4 * phi1 + 10 * phi2))

        if Bindx == 2510:
            t23431 = np.sin(phi)
            t23428 = t23431 ** 2
            t23429 = t23428 ** 2
            t23420 = np.cos(phi)
            t23421 = t23420 ** 2
            t23422 = t23420 * t23421
            t23425 = t23422 ** 2
            t23423 = t23421 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t23429 ** 2 * (2928 * t23421 + 308 * t23422 + 17976 * t23425 - 61 + (-15898 + 9135 * t23423) * t23423 + (-13068 * t23423 + 26796 * t23425 + 44) * t23420) * np.sin((4 * phi1 + 11 * phi2)) * ((1 + t23420) ** (-0.1e1 / 0.2e1)) * ((1 - t23420) ** (-0.1e1 / 0.2e1))

        if Bindx == 2511:
            t23432 = np.cos(phi)
            t23433 = t23432 ** 2
            t23434 = t23432 * t23433
            t23437 = t23434 ** 2
            t23438 = t23432 * t23437
            t23445 = t23438 ** 2
            t23443 = t23437 ** 2
            t23435 = t23433 ** 2
            t23436 = t23432 * t23435
            t23441 = t23436 ** 2
            t23439 = t23435 ** 2
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (-320 * t23433 - 2091 * t23434 + 872 * t23435 + 9815 * t23436 + 2800 * t23437 - 20355 * t23438 - 13800 * t23439 + 20512 * t23441 - 13320 * t23443 + 3248 * t23445 + 8 + (19805 * t23439 - 7241 * t23441 - 1099 * t23443 + 1015 * t23445 + 151) * t23432) * np.cos((4 * phi1 + 12 * phi2))

        if Bindx == 2512:
            t23457 = np.sin(phi)
            t23453 = t23457 ** 2
            t23455 = t23457 * t23453 ** 2
            t23447 = np.cos(phi)
            t23448 = t23447 ** 2
            t23450 = t23448 ** 2
            t23449 = t23447 * t23448
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t23455 ** 2 * (-391 * t23448 + 1699 * t23450 + 17 + (416 + 435 * t23449) * t23449 + (1508 * t23450 - 164) * t23447) * np.sin((4 * phi1 + 13 * phi2)) * ((1 + t23447) ** (-0.1e1 / 0.2e1)) * ((1 - t23447) ** (-0.1e1 / 0.2e1))

        if Bindx == 2513:
            t23458 = np.cos(phi)
            t23459 = t23458 ** 2
            t23460 = t23458 * t23459
            t23463 = t23460 ** 2
            t23464 = t23458 * t23463
            t23471 = t23464 ** 2
            t23469 = t23463 ** 2
            t23461 = t23459 ** 2
            t23462 = t23458 * t23461
            t23467 = t23462 ** 2
            t23465 = t23461 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.910455e6) * (-56 * t23459 - 79 * t23460 + 164 * t23461 + 365 * t23462 - 120 * t23463 - 675 * t23464 - 180 * t23465 + 376 * t23467 - 244 * t23469 + 56 * t23471 + 4 + (595 * t23465 - 221 * t23467 - t23469 + 15 * t23471 + 1) * t23458) * np.cos((4 * phi1 + 14 * phi2))

        if Bindx == 2514:
            t23473 = np.cos(phi)
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.60697e5) * ((1 - t23473) ** (0.11e2 / 0.2e1)) * ((1 + t23473) ** (0.19e2 / 0.2e1)) * np.sin((4 * phi1 + 15 * phi2))

        if Bindx == 2515:
            t23474 = np.cos(phi)
            t23475 = t23474 ** 2
            t23476 = t23474 * t23475
            t23479 = t23476 ** 2
            t23480 = t23474 * t23479
            t23487 = t23480 ** 2
            t23485 = t23479 ** 2
            t23477 = t23475 ** 2
            t23478 = t23474 * t23477
            t23483 = t23478 ** 2
            t23481 = t23477 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3338335e7) * np.cos((5 * phi1 - 15 * phi2)) * (5 * t23475 + 15 * t23476 - 35 * t23477 - t23478 + 65 * t23479 - 45 * t23480 - 45 * t23481 - t23483 + 15 * t23485 - 5 * t23487 + 1 + (65 * t23481 - 35 * t23483 + 5 * t23485 + t23487 - 5) * t23474)

        if Bindx == 2516:
            t23499 = np.sin(phi)
            t23495 = t23499 ** 2
            t23497 = t23499 * t23495 ** 2
            t23489 = np.cos(phi)
            t23490 = t23489 ** 2
            t23492 = t23490 ** 2
            t23491 = t23489 * t23490
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2003001e7) * t23497 ** 2 * (5 * t23490 + 25 * t23492 - 1 + (-20 + 3 * t23491) * t23491 + (-14 * t23492 + 2) * t23489) * np.sin((5 * phi1 - 14 * phi2)) * ((1 + t23489) ** (-0.1e1 / 0.2e1)) * ((1 - t23489) ** (-0.1e1 / 0.2e1))

        if Bindx == 2517:
            t23500 = np.cos(phi)
            t23501 = t23500 ** 2
            t23502 = t23500 * t23501
            t23505 = t23502 ** 2
            t23506 = t23500 * t23505
            t23513 = t23506 ** 2
            t23511 = t23505 ** 2
            t23503 = t23501 ** 2
            t23504 = t23500 * t23503
            t23509 = t23504 ** 2
            t23507 = t23503 ** 2
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * (161 * t23501 + 17 * t23502 - 899 * t23503 + 749 * t23504 + 1749 * t23505 - 2619 * t23506 - 981 * t23507 - 829 * t23509 + 1183 * t23511 - 377 * t23513 - 7 + (3451 * t23507 - 1901 * t23509 + 239 * t23511 + 87 * t23513 - 23) * t23500) * np.cos((5 * phi1 - 13 * phi2))

        if Bindx == 2518:
            t23526 = np.sin(phi)
            t23523 = t23526 ** 2
            t23524 = t23523 ** 2
            t23515 = np.cos(phi)
            t23516 = t23515 ** 2
            t23517 = t23515 * t23516
            t23520 = t23517 ** 2
            t23518 = t23516 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3289e4) * t23524 ** 2 * (32 * t23516 + 332 * t23517 + 1064 * t23520 - 1 + (-530 + 203 * t23518) * t23518 + (-244 * t23518 - 812 * t23520 - 44) * t23515) * np.sin((5 * phi1 - 12 * phi2)) * ((1 + t23515) ** (-0.1e1 / 0.2e1)) * ((1 - t23515) ** (-0.1e1 / 0.2e1))

        if Bindx == 2519:
            t23527 = np.cos(phi)
            t23528 = t23527 ** 2
            t23529 = t23527 * t23528
            t23532 = t23529 ** 2
            t23533 = t23527 * t23532
            t23540 = t23533 ** 2
            t23538 = t23532 ** 2
            t23530 = t23528 ** 2
            t23531 = t23527 * t23530
            t23536 = t23531 ** 2
            t23534 = t23530 ** 2
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (611 * t23528 - 1787 * t23529 - 3713 * t23530 + 11353 * t23531 + 5887 * t23532 - 31319 * t23533 + 5401 * t23534 - 23287 * t23536 + 21813 * t23538 - 6699 * t23540 - 13 + (40367 * t23534 - 22033 * t23536 + 1491 * t23538 + 1827 * t23540 + 101) * t23527) * np.cos((5 * phi1 - 11 * phi2))

        if Bindx == 2520:
            t23555 = np.sin(phi)
            t23552 = t23555 ** 2
            t23553 = t23555 * t23552
            t23542 = np.cos(phi)
            t23543 = t23542 ** 2
            t23545 = t23543 ** 2
            t23549 = t23545 ** 2
            t23544 = t23542 * t23543
            t23547 = t23544 ** 2
            t23546 = t23542 * t23545
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.3795e4) * t23553 ** 2 * (-4565 * t23543 - 5640 * t23544 + 36230 * t23545 - 92690 * t23547 + 58695 * t23549 + 83 + (-1084 + 23751 * t23546) * t23546 + (63960 * t23547 - 79170 * t23549 + 430) * t23542) * np.sin((5 * phi1 - 10 * phi2)) * ((1 + t23542) ** (-0.1e1 / 0.2e1)) * ((1 - t23542) ** (-0.1e1 / 0.2e1))

        if Bindx == 2521:
            t23556 = np.cos(phi)
            t23557 = t23556 ** 2
            t23558 = t23556 * t23557
            t23561 = t23558 ** 2
            t23562 = t23556 * t23561
            t23569 = t23562 ** 2
            t23567 = t23561 ** 2
            t23559 = t23557 ** 2
            t23560 = t23556 * t23559
            t23565 = t23560 ** 2
            t23563 = t23559 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * (67 * t23557 - 18385 * t23558 + 5539 * t23559 + 116871 * t23560 - 73465 * t23561 - 321677 * t23562 + 290925 * t23563 - 502695 * t23565 + 398385 * t23567 - 118755 * t23569 - 1 + (409881 * t23563 - 195715 * t23565 - 31395 * t23567 + 39585 * t23569 + 835) * t23556) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 2522:
            t23585 = np.sin(phi)
            t23583 = t23585 ** 2
            t23571 = np.cos(phi)
            t23572 = t23571 ** 2
            t23574 = t23572 ** 2
            t23575 = t23571 * t23574
            t23580 = t23575 ** 2
            t23578 = t23574 ** 2
            t23573 = t23571 * t23572
            t23576 = t23573 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.26565e5) * t23583 ** 2 * (1110 * t23572 - 1880 * t23573 - 11645 * t23574 + 15760 * t23575 - 43225 * t23578 + 390 * t23580 - 15 + (38468 + 16965 * t23576) * t23576 + (-56560 * t23576 + 85800 * t23578 - 45240 * t23580 + 72) * t23571) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t23571) ** (-0.1e1 / 0.2e1)) * ((1 - t23571) ** (-0.1e1 / 0.2e1))

        if Bindx == 2523:
            t23586 = np.cos(phi)
            t23587 = t23586 ** 2
            t23588 = t23586 * t23587
            t23591 = t23588 ** 2
            t23592 = t23586 * t23591
            t23599 = t23592 ** 2
            t23597 = t23591 ** 2
            t23589 = t23587 ** 2
            t23590 = t23586 * t23589
            t23595 = t23590 ** 2
            t23593 = t23589 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-12201 * t23587 - 53635 * t23588 + 175399 * t23589 + 378293 * t23590 - 1003765 * t23591 - 1043639 * t23592 + 2846825 * t23593 - 4221995 * t23595 + 3126045 * t23597 - 910455 * t23599 + 147 + (1113131 * t23593 + 25415 * t23595 - 811785 * t23597 + 390195 * t23599 + 2025) * t23586) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 2524:
            t23602 = np.cos(phi)
            t23603 = t23602 ** 2
            t23604 = t23602 * t23603
            t23607 = t23604 ** 2
            t23613 = t23607 ** 2
            t23605 = t23603 ** 2
            t23606 = t23602 * t23605
            t23611 = t23606 ** 2
            t23609 = t23605 ** 2
            t23608 = t23602 * t23607
            t23601 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.105e3) * t23601 ** 2 * (-19135 * t23603 + 174004 * t23604 + 239335 * t23605 - 1466570 * t23606 - 898359 * t23607 + 834141 * t23609 + 1430715 * t23611 - 3009435 * t23613 + 215 + (5373720 + 1430715 * t23608) * t23608 + (-9707610 * t23609 + 8485620 * t23611 - 2861430 * t23613 - 5926) * t23602) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t23602) ** (-0.1e1 / 0.2e1)) * ((1 - t23602) ** (-0.1e1 / 0.2e1))

        if Bindx == 2525:
            t23616 = np.cos(phi)
            t23617 = t23616 ** 2
            t23618 = t23616 * t23617
            t23621 = t23618 ** 2
            t23622 = t23616 * t23621
            t23629 = t23622 ** 2
            t23627 = t23621 ** 2
            t23619 = t23617 ** 2
            t23620 = t23616 * t23619
            t23625 = t23620 ** 2
            t23623 = t23619 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-665095 * t23617 - 259535 * t23618 + 10269565 * t23619 + 689989 * t23620 - 59706675 * t23621 + 8516805 * t23622 + 166771275 * t23623 - 241510005 * t23625 + 174892575 * t23627 - 50075025 * t23629 + 7001 + (-50333085 * t23623 + 102863475 * t23625 - 91516425 * t23627 + 30045015 * t23629 + 10145) * t23616) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 2526:
            t23632 = np.cos(phi)
            t23633 = t23632 ** 2
            t23634 = t23632 * t23633
            t23637 = t23634 ** 2
            t23643 = t23637 ** 2
            t23635 = t23633 ** 2
            t23636 = t23632 * t23635
            t23641 = t23636 ** 2
            t23639 = t23635 ** 2
            t23638 = t23632 * t23637
            t23631 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t23631 ** 2 * (11187 * t23633 + 207344 * t23634 - 197093 * t23635 - 1856820 * t23636 + 1399503 * t23637 - 4914387 * t23639 + 8920665 * t23641 - 7942935 * t23643 - 113 + (6999360 + 2731365 * t23638) * t23638 + (-12689100 * t23639 + 10979280 * t23641 - 3641820 * t23643 - 6436) * t23632) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t23632) ** (-0.1e1 / 0.2e1)) * ((1 - t23632) ** (-0.1e1 / 0.2e1))

        if Bindx == 2527:
            t23646 = np.cos(phi)
            t23647 = t23646 ** 2
            t23648 = t23646 * t23647
            t23651 = t23648 ** 2
            t23652 = t23646 * t23651
            t23661 = 910455 * t23652 ** 2
            t23657 = t23651 ** 2
            t23649 = t23647 ** 2
            t23650 = t23646 * t23649
            t23655 = t23650 ** 2
            t23653 = t23649 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3135e4) * (-10609 * t23647 + 33393 * t23648 + 174691 * t23649 - 341315 * t23650 - 1062565 * t23651 + 1573797 * t23652 + 3046005 * t23653 - 4452915 * t23655 + 3215745 * t23657 - t23661 + 103 + (-3798933 * t23653 + 4982835 * t23655 - 3359265 * t23657 - 967 + t23661) * t23646) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 2528:
            t23676 = np.sin(phi)
            t23674 = t23676 ** 2
            t23662 = np.cos(phi)
            t23663 = t23662 ** 2
            t23665 = t23663 ** 2
            t23666 = t23662 * t23665
            t23671 = t23666 ** 2
            t23669 = t23665 ** 2
            t23664 = t23662 * t23663
            t23667 = t23664 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.40755e5) * t23674 ** 2 * (-1976 * t23663 - 7070 * t23664 + 31675 * t23665 + 61180 * t23666 + 445625 * t23669 - 502320 * t23671 + 19 + (-179032 + 210105 * t23667) * t23667 + (-204700 * t23667 + 286350 * t23669 - 140070 * t23671 + 214) * t23662) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t23662) ** (-0.1e1 / 0.2e1)) * ((1 - t23662) ** (-0.1e1 / 0.2e1))

        if Bindx == 2529:
            t23677 = np.cos(phi)
            t23678 = t23677 ** 2
            t23679 = t23677 * t23678
            t23682 = t23679 ** 2
            t23683 = t23677 * t23682
            t23690 = t23683 ** 2
            t23688 = t23682 ** 2
            t23680 = t23678 ** 2
            t23681 = t23677 * t23680
            t23686 = t23681 ** 2
            t23684 = t23680 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4849845e7) * (-107 * t23678 + 1521 * t23679 + 1821 * t23680 - 15471 * t23681 - 11375 * t23682 + 69101 * t23683 + 33235 * t23684 - 49105 * t23686 + 35535 * t23688 - 10005 * t23690 + 1 + (-158033 * t23684 + 193315 * t23686 - 120405 * t23688 + 30015 * t23690 - 43) * t23677) * np.cos((5 * phi1 - phi2))

        if Bindx == 2530:
            t23701 = np.sin(phi)
            t23698 = t23701 ** 2
            t23699 = t23701 * t23698
            t23692 = np.cos(phi)
            t23693 = t23692 ** 2
            t23694 = t23693 ** 2
            t23696 = t23694 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.323323e6) * t23699 ** 2 * (-1610 * t23694 - 15525 * t23696 - 1 + (8050 * t23694 + 10005 * t23696 + 105) * t23693) * np.sin((5 * phi1)) * ((1 + t23692) ** (-0.1e1 / 0.2e1)) * ((1 - t23692) ** (-0.1e1 / 0.2e1))

        if Bindx == 2531:
            t23702 = np.cos(phi)
            t23703 = t23702 ** 2
            t23704 = t23702 * t23703
            t23707 = t23704 ** 2
            t23708 = t23702 * t23707
            t23715 = t23708 ** 2
            t23713 = t23707 ** 2
            t23705 = t23703 ** 2
            t23706 = t23702 * t23705
            t23711 = t23706 ** 2
            t23709 = t23705 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4849845e7) * (107 * t23703 + 1521 * t23704 - 1821 * t23705 - 15471 * t23706 + 11375 * t23707 + 69101 * t23708 - 33235 * t23709 + 49105 * t23711 - 35535 * t23713 + 10005 * t23715 - 1 + (-158033 * t23709 + 193315 * t23711 - 120405 * t23713 + 30015 * t23715 - 43) * t23702) * np.cos((5 * phi1 + phi2))

        if Bindx == 2532:
            t23731 = np.sin(phi)
            t23729 = t23731 ** 2
            t23717 = np.cos(phi)
            t23718 = t23717 ** 2
            t23720 = t23718 ** 2
            t23721 = t23717 * t23720
            t23726 = t23721 ** 2
            t23724 = t23720 ** 2
            t23719 = t23717 * t23718
            t23722 = t23719 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.40755e5) * t23729 ** 2 * (-1976 * t23718 + 7070 * t23719 + 31675 * t23720 - 61180 * t23721 + 445625 * t23724 - 502320 * t23726 + 19 + (-179032 + 210105 * t23722) * t23722 + (204700 * t23722 - 286350 * t23724 + 140070 * t23726 - 214) * t23717) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t23717) ** (-0.1e1 / 0.2e1)) * ((1 - t23717) ** (-0.1e1 / 0.2e1))

        if Bindx == 2533:
            t23732 = np.cos(phi)
            t23733 = t23732 ** 2
            t23734 = t23732 * t23733
            t23737 = t23734 ** 2
            t23738 = t23732 * t23737
            t23747 = 910455 * t23738 ** 2
            t23743 = t23737 ** 2
            t23735 = t23733 ** 2
            t23736 = t23732 * t23735
            t23741 = t23736 ** 2
            t23739 = t23735 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3135e4) * (10609 * t23733 + 33393 * t23734 - 174691 * t23735 - 341315 * t23736 + 1062565 * t23737 + 1573797 * t23738 - 3046005 * t23739 + 4452915 * t23741 - 3215745 * t23743 + t23747 - 103 + (-3798933 * t23739 + 4982835 * t23741 - 3359265 * t23743 + t23747 - 967) * t23732) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 2534:
            t23749 = np.cos(phi)
            t23750 = t23749 ** 2
            t23751 = t23749 * t23750
            t23754 = t23751 ** 2
            t23760 = t23754 ** 2
            t23752 = t23750 ** 2
            t23753 = t23749 * t23752
            t23758 = t23753 ** 2
            t23756 = t23752 ** 2
            t23755 = t23749 * t23754
            t23748 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t23748 ** 2 * (11187 * t23750 - 207344 * t23751 - 197093 * t23752 + 1856820 * t23753 + 1399503 * t23754 - 4914387 * t23756 + 8920665 * t23758 - 7942935 * t23760 - 113 + (-6999360 + 2731365 * t23755) * t23755 + (12689100 * t23756 - 10979280 * t23758 + 3641820 * t23760 + 6436) * t23749) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t23749) ** (-0.1e1 / 0.2e1)) * ((1 - t23749) ** (-0.1e1 / 0.2e1))

        if Bindx == 2535:
            t23763 = np.cos(phi)
            t23764 = t23763 ** 2
            t23765 = t23763 * t23764
            t23768 = t23765 ** 2
            t23769 = t23763 * t23768
            t23776 = t23769 ** 2
            t23774 = t23768 ** 2
            t23766 = t23764 ** 2
            t23767 = t23763 * t23766
            t23772 = t23767 ** 2
            t23770 = t23766 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (665095 * t23764 - 259535 * t23765 - 10269565 * t23766 + 689989 * t23767 + 59706675 * t23768 + 8516805 * t23769 - 166771275 * t23770 + 241510005 * t23772 - 174892575 * t23774 + 50075025 * t23776 - 7001 + (-50333085 * t23770 + 102863475 * t23772 - 91516425 * t23774 + 30045015 * t23776 + 10145) * t23763) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 2536:
            t23779 = np.cos(phi)
            t23780 = t23779 ** 2
            t23781 = t23779 * t23780
            t23784 = t23781 ** 2
            t23790 = t23784 ** 2
            t23782 = t23780 ** 2
            t23783 = t23779 * t23782
            t23788 = t23783 ** 2
            t23786 = t23782 ** 2
            t23785 = t23779 * t23784
            t23778 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.105e3) * t23778 ** 2 * (-19135 * t23780 - 174004 * t23781 + 239335 * t23782 + 1466570 * t23783 - 898359 * t23784 + 834141 * t23786 + 1430715 * t23788 - 3009435 * t23790 + 215 + (-5373720 + 1430715 * t23785) * t23785 + (9707610 * t23786 - 8485620 * t23788 + 2861430 * t23790 + 5926) * t23779) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t23779) ** (-0.1e1 / 0.2e1)) * ((1 - t23779) ** (-0.1e1 / 0.2e1))

        if Bindx == 2537:
            t23793 = np.cos(phi)
            t23794 = t23793 ** 2
            t23795 = t23793 * t23794
            t23798 = t23795 ** 2
            t23799 = t23793 * t23798
            t23806 = t23799 ** 2
            t23804 = t23798 ** 2
            t23796 = t23794 ** 2
            t23797 = t23793 * t23796
            t23802 = t23797 ** 2
            t23800 = t23796 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (12201 * t23794 - 53635 * t23795 - 175399 * t23796 + 378293 * t23797 + 1003765 * t23798 - 1043639 * t23799 - 2846825 * t23800 + 4221995 * t23802 - 3126045 * t23804 + 910455 * t23806 - 147 + (1113131 * t23800 + 25415 * t23802 - 811785 * t23804 + 390195 * t23806 + 2025) * t23793) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 2538:
            t23822 = np.sin(phi)
            t23820 = t23822 ** 2
            t23808 = np.cos(phi)
            t23809 = t23808 ** 2
            t23811 = t23809 ** 2
            t23812 = t23808 * t23811
            t23817 = t23812 ** 2
            t23815 = t23811 ** 2
            t23810 = t23808 * t23809
            t23813 = t23810 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.26565e5) * t23820 ** 2 * (1110 * t23809 + 1880 * t23810 - 11645 * t23811 - 15760 * t23812 - 43225 * t23815 + 390 * t23817 - 15 + (38468 + 16965 * t23813) * t23813 + (56560 * t23813 - 85800 * t23815 + 45240 * t23817 - 72) * t23808) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t23808) ** (-0.1e1 / 0.2e1)) * ((1 - t23808) ** (-0.1e1 / 0.2e1))

        if Bindx == 2539:
            t23823 = np.cos(phi)
            t23824 = t23823 ** 2
            t23825 = t23823 * t23824
            t23828 = t23825 ** 2
            t23829 = t23823 * t23828
            t23836 = t23829 ** 2
            t23834 = t23828 ** 2
            t23826 = t23824 ** 2
            t23827 = t23823 * t23826
            t23832 = t23827 ** 2
            t23830 = t23826 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * (-67 * t23824 - 18385 * t23825 - 5539 * t23826 + 116871 * t23827 + 73465 * t23828 - 321677 * t23829 - 290925 * t23830 + 502695 * t23832 - 398385 * t23834 + 118755 * t23836 + 1 + (409881 * t23830 - 195715 * t23832 - 31395 * t23834 + 39585 * t23836 + 835) * t23823) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 2540:
            t23851 = np.sin(phi)
            t23848 = t23851 ** 2
            t23849 = t23851 * t23848
            t23838 = np.cos(phi)
            t23839 = t23838 ** 2
            t23841 = t23839 ** 2
            t23845 = t23841 ** 2
            t23840 = t23838 * t23839
            t23843 = t23840 ** 2
            t23842 = t23838 * t23841
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.3795e4) * t23849 ** 2 * (-4565 * t23839 + 5640 * t23840 + 36230 * t23841 - 92690 * t23843 + 58695 * t23845 + 83 + (1084 + 23751 * t23842) * t23842 + (-63960 * t23843 + 79170 * t23845 - 430) * t23838) * np.sin((5 * phi1 + 10 * phi2)) * ((1 + t23838) ** (-0.1e1 / 0.2e1)) * ((1 - t23838) ** (-0.1e1 / 0.2e1))

        if Bindx == 2541:
            t23852 = np.cos(phi)
            t23853 = t23852 ** 2
            t23854 = t23852 * t23853
            t23857 = t23854 ** 2
            t23858 = t23852 * t23857
            t23865 = t23858 ** 2
            t23863 = t23857 ** 2
            t23855 = t23853 ** 2
            t23856 = t23852 * t23855
            t23861 = t23856 ** 2
            t23859 = t23855 ** 2
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (-611 * t23853 - 1787 * t23854 + 3713 * t23855 + 11353 * t23856 - 5887 * t23857 - 31319 * t23858 - 5401 * t23859 + 23287 * t23861 - 21813 * t23863 + 6699 * t23865 + 13 + (40367 * t23859 - 22033 * t23861 + 1491 * t23863 + 1827 * t23865 + 101) * t23852) * np.cos((5 * phi1 + 11 * phi2))

        if Bindx == 2542:
            t23878 = np.sin(phi)
            t23875 = t23878 ** 2
            t23876 = t23875 ** 2
            t23867 = np.cos(phi)
            t23868 = t23867 ** 2
            t23869 = t23867 * t23868
            t23872 = t23869 ** 2
            t23870 = t23868 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3289e4) * t23876 ** 2 * (32 * t23868 - 332 * t23869 + 1064 * t23872 - 1 + (-530 + 203 * t23870) * t23870 + (244 * t23870 + 812 * t23872 + 44) * t23867) * np.sin((5 * phi1 + 12 * phi2)) * ((1 + t23867) ** (-0.1e1 / 0.2e1)) * ((1 - t23867) ** (-0.1e1 / 0.2e1))

        if Bindx == 2543:
            t23879 = np.cos(phi)
            t23880 = t23879 ** 2
            t23881 = t23879 * t23880
            t23884 = t23881 ** 2
            t23885 = t23879 * t23884
            t23892 = t23885 ** 2
            t23890 = t23884 ** 2
            t23882 = t23880 ** 2
            t23883 = t23879 * t23882
            t23888 = t23883 ** 2
            t23886 = t23882 ** 2
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * (-161 * t23880 + 17 * t23881 + 899 * t23882 + 749 * t23883 - 1749 * t23884 - 2619 * t23885 + 981 * t23886 + 829 * t23888 - 1183 * t23890 + 377 * t23892 + 7 + (3451 * t23886 - 1901 * t23888 + 239 * t23890 + 87 * t23892 - 23) * t23879) * np.cos((5 * phi1 + 13 * phi2))

        if Bindx == 2544:
            t23904 = np.sin(phi)
            t23900 = t23904 ** 2
            t23902 = t23904 * t23900 ** 2
            t23894 = np.cos(phi)
            t23895 = t23894 ** 2
            t23897 = t23895 ** 2
            t23896 = t23894 * t23895
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2003001e7) * t23902 ** 2 * (5 * t23895 + 25 * t23897 - 1 + (20 + 3 * t23896) * t23896 + (14 * t23897 - 2) * t23894) * np.sin((5 * phi1 + 14 * phi2)) * ((1 + t23894) ** (-0.1e1 / 0.2e1)) * ((1 - t23894) ** (-0.1e1 / 0.2e1))

        if Bindx == 2545:
            t23905 = np.cos(phi)
            t23906 = t23905 ** 2
            t23907 = t23905 * t23906
            t23910 = t23907 ** 2
            t23911 = t23905 * t23910
            t23918 = t23911 ** 2
            t23916 = t23910 ** 2
            t23908 = t23906 ** 2
            t23909 = t23905 * t23908
            t23914 = t23909 ** 2
            t23912 = t23908 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3338335e7) * np.cos((5 * phi1 + 15 * phi2)) * (-5 * t23906 + 15 * t23907 + 35 * t23908 - t23909 - 65 * t23910 - 45 * t23911 + 45 * t23912 + t23914 - 15 * t23916 + 5 * t23918 - 1 + (65 * t23912 - 35 * t23914 + 5 * t23916 + t23918 - 5) * t23905)

        if Bindx == 2546:
            t23920 = np.cos(phi)
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.286143e6) * ((1 - t23920) ** (0.21e2 / 0.2e1)) * ((1 + t23920) ** (0.9e1 / 0.2e1)) * np.sin((6 * phi1 - 15 * phi2))

        if Bindx == 2547:
            t23921 = np.cos(phi)
            t23922 = t23921 ** 2
            t23923 = t23921 * t23922
            t23926 = t23923 ** 2
            t23927 = t23921 * t23926
            t23934 = t23927 ** 2
            t23932 = t23926 ** 2
            t23924 = t23922 ** 2
            t23925 = t23921 * t23924
            t23930 = t23925 ** 2
            t23928 = t23924 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.476905e6) * (-8 * t23922 + 63 * t23923 - 58 * t23924 - 119 * t23925 + 244 * t23926 - 9 * t23927 - 306 * t23928 + 112 * t23930 + 42 * t23932 - 28 * t23934 + 2 + (211 * t23928 - 187 * t23930 + 43 * t23932 + 5 * t23934 - 7) * t23921) * np.cos((6 * phi1 - 14 * phi2))

        if Bindx == 2548:
            t23947 = np.sin(phi)
            t23944 = t23947 ** 2
            t23945 = t23944 ** 2
            t23936 = np.cos(phi)
            t23937 = t23936 ** 2
            t23938 = t23936 * t23937
            t23941 = t23938 ** 2
            t23939 = t23937 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.16445e5) * t23945 ** 2 * (-266 * t23937 + 490 * t23938 + 1498 * t23941 + 19 + (140 + 145 * t23939) * t23939 + (-1274 * t23939 - 754 * t23941 + 2) * t23936) * np.sin((6 * phi1 - 13 * phi2)) * ((1 + t23936) ** (-0.1e1 / 0.2e1)) * ((1 - t23936) ** (-0.1e1 / 0.2e1))

        if Bindx == 2549:
            t23948 = np.cos(phi)
            t23949 = t23948 ** 2
            t23950 = t23948 * t23949
            t23953 = t23950 ** 2
            t23954 = t23948 * t23953
            t23961 = t23954 ** 2
            t23959 = t23953 ** 2
            t23951 = t23949 ** 2
            t23952 = t23948 * t23951
            t23957 = t23952 ** 2
            t23955 = t23951 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.345345e6) * (120 * t23949 + 223 * t23950 - 996 * t23951 + 3 * t23952 + 2936 * t23953 - 2205 * t23954 - 3276 * t23955 + 456 * t23957 + 1460 * t23959 - 696 * t23961 - 4 + (4717 * t23955 - 3603 * t23957 + 753 * t23959 + 145 * t23961 - 33) * t23948) * np.cos((6 * phi1 - 12 * phi2))

        if Bindx == 2550:
            t23976 = np.sin(phi)
            t23973 = t23976 ** 2
            t23974 = t23976 * t23973
            t23963 = np.cos(phi)
            t23964 = t23963 ** 2
            t23966 = t23964 ** 2
            t23970 = t23966 ** 2
            t23965 = t23963 * t23964
            t23968 = t23965 ** 2
            t23967 = t23963 * t23966
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.115115e6) * t23974 ** 2 * (39 * t23964 - 616 * t23965 + 414 * t23966 - 2554 * t23968 + 2691 * t23970 - 1 + (1716 + 435 * t23967) * t23967 + (-264 * t23968 - 1914 * t23970 + 54) * t23963) * np.sin((6 * phi1 - 11 * phi2)) * ((1 + t23963) ** (-0.1e1 / 0.2e1)) * ((1 - t23963) ** (-0.1e1 / 0.2e1))

        if Bindx == 2551:
            t23977 = np.cos(phi)
            t23978 = t23977 ** 2
            t23979 = t23977 * t23978
            t23982 = t23979 ** 2
            t23983 = t23977 * t23982
            t23990 = t23983 ** 2
            t23988 = t23982 ** 2
            t23980 = t23978 ** 2
            t23981 = t23977 * t23980
            t23986 = t23981 ** 2
            t23984 = t23980 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (312 * t23978 - 511 * t23979 - 2386 * t23980 + 4343 * t23981 + 6116 * t23982 - 15175 * t23983 - 3562 * t23984 - 7728 * t23986 + 11778 * t23988 - 4524 * t23990 - 6 + (24125 * t23984 - 16549 * t23986 + 2613 * t23988 + 1131 * t23990 + 23) * t23977) * np.cos((6 * phi1 - 10 * phi2))

        if Bindx == 2552:
            t24006 = np.sin(phi)
            t24004 = t24006 ** 2
            t23992 = np.cos(phi)
            t23993 = t23992 ** 2
            t23995 = t23993 ** 2
            t23996 = t23992 * t23995
            t24001 = t23996 ** 2
            t23999 = t23995 ** 2
            t23994 = t23992 * t23993
            t23997 = t23994 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.5313e4) * t24004 ** 2 * (3540 * t23993 + 9130 * t23994 - 35535 * t23995 - 25236 * t23996 - 194025 * t23999 + 72540 * t24001 - 59 + (133456 + 28275 * t23997) * t23997 + (-24300 * t23997 + 134550 * t23999 - 101790 * t24001 - 546) * t23992) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t23992) ** (-0.1e1 / 0.2e1)) * ((1 - t23992) ** (-0.1e1 / 0.2e1))

        if Bindx == 2553:
            t24007 = np.cos(phi)
            t24008 = t24007 ** 2
            t24009 = t24007 * t24008
            t24012 = t24009 ** 2
            t24013 = t24007 * t24012
            t24020 = t24013 ** 2
            t24018 = t24012 ** 2
            t24010 = t24008 ** 2
            t24011 = t24007 * t24010
            t24016 = t24011 ** 2
            t24014 = t24010 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (560 * t24008 - 10731 * t24009 - 2632 * t24010 + 73633 * t24011 - 20496 * t24012 - 222055 * t24013 + 140776 * t24014 - 300720 * t24016 + 273000 * t24018 - 90480 * t24020 - 8 + (316967 * t24014 - 185185 * t24016 - 1365 * t24018 + 28275 * t24020 + 461) * t24007) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 2554:
            t24023 = np.cos(phi)
            t24024 = t24023 ** 2
            t24025 = t24023 * t24024
            t24028 = t24025 ** 2
            t24034 = t24028 ** 2
            t24026 = t24024 ** 2
            t24027 = t24023 * t24026
            t24032 = t24027 ** 2
            t24030 = t24026 ** 2
            t24029 = t24023 * t24028
            t24022 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.11e2) * t24022 ** 2 * (-39193 * t24024 + 46676 * t24025 + 462805 * t24026 - 486514 * t24027 - 1925833 * t24028 + 3413039 * t24030 - 2208115 * t24032 - 345345 * t24034 + 509 + (2258968 + 650325 * t24029) * t24029 + (-4902450 * t24030 + 4897620 * t24032 - 1820910 * t24034 - 1582) * t24023) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t24023) ** (-0.1e1 / 0.2e1)) * ((1 - t24023) ** (-0.1e1 / 0.2e1))

        if Bindx == 2555:
            t24037 = np.cos(phi)
            t24038 = t24037 ** 2
            t24039 = t24037 * t24038
            t24042 = t24039 ** 2
            t24043 = t24037 * t24042
            t24050 = t24043 ** 2
            t24048 = t24042 ** 2
            t24040 = t24038 ** 2
            t24041 = t24037 * t24040
            t24046 = t24041 ** 2
            t24044 = t24040 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (-194712 * t24038 - 981547 * t24039 + 2861418 * t24040 + 7094787 * t24041 - 16846228 * t24042 - 20356083 * t24043 + 49242402 * t24044 - 75232080 * t24046 + 57327270 * t24048 - 17168580 * t24050 + 2318 + (23637537 * t24044 - 3108105 * t24046 - 13468455 * t24048 + 7153575 * t24050 + 36483) * t24037) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 2556:
            t24053 = np.cos(phi)
            t24054 = t24053 ** 2
            t24055 = t24053 * t24054
            t24058 = t24055 ** 2
            t24064 = t24058 ** 2
            t24056 = t24054 ** 2
            t24057 = t24053 * t24056
            t24062 = t24057 ** 2
            t24060 = t24056 ** 2
            t24059 = t24053 * t24058
            t24052 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.105e3) * t24052 ** 2 * (-19135 * t24054 + 174004 * t24055 + 239335 * t24056 - 1466570 * t24057 - 898359 * t24058 + 834141 * t24060 + 1430715 * t24062 - 3009435 * t24064 + 215 + (5373720 + 1430715 * t24059) * t24059 + (-9707610 * t24060 + 8485620 * t24062 - 2861430 * t24064 - 5926) * t24053) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t24053) ** (-0.1e1 / 0.2e1)) * ((1 - t24053) ** (-0.1e1 / 0.2e1))

        if Bindx == 2557:
            t24067 = np.cos(phi)
            t24068 = t24067 ** 2
            t24069 = t24067 * t24068
            t24072 = t24069 ** 2
            t24073 = t24067 * t24072
            t24080 = t24073 ** 2
            t24078 = t24072 ** 2
            t24070 = t24068 ** 2
            t24071 = t24067 * t24070
            t24076 = t24071 ** 2
            t24074 = t24070 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.231e3) * (-15416 * t24068 - 1509 * t24069 + 234884 * t24070 - 23089 * t24071 - 1344056 * t24072 + 336111 * t24073 + 3687084 * t24074 - 5235720 * t24076 + 3713580 * t24078 - 1040520 * t24080 + 164 + (-1383519 * t24074 + 2498145 * t24076 - 2076555 * t24078 + 650325 * t24080 + 91) * t24067) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 2558:
            t24096 = np.sin(phi)
            t24094 = t24096 ** 2
            t24082 = np.cos(phi)
            t24083 = t24082 ** 2
            t24085 = t24083 ** 2
            t24086 = t24082 * t24085
            t24091 = t24086 ** 2
            t24089 = t24085 ** 2
            t24084 = t24082 * t24083
            t24087 = t24084 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1463e4) * t24094 ** 2 * (-4512 * t24083 - 51422 * t24084 + 70623 * t24085 + 411516 * t24086 + 1116765 * t24089 - 1399320 * t24091 + 47 + (-413448 + 650325 * t24087) * t24087 + (-1279260 * t24087 + 1677390 * t24089 - 780390 * t24091 + 1686) * t24082) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t24082) ** (-0.1e1 / 0.2e1)) * ((1 - t24082) ** (-0.1e1 / 0.2e1))

        if Bindx == 2559:
            t24097 = np.cos(phi)
            t24098 = t24097 ** 2
            t24099 = t24097 * t24098
            t24102 = t24099 ** 2
            t24103 = t24097 * t24102
            t24110 = t24103 ** 2
            t24108 = t24102 ** 2
            t24100 = t24098 ** 2
            t24101 = t24097 * t24100
            t24106 = t24101 ** 2
            t24104 = t24100 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.19019e5) * (-600 * t24098 + 2763 * t24099 + 9554 * t24100 - 26851 * t24101 - 55972 * t24102 + 116355 * t24103 + 153962 * t24104 - 215280 * t24106 + 148350 * t24108 - 40020 * t24110 + 6 + (-261809 * t24104 + 318665 * t24106 - 199065 * t24108 + 50025 * t24110 - 83) * t24097) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 2560:
            t24125 = np.sin(phi)
            t24122 = t24125 ** 2
            t24123 = t24125 * t24122
            t24112 = np.cos(phi)
            t24113 = t24112 ** 2
            t24115 = t24113 ** 2
            t24119 = t24115 ** 2
            t24114 = t24112 * t24113
            t24117 = t24114 ** 2
            t24116 = t24112 * t24115
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.46189e5) * t24123 ** 2 * (693 * t24113 + 1288 * t24114 - 9982 * t24115 + 46690 * t24117 - 83835 * t24119 - 7 + (-9660 + 50025 * t24116) * t24116 + (24840 * t24117 - 20010 * t24119 - 42) * t24112) * np.sin((6 * phi1 - phi2)) * ((1 + t24112) ** (-0.1e1 / 0.2e1)) * ((1 - t24112) ** (-0.1e1 / 0.2e1))

        if Bindx == 2561:
            t24126 = np.cos(phi)
            t24127 = t24126 ** 2
            t24128 = t24127 ** 2
            t24129 = t24127 * t24128
            t24132 = t24129 ** 2
            t24130 = t24128 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t24126 * np.sqrt(0.692835e6) * (-6825 * t24128 + 28863 * t24129 - 62399 * t24130 - 42435 * t24132 - 21 + (72105 * t24130 + 10005 * t24132 + 707) * t24127) * np.cos((6 * phi1))

        if Bindx == 2562:
            t24147 = np.sin(phi)
            t24144 = t24147 ** 2
            t24145 = t24147 * t24144
            t24134 = np.cos(phi)
            t24135 = t24134 ** 2
            t24137 = t24135 ** 2
            t24141 = t24137 ** 2
            t24136 = t24134 * t24135
            t24139 = t24136 ** 2
            t24138 = t24134 * t24137
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.46189e5) * t24145 ** 2 * (693 * t24135 - 1288 * t24136 - 9982 * t24137 + 46690 * t24139 - 83835 * t24141 - 7 + (9660 + 50025 * t24138) * t24138 + (-24840 * t24139 + 20010 * t24141 + 42) * t24134) * np.sin((6 * phi1 + phi2)) * ((1 + t24134) ** (-0.1e1 / 0.2e1)) * ((1 - t24134) ** (-0.1e1 / 0.2e1))

        if Bindx == 2563:
            t24148 = np.cos(phi)
            t24149 = t24148 ** 2
            t24150 = t24148 * t24149
            t24153 = t24150 ** 2
            t24154 = t24148 * t24153
            t24161 = t24154 ** 2
            t24159 = t24153 ** 2
            t24151 = t24149 ** 2
            t24152 = t24148 * t24151
            t24157 = t24152 ** 2
            t24155 = t24151 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.19019e5) * (600 * t24149 + 2763 * t24150 - 9554 * t24151 - 26851 * t24152 + 55972 * t24153 + 116355 * t24154 - 153962 * t24155 + 215280 * t24157 - 148350 * t24159 + 40020 * t24161 - 6 + (-261809 * t24155 + 318665 * t24157 - 199065 * t24159 + 50025 * t24161 - 83) * t24148) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 2564:
            t24177 = np.sin(phi)
            t24175 = t24177 ** 2
            t24163 = np.cos(phi)
            t24164 = t24163 ** 2
            t24166 = t24164 ** 2
            t24167 = t24163 * t24166
            t24172 = t24167 ** 2
            t24170 = t24166 ** 2
            t24165 = t24163 * t24164
            t24168 = t24165 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1463e4) * t24175 ** 2 * (-4512 * t24164 + 51422 * t24165 + 70623 * t24166 - 411516 * t24167 + 1116765 * t24170 - 1399320 * t24172 + 47 + (-413448 + 650325 * t24168) * t24168 + (1279260 * t24168 - 1677390 * t24170 + 780390 * t24172 - 1686) * t24163) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t24163) ** (-0.1e1 / 0.2e1)) * ((1 - t24163) ** (-0.1e1 / 0.2e1))

        if Bindx == 2565:
            t24178 = np.cos(phi)
            t24179 = t24178 ** 2
            t24180 = t24178 * t24179
            t24183 = t24180 ** 2
            t24184 = t24178 * t24183
            t24191 = t24184 ** 2
            t24189 = t24183 ** 2
            t24181 = t24179 ** 2
            t24182 = t24178 * t24181
            t24187 = t24182 ** 2
            t24185 = t24181 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.231e3) * (15416 * t24179 - 1509 * t24180 - 234884 * t24181 - 23089 * t24182 + 1344056 * t24183 + 336111 * t24184 - 3687084 * t24185 + 5235720 * t24187 - 3713580 * t24189 + 1040520 * t24191 - 164 + (-1383519 * t24185 + 2498145 * t24187 - 2076555 * t24189 + 650325 * t24191 + 91) * t24178) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 2566:
            t24194 = np.cos(phi)
            t24195 = t24194 ** 2
            t24196 = t24194 * t24195
            t24199 = t24196 ** 2
            t24205 = t24199 ** 2
            t24197 = t24195 ** 2
            t24198 = t24194 * t24197
            t24203 = t24198 ** 2
            t24201 = t24197 ** 2
            t24200 = t24194 * t24199
            t24193 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.105e3) * t24193 ** 2 * (-19135 * t24195 - 174004 * t24196 + 239335 * t24197 + 1466570 * t24198 - 898359 * t24199 + 834141 * t24201 + 1430715 * t24203 - 3009435 * t24205 + 215 + (-5373720 + 1430715 * t24200) * t24200 + (9707610 * t24201 - 8485620 * t24203 + 2861430 * t24205 + 5926) * t24194) * np.sin((6 * phi1 + 5 * phi2)) * ((1 - t24194) ** (-0.1e1 / 0.2e1)) * ((1 + t24194) ** (-0.1e1 / 0.2e1))

        if Bindx == 2567:
            t24208 = np.cos(phi)
            t24209 = t24208 ** 2
            t24210 = t24208 * t24209
            t24213 = t24210 ** 2
            t24214 = t24208 * t24213
            t24221 = t24214 ** 2
            t24219 = t24213 ** 2
            t24211 = t24209 ** 2
            t24212 = t24208 * t24211
            t24217 = t24212 ** 2
            t24215 = t24211 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (194712 * t24209 - 981547 * t24210 - 2861418 * t24211 + 7094787 * t24212 + 16846228 * t24213 - 20356083 * t24214 - 49242402 * t24215 + 75232080 * t24217 - 57327270 * t24219 + 17168580 * t24221 - 2318 + (23637537 * t24215 - 3108105 * t24217 - 13468455 * t24219 + 7153575 * t24221 + 36483) * t24208) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 2568:
            t24224 = np.cos(phi)
            t24225 = t24224 ** 2
            t24226 = t24224 * t24225
            t24229 = t24226 ** 2
            t24235 = t24229 ** 2
            t24227 = t24225 ** 2
            t24228 = t24224 * t24227
            t24233 = t24228 ** 2
            t24231 = t24227 ** 2
            t24230 = t24224 * t24229
            t24223 = np.sin(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.11e2) * t24223 ** 2 * (-39193 * t24225 - 46676 * t24226 + 462805 * t24227 + 486514 * t24228 - 1925833 * t24229 + 3413039 * t24231 - 2208115 * t24233 - 345345 * t24235 + 509 + (-2258968 + 650325 * t24230) * t24230 + (4902450 * t24231 - 4897620 * t24233 + 1820910 * t24235 + 1582) * t24224) * np.sin((6 * phi1 + 7 * phi2)) * ((1 - t24224) ** (-0.1e1 / 0.2e1)) * ((1 + t24224) ** (-0.1e1 / 0.2e1))

        if Bindx == 2569:
            t24238 = np.cos(phi)
            t24239 = t24238 ** 2
            t24240 = t24238 * t24239
            t24243 = t24240 ** 2
            t24244 = t24238 * t24243
            t24251 = t24244 ** 2
            t24249 = t24243 ** 2
            t24241 = t24239 ** 2
            t24242 = t24238 * t24241
            t24247 = t24242 ** 2
            t24245 = t24241 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (-560 * t24239 - 10731 * t24240 + 2632 * t24241 + 73633 * t24242 + 20496 * t24243 - 222055 * t24244 - 140776 * t24245 + 300720 * t24247 - 273000 * t24249 + 90480 * t24251 + 8 + (316967 * t24245 - 185185 * t24247 - 1365 * t24249 + 28275 * t24251 + 461) * t24238) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 2570:
            t24267 = np.sin(phi)
            t24265 = t24267 ** 2
            t24253 = np.cos(phi)
            t24254 = t24253 ** 2
            t24256 = t24254 ** 2
            t24257 = t24253 * t24256
            t24262 = t24257 ** 2
            t24260 = t24256 ** 2
            t24255 = t24253 * t24254
            t24258 = t24255 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.5313e4) * t24265 ** 2 * (3540 * t24254 - 9130 * t24255 - 35535 * t24256 + 25236 * t24257 - 194025 * t24260 + 72540 * t24262 - 59 + (133456 + 28275 * t24258) * t24258 + (24300 * t24258 - 134550 * t24260 + 101790 * t24262 + 546) * t24253) * np.sin((6 * phi1 + 9 * phi2)) * ((1 - t24253) ** (-0.1e1 / 0.2e1)) * ((1 + t24253) ** (-0.1e1 / 0.2e1))

        if Bindx == 2571:
            t24268 = np.cos(phi)
            t24269 = t24268 ** 2
            t24270 = t24268 * t24269
            t24273 = t24270 ** 2
            t24274 = t24268 * t24273
            t24281 = t24274 ** 2
            t24279 = t24273 ** 2
            t24271 = t24269 ** 2
            t24272 = t24268 * t24271
            t24277 = t24272 ** 2
            t24275 = t24271 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (-312 * t24269 - 511 * t24270 + 2386 * t24271 + 4343 * t24272 - 6116 * t24273 - 15175 * t24274 + 3562 * t24275 + 7728 * t24277 - 11778 * t24279 + 4524 * t24281 + 6 + (24125 * t24275 - 16549 * t24277 + 2613 * t24279 + 1131 * t24281 + 23) * t24268) * np.cos((6 * phi1 + 10 * phi2))

        if Bindx == 2572:
            t24296 = np.sin(phi)
            t24293 = t24296 ** 2
            t24294 = t24296 * t24293
            t24283 = np.cos(phi)
            t24284 = t24283 ** 2
            t24286 = t24284 ** 2
            t24290 = t24286 ** 2
            t24285 = t24283 * t24284
            t24288 = t24285 ** 2
            t24287 = t24283 * t24286
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.115115e6) * t24294 ** 2 * (39 * t24284 + 616 * t24285 + 414 * t24286 - 2554 * t24288 + 2691 * t24290 - 1 + (-1716 + 435 * t24287) * t24287 + (264 * t24288 + 1914 * t24290 - 54) * t24283) * np.sin((6 * phi1 + 11 * phi2)) * ((1 - t24283) ** (-0.1e1 / 0.2e1)) * ((1 + t24283) ** (-0.1e1 / 0.2e1))

        if Bindx == 2573:
            t24297 = np.cos(phi)
            t24298 = t24297 ** 2
            t24299 = t24297 * t24298
            t24302 = t24299 ** 2
            t24303 = t24297 * t24302
            t24310 = t24303 ** 2
            t24308 = t24302 ** 2
            t24300 = t24298 ** 2
            t24301 = t24297 * t24300
            t24306 = t24301 ** 2
            t24304 = t24300 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.345345e6) * (-120 * t24298 + 223 * t24299 + 996 * t24300 + 3 * t24301 - 2936 * t24302 - 2205 * t24303 + 3276 * t24304 - 456 * t24306 - 1460 * t24308 + 696 * t24310 + 4 + (4717 * t24304 - 3603 * t24306 + 753 * t24308 + 145 * t24310 - 33) * t24297) * np.cos((6 * phi1 + 12 * phi2))

        if Bindx == 2574:
            t24323 = np.sin(phi)
            t24320 = t24323 ** 2
            t24321 = t24320 ** 2
            t24312 = np.cos(phi)
            t24313 = t24312 ** 2
            t24314 = t24312 * t24313
            t24317 = t24314 ** 2
            t24315 = t24313 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.16445e5) * t24321 ** 2 * (-266 * t24313 - 490 * t24314 + 1498 * t24317 + 19 + (140 + 145 * t24315) * t24315 + (1274 * t24315 + 754 * t24317 - 2) * t24312) * np.sin((6 * phi1 + 13 * phi2)) * ((1 - t24312) ** (-0.1e1 / 0.2e1)) * ((1 + t24312) ** (-0.1e1 / 0.2e1))

        if Bindx == 2575:
            t24324 = np.cos(phi)
            t24325 = t24324 ** 2
            t24326 = t24324 * t24325
            t24329 = t24326 ** 2
            t24330 = t24324 * t24329
            t24337 = t24330 ** 2
            t24335 = t24329 ** 2
            t24327 = t24325 ** 2
            t24328 = t24324 * t24327
            t24333 = t24328 ** 2
            t24331 = t24327 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.476905e6) * (8 * t24325 + 63 * t24326 + 58 * t24327 - 119 * t24328 - 244 * t24329 - 9 * t24330 + 306 * t24331 - 112 * t24333 - 42 * t24335 + 28 * t24337 - 2 + (211 * t24331 - 187 * t24333 + 43 * t24335 + 5 * t24337 - 7) * t24324) * np.cos((6 * phi1 + 14 * phi2))

        if Bindx == 2576:
            t24339 = np.cos(phi)
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.286143e6) * ((1 - t24339) ** (0.9e1 / 0.2e1)) * ((1 + t24339) ** (0.21e2 / 0.2e1)) * np.sin((6 * phi1 + 15 * phi2))

        if Bindx == 2577:
            t24340 = np.cos(phi)
            t24341 = t24340 ** 2
            t24342 = t24340 * t24341
            t24345 = t24342 ** 2
            t24346 = t24340 * t24345
            t24353 = t24346 ** 2
            t24351 = t24345 ** 2
            t24343 = t24341 ** 2
            t24344 = t24340 * t24343
            t24349 = t24344 ** 2
            t24347 = t24343 ** 2
            tfunc[..., c] = -0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * np.cos((7 * phi1 - 15 * phi2)) * (-17 * t24341 + 7 * t24342 + 43 * t24343 - 77 * t24344 + 11 * t24345 + 99 * t24346 - 99 * t24347 + 77 * t24349 - 7 * t24351 - 7 * t24353 - 1 + (-11 * t24347 - 43 * t24349 + 17 * t24351 + t24353 + 7) * t24340)

        if Bindx == 2578:
            t24366 = np.sin(phi)
            t24363 = t24366 ** 2
            t24364 = t24363 ** 2
            t24355 = np.cos(phi)
            t24356 = t24355 ** 2
            t24357 = t24355 * t24356
            t24360 = t24357 ** 2
            t24358 = t24356 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.43355e5) * t24364 ** 2 * (-42 * t24356 - 70 * t24357 + 266 * t24360 - 7 + (280 + 15 * t24358) * t24358 + (-378 * t24358 - 98 * t24360 + 34) * t24355) * np.sin((7 * phi1 - 14 * phi2)) * ((1 - t24355) ** (-0.1e1 / 0.2e1)) * ((1 + t24355) ** (-0.1e1 / 0.2e1))

        if Bindx == 2579:
            t24367 = np.cos(phi)
            t24368 = t24367 ** 2
            t24369 = t24367 * t24368
            t24372 = t24369 ** 2
            t24373 = t24367 * t24372
            t24380 = t24373 ** 2
            t24378 = t24372 ** 2
            t24370 = t24368 ** 2
            t24371 = t24367 * t24370
            t24376 = t24371 ** 2
            t24374 = t24370 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (-913 * t24368 + 3101 * t24369 + 71 * t24370 - 11011 * t24371 + 11715 * t24372 + 9801 * t24373 - 25047 * t24374 + 16093 * t24376 + 637 * t24378 - 2639 * t24380 + 83 + (7843 * t24374 - 15065 * t24376 + 5071 * t24378 + 435 * t24380 - 175) * t24367) * np.cos((7 * phi1 - 13 * phi2))

        if Bindx == 2580:
            t24395 = np.sin(phi)
            t24392 = t24395 ** 2
            t24393 = t24395 * t24392
            t24382 = np.cos(phi)
            t24383 = t24382 ** 2
            t24385 = t24383 ** 2
            t24389 = t24385 ** 2
            t24384 = t24382 * t24383
            t24387 = t24384 ** 2
            t24386 = t24382 * t24385
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t24393 ** 2 * (189 * t24383 - 152 * t24384 - 658 * t24385 - 350 * t24387 + 1707 * t24389 - 9 + (1344 + 145 * t24386) * t24386 + (-1384 * t24387 - 812 * t24389 - 20) * t24382) * np.sin((7 * phi1 - 12 * phi2)) * ((1 - t24382) ** (-0.1e1 / 0.2e1)) * ((1 + t24382) ** (-0.1e1 / 0.2e1))

        if Bindx == 2581:
            t24396 = np.cos(phi)
            t24397 = t24396 ** 2
            t24398 = t24396 * t24397
            t24401 = t24398 ** 2
            t24402 = t24396 * t24401
            t24409 = t24402 ** 2
            t24407 = t24401 ** 2
            t24399 = t24397 ** 2
            t24400 = t24396 * t24399
            t24405 = t24400 ** 2
            t24403 = t24399 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * (1505 * t24397 + 6501 * t24398 - 17247 * t24399 - 13299 * t24400 + 66957 * t24401 - 21615 * t24402 - 101937 * t24403 + 44627 * t24405 + 26235 * t24407 - 20097 * t24409 - 43 + (96019 * t24403 - 98561 * t24405 + 27711 * t24407 + 3915 * t24409 - 671) * t24396) * np.cos((7 * phi1 - 11 * phi2))

        if Bindx == 2582:
            t24425 = np.sin(phi)
            t24423 = t24425 ** 2
            t24411 = np.cos(phi)
            t24412 = t24411 ** 2
            t24414 = t24412 ** 2
            t24415 = t24411 * t24414
            t24420 = t24415 ** 2
            t24418 = t24414 ** 2
            t24413 = t24411 * t24412
            t24416 = t24413 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.161e3) * t24423 ** 2 * (-1628 * t24412 + 11770 * t24413 + 385 * t24414 - 50996 * t24415 - 110825 * t24418 + 66924 * t24420 + 37 + (43120 + 10179 * t24416) * t24416 + (66484 * t24416 + 12870 * t24418 - 47502 * t24420 - 818) * t24411) * np.sin((7 * phi1 - 10 * phi2)) * ((1 - t24411) ** (-0.1e1 / 0.2e1)) * ((1 + t24411) ** (-0.1e1 / 0.2e1))

        if Bindx == 2583:
            t24426 = np.cos(phi)
            t24427 = t24426 ** 2
            t24428 = t24426 * t24427
            t24431 = t24428 ** 2
            t24432 = t24426 * t24431
            t24439 = t24432 ** 2
            t24437 = t24431 ** 2
            t24429 = t24427 ** 2
            t24430 = t24426 * t24429
            t24435 = t24430 ** 2
            t24433 = t24429 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.483e3) * (19745 * t24427 - 19473 * t24428 - 168051 * t24429 + 221859 * t24430 + 509157 * t24431 - 926805 * t24432 - 506517 * t24433 - 278685 * t24435 + 780975 * t24437 - 356265 * t24439 - 359 + (1692581 * t24433 - 1330355 * t24435 + 276705 * t24437 + 84825 * t24439 + 663) * t24426) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 2584:
            t24442 = np.cos(phi)
            t24443 = t24442 ** 2
            t24444 = t24442 * t24443
            t24447 = t24444 ** 2
            t24453 = t24447 ** 2
            t24445 = t24443 ** 2
            t24446 = t24442 * t24445
            t24451 = t24446 ** 2
            t24449 = t24445 ** 2
            t24448 = t24442 * t24447
            t24441 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.23e2) * t24441 ** 2 * (-25011 * t24443 - 89376 * t24444 + 289905 * t24445 + 371448 * t24446 - 1354815 * t24447 + 2846151 * t24449 - 2547545 * t24451 + 544635 * t24453 + 397 + (-278784 + 254475 * t24448) * t24448 + (-1031800 * t24449 + 1965600 * t24451 - 950040 * t24453 + 4760) * t24442) * np.sin((7 * phi1 - 8 * phi2)) * ((1 - t24442) ** (-0.1e1 / 0.2e1)) * ((1 + t24442) ** (-0.1e1 / 0.2e1))

        if Bindx == 2585:
            t24456 = np.cos(phi)
            t24457 = t24456 ** 2
            t24458 = t24456 * t24457
            t24461 = t24458 ** 2
            t24462 = t24456 * t24461
            t24469 = t24462 ** 2
            t24467 = t24461 ** 2
            t24459 = t24457 ** 2
            t24460 = t24456 * t24459
            t24465 = t24460 ** 2
            t24463 = t24459 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (140651 * t24457 - 2060373 * t24458 - 900417 * t24459 + 14497791 * t24460 - 2331945 * t24461 - 45042921 * t24462 + 24748713 * t24463 - 58026815 * t24465 + 55474965 * t24467 - 19119555 * t24469 - 1981 + (66637417 * t24463 - 41179775 * t24465 + 1224405 * t24467 + 5852925 * t24469 + 86915) * t24456) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 2586:
            t24472 = np.cos(phi)
            t24473 = t24472 ** 2
            t24474 = t24472 * t24473
            t24477 = t24474 ** 2
            t24483 = t24477 ** 2
            t24475 = t24473 ** 2
            t24476 = t24472 * t24475
            t24481 = t24476 ** 2
            t24479 = t24475 ** 2
            t24478 = t24472 * t24477
            t24471 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.11e2) * t24471 ** 2 * (-39193 * t24473 + 46676 * t24474 + 462805 * t24475 - 486514 * t24476 - 1925833 * t24477 + 3413039 * t24479 - 2208115 * t24481 - 345345 * t24483 + 509 + (2258968 + 650325 * t24478) * t24478 + (-4902450 * t24479 + 4897620 * t24481 - 1820910 * t24483 - 1582) * t24472) * np.sin((7 * phi1 - 6 * phi2)) * ((1 - t24472) ** (-0.1e1 / 0.2e1)) * ((1 + t24472) ** (-0.1e1 / 0.2e1))

        if Bindx == 2587:
            t24486 = np.cos(phi)
            t24487 = t24486 ** 2
            t24488 = t24486 * t24487
            t24491 = t24488 ** 2
            t24492 = t24486 * t24491
            t24499 = t24492 ** 2
            t24497 = t24491 ** 2
            t24489 = t24487 ** 2
            t24490 = t24486 * t24489
            t24495 = t24490 ** 2
            t24493 = t24489 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-12201 * t24487 - 53635 * t24488 + 175399 * t24489 + 378293 * t24490 - 1003765 * t24491 - 1043639 * t24492 + 2846825 * t24493 - 4221995 * t24495 + 3126045 * t24497 - 910455 * t24499 + 147 + (1113131 * t24493 + 25415 * t24495 - 811785 * t24497 + 390195 * t24499 + 2025) * t24486) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 2588:
            t24515 = np.sin(phi)
            t24513 = t24515 ** 2
            t24501 = np.cos(phi)
            t24502 = t24501 ** 2
            t24504 = t24502 ** 2
            t24505 = t24501 * t24504
            t24510 = t24505 ** 2
            t24508 = t24504 ** 2
            t24503 = t24501 * t24502
            t24506 = t24503 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t24513 ** 2 * (21414 * t24502 - 270956 * t24503 - 230111 * t24504 + 2010568 * t24505 + 644345 * t24508 - 2807610 * t24510 - 249 + (533876 + 1950975 * t24506) * t24506 + (-5988280 * t24506 + 7768020 * t24508 - 3641820 * t24510 + 9828) * t24501) * np.sin((7 * phi1 - 4 * phi2)) * ((1 - t24501) ** (-0.1e1 / 0.2e1)) * ((1 + t24501) ** (-0.1e1 / 0.2e1))

        if Bindx == 2589:
            t24516 = np.cos(phi)
            t24517 = t24516 ** 2
            t24518 = t24516 * t24517
            t24521 = t24518 ** 2
            t24522 = t24516 * t24521
            t24529 = t24522 ** 2
            t24527 = t24521 ** 2
            t24519 = t24517 ** 2
            t24520 = t24516 * t24519
            t24525 = t24520 ** 2
            t24523 = t24519 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (-18473 * t24517 + 14171 * t24518 + 270431 * t24519 - 160053 * t24520 - 1476405 * t24521 + 850383 * t24522 + 3842449 * t24523 - 5156715 * t24525 + 3448965 * t24527 - 910455 * t24529 + 203 + (-2320171 * t24523 + 3311425 * t24525 - 2345655 * t24527 + 650325 * t24529 - 425) * t24516) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 2590:
            t24544 = np.sin(phi)
            t24541 = t24544 ** 2
            t24542 = t24544 * t24541
            t24531 = np.cos(phi)
            t24532 = t24531 ** 2
            t24534 = t24532 ** 2
            t24538 = t24534 ** 2
            t24533 = t24531 * t24532
            t24536 = t24533 ** 2
            t24535 = t24531 * t24534
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1729e4) * t24542 ** 2 * (6461 * t24532 + 37352 * t24533 - 87262 * t24534 + 394450 * t24536 - 713115 * t24538 - 71 + (-254380 + 450225 * t24535) * t24535 + (587880 * t24536 - 420210 * t24538 - 1330) * t24531) * np.sin((7 * phi1 - 2 * phi2)) * ((1 - t24531) ** (-0.1e1 / 0.2e1)) * ((1 + t24531) ** (-0.1e1 / 0.2e1))

        if Bindx == 2591:
            t24545 = np.cos(phi)
            t24546 = t24545 ** 2
            t24547 = t24545 * t24546
            t24550 = t24547 ** 2
            t24551 = t24545 * t24550
            t24558 = t24551 ** 2
            t24556 = t24550 ** 2
            t24548 = t24546 ** 2
            t24549 = t24545 * t24548
            t24554 = t24549 ** 2
            t24552 = t24548 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * (-4655 * t24546 + 42007 * t24547 + 70021 * t24548 - 380429 * t24549 - 385483 * t24550 + 1519475 * t24551 + 992243 * t24552 - 1295245 * t24554 + 833175 * t24556 - 210105 * t24558 + 49 + (-3126091 * t24552 + 3463685 * t24554 - 1967535 * t24556 + 450225 * t24558 - 1337) * t24545) * np.cos((7 * phi1 - phi2))

        if Bindx == 2592:
            t24568 = np.sin(phi)
            t24565 = t24568 ** 2
            t24566 = t24565 ** 2
            t24560 = np.cos(phi)
            t24561 = t24560 ** 2
            t24562 = t24561 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.62985e5) * t24566 ** 2 * (-644 * t24561 + 7 + (-28980 * t24561 + 8050 + 30015 * t24562) * t24562) * np.sin((7 * phi1)) * ((1 - t24560) ** (-0.1e1 / 0.2e1)) * ((1 + t24560) ** (-0.1e1 / 0.2e1))

        if Bindx == 2593:
            t24569 = np.cos(phi)
            t24570 = t24569 ** 2
            t24571 = t24569 * t24570
            t24574 = t24571 ** 2
            t24575 = t24569 * t24574
            t24582 = t24575 ** 2
            t24580 = t24574 ** 2
            t24572 = t24570 ** 2
            t24573 = t24569 * t24572
            t24578 = t24573 ** 2
            t24576 = t24572 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4199e4) * (4655 * t24570 + 42007 * t24571 - 70021 * t24572 - 380429 * t24573 + 385483 * t24574 + 1519475 * t24575 - 992243 * t24576 + 1295245 * t24578 - 833175 * t24580 + 210105 * t24582 - 49 + (-3126091 * t24576 + 3463685 * t24578 - 1967535 * t24580 + 450225 * t24582 - 1337) * t24569) * np.cos((7 * phi1 + phi2))

        if Bindx == 2594:
            t24597 = np.sin(phi)
            t24594 = t24597 ** 2
            t24595 = t24597 * t24594
            t24584 = np.cos(phi)
            t24585 = t24584 ** 2
            t24587 = t24585 ** 2
            t24591 = t24587 ** 2
            t24586 = t24584 * t24585
            t24589 = t24586 ** 2
            t24588 = t24584 * t24587
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1729e4) * t24595 ** 2 * (6461 * t24585 - 37352 * t24586 - 87262 * t24587 + 394450 * t24589 - 713115 * t24591 - 71 + (254380 + 450225 * t24588) * t24588 + (-587880 * t24589 + 420210 * t24591 + 1330) * t24584) * np.sin((7 * phi1 + 2 * phi2)) * ((1 - t24584) ** (-0.1e1 / 0.2e1)) * ((1 + t24584) ** (-0.1e1 / 0.2e1))

        if Bindx == 2595:
            t24598 = np.cos(phi)
            t24599 = t24598 ** 2
            t24600 = t24598 * t24599
            t24603 = t24600 ** 2
            t24604 = t24598 * t24603
            t24611 = t24604 ** 2
            t24609 = t24603 ** 2
            t24601 = t24599 ** 2
            t24602 = t24598 * t24601
            t24607 = t24602 ** 2
            t24605 = t24601 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.133e3) * (18473 * t24599 + 14171 * t24600 - 270431 * t24601 - 160053 * t24602 + 1476405 * t24603 + 850383 * t24604 - 3842449 * t24605 + 5156715 * t24607 - 3448965 * t24609 + 910455 * t24611 - 203 + (-2320171 * t24605 + 3311425 * t24607 - 2345655 * t24609 + 650325 * t24611 - 425) * t24598) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 2596:
            t24627 = np.sin(phi)
            t24625 = t24627 ** 2
            t24613 = np.cos(phi)
            t24614 = t24613 ** 2
            t24616 = t24614 ** 2
            t24617 = t24613 * t24616
            t24622 = t24617 ** 2
            t24620 = t24616 ** 2
            t24615 = t24613 * t24614
            t24618 = t24615 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t24625 ** 2 * (21414 * t24614 + 270956 * t24615 - 230111 * t24616 - 2010568 * t24617 + 644345 * t24620 - 2807610 * t24622 - 249 + (533876 + 1950975 * t24618) * t24618 + (5988280 * t24618 - 7768020 * t24620 + 3641820 * t24622 - 9828) * t24613) * np.sin((7 * phi1 + 4 * phi2)) * ((1 - t24613) ** (-0.1e1 / 0.2e1)) * ((1 + t24613) ** (-0.1e1 / 0.2e1))

        if Bindx == 2597:
            t24628 = np.cos(phi)
            t24629 = t24628 ** 2
            t24630 = t24628 * t24629
            t24633 = t24630 ** 2
            t24634 = t24628 * t24633
            t24641 = t24634 ** 2
            t24639 = t24633 ** 2
            t24631 = t24629 ** 2
            t24632 = t24628 * t24631
            t24637 = t24632 ** 2
            t24635 = t24631 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (12201 * t24629 - 53635 * t24630 - 175399 * t24631 + 378293 * t24632 + 1003765 * t24633 - 1043639 * t24634 - 2846825 * t24635 + 4221995 * t24637 - 3126045 * t24639 + 910455 * t24641 - 147 + (1113131 * t24635 + 25415 * t24637 - 811785 * t24639 + 390195 * t24641 + 2025) * t24628) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 2598:
            t24644 = np.cos(phi)
            t24645 = t24644 ** 2
            t24646 = t24644 * t24645
            t24649 = t24646 ** 2
            t24655 = t24649 ** 2
            t24647 = t24645 ** 2
            t24648 = t24644 * t24647
            t24653 = t24648 ** 2
            t24651 = t24647 ** 2
            t24650 = t24644 * t24649
            t24643 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.11e2) * t24643 ** 2 * (-39193 * t24645 - 46676 * t24646 + 462805 * t24647 + 486514 * t24648 - 1925833 * t24649 + 3413039 * t24651 - 2208115 * t24653 - 345345 * t24655 + 509 + (-2258968 + 650325 * t24650) * t24650 + (4902450 * t24651 - 4897620 * t24653 + 1820910 * t24655 + 1582) * t24644) * np.sin((7 * phi1 + 6 * phi2)) * ((1 - t24644) ** (-0.1e1 / 0.2e1)) * ((1 + t24644) ** (-0.1e1 / 0.2e1))

        if Bindx == 2599:
            t24658 = np.cos(phi)
            t24659 = t24658 ** 2
            t24660 = t24658 * t24659
            t24663 = t24660 ** 2
            t24664 = t24658 * t24663
            t24671 = t24664 ** 2
            t24669 = t24663 ** 2
            t24661 = t24659 ** 2
            t24662 = t24658 * t24661
            t24667 = t24662 ** 2
            t24665 = t24661 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-140651 * t24659 - 2060373 * t24660 + 900417 * t24661 + 14497791 * t24662 + 2331945 * t24663 - 45042921 * t24664 - 24748713 * t24665 + 58026815 * t24667 - 55474965 * t24669 + 19119555 * t24671 + 1981 + (66637417 * t24665 - 41179775 * t24667 + 1224405 * t24669 + 5852925 * t24671 + 86915) * t24658) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 2600:
            t24674 = np.cos(phi)
            t24675 = t24674 ** 2
            t24676 = t24674 * t24675
            t24679 = t24676 ** 2
            t24685 = t24679 ** 2
            t24677 = t24675 ** 2
            t24678 = t24674 * t24677
            t24683 = t24678 ** 2
            t24681 = t24677 ** 2
            t24680 = t24674 * t24679
            t24673 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.23e2) * t24673 ** 2 * (-25011 * t24675 + 89376 * t24676 + 289905 * t24677 - 371448 * t24678 - 1354815 * t24679 + 2846151 * t24681 - 2547545 * t24683 + 544635 * t24685 + 397 + (278784 + 254475 * t24680) * t24680 + (1031800 * t24681 - 1965600 * t24683 + 950040 * t24685 - 4760) * t24674) * np.sin((7 * phi1 + 8 * phi2)) * ((1 - t24674) ** (-0.1e1 / 0.2e1)) * ((1 + t24674) ** (-0.1e1 / 0.2e1))

        if Bindx == 2601:
            t24688 = np.cos(phi)
            t24689 = t24688 ** 2
            t24690 = t24688 * t24689
            t24693 = t24690 ** 2
            t24694 = t24688 * t24693
            t24701 = t24694 ** 2
            t24699 = t24693 ** 2
            t24691 = t24689 ** 2
            t24692 = t24688 * t24691
            t24697 = t24692 ** 2
            t24695 = t24691 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.483e3) * (-19745 * t24689 - 19473 * t24690 + 168051 * t24691 + 221859 * t24692 - 509157 * t24693 - 926805 * t24694 + 506517 * t24695 + 278685 * t24697 - 780975 * t24699 + 356265 * t24701 + 359 + (1692581 * t24695 - 1330355 * t24697 + 276705 * t24699 + 84825 * t24701 + 663) * t24688) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 2602:
            t24717 = np.sin(phi)
            t24715 = t24717 ** 2
            t24703 = np.cos(phi)
            t24704 = t24703 ** 2
            t24706 = t24704 ** 2
            t24707 = t24703 * t24706
            t24712 = t24707 ** 2
            t24710 = t24706 ** 2
            t24705 = t24703 * t24704
            t24708 = t24705 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.161e3) * t24715 ** 2 * (-1628 * t24704 - 11770 * t24705 + 385 * t24706 + 50996 * t24707 - 110825 * t24710 + 66924 * t24712 + 37 + (43120 + 10179 * t24708) * t24708 + (-66484 * t24708 - 12870 * t24710 + 47502 * t24712 + 818) * t24703) * np.sin((7 * phi1 + 10 * phi2)) * ((1 - t24703) ** (-0.1e1 / 0.2e1)) * ((1 + t24703) ** (-0.1e1 / 0.2e1))

        if Bindx == 2603:
            t24718 = np.cos(phi)
            t24719 = t24718 ** 2
            t24720 = t24718 * t24719
            t24723 = t24720 ** 2
            t24724 = t24718 * t24723
            t24731 = t24724 ** 2
            t24729 = t24723 ** 2
            t24721 = t24719 ** 2
            t24722 = t24718 * t24721
            t24727 = t24722 ** 2
            t24725 = t24721 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * (-1505 * t24719 + 6501 * t24720 + 17247 * t24721 - 13299 * t24722 - 66957 * t24723 - 21615 * t24724 + 101937 * t24725 - 44627 * t24727 - 26235 * t24729 + 20097 * t24731 + 43 + (96019 * t24725 - 98561 * t24727 + 27711 * t24729 + 3915 * t24731 - 671) * t24718) * np.cos((7 * phi1 + 11 * phi2))

        if Bindx == 2604:
            t24746 = np.sin(phi)
            t24743 = t24746 ** 2
            t24744 = t24746 * t24743
            t24733 = np.cos(phi)
            t24734 = t24733 ** 2
            t24736 = t24734 ** 2
            t24740 = t24736 ** 2
            t24735 = t24733 * t24734
            t24738 = t24735 ** 2
            t24737 = t24733 * t24736
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t24744 ** 2 * (189 * t24734 + 152 * t24735 - 658 * t24736 - 350 * t24738 + 1707 * t24740 - 9 + (-1344 + 145 * t24737) * t24737 + (1384 * t24738 + 812 * t24740 + 20) * t24733) * np.sin((7 * phi1 + 12 * phi2)) * ((1 - t24733) ** (-0.1e1 / 0.2e1)) * ((1 + t24733) ** (-0.1e1 / 0.2e1))

        if Bindx == 2605:
            t24747 = np.cos(phi)
            t24748 = t24747 ** 2
            t24749 = t24747 * t24748
            t24752 = t24749 ** 2
            t24753 = t24747 * t24752
            t24760 = t24753 ** 2
            t24758 = t24752 ** 2
            t24750 = t24748 ** 2
            t24751 = t24747 * t24750
            t24756 = t24751 ** 2
            t24754 = t24750 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (913 * t24748 + 3101 * t24749 - 71 * t24750 - 11011 * t24751 - 11715 * t24752 + 9801 * t24753 + 25047 * t24754 - 16093 * t24756 - 637 * t24758 + 2639 * t24760 - 83 + (7843 * t24754 - 15065 * t24756 + 5071 * t24758 + 435 * t24760 - 175) * t24747) * np.cos((7 * phi1 + 13 * phi2))

        if Bindx == 2606:
            t24773 = np.sin(phi)
            t24770 = t24773 ** 2
            t24771 = t24770 ** 2
            t24762 = np.cos(phi)
            t24763 = t24762 ** 2
            t24764 = t24762 * t24763
            t24767 = t24764 ** 2
            t24765 = t24763 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.43355e5) * t24771 ** 2 * (-42 * t24763 + 70 * t24764 + 266 * t24767 - 7 + (280 + 15 * t24765) * t24765 + (378 * t24765 + 98 * t24767 - 34) * t24762) * np.sin((7 * phi1 + 14 * phi2)) * ((1 - t24762) ** (-0.1e1 / 0.2e1)) * ((1 + t24762) ** (-0.1e1 / 0.2e1))

        if Bindx == 2607:
            t24774 = np.cos(phi)
            t24775 = t24774 ** 2
            t24776 = t24774 * t24775
            t24779 = t24776 ** 2
            t24780 = t24774 * t24779
            t24787 = t24780 ** 2
            t24785 = t24779 ** 2
            t24777 = t24775 ** 2
            t24778 = t24774 * t24777
            t24783 = t24778 ** 2
            t24781 = t24777 ** 2
            tfunc[..., c] = 0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * np.cos((7 * phi1 + 15 * phi2)) * (17 * t24775 + 7 * t24776 - 43 * t24777 - 77 * t24778 - 11 * t24779 + 99 * t24780 + 99 * t24781 - 77 * t24783 + 7 * t24785 + 7 * t24787 + 1 + (-11 * t24781 - 43 * t24783 + 17 * t24785 + t24787 + 7) * t24774)

        if Bindx == 2608:
            t24789 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.8192e4 * np.sqrt(0.1131e4) * ((1 - t24789) ** (0.23e2 / 0.2e1)) * ((1 + t24789) ** (0.7e1 / 0.2e1)) * np.sin((8 * phi1 - 15 * phi2))

        if Bindx == 2609:
            t24790 = np.cos(phi)
            t24791 = t24790 ** 2
            t24792 = t24790 * t24791
            t24795 = t24792 ** 2
            t24796 = t24790 * t24795
            t24803 = t24796 ** 2
            t24801 = t24795 ** 2
            t24793 = t24791 ** 2
            t24794 = t24790 * t24793
            t24799 = t24794 ** 2
            t24797 = t24793 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (-80 * t24791 - 119 * t24792 + 568 * t24793 - 539 * t24794 - 528 * t24795 + 1485 * t24796 - 792 * t24797 + 1232 * t24799 - 280 * t24801 - 112 * t24803 - 8 + (-781 * t24797 - 421 * t24799 + 311 * t24801 + 15 * t24803 + 49) * t24790) * np.cos((8 * phi1 - 14 * phi2))

        if Bindx == 2610:
            t24818 = np.sin(phi)
            t24815 = t24818 ** 2
            t24816 = t24818 * t24815
            t24805 = np.cos(phi)
            t24806 = t24805 ** 2
            t24808 = t24806 ** 2
            t24812 = t24808 ** 2
            t24807 = t24805 * t24806
            t24810 = t24807 ** 2
            t24809 = t24805 * t24808
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.65e2) * t24816 ** 2 * (-113 * t24806 + 3184 * t24807 - 5894 * t24808 + 7630 * t24810 + 8581 * t24812 + 113 + (1792 + 435 * t24809) * t24809 + (-12272 * t24810 - 3016 * t24812 - 440) * t24805) * np.sin((8 * phi1 - 13 * phi2)) * ((1 - t24805) ** (-0.1e1 / 0.2e1)) * ((1 + t24805) ** (-0.1e1 / 0.2e1))

        if Bindx == 2611:
            t24819 = np.cos(phi)
            t24820 = t24819 ** 2
            t24821 = t24819 * t24820
            t24824 = t24821 ** 2
            t24825 = t24819 * t24824
            t24832 = t24825 ** 2
            t24830 = t24824 ** 2
            t24822 = t24820 ** 2
            t24823 = t24819 * t24822
            t24828 = t24823 ** 2
            t24826 = t24822 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-256 * t24820 + 587 * t24821 + 592 * t24822 - 3047 * t24823 + 1760 * t24824 + 4587 * t24825 - 6864 * t24826 + 6336 * t24828 - 656 * t24830 - 928 * t24832 + 16 + (11 * t24826 - 4295 * t24828 + 2027 * t24830 + 145 * t24832 - 15) * t24819) * np.cos((8 * phi1 - 12 * phi2))

        if Bindx == 2612:
            t24848 = np.sin(phi)
            t24846 = t24848 ** 2
            t24834 = np.cos(phi)
            t24835 = t24834 ** 2
            t24837 = t24835 ** 2
            t24838 = t24834 * t24837
            t24843 = t24838 ** 2
            t24841 = t24837 ** 2
            t24836 = t24834 * t24835
            t24839 = t24836 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.455e3) * t24846 ** 2 * (-3718 * t24835 - 88 * t24836 + 21197 * t24837 - 26224 * t24838 - 36487 * t24841 + 48906 * t24843 + 143 + (-23716 + 3915 * t24839) * t24839 + (70928 * t24839 - 32472 * t24841 - 22968 * t24843 + 584) * t24834) * np.sin((8 * phi1 - 11 * phi2)) * ((1 - t24834) ** (-0.1e1 / 0.2e1)) * ((1 + t24834) ** (-0.1e1 / 0.2e1))

        if Bindx == 2613:
            t24849 = np.cos(phi)
            t24850 = t24849 ** 2
            t24851 = t24849 * t24850
            t24854 = t24851 ** 2
            t24855 = t24849 * t24854
            t24862 = t24855 ** 2
            t24860 = t24854 ** 2
            t24852 = t24850 ** 2
            t24853 = t24849 * t24852
            t24858 = t24853 ** 2
            t24856 = t24852 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (2128 * t24850 + 15909 * t24851 - 31992 * t24852 - 45903 * t24853 + 148368 * t24854 - 7095 * t24855 - 267432 * t24856 + 159280 * t24858 + 43992 * t24860 - 54288 * t24862 - 56 + (193655 * t24856 - 249457 * t24858 + 84123 * t24860 + 10179 * t24862 - 1411) * t24849) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 2614:
            t24865 = np.cos(phi)
            t24866 = t24865 ** 2
            t24867 = t24865 * t24866
            t24870 = t24867 ** 2
            t24876 = t24870 ** 2
            t24868 = t24866 ** 2
            t24869 = t24865 * t24868
            t24874 = t24869 ** 2
            t24872 = t24868 ** 2
            t24871 = t24865 * t24870
            t24864 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.21e2) * t24864 ** 2 * (15087 * t24866 - 88224 * t24867 - 45045 * t24868 + 480216 * t24869 - 227733 * t24870 + 1106589 * t24872 - 1459315 * t24874 + 534105 * t24876 - 321 + (-1005312 + 84825 * t24871) * t24871 + (613800 * t24872 + 393120 * t24874 - 407160 * t24876 + 5368) * t24865) * np.sin((8 * phi1 - 9 * phi2)) * ((1 - t24865) ** (-0.1e1 / 0.2e1)) * ((1 + t24865) ** (-0.1e1 / 0.2e1))

        if Bindx == 2615:
            t24879 = np.cos(phi)
            t24880 = t24879 ** 2
            t24881 = t24879 * t24880
            t24884 = t24881 ** 2
            t24885 = t24879 * t24884
            t24892 = t24885 ** 2
            t24890 = t24884 ** 2
            t24882 = t24880 ** 2
            t24883 = t24879 * t24882
            t24888 = t24883 ** 2
            t24886 = t24882 ** 2
            tfunc[..., c] = 0.31e2 / 0.4096e4 * np.sqrt(0.2e1) * (55552 * t24880 - 43071 * t24881 - 488544 * t24882 + 572187 * t24883 + 1552320 * t24884 - 2567367 * t24885 - 1720224 * t24886 - 542080 * t24888 + 2227680 * t24890 - 1085760 * t24892 - 992 + (4927769 * t24886 - 4056325 * t24888 + 913185 * t24890 + 254475 * t24892 + 1195) * t24879) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 2616:
            t24895 = np.cos(phi)
            t24896 = t24895 ** 2
            t24897 = t24895 * t24896
            t24900 = t24897 ** 2
            t24906 = t24900 ** 2
            t24898 = t24896 ** 2
            t24899 = t24895 * t24898
            t24904 = t24899 ** 2
            t24902 = t24898 ** 2
            t24901 = t24895 * t24900
            t24894 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.23e2) * t24894 ** 2 * (-25011 * t24896 - 89376 * t24897 + 289905 * t24898 + 371448 * t24899 - 1354815 * t24900 + 2846151 * t24902 - 2547545 * t24904 + 544635 * t24906 + 397 + (-278784 + 254475 * t24901) * t24901 + (-1031800 * t24902 + 1965600 * t24904 - 950040 * t24906 + 4760) * t24895) * np.sin((8 * phi1 - 7 * phi2)) * ((1 - t24895) ** (-0.1e1 / 0.2e1)) * ((1 + t24895) ** (-0.1e1 / 0.2e1))

        if Bindx == 2617:
            t24909 = np.cos(phi)
            t24910 = t24909 ** 2
            t24911 = t24909 * t24910
            t24914 = t24911 ** 2
            t24915 = t24909 * t24914
            t24922 = t24915 ** 2
            t24920 = t24914 ** 2
            t24912 = t24910 ** 2
            t24913 = t24909 * t24912
            t24918 = t24913 ** 2
            t24916 = t24912 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (560 * t24910 - 10731 * t24911 - 2632 * t24912 + 73633 * t24913 - 20496 * t24914 - 222055 * t24915 + 140776 * t24916 - 300720 * t24918 + 273000 * t24920 - 90480 * t24922 - 8 + (316967 * t24916 - 185185 * t24918 - 1365 * t24920 + 28275 * t24922 + 461) * t24909) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 2618:
            t24938 = np.sin(phi)
            t24936 = t24938 ** 2
            t24924 = np.cos(phi)
            t24925 = t24924 ** 2
            t24927 = t24925 ** 2
            t24928 = t24924 * t24927
            t24933 = t24928 ** 2
            t24931 = t24927 ** 2
            t24926 = t24924 * t24925
            t24929 = t24926 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.26565e5) * t24936 ** 2 * (1110 * t24925 - 1880 * t24926 - 11645 * t24927 + 15760 * t24928 - 43225 * t24931 + 390 * t24933 - 15 + (38468 + 16965 * t24929) * t24929 + (-56560 * t24929 + 85800 * t24931 - 45240 * t24933 + 72) * t24924) * np.sin((8 * phi1 - 5 * phi2)) * ((1 - t24924) ** (-0.1e1 / 0.2e1)) * ((1 + t24924) ** (-0.1e1 / 0.2e1))

        if Bindx == 2619:
            t24939 = np.cos(phi)
            t24940 = t24939 ** 2
            t24941 = t24939 * t24940
            t24944 = t24941 ** 2
            t24945 = t24939 * t24944
            t24952 = t24945 ** 2
            t24950 = t24944 ** 2
            t24942 = t24940 ** 2
            t24943 = t24939 * t24942
            t24948 = t24943 ** 2
            t24946 = t24942 ** 2
            tfunc[..., c] = 0.31e2 / 0.4096e4 * np.sqrt(0.483e3) * (-3840 * t24940 - 11101 * t24941 + 51952 * t24942 + 71777 * t24943 - 275296 * t24944 - 169085 * t24945 + 718736 * t24946 - 981440 * t24948 + 670800 * t24950 - 180960 * t24952 + 48 + (110243 * t24946 + 137345 * t24948 - 224445 * t24950 + 84825 * t24952 + 441) * t24939) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 2620:
            t24967 = np.sin(phi)
            t24964 = t24967 ** 2
            t24965 = t24967 * t24964
            t24954 = np.cos(phi)
            t24955 = t24954 ** 2
            t24957 = t24955 ** 2
            t24961 = t24957 ** 2
            t24956 = t24954 * t24955
            t24959 = t24956 ** 2
            t24958 = t24954 * t24957
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.3059e4) * t24965 ** 2 * (-81 * t24955 + 5008 * t24956 + 122 * t24957 + 7150 * t24959 - 29835 * t24961 + 1 + (-30720 + 28275 * t24958) * t24958 + (65520 * t24959 - 45240 * t24961 - 200) * t24954) * np.sin((8 * phi1 - 3 * phi2)) * ((1 - t24954) ** (-0.1e1 / 0.2e1)) * ((1 + t24954) ** (-0.1e1 / 0.2e1))

        if Bindx == 2621:
            t24968 = np.cos(phi)
            t24969 = t24968 ** 2
            t24970 = t24968 * t24969
            t24973 = t24970 ** 2
            t24974 = t24968 * t24973
            t24981 = t24974 ** 2
            t24979 = t24973 ** 2
            t24971 = t24969 ** 2
            t24972 = t24968 * t24971
            t24977 = t24972 ** 2
            t24975 = t24971 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.39767e5) * (-688 * t24969 + 1601 * t24970 + 9416 * t24971 - 14083 * t24972 - 47600 * t24973 + 56773 * t24974 + 113944 * t24975 - 140240 * t24977 + 86040 * t24979 - 20880 * t24981 + 8 + (-120581 * t24975 + 139075 * t24977 - 82305 * t24979 + 19575 * t24981 - 55) * t24968) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 2622:
            t24994 = np.sin(phi)
            t24991 = t24994 ** 2
            t24992 = t24991 ** 2
            t24983 = np.cos(phi)
            t24984 = t24983 ** 2
            t24985 = t24983 * t24984
            t24988 = t24985 ** 2
            t24986 = t24984 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.96577e5) * t24992 ** 2 * (-588 * t24984 - 1400 * t24985 - 21420 * t24988 + 7 + (6650 + 19575 * t24986) * t24986 + (7560 * t24986 - 10440 * t24988 + 56) * t24983) * np.sin((8 * phi1 - phi2)) * ((1 - t24983) ** (-0.1e1 / 0.2e1)) * ((1 + t24983) ** (-0.1e1 / 0.2e1))

        if Bindx == 2623:
            t24995 = np.cos(phi)
            t24996 = t24995 ** 2
            t24997 = t24996 ** 2
            t24998 = t24996 * t24997
            t25001 = t24998 ** 2
            t24999 = t24997 ** 2
            tfunc[..., c] = 0.31e2 / 0.2048e4 * t24995 * np.sqrt(0.1448655e7) * (-1687 * t24997 + 6163 * t24998 - 11597 * t24999 - 6165 * t25001 - 7 + (11785 * t24999 + 1305 * t25001 + 203) * t24996) * np.cos((8 * phi1))

        if Bindx == 2624:
            t25014 = np.sin(phi)
            t25011 = t25014 ** 2
            t25012 = t25011 ** 2
            t25003 = np.cos(phi)
            t25004 = t25003 ** 2
            t25005 = t25003 * t25004
            t25008 = t25005 ** 2
            t25006 = t25004 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.96577e5) * t25012 ** 2 * (-588 * t25004 + 1400 * t25005 - 21420 * t25008 + 7 + (6650 + 19575 * t25006) * t25006 + (-7560 * t25006 + 10440 * t25008 - 56) * t25003) * np.sin((8 * phi1 + phi2)) * ((1 - t25003) ** (-0.1e1 / 0.2e1)) * ((1 + t25003) ** (-0.1e1 / 0.2e1))

        if Bindx == 2625:
            t25015 = np.cos(phi)
            t25016 = t25015 ** 2
            t25017 = t25015 * t25016
            t25020 = t25017 ** 2
            t25021 = t25015 * t25020
            t25028 = t25021 ** 2
            t25026 = t25020 ** 2
            t25018 = t25016 ** 2
            t25019 = t25015 * t25018
            t25024 = t25019 ** 2
            t25022 = t25018 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.39767e5) * (688 * t25016 + 1601 * t25017 - 9416 * t25018 - 14083 * t25019 + 47600 * t25020 + 56773 * t25021 - 113944 * t25022 + 140240 * t25024 - 86040 * t25026 + 20880 * t25028 - 8 + (-120581 * t25022 + 139075 * t25024 - 82305 * t25026 + 19575 * t25028 - 55) * t25015) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 2626:
            t25043 = np.sin(phi)
            t25040 = t25043 ** 2
            t25041 = t25043 * t25040
            t25030 = np.cos(phi)
            t25031 = t25030 ** 2
            t25033 = t25031 ** 2
            t25037 = t25033 ** 2
            t25032 = t25030 * t25031
            t25035 = t25032 ** 2
            t25034 = t25030 * t25033
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.3059e4) * t25041 ** 2 * (-81 * t25031 - 5008 * t25032 + 122 * t25033 + 7150 * t25035 - 29835 * t25037 + 1 + (30720 + 28275 * t25034) * t25034 + (-65520 * t25035 + 45240 * t25037 + 200) * t25030) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t25030) ** (-0.1e1 / 0.2e1)) * ((1 + t25030) ** (-0.1e1 / 0.2e1))

        if Bindx == 2627:
            t25044 = np.cos(phi)
            t25045 = t25044 ** 2
            t25046 = t25044 * t25045
            t25049 = t25046 ** 2
            t25050 = t25044 * t25049
            t25057 = t25050 ** 2
            t25055 = t25049 ** 2
            t25047 = t25045 ** 2
            t25048 = t25044 * t25047
            t25053 = t25048 ** 2
            t25051 = t25047 ** 2
            tfunc[..., c] = 0.31e2 / 0.4096e4 * np.sqrt(0.483e3) * (3840 * t25045 - 11101 * t25046 - 51952 * t25047 + 71777 * t25048 + 275296 * t25049 - 169085 * t25050 - 718736 * t25051 + 981440 * t25053 - 670800 * t25055 + 180960 * t25057 - 48 + (110243 * t25051 + 137345 * t25053 - 224445 * t25055 + 84825 * t25057 + 441) * t25044) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 2628:
            t25073 = np.sin(phi)
            t25071 = t25073 ** 2
            t25059 = np.cos(phi)
            t25060 = t25059 ** 2
            t25062 = t25060 ** 2
            t25063 = t25059 * t25062
            t25068 = t25063 ** 2
            t25066 = t25062 ** 2
            t25061 = t25059 * t25060
            t25064 = t25061 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.26565e5) * t25071 ** 2 * (1110 * t25060 + 1880 * t25061 - 11645 * t25062 - 15760 * t25063 - 43225 * t25066 + 390 * t25068 - 15 + (38468 + 16965 * t25064) * t25064 + (56560 * t25064 - 85800 * t25066 + 45240 * t25068 - 72) * t25059) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t25059) ** (-0.1e1 / 0.2e1)) * ((1 + t25059) ** (-0.1e1 / 0.2e1))

        if Bindx == 2629:
            t25074 = np.cos(phi)
            t25075 = t25074 ** 2
            t25076 = t25074 * t25075
            t25079 = t25076 ** 2
            t25080 = t25074 * t25079
            t25087 = t25080 ** 2
            t25085 = t25079 ** 2
            t25077 = t25075 ** 2
            t25078 = t25074 * t25077
            t25083 = t25078 ** 2
            t25081 = t25077 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.253e3) * (-560 * t25075 - 10731 * t25076 + 2632 * t25077 + 73633 * t25078 + 20496 * t25079 - 222055 * t25080 - 140776 * t25081 + 300720 * t25083 - 273000 * t25085 + 90480 * t25087 + 8 + (316967 * t25081 - 185185 * t25083 - 1365 * t25085 + 28275 * t25087 + 461) * t25074) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 2630:
            t25090 = np.cos(phi)
            t25091 = t25090 ** 2
            t25092 = t25090 * t25091
            t25095 = t25092 ** 2
            t25101 = t25095 ** 2
            t25093 = t25091 ** 2
            t25094 = t25090 * t25093
            t25099 = t25094 ** 2
            t25097 = t25093 ** 2
            t25096 = t25090 * t25095
            t25089 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.23e2) * t25089 ** 2 * (-25011 * t25091 + 89376 * t25092 + 289905 * t25093 - 371448 * t25094 - 1354815 * t25095 + 2846151 * t25097 - 2547545 * t25099 + 544635 * t25101 + 397 + (278784 + 254475 * t25096) * t25096 + (1031800 * t25097 - 1965600 * t25099 + 950040 * t25101 - 4760) * t25090) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t25090) ** (-0.1e1 / 0.2e1)) * ((1 + t25090) ** (-0.1e1 / 0.2e1))

        if Bindx == 2631:
            t25104 = np.cos(phi)
            t25105 = t25104 ** 2
            t25106 = t25104 * t25105
            t25109 = t25106 ** 2
            t25110 = t25104 * t25109
            t25117 = t25110 ** 2
            t25115 = t25109 ** 2
            t25107 = t25105 ** 2
            t25108 = t25104 * t25107
            t25113 = t25108 ** 2
            t25111 = t25107 ** 2
            tfunc[..., c] = 0.31e2 / 0.4096e4 * np.sqrt(0.2e1) * (-55552 * t25105 - 43071 * t25106 + 488544 * t25107 + 572187 * t25108 - 1552320 * t25109 - 2567367 * t25110 + 1720224 * t25111 + 542080 * t25113 - 2227680 * t25115 + 1085760 * t25117 + 992 + (4927769 * t25111 - 4056325 * t25113 + 913185 * t25115 + 254475 * t25117 + 1195) * t25104) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 2632:
            t25120 = np.cos(phi)
            t25121 = t25120 ** 2
            t25122 = t25120 * t25121
            t25125 = t25122 ** 2
            t25131 = t25125 ** 2
            t25123 = t25121 ** 2
            t25124 = t25120 * t25123
            t25129 = t25124 ** 2
            t25127 = t25123 ** 2
            t25126 = t25120 * t25125
            t25119 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.21e2) * t25119 ** 2 * (15087 * t25121 + 88224 * t25122 - 45045 * t25123 - 480216 * t25124 - 227733 * t25125 + 1106589 * t25127 - 1459315 * t25129 + 534105 * t25131 - 321 + (1005312 + 84825 * t25126) * t25126 + (-613800 * t25127 - 393120 * t25129 + 407160 * t25131 - 5368) * t25120) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t25120) ** (-0.1e1 / 0.2e1)) * ((1 + t25120) ** (-0.1e1 / 0.2e1))

        if Bindx == 2633:
            t25134 = np.cos(phi)
            t25135 = t25134 ** 2
            t25136 = t25134 * t25135
            t25139 = t25136 ** 2
            t25140 = t25134 * t25139
            t25147 = t25140 ** 2
            t25145 = t25139 ** 2
            t25137 = t25135 ** 2
            t25138 = t25134 * t25137
            t25143 = t25138 ** 2
            t25141 = t25137 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-2128 * t25135 + 15909 * t25136 + 31992 * t25137 - 45903 * t25138 - 148368 * t25139 - 7095 * t25140 + 267432 * t25141 - 159280 * t25143 - 43992 * t25145 + 54288 * t25147 + 56 + (193655 * t25141 - 249457 * t25143 + 84123 * t25145 + 10179 * t25147 - 1411) * t25134) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 2634:
            t25163 = np.sin(phi)
            t25161 = t25163 ** 2
            t25149 = np.cos(phi)
            t25150 = t25149 ** 2
            t25152 = t25150 ** 2
            t25153 = t25149 * t25152
            t25158 = t25153 ** 2
            t25156 = t25152 ** 2
            t25151 = t25149 * t25150
            t25154 = t25151 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.455e3) * t25161 ** 2 * (-3718 * t25150 + 88 * t25151 + 21197 * t25152 + 26224 * t25153 - 36487 * t25156 + 48906 * t25158 + 143 + (-23716 + 3915 * t25154) * t25154 + (-70928 * t25154 + 32472 * t25156 + 22968 * t25158 - 584) * t25149) * np.sin((8 * phi1 + 11 * phi2)) * ((1 - t25149) ** (-0.1e1 / 0.2e1)) * ((1 + t25149) ** (-0.1e1 / 0.2e1))

        if Bindx == 2635:
            t25164 = np.cos(phi)
            t25165 = t25164 ** 2
            t25166 = t25164 * t25165
            t25169 = t25166 ** 2
            t25170 = t25164 * t25169
            t25177 = t25170 ** 2
            t25175 = t25169 ** 2
            t25167 = t25165 ** 2
            t25168 = t25164 * t25167
            t25173 = t25168 ** 2
            t25171 = t25167 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.1365e4) * (256 * t25165 + 587 * t25166 - 592 * t25167 - 3047 * t25168 - 1760 * t25169 + 4587 * t25170 + 6864 * t25171 - 6336 * t25173 + 656 * t25175 + 928 * t25177 - 16 + (11 * t25171 - 4295 * t25173 + 2027 * t25175 + 145 * t25177 - 15) * t25164) * np.cos((8 * phi1 + 12 * phi2))

        if Bindx == 2636:
            t25192 = np.sin(phi)
            t25189 = t25192 ** 2
            t25190 = t25192 * t25189
            t25179 = np.cos(phi)
            t25180 = t25179 ** 2
            t25182 = t25180 ** 2
            t25186 = t25182 ** 2
            t25181 = t25179 * t25180
            t25184 = t25181 ** 2
            t25183 = t25179 * t25182
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.65e2) * t25190 ** 2 * (-113 * t25180 - 3184 * t25181 - 5894 * t25182 + 7630 * t25184 + 8581 * t25186 + 113 + (-1792 + 435 * t25183) * t25183 + (12272 * t25184 + 3016 * t25186 + 440) * t25179) * np.sin((8 * phi1 + 13 * phi2)) * ((1 - t25179) ** (-0.1e1 / 0.2e1)) * ((1 + t25179) ** (-0.1e1 / 0.2e1))

        if Bindx == 2637:
            t25193 = np.cos(phi)
            t25194 = t25193 ** 2
            t25195 = t25193 * t25194
            t25198 = t25195 ** 2
            t25199 = t25193 * t25198
            t25206 = t25199 ** 2
            t25204 = t25198 ** 2
            t25196 = t25194 ** 2
            t25197 = t25193 * t25196
            t25202 = t25197 ** 2
            t25200 = t25196 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (80 * t25194 - 119 * t25195 - 568 * t25196 - 539 * t25197 + 528 * t25198 + 1485 * t25199 + 792 * t25200 - 1232 * t25202 + 280 * t25204 + 112 * t25206 + 8 + (-781 * t25200 - 421 * t25202 + 311 * t25204 + 15 * t25206 + 49) * t25193) * np.cos((8 * phi1 + 14 * phi2))

        if Bindx == 2638:
            t25208 = np.cos(phi)
            tfunc[..., c] = 0.465e3 / 0.8192e4 * np.sqrt(0.1131e4) * ((1 - t25208) ** (0.7e1 / 0.2e1)) * ((1 + t25208) ** (0.23e2 / 0.2e1)) * np.sin((8 * phi1 + 15 * phi2))

        if Bindx == 2639:
            t25209 = np.cos(phi)
            t25210 = t25209 ** 2
            t25211 = t25209 * t25210
            t25214 = t25211 ** 2
            t25215 = t25209 * t25214
            t25222 = t25215 ** 2
            t25220 = t25214 ** 2
            t25212 = t25210 ** 2
            t25213 = t25209 * t25212
            t25218 = t25213 ** 2
            t25216 = t25212 ** 2
            tfunc[..., c] = 0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2639e4) * np.cos((9 * phi1 - 15 * phi2)) * (33 * t25210 - 57 * t25211 + 21 * t25212 + 99 * t25213 - 187 * t25214 + 99 * t25215 + 99 * t25216 + 99 * t25218 - 57 * t25220 - 9 * t25222 + 1 + (-187 * t25216 + 21 * t25218 + 33 * t25220 + t25222 - 9) * t25209)

        if Bindx == 2640:
            t25237 = np.sin(phi)
            t25234 = t25237 ** 2
            t25235 = t25237 * t25234
            t25224 = np.cos(phi)
            t25225 = t25224 ** 2
            t25227 = t25225 ** 2
            t25231 = t25227 ** 2
            t25226 = t25224 * t25225
            t25229 = t25226 ** 2
            t25228 = t25224 * t25227
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.39585e5) * t25235 ** 2 * (-63 * t25225 + 72 * t25226 + 42 * t25227 + 378 * t25229 + 153 * t25231 - 3 + (-252 + 5 * t25228) * t25228 + (-312 * t25229 - 42 * t25231 + 22) * t25224) * np.sin((9 * phi1 - 14 * phi2)) * ((1 + t25224) ** (-0.1e1 / 0.2e1)) * ((1 - t25224) ** (-0.1e1 / 0.2e1))

        if Bindx == 2641:
            t25238 = np.cos(phi)
            t25239 = t25238 ** 2
            t25240 = t25238 * t25239
            t25243 = t25240 ** 2
            t25244 = t25238 * t25243
            t25251 = t25244 ** 2
            t25249 = t25243 ** 2
            t25241 = t25239 ** 2
            t25242 = t25238 * t25241
            t25247 = t25242 ** 2
            t25245 = t25241 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (-245 * t25239 - 1377 * t25240 + 3859 * t25241 - 1617 * t25242 - 7249 * t25243 + 11715 * t25244 - 2211 * t25245 + 11121 * t25247 - 4095 * t25249 - 1131 * t25251 - 49 + (-10703 * t25245 - 1843 * t25247 + 3413 * t25249 + 145 * t25251 + 267) * t25238) * np.cos((9 * phi1 - 13 * phi2))

        if Bindx == 2642:
            t25267 = np.sin(phi)
            t25265 = t25267 ** 2
            t25253 = np.cos(phi)
            t25254 = t25253 ** 2
            t25256 = t25254 ** 2
            t25257 = t25253 * t25256
            t25262 = t25257 ** 2
            t25260 = t25256 ** 2
            t25255 = t25253 * t25254
            t25258 = t25255 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t25265 ** 2 * (1062 * t25254 - 6748 * t25255 + 7497 * t25256 + 9576 * t25257 + 9873 * t25260 + 21126 * t25262 - 177 + (-30156 + 1015 * t25258) * t25258 + (22248 * t25258 - 28572 * t25260 - 7308 * t25262 + 564) * t25253) * np.sin((9 * phi1 - 12 * phi2)) * ((1 + t25253) ** (-0.1e1 / 0.2e1)) * ((1 - t25253) ** (-0.1e1 / 0.2e1))

        if Bindx == 2643:
            t25268 = np.cos(phi)
            t25269 = t25268 ** 2
            t25270 = t25268 * t25269
            t25273 = t25270 ** 2
            t25274 = t25268 * t25273
            t25281 = t25274 ** 2
            t25279 = t25273 ** 2
            t25271 = t25269 ** 2
            t25272 = t25268 * t25271
            t25277 = t25272 ** 2
            t25275 = t25271 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (-13661 * t25269 + 24321 * t25270 + 46899 * t25271 - 160743 * t25272 + 44583 * t25273 + 307197 * t25274 - 357027 * t25275 + 416889 * t25277 - 78111 * t25279 - 60291 * t25281 + 719 + (-90233 * t25275 - 230509 * t25277 + 140931 * t25279 + 9135 * t25281 - 99) * t25268) * np.cos((9 * phi1 - 11 * phi2))

        if Bindx == 2644:
            t25284 = np.cos(phi)
            t25285 = t25284 ** 2
            t25286 = t25284 * t25285
            t25289 = t25286 ** 2
            t25295 = t25289 ** 2
            t25287 = t25285 ** 2
            t25288 = t25284 * t25287
            t25293 = t25288 ** 2
            t25291 = t25287 ** 2
            t25290 = t25284 * t25289
            t25283 = np.sin(phi)
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.3e1) * t25283 ** 2 * (19053 * t25285 + 11196 * t25286 - 137577 * t25287 + 112266 * t25288 + 294525 * t25289 - 18315 * t25291 - 466609 * t25293 + 294021 * t25295 - 657 + (-525624 + 23751 * t25290) * t25290 + (650826 * t25291 - 110916 * t25293 - 142506 * t25295 - 3434) * t25284) * np.sin((9 * phi1 - 10 * phi2)) * ((1 + t25284) ** (-0.1e1 / 0.2e1)) * ((1 - t25284) ** (-0.1e1 / 0.2e1))

        if Bindx == 2645:
            t25298 = np.cos(phi)
            t25299 = t25298 ** 2
            t25300 = t25298 * t25299
            t25303 = t25300 ** 2
            t25304 = t25298 * t25303
            t25311 = t25304 ** 2
            t25309 = t25303 ** 2
            t25301 = t25299 ** 2
            t25302 = t25298 * t25301
            t25307 = t25302 ** 2
            t25305 = t25301 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (96681 * t25299 + 898761 * t25300 - 1642779 * t25301 - 2820411 * t25302 + 8126349 * t25303 + 422829 * t25304 - 15483501 * t25305 + 10037115 * t25307 + 2058615 * t25309 - 3206385 * t25311 - 2479 + (10175539 * t25305 - 14325285 * t25307 + 5147415 * t25309 + 593775 * t25311 - 76239) * t25298) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 2646:
            t25314 = np.cos(phi)
            t25315 = t25314 ** 2
            t25316 = t25314 * t25315
            t25319 = t25316 ** 2
            t25325 = t25319 ** 2
            t25317 = t25315 ** 2
            t25318 = t25314 * t25317
            t25323 = t25318 ** 2
            t25321 = t25317 ** 2
            t25320 = t25314 * t25319
            t25313 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.21e2) * t25313 ** 2 * (15087 * t25315 - 88224 * t25316 - 45045 * t25317 + 480216 * t25318 - 227733 * t25319 + 1106589 * t25321 - 1459315 * t25323 + 534105 * t25325 - 321 + (-1005312 + 84825 * t25320) * t25320 + (613800 * t25321 + 393120 * t25323 - 407160 * t25325 + 5368) * t25314) * np.sin((9 * phi1 - 8 * phi2)) * ((1 + t25314) ** (-0.1e1 / 0.2e1)) * ((1 - t25314) ** (-0.1e1 / 0.2e1))

        if Bindx == 2647:
            t25328 = np.cos(phi)
            t25329 = t25328 ** 2
            t25330 = t25328 * t25329
            t25333 = t25330 ** 2
            t25334 = t25328 * t25333
            t25341 = t25334 ** 2
            t25339 = t25333 ** 2
            t25331 = t25329 ** 2
            t25332 = t25328 * t25331
            t25337 = t25332 ** 2
            t25335 = t25331 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.483e3) * (19745 * t25329 - 19473 * t25330 - 168051 * t25331 + 221859 * t25332 + 509157 * t25333 - 926805 * t25334 - 506517 * t25335 - 278685 * t25337 + 780975 * t25339 - 356265 * t25341 - 359 + (1692581 * t25335 - 1330355 * t25337 + 276705 * t25339 + 84825 * t25341 + 663) * t25328) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 2648:
            t25357 = np.sin(phi)
            t25355 = t25357 ** 2
            t25343 = np.cos(phi)
            t25344 = t25343 ** 2
            t25346 = t25344 ** 2
            t25347 = t25343 * t25346
            t25352 = t25347 ** 2
            t25350 = t25346 ** 2
            t25345 = t25343 * t25344
            t25348 = t25345 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.5313e4) * t25355 ** 2 * (3540 * t25344 + 9130 * t25345 - 35535 * t25346 - 25236 * t25347 - 194025 * t25350 + 72540 * t25352 - 59 + (133456 + 28275 * t25348) * t25348 + (-24300 * t25348 + 134550 * t25350 - 101790 * t25352 - 546) * t25343) * np.sin((9 * phi1 - 6 * phi2)) * ((1 + t25343) ** (-0.1e1 / 0.2e1)) * ((1 - t25343) ** (-0.1e1 / 0.2e1))

        if Bindx == 2649:
            t25358 = np.cos(phi)
            t25359 = t25358 ** 2
            t25360 = t25358 * t25359
            t25363 = t25360 ** 2
            t25364 = t25358 * t25363
            t25371 = t25364 ** 2
            t25369 = t25363 ** 2
            t25361 = t25359 ** 2
            t25362 = t25358 * t25361
            t25367 = t25362 ** 2
            t25365 = t25361 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * (67 * t25359 - 18385 * t25360 + 5539 * t25361 + 116871 * t25362 - 73465 * t25363 - 321677 * t25364 + 290925 * t25365 - 502695 * t25367 + 398385 * t25369 - 118755 * t25371 - 1 + (409881 * t25365 - 195715 * t25367 - 31395 * t25369 + 39585 * t25371 + 835) * t25358) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 2650:
            t25386 = np.sin(phi)
            t25383 = t25386 ** 2
            t25384 = t25386 * t25383
            t25373 = np.cos(phi)
            t25374 = t25373 ** 2
            t25376 = t25374 ** 2
            t25380 = t25376 ** 2
            t25375 = t25373 * t25374
            t25378 = t25375 ** 2
            t25377 = t25373 * t25376
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t25384 ** 2 * (-14559 * t25374 + 41256 * t25375 + 126086 * t25376 - 267670 * t25378 + 36855 * t25380 + 211 + (-256320 + 197925 * t25377) * t25377 + (613080 * t25378 - 475020 * t25380 - 1844) * t25373) * np.sin((9 * phi1 - 4 * phi2)) * ((1 + t25373) ** (-0.1e1 / 0.2e1)) * ((1 - t25373) ** (-0.1e1 / 0.2e1))

        if Bindx == 2651:
            t25387 = np.cos(phi)
            t25388 = t25387 ** 2
            t25389 = t25387 * t25388
            t25392 = t25389 ** 2
            t25393 = t25387 * t25392
            t25400 = t25393 ** 2
            t25398 = t25392 ** 2
            t25390 = t25388 ** 2
            t25391 = t25387 * t25390
            t25396 = t25391 ** 2
            t25394 = t25390 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1311e4) * (-14775 * t25388 - 16949 * t25389 + 182193 * t25390 + 81003 * t25391 - 862379 * t25392 - 50625 * t25393 + 1995039 * t25394 - 2415285 * t25396 + 1471275 * t25398 - 356265 * t25400 + 197 + (-373963 * t25394 + 853905 * t25396 - 692055 * t25398 + 197925 * t25400 + 759) * t25387) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 2652:
            t25413 = np.sin(phi)
            t25410 = t25413 ** 2
            t25411 = t25410 ** 2
            t25402 = np.cos(phi)
            t25403 = t25402 ** 2
            t25404 = t25402 * t25403
            t25407 = t25404 ** 2
            t25405 = t25403 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.17043e5) * t25411 ** 2 * (-962 * t25403 - 10350 * t25404 - 38430 * t25407 + 13 + (10600 + 45675 * t25405) * t25405 + (47790 * t25405 - 54810 * t25407 + 474) * t25402) * np.sin((9 * phi1 - 2 * phi2)) * ((1 + t25402) ** (-0.1e1 / 0.2e1)) * ((1 - t25402) ** (-0.1e1 / 0.2e1))

        if Bindx == 2653:
            t25414 = np.cos(phi)
            t25415 = t25414 ** 2
            t25416 = t25414 * t25415
            t25419 = t25416 ** 2
            t25420 = t25414 * t25419
            t25427 = t25420 ** 2
            t25425 = t25419 ** 2
            t25417 = t25415 ** 2
            t25418 = t25414 * t25417
            t25423 = t25418 ** 2
            t25421 = t25417 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2028117e7) * (-237 * t25415 + 1387 * t25416 + 2943 * t25417 - 10553 * t25418 - 13377 * t25419 + 35927 * t25420 + 28713 * t25421 - 31815 * t25423 + 17685 * t25425 - 3915 * t25427 + 3 + (-64063 * t25421 + 62465 * t25423 - 31635 * t25425 + 6525 * t25427 - 53) * t25414) * np.cos((9 * phi1 - phi2))

        if Bindx == 2654:
            t25437 = np.sin(phi)
            t25433 = t25437 ** 2
            t25435 = t25437 * t25433 ** 2
            t25429 = np.cos(phi)
            t25430 = t25429 ** 2
            t25431 = t25430 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t25435 ** 2 * (-675 * t25431 - 1 + (1305 * t25431 + 75) * t25430) * np.sin((9 * phi1)) * ((1 + t25429) ** (-0.1e1 / 0.2e1)) * ((1 - t25429) ** (-0.1e1 / 0.2e1))

        if Bindx == 2655:
            t25438 = np.cos(phi)
            t25439 = t25438 ** 2
            t25440 = t25438 * t25439
            t25443 = t25440 ** 2
            t25444 = t25438 * t25443
            t25451 = t25444 ** 2
            t25449 = t25443 ** 2
            t25441 = t25439 ** 2
            t25442 = t25438 * t25441
            t25447 = t25442 ** 2
            t25445 = t25441 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2028117e7) * (237 * t25439 + 1387 * t25440 - 2943 * t25441 - 10553 * t25442 + 13377 * t25443 + 35927 * t25444 - 28713 * t25445 + 31815 * t25447 - 17685 * t25449 + 3915 * t25451 - 3 + (-64063 * t25445 + 62465 * t25447 - 31635 * t25449 + 6525 * t25451 - 53) * t25438) * np.cos((9 * phi1 + phi2))

        if Bindx == 2656:
            t25464 = np.sin(phi)
            t25461 = t25464 ** 2
            t25462 = t25461 ** 2
            t25453 = np.cos(phi)
            t25454 = t25453 ** 2
            t25455 = t25453 * t25454
            t25458 = t25455 ** 2
            t25456 = t25454 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.17043e5) * t25462 ** 2 * (-962 * t25454 + 10350 * t25455 - 38430 * t25458 + 13 + (10600 + 45675 * t25456) * t25456 + (-47790 * t25456 + 54810 * t25458 - 474) * t25453) * np.sin((9 * phi1 + 2 * phi2)) * ((1 + t25453) ** (-0.1e1 / 0.2e1)) * ((1 - t25453) ** (-0.1e1 / 0.2e1))

        if Bindx == 2657:
            t25465 = np.cos(phi)
            t25466 = t25465 ** 2
            t25467 = t25465 * t25466
            t25470 = t25467 ** 2
            t25471 = t25465 * t25470
            t25478 = t25471 ** 2
            t25476 = t25470 ** 2
            t25468 = t25466 ** 2
            t25469 = t25465 * t25468
            t25474 = t25469 ** 2
            t25472 = t25468 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1311e4) * (14775 * t25466 - 16949 * t25467 - 182193 * t25468 + 81003 * t25469 + 862379 * t25470 - 50625 * t25471 - 1995039 * t25472 + 2415285 * t25474 - 1471275 * t25476 + 356265 * t25478 - 197 + (-373963 * t25472 + 853905 * t25474 - 692055 * t25476 + 197925 * t25478 + 759) * t25465) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 2658:
            t25493 = np.sin(phi)
            t25490 = t25493 ** 2
            t25491 = t25493 * t25490
            t25480 = np.cos(phi)
            t25481 = t25480 ** 2
            t25483 = t25481 ** 2
            t25487 = t25483 ** 2
            t25482 = t25480 * t25481
            t25485 = t25482 ** 2
            t25484 = t25480 * t25483
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * t25491 ** 2 * (-14559 * t25481 - 41256 * t25482 + 126086 * t25483 - 267670 * t25485 + 36855 * t25487 + 211 + (256320 + 197925 * t25484) * t25484 + (-613080 * t25485 + 475020 * t25487 + 1844) * t25480) * np.sin((9 * phi1 + 4 * phi2)) * ((1 + t25480) ** (-0.1e1 / 0.2e1)) * ((1 - t25480) ** (-0.1e1 / 0.2e1))

        if Bindx == 2659:
            t25494 = np.cos(phi)
            t25495 = t25494 ** 2
            t25496 = t25494 * t25495
            t25499 = t25496 ** 2
            t25500 = t25494 * t25499
            t25507 = t25500 ** 2
            t25505 = t25499 ** 2
            t25497 = t25495 ** 2
            t25498 = t25494 * t25497
            t25503 = t25498 ** 2
            t25501 = t25497 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1265e4) * (-67 * t25495 - 18385 * t25496 - 5539 * t25497 + 116871 * t25498 + 73465 * t25499 - 321677 * t25500 - 290925 * t25501 + 502695 * t25503 - 398385 * t25505 + 118755 * t25507 + 1 + (409881 * t25501 - 195715 * t25503 - 31395 * t25505 + 39585 * t25507 + 835) * t25494) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 2660:
            t25523 = np.sin(phi)
            t25521 = t25523 ** 2
            t25509 = np.cos(phi)
            t25510 = t25509 ** 2
            t25512 = t25510 ** 2
            t25513 = t25509 * t25512
            t25518 = t25513 ** 2
            t25516 = t25512 ** 2
            t25511 = t25509 * t25510
            t25514 = t25511 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.5313e4) * t25521 ** 2 * (3540 * t25510 - 9130 * t25511 - 35535 * t25512 + 25236 * t25513 - 194025 * t25516 + 72540 * t25518 - 59 + (133456 + 28275 * t25514) * t25514 + (24300 * t25514 - 134550 * t25516 + 101790 * t25518 + 546) * t25509) * np.sin((9 * phi1 + 6 * phi2)) * ((1 + t25509) ** (-0.1e1 / 0.2e1)) * ((1 - t25509) ** (-0.1e1 / 0.2e1))

        if Bindx == 2661:
            t25524 = np.cos(phi)
            t25525 = t25524 ** 2
            t25526 = t25524 * t25525
            t25529 = t25526 ** 2
            t25530 = t25524 * t25529
            t25537 = t25530 ** 2
            t25535 = t25529 ** 2
            t25527 = t25525 ** 2
            t25528 = t25524 * t25527
            t25533 = t25528 ** 2
            t25531 = t25527 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.483e3) * (-19745 * t25525 - 19473 * t25526 + 168051 * t25527 + 221859 * t25528 - 509157 * t25529 - 926805 * t25530 + 506517 * t25531 + 278685 * t25533 - 780975 * t25535 + 356265 * t25537 + 359 + (1692581 * t25531 - 1330355 * t25533 + 276705 * t25535 + 84825 * t25537 + 663) * t25524) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 2662:
            t25540 = np.cos(phi)
            t25541 = t25540 ** 2
            t25542 = t25540 * t25541
            t25545 = t25542 ** 2
            t25551 = t25545 ** 2
            t25543 = t25541 ** 2
            t25544 = t25540 * t25543
            t25549 = t25544 ** 2
            t25547 = t25543 ** 2
            t25546 = t25540 * t25545
            t25539 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.21e2) * t25539 ** 2 * (15087 * t25541 + 88224 * t25542 - 45045 * t25543 - 480216 * t25544 - 227733 * t25545 + 1106589 * t25547 - 1459315 * t25549 + 534105 * t25551 - 321 + (1005312 + 84825 * t25546) * t25546 + (-613800 * t25547 - 393120 * t25549 + 407160 * t25551 - 5368) * t25540) * np.sin((9 * phi1 + 8 * phi2)) * ((1 + t25540) ** (-0.1e1 / 0.2e1)) * ((1 - t25540) ** (-0.1e1 / 0.2e1))

        if Bindx == 2663:
            t25554 = np.cos(phi)
            t25555 = t25554 ** 2
            t25556 = t25554 * t25555
            t25559 = t25556 ** 2
            t25560 = t25554 * t25559
            t25567 = t25560 ** 2
            t25565 = t25559 ** 2
            t25557 = t25555 ** 2
            t25558 = t25554 * t25557
            t25563 = t25558 ** 2
            t25561 = t25557 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-96681 * t25555 + 898761 * t25556 + 1642779 * t25557 - 2820411 * t25558 - 8126349 * t25559 + 422829 * t25560 + 15483501 * t25561 - 10037115 * t25563 - 2058615 * t25565 + 3206385 * t25567 + 2479 + (10175539 * t25561 - 14325285 * t25563 + 5147415 * t25565 + 593775 * t25567 - 76239) * t25554) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 2664:
            t25570 = np.cos(phi)
            t25571 = t25570 ** 2
            t25572 = t25570 * t25571
            t25575 = t25572 ** 2
            t25581 = t25575 ** 2
            t25573 = t25571 ** 2
            t25574 = t25570 * t25573
            t25579 = t25574 ** 2
            t25577 = t25573 ** 2
            t25576 = t25570 * t25575
            t25569 = np.sin(phi)
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.3e1) * t25569 ** 2 * (19053 * t25571 - 11196 * t25572 - 137577 * t25573 - 112266 * t25574 + 294525 * t25575 - 18315 * t25577 - 466609 * t25579 + 294021 * t25581 - 657 + (525624 + 23751 * t25576) * t25576 + (-650826 * t25577 + 110916 * t25579 + 142506 * t25581 + 3434) * t25570) * np.sin((9 * phi1 + 10 * phi2)) * ((1 + t25570) ** (-0.1e1 / 0.2e1)) * ((1 - t25570) ** (-0.1e1 / 0.2e1))

        if Bindx == 2665:
            t25584 = np.cos(phi)
            t25585 = t25584 ** 2
            t25586 = t25584 * t25585
            t25589 = t25586 ** 2
            t25590 = t25584 * t25589
            t25597 = t25590 ** 2
            t25595 = t25589 ** 2
            t25587 = t25585 ** 2
            t25588 = t25584 * t25587
            t25593 = t25588 ** 2
            t25591 = t25587 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (13661 * t25585 + 24321 * t25586 - 46899 * t25587 - 160743 * t25588 - 44583 * t25589 + 307197 * t25590 + 357027 * t25591 - 416889 * t25593 + 78111 * t25595 + 60291 * t25597 - 719 + (-90233 * t25591 - 230509 * t25593 + 140931 * t25595 + 9135 * t25597 - 99) * t25584) * np.cos((9 * phi1 + 11 * phi2))

        if Bindx == 2666:
            t25613 = np.sin(phi)
            t25611 = t25613 ** 2
            t25599 = np.cos(phi)
            t25600 = t25599 ** 2
            t25602 = t25600 ** 2
            t25603 = t25599 * t25602
            t25608 = t25603 ** 2
            t25606 = t25602 ** 2
            t25601 = t25599 * t25600
            t25604 = t25601 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t25611 ** 2 * (1062 * t25600 + 6748 * t25601 + 7497 * t25602 - 9576 * t25603 + 9873 * t25606 + 21126 * t25608 - 177 + (-30156 + 1015 * t25604) * t25604 + (-22248 * t25604 + 28572 * t25606 + 7308 * t25608 - 564) * t25599) * np.sin((9 * phi1 + 12 * phi2)) * ((1 + t25599) ** (-0.1e1 / 0.2e1)) * ((1 - t25599) ** (-0.1e1 / 0.2e1))

        if Bindx == 2667:
            t25614 = np.cos(phi)
            t25615 = t25614 ** 2
            t25616 = t25614 * t25615
            t25619 = t25616 ** 2
            t25620 = t25614 * t25619
            t25627 = t25620 ** 2
            t25625 = t25619 ** 2
            t25617 = t25615 ** 2
            t25618 = t25614 * t25617
            t25623 = t25618 ** 2
            t25621 = t25617 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (245 * t25615 - 1377 * t25616 - 3859 * t25617 - 1617 * t25618 + 7249 * t25619 + 11715 * t25620 + 2211 * t25621 - 11121 * t25623 + 4095 * t25625 + 1131 * t25627 + 49 + (-10703 * t25621 - 1843 * t25623 + 3413 * t25625 + 145 * t25627 + 267) * t25614) * np.cos((9 * phi1 + 13 * phi2))

        if Bindx == 2668:
            t25642 = np.sin(phi)
            t25639 = t25642 ** 2
            t25640 = t25642 * t25639
            t25629 = np.cos(phi)
            t25630 = t25629 ** 2
            t25632 = t25630 ** 2
            t25636 = t25632 ** 2
            t25631 = t25629 * t25630
            t25634 = t25631 ** 2
            t25633 = t25629 * t25632
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.39585e5) * t25640 ** 2 * (-63 * t25630 - 72 * t25631 + 42 * t25632 + 378 * t25634 + 153 * t25636 - 3 + (252 + 5 * t25633) * t25633 + (312 * t25634 + 42 * t25636 - 22) * t25629) * np.sin((9 * phi1 + 14 * phi2)) * ((1 + t25629) ** (-0.1e1 / 0.2e1)) * ((1 - t25629) ** (-0.1e1 / 0.2e1))

        if Bindx == 2669:
            t25643 = np.cos(phi)
            t25644 = t25643 ** 2
            t25645 = t25643 * t25644
            t25648 = t25645 ** 2
            t25649 = t25643 * t25648
            t25656 = t25649 ** 2
            t25654 = t25648 ** 2
            t25646 = t25644 ** 2
            t25647 = t25643 * t25646
            t25652 = t25647 ** 2
            t25650 = t25646 ** 2
            tfunc[..., c] = -0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2639e4) * np.cos((9 * phi1 + 15 * phi2)) * (-33 * t25644 - 57 * t25645 - 21 * t25646 + 99 * t25647 + 187 * t25648 + 99 * t25649 - 99 * t25650 - 99 * t25652 + 57 * t25654 + 9 * t25656 - 1 + (-187 * t25650 + 21 * t25652 + 33 * t25654 + t25656 - 9) * t25643)

        if Bindx == 2670:
            t25658 = np.cos(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.7917e4) * ((1 - t25658) ** (0.25e2 / 0.2e1)) * ((1 + t25658) ** (0.5e1 / 0.2e1)) * np.sin((10 * phi1 - 15 * phi2))

        if Bindx == 2671:
            t25659 = np.cos(phi)
            t25660 = t25659 ** 2
            t25661 = t25659 * t25660
            t25664 = t25661 ** 2
            t25665 = t25659 * t25664
            t25672 = t25665 ** 2
            t25670 = t25664 ** 2
            t25662 = t25660 ** 2
            t25663 = t25659 * t25662
            t25668 = t25663 ** 2
            t25666 = t25662 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.13195e5) * (56 * t25660 - 71 * t25661 - 58 * t25662 + 319 * t25663 - 396 * t25664 + 33 * t25665 + 462 * t25666 + 176 * t25668 - 214 * t25670 - 28 * t25672 + 2 + (-539 * t25666 + 163 * t25668 + 109 * t25670 + 3 * t25672 - 17) * t25659) * np.cos((10 * phi1 - 14 * phi2))

        if Bindx == 2672:
            t25688 = np.sin(phi)
            t25686 = t25688 ** 2
            t25674 = np.cos(phi)
            t25675 = t25674 ** 2
            t25677 = t25675 ** 2
            t25678 = t25674 * t25677
            t25683 = t25678 ** 2
            t25681 = t25677 ** 2
            t25676 = t25674 * t25675
            t25679 = t25676 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.455e3) * t25686 ** 2 * (592 * t25675 - 90 * t25676 - 2235 * t25677 + 4596 * t25678 + 6015 * t25681 + 2792 * t25683 + 37 + (-3192 + 87 * t25679) * t25679 + (-2004 * t25679 - 5590 * t25681 - 754 * t25683 - 254) * t25674) * np.sin((10 * phi1 - 13 * phi2)) * ((1 + t25674) ** (-0.1e1 / 0.2e1)) * ((1 - t25674) ** (-0.1e1 / 0.2e1))

        if Bindx == 2673:
            t25689 = np.cos(phi)
            t25690 = t25689 ** 2
            t25691 = t25689 * t25690
            t25694 = t25691 ** 2
            t25695 = t25689 * t25694
            t25702 = t25695 ** 2
            t25700 = t25694 ** 2
            t25692 = t25690 ** 2
            t25693 = t25689 * t25692
            t25698 = t25693 ** 2
            t25696 = t25692 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.195e3) * (-104 * t25690 - 1819 * t25691 + 4076 * t25692 - 143 * t25693 - 10472 * t25694 + 13233 * t25695 + 1188 * t25696 + 13992 * t25698 - 7004 * t25700 - 1624 * t25702 - 52 + (-16577 * t25696 - 289 * t25698 + 5131 * t25700 + 203 * t25702 + 261) * t25689) * np.cos((10 * phi1 - 12 * phi2))

        if Bindx == 2674:
            t25705 = np.cos(phi)
            t25706 = t25705 ** 2
            t25707 = t25705 * t25706
            t25710 = t25707 ** 2
            t25716 = t25710 ** 2
            t25708 = t25706 ** 2
            t25709 = t25705 * t25708
            t25714 = t25709 ** 2
            t25712 = t25708 ** 2
            t25711 = t25705 * t25710
            t25704 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.65e2) * t25704 ** 2 * (-7029 * t25706 + 33756 * t25707 - 21219 * t25708 - 92862 * t25709 + 178563 * t25710 - 233937 * t25712 - 28919 * t25714 + 114471 * t25716 + 781 + (-27192 + 5481 * t25711) * t25711 + (254738 * t25712 - 134244 * t25714 - 40194 * t25716 - 2194) * t25705) * np.sin((10 * phi1 - 11 * phi2)) * ((1 + t25705) ** (-0.1e1 / 0.2e1)) * ((1 - t25705) ** (-0.1e1 / 0.2e1))

        if Bindx == 2675:
            t25719 = np.cos(phi)
            t25720 = t25719 ** 2
            t25721 = t25719 * t25720
            t25724 = t25721 ** 2
            t25725 = t25719 * t25724
            t25732 = t25725 ** 2
            t25730 = t25724 ** 2
            t25722 = t25720 ** 2
            t25723 = t25719 * t25722
            t25728 = t25723 ** 2
            t25726 = t25722 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (-100040 * t25720 + 162015 * t25721 + 379230 * t25722 - 1169751 * t25723 + 198660 * t25724 + 2406855 * t25725 - 2574330 * t25726 + 3268496 * t25728 - 710190 * t25730 - 475020 * t25732 + 5002 + (-921085 * t25726 - 1676155 * t25728 + 1134315 * t25730 + 71253 * t25732 + 745) * t25719) * np.cos((10 * phi1 - 10 * phi2))

        if Bindx == 2676:
            t25735 = np.cos(phi)
            t25736 = t25735 ** 2
            t25737 = t25735 * t25736
            t25740 = t25737 ** 2
            t25746 = t25740 ** 2
            t25738 = t25736 ** 2
            t25739 = t25735 * t25738
            t25744 = t25739 ** 2
            t25742 = t25738 ** 2
            t25741 = t25735 * t25740
            t25734 = np.sin(phi)
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.3e1) * t25734 ** 2 * (19053 * t25736 + 11196 * t25737 - 137577 * t25738 + 112266 * t25739 + 294525 * t25740 - 18315 * t25742 - 466609 * t25744 + 294021 * t25746 - 657 + (-525624 + 23751 * t25741) * t25741 + (650826 * t25742 - 110916 * t25744 - 142506 * t25746 - 3434) * t25735) * np.sin((10 * phi1 - 9 * phi2)) * ((1 + t25735) ** (-0.1e1 / 0.2e1)) * ((1 - t25735) ** (-0.1e1 / 0.2e1))

        if Bindx == 2677:
            t25749 = np.cos(phi)
            t25750 = t25749 ** 2
            t25751 = t25749 * t25750
            t25754 = t25751 ** 2
            t25755 = t25749 * t25754
            t25762 = t25755 ** 2
            t25760 = t25754 ** 2
            t25752 = t25750 ** 2
            t25753 = t25749 * t25752
            t25758 = t25753 ** 2
            t25756 = t25752 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (2128 * t25750 + 15909 * t25751 - 31992 * t25752 - 45903 * t25753 + 148368 * t25754 - 7095 * t25755 - 267432 * t25756 + 159280 * t25758 + 43992 * t25760 - 54288 * t25762 - 56 + (193655 * t25756 - 249457 * t25758 + 84123 * t25760 + 10179 * t25762 - 1411) * t25749) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 2678:
            t25778 = np.sin(phi)
            t25776 = t25778 ** 2
            t25764 = np.cos(phi)
            t25765 = t25764 ** 2
            t25767 = t25765 ** 2
            t25768 = t25764 * t25767
            t25773 = t25768 ** 2
            t25771 = t25767 ** 2
            t25766 = t25764 * t25765
            t25769 = t25766 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.161e3) * t25776 ** 2 * (-1628 * t25765 + 11770 * t25766 + 385 * t25767 - 50996 * t25768 - 110825 * t25771 + 66924 * t25773 + 37 + (43120 + 10179 * t25769) * t25769 + (66484 * t25769 + 12870 * t25771 - 47502 * t25773 - 818) * t25764) * np.sin((10 * phi1 - 7 * phi2)) * ((1 + t25764) ** (-0.1e1 / 0.2e1)) * ((1 - t25764) ** (-0.1e1 / 0.2e1))

        if Bindx == 2679:
            t25779 = np.cos(phi)
            t25780 = t25779 ** 2
            t25781 = t25779 * t25780
            t25784 = t25781 ** 2
            t25785 = t25779 * t25784
            t25792 = t25785 ** 2
            t25790 = t25784 ** 2
            t25782 = t25780 ** 2
            t25783 = t25779 * t25782
            t25788 = t25783 ** 2
            t25786 = t25782 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (312 * t25780 - 511 * t25781 - 2386 * t25782 + 4343 * t25783 + 6116 * t25784 - 15175 * t25785 - 3562 * t25786 - 7728 * t25788 + 11778 * t25790 - 4524 * t25792 - 6 + (24125 * t25786 - 16549 * t25788 + 2613 * t25790 + 1131 * t25792 + 23) * t25779) * np.cos((10 * phi1 - 6 * phi2))

        if Bindx == 2680:
            t25807 = np.sin(phi)
            t25804 = t25807 ** 2
            t25805 = t25807 * t25804
            t25794 = np.cos(phi)
            t25795 = t25794 ** 2
            t25797 = t25795 ** 2
            t25801 = t25797 ** 2
            t25796 = t25794 * t25795
            t25799 = t25796 ** 2
            t25798 = t25794 * t25797
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.3795e4) * t25805 ** 2 * (-4565 * t25795 - 5640 * t25796 + 36230 * t25797 - 92690 * t25799 + 58695 * t25801 + 83 + (-1084 + 23751 * t25798) * t25798 + (63960 * t25799 - 79170 * t25801 + 430) * t25794) * np.sin((10 * phi1 - 5 * phi2)) * ((1 + t25794) ** (-0.1e1 / 0.2e1)) * ((1 - t25794) ** (-0.1e1 / 0.2e1))

        if Bindx == 2681:
            t25808 = np.cos(phi)
            t25809 = t25808 ** 2
            t25810 = t25808 * t25809
            t25813 = t25810 ** 2
            t25814 = t25808 * t25813
            t25821 = t25814 ** 2
            t25819 = t25813 ** 2
            t25811 = t25809 ** 2
            t25812 = t25808 * t25811
            t25817 = t25812 ** 2
            t25815 = t25811 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.69e2) * (-1240 * t25809 - 14231 * t25810 + 17140 * t25811 + 78949 * t25812 - 100184 * t25813 - 183707 * t25814 + 273148 * t25815 - 371560 * t25817 + 246012 * t25819 - 63336 * t25821 + 20 + (185291 * t25815 - 44629 * t25817 - 46137 * t25819 + 23751 * t25821 + 713) * t25808) * np.cos((10 * phi1 - 4 * phi2))

        if Bindx == 2682:
            t25834 = np.sin(phi)
            t25831 = t25834 ** 2
            t25832 = t25831 ** 2
            t25823 = np.cos(phi)
            t25824 = t25823 ** 2
            t25825 = t25823 * t25824
            t25828 = t25825 ** 2
            t25826 = t25824 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.437e3) * t25832 ** 2 * (558 * t25824 - 3150 * t25825 + 546 * t25828 - 9 + (-3380 + 7917 * t25826) * t25826 + (13182 * t25826 - 15834 * t25828 + 170) * t25823) * np.sin((10 * phi1 - 3 * phi2)) * ((1 + t25823) ** (-0.1e1 / 0.2e1)) * ((1 - t25823) ** (-0.1e1 / 0.2e1))

        if Bindx == 2683:
            t25835 = np.cos(phi)
            t25836 = t25835 ** 2
            t25837 = t25835 * t25836
            t25840 = t25837 ** 2
            t25841 = t25835 * t25840
            t25848 = t25841 ** 2
            t25846 = t25840 ** 2
            t25838 = t25836 ** 2
            t25839 = t25835 * t25838
            t25844 = t25839 ** 2
            t25842 = t25838 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5681e4) * (-680 * t25836 + 491 * t25837 + 7390 * t25838 - 4483 * t25839 - 30268 * t25840 + 18883 * t25841 + 60422 * t25842 - 63568 * t25844 + 34002 * t25846 - 7308 * t25848 + 10 + (-39857 * t25842 + 44137 * t25844 - 24633 * t25846 + 5481 * t25848 - 19) * t25835) * np.cos((10 * phi1 - 2 * phi2))

        if Bindx == 2684:
            t25860 = np.sin(phi)
            t25856 = t25860 ** 2
            t25858 = t25860 * t25856 ** 2
            t25850 = np.cos(phi)
            t25851 = t25850 ** 2
            t25853 = t25851 ** 2
            t25852 = t25850 * t25851
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.676039e6) * t25858 ** 2 * (65 * t25851 - 495 * t25853 - 1 + (180 + 783 * t25852) * t25852 + (-522 * t25853 - 10) * t25850) * np.sin((10 * phi1 - phi2)) * ((1 + t25850) ** (-0.1e1 / 0.2e1)) * ((1 - t25850) ** (-0.1e1 / 0.2e1))

        if Bindx == 2685:
            t25861 = np.cos(phi)
            t25862 = t25861 ** 2
            t25863 = t25862 ** 2
            t25864 = t25862 * t25863
            t25867 = t25864 ** 2
            t25865 = t25863 ** 2
            tfunc[..., c] = -0.31e2 / 0.4096e4 * t25861 * np.sqrt(0.10140585e8) * (-761 * t25863 + 2255 * t25864 - 3535 * t25865 - 1395 * t25867 - 5 + (3065 * t25865 + 261 * t25867 + 115) * t25862) * np.cos((10 * phi1))

        if Bindx == 2686:
            t25879 = np.sin(phi)
            t25875 = t25879 ** 2
            t25877 = t25879 * t25875 ** 2
            t25869 = np.cos(phi)
            t25870 = t25869 ** 2
            t25872 = t25870 ** 2
            t25871 = t25869 * t25870
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.676039e6) * t25877 ** 2 * (65 * t25870 - 495 * t25872 - 1 + (-180 + 783 * t25871) * t25871 + (522 * t25872 + 10) * t25869) * np.sin((10 * phi1 + phi2)) * ((1 + t25869) ** (-0.1e1 / 0.2e1)) * ((1 - t25869) ** (-0.1e1 / 0.2e1))

        if Bindx == 2687:
            t25880 = np.cos(phi)
            t25881 = t25880 ** 2
            t25882 = t25880 * t25881
            t25885 = t25882 ** 2
            t25886 = t25880 * t25885
            t25893 = t25886 ** 2
            t25891 = t25885 ** 2
            t25883 = t25881 ** 2
            t25884 = t25880 * t25883
            t25889 = t25884 ** 2
            t25887 = t25883 ** 2
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5681e4) * (680 * t25881 + 491 * t25882 - 7390 * t25883 - 4483 * t25884 + 30268 * t25885 + 18883 * t25886 - 60422 * t25887 + 63568 * t25889 - 34002 * t25891 + 7308 * t25893 - 10 + (-39857 * t25887 + 44137 * t25889 - 24633 * t25891 + 5481 * t25893 - 19) * t25880) * np.cos((10 * phi1 + 2 * phi2))

        if Bindx == 2688:
            t25906 = np.sin(phi)
            t25903 = t25906 ** 2
            t25904 = t25903 ** 2
            t25895 = np.cos(phi)
            t25896 = t25895 ** 2
            t25897 = t25895 * t25896
            t25900 = t25897 ** 2
            t25898 = t25896 ** 2
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.437e3) * t25904 ** 2 * (558 * t25896 + 3150 * t25897 + 546 * t25900 - 9 + (-3380 + 7917 * t25898) * t25898 + (-13182 * t25898 + 15834 * t25900 - 170) * t25895) * np.sin((10 * phi1 + 3 * phi2)) * ((1 - t25895) ** (-0.1e1 / 0.2e1)) * ((1 + t25895) ** (-0.1e1 / 0.2e1))

        if Bindx == 2689:
            t25907 = np.cos(phi)
            t25908 = t25907 ** 2
            t25909 = t25907 * t25908
            t25912 = t25909 ** 2
            t25913 = t25907 * t25912
            t25920 = t25913 ** 2
            t25918 = t25912 ** 2
            t25910 = t25908 ** 2
            t25911 = t25907 * t25910
            t25916 = t25911 ** 2
            t25914 = t25910 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.69e2) * (1240 * t25908 - 14231 * t25909 - 17140 * t25910 + 78949 * t25911 + 100184 * t25912 - 183707 * t25913 - 273148 * t25914 + 371560 * t25916 - 246012 * t25918 + 63336 * t25920 - 20 + (185291 * t25914 - 44629 * t25916 - 46137 * t25918 + 23751 * t25920 + 713) * t25907) * np.cos((10 * phi1 + 4 * phi2))

        if Bindx == 2690:
            t25935 = np.sin(phi)
            t25932 = t25935 ** 2
            t25933 = t25935 * t25932
            t25922 = np.cos(phi)
            t25923 = t25922 ** 2
            t25925 = t25923 ** 2
            t25929 = t25925 ** 2
            t25924 = t25922 * t25923
            t25927 = t25924 ** 2
            t25926 = t25922 * t25925
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.3795e4) * t25933 ** 2 * (-4565 * t25923 + 5640 * t25924 + 36230 * t25925 - 92690 * t25927 + 58695 * t25929 + 83 + (1084 + 23751 * t25926) * t25926 + (-63960 * t25927 + 79170 * t25929 - 430) * t25922) * np.sin((10 * phi1 + 5 * phi2)) * ((1 - t25922) ** (-0.1e1 / 0.2e1)) * ((1 + t25922) ** (-0.1e1 / 0.2e1))

        if Bindx == 2691:
            t25936 = np.cos(phi)
            t25937 = t25936 ** 2
            t25938 = t25936 * t25937
            t25941 = t25938 ** 2
            t25942 = t25936 * t25941
            t25949 = t25942 ** 2
            t25947 = t25941 ** 2
            t25939 = t25937 ** 2
            t25940 = t25936 * t25939
            t25945 = t25940 ** 2
            t25943 = t25939 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * (-312 * t25937 - 511 * t25938 + 2386 * t25939 + 4343 * t25940 - 6116 * t25941 - 15175 * t25942 + 3562 * t25943 + 7728 * t25945 - 11778 * t25947 + 4524 * t25949 + 6 + (24125 * t25943 - 16549 * t25945 + 2613 * t25947 + 1131 * t25949 + 23) * t25936) * np.cos((10 * phi1 + 6 * phi2))

        if Bindx == 2692:
            t25965 = np.sin(phi)
            t25963 = t25965 ** 2
            t25951 = np.cos(phi)
            t25952 = t25951 ** 2
            t25954 = t25952 ** 2
            t25955 = t25951 * t25954
            t25960 = t25955 ** 2
            t25958 = t25954 ** 2
            t25953 = t25951 * t25952
            t25956 = t25953 ** 2
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.161e3) * t25963 ** 2 * (-1628 * t25952 - 11770 * t25953 + 385 * t25954 + 50996 * t25955 - 110825 * t25958 + 66924 * t25960 + 37 + (43120 + 10179 * t25956) * t25956 + (-66484 * t25956 - 12870 * t25958 + 47502 * t25960 + 818) * t25951) * np.sin((10 * phi1 + 7 * phi2)) * ((1 - t25951) ** (-0.1e1 / 0.2e1)) * ((1 + t25951) ** (-0.1e1 / 0.2e1))

        if Bindx == 2693:
            t25966 = np.cos(phi)
            t25967 = t25966 ** 2
            t25968 = t25966 * t25967
            t25971 = t25968 ** 2
            t25972 = t25966 * t25971
            t25979 = t25972 ** 2
            t25977 = t25971 ** 2
            t25969 = t25967 ** 2
            t25970 = t25966 * t25969
            t25975 = t25970 ** 2
            t25973 = t25969 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-2128 * t25967 + 15909 * t25968 + 31992 * t25969 - 45903 * t25970 - 148368 * t25971 - 7095 * t25972 + 267432 * t25973 - 159280 * t25975 - 43992 * t25977 + 54288 * t25979 + 56 + (193655 * t25973 - 249457 * t25975 + 84123 * t25977 + 10179 * t25979 - 1411) * t25966) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 2694:
            t25982 = np.cos(phi)
            t25983 = t25982 ** 2
            t25984 = t25982 * t25983
            t25987 = t25984 ** 2
            t25993 = t25987 ** 2
            t25985 = t25983 ** 2
            t25986 = t25982 * t25985
            t25991 = t25986 ** 2
            t25989 = t25985 ** 2
            t25988 = t25982 * t25987
            t25981 = np.sin(phi)
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.3e1) * t25981 ** 2 * (19053 * t25983 - 11196 * t25984 - 137577 * t25985 - 112266 * t25986 + 294525 * t25987 - 18315 * t25989 - 466609 * t25991 + 294021 * t25993 - 657 + (525624 + 23751 * t25988) * t25988 + (-650826 * t25989 + 110916 * t25991 + 142506 * t25993 + 3434) * t25982) * np.sin((10 * phi1 + 9 * phi2)) * ((1 - t25982) ** (-0.1e1 / 0.2e1)) * ((1 + t25982) ** (-0.1e1 / 0.2e1))

        if Bindx == 2695:
            t25996 = np.cos(phi)
            t25997 = t25996 ** 2
            t25998 = t25996 * t25997
            t26001 = t25998 ** 2
            t26002 = t25996 * t26001
            t26009 = t26002 ** 2
            t26007 = t26001 ** 2
            t25999 = t25997 ** 2
            t26000 = t25996 * t25999
            t26005 = t26000 ** 2
            t26003 = t25999 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (100040 * t25997 + 162015 * t25998 - 379230 * t25999 - 1169751 * t26000 - 198660 * t26001 + 2406855 * t26002 + 2574330 * t26003 - 3268496 * t26005 + 710190 * t26007 + 475020 * t26009 - 5002 + (-921085 * t26003 - 1676155 * t26005 + 1134315 * t26007 + 71253 * t26009 + 745) * t25996) * np.cos((10 * phi1 + 10 * phi2))

        if Bindx == 2696:
            t26012 = np.cos(phi)
            t26013 = t26012 ** 2
            t26014 = t26012 * t26013
            t26017 = t26014 ** 2
            t26023 = t26017 ** 2
            t26015 = t26013 ** 2
            t26016 = t26012 * t26015
            t26021 = t26016 ** 2
            t26019 = t26015 ** 2
            t26018 = t26012 * t26017
            t26011 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.65e2) * t26011 ** 2 * (-7029 * t26013 - 33756 * t26014 - 21219 * t26015 + 92862 * t26016 + 178563 * t26017 - 233937 * t26019 - 28919 * t26021 + 114471 * t26023 + 781 + (27192 + 5481 * t26018) * t26018 + (-254738 * t26019 + 134244 * t26021 + 40194 * t26023 + 2194) * t26012) * np.sin((10 * phi1 + 11 * phi2)) * ((1 - t26012) ** (-0.1e1 / 0.2e1)) * ((1 + t26012) ** (-0.1e1 / 0.2e1))

        if Bindx == 2697:
            t26026 = np.cos(phi)
            t26027 = t26026 ** 2
            t26028 = t26026 * t26027
            t26031 = t26028 ** 2
            t26032 = t26026 * t26031
            t26039 = t26032 ** 2
            t26037 = t26031 ** 2
            t26029 = t26027 ** 2
            t26030 = t26026 * t26029
            t26035 = t26030 ** 2
            t26033 = t26029 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.195e3) * (104 * t26027 - 1819 * t26028 - 4076 * t26029 - 143 * t26030 + 10472 * t26031 + 13233 * t26032 - 1188 * t26033 - 13992 * t26035 + 7004 * t26037 + 1624 * t26039 + 52 + (-16577 * t26033 - 289 * t26035 + 5131 * t26037 + 203 * t26039 + 261) * t26026) * np.cos((10 * phi1 + 12 * phi2))

        if Bindx == 2698:
            t26055 = np.sin(phi)
            t26053 = t26055 ** 2
            t26041 = np.cos(phi)
            t26042 = t26041 ** 2
            t26044 = t26042 ** 2
            t26045 = t26041 * t26044
            t26050 = t26045 ** 2
            t26048 = t26044 ** 2
            t26043 = t26041 * t26042
            t26046 = t26043 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.455e3) * t26053 ** 2 * (592 * t26042 + 90 * t26043 - 2235 * t26044 - 4596 * t26045 + 6015 * t26048 + 2792 * t26050 + 37 + (-3192 + 87 * t26046) * t26046 + (2004 * t26046 + 5590 * t26048 + 754 * t26050 + 254) * t26041) * np.sin((10 * phi1 + 13 * phi2)) * ((1 - t26041) ** (-0.1e1 / 0.2e1)) * ((1 + t26041) ** (-0.1e1 / 0.2e1))

        if Bindx == 2699:
            t26056 = np.cos(phi)
            t26057 = t26056 ** 2
            t26058 = t26056 * t26057
            t26061 = t26058 ** 2
            t26062 = t26056 * t26061
            t26069 = t26062 ** 2
            t26067 = t26061 ** 2
            t26059 = t26057 ** 2
            t26060 = t26056 * t26059
            t26065 = t26060 ** 2
            t26063 = t26059 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.13195e5) * (-56 * t26057 - 71 * t26058 + 58 * t26059 + 319 * t26060 + 396 * t26061 + 33 * t26062 - 462 * t26063 - 176 * t26065 + 214 * t26067 + 28 * t26069 - 2 + (-539 * t26063 + 163 * t26065 + 109 * t26067 + 3 * t26069 - 17) * t26056) * np.cos((10 * phi1 + 14 * phi2))

        if Bindx == 2700:
            t26071 = np.cos(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.7917e4) * ((1 - t26071) ** (0.5e1 / 0.2e1)) * ((1 + t26071) ** (0.25e2 / 0.2e1)) * np.sin((10 * phi1 + 15 * phi2))

        if Bindx == 2701:
            t26072 = np.cos(phi)
            t26073 = t26072 ** 2
            t26074 = t26072 * t26073
            t26077 = t26074 ** 2
            t26078 = t26072 * t26077
            t26085 = t26078 ** 2
            t26083 = t26077 ** 2
            t26075 = t26073 ** 2
            t26076 = t26072 * t26075
            t26081 = t26076 ** 2
            t26079 = t26075 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3045e4) * np.cos((11 * phi1 - 15 * phi2)) * (-53 * t26073 + 143 * t26074 - 221 * t26075 + 143 * t26076 + 143 * t26077 - 429 * t26078 + 429 * t26079 - 143 * t26081 - 143 * t26083 - 11 * t26085 - 1 + (-143 * t26079 + 221 * t26081 + 53 * t26083 + t26085 + 11) * t26072)

        if Bindx == 2702:
            t26101 = np.sin(phi)
            t26099 = t26101 ** 2
            t26087 = np.cos(phi)
            t26088 = t26087 ** 2
            t26090 = t26088 ** 2
            t26091 = t26087 * t26090
            t26096 = t26091 ** 2
            t26094 = t26090 ** 2
            t26089 = t26087 * t26088
            t26092 = t26089 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.203e3) * t26099 ** 2 * (-440 * t26088 + 990 * t26089 - 1155 * t26090 + 132 * t26091 + 3135 * t26094 + 704 * t26096 - 11 + (1848 + 15 * t26092) * t26092 + (-3300 * t26092 - 1870 * t26094 - 154 * t26096 + 106) * t26087) * np.sin((11 * phi1 - 14 * phi2)) * ((1 - t26087) ** (-0.1e1 / 0.2e1)) * ((1 + t26087) ** (-0.1e1 / 0.2e1))

        if Bindx == 2703:
            t26102 = np.cos(phi)
            t26103 = t26102 ** 2
            t26104 = t26102 * t26103
            t26107 = t26104 ** 2
            t26108 = t26102 * t26107
            t26115 = t26108 ** 2
            t26113 = t26107 ** 2
            t26105 = t26103 ** 2
            t26106 = t26102 * t26105
            t26111 = t26106 ** 2
            t26109 = t26105 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (5675 * t26103 - 5291 * t26104 - 12337 * t26105 + 41041 * t26106 - 39897 * t26107 - 15015 * t26108 + 74217 * t26109 + 11297 * t26111 - 35035 * t26113 - 4147 * t26115 + 227 + (-69641 * t26109 + 33631 * t26111 + 16699 * t26113 + 435 * t26115 - 1859) * t26102) * np.cos((11 * phi1 - 13 * phi2))

        if Bindx == 2704:
            t26118 = np.cos(phi)
            t26119 = t26118 ** 2
            t26120 = t26118 * t26119
            t26123 = t26120 ** 2
            t26129 = t26123 ** 2
            t26121 = t26119 ** 2
            t26122 = t26118 * t26121
            t26127 = t26122 ** 2
            t26125 = t26121 ** 2
            t26124 = t26118 * t26123
            t26117 = np.sin(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t26117 ** 2 * (-4719 * t26119 - 3952 * t26120 + 30745 * t26121 - 44044 * t26122 - 3003 * t26123 - 98241 * t26125 + 49907 * t26127 + 32851 * t26129 - 363 + (82368 + 1015 * t26124) * t26124 + (25740 * t26125 - 61776 * t26127 - 8932 * t26129 + 2404) * t26118) * np.sin((11 * phi1 - 12 * phi2)) * ((1 - t26118) ** (-0.1e1 / 0.2e1)) * ((1 + t26118) ** (-0.1e1 / 0.2e1))

        if Bindx == 2705:
            t26132 = np.cos(phi)
            t26133 = t26132 ** 2
            t26134 = t26132 * t26133
            t26137 = t26134 ** 2
            t26138 = t26132 * t26137
            t26145 = t26138 ** 2
            t26143 = t26137 ** 2
            t26135 = t26133 ** 2
            t26136 = t26132 * t26135
            t26141 = t26136 ** 2
            t26139 = t26135 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-6397 * t26133 - 237237 * t26134 + 495183 * t26135 + 56199 * t26136 - 1402401 * t26137 + 1634919 * t26138 + 335049 * t26139 + 1794793 * t26141 - 1005147 * t26143 - 221067 * t26145 - 6397 + (-2278991 * t26139 + 74113 * t26141 + 708813 * t26143 + 27405 * t26145 + 31163) * t26132) * np.cos((11 * phi1 - 11 * phi2))

        if Bindx == 2706:
            t26148 = np.cos(phi)
            t26149 = t26148 ** 2
            t26150 = t26148 * t26149
            t26153 = t26150 ** 2
            t26159 = t26153 ** 2
            t26151 = t26149 ** 2
            t26152 = t26148 * t26151
            t26157 = t26152 ** 2
            t26155 = t26151 ** 2
            t26154 = t26148 * t26153
            t26147 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.65e2) * t26147 ** 2 * (-7029 * t26149 + 33756 * t26150 - 21219 * t26151 - 92862 * t26152 + 178563 * t26153 - 233937 * t26155 - 28919 * t26157 + 114471 * t26159 + 781 + (-27192 + 5481 * t26154) * t26154 + (254738 * t26155 - 134244 * t26157 - 40194 * t26159 - 2194) * t26148) * np.sin((11 * phi1 - 10 * phi2)) * ((1 - t26148) ** (-0.1e1 / 0.2e1)) * ((1 + t26148) ** (-0.1e1 / 0.2e1))

        if Bindx == 2707:
            t26162 = np.cos(phi)
            t26163 = t26162 ** 2
            t26164 = t26162 * t26163
            t26167 = t26164 ** 2
            t26168 = t26162 * t26167
            t26175 = t26168 ** 2
            t26173 = t26167 ** 2
            t26165 = t26163 ** 2
            t26166 = t26162 * t26165
            t26171 = t26166 ** 2
            t26169 = t26165 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (-13661 * t26163 + 24321 * t26164 + 46899 * t26165 - 160743 * t26166 + 44583 * t26167 + 307197 * t26168 - 357027 * t26169 + 416889 * t26171 - 78111 * t26173 - 60291 * t26175 + 719 + (-90233 * t26169 - 230509 * t26171 + 140931 * t26173 + 9135 * t26175 - 99) * t26162) * np.cos((11 * phi1 - 9 * phi2))

        if Bindx == 2708:
            t26191 = np.sin(phi)
            t26189 = t26191 ** 2
            t26177 = np.cos(phi)
            t26178 = t26177 ** 2
            t26180 = t26178 ** 2
            t26181 = t26177 * t26180
            t26186 = t26181 ** 2
            t26184 = t26180 ** 2
            t26179 = t26177 * t26178
            t26182 = t26179 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.455e3) * t26189 ** 2 * (-3718 * t26178 - 88 * t26179 + 21197 * t26180 - 26224 * t26181 - 36487 * t26184 + 48906 * t26186 + 143 + (-23716 + 3915 * t26182) * t26182 + (70928 * t26182 - 32472 * t26184 - 22968 * t26186 + 584) * t26177) * np.sin((11 * phi1 - 8 * phi2)) * ((1 - t26177) ** (-0.1e1 / 0.2e1)) * ((1 + t26177) ** (-0.1e1 / 0.2e1))

        if Bindx == 2709:
            t26192 = np.cos(phi)
            t26193 = t26192 ** 2
            t26194 = t26192 * t26193
            t26197 = t26194 ** 2
            t26198 = t26192 * t26197
            t26205 = t26198 ** 2
            t26203 = t26197 ** 2
            t26195 = t26193 ** 2
            t26196 = t26192 * t26195
            t26201 = t26196 ** 2
            t26199 = t26195 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * (1505 * t26193 + 6501 * t26194 - 17247 * t26195 - 13299 * t26196 + 66957 * t26197 - 21615 * t26198 - 101937 * t26199 + 44627 * t26201 + 26235 * t26203 - 20097 * t26205 - 43 + (96019 * t26199 - 98561 * t26201 + 27711 * t26203 + 3915 * t26205 - 671) * t26192) * np.cos((11 * phi1 - 7 * phi2))

        if Bindx == 2710:
            t26220 = np.sin(phi)
            t26217 = t26220 ** 2
            t26218 = t26220 * t26217
            t26207 = np.cos(phi)
            t26208 = t26207 ** 2
            t26210 = t26208 ** 2
            t26214 = t26210 ** 2
            t26209 = t26207 * t26208
            t26212 = t26209 ** 2
            t26211 = t26207 * t26210
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.115115e6) * t26218 ** 2 * (39 * t26208 - 616 * t26209 + 414 * t26210 - 2554 * t26212 + 2691 * t26214 - 1 + (1716 + 435 * t26211) * t26211 + (-264 * t26212 - 1914 * t26214 + 54) * t26207) * np.sin((11 * phi1 - 6 * phi2)) * ((1 - t26207) ** (-0.1e1 / 0.2e1)) * ((1 + t26207) ** (-0.1e1 / 0.2e1))

        if Bindx == 2711:
            t26221 = np.cos(phi)
            t26222 = t26221 ** 2
            t26223 = t26221 * t26222
            t26226 = t26223 ** 2
            t26227 = t26221 * t26226
            t26234 = t26227 ** 2
            t26232 = t26226 ** 2
            t26224 = t26222 ** 2
            t26225 = t26221 * t26224
            t26230 = t26225 ** 2
            t26228 = t26224 ** 2
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (611 * t26222 - 1787 * t26223 - 3713 * t26224 + 11353 * t26225 + 5887 * t26226 - 31319 * t26227 + 5401 * t26228 - 23287 * t26230 + 21813 * t26232 - 6699 * t26234 - 13 + (40367 * t26228 - 22033 * t26230 + 1491 * t26232 + 1827 * t26234 + 101) * t26221) * np.cos((11 * phi1 - 5 * phi2))

        if Bindx == 2712:
            t26247 = np.sin(phi)
            t26244 = t26247 ** 2
            t26245 = t26244 ** 2
            t26236 = np.cos(phi)
            t26237 = t26236 ** 2
            t26238 = t26236 * t26237
            t26241 = t26238 ** 2
            t26239 = t26237 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t26245 ** 2 * (2928 * t26237 - 308 * t26238 + 17976 * t26241 - 61 + (-15898 + 9135 * t26239) * t26239 + (13068 * t26239 - 26796 * t26241 - 44) * t26236) * np.sin((11 * phi1 - 4 * phi2)) * ((1 - t26236) ** (-0.1e1 / 0.2e1)) * ((1 + t26236) ** (-0.1e1 / 0.2e1))

        if Bindx == 2713:
            t26248 = np.cos(phi)
            t26249 = t26248 ** 2
            t26250 = t26248 * t26249
            t26253 = t26250 ** 2
            t26254 = t26248 * t26253
            t26261 = t26254 ** 2
            t26259 = t26253 ** 2
            t26251 = t26249 ** 2
            t26252 = t26248 * t26251
            t26257 = t26252 ** 2
            t26255 = t26251 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (-605 * t26249 - 2093 * t26250 + 6039 * t26251 + 9095 * t26252 - 25025 * t26253 - 14865 * t26254 + 51425 * t26255 - 55671 * t26257 + 30525 * t26259 - 6699 * t26261 + 11 + (6065 * t26255 + 8857 * t26257 - 10227 * t26259 + 3045 * t26261 + 123) * t26248) * np.cos((11 * phi1 - 3 * phi2))

        if Bindx == 2714:
            t26273 = np.sin(phi)
            t26269 = t26273 ** 2
            t26271 = t26273 * t26269 ** 2
            t26263 = np.cos(phi)
            t26264 = t26263 ** 2
            t26266 = t26264 ** 2
            t26265 = t26263 * t26264
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2185e4) * t26271 ** 2 * (-53 * t26264 - 4473 * t26266 + 1 + (18612 + 27405 * t26265) * t26265 + (-40194 * t26266 - 1298) * t26263) * np.sin((11 * phi1 - 2 * phi2)) * ((1 - t26263) ** (-0.1e1 / 0.2e1)) * ((1 + t26263) ** (-0.1e1 / 0.2e1))

        if Bindx == 2715:
            t26274 = np.cos(phi)
            t26275 = t26274 ** 2
            t26276 = t26274 * t26275
            t26279 = t26276 ** 2
            t26280 = t26274 * t26279
            t26287 = t26280 ** 2
            t26285 = t26279 ** 2
            t26277 = t26275 ** 2
            t26278 = t26274 * t26277
            t26283 = t26278 ** 2
            t26281 = t26277 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * (-649 * t26275 + 2341 * t26276 + 5951 * t26277 - 13835 * t26278 - 20405 * t26279 + 38225 * t26280 + 34705 * t26281 - 31691 * t26283 + 14949 * t26285 - 2871 * t26287 + 11 + (-57205 * t26281 + 47999 * t26283 - 21321 * t26285 + 3915 * t26287 - 119) * t26274) * np.cos((11 * phi1 - phi2))

        if Bindx == 2716:
            t26296 = np.sin(phi)
            t26292 = t26296 ** 2
            t26293 = t26296 * t26292
            t26294 = t26293 ** 2
            t26289 = np.cos(phi)
            t26290 = t26289 ** 2
            tfunc[..., c] = -0.155e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.156009e6) * t26294 ** 2 * (1 + (-54 + 261 * t26290) * t26290) * np.sin((11 * phi1)) * ((1 - t26289) ** (-0.1e1 / 0.2e1)) * ((1 + t26289) ** (-0.1e1 / 0.2e1))

        if Bindx == 2717:
            t26297 = np.cos(phi)
            t26298 = t26297 ** 2
            t26299 = t26297 * t26298
            t26302 = t26299 ** 2
            t26303 = t26297 * t26302
            t26310 = t26303 ** 2
            t26308 = t26302 ** 2
            t26300 = t26298 ** 2
            t26301 = t26297 * t26300
            t26306 = t26301 ** 2
            t26304 = t26300 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * (649 * t26298 + 2341 * t26299 - 5951 * t26300 - 13835 * t26301 + 20405 * t26302 + 38225 * t26303 - 34705 * t26304 + 31691 * t26306 - 14949 * t26308 + 2871 * t26310 - 11 + (-57205 * t26304 + 47999 * t26306 - 21321 * t26308 + 3915 * t26310 - 119) * t26297) * np.cos((11 * phi1 + phi2))

        if Bindx == 2718:
            t26322 = np.sin(phi)
            t26318 = t26322 ** 2
            t26320 = t26322 * t26318 ** 2
            t26312 = np.cos(phi)
            t26313 = t26312 ** 2
            t26315 = t26313 ** 2
            t26314 = t26312 * t26313
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2185e4) * t26320 ** 2 * (-53 * t26313 - 4473 * t26315 + 1 + (-18612 + 27405 * t26314) * t26314 + (40194 * t26315 + 1298) * t26312) * np.sin((11 * phi1 + 2 * phi2)) * ((1 - t26312) ** (-0.1e1 / 0.2e1)) * ((1 + t26312) ** (-0.1e1 / 0.2e1))

        if Bindx == 2719:
            t26323 = np.cos(phi)
            t26324 = t26323 ** 2
            t26325 = t26323 * t26324
            t26328 = t26325 ** 2
            t26329 = t26323 * t26328
            t26336 = t26329 ** 2
            t26334 = t26328 ** 2
            t26326 = t26324 ** 2
            t26327 = t26323 * t26326
            t26332 = t26327 ** 2
            t26330 = t26326 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (605 * t26324 - 2093 * t26325 - 6039 * t26326 + 9095 * t26327 + 25025 * t26328 - 14865 * t26329 - 51425 * t26330 + 55671 * t26332 - 30525 * t26334 + 6699 * t26336 - 11 + (6065 * t26330 + 8857 * t26332 - 10227 * t26334 + 3045 * t26336 + 123) * t26323) * np.cos((11 * phi1 + 3 * phi2))

        if Bindx == 2720:
            t26349 = np.sin(phi)
            t26346 = t26349 ** 2
            t26347 = t26346 ** 2
            t26338 = np.cos(phi)
            t26339 = t26338 ** 2
            t26340 = t26338 * t26339
            t26343 = t26340 ** 2
            t26341 = t26339 ** 2
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t26347 ** 2 * (2928 * t26339 + 308 * t26340 + 17976 * t26343 - 61 + (-15898 + 9135 * t26341) * t26341 + (-13068 * t26341 + 26796 * t26343 + 44) * t26338) * np.sin((11 * phi1 + 4 * phi2)) * ((1 - t26338) ** (-0.1e1 / 0.2e1)) * ((1 + t26338) ** (-0.1e1 / 0.2e1))

        if Bindx == 2721:
            t26350 = np.cos(phi)
            t26351 = t26350 ** 2
            t26352 = t26350 * t26351
            t26355 = t26352 ** 2
            t26356 = t26350 * t26355
            t26363 = t26356 ** 2
            t26361 = t26355 ** 2
            t26353 = t26351 ** 2
            t26354 = t26350 * t26353
            t26359 = t26354 ** 2
            t26357 = t26353 ** 2
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.9867e4) * (-611 * t26351 - 1787 * t26352 + 3713 * t26353 + 11353 * t26354 - 5887 * t26355 - 31319 * t26356 - 5401 * t26357 + 23287 * t26359 - 21813 * t26361 + 6699 * t26363 + 13 + (40367 * t26357 - 22033 * t26359 + 1491 * t26361 + 1827 * t26363 + 101) * t26350) * np.cos((11 * phi1 + 5 * phi2))

        if Bindx == 2722:
            t26378 = np.sin(phi)
            t26375 = t26378 ** 2
            t26376 = t26378 * t26375
            t26365 = np.cos(phi)
            t26366 = t26365 ** 2
            t26368 = t26366 ** 2
            t26372 = t26368 ** 2
            t26367 = t26365 * t26366
            t26370 = t26367 ** 2
            t26369 = t26365 * t26368
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.115115e6) * t26376 ** 2 * (39 * t26366 + 616 * t26367 + 414 * t26368 - 2554 * t26370 + 2691 * t26372 - 1 + (-1716 + 435 * t26369) * t26369 + (264 * t26370 + 1914 * t26372 - 54) * t26365) * np.sin((11 * phi1 + 6 * phi2)) * ((1 - t26365) ** (-0.1e1 / 0.2e1)) * ((1 + t26365) ** (-0.1e1 / 0.2e1))

        if Bindx == 2723:
            t26379 = np.cos(phi)
            t26380 = t26379 ** 2
            t26381 = t26379 * t26380
            t26384 = t26381 ** 2
            t26385 = t26379 * t26384
            t26392 = t26385 ** 2
            t26390 = t26384 ** 2
            t26382 = t26380 ** 2
            t26383 = t26379 * t26382
            t26388 = t26383 ** 2
            t26386 = t26382 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.10465e5) * (-1505 * t26380 + 6501 * t26381 + 17247 * t26382 - 13299 * t26383 - 66957 * t26384 - 21615 * t26385 + 101937 * t26386 - 44627 * t26388 - 26235 * t26390 + 20097 * t26392 + 43 + (96019 * t26386 - 98561 * t26388 + 27711 * t26390 + 3915 * t26392 - 671) * t26379) * np.cos((11 * phi1 + 7 * phi2))

        if Bindx == 2724:
            t26408 = np.sin(phi)
            t26406 = t26408 ** 2
            t26394 = np.cos(phi)
            t26395 = t26394 ** 2
            t26397 = t26395 ** 2
            t26398 = t26394 * t26397
            t26403 = t26398 ** 2
            t26401 = t26397 ** 2
            t26396 = t26394 * t26395
            t26399 = t26396 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.455e3) * t26406 ** 2 * (-3718 * t26395 + 88 * t26396 + 21197 * t26397 + 26224 * t26398 - 36487 * t26401 + 48906 * t26403 + 143 + (-23716 + 3915 * t26399) * t26399 + (-70928 * t26399 + 32472 * t26401 + 22968 * t26403 - 584) * t26394) * np.sin((11 * phi1 + 8 * phi2)) * ((1 - t26394) ** (-0.1e1 / 0.2e1)) * ((1 + t26394) ** (-0.1e1 / 0.2e1))

        if Bindx == 2725:
            t26409 = np.cos(phi)
            t26410 = t26409 ** 2
            t26411 = t26409 * t26410
            t26414 = t26411 ** 2
            t26415 = t26409 * t26414
            t26422 = t26415 ** 2
            t26420 = t26414 ** 2
            t26412 = t26410 ** 2
            t26413 = t26409 * t26412
            t26418 = t26413 ** 2
            t26416 = t26412 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (13661 * t26410 + 24321 * t26411 - 46899 * t26412 - 160743 * t26413 - 44583 * t26414 + 307197 * t26415 + 357027 * t26416 - 416889 * t26418 + 78111 * t26420 + 60291 * t26422 - 719 + (-90233 * t26416 - 230509 * t26418 + 140931 * t26420 + 9135 * t26422 - 99) * t26409) * np.cos((11 * phi1 + 9 * phi2))

        if Bindx == 2726:
            t26425 = np.cos(phi)
            t26426 = t26425 ** 2
            t26427 = t26425 * t26426
            t26430 = t26427 ** 2
            t26436 = t26430 ** 2
            t26428 = t26426 ** 2
            t26429 = t26425 * t26428
            t26434 = t26429 ** 2
            t26432 = t26428 ** 2
            t26431 = t26425 * t26430
            t26424 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.65e2) * t26424 ** 2 * (-7029 * t26426 - 33756 * t26427 - 21219 * t26428 + 92862 * t26429 + 178563 * t26430 - 233937 * t26432 - 28919 * t26434 + 114471 * t26436 + 781 + (27192 + 5481 * t26431) * t26431 + (-254738 * t26432 + 134244 * t26434 + 40194 * t26436 + 2194) * t26425) * np.sin((11 * phi1 + 10 * phi2)) * ((1 - t26425) ** (-0.1e1 / 0.2e1)) * ((1 + t26425) ** (-0.1e1 / 0.2e1))

        if Bindx == 2727:
            t26439 = np.cos(phi)
            t26440 = t26439 ** 2
            t26441 = t26439 * t26440
            t26444 = t26441 ** 2
            t26445 = t26439 * t26444
            t26452 = t26445 ** 2
            t26450 = t26444 ** 2
            t26442 = t26440 ** 2
            t26443 = t26439 * t26442
            t26448 = t26443 ** 2
            t26446 = t26442 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (6397 * t26440 - 237237 * t26441 - 495183 * t26442 + 56199 * t26443 + 1402401 * t26444 + 1634919 * t26445 - 335049 * t26446 - 1794793 * t26448 + 1005147 * t26450 + 221067 * t26452 + 6397 + (-2278991 * t26446 + 74113 * t26448 + 708813 * t26450 + 27405 * t26452 + 31163) * t26439) * np.cos((11 * phi1 + 11 * phi2))

        if Bindx == 2728:
            t26455 = np.cos(phi)
            t26456 = t26455 ** 2
            t26457 = t26455 * t26456
            t26460 = t26457 ** 2
            t26466 = t26460 ** 2
            t26458 = t26456 ** 2
            t26459 = t26455 * t26458
            t26464 = t26459 ** 2
            t26462 = t26458 ** 2
            t26461 = t26455 * t26460
            t26454 = np.sin(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t26454 ** 2 * (-4719 * t26456 + 3952 * t26457 + 30745 * t26458 + 44044 * t26459 - 3003 * t26460 - 98241 * t26462 + 49907 * t26464 + 32851 * t26466 - 363 + (-82368 + 1015 * t26461) * t26461 + (-25740 * t26462 + 61776 * t26464 + 8932 * t26466 - 2404) * t26455) * np.sin((11 * phi1 + 12 * phi2)) * ((1 - t26455) ** (-0.1e1 / 0.2e1)) * ((1 + t26455) ** (-0.1e1 / 0.2e1))

        if Bindx == 2729:
            t26469 = np.cos(phi)
            t26470 = t26469 ** 2
            t26471 = t26469 * t26470
            t26474 = t26471 ** 2
            t26475 = t26469 * t26474
            t26482 = t26475 ** 2
            t26480 = t26474 ** 2
            t26472 = t26470 ** 2
            t26473 = t26469 * t26472
            t26478 = t26473 ** 2
            t26476 = t26472 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-5675 * t26470 - 5291 * t26471 + 12337 * t26472 + 41041 * t26473 + 39897 * t26474 - 15015 * t26475 - 74217 * t26476 - 11297 * t26478 + 35035 * t26480 + 4147 * t26482 - 227 + (-69641 * t26476 + 33631 * t26478 + 16699 * t26480 + 435 * t26482 - 1859) * t26469) * np.cos((11 * phi1 + 13 * phi2))

        if Bindx == 2730:
            t26498 = np.sin(phi)
            t26496 = t26498 ** 2
            t26484 = np.cos(phi)
            t26485 = t26484 ** 2
            t26487 = t26485 ** 2
            t26488 = t26484 * t26487
            t26493 = t26488 ** 2
            t26491 = t26487 ** 2
            t26486 = t26484 * t26485
            t26489 = t26486 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.203e3) * t26496 ** 2 * (-440 * t26485 - 990 * t26486 - 1155 * t26487 - 132 * t26488 + 3135 * t26491 + 704 * t26493 - 11 + (1848 + 15 * t26489) * t26489 + (3300 * t26489 + 1870 * t26491 + 154 * t26493 - 106) * t26484) * np.sin((11 * phi1 + 14 * phi2)) * ((1 - t26484) ** (-0.1e1 / 0.2e1)) * ((1 + t26484) ** (-0.1e1 / 0.2e1))

        if Bindx == 2731:
            t26499 = np.cos(phi)
            t26500 = t26499 ** 2
            t26501 = t26499 * t26500
            t26504 = t26501 ** 2
            t26505 = t26499 * t26504
            t26512 = t26505 ** 2
            t26510 = t26504 ** 2
            t26502 = t26500 ** 2
            t26503 = t26499 * t26502
            t26508 = t26503 ** 2
            t26506 = t26502 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3045e4) * np.cos((11 * phi1 + 15 * phi2)) * (53 * t26500 + 143 * t26501 + 221 * t26502 + 143 * t26503 - 143 * t26504 - 429 * t26505 - 429 * t26506 + 143 * t26508 + 143 * t26510 + 11 * t26512 + 1 + (-143 * t26506 + 221 * t26508 + 53 * t26510 + t26512 + 11) * t26499)

        if Bindx == 2732:
            t26514 = np.cos(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * ((1 - t26514) ** (0.27e2 / 0.2e1)) * ((1 + t26514) ** (0.3e1 / 0.2e1)) * np.sin((12 * phi1 - 15 * phi2))

        if Bindx == 2733:
            t26515 = np.cos(phi)
            t26516 = t26515 ** 2
            t26517 = t26515 * t26516
            t26520 = t26517 ** 2
            t26521 = t26515 * t26520
            t26528 = t26521 ** 2
            t26526 = t26520 ** 2
            t26518 = t26516 ** 2
            t26519 = t26515 * t26518
            t26524 = t26519 ** 2
            t26522 = t26518 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.609e3) * (-200 * t26516 + 507 * t26517 - 676 * t26518 + 143 * t26519 + 1144 * t26520 - 2145 * t26521 + 1716 * t26522 - 1144 * t26524 - 780 * t26526 - 56 * t26528 - 4 + (-143 * t26522 + 1313 * t26524 + 277 * t26526 + 5 * t26528 + 43) * t26515) * np.cos((12 * phi1 - 14 * phi2))

        if Bindx == 2734:
            t26531 = np.cos(phi)
            t26532 = t26531 ** 2
            t26533 = t26531 * t26532
            t26536 = t26533 ** 2
            t26542 = t26536 ** 2
            t26534 = t26532 ** 2
            t26535 = t26531 * t26534
            t26540 = t26535 ** 2
            t26538 = t26534 ** 2
            t26537 = t26531 * t26536
            t26530 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t26530 ** 2 * (3367 * t26532 - 6448 * t26533 + 3575 * t26534 + 10868 * t26535 - 27885 * t26536 - 4719 * t26538 + 26741 * t26540 + 6877 * t26542 + 91 + (27456 + 145 * t26537) * t26537 + (-20020 * t26538 - 17680 * t26540 - 1508 * t26542 - 860) * t26531) * np.sin((12 * phi1 - 13 * phi2)) * ((1 + t26531) ** (-0.1e1 / 0.2e1)) * ((1 - t26531) ** (-0.1e1 / 0.2e1))

        if Bindx == 2735:
            t26545 = np.cos(phi)
            t26546 = t26545 ** 2
            t26547 = t26545 * t26546
            t26550 = t26547 ** 2
            t26551 = t26545 * t26550
            t26558 = t26551 ** 2
            t26556 = t26550 ** 2
            t26548 = t26546 ** 2
            t26549 = t26545 * t26548
            t26554 = t26549 ** 2
            t26552 = t26548 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * (11712 * t26546 - 9451 * t26547 - 30264 * t26548 + 90519 * t26549 - 80080 * t26550 - 47619 * t26551 + 175032 * t26552 + 13728 * t26554 - 84968 * t26556 - 9744 * t26558 + 488 + (-152867 * t26552 + 86775 * t26554 + 39669 * t26556 + 1015 * t26558 - 3945) * t26545) * np.cos((12 * phi1 - 12 * phi2))

        if Bindx == 2736:
            t26561 = np.cos(phi)
            t26562 = t26561 ** 2
            t26563 = t26561 * t26562
            t26566 = t26563 ** 2
            t26572 = t26566 ** 2
            t26564 = t26562 ** 2
            t26565 = t26561 * t26564
            t26570 = t26565 ** 2
            t26568 = t26564 ** 2
            t26567 = t26561 * t26566
            t26560 = np.sin(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t26560 ** 2 * (-4719 * t26562 - 3952 * t26563 + 30745 * t26564 - 44044 * t26565 - 3003 * t26566 - 98241 * t26568 + 49907 * t26570 + 32851 * t26572 - 363 + (82368 + 1015 * t26567) * t26567 + (25740 * t26568 - 61776 * t26570 - 8932 * t26572 + 2404) * t26561) * np.sin((12 * phi1 - 11 * phi2)) * ((1 + t26561) ** (-0.1e1 / 0.2e1)) * ((1 - t26561) ** (-0.1e1 / 0.2e1))

        if Bindx == 2737:
            t26575 = np.cos(phi)
            t26576 = t26575 ** 2
            t26577 = t26575 * t26576
            t26580 = t26577 ** 2
            t26581 = t26575 * t26580
            t26588 = t26581 ** 2
            t26586 = t26580 ** 2
            t26578 = t26576 ** 2
            t26579 = t26575 * t26578
            t26584 = t26579 ** 2
            t26582 = t26578 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.195e3) * (-104 * t26576 - 1819 * t26577 + 4076 * t26578 - 143 * t26579 - 10472 * t26580 + 13233 * t26581 + 1188 * t26582 + 13992 * t26584 - 7004 * t26586 - 1624 * t26588 - 52 + (-16577 * t26582 - 289 * t26584 + 5131 * t26586 + 203 * t26588 + 261) * t26575) * np.cos((12 * phi1 - 10 * phi2))

        if Bindx == 2738:
            t26604 = np.sin(phi)
            t26602 = t26604 ** 2
            t26590 = np.cos(phi)
            t26591 = t26590 ** 2
            t26593 = t26591 ** 2
            t26594 = t26590 * t26593
            t26599 = t26594 ** 2
            t26597 = t26593 ** 2
            t26592 = t26590 * t26591
            t26595 = t26592 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t26602 ** 2 * (1062 * t26591 - 6748 * t26592 + 7497 * t26593 + 9576 * t26594 + 9873 * t26597 + 21126 * t26599 - 177 + (-30156 + 1015 * t26595) * t26595 + (22248 * t26595 - 28572 * t26597 - 7308 * t26599 + 564) * t26590) * np.sin((12 * phi1 - 9 * phi2)) * ((1 + t26590) ** (-0.1e1 / 0.2e1)) * ((1 - t26590) ** (-0.1e1 / 0.2e1))

        if Bindx == 2739:
            t26605 = np.cos(phi)
            t26606 = t26605 ** 2
            t26607 = t26605 * t26606
            t26610 = t26607 ** 2
            t26611 = t26605 * t26610
            t26618 = t26611 ** 2
            t26616 = t26610 ** 2
            t26608 = t26606 ** 2
            t26609 = t26605 * t26608
            t26614 = t26609 ** 2
            t26612 = t26608 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-256 * t26606 + 587 * t26607 + 592 * t26608 - 3047 * t26609 + 1760 * t26610 + 4587 * t26611 - 6864 * t26612 + 6336 * t26614 - 656 * t26616 - 928 * t26618 + 16 + (11 * t26612 - 4295 * t26614 + 2027 * t26616 + 145 * t26618 - 15) * t26605) * np.cos((12 * phi1 - 8 * phi2))

        if Bindx == 2740:
            t26633 = np.sin(phi)
            t26630 = t26633 ** 2
            t26631 = t26633 * t26630
            t26620 = np.cos(phi)
            t26621 = t26620 ** 2
            t26623 = t26621 ** 2
            t26627 = t26623 ** 2
            t26622 = t26620 * t26621
            t26625 = t26622 ** 2
            t26624 = t26620 * t26623
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t26631 ** 2 * (189 * t26621 - 152 * t26622 - 658 * t26623 - 350 * t26625 + 1707 * t26627 - 9 + (1344 + 145 * t26624) * t26624 + (-1384 * t26625 - 812 * t26627 - 20) * t26620) * np.sin((12 * phi1 - 7 * phi2)) * ((1 + t26620) ** (-0.1e1 / 0.2e1)) * ((1 - t26620) ** (-0.1e1 / 0.2e1))

        if Bindx == 2741:
            t26634 = np.cos(phi)
            t26635 = t26634 ** 2
            t26636 = t26634 * t26635
            t26639 = t26636 ** 2
            t26640 = t26634 * t26639
            t26647 = t26640 ** 2
            t26645 = t26639 ** 2
            t26637 = t26635 ** 2
            t26638 = t26634 * t26637
            t26643 = t26638 ** 2
            t26641 = t26637 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.345345e6) * (120 * t26635 + 223 * t26636 - 996 * t26637 + 3 * t26638 + 2936 * t26639 - 2205 * t26640 - 3276 * t26641 + 456 * t26643 + 1460 * t26645 - 696 * t26647 - 4 + (4717 * t26641 - 3603 * t26643 + 753 * t26645 + 145 * t26647 - 33) * t26634) * np.cos((12 * phi1 - 6 * phi2))

        if Bindx == 2742:
            t26660 = np.sin(phi)
            t26657 = t26660 ** 2
            t26658 = t26657 ** 2
            t26649 = np.cos(phi)
            t26650 = t26649 ** 2
            t26651 = t26649 * t26650
            t26654 = t26651 ** 2
            t26652 = t26650 ** 2
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3289e4) * t26658 ** 2 * (32 * t26650 + 332 * t26651 + 1064 * t26654 - 1 + (-530 + 203 * t26652) * t26652 + (-244 * t26652 - 812 * t26654 - 44) * t26649) * np.sin((12 * phi1 - 5 * phi2)) * ((1 + t26649) ** (-0.1e1 / 0.2e1)) * ((1 - t26649) ** (-0.1e1 / 0.2e1))

        if Bindx == 2743:
            t26661 = np.cos(phi)
            t26662 = t26661 ** 2
            t26663 = t26661 * t26662
            t26666 = t26663 ** 2
            t26667 = t26661 * t26666
            t26674 = t26667 ** 2
            t26672 = t26666 ** 2
            t26664 = t26662 ** 2
            t26665 = t26661 * t26664
            t26670 = t26665 ** 2
            t26668 = t26664 ** 2
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (320 * t26662 - 2091 * t26663 - 872 * t26664 + 9815 * t26665 - 2800 * t26666 - 20355 * t26667 + 13800 * t26668 - 20512 * t26670 + 13320 * t26672 - 3248 * t26674 - 8 + (19805 * t26668 - 7241 * t26670 - 1099 * t26672 + 1015 * t26674 + 151) * t26661) * np.cos((12 * phi1 - 4 * phi2))

        if Bindx == 2744:
            t26686 = np.sin(phi)
            t26682 = t26686 ** 2
            t26684 = t26686 * t26682 ** 2
            t26676 = np.cos(phi)
            t26677 = t26676 ** 2
            t26679 = t26677 ** 2
            t26678 = t26676 * t26677
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * t26684 ** 2 * (-507 * t26677 + 1239 * t26679 + 13 + (736 + 1015 * t26678) * t26678 + (-2436 * t26679 - 60) * t26676) * np.sin((12 * phi1 - 3 * phi2)) * ((1 + t26676) ** (-0.1e1 / 0.2e1)) * ((1 - t26676) ** (-0.1e1 / 0.2e1))

        if Bindx == 2745:
            t26687 = np.cos(phi)
            t26688 = t26687 ** 2
            t26689 = t26687 * t26688
            t26692 = t26689 ** 2
            t26693 = t26687 * t26692
            t26700 = t26693 ** 2
            t26698 = t26692 ** 2
            t26690 = t26688 ** 2
            t26691 = t26687 * t26690
            t26696 = t26691 ** 2
            t26694 = t26690 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.6555e4) * (-552 * t26688 - 279 * t26689 + 4204 * t26690 + 5 * t26691 - 13160 * t26692 + 3285 * t26693 + 21220 * t26694 - 18712 * t26696 + 8612 * t26698 - 1624 * t26700 + 12 + (-8485 * t26694 + 9355 * t26696 - 4921 * t26698 + 1015 * t26700 + 25) * t26687) * np.cos((12 * phi1 - 2 * phi2))

        if Bindx == 2746:
            t26710 = np.sin(phi)
            t26706 = t26710 ** 2
            t26707 = t26710 * t26706
            t26708 = t26707 ** 2
            t26702 = np.cos(phi)
            t26703 = t26702 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.780045e6) * t26708 ** 2 * (12 * t26702 + 1 + (-116 * t26702 - 42 + 145 * t26703) * t26703) * np.sin((12 * phi1 - phi2)) * ((1 + t26702) ** (-0.1e1 / 0.2e1)) * ((1 - t26702) ** (-0.1e1 / 0.2e1))

        if Bindx == 2747:
            t26711 = np.cos(phi)
            t26712 = t26711 ** 2
            t26713 = t26712 ** 2
            t26714 = t26712 * t26713
            t26717 = t26714 ** 2
            t26715 = t26713 ** 2
            tfunc[..., c] = 0.465e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * t26711 * (-219 * t26713 + 495 * t26714 - 625 * t26715 - 177 * t26717 - 3 + (453 * t26715 + 29 * t26717 + 47) * t26712) * np.cos((12 * phi1))

        if Bindx == 2748:
            t26727 = np.sin(phi)
            t26723 = t26727 ** 2
            t26724 = t26727 * t26723
            t26725 = t26724 ** 2
            t26719 = np.cos(phi)
            t26720 = t26719 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.780045e6) * t26725 ** 2 * (-12 * t26719 + 1 + (116 * t26719 - 42 + 145 * t26720) * t26720) * np.sin((12 * phi1 + phi2)) * ((1 + t26719) ** (-0.1e1 / 0.2e1)) * ((1 - t26719) ** (-0.1e1 / 0.2e1))

        if Bindx == 2749:
            t26728 = np.cos(phi)
            t26729 = t26728 ** 2
            t26730 = t26728 * t26729
            t26733 = t26730 ** 2
            t26734 = t26728 * t26733
            t26741 = t26734 ** 2
            t26739 = t26733 ** 2
            t26731 = t26729 ** 2
            t26732 = t26728 * t26731
            t26737 = t26732 ** 2
            t26735 = t26731 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.6555e4) * (552 * t26729 - 279 * t26730 - 4204 * t26731 + 5 * t26732 + 13160 * t26733 + 3285 * t26734 - 21220 * t26735 + 18712 * t26737 - 8612 * t26739 + 1624 * t26741 - 12 + (-8485 * t26735 + 9355 * t26737 - 4921 * t26739 + 1015 * t26741 + 25) * t26728) * np.cos((12 * phi1 + 2 * phi2))

        if Bindx == 2750:
            t26753 = np.sin(phi)
            t26749 = t26753 ** 2
            t26751 = t26753 * t26749 ** 2
            t26743 = np.cos(phi)
            t26744 = t26743 ** 2
            t26746 = t26744 ** 2
            t26745 = t26743 * t26744
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * t26751 ** 2 * (-507 * t26744 + 1239 * t26746 + 13 + (-736 + 1015 * t26745) * t26745 + (2436 * t26746 + 60) * t26743) * np.sin((12 * phi1 + 3 * phi2)) * ((1 + t26743) ** (-0.1e1 / 0.2e1)) * ((1 - t26743) ** (-0.1e1 / 0.2e1))

        if Bindx == 2751:
            t26754 = np.cos(phi)
            t26755 = t26754 ** 2
            t26756 = t26754 * t26755
            t26759 = t26756 ** 2
            t26760 = t26754 * t26759
            t26767 = t26760 ** 2
            t26765 = t26759 ** 2
            t26757 = t26755 ** 2
            t26758 = t26754 * t26757
            t26763 = t26758 ** 2
            t26761 = t26757 ** 2
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (-320 * t26755 - 2091 * t26756 + 872 * t26757 + 9815 * t26758 + 2800 * t26759 - 20355 * t26760 - 13800 * t26761 + 20512 * t26763 - 13320 * t26765 + 3248 * t26767 + 8 + (19805 * t26761 - 7241 * t26763 - 1099 * t26765 + 1015 * t26767 + 151) * t26754) * np.cos((12 * phi1 + 4 * phi2))

        if Bindx == 2752:
            t26780 = np.sin(phi)
            t26777 = t26780 ** 2
            t26778 = t26777 ** 2
            t26769 = np.cos(phi)
            t26770 = t26769 ** 2
            t26771 = t26769 * t26770
            t26774 = t26771 ** 2
            t26772 = t26770 ** 2
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3289e4) * t26778 ** 2 * (32 * t26770 - 332 * t26771 + 1064 * t26774 - 1 + (-530 + 203 * t26772) * t26772 + (244 * t26772 + 812 * t26774 + 44) * t26769) * np.sin((12 * phi1 + 5 * phi2)) * ((1 + t26769) ** (-0.1e1 / 0.2e1)) * ((1 - t26769) ** (-0.1e1 / 0.2e1))

        if Bindx == 2753:
            t26781 = np.cos(phi)
            t26782 = t26781 ** 2
            t26783 = t26781 * t26782
            t26786 = t26783 ** 2
            t26787 = t26781 * t26786
            t26794 = t26787 ** 2
            t26792 = t26786 ** 2
            t26784 = t26782 ** 2
            t26785 = t26781 * t26784
            t26790 = t26785 ** 2
            t26788 = t26784 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.345345e6) * (-120 * t26782 + 223 * t26783 + 996 * t26784 + 3 * t26785 - 2936 * t26786 - 2205 * t26787 + 3276 * t26788 - 456 * t26790 - 1460 * t26792 + 696 * t26794 + 4 + (4717 * t26788 - 3603 * t26790 + 753 * t26792 + 145 * t26794 - 33) * t26781) * np.cos((12 * phi1 + 6 * phi2))

        if Bindx == 2754:
            t26809 = np.sin(phi)
            t26806 = t26809 ** 2
            t26807 = t26809 * t26806
            t26796 = np.cos(phi)
            t26797 = t26796 ** 2
            t26799 = t26797 ** 2
            t26803 = t26799 ** 2
            t26798 = t26796 * t26797
            t26801 = t26798 ** 2
            t26800 = t26796 * t26799
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t26807 ** 2 * (189 * t26797 + 152 * t26798 - 658 * t26799 - 350 * t26801 + 1707 * t26803 - 9 + (-1344 + 145 * t26800) * t26800 + (1384 * t26801 + 812 * t26803 + 20) * t26796) * np.sin((12 * phi1 + 7 * phi2)) * ((1 + t26796) ** (-0.1e1 / 0.2e1)) * ((1 - t26796) ** (-0.1e1 / 0.2e1))

        if Bindx == 2755:
            t26810 = np.cos(phi)
            t26811 = t26810 ** 2
            t26812 = t26810 * t26811
            t26815 = t26812 ** 2
            t26816 = t26810 * t26815
            t26823 = t26816 ** 2
            t26821 = t26815 ** 2
            t26813 = t26811 ** 2
            t26814 = t26810 * t26813
            t26819 = t26814 ** 2
            t26817 = t26813 ** 2
            tfunc[..., c] = 0.93e2 / 0.4096e4 * np.sqrt(0.1365e4) * (256 * t26811 + 587 * t26812 - 592 * t26813 - 3047 * t26814 - 1760 * t26815 + 4587 * t26816 + 6864 * t26817 - 6336 * t26819 + 656 * t26821 + 928 * t26823 - 16 + (11 * t26817 - 4295 * t26819 + 2027 * t26821 + 145 * t26823 - 15) * t26810) * np.cos((12 * phi1 + 8 * phi2))

        if Bindx == 2756:
            t26839 = np.sin(phi)
            t26837 = t26839 ** 2
            t26825 = np.cos(phi)
            t26826 = t26825 ** 2
            t26828 = t26826 ** 2
            t26829 = t26825 * t26828
            t26834 = t26829 ** 2
            t26832 = t26828 ** 2
            t26827 = t26825 * t26826
            t26830 = t26827 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t26837 ** 2 * (1062 * t26826 + 6748 * t26827 + 7497 * t26828 - 9576 * t26829 + 9873 * t26832 + 21126 * t26834 - 177 + (-30156 + 1015 * t26830) * t26830 + (-22248 * t26830 + 28572 * t26832 + 7308 * t26834 - 564) * t26825) * np.sin((12 * phi1 + 9 * phi2)) * ((1 - t26825) ** (-0.1e1 / 0.2e1)) * ((1 + t26825) ** (-0.1e1 / 0.2e1))

        if Bindx == 2757:
            t26840 = np.cos(phi)
            t26841 = t26840 ** 2
            t26842 = t26840 * t26841
            t26845 = t26842 ** 2
            t26846 = t26840 * t26845
            t26853 = t26846 ** 2
            t26851 = t26845 ** 2
            t26843 = t26841 ** 2
            t26844 = t26840 * t26843
            t26849 = t26844 ** 2
            t26847 = t26843 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.195e3) * (104 * t26841 - 1819 * t26842 - 4076 * t26843 - 143 * t26844 + 10472 * t26845 + 13233 * t26846 - 1188 * t26847 - 13992 * t26849 + 7004 * t26851 + 1624 * t26853 + 52 + (-16577 * t26847 - 289 * t26849 + 5131 * t26851 + 203 * t26853 + 261) * t26840) * np.cos((12 * phi1 + 10 * phi2))

        if Bindx == 2758:
            t26856 = np.cos(phi)
            t26857 = t26856 ** 2
            t26858 = t26856 * t26857
            t26861 = t26858 ** 2
            t26867 = t26861 ** 2
            t26859 = t26857 ** 2
            t26860 = t26856 * t26859
            t26865 = t26860 ** 2
            t26863 = t26859 ** 2
            t26862 = t26856 * t26861
            t26855 = np.sin(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t26855 ** 2 * (-4719 * t26857 + 3952 * t26858 + 30745 * t26859 + 44044 * t26860 - 3003 * t26861 - 98241 * t26863 + 49907 * t26865 + 32851 * t26867 - 363 + (-82368 + 1015 * t26862) * t26862 + (-25740 * t26863 + 61776 * t26865 + 8932 * t26867 - 2404) * t26856) * np.sin((12 * phi1 + 11 * phi2)) * ((1 - t26856) ** (-0.1e1 / 0.2e1)) * ((1 + t26856) ** (-0.1e1 / 0.2e1))

        if Bindx == 2759:
            t26870 = np.cos(phi)
            t26871 = t26870 ** 2
            t26872 = t26870 * t26871
            t26875 = t26872 ** 2
            t26876 = t26870 * t26875
            t26883 = t26876 ** 2
            t26881 = t26875 ** 2
            t26873 = t26871 ** 2
            t26874 = t26870 * t26873
            t26879 = t26874 ** 2
            t26877 = t26873 ** 2
            tfunc[..., c] = 0.31e2 / 0.8192e4 * np.sqrt(0.2e1) * (-11712 * t26871 - 9451 * t26872 + 30264 * t26873 + 90519 * t26874 + 80080 * t26875 - 47619 * t26876 - 175032 * t26877 - 13728 * t26879 + 84968 * t26881 + 9744 * t26883 - 488 + (-152867 * t26877 + 86775 * t26879 + 39669 * t26881 + 1015 * t26883 - 3945) * t26870) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 2760:
            t26886 = np.cos(phi)
            t26887 = t26886 ** 2
            t26888 = t26886 * t26887
            t26891 = t26888 ** 2
            t26897 = t26891 ** 2
            t26889 = t26887 ** 2
            t26890 = t26886 * t26889
            t26895 = t26890 ** 2
            t26893 = t26889 ** 2
            t26892 = t26886 * t26891
            t26885 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t26885 ** 2 * (3367 * t26887 + 6448 * t26888 + 3575 * t26889 - 10868 * t26890 - 27885 * t26891 - 4719 * t26893 + 26741 * t26895 + 6877 * t26897 + 91 + (-27456 + 145 * t26892) * t26892 + (20020 * t26893 + 17680 * t26895 + 1508 * t26897 + 860) * t26886) * np.sin((12 * phi1 + 13 * phi2)) * ((1 - t26886) ** (-0.1e1 / 0.2e1)) * ((1 + t26886) ** (-0.1e1 / 0.2e1))

        if Bindx == 2761:
            t26900 = np.cos(phi)
            t26901 = t26900 ** 2
            t26902 = t26900 * t26901
            t26905 = t26902 ** 2
            t26906 = t26900 * t26905
            t26913 = t26906 ** 2
            t26911 = t26905 ** 2
            t26903 = t26901 ** 2
            t26904 = t26900 * t26903
            t26909 = t26904 ** 2
            t26907 = t26903 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.609e3) * (200 * t26901 + 507 * t26902 + 676 * t26903 + 143 * t26904 - 1144 * t26905 - 2145 * t26906 - 1716 * t26907 + 1144 * t26909 + 780 * t26911 + 56 * t26913 + 4 + (-143 * t26907 + 1313 * t26909 + 277 * t26911 + 5 * t26913 + 43) * t26900) * np.cos((12 * phi1 + 14 * phi2))

        if Bindx == 2762:
            t26915 = np.cos(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * ((1 - t26915) ** (0.3e1 / 0.2e1)) * ((1 + t26915) ** (0.27e2 / 0.2e1)) * np.sin((12 * phi1 + 15 * phi2))

        if Bindx == 2763:
            t26916 = np.cos(phi)
            t26917 = t26916 ** 2
            t26918 = t26916 * t26917
            t26921 = t26918 ** 2
            t26922 = t26916 * t26921
            t26929 = t26922 ** 2
            t26927 = t26921 ** 2
            t26919 = t26917 ** 2
            t26920 = t26916 * t26919
            t26925 = t26920 ** 2
            t26923 = t26919 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.435e3) * (77 * t26917 - 273 * t26918 + 637 * t26919 - 1001 * t26920 + 1001 * t26921 - 429 * t26922 - 429 * t26923 - 1001 * t26925 - 273 * t26927 - 13 * t26929 + 1 + (1001 * t26923 + 637 * t26925 + 77 * t26927 + t26929 - 13) * t26916) * np.cos((13 * phi1 - 15 * phi2))

        if Bindx == 2764:
            t26932 = np.cos(phi)
            t26933 = t26932 ** 2
            t26934 = t26932 * t26933
            t26937 = t26934 ** 2
            t26943 = t26937 ** 2
            t26935 = t26933 ** 2
            t26936 = t26932 * t26935
            t26941 = t26936 ** 2
            t26939 = t26935 ** 2
            t26938 = t26932 * t26937
            t26931 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.29e2) * t26931 ** 2 * (-819 * t26933 + 2548 * t26934 - 5005 * t26935 + 6006 * t26936 - 3003 * t26937 + 9009 * t26939 + 7007 * t26941 + 1001 * t26943 - 13 + (-3432 + 15 * t26938) * t26938 + (-10010 * t26939 - 3276 * t26941 - 182 * t26943 + 154) * t26932) * np.sin((13 * phi1 - 14 * phi2)) * ((1 - t26932) ** (-0.1e1 / 0.2e1)) * ((1 + t26932) ** (-0.1e1 / 0.2e1))

        if Bindx == 2765:
            t26946 = np.cos(phi)
            t26947 = t26946 ** 2
            t26948 = t26946 * t26947
            t26951 = t26948 ** 2
            t26952 = t26946 * t26951
            t26959 = t26952 ** 2
            t26957 = t26951 ** 2
            t26949 = t26947 ** 2
            t26950 = t26946 * t26949
            t26955 = t26950 ** 2
            t26953 = t26949 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (-15827 * t26947 + 39221 * t26948 - 49231 * t26949 + 1001 * t26950 + 105105 * t26951 - 179751 * t26952 + 131703 * t26953 - 113113 * t26955 - 69797 * t26957 - 4901 * t26959 - 323 + (7007 * t26953 + 120575 * t26955 + 24451 * t26957 + 435 * t26959 + 3445) * t26946) * np.cos((13 * phi1 - 13 * phi2))

        if Bindx == 2766:
            t26962 = np.cos(phi)
            t26963 = t26962 ** 2
            t26964 = t26962 * t26963
            t26967 = t26964 ** 2
            t26973 = t26967 ** 2
            t26965 = t26963 ** 2
            t26966 = t26962 * t26965
            t26971 = t26966 ** 2
            t26969 = t26965 ** 2
            t26968 = t26962 * t26967
            t26961 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t26961 ** 2 * (3367 * t26963 - 6448 * t26964 + 3575 * t26965 + 10868 * t26966 - 27885 * t26967 - 4719 * t26969 + 26741 * t26971 + 6877 * t26973 + 91 + (27456 + 145 * t26968) * t26968 + (-20020 * t26969 - 17680 * t26971 - 1508 * t26973 - 860) * t26962) * np.sin((13 * phi1 - 12 * phi2)) * ((1 - t26962) ** (-0.1e1 / 0.2e1)) * ((1 + t26962) ** (-0.1e1 / 0.2e1))

        if Bindx == 2767:
            t26976 = np.cos(phi)
            t26977 = t26976 ** 2
            t26978 = t26976 * t26977
            t26981 = t26978 ** 2
            t26982 = t26976 * t26981
            t26989 = t26982 ** 2
            t26987 = t26981 ** 2
            t26979 = t26977 ** 2
            t26980 = t26976 * t26979
            t26985 = t26980 ** 2
            t26983 = t26979 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (5675 * t26977 - 5291 * t26978 - 12337 * t26979 + 41041 * t26980 - 39897 * t26981 - 15015 * t26982 + 74217 * t26983 + 11297 * t26985 - 35035 * t26987 - 4147 * t26989 + 227 + (-69641 * t26983 + 33631 * t26985 + 16699 * t26987 + 435 * t26989 - 1859) * t26976) * np.cos((13 * phi1 - 11 * phi2))

        if Bindx == 2768:
            t27005 = np.sin(phi)
            t27003 = t27005 ** 2
            t26991 = np.cos(phi)
            t26992 = t26991 ** 2
            t26994 = t26992 ** 2
            t26995 = t26991 * t26994
            t27000 = t26995 ** 2
            t26998 = t26994 ** 2
            t26993 = t26991 * t26992
            t26996 = t26993 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.455e3) * t27003 ** 2 * (592 * t26992 - 90 * t26993 - 2235 * t26994 + 4596 * t26995 + 6015 * t26998 + 2792 * t27000 + 37 + (-3192 + 87 * t26996) * t26996 + (-2004 * t26996 - 5590 * t26998 - 754 * t27000 - 254) * t26991) * np.sin((13 * phi1 - 10 * phi2)) * ((1 - t26991) ** (-0.1e1 / 0.2e1)) * ((1 + t26991) ** (-0.1e1 / 0.2e1))

        if Bindx == 2769:
            t27006 = np.cos(phi)
            t27007 = t27006 ** 2
            t27008 = t27006 * t27007
            t27011 = t27008 ** 2
            t27012 = t27006 * t27011
            t27019 = t27012 ** 2
            t27017 = t27011 ** 2
            t27009 = t27007 ** 2
            t27010 = t27006 * t27009
            t27015 = t27010 ** 2
            t27013 = t27009 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (-245 * t27007 - 1377 * t27008 + 3859 * t27009 - 1617 * t27010 - 7249 * t27011 + 11715 * t27012 - 2211 * t27013 + 11121 * t27015 - 4095 * t27017 - 1131 * t27019 - 49 + (-10703 * t27013 - 1843 * t27015 + 3413 * t27017 + 145 * t27019 + 267) * t27006) * np.cos((13 * phi1 - 9 * phi2))

        if Bindx == 2770:
            t27034 = np.sin(phi)
            t27031 = t27034 ** 2
            t27032 = t27034 * t27031
            t27021 = np.cos(phi)
            t27022 = t27021 ** 2
            t27024 = t27022 ** 2
            t27028 = t27024 ** 2
            t27023 = t27021 * t27022
            t27026 = t27023 ** 2
            t27025 = t27021 * t27024
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.65e2) * t27032 ** 2 * (-113 * t27022 + 3184 * t27023 - 5894 * t27024 + 7630 * t27026 + 8581 * t27028 + 113 + (1792 + 435 * t27025) * t27025 + (-12272 * t27026 - 3016 * t27028 - 440) * t27021) * np.sin((13 * phi1 - 8 * phi2)) * ((1 - t27021) ** (-0.1e1 / 0.2e1)) * ((1 + t27021) ** (-0.1e1 / 0.2e1))

        if Bindx == 2771:
            t27035 = np.cos(phi)
            t27036 = t27035 ** 2
            t27037 = t27035 * t27036
            t27040 = t27037 ** 2
            t27041 = t27035 * t27040
            t27048 = t27041 ** 2
            t27046 = t27040 ** 2
            t27038 = t27036 ** 2
            t27039 = t27035 * t27038
            t27044 = t27039 ** 2
            t27042 = t27038 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (-913 * t27036 + 3101 * t27037 + 71 * t27038 - 11011 * t27039 + 11715 * t27040 + 9801 * t27041 - 25047 * t27042 + 16093 * t27044 + 637 * t27046 - 2639 * t27048 + 83 + (7843 * t27042 - 15065 * t27044 + 5071 * t27046 + 435 * t27048 - 175) * t27035) * np.cos((13 * phi1 - 7 * phi2))

        if Bindx == 2772:
            t27061 = np.sin(phi)
            t27058 = t27061 ** 2
            t27059 = t27058 ** 2
            t27050 = np.cos(phi)
            t27051 = t27050 ** 2
            t27052 = t27050 * t27051
            t27055 = t27052 ** 2
            t27053 = t27051 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.16445e5) * t27059 ** 2 * (-266 * t27051 + 490 * t27052 + 1498 * t27055 + 19 + (140 + 145 * t27053) * t27053 + (-1274 * t27053 - 754 * t27055 + 2) * t27050) * np.sin((13 * phi1 - 6 * phi2)) * ((1 - t27050) ** (-0.1e1 / 0.2e1)) * ((1 + t27050) ** (-0.1e1 / 0.2e1))

        if Bindx == 2773:
            t27062 = np.cos(phi)
            t27063 = t27062 ** 2
            t27064 = t27062 * t27063
            t27067 = t27064 ** 2
            t27068 = t27062 * t27067
            t27075 = t27068 ** 2
            t27073 = t27067 ** 2
            t27065 = t27063 ** 2
            t27066 = t27062 * t27065
            t27071 = t27066 ** 2
            t27069 = t27065 ** 2
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * (161 * t27063 + 17 * t27064 - 899 * t27065 + 749 * t27066 + 1749 * t27067 - 2619 * t27068 - 981 * t27069 - 829 * t27071 + 1183 * t27073 - 377 * t27075 - 7 + (3451 * t27069 - 1901 * t27071 + 239 * t27073 + 87 * t27075 - 23) * t27062) * np.cos((13 * phi1 - 5 * phi2))

        if Bindx == 2774:
            t27087 = np.sin(phi)
            t27083 = t27087 ** 2
            t27085 = t27087 * t27083 ** 2
            t27077 = np.cos(phi)
            t27078 = t27077 ** 2
            t27080 = t27078 ** 2
            t27079 = t27077 * t27078
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t27085 ** 2 * (-391 * t27078 + 1699 * t27080 + 17 + (-416 + 435 * t27079) * t27079 + (-1508 * t27080 + 164) * t27077) * np.sin((13 * phi1 - 4 * phi2)) * ((1 - t27077) ** (-0.1e1 / 0.2e1)) * ((1 + t27077) ** (-0.1e1 / 0.2e1))

        if Bindx == 2775:
            t27088 = np.cos(phi)
            t27089 = t27088 ** 2
            t27090 = t27088 * t27089
            t27093 = t27090 ** 2
            t27094 = t27088 * t27093
            t27101 = t27094 ** 2
            t27099 = t27093 ** 2
            t27091 = t27089 ** 2
            t27092 = t27088 * t27091
            t27097 = t27092 ** 2
            t27095 = t27091 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.198835e6) * (-31 * t27089 - 537 * t27090 + 517 * t27091 + 1715 * t27092 - 2155 * t27093 - 2445 * t27094 + 4035 * t27095 - 3901 * t27097 + 1911 * t27099 - 377 * t27101 + 1 + (1445 * t27095 + 85 * t27097 - 463 * t27099 + 145 * t27101 + 55) * t27088) * np.cos((13 * phi1 - 3 * phi2))

        if Bindx == 2776:
            t27111 = np.sin(phi)
            t27107 = t27111 ** 2
            t27108 = t27111 * t27107
            t27109 = t27108 ** 2
            t27103 = np.cos(phi)
            t27104 = t27103 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.15295e5) * t27109 ** 2 * (130 * t27103 - 7 + (-754 * t27103 + 196 + 435 * t27104) * t27104) * np.sin((13 * phi1 - 2 * phi2)) * ((1 - t27103) ** (-0.1e1 / 0.2e1)) * ((1 + t27103) ** (-0.1e1 / 0.2e1))

        if Bindx == 2777:
            t27112 = np.cos(phi)
            t27113 = t27112 ** 2
            t27114 = t27112 * t27113
            t27117 = t27114 ** 2
            t27118 = t27112 * t27117
            t27125 = t27118 ** 2
            t27123 = t27117 ** 2
            t27115 = t27113 ** 2
            t27116 = t27112 * t27115
            t27121 = t27116 ** 2
            t27119 = t27115 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (-455 * t27113 + 861 * t27114 + 2457 * t27115 - 3675 * t27116 - 5915 * t27117 + 7945 * t27118 + 7735 * t27119 - 5733 * t27121 + 2275 * t27123 - 377 * t27125 + 13 + (-9765 * t27119 + 6951 * t27121 - 2681 * t27123 + 435 * t27125 - 71) * t27112) * np.cos((13 * phi1 - phi2))

        if Bindx == 2778:
            t27133 = np.sin(phi)
            t27128 = t27133 ** 2
            t27129 = t27133 * t27128
            t27131 = t27133 * t27129 ** 2
            t27127 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.22287e5) * t27131 ** 2 * (29 * t27127 ** 2 - 1) * np.sin((13 * phi1)) * ((1 - t27127) ** (-0.1e1 / 0.2e1)) * ((1 + t27127) ** (-0.1e1 / 0.2e1))

        if Bindx == 2779:
            t27134 = np.cos(phi)
            t27135 = t27134 ** 2
            t27136 = t27134 * t27135
            t27139 = t27136 ** 2
            t27140 = t27134 * t27139
            t27147 = t27140 ** 2
            t27145 = t27139 ** 2
            t27137 = t27135 ** 2
            t27138 = t27134 * t27137
            t27143 = t27138 ** 2
            t27141 = t27137 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.37145e5) * (455 * t27135 + 861 * t27136 - 2457 * t27137 - 3675 * t27138 + 5915 * t27139 + 7945 * t27140 - 7735 * t27141 + 5733 * t27143 - 2275 * t27145 + 377 * t27147 - 13 + (-9765 * t27141 + 6951 * t27143 - 2681 * t27145 + 435 * t27147 - 71) * t27134) * np.cos((13 * phi1 + phi2))

        if Bindx == 2780:
            t27157 = np.sin(phi)
            t27153 = t27157 ** 2
            t27154 = t27157 * t27153
            t27155 = t27154 ** 2
            t27149 = np.cos(phi)
            t27150 = t27149 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.15295e5) * t27155 ** 2 * (-130 * t27149 - 7 + (754 * t27149 + 196 + 435 * t27150) * t27150) * np.sin((13 * phi1 + 2 * phi2)) * ((1 - t27149) ** (-0.1e1 / 0.2e1)) * ((1 + t27149) ** (-0.1e1 / 0.2e1))

        if Bindx == 2781:
            t27158 = np.cos(phi)
            t27159 = t27158 ** 2
            t27160 = t27158 * t27159
            t27163 = t27160 ** 2
            t27164 = t27158 * t27163
            t27171 = t27164 ** 2
            t27169 = t27163 ** 2
            t27161 = t27159 ** 2
            t27162 = t27158 * t27161
            t27167 = t27162 ** 2
            t27165 = t27161 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.198835e6) * (31 * t27159 - 537 * t27160 - 517 * t27161 + 1715 * t27162 + 2155 * t27163 - 2445 * t27164 - 4035 * t27165 + 3901 * t27167 - 1911 * t27169 + 377 * t27171 - 1 + (1445 * t27165 + 85 * t27167 - 463 * t27169 + 145 * t27171 + 55) * t27158) * np.cos((13 * phi1 + 3 * phi2))

        if Bindx == 2782:
            t27183 = np.sin(phi)
            t27179 = t27183 ** 2
            t27181 = t27183 * t27179 ** 2
            t27173 = np.cos(phi)
            t27174 = t27173 ** 2
            t27176 = t27174 ** 2
            t27175 = t27173 * t27174
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * t27181 ** 2 * (-391 * t27174 + 1699 * t27176 + 17 + (416 + 435 * t27175) * t27175 + (1508 * t27176 - 164) * t27173) * np.sin((13 * phi1 + 4 * phi2)) * ((1 - t27173) ** (-0.1e1 / 0.2e1)) * ((1 + t27173) ** (-0.1e1 / 0.2e1))

        if Bindx == 2783:
            t27184 = np.cos(phi)
            t27185 = t27184 ** 2
            t27186 = t27184 * t27185
            t27189 = t27186 ** 2
            t27190 = t27184 * t27189
            t27197 = t27190 ** 2
            t27195 = t27189 ** 2
            t27187 = t27185 ** 2
            t27188 = t27184 * t27187
            t27193 = t27188 ** 2
            t27191 = t27187 ** 2
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69069e5) * (-161 * t27185 + 17 * t27186 + 899 * t27187 + 749 * t27188 - 1749 * t27189 - 2619 * t27190 + 981 * t27191 + 829 * t27193 - 1183 * t27195 + 377 * t27197 + 7 + (3451 * t27191 - 1901 * t27193 + 239 * t27195 + 87 * t27197 - 23) * t27184) * np.cos((13 * phi1 + 5 * phi2))

        if Bindx == 2784:
            t27210 = np.sin(phi)
            t27207 = t27210 ** 2
            t27208 = t27207 ** 2
            t27199 = np.cos(phi)
            t27200 = t27199 ** 2
            t27201 = t27199 * t27200
            t27204 = t27201 ** 2
            t27202 = t27200 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.16445e5) * t27208 ** 2 * (-266 * t27200 - 490 * t27201 + 1498 * t27204 + 19 + (140 + 145 * t27202) * t27202 + (1274 * t27202 + 754 * t27204 - 2) * t27199) * np.sin((13 * phi1 + 6 * phi2)) * ((1 - t27199) ** (-0.1e1 / 0.2e1)) * ((1 + t27199) ** (-0.1e1 / 0.2e1))

        if Bindx == 2785:
            t27211 = np.cos(phi)
            t27212 = t27211 ** 2
            t27213 = t27211 * t27212
            t27216 = t27213 ** 2
            t27217 = t27211 * t27216
            t27224 = t27217 ** 2
            t27222 = t27216 ** 2
            t27214 = t27212 ** 2
            t27215 = t27211 * t27214
            t27220 = t27215 ** 2
            t27218 = t27214 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * (913 * t27212 + 3101 * t27213 - 71 * t27214 - 11011 * t27215 - 11715 * t27216 + 9801 * t27217 + 25047 * t27218 - 16093 * t27220 - 637 * t27222 + 2639 * t27224 - 83 + (7843 * t27218 - 15065 * t27220 + 5071 * t27222 + 435 * t27224 - 175) * t27211) * np.cos((13 * phi1 + 7 * phi2))

        if Bindx == 2786:
            t27239 = np.sin(phi)
            t27236 = t27239 ** 2
            t27237 = t27239 * t27236
            t27226 = np.cos(phi)
            t27227 = t27226 ** 2
            t27229 = t27227 ** 2
            t27233 = t27229 ** 2
            t27228 = t27226 * t27227
            t27231 = t27228 ** 2
            t27230 = t27226 * t27229
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.65e2) * t27237 ** 2 * (-113 * t27227 - 3184 * t27228 - 5894 * t27229 + 7630 * t27231 + 8581 * t27233 + 113 + (-1792 + 435 * t27230) * t27230 + (12272 * t27231 + 3016 * t27233 + 440) * t27226) * np.sin((13 * phi1 + 8 * phi2)) * ((1 - t27226) ** (-0.1e1 / 0.2e1)) * ((1 + t27226) ** (-0.1e1 / 0.2e1))

        if Bindx == 2787:
            t27240 = np.cos(phi)
            t27241 = t27240 ** 2
            t27242 = t27240 * t27241
            t27245 = t27242 ** 2
            t27246 = t27240 * t27245
            t27253 = t27246 ** 2
            t27251 = t27245 ** 2
            t27243 = t27241 ** 2
            t27244 = t27240 * t27243
            t27249 = t27244 ** 2
            t27247 = t27243 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (245 * t27241 - 1377 * t27242 - 3859 * t27243 - 1617 * t27244 + 7249 * t27245 + 11715 * t27246 + 2211 * t27247 - 11121 * t27249 + 4095 * t27251 + 1131 * t27253 + 49 + (-10703 * t27247 - 1843 * t27249 + 3413 * t27251 + 145 * t27253 + 267) * t27240) * np.cos((13 * phi1 + 9 * phi2))

        if Bindx == 2788:
            t27269 = np.sin(phi)
            t27267 = t27269 ** 2
            t27255 = np.cos(phi)
            t27256 = t27255 ** 2
            t27258 = t27256 ** 2
            t27259 = t27255 * t27258
            t27264 = t27259 ** 2
            t27262 = t27258 ** 2
            t27257 = t27255 * t27256
            t27260 = t27257 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.455e3) * t27267 ** 2 * (592 * t27256 + 90 * t27257 - 2235 * t27258 - 4596 * t27259 + 6015 * t27262 + 2792 * t27264 + 37 + (-3192 + 87 * t27260) * t27260 + (2004 * t27260 + 5590 * t27262 + 754 * t27264 + 254) * t27255) * np.sin((13 * phi1 + 10 * phi2)) * ((1 - t27255) ** (-0.1e1 / 0.2e1)) * ((1 + t27255) ** (-0.1e1 / 0.2e1))

        if Bindx == 2789:
            t27270 = np.cos(phi)
            t27271 = t27270 ** 2
            t27272 = t27270 * t27271
            t27275 = t27272 ** 2
            t27276 = t27270 * t27275
            t27283 = t27276 ** 2
            t27281 = t27275 ** 2
            t27273 = t27271 ** 2
            t27274 = t27270 * t27273
            t27279 = t27274 ** 2
            t27277 = t27273 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-5675 * t27271 - 5291 * t27272 + 12337 * t27273 + 41041 * t27274 + 39897 * t27275 - 15015 * t27276 - 74217 * t27277 - 11297 * t27279 + 35035 * t27281 + 4147 * t27283 - 227 + (-69641 * t27277 + 33631 * t27279 + 16699 * t27281 + 435 * t27283 - 1859) * t27270) * np.cos((13 * phi1 + 11 * phi2))

        if Bindx == 2790:
            t27286 = np.cos(phi)
            t27287 = t27286 ** 2
            t27288 = t27286 * t27287
            t27291 = t27288 ** 2
            t27297 = t27291 ** 2
            t27289 = t27287 ** 2
            t27290 = t27286 * t27289
            t27295 = t27290 ** 2
            t27293 = t27289 ** 2
            t27292 = t27286 * t27291
            t27285 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t27285 ** 2 * (3367 * t27287 + 6448 * t27288 + 3575 * t27289 - 10868 * t27290 - 27885 * t27291 - 4719 * t27293 + 26741 * t27295 + 6877 * t27297 + 91 + (-27456 + 145 * t27292) * t27292 + (20020 * t27293 + 17680 * t27295 + 1508 * t27297 + 860) * t27286) * np.sin((13 * phi1 + 12 * phi2)) * ((1 - t27286) ** (-0.1e1 / 0.2e1)) * ((1 + t27286) ** (-0.1e1 / 0.2e1))

        if Bindx == 2791:
            t27300 = np.cos(phi)
            t27301 = t27300 ** 2
            t27302 = t27300 * t27301
            t27305 = t27302 ** 2
            t27306 = t27300 * t27305
            t27313 = t27306 ** 2
            t27311 = t27305 ** 2
            t27303 = t27301 ** 2
            t27304 = t27300 * t27303
            t27309 = t27304 ** 2
            t27307 = t27303 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * (15827 * t27301 + 39221 * t27302 + 49231 * t27303 + 1001 * t27304 - 105105 * t27305 - 179751 * t27306 - 131703 * t27307 + 113113 * t27309 + 69797 * t27311 + 4901 * t27313 + 323 + (7007 * t27307 + 120575 * t27309 + 24451 * t27311 + 435 * t27313 + 3445) * t27300) * np.cos((13 * phi1 + 13 * phi2))

        if Bindx == 2792:
            t27316 = np.cos(phi)
            t27317 = t27316 ** 2
            t27318 = t27316 * t27317
            t27321 = t27318 ** 2
            t27327 = t27321 ** 2
            t27319 = t27317 ** 2
            t27320 = t27316 * t27319
            t27325 = t27320 ** 2
            t27323 = t27319 ** 2
            t27322 = t27316 * t27321
            t27315 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.29e2) * t27315 ** 2 * (-819 * t27317 - 2548 * t27318 - 5005 * t27319 - 6006 * t27320 - 3003 * t27321 + 9009 * t27323 + 7007 * t27325 + 1001 * t27327 - 13 + (3432 + 15 * t27322) * t27322 + (10010 * t27323 + 3276 * t27325 + 182 * t27327 - 154) * t27316) * np.sin((13 * phi1 + 14 * phi2)) * ((1 - t27316) ** (-0.1e1 / 0.2e1)) * ((1 + t27316) ** (-0.1e1 / 0.2e1))

        if Bindx == 2793:
            t27330 = np.cos(phi)
            t27331 = t27330 ** 2
            t27332 = t27330 * t27331
            t27335 = t27332 ** 2
            t27336 = t27330 * t27335
            t27343 = t27336 ** 2
            t27341 = t27335 ** 2
            t27333 = t27331 ** 2
            t27334 = t27330 * t27333
            t27339 = t27334 ** 2
            t27337 = t27333 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.435e3) * (-77 * t27331 - 273 * t27332 - 637 * t27333 - 1001 * t27334 - 1001 * t27335 - 429 * t27336 + 429 * t27337 + 1001 * t27339 + 273 * t27341 + 13 * t27343 - 1 + (1001 * t27337 + 637 * t27339 + 77 * t27341 + t27343 - 13) * t27330) * np.cos((13 * phi1 + 15 * phi2))

        if Bindx == 2794:
            t27345 = np.cos(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.15e2) * ((1 - t27345) ** (0.29e2 / 0.2e1)) * np.sqrt((1 + t27345)) * np.sin((14 * phi1 - 15 * phi2))

        if Bindx == 2795:
            t27346 = np.cos(phi)
            t27347 = t27346 ** 2
            t27348 = t27346 * t27347
            t27351 = t27348 ** 2
            t27352 = t27346 * t27351
            t27359 = t27352 ** 2
            t27357 = t27351 ** 2
            t27349 = t27347 ** 2
            t27350 = t27346 * t27349
            t27355 = t27350 ** 2
            t27353 = t27349 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (1064 * t27347 - 3731 * t27348 + 8554 * t27349 - 13013 * t27350 + 12012 * t27351 - 3003 * t27352 - 9438 * t27353 - 16016 * t27355 - 4186 * t27357 - 196 * t27359 + 14 + (17017 * t27353 + 9919 * t27355 + 1169 * t27357 + 15 * t27359 - 181) * t27346) * np.cos((14 * phi1 - 14 * phi2))

        if Bindx == 2796:
            t27362 = np.cos(phi)
            t27363 = t27362 ** 2
            t27364 = t27362 * t27363
            t27367 = t27364 ** 2
            t27373 = t27367 ** 2
            t27365 = t27363 ** 2
            t27366 = t27362 * t27365
            t27371 = t27366 ** 2
            t27369 = t27365 ** 2
            t27368 = t27362 * t27367
            t27361 = np.sin(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.29e2) * t27361 ** 2 * (-819 * t27363 + 2548 * t27364 - 5005 * t27365 + 6006 * t27366 - 3003 * t27367 + 9009 * t27369 + 7007 * t27371 + 1001 * t27373 - 13 + (-3432 + 15 * t27368) * t27368 + (-10010 * t27369 - 3276 * t27371 - 182 * t27373 + 154) * t27362) * np.sin((14 * phi1 - 13 * phi2)) * ((1 - t27362) ** (-0.1e1 / 0.2e1)) * ((1 + t27362) ** (-0.1e1 / 0.2e1))

        if Bindx == 2797:
            t27376 = np.cos(phi)
            t27377 = t27376 ** 2
            t27378 = t27376 * t27377
            t27381 = t27378 ** 2
            t27382 = t27376 * t27381
            t27389 = t27382 ** 2
            t27387 = t27381 ** 2
            t27379 = t27377 ** 2
            t27380 = t27376 * t27379
            t27385 = t27380 ** 2
            t27383 = t27379 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.609e3) * (-200 * t27377 + 507 * t27378 - 676 * t27379 + 143 * t27380 + 1144 * t27381 - 2145 * t27382 + 1716 * t27383 - 1144 * t27385 - 780 * t27387 - 56 * t27389 - 4 + (-143 * t27383 + 1313 * t27385 + 277 * t27387 + 5 * t27389 + 43) * t27376) * np.cos((14 * phi1 - 12 * phi2))

        if Bindx == 2798:
            t27405 = np.sin(phi)
            t27403 = t27405 ** 2
            t27391 = np.cos(phi)
            t27392 = t27391 ** 2
            t27394 = t27392 ** 2
            t27395 = t27391 * t27394
            t27400 = t27395 ** 2
            t27398 = t27394 ** 2
            t27393 = t27391 * t27392
            t27396 = t27393 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.203e3) * t27403 ** 2 * (-440 * t27392 + 990 * t27393 - 1155 * t27394 + 132 * t27395 + 3135 * t27398 + 704 * t27400 - 11 + (1848 + 15 * t27396) * t27396 + (-3300 * t27396 - 1870 * t27398 - 154 * t27400 + 106) * t27391) * np.sin((14 * phi1 - 11 * phi2)) * ((1 - t27391) ** (-0.1e1 / 0.2e1)) * ((1 + t27391) ** (-0.1e1 / 0.2e1))

        if Bindx == 2799:
            t27406 = np.cos(phi)
            t27407 = t27406 ** 2
            t27408 = t27406 * t27407
            t27411 = t27408 ** 2
            t27412 = t27406 * t27411
            t27419 = t27412 ** 2
            t27417 = t27411 ** 2
            t27409 = t27407 ** 2
            t27410 = t27406 * t27409
            t27415 = t27410 ** 2
            t27413 = t27409 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.13195e5) * (56 * t27407 - 71 * t27408 - 58 * t27409 + 319 * t27410 - 396 * t27411 + 33 * t27412 + 462 * t27413 + 176 * t27415 - 214 * t27417 - 28 * t27419 + 2 + (-539 * t27413 + 163 * t27415 + 109 * t27417 + 3 * t27419 - 17) * t27406) * np.cos((14 * phi1 - 10 * phi2))

        if Bindx == 2800:
            t27434 = np.sin(phi)
            t27431 = t27434 ** 2
            t27432 = t27434 * t27431
            t27421 = np.cos(phi)
            t27422 = t27421 ** 2
            t27424 = t27422 ** 2
            t27428 = t27424 ** 2
            t27423 = t27421 * t27422
            t27426 = t27423 ** 2
            t27425 = t27421 * t27424
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.39585e5) * t27432 ** 2 * (-63 * t27422 + 72 * t27423 + 42 * t27424 + 378 * t27426 + 153 * t27428 - 3 + (-252 + 5 * t27425) * t27425 + (-312 * t27426 - 42 * t27428 + 22) * t27421) * np.sin((14 * phi1 - 9 * phi2)) * ((1 - t27421) ** (-0.1e1 / 0.2e1)) * ((1 + t27421) ** (-0.1e1 / 0.2e1))

        if Bindx == 2801:
            t27435 = np.cos(phi)
            t27436 = t27435 ** 2
            t27437 = t27435 * t27436
            t27440 = t27437 ** 2
            t27441 = t27435 * t27440
            t27448 = t27441 ** 2
            t27446 = t27440 ** 2
            t27438 = t27436 ** 2
            t27439 = t27435 * t27438
            t27444 = t27439 ** 2
            t27442 = t27438 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (-80 * t27436 - 119 * t27437 + 568 * t27438 - 539 * t27439 - 528 * t27440 + 1485 * t27441 - 792 * t27442 + 1232 * t27444 - 280 * t27446 - 112 * t27448 - 8 + (-781 * t27442 - 421 * t27444 + 311 * t27446 + 15 * t27448 + 49) * t27435) * np.cos((14 * phi1 - 8 * phi2))

        if Bindx == 2802:
            t27461 = np.sin(phi)
            t27458 = t27461 ** 2
            t27459 = t27458 ** 2
            t27450 = np.cos(phi)
            t27451 = t27450 ** 2
            t27452 = t27450 * t27451
            t27455 = t27452 ** 2
            t27453 = t27451 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.43355e5) * t27459 ** 2 * (-42 * t27451 - 70 * t27452 + 266 * t27455 - 7 + (280 + 15 * t27453) * t27453 + (-378 * t27453 - 98 * t27455 + 34) * t27450) * np.sin((14 * phi1 - 7 * phi2)) * ((1 - t27450) ** (-0.1e1 / 0.2e1)) * ((1 + t27450) ** (-0.1e1 / 0.2e1))

        if Bindx == 2803:
            t27462 = np.cos(phi)
            t27463 = t27462 ** 2
            t27464 = t27462 * t27463
            t27467 = t27464 ** 2
            t27468 = t27462 * t27467
            t27475 = t27468 ** 2
            t27473 = t27467 ** 2
            t27465 = t27463 ** 2
            t27466 = t27462 * t27465
            t27471 = t27466 ** 2
            t27469 = t27465 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.476905e6) * (-8 * t27463 + 63 * t27464 - 58 * t27465 - 119 * t27466 + 244 * t27467 - 9 * t27468 - 306 * t27469 + 112 * t27471 + 42 * t27473 - 28 * t27475 + 2 + (211 * t27469 - 187 * t27471 + 43 * t27473 + 5 * t27475 - 7) * t27462) * np.cos((14 * phi1 - 6 * phi2))

        if Bindx == 2804:
            t27487 = np.sin(phi)
            t27483 = t27487 ** 2
            t27485 = t27487 * t27483 ** 2
            t27477 = np.cos(phi)
            t27478 = t27477 ** 2
            t27480 = t27478 ** 2
            t27479 = t27477 * t27478
            tfunc[..., c] = 0.155e3 / 0.16384e5 * np.sqrt(0.2003001e7) * t27485 ** 2 * (5 * t27478 + 25 * t27480 - 1 + (-20 + 3 * t27479) * t27479 + (-14 * t27480 + 2) * t27477) * np.sin((14 * phi1 - 5 * phi2)) * ((1 - t27477) ** (-0.1e1 / 0.2e1)) * ((1 + t27477) ** (-0.1e1 / 0.2e1))

        if Bindx == 2805:
            t27488 = np.cos(phi)
            t27489 = t27488 ** 2
            t27490 = t27488 * t27489
            t27493 = t27490 ** 2
            t27494 = t27488 * t27493
            t27501 = t27494 ** 2
            t27499 = t27493 ** 2
            t27491 = t27489 ** 2
            t27492 = t27488 * t27491
            t27497 = t27492 ** 2
            t27495 = t27491 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.910455e6) * (56 * t27489 - 79 * t27490 - 164 * t27491 + 365 * t27492 + 120 * t27493 - 675 * t27494 + 180 * t27495 - 376 * t27497 + 244 * t27499 - 56 * t27501 - 4 + (595 * t27495 - 221 * t27497 - t27499 + 15 * t27501 + 1) * t27488) * np.cos((14 * phi1 - 4 * phi2))

        if Bindx == 2806:
            t27511 = np.sin(phi)
            t27507 = t27511 ** 2
            t27508 = t27511 * t27507
            t27509 = t27508 ** 2
            t27503 = np.cos(phi)
            t27504 = t27503 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.5766215e7) * t27509 ** 2 * (-2 * t27503 - 1 + (-14 * t27503 + 12 + 5 * t27504) * t27504) * np.sin((14 * phi1 - 3 * phi2)) * ((1 - t27503) ** (-0.1e1 / 0.2e1)) * ((1 + t27503) ** (-0.1e1 / 0.2e1))

        if Bindx == 2807:
            t27512 = np.cos(phi)
            t27513 = t27512 ** 2
            t27514 = t27512 * t27513
            t27517 = t27514 ** 2
            t27518 = t27512 * t27517
            t27525 = t27518 ** 2
            t27523 = t27517 ** 2
            t27515 = t27513 ** 2
            t27516 = t27512 * t27515
            t27521 = t27516 ** 2
            t27519 = t27515 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.443555e6) * (-40 * t27513 - 51 * t27514 + 198 * t27515 + 75 * t27516 - 460 * t27517 + 5 * t27518 + 590 * t27519 - 432 * t27521 + 170 * t27523 - 28 * t27525 + 2 + (-135 * t27519 + 159 * t27521 - 79 * t27523 + 15 * t27525 + 11) * t27512) * np.cos((14 * phi1 - 2 * phi2))

        if Bindx == 2808:
            t27533 = np.sin(phi)
            t27528 = t27533 ** 2
            t27529 = t27533 * t27528
            t27531 = t27533 * t27529 ** 2
            t27527 = np.cos(phi)
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.1077205e7) * t27531 ** 2 * (-1 + (-14 + 15 * t27527) * t27527) * np.sin((14 * phi1 - phi2)) * ((1 - t27527) ** (-0.1e1 / 0.2e1)) * ((1 + t27527) ** (-0.1e1 / 0.2e1))

        if Bindx == 2809:
            t27534 = np.cos(phi)
            t27535 = t27534 ** 2
            t27536 = t27535 ** 2
            t27537 = t27535 * t27536
            t27540 = t27537 ** 2
            t27538 = t27536 ** 2
            tfunc[..., c] = -0.465e3 / 0.4096e4 * np.sqrt(0.646323e6) * t27534 * np.cos((14 * phi1)) * (-21 * t27536 + 35 * t27537 - 35 * t27538 - 7 * t27540 - 1 + (21 * t27538 + t27540 + 7) * t27535)

        if Bindx == 2810:
            t27548 = np.sin(phi)
            t27543 = t27548 ** 2
            t27544 = t27548 * t27543
            t27546 = t27548 * t27544 ** 2
            t27542 = np.cos(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.1077205e7) * t27546 ** 2 * (-1 + (14 + 15 * t27542) * t27542) * np.sin((14 * phi1 + phi2)) * ((1 - t27542) ** (-0.1e1 / 0.2e1)) * ((1 + t27542) ** (-0.1e1 / 0.2e1))

        if Bindx == 2811:
            t27549 = np.cos(phi)
            t27550 = t27549 ** 2
            t27551 = t27549 * t27550
            t27554 = t27551 ** 2
            t27555 = t27549 * t27554
            t27562 = t27555 ** 2
            t27560 = t27554 ** 2
            t27552 = t27550 ** 2
            t27553 = t27549 * t27552
            t27558 = t27553 ** 2
            t27556 = t27552 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.443555e6) * (40 * t27550 - 51 * t27551 - 198 * t27552 + 75 * t27553 + 460 * t27554 + 5 * t27555 - 590 * t27556 + 432 * t27558 - 170 * t27560 + 28 * t27562 - 2 + (-135 * t27556 + 159 * t27558 - 79 * t27560 + 15 * t27562 + 11) * t27549) * np.cos((14 * phi1 + 2 * phi2))

        if Bindx == 2812:
            t27572 = np.sin(phi)
            t27568 = t27572 ** 2
            t27569 = t27572 * t27568
            t27570 = t27569 ** 2
            t27564 = np.cos(phi)
            t27565 = t27564 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.5766215e7) * t27570 ** 2 * (2 * t27564 - 1 + (14 * t27564 + 12 + 5 * t27565) * t27565) * np.sin((14 * phi1 + 3 * phi2)) * ((1 - t27564) ** (-0.1e1 / 0.2e1)) * ((1 + t27564) ** (-0.1e1 / 0.2e1))

        if Bindx == 2813:
            t27573 = np.cos(phi)
            t27574 = t27573 ** 2
            t27575 = t27573 * t27574
            t27578 = t27575 ** 2
            t27579 = t27573 * t27578
            t27586 = t27579 ** 2
            t27584 = t27578 ** 2
            t27576 = t27574 ** 2
            t27577 = t27573 * t27576
            t27582 = t27577 ** 2
            t27580 = t27576 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.910455e6) * (-56 * t27574 - 79 * t27575 + 164 * t27576 + 365 * t27577 - 120 * t27578 - 675 * t27579 - 180 * t27580 + 376 * t27582 - 244 * t27584 + 56 * t27586 + 4 + (595 * t27580 - 221 * t27582 - t27584 + 15 * t27586 + 1) * t27573) * np.cos((14 * phi1 + 4 * phi2))

        if Bindx == 2814:
            t27598 = np.sin(phi)
            t27594 = t27598 ** 2
            t27596 = t27598 * t27594 ** 2
            t27588 = np.cos(phi)
            t27589 = t27588 ** 2
            t27591 = t27589 ** 2
            t27590 = t27588 * t27589
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.2003001e7) * t27596 ** 2 * (5 * t27589 + 25 * t27591 - 1 + (20 + 3 * t27590) * t27590 + (14 * t27591 - 2) * t27588) * np.sin((14 * phi1 + 5 * phi2)) * ((1 - t27588) ** (-0.1e1 / 0.2e1)) * ((1 + t27588) ** (-0.1e1 / 0.2e1))

        if Bindx == 2815:
            t27599 = np.cos(phi)
            t27600 = t27599 ** 2
            t27601 = t27599 * t27600
            t27604 = t27601 ** 2
            t27605 = t27599 * t27604
            t27612 = t27605 ** 2
            t27610 = t27604 ** 2
            t27602 = t27600 ** 2
            t27603 = t27599 * t27602
            t27608 = t27603 ** 2
            t27606 = t27602 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.476905e6) * (8 * t27600 + 63 * t27601 + 58 * t27602 - 119 * t27603 - 244 * t27604 - 9 * t27605 + 306 * t27606 - 112 * t27608 - 42 * t27610 + 28 * t27612 - 2 + (211 * t27606 - 187 * t27608 + 43 * t27610 + 5 * t27612 - 7) * t27599) * np.cos((14 * phi1 + 6 * phi2))

        if Bindx == 2816:
            t27625 = np.sin(phi)
            t27622 = t27625 ** 2
            t27623 = t27622 ** 2
            t27614 = np.cos(phi)
            t27615 = t27614 ** 2
            t27616 = t27614 * t27615
            t27619 = t27616 ** 2
            t27617 = t27615 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.43355e5) * t27623 ** 2 * (-42 * t27615 + 70 * t27616 + 266 * t27619 - 7 + (280 + 15 * t27617) * t27617 + (378 * t27617 + 98 * t27619 - 34) * t27614) * np.sin((14 * phi1 + 7 * phi2)) * ((1 - t27614) ** (-0.1e1 / 0.2e1)) * ((1 + t27614) ** (-0.1e1 / 0.2e1))

        if Bindx == 2817:
            t27626 = np.cos(phi)
            t27627 = t27626 ** 2
            t27628 = t27626 * t27627
            t27631 = t27628 ** 2
            t27632 = t27626 * t27631
            t27639 = t27632 ** 2
            t27637 = t27631 ** 2
            t27629 = t27627 ** 2
            t27630 = t27626 * t27629
            t27635 = t27630 ** 2
            t27633 = t27629 ** 2
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (80 * t27627 - 119 * t27628 - 568 * t27629 - 539 * t27630 + 528 * t27631 + 1485 * t27632 + 792 * t27633 - 1232 * t27635 + 280 * t27637 + 112 * t27639 + 8 + (-781 * t27633 - 421 * t27635 + 311 * t27637 + 15 * t27639 + 49) * t27626) * np.cos((14 * phi1 + 8 * phi2))

        if Bindx == 2818:
            t27654 = np.sin(phi)
            t27651 = t27654 ** 2
            t27652 = t27654 * t27651
            t27641 = np.cos(phi)
            t27642 = t27641 ** 2
            t27644 = t27642 ** 2
            t27648 = t27644 ** 2
            t27643 = t27641 * t27642
            t27646 = t27643 ** 2
            t27645 = t27641 * t27644
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.39585e5) * t27652 ** 2 * (-63 * t27642 - 72 * t27643 + 42 * t27644 + 378 * t27646 + 153 * t27648 - 3 + (252 + 5 * t27645) * t27645 + (312 * t27646 + 42 * t27648 - 22) * t27641) * np.sin((14 * phi1 + 9 * phi2)) * ((1 - t27641) ** (-0.1e1 / 0.2e1)) * ((1 + t27641) ** (-0.1e1 / 0.2e1))

        if Bindx == 2819:
            t27655 = np.cos(phi)
            t27656 = t27655 ** 2
            t27657 = t27655 * t27656
            t27660 = t27657 ** 2
            t27661 = t27655 * t27660
            t27668 = t27661 ** 2
            t27666 = t27660 ** 2
            t27658 = t27656 ** 2
            t27659 = t27655 * t27658
            t27664 = t27659 ** 2
            t27662 = t27658 ** 2
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.13195e5) * (-56 * t27656 - 71 * t27657 + 58 * t27658 + 319 * t27659 + 396 * t27660 + 33 * t27661 - 462 * t27662 - 176 * t27664 + 214 * t27666 + 28 * t27668 - 2 + (-539 * t27662 + 163 * t27664 + 109 * t27666 + 3 * t27668 - 17) * t27655) * np.cos((14 * phi1 + 10 * phi2))

        if Bindx == 2820:
            t27684 = np.sin(phi)
            t27682 = t27684 ** 2
            t27670 = np.cos(phi)
            t27671 = t27670 ** 2
            t27673 = t27671 ** 2
            t27674 = t27670 * t27673
            t27679 = t27674 ** 2
            t27677 = t27673 ** 2
            t27672 = t27670 * t27671
            t27675 = t27672 ** 2
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.203e3) * t27682 ** 2 * (-440 * t27671 - 990 * t27672 - 1155 * t27673 - 132 * t27674 + 3135 * t27677 + 704 * t27679 - 11 + (1848 + 15 * t27675) * t27675 + (3300 * t27675 + 1870 * t27677 + 154 * t27679 - 106) * t27670) * np.sin((14 * phi1 + 11 * phi2)) * ((1 - t27670) ** (-0.1e1 / 0.2e1)) * ((1 + t27670) ** (-0.1e1 / 0.2e1))

        if Bindx == 2821:
            t27685 = np.cos(phi)
            t27686 = t27685 ** 2
            t27687 = t27685 * t27686
            t27690 = t27687 ** 2
            t27691 = t27685 * t27690
            t27698 = t27691 ** 2
            t27696 = t27690 ** 2
            t27688 = t27686 ** 2
            t27689 = t27685 * t27688
            t27694 = t27689 ** 2
            t27692 = t27688 ** 2
            tfunc[..., c] = -0.31e2 / 0.8192e4 * np.sqrt(0.609e3) * (200 * t27686 + 507 * t27687 + 676 * t27688 + 143 * t27689 - 1144 * t27690 - 2145 * t27691 - 1716 * t27692 + 1144 * t27694 + 780 * t27696 + 56 * t27698 + 4 + (-143 * t27692 + 1313 * t27694 + 277 * t27696 + 5 * t27698 + 43) * t27685) * np.cos((14 * phi1 + 12 * phi2))

        if Bindx == 2822:
            t27701 = np.cos(phi)
            t27702 = t27701 ** 2
            t27703 = t27701 * t27702
            t27706 = t27703 ** 2
            t27712 = t27706 ** 2
            t27704 = t27702 ** 2
            t27705 = t27701 * t27704
            t27710 = t27705 ** 2
            t27708 = t27704 ** 2
            t27707 = t27701 * t27706
            t27700 = np.sin(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.29e2) * t27700 ** 2 * (-819 * t27702 - 2548 * t27703 - 5005 * t27704 - 6006 * t27705 - 3003 * t27706 + 9009 * t27708 + 7007 * t27710 + 1001 * t27712 - 13 + (3432 + 15 * t27707) * t27707 + (10010 * t27708 + 3276 * t27710 + 182 * t27712 - 154) * t27701) * np.sin((14 * phi1 + 13 * phi2)) * ((1 - t27701) ** (-0.1e1 / 0.2e1)) * ((1 + t27701) ** (-0.1e1 / 0.2e1))

        if Bindx == 2823:
            t27715 = np.cos(phi)
            t27716 = t27715 ** 2
            t27717 = t27715 * t27716
            t27720 = t27717 ** 2
            t27721 = t27715 * t27720
            t27728 = t27721 ** 2
            t27726 = t27720 ** 2
            t27718 = t27716 ** 2
            t27719 = t27715 * t27718
            t27724 = t27719 ** 2
            t27722 = t27718 ** 2
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * (-1064 * t27716 - 3731 * t27717 - 8554 * t27718 - 13013 * t27719 - 12012 * t27720 - 3003 * t27721 + 9438 * t27722 + 16016 * t27724 + 4186 * t27726 + 196 * t27728 - 14 + (17017 * t27722 + 9919 * t27724 + 1169 * t27726 + 15 * t27728 - 181) * t27715) * np.cos((14 * phi1 + 14 * phi2))

        if Bindx == 2824:
            t27730 = np.cos(phi)
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.15e2) * np.sqrt((1 - t27730)) * ((1 + t27730) ** (0.29e2 / 0.2e1)) * np.sin((14 * phi1 + 15 * phi2))

        if Bindx == 2825:
            t27731 = np.cos(phi)
            t27732 = t27731 ** 2
            t27733 = t27731 * t27732
            t27736 = t27733 ** 2
            t27737 = t27731 * t27736
            t27744 = t27737 ** 2
            t27742 = t27736 ** 2
            t27734 = t27732 ** 2
            t27735 = t27731 * t27734
            t27740 = t27735 ** 2
            t27738 = t27734 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.cos((15 * phi1 - 15 * phi2)) * (-105 * t27732 + 455 * t27733 - 1365 * t27734 + 3003 * t27735 - 5005 * t27736 + 6435 * t27737 - 6435 * t27738 - 3003 * t27740 - 455 * t27742 - 15 * t27744 - 1 + (5005 * t27738 + 1365 * t27740 + 105 * t27742 + t27744 + 15) * t27731)

        if Bindx == 2826:
            t27746 = np.cos(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.15e2) * ((1 - t27746) ** (0.29e2 / 0.2e1)) * np.sqrt((1 + t27746)) * np.sin((15 * phi1 - 14 * phi2))

        if Bindx == 2827:
            t27747 = np.cos(phi)
            t27748 = t27747 ** 2
            t27749 = t27747 * t27748
            t27752 = t27749 ** 2
            t27753 = t27747 * t27752
            t27760 = t27753 ** 2
            t27758 = t27752 ** 2
            t27750 = t27748 ** 2
            t27751 = t27747 * t27750
            t27756 = t27751 ** 2
            t27754 = t27750 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.435e3) * (77 * t27748 - 273 * t27749 + 637 * t27750 - 1001 * t27751 + 1001 * t27752 - 429 * t27753 - 429 * t27754 - 1001 * t27756 - 273 * t27758 - 13 * t27760 + 1 + (1001 * t27754 + 637 * t27756 + 77 * t27758 + t27760 - 13) * t27747) * np.cos((15 * phi1 - 13 * phi2))

        if Bindx == 2828:
            t27762 = np.cos(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * ((1 - t27762) ** (0.27e2 / 0.2e1)) * ((1 + t27762) ** (0.3e1 / 0.2e1)) * np.sin((15 * phi1 - 12 * phi2))

        if Bindx == 2829:
            t27763 = np.cos(phi)
            t27764 = t27763 ** 2
            t27765 = t27763 * t27764
            t27768 = t27765 ** 2
            t27769 = t27763 * t27768
            t27776 = t27769 ** 2
            t27774 = t27768 ** 2
            t27766 = t27764 ** 2
            t27767 = t27763 * t27766
            t27772 = t27767 ** 2
            t27770 = t27766 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3045e4) * np.cos((15 * phi1 - 11 * phi2)) * (-53 * t27764 + 143 * t27765 - 221 * t27766 + 143 * t27767 + 143 * t27768 - 429 * t27769 + 429 * t27770 - 143 * t27772 - 143 * t27774 - 11 * t27776 - 1 + (-143 * t27770 + 221 * t27772 + 53 * t27774 + t27776 + 11) * t27763)

        if Bindx == 2830:
            t27778 = np.cos(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.7917e4) * ((1 - t27778) ** (0.25e2 / 0.2e1)) * ((1 + t27778) ** (0.5e1 / 0.2e1)) * np.sin((15 * phi1 - 10 * phi2))

        if Bindx == 2831:
            t27779 = np.cos(phi)
            t27780 = t27779 ** 2
            t27781 = t27779 * t27780
            t27784 = t27781 ** 2
            t27785 = t27779 * t27784
            t27792 = t27785 ** 2
            t27790 = t27784 ** 2
            t27782 = t27780 ** 2
            t27783 = t27779 * t27782
            t27788 = t27783 ** 2
            t27786 = t27782 ** 2
            tfunc[..., c] = 0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2639e4) * np.cos((15 * phi1 - 9 * phi2)) * (33 * t27780 - 57 * t27781 + 21 * t27782 + 99 * t27783 - 187 * t27784 + 99 * t27785 + 99 * t27786 + 99 * t27788 - 57 * t27790 - 9 * t27792 + 1 + (-187 * t27786 + 21 * t27788 + 33 * t27790 + t27792 - 9) * t27779)

        if Bindx == 2832:
            t27794 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.8192e4 * np.sqrt(0.1131e4) * ((1 - t27794) ** (0.23e2 / 0.2e1)) * ((1 + t27794) ** (0.7e1 / 0.2e1)) * np.sin((15 * phi1 - 8 * phi2))

        if Bindx == 2833:
            t27795 = np.cos(phi)
            t27796 = t27795 ** 2
            t27797 = t27795 * t27796
            t27800 = t27797 ** 2
            t27801 = t27795 * t27800
            t27808 = t27801 ** 2
            t27806 = t27800 ** 2
            t27798 = t27796 ** 2
            t27799 = t27795 * t27798
            t27804 = t27799 ** 2
            t27802 = t27798 ** 2
            tfunc[..., c] = -0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * np.cos((15 * phi1 - 7 * phi2)) * (-17 * t27796 + 7 * t27797 + 43 * t27798 - 77 * t27799 + 11 * t27800 + 99 * t27801 - 99 * t27802 + 77 * t27804 - 7 * t27806 - 7 * t27808 - 1 + (-11 * t27802 - 43 * t27804 + 17 * t27806 + t27808 + 7) * t27795)

        if Bindx == 2834:
            t27810 = np.cos(phi)
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.286143e6) * ((1 - t27810) ** (0.21e2 / 0.2e1)) * ((1 + t27810) ** (0.9e1 / 0.2e1)) * np.sin((15 * phi1 - 6 * phi2))

        if Bindx == 2835:
            t27811 = np.cos(phi)
            t27812 = t27811 ** 2
            t27813 = t27811 * t27812
            t27816 = t27813 ** 2
            t27817 = t27811 * t27816
            t27824 = t27817 ** 2
            t27822 = t27816 ** 2
            t27814 = t27812 ** 2
            t27815 = t27811 * t27814
            t27820 = t27815 ** 2
            t27818 = t27814 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3338335e7) * np.cos((15 * phi1 - 5 * phi2)) * (5 * t27812 + 15 * t27813 - 35 * t27814 - t27815 + 65 * t27816 - 45 * t27817 - 45 * t27818 - t27820 + 15 * t27822 - 5 * t27824 + 1 + (65 * t27818 - 35 * t27820 + 5 * t27822 + t27824 - 5) * t27811)

        if Bindx == 2836:
            t27826 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.60697e5) * ((1 - t27826) ** (0.19e2 / 0.2e1)) * ((1 + t27826) ** (0.11e2 / 0.2e1)) * np.sin((15 * phi1 - 4 * phi2))

        if Bindx == 2837:
            t27827 = np.cos(phi)
            t27842 = -3 * t27827
            t27828 = t27827 ** 2
            t27829 = t27827 * t27828
            t27832 = t27829 ** 2
            t27833 = t27827 * t27832
            t27840 = t27833 ** 2
            t27830 = t27828 ** 2
            t27834 = t27830 ** 2
            t27831 = t27827 * t27830
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3459729e7) * np.cos((15 * phi1 - 3 * phi2)) * (3 * t27828 - 17 * t27829 + 3 * t27830 - 45 * t27833 + 45 * t27834 - 3 * t27840 - 1 + (25 * t27834 + t27840 + 3) * t27827 + (-25 + (t27842 + 17) * t27832) * t27832 + (39 + (t27842 - 39) * t27831) * t27831)

        if Bindx == 2838:
            t27843 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.266133e6) * ((1 - t27843) ** (0.17e2 / 0.2e1)) * ((1 + t27843) ** (0.13e2 / 0.2e1)) * np.sin((15 * phi1 - 2 * phi2))

        if Bindx == 2839:
            t27844 = np.cos(phi)
            t27845 = t27844 ** 2
            t27847 = t27845 ** 2
            t27848 = t27844 * t27847
            t27846 = t27844 * t27845
            t27849 = t27846 ** 2
            t27850 = t27844 * t27849
            t27859 = -35 * t27847 ** 2 + 21 * t27848 ** 2 - 7 * t27849 ** 2 + t27850 ** 2 - 1
            tfunc[..., c] = 0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.646323e6) * np.cos((15 * phi1 - phi2)) * (t27844 * t27859 - 7 * t27845 + 7 * t27846 + 21 * t27847 - 21 * t27848 - 35 * t27849 + 35 * t27850 - t27859)

        if Bindx == 2840:
            t27860 = np.cos(phi)
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1077205e7) * ((1 - t27860) ** (0.15e2 / 0.2e1)) * ((1 + t27860) ** (0.15e2 / 0.2e1)) * np.sin((15 * phi1))

        if Bindx == 2841:
            t27861 = np.cos(phi)
            t27862 = t27861 ** 2
            t27864 = t27862 ** 2
            t27865 = t27861 * t27864
            t27863 = t27861 * t27862
            t27866 = t27863 ** 2
            t27867 = t27861 * t27866
            t27879 = -35 * t27864 ** 2 + 21 * t27865 ** 2 - 7 * t27866 ** 2 + t27867 ** 2 - 1
            tfunc[..., c] = -0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.646323e6) * np.cos((15 * phi1 + phi2)) * (t27861 * t27879 + 7 * t27862 + 7 * t27863 - 21 * t27864 - 21 * t27865 + 35 * t27866 + 35 * t27867 + t27879)

        if Bindx == 2842:
            t27880 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.266133e6) * ((1 - t27880) ** (0.13e2 / 0.2e1)) * ((1 + t27880) ** (0.17e2 / 0.2e1)) * np.sin((15 * phi1 + 2 * phi2))

        if Bindx == 2843:
            t27881 = np.cos(phi)
            t27896 = -3 * t27881
            t27882 = t27881 ** 2
            t27883 = t27881 * t27882
            t27886 = t27883 ** 2
            t27887 = t27881 * t27886
            t27894 = t27887 ** 2
            t27884 = t27882 ** 2
            t27888 = t27884 ** 2
            t27885 = t27881 * t27884
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3459729e7) * np.cos((15 * phi1 + 3 * phi2)) * (-3 * t27882 - 17 * t27883 - 3 * t27884 - 45 * t27887 - 45 * t27888 + 3 * t27894 + 1 + (25 * t27888 + t27894 + 3) * t27881 + (25 + (t27896 - 17) * t27886) * t27886 + (39 + (t27896 + 39) * t27885) * t27885)

        if Bindx == 2844:
            t27897 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.60697e5) * ((1 - t27897) ** (0.11e2 / 0.2e1)) * ((1 + t27897) ** (0.19e2 / 0.2e1)) * np.sin((15 * phi1 + 4 * phi2))

        if Bindx == 2845:
            t27898 = np.cos(phi)
            t27899 = t27898 ** 2
            t27900 = t27898 * t27899
            t27903 = t27900 ** 2
            t27904 = t27898 * t27903
            t27911 = t27904 ** 2
            t27909 = t27903 ** 2
            t27901 = t27899 ** 2
            t27902 = t27898 * t27901
            t27907 = t27902 ** 2
            t27905 = t27901 ** 2
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3338335e7) * np.cos((15 * phi1 + 5 * phi2)) * (-5 * t27899 + 15 * t27900 + 35 * t27901 - t27902 - 65 * t27903 - 45 * t27904 + 45 * t27905 + t27907 - 15 * t27909 + 5 * t27911 - 1 + (65 * t27905 - 35 * t27907 + 5 * t27909 + t27911 - 5) * t27898)

        if Bindx == 2846:
            t27913 = np.cos(phi)
            tfunc[..., c] = -0.155e3 / 0.16384e5 * np.sqrt(0.286143e6) * ((1 - t27913) ** (0.9e1 / 0.2e1)) * ((1 + t27913) ** (0.21e2 / 0.2e1)) * np.sin((15 * phi1 + 6 * phi2))

        if Bindx == 2847:
            t27914 = np.cos(phi)
            t27915 = t27914 ** 2
            t27916 = t27914 * t27915
            t27919 = t27916 ** 2
            t27920 = t27914 * t27919
            t27927 = t27920 ** 2
            t27925 = t27919 ** 2
            t27917 = t27915 ** 2
            t27918 = t27914 * t27917
            t27923 = t27918 ** 2
            t27921 = t27917 ** 2
            tfunc[..., c] = 0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * np.cos((15 * phi1 + 7 * phi2)) * (17 * t27915 + 7 * t27916 - 43 * t27917 - 77 * t27918 - 11 * t27919 + 99 * t27920 + 99 * t27921 - 77 * t27923 + 7 * t27925 + 7 * t27927 + 1 + (-11 * t27921 - 43 * t27923 + 17 * t27925 + t27927 + 7) * t27914)

        if Bindx == 2848:
            t27929 = np.cos(phi)
            tfunc[..., c] = -0.465e3 / 0.8192e4 * np.sqrt(0.1131e4) * ((1 - t27929) ** (0.7e1 / 0.2e1)) * ((1 + t27929) ** (0.23e2 / 0.2e1)) * np.sin((15 * phi1 + 8 * phi2))

        if Bindx == 2849:
            t27930 = np.cos(phi)
            t27931 = t27930 ** 2
            t27932 = t27930 * t27931
            t27935 = t27932 ** 2
            t27936 = t27930 * t27935
            t27943 = t27936 ** 2
            t27941 = t27935 ** 2
            t27933 = t27931 ** 2
            t27934 = t27930 * t27933
            t27939 = t27934 ** 2
            t27937 = t27933 ** 2
            tfunc[..., c] = -0.465e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2639e4) * np.cos((15 * phi1 + 9 * phi2)) * (-33 * t27931 - 57 * t27932 - 21 * t27933 + 99 * t27934 + 187 * t27935 + 99 * t27936 - 99 * t27937 - 99 * t27939 + 57 * t27941 + 9 * t27943 - 1 + (-187 * t27937 + 21 * t27939 + 33 * t27941 + t27943 - 9) * t27930)

        if Bindx == 2850:
            t27945 = np.cos(phi)
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.7917e4) * ((1 - t27945) ** (0.5e1 / 0.2e1)) * ((1 + t27945) ** (0.25e2 / 0.2e1)) * np.sin((15 * phi1 + 10 * phi2))

        if Bindx == 2851:
            t27946 = np.cos(phi)
            t27947 = t27946 ** 2
            t27948 = t27946 * t27947
            t27951 = t27948 ** 2
            t27952 = t27946 * t27951
            t27959 = t27952 ** 2
            t27957 = t27951 ** 2
            t27949 = t27947 ** 2
            t27950 = t27946 * t27949
            t27955 = t27950 ** 2
            t27953 = t27949 ** 2
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3045e4) * np.cos((15 * phi1 + 11 * phi2)) * (53 * t27947 + 143 * t27948 + 221 * t27949 + 143 * t27950 - 143 * t27951 - 429 * t27952 - 429 * t27953 + 143 * t27955 + 143 * t27957 + 11 * t27959 + 1 + (-143 * t27953 + 221 * t27955 + 53 * t27957 + t27959 + 11) * t27946)

        if Bindx == 2852:
            t27961 = np.cos(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * ((1 - t27961) ** (0.3e1 / 0.2e1)) * ((1 + t27961) ** (0.27e2 / 0.2e1)) * np.sin((15 * phi1 + 12 * phi2))

        if Bindx == 2853:
            t27962 = np.cos(phi)
            t27963 = t27962 ** 2
            t27964 = t27962 * t27963
            t27967 = t27964 ** 2
            t27968 = t27962 * t27967
            t27975 = t27968 ** 2
            t27973 = t27967 ** 2
            t27965 = t27963 ** 2
            t27966 = t27962 * t27965
            t27971 = t27966 ** 2
            t27969 = t27965 ** 2
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.435e3) * (-77 * t27963 - 273 * t27964 - 637 * t27965 - 1001 * t27966 - 1001 * t27967 - 429 * t27968 + 429 * t27969 + 1001 * t27971 + 273 * t27973 + 13 * t27975 - 1 + (1001 * t27969 + 637 * t27971 + 77 * t27973 + t27975 - 13) * t27962) * np.cos((15 * phi1 + 13 * phi2))

        if Bindx == 2854:
            t27977 = np.cos(phi)
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.15e2) * ((1 + t27977) ** (0.29e2 / 0.2e1)) * np.sin((15 * phi1 + 14 * phi2)) * np.sqrt((1 - t27977))

        if Bindx == 2855:
            t27978 = np.cos(phi)
            t27979 = t27978 ** 2
            t27980 = t27978 * t27979
            t27983 = t27980 ** 2
            t27984 = t27978 * t27983
            t27991 = t27984 ** 2
            t27989 = t27983 ** 2
            t27981 = t27979 ** 2
            t27982 = t27978 * t27981
            t27987 = t27982 ** 2
            t27985 = t27981 ** 2
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2e1) * np.cos((15 * phi1 + 15 * phi2)) * (105 * t27979 + 455 * t27980 + 1365 * t27981 + 3003 * t27982 + 5005 * t27983 + 6435 * t27984 + 6435 * t27985 + 3003 * t27987 + 455 * t27989 + 15 * t27991 + 1 + (5005 * t27985 + 1365 * t27987 + 105 * t27989 + t27991 + 15) * t27978)

        if Bindx == 2856:
            t27993 = np.cos(phi)
            t27994 = t27993 ** 2
            t28002 = -8 * t27994
            t27995 = t27994 ** 2
            t27997 = t27995 ** 2
            t27996 = t27994 * t27995
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi2)) * (28 * t27995 + t28002 + 1 + (-56 * t27994 + 70 + t27997) * t27997 + (-56 + (t28002 + 28) * t27996) * t27996)

        if Bindx == 2857:
            t28008 = np.sin(phi)
            t28004 = t28008 ** 2
            t28005 = t28004 ** 2
            t28006 = t28005 ** 2
            t28003 = np.cos(phi)
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t28003 * t28006 ** 2 * np.sin((15 * phi2)) * ((1 - t28003) ** (-0.1e1 / 0.2e1)) * ((1 + t28003) ** (-0.1e1 / 0.2e1))

        if Bindx == 2858:
            t28009 = np.cos(phi)
            t28010 = t28009 ** 2
            t28011 = t28010 ** 2
            t28012 = t28010 * t28011
            t28015 = t28012 ** 2
            t28013 = t28011 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t28011 - 686 * t28012 + 658 * t28015 + 1 + (1120 + 31 * t28013) * t28013 + (-1106 * t28013 - 218 * t28015 - 38) * t28010) * np.cos((14 * phi2))

        if Bindx == 2859:
            t28024 = np.sin(phi)
            t28019 = t28024 ** 2
            t28020 = t28024 * t28019
            t28022 = t28024 * t28020 ** 2
            t28018 = np.cos(phi)
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t28018 * t28022 ** 2 * (31 * t28018 ** 2 - 3) * np.sin((13 * phi2)) * ((1 + t28018) ** (-0.1e1 / 0.2e1)) * ((1 - t28018) ** (-0.1e1 / 0.2e1))

        if Bindx == 2860:
            t28025 = np.cos(phi)
            t28026 = t28025 ** 2
            t28027 = t28026 ** 2
            t28028 = t28026 * t28027
            t28031 = t28028 ** 2
            t28029 = t28027 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t28027 - 8064 * t28028 + 14532 * t28031 + 3 + (17010 + 899 * t28029) * t28029 + (-20608 * t28029 - 5568 * t28031 - 192) * t28026) * np.cos((12 * phi2))

        if Bindx == 2861:
            t28041 = np.sin(phi)
            t28037 = t28041 ** 2
            t28038 = t28041 * t28037
            t28039 = t28038 ** 2
            t28034 = np.cos(phi)
            t28035 = t28034 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t28034 * t28039 ** 2 * (15 + (-290 + 899 * t28035) * t28035) * np.sin((11 * phi2)) * ((1 + t28034) ** (-0.1e1 / 0.2e1)) * ((1 - t28034) ** (-0.1e1 / 0.2e1))

        if Bindx == 2862:
            t28042 = np.cos(phi)
            t28043 = t28042 ** 2
            t28044 = t28043 ** 2
            t28045 = t28043 * t28044
            t28048 = t28045 ** 2
            t28046 = t28044 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t28044 - 31766 * t28045 + 100890 * t28048 + 5 + (83680 + 8091 * t28046) * t28046 + (-122090 * t28046 - 44370 * t28048 - 430) * t28043) * np.cos((10 * phi2))

        if Bindx == 2863:
            t28059 = np.sin(phi)
            t28055 = t28059 ** 2
            t28057 = t28059 * t28055 ** 2
            t28051 = np.cos(phi)
            t28052 = t28051 ** 2
            t28053 = t28052 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t28051 * t28057 ** 2 * (-5481 * t28053 - 35 + (8091 * t28053 + 945) * t28052) * np.sin((9 * phi2)) * ((1 + t28051) ** (-0.1e1 / 0.2e1)) * ((1 - t28051) ** (-0.1e1 / 0.2e1))

        if Bindx == 2864:
            t28060 = np.cos(phi)
            t28061 = t28060 ** 2
            t28062 = t28061 ** 2
            t28063 = t28061 * t28062
            t28066 = t28063 ** 2
            t28064 = t28062 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t28062 - 78568 * t28063 + 398340 * t28066 + 7 + (246122 + 40455 * t28064) * t28064 + (-419560 * t28064 - 198360 * t28066 - 728) * t28061) * np.cos((8 * phi2))

        if Bindx == 2865:
            t28077 = np.sin(phi)
            t28074 = t28077 ** 2
            t28075 = t28074 ** 2
            t28069 = np.cos(phi)
            t28070 = t28069 ** 2
            t28071 = t28070 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t28069 * t28075 ** 2 * (-700 * t28070 + 21 + (-15660 * t28070 + 5670 + 13485 * t28071) * t28071) * np.sin((7 * phi2)) * ((1 + t28069) ** (-0.1e1 / 0.2e1)) * ((1 - t28069) ** (-0.1e1 / 0.2e1))

        if Bindx == 2866:
            t28078 = np.cos(phi)
            t28079 = t28078 ** 2
            t28080 = t28079 ** 2
            t28081 = t28079 * t28080
            t28084 = t28081 ** 2
            t28082 = t28080 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t28080 - 345366 * t28081 + 2498490 * t28084 + 21 + (1225440 + 310155 * t28082) * t28082 + (-2353130 * t28082 - 1380690 * t28084 - 2478) * t28079) * np.cos((6 * phi2))

        if Bindx == 2867:
            t28096 = np.sin(phi)
            t28093 = t28096 ** 2
            t28094 = t28096 * t28093
            t28087 = np.cos(phi)
            t28088 = t28087 ** 2
            t28089 = t28088 ** 2
            t28091 = t28089 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t28087 * t28094 ** 2 * (-88550 * t28089 - 550275 * t28091 - 231 + (341550 * t28089 + 310155 * t28091 + 8855) * t28088) * np.sin((5 * phi2)) * ((1 + t28087) ** (-0.1e1 / 0.2e1)) * ((1 - t28087) ** (-0.1e1 / 0.2e1))

        if Bindx == 2868:
            t28097 = np.cos(phi)
            t28098 = t28097 ** 2
            t28099 = t28098 ** 2
            t28100 = t28098 * t28099
            t28103 = t28100 ** 2
            t28101 = t28099 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t28099 - 231616 * t28100 + 2143140 * t28103 + 11 + (893090 + 310155 * t28101) * t28101 + (-1862080 * t28101 - 1280640 * t28103 - 1408) * t28098) * np.cos((4 * phi2))

        if Bindx == 2869:
            t28115 = np.sin(phi)
            t28113 = t28115 ** 2
            t28106 = np.cos(phi)
            t28107 = t28106 ** 2
            t28108 = t28107 ** 2
            t28110 = t28108 ** 2
            t28109 = t28107 * t28108
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t28106 * t28113 ** 2 * (69069 * t28108 + 740025 * t28110 + 143 + (-328900 + 310155 * t28109) * t28109 + (-780390 * t28110 - 6006) * t28107) * np.sin((3 * phi2)) * ((1 + t28106) ** (-0.1e1 / 0.2e1)) * ((1 - t28106) ** (-0.1e1 / 0.2e1))

        if Bindx == 2870:
            t28116 = np.cos(phi)
            t28117 = t28116 ** 2
            t28118 = t28117 ** 2
            t28119 = t28117 * t28118
            t28122 = t28119 ** 2
            t28120 = t28118 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t28118 - 3461458 * t28119 + 36983310 * t28122 + 143 + (13997984 + 5892945 * t28120) * t28120 + (-30620590 * t28120 - 23191590 * t28122 - 19162) * t28117) * np.cos((2 * phi2))

        if Bindx == 2871:
            t28126 = np.cos(phi)
            t28127 = t28126 ** 2
            t28128 = t28127 ** 2
            t28129 = t28127 * t28128
            t28132 = t28129 ** 2
            t28130 = t28128 ** 2
            t28125 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t28126 * t28125 ** 2 * (-3594591 * t28128 + 19684665 * t28129 - 54679625 * t28130 - 59879925 * t28132 - 6435 + (80528175 * t28130 + 17678835 * t28132 + 285285) * t28127) * np.sin(phi2) * ((1 + t28126) ** (-0.1e1 / 0.2e1)) * ((1 - t28126) ** (-0.1e1 / 0.2e1))

        if Bindx == 2872:
            t28134 = np.cos(phi)
            t28135 = t28134 ** 2
            t28136 = t28135 ** 2
            t28137 = t28135 * t28136
            t28140 = t28137 ** 2
            t28138 = t28136 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t28140 - 0.672188517e9 / 0.4096e4 * t28137 + 0.160044885e9 / 0.8192e4 * t28136 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t28138) * t28138 + (-0.4798948275e10 / 0.4096e4 * t28140 - 0.6135053925e10 / 0.4096e4 * t28138 - 0.3610035e7 / 0.4096e4) * t28135

        if Bindx == 2873:
            t28144 = np.cos(phi)
            t28145 = t28144 ** 2
            t28146 = t28145 ** 2
            t28147 = t28145 * t28146
            t28150 = t28147 ** 2
            t28148 = t28146 ** 2
            t28143 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t28144 * t28143 ** 2 * (-3594591 * t28146 + 19684665 * t28147 - 54679625 * t28148 - 59879925 * t28150 - 6435 + (80528175 * t28148 + 17678835 * t28150 + 285285) * t28145) * np.sin(phi2) * ((1 + t28144) ** (-0.1e1 / 0.2e1)) * ((1 - t28144) ** (-0.1e1 / 0.2e1))

        if Bindx == 2874:
            t28152 = np.cos(phi)
            t28153 = t28152 ** 2
            t28154 = t28153 ** 2
            t28155 = t28153 * t28154
            t28158 = t28155 ** 2
            t28156 = t28154 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t28154 - 3461458 * t28155 + 36983310 * t28158 + 143 + (13997984 + 5892945 * t28156) * t28156 + (-30620590 * t28156 - 23191590 * t28158 - 19162) * t28153) * np.cos((2 * phi2))

        if Bindx == 2875:
            t28170 = np.sin(phi)
            t28168 = t28170 ** 2
            t28161 = np.cos(phi)
            t28162 = t28161 ** 2
            t28163 = t28162 ** 2
            t28165 = t28163 ** 2
            t28164 = t28162 * t28163
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t28161 * t28168 ** 2 * (69069 * t28163 + 740025 * t28165 + 143 + (-328900 + 310155 * t28164) * t28164 + (-780390 * t28165 - 6006) * t28162) * np.sin((3 * phi2)) * ((1 + t28161) ** (-0.1e1 / 0.2e1)) * ((1 - t28161) ** (-0.1e1 / 0.2e1))

        if Bindx == 2876:
            t28171 = np.cos(phi)
            t28172 = t28171 ** 2
            t28173 = t28172 ** 2
            t28174 = t28172 * t28173
            t28177 = t28174 ** 2
            t28175 = t28173 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t28173 - 231616 * t28174 + 2143140 * t28177 + 11 + (893090 + 310155 * t28175) * t28175 + (-1862080 * t28175 - 1280640 * t28177 - 1408) * t28172) * np.cos((4 * phi2))

        if Bindx == 2877:
            t28189 = np.sin(phi)
            t28186 = t28189 ** 2
            t28187 = t28189 * t28186
            t28180 = np.cos(phi)
            t28181 = t28180 ** 2
            t28182 = t28181 ** 2
            t28184 = t28182 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t28180 * t28187 ** 2 * (-88550 * t28182 - 550275 * t28184 - 231 + (341550 * t28182 + 310155 * t28184 + 8855) * t28181) * np.sin((5 * phi2)) * ((1 + t28180) ** (-0.1e1 / 0.2e1)) * ((1 - t28180) ** (-0.1e1 / 0.2e1))

        if Bindx == 2878:
            t28190 = np.cos(phi)
            t28191 = t28190 ** 2
            t28192 = t28191 ** 2
            t28193 = t28191 * t28192
            t28196 = t28193 ** 2
            t28194 = t28192 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t28192 - 345366 * t28193 + 2498490 * t28196 + 21 + (1225440 + 310155 * t28194) * t28194 + (-2353130 * t28194 - 1380690 * t28196 - 2478) * t28191) * np.cos((6 * phi2))

        if Bindx == 2879:
            t28207 = np.sin(phi)
            t28204 = t28207 ** 2
            t28205 = t28204 ** 2
            t28199 = np.cos(phi)
            t28200 = t28199 ** 2
            t28201 = t28200 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t28199 * t28205 ** 2 * (-700 * t28200 + 21 + (-15660 * t28200 + 5670 + 13485 * t28201) * t28201) * np.sin((7 * phi2)) * ((1 + t28199) ** (-0.1e1 / 0.2e1)) * ((1 - t28199) ** (-0.1e1 / 0.2e1))

        if Bindx == 2880:
            t28208 = np.cos(phi)
            t28209 = t28208 ** 2
            t28210 = t28209 ** 2
            t28211 = t28209 * t28210
            t28214 = t28211 ** 2
            t28212 = t28210 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t28210 - 78568 * t28211 + 398340 * t28214 + 7 + (246122 + 40455 * t28212) * t28212 + (-419560 * t28212 - 198360 * t28214 - 728) * t28209) * np.cos((8 * phi2))

        if Bindx == 2881:
            t28225 = np.sin(phi)
            t28221 = t28225 ** 2
            t28223 = t28225 * t28221 ** 2
            t28217 = np.cos(phi)
            t28218 = t28217 ** 2
            t28219 = t28218 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t28217 * t28223 ** 2 * (-5481 * t28219 - 35 + (8091 * t28219 + 945) * t28218) * np.sin((9 * phi2)) * ((1 + t28217) ** (-0.1e1 / 0.2e1)) * ((1 - t28217) ** (-0.1e1 / 0.2e1))

        if Bindx == 2882:
            t28226 = np.cos(phi)
            t28227 = t28226 ** 2
            t28228 = t28227 ** 2
            t28229 = t28227 * t28228
            t28232 = t28229 ** 2
            t28230 = t28228 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t28228 - 31766 * t28229 + 100890 * t28232 + 5 + (83680 + 8091 * t28230) * t28230 + (-122090 * t28230 - 44370 * t28232 - 430) * t28227) * np.cos((10 * phi2))

        if Bindx == 2883:
            t28242 = np.sin(phi)
            t28238 = t28242 ** 2
            t28239 = t28242 * t28238
            t28240 = t28239 ** 2
            t28235 = np.cos(phi)
            t28236 = t28235 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t28235 * t28240 ** 2 * (15 + (-290 + 899 * t28236) * t28236) * np.sin((11 * phi2)) * ((1 + t28235) ** (-0.1e1 / 0.2e1)) * ((1 - t28235) ** (-0.1e1 / 0.2e1))

        if Bindx == 2884:
            t28243 = np.cos(phi)
            t28244 = t28243 ** 2
            t28245 = t28244 ** 2
            t28246 = t28244 * t28245
            t28249 = t28246 ** 2
            t28247 = t28245 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t28245 - 8064 * t28246 + 14532 * t28249 + 3 + (17010 + 899 * t28247) * t28247 + (-20608 * t28247 - 5568 * t28249 - 192) * t28244) * np.cos((12 * phi2))

        if Bindx == 2885:
            t28258 = np.sin(phi)
            t28253 = t28258 ** 2
            t28254 = t28258 * t28253
            t28256 = t28258 * t28254 ** 2
            t28252 = np.cos(phi)
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t28252 * t28256 ** 2 * (31 * t28252 ** 2 - 3) * np.sin((13 * phi2)) * ((1 + t28252) ** (-0.1e1 / 0.2e1)) * ((1 - t28252) ** (-0.1e1 / 0.2e1))

        if Bindx == 2886:
            t28259 = np.cos(phi)
            t28260 = t28259 ** 2
            t28261 = t28260 ** 2
            t28262 = t28260 * t28261
            t28265 = t28262 ** 2
            t28263 = t28261 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t28261 - 686 * t28262 + 658 * t28265 + 1 + (1120 + 31 * t28263) * t28263 + (-1106 * t28263 - 218 * t28265 - 38) * t28260) * np.cos((14 * phi2))

        if Bindx == 2887:
            t28273 = np.sin(phi)
            t28269 = t28273 ** 2
            t28270 = t28269 ** 2
            t28271 = t28270 ** 2
            t28268 = np.cos(phi)
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t28268 * t28271 ** 2 * np.sin((15 * phi2)) * ((1 - t28268) ** (-0.1e1 / 0.2e1)) * ((1 + t28268) ** (-0.1e1 / 0.2e1))

        if Bindx == 2888:
            t28274 = np.cos(phi)
            t28275 = t28274 ** 2
            t28283 = -8 * t28275
            t28276 = t28275 ** 2
            t28278 = t28276 ** 2
            t28277 = t28275 * t28276
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi2)) * (28 * t28276 + t28283 + 1 + (-56 * t28275 + 70 + t28278) * t28278 + (-56 + (t28283 + 28) * t28277) * t28277)

        if Bindx == 2889:
            t28284 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1964315e7) * ((1 - t28284) ** (0.17e2 / 0.2e1)) * ((1 + t28284) ** (0.15e2 / 0.2e1)) * np.sin((phi1 - 16 * phi2))

        if Bindx == 2890:
            t28285 = np.cos(phi)
            t28286 = t28285 ** 2
            t28287 = t28285 * t28286
            t28290 = t28287 ** 2
            t28291 = t28285 * t28290
            t28298 = t28291 ** 2
            t28296 = t28290 ** 2
            t28288 = t28286 ** 2
            t28289 = t28285 * t28288
            t28294 = t28289 ** 2
            t28292 = t28288 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1964315e7) * (-23 * t28286 - 105 * t28287 + 133 * t28288 + 315 * t28289 - 371 * t28290 - 525 * t28291 - 581 * t28294 + 343 * t28296 - 113 * t28298 + 1 + (595 + 16 * t28292) * t28292 + (525 * t28292 - 315 * t28294 + 105 * t28296 - 15 * t28298 + 15) * t28285) * np.cos((phi1 - 15 * phi2))

        if Bindx == 2891:
            t28309 = np.sin(phi)
            t28304 = t28309 ** 2
            t28305 = t28309 * t28304
            t28307 = t28309 * t28305 ** 2
            t28301 = np.cos(phi)
            t28302 = t28301 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.63365e5) * t28307 ** 2 * (-217 * t28302 + 7 + (248 * t28302 - 38) * t28301) * np.sin((phi1 - 14 * phi2)) * ((1 + t28301) ** (-0.1e1 / 0.2e1)) * ((1 - t28301) ** (-0.1e1 / 0.2e1))

        if Bindx == 2892:
            t28310 = np.cos(phi)
            t28311 = t28310 ** 2
            t28312 = t28310 * t28311
            t28315 = t28312 ** 2
            t28316 = t28310 * t28315
            t28323 = t28316 ** 2
            t28321 = t28315 ** 2
            t28313 = t28311 ** 2
            t28314 = t28310 * t28313
            t28319 = t28314 ** 2
            t28317 = t28313 ** 2
            tfunc[..., c] = -0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.12673e5) * (-153 * t28311 - 637 * t28312 + 1351 * t28313 + 3003 * t28314 - 5061 * t28315 - 6825 * t28316 - 11963 * t28319 + 8253 * t28321 - 3111 * t28323 + 3 + (10185 + 496 * t28317) * t28317 + (8645 * t28317 - 6279 * t28319 + 2457 * t28321 - 403 * t28323 + 39) * t28310) * np.cos((phi1 - 13 * phi2))

        if Bindx == 2893:
            t28335 = np.sin(phi)
            t28331 = t28335 ** 2
            t28332 = t28335 * t28331
            t28333 = t28332 ** 2
            t28326 = np.cos(phi)
            t28327 = t28326 ** 2
            t28329 = t28327 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.437e3) * t28333 ** 2 * (522 * t28327 - 2697 * t28329 - 9 + (-1508 * t28327 + 3596 * t28329 + 96) * t28326) * np.sin((phi1 - 12 * phi2)) * ((1 + t28326) ** (-0.1e1 / 0.2e1)) * ((1 - t28326) ** (-0.1e1 / 0.2e1))

        if Bindx == 2894:
            t28336 = np.cos(phi)
            t28337 = t28336 ** 2
            t28338 = t28336 * t28337
            t28341 = t28338 ** 2
            t28342 = t28336 * t28341
            t28349 = t28342 ** 2
            t28347 = t28341 ** 2
            t28339 = t28337 ** 2
            t28340 = t28336 * t28339
            t28345 = t28340 ** 2
            t28343 = t28339 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.15295e5) * (-1125 * t28337 - 4015 * t28338 + 13955 * t28339 + 27489 * t28340 - 67809 * t28341 - 82995 * t28342 - 234655 * t28345 + 187665 * t28347 - 80475 * t28349 + 15 + (168045 + 14384 * t28343) * t28343 + (131615 * t28343 - 115005 * t28345 + 52635 * t28347 - 9889 * t28349 + 165) * t28336) * np.cos((phi1 - 11 * phi2))

        if Bindx == 2895:
            t28363 = np.sin(phi)
            t28359 = t28363 ** 2
            t28361 = t28363 * t28359 ** 2
            t28352 = np.cos(phi)
            t28353 = t28352 ** 2
            t28354 = t28352 * t28353
            t28357 = t28354 ** 2
            t28355 = t28353 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.15295e5) * t28361 ** 2 * (-2025 * t28353 + 10260 * t28354 + 19575 * t28355 - 40455 * t28357 + 25 + (-51678 * t28355 + 64728 * t28357 - 430) * t28352) * np.sin((phi1 - 10 * phi2)) * ((1 + t28352) ** (-0.1e1 / 0.2e1)) * ((1 - t28352) ** (-0.1e1 / 0.2e1))

        if Bindx == 2896:
            t28364 = np.cos(phi)
            t28365 = t28364 ** 2
            t28366 = t28364 * t28365
            t28369 = t28366 ** 2
            t28370 = t28364 * t28369
            t28377 = t28370 ** 2
            t28375 = t28369 ** 2
            t28367 = t28365 ** 2
            t28368 = t28364 * t28367
            t28373 = t28368 ** 2
            t28371 = t28367 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (-3325 * t28365 - 9765 * t28366 + 51695 * t28367 + 85239 * t28368 - 307601 * t28369 - 322425 * t28370 - 1476215 * t28373 + 1348965 * t28375 - 651195 * t28377 + 35 + (908185 + 129456 * t28371) * t28371 + (621585 * t28371 - 642735 * t28373 + 340605 * t28375 - 72819 * t28377 + 315) * t28364) * np.cos((phi1 - 9 * phi2))

        if Bindx == 2897:
            t28392 = np.sin(phi)
            t28389 = t28392 ** 2
            t28390 = t28389 ** 2
            t28380 = np.cos(phi)
            t28381 = t28380 ** 2
            t28383 = t28381 ** 2
            t28387 = t28383 ** 2
            t28382 = t28380 * t28381
            t28385 = t28382 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.28405e5) * t28390 ** 2 * (700 * t28381 - 5600 * t28382 - 9450 * t28383 + 36540 * t28385 - 40455 * t28387 - 7 + (41580 * t28383 - 104400 * t28385 + 80910 * t28387 + 182) * t28380) * np.sin((phi1 - 8 * phi2)) * ((1 + t28380) ** (-0.1e1 / 0.2e1)) * ((1 - t28380) ** (-0.1e1 / 0.2e1))

        if Bindx == 2898:
            t28393 = np.cos(phi)
            t28394 = t28393 ** 2
            t28395 = t28393 * t28394
            t28398 = t28395 ** 2
            t28399 = t28393 * t28398
            t28406 = t28399 ** 2
            t28404 = t28398 ** 2
            t28396 = t28394 ** 2
            t28397 = t28393 * t28396
            t28402 = t28397 ** 2
            t28400 = t28396 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-2331 * t28394 - 5341 * t28395 + 42217 * t28396 + 54831 * t28397 - 290535 * t28398 - 243537 * t28399 - 1805905 * t28402 + 1846755 * t28404 - 987885 * t28406 + 21 + (981903 + 215760 * t28400) * t28400 + (547225 * t28400 - 651735 * t28402 + 392805 * t28404 - 94395 * t28406 + 147) * t28393) * np.cos((phi1 - 7 * phi2))

        if Bindx == 2899:
            t28423 = np.sin(phi)
            t28420 = t28423 ** 2
            t28421 = t28423 * t28420
            t28409 = np.cos(phi)
            t28410 = t28409 ** 2
            t28412 = t28410 ** 2
            t28413 = t28409 * t28412
            t28418 = t28413 ** 2
            t28416 = t28412 ** 2
            t28411 = t28409 * t28410
            t28414 = t28411 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.741e3) * t28421 ** 2 * (-7245 * t28410 + 90160 * t28411 + 120750 * t28412 - 853300 * t28413 - 652050 * t28414 + 1350675 * t28416 - 930465 * t28418 + 63 + (3105000 * t28414 - 4702350 * t28416 + 2481240 * t28418 - 2478) * t28409) * np.sin((phi1 - 6 * phi2)) * ((1 + t28409) ** (-0.1e1 / 0.2e1)) * ((1 - t28409) ** (-0.1e1 / 0.2e1))

        if Bindx == 2900:
            t28424 = np.cos(phi)
            t28425 = t28424 ** 2
            t28426 = t28424 * t28425
            t28429 = t28426 ** 2
            t28430 = t28424 * t28429
            t28437 = t28430 ** 2
            t28435 = t28429 ** 2
            t28427 = t28425 ** 2
            t28428 = t28424 * t28427
            t28433 = t28428 ** 2
            t28431 = t28427 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.741e3) * (-28413 * t28425 - 46585 * t28426 + 569723 * t28427 + 532455 * t28428 - 4331481 * t28429 - 2637525 * t28430 - 32494055 * t28433 + 36244665 * t28435 - 21040515 * t28437 + 231 + (16117365 + 4962480 * t28431) * t28431 + (6609625 * t28431 - 8761275 * t28433 + 5852925 * t28435 - 1550775 * t28437 + 1155) * t28424) * np.cos((phi1 - 5 * phi2))

        if Bindx == 2901:
            t28455 = np.sin(phi)
            t28453 = t28455 ** 2
            t28440 = np.cos(phi)
            t28441 = t28440 ** 2
            t28442 = t28440 * t28441
            t28445 = t28442 ** 2
            t28451 = t28445 ** 2
            t28443 = t28441 ** 2
            t28444 = t28440 * t28443
            t28449 = t28444 ** 2
            t28447 = t28443 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5187e4) * t28453 ** 2 * (1386 * t28441 - 28644 * t28442 - 26565 * t28443 + 318780 * t28444 + 177100 * t28445 - 512325 * t28447 + 660330 * t28449 - 310155 * t28451 - 11 + (-1467400 * t28445 + 3187800 * t28447 - 3241620 * t28449 + 1240620 * t28451 + 704) * t28440) * np.sin((phi1 - 4 * phi2)) * ((1 + t28440) ** (-0.1e1 / 0.2e1)) * ((1 - t28440) ** (-0.1e1 / 0.2e1))

        if Bindx == 2902:
            t28456 = np.cos(phi)
            t28457 = t28456 ** 2
            t28458 = t28456 * t28457
            t28461 = t28458 ** 2
            t28462 = t28456 * t28461
            t28469 = t28462 ** 2
            t28467 = t28461 ** 2
            t28459 = t28457 ** 2
            t28460 = t28456 * t28459
            t28465 = t28460 ** 2
            t28463 = t28459 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1995e4) * (-18733 * t28457 - 18447 * t28458 + 399971 * t28459 + 225225 * t28460 - 3236233 * t28461 - 1193907 * t28462 - 27413815 * t28465 + 32422065 * t28467 - 19919955 * t28469 + 143 + (12804077 + 4962480 * t28463) * t28463 + (3206775 * t28463 - 4561245 * t28465 + 3271635 * t28467 - 930465 * t28469 + 429) * t28456) * np.cos((phi1 - 3 * phi2))

        if Bindx == 2903:
            t28473 = np.cos(phi)
            t28474 = t28473 ** 2
            t28475 = t28473 * t28474
            t28478 = t28475 ** 2
            t28479 = t28473 * t28478
            t28486 = t28479 ** 2
            t28484 = t28478 ** 2
            t28476 = t28474 ** 2
            t28477 = t28473 * t28476
            t28482 = t28477 ** 2
            t28480 = t28476 ** 2
            t28472 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.15e2) * t28472 ** 2 * (-19019 * t28474 + 836836 * t28475 + 399399 * t28476 - 10384374 * t28477 - 3062059 * t28478 + 55991936 * t28479 + 10935925 * t28480 - 19684665 * t28482 + 17298645 * t28484 - 5892945 * t28486 + 143 + (-153102950 * t28480 + 221899860 * t28482 - 162341130 * t28484 + 47143560 * t28486 - 19162) * t28473) * np.sin((phi1 - 2 * phi2)) * ((1 + t28473) ** (-0.1e1 / 0.2e1)) * ((1 - t28473) ** (-0.1e1 / 0.2e1))

        if Bindx == 2904:
            t28488 = np.cos(phi)
            t28489 = t28488 ** 2
            t28490 = t28488 * t28489
            t28493 = t28490 ** 2
            t28494 = t28488 * t28493
            t28501 = t28494 ** 2
            t28499 = t28493 ** 2
            t28491 = t28489 ** 2
            t28492 = t28488 * t28491
            t28497 = t28492 ** 2
            t28495 = t28491 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-868725 * t28489 - 285285 * t28490 + 19114095 * t28491 + 3594591 * t28492 - 159360201 * t28493 - 19684665 * t28494 - 1432606175 * t28497 + 1744777125 * t28499 - 1103501475 * t28501 + 6435 + (649593945 + 282861360 * t28495) * t28495 + (54679625 * t28495 - 80528175 * t28497 + 59879925 * t28499 - 17678835 * t28501 + 6435) * t28488) * np.cos(phi1 - phi2)

        if Bindx == 2905:
            t28505 = np.cos(phi)
            t28506 = t28505 ** 2
            t28507 = t28506 ** 2
            t28508 = t28506 * t28507
            t28511 = t28508 ** 2
            t28509 = t28507 ** 2
            t28504 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t28505 * t28504 ** 2 * (-3594591 * t28507 + 19684665 * t28508 - 54679625 * t28509 - 59879925 * t28511 - 6435 + (80528175 * t28509 + 17678835 * t28511 + 285285) * t28506) * np.sin(phi1) * ((1 + t28505) ** (-0.1e1 / 0.2e1)) * ((1 - t28505) ** (-0.1e1 / 0.2e1))

        if Bindx == 2906:
            t28513 = np.cos(phi)
            t28514 = t28513 ** 2
            t28515 = t28513 * t28514
            t28518 = t28515 ** 2
            t28519 = t28513 * t28518
            t28526 = t28519 ** 2
            t28524 = t28518 ** 2
            t28516 = t28514 ** 2
            t28517 = t28513 * t28516
            t28522 = t28517 ** 2
            t28520 = t28516 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-868725 * t28514 + 285285 * t28515 + 19114095 * t28516 - 3594591 * t28517 - 159360201 * t28518 + 19684665 * t28519 - 1432606175 * t28522 + 1744777125 * t28524 - 1103501475 * t28526 + 6435 + (649593945 + 282861360 * t28520) * t28520 + (-54679625 * t28520 + 80528175 * t28522 - 59879925 * t28524 + 17678835 * t28526 - 6435) * t28513) * np.cos(phi1 + phi2)

        if Bindx == 2907:
            t28530 = np.cos(phi)
            t28531 = t28530 ** 2
            t28532 = t28530 * t28531
            t28535 = t28532 ** 2
            t28536 = t28530 * t28535
            t28543 = t28536 ** 2
            t28541 = t28535 ** 2
            t28533 = t28531 ** 2
            t28534 = t28530 * t28533
            t28539 = t28534 ** 2
            t28537 = t28533 ** 2
            t28529 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.15e2) * t28529 ** 2 * (19019 * t28531 + 836836 * t28532 - 399399 * t28533 - 10384374 * t28534 + 3062059 * t28535 + 55991936 * t28536 - 10935925 * t28537 + 19684665 * t28539 - 17298645 * t28541 + 5892945 * t28543 - 143 + (-153102950 * t28537 + 221899860 * t28539 - 162341130 * t28541 + 47143560 * t28543 - 19162) * t28530) * np.sin((phi1 + 2 * phi2)) * ((1 + t28530) ** (-0.1e1 / 0.2e1)) * ((1 - t28530) ** (-0.1e1 / 0.2e1))

        if Bindx == 2908:
            t28545 = np.cos(phi)
            t28546 = t28545 ** 2
            t28547 = t28545 * t28546
            t28550 = t28547 ** 2
            t28551 = t28545 * t28550
            t28558 = t28551 ** 2
            t28556 = t28550 ** 2
            t28548 = t28546 ** 2
            t28549 = t28545 * t28548
            t28554 = t28549 ** 2
            t28552 = t28548 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1995e4) * (-18733 * t28546 + 18447 * t28547 + 399971 * t28548 - 225225 * t28549 - 3236233 * t28550 + 1193907 * t28551 - 27413815 * t28554 + 32422065 * t28556 - 19919955 * t28558 + 143 + (12804077 + 4962480 * t28552) * t28552 + (-3206775 * t28552 + 4561245 * t28554 - 3271635 * t28556 + 930465 * t28558 - 429) * t28545) * np.cos((phi1 + 3 * phi2))

        if Bindx == 2909:
            t28576 = np.sin(phi)
            t28574 = t28576 ** 2
            t28561 = np.cos(phi)
            t28562 = t28561 ** 2
            t28563 = t28561 * t28562
            t28566 = t28563 ** 2
            t28572 = t28566 ** 2
            t28564 = t28562 ** 2
            t28565 = t28561 * t28564
            t28570 = t28565 ** 2
            t28568 = t28564 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5187e4) * t28574 ** 2 * (-1386 * t28562 - 28644 * t28563 + 26565 * t28564 + 318780 * t28565 - 177100 * t28566 + 512325 * t28568 - 660330 * t28570 + 310155 * t28572 + 11 + (-1467400 * t28566 + 3187800 * t28568 - 3241620 * t28570 + 1240620 * t28572 + 704) * t28561) * np.sin((phi1 + 4 * phi2)) * ((1 + t28561) ** (-0.1e1 / 0.2e1)) * ((1 - t28561) ** (-0.1e1 / 0.2e1))

        if Bindx == 2910:
            t28577 = np.cos(phi)
            t28578 = t28577 ** 2
            t28579 = t28577 * t28578
            t28582 = t28579 ** 2
            t28583 = t28577 * t28582
            t28590 = t28583 ** 2
            t28588 = t28582 ** 2
            t28580 = t28578 ** 2
            t28581 = t28577 * t28580
            t28586 = t28581 ** 2
            t28584 = t28580 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.741e3) * (-28413 * t28578 + 46585 * t28579 + 569723 * t28580 - 532455 * t28581 - 4331481 * t28582 + 2637525 * t28583 - 32494055 * t28586 + 36244665 * t28588 - 21040515 * t28590 + 231 + (16117365 + 4962480 * t28584) * t28584 + (-6609625 * t28584 + 8761275 * t28586 - 5852925 * t28588 + 1550775 * t28590 - 1155) * t28577) * np.cos((phi1 + 5 * phi2))

        if Bindx == 2911:
            t28607 = np.sin(phi)
            t28604 = t28607 ** 2
            t28605 = t28607 * t28604
            t28593 = np.cos(phi)
            t28594 = t28593 ** 2
            t28596 = t28594 ** 2
            t28597 = t28593 * t28596
            t28602 = t28597 ** 2
            t28600 = t28596 ** 2
            t28595 = t28593 * t28594
            t28598 = t28595 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.741e3) * t28605 ** 2 * (7245 * t28594 + 90160 * t28595 - 120750 * t28596 - 853300 * t28597 + 652050 * t28598 - 1350675 * t28600 + 930465 * t28602 - 63 + (3105000 * t28598 - 4702350 * t28600 + 2481240 * t28602 - 2478) * t28593) * np.sin((phi1 + 6 * phi2)) * ((1 + t28593) ** (-0.1e1 / 0.2e1)) * ((1 - t28593) ** (-0.1e1 / 0.2e1))

        if Bindx == 2912:
            t28608 = np.cos(phi)
            t28609 = t28608 ** 2
            t28610 = t28608 * t28609
            t28613 = t28610 ** 2
            t28614 = t28608 * t28613
            t28621 = t28614 ** 2
            t28619 = t28613 ** 2
            t28611 = t28609 ** 2
            t28612 = t28608 * t28611
            t28617 = t28612 ** 2
            t28615 = t28611 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-2331 * t28609 + 5341 * t28610 + 42217 * t28611 - 54831 * t28612 - 290535 * t28613 + 243537 * t28614 - 1805905 * t28617 + 1846755 * t28619 - 987885 * t28621 + 21 + (981903 + 215760 * t28615) * t28615 + (-547225 * t28615 + 651735 * t28617 - 392805 * t28619 + 94395 * t28621 - 147) * t28608) * np.cos((phi1 + 7 * phi2))

        if Bindx == 2913:
            t28636 = np.sin(phi)
            t28633 = t28636 ** 2
            t28634 = t28633 ** 2
            t28624 = np.cos(phi)
            t28625 = t28624 ** 2
            t28627 = t28625 ** 2
            t28631 = t28627 ** 2
            t28626 = t28624 * t28625
            t28629 = t28626 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.28405e5) * t28634 ** 2 * (-700 * t28625 - 5600 * t28626 + 9450 * t28627 - 36540 * t28629 + 40455 * t28631 + 7 + (41580 * t28627 - 104400 * t28629 + 80910 * t28631 + 182) * t28624) * np.sin((phi1 + 8 * phi2)) * ((1 + t28624) ** (-0.1e1 / 0.2e1)) * ((1 - t28624) ** (-0.1e1 / 0.2e1))

        if Bindx == 2914:
            t28637 = np.cos(phi)
            t28638 = t28637 ** 2
            t28639 = t28637 * t28638
            t28642 = t28639 ** 2
            t28643 = t28637 * t28642
            t28650 = t28643 ** 2
            t28648 = t28642 ** 2
            t28640 = t28638 ** 2
            t28641 = t28637 * t28640
            t28646 = t28641 ** 2
            t28644 = t28640 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (-3325 * t28638 + 9765 * t28639 + 51695 * t28640 - 85239 * t28641 - 307601 * t28642 + 322425 * t28643 - 1476215 * t28646 + 1348965 * t28648 - 651195 * t28650 + 35 + (908185 + 129456 * t28644) * t28644 + (-621585 * t28644 + 642735 * t28646 - 340605 * t28648 + 72819 * t28650 - 315) * t28637) * np.cos((phi1 + 9 * phi2))

        if Bindx == 2915:
            t28664 = np.sin(phi)
            t28660 = t28664 ** 2
            t28662 = t28664 * t28660 ** 2
            t28653 = np.cos(phi)
            t28654 = t28653 ** 2
            t28655 = t28653 * t28654
            t28658 = t28655 ** 2
            t28656 = t28654 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.15295e5) * t28662 ** 2 * (2025 * t28654 + 10260 * t28655 - 19575 * t28656 + 40455 * t28658 - 25 + (-51678 * t28656 + 64728 * t28658 - 430) * t28653) * np.sin((phi1 + 10 * phi2)) * ((1 + t28653) ** (-0.1e1 / 0.2e1)) * ((1 - t28653) ** (-0.1e1 / 0.2e1))

        if Bindx == 2916:
            t28665 = np.cos(phi)
            t28666 = t28665 ** 2
            t28667 = t28665 * t28666
            t28670 = t28667 ** 2
            t28671 = t28665 * t28670
            t28678 = t28671 ** 2
            t28676 = t28670 ** 2
            t28668 = t28666 ** 2
            t28669 = t28665 * t28668
            t28674 = t28669 ** 2
            t28672 = t28668 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.15295e5) * (-1125 * t28666 + 4015 * t28667 + 13955 * t28668 - 27489 * t28669 - 67809 * t28670 + 82995 * t28671 - 234655 * t28674 + 187665 * t28676 - 80475 * t28678 + 15 + (168045 + 14384 * t28672) * t28672 + (-131615 * t28672 + 115005 * t28674 - 52635 * t28676 + 9889 * t28678 - 165) * t28665) * np.cos((phi1 + 11 * phi2))

        if Bindx == 2917:
            t28690 = np.sin(phi)
            t28686 = t28690 ** 2
            t28687 = t28690 * t28686
            t28688 = t28687 ** 2
            t28681 = np.cos(phi)
            t28682 = t28681 ** 2
            t28684 = t28682 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.437e3) * t28688 ** 2 * (-522 * t28682 + 2697 * t28684 + 9 + (-1508 * t28682 + 3596 * t28684 + 96) * t28681) * np.sin((phi1 + 12 * phi2)) * ((1 + t28681) ** (-0.1e1 / 0.2e1)) * ((1 - t28681) ** (-0.1e1 / 0.2e1))

        if Bindx == 2918:
            t28691 = np.cos(phi)
            t28692 = t28691 ** 2
            t28693 = t28691 * t28692
            t28696 = t28693 ** 2
            t28697 = t28691 * t28696
            t28704 = t28697 ** 2
            t28702 = t28696 ** 2
            t28694 = t28692 ** 2
            t28695 = t28691 * t28694
            t28700 = t28695 ** 2
            t28698 = t28694 ** 2
            tfunc[..., c] = 0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.12673e5) * (-153 * t28692 + 637 * t28693 + 1351 * t28694 - 3003 * t28695 - 5061 * t28696 + 6825 * t28697 - 11963 * t28700 + 8253 * t28702 - 3111 * t28704 + 3 + (10185 + 496 * t28698) * t28698 + (-8645 * t28698 + 6279 * t28700 - 2457 * t28702 + 403 * t28704 - 39) * t28691) * np.cos((phi1 + 13 * phi2))

        if Bindx == 2919:
            t28715 = np.sin(phi)
            t28710 = t28715 ** 2
            t28711 = t28715 * t28710
            t28713 = t28715 * t28711 ** 2
            t28707 = np.cos(phi)
            t28708 = t28707 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.63365e5) * t28713 ** 2 * (217 * t28708 - 7 + (248 * t28708 - 38) * t28707) * np.sin((phi1 + 14 * phi2)) * ((1 + t28707) ** (-0.1e1 / 0.2e1)) * ((1 - t28707) ** (-0.1e1 / 0.2e1))

        if Bindx == 2920:
            t28716 = np.cos(phi)
            t28717 = t28716 ** 2
            t28718 = t28716 * t28717
            t28721 = t28718 ** 2
            t28722 = t28716 * t28721
            t28729 = t28722 ** 2
            t28727 = t28721 ** 2
            t28719 = t28717 ** 2
            t28720 = t28716 * t28719
            t28725 = t28720 ** 2
            t28723 = t28719 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1964315e7) * (-23 * t28717 + 105 * t28718 + 133 * t28719 - 315 * t28720 - 371 * t28721 + 525 * t28722 - 581 * t28725 + 343 * t28727 - 113 * t28729 + 1 + (595 + 16 * t28723) * t28723 + (-525 * t28723 + 315 * t28725 - 105 * t28727 + 15 * t28729 - 15) * t28716) * np.cos((phi1 + 15 * phi2))

        if Bindx == 2921:
            t28732 = np.cos(phi)
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.1964315e7) * ((1 - t28732) ** (0.15e2 / 0.2e1)) * ((1 + t28732) ** (0.17e2 / 0.2e1)) * np.sin((phi1 + 16 * phi2))

        if Bindx == 2922:
            t28733 = np.cos(phi)
            t28734 = t28733 ** 2
            t28735 = t28733 * t28734
            t28738 = t28735 ** 2
            t28748 = 14 * t28738 ** 2
            t28739 = t28733 * t28738
            t28745 = t28739 ** 2
            t28746 = t28733 * t28745
            t28736 = t28734 ** 2
            t28737 = t28733 * t28736
            t28741 = t28737 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1178589e7) * np.cos((2 * phi1 - 16 * phi2)) * (-14 * t28735 - 14 * t28736 + 42 * t28737 + 14 * t28738 - 70 * t28739 - 14 * t28741 - 6 * t28745 - 2 * t28746 + t28748 - 1 + (70 * t28739 + 6) * t28734 + (-42 * t28741 + t28746 + t28748 + 2) * t28733)

        if Bindx == 2923:
            t28757 = np.sin(phi)
            t28752 = t28757 ** 2
            t28753 = t28757 * t28752
            t28755 = t28757 * t28753 ** 2
            t28749 = np.cos(phi)
            t28750 = t28749 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1178589e7) * t28755 ** 2 * (-15 * t28750 + 1 + (8 * t28750 + 6) * t28749) * np.sin((2 * phi1 - 15 * phi2)) * ((1 + t28749) ** (-0.1e1 / 0.2e1)) * ((1 - t28749) ** (-0.1e1 / 0.2e1))

        if Bindx == 2924:
            t28758 = np.cos(phi)
            t28759 = t28758 ** 2
            t28760 = t28758 * t28759
            t28763 = t28760 ** 2
            t28764 = t28758 * t28763
            t28771 = t28764 ** 2
            t28769 = t28763 ** 2
            t28761 = t28759 ** 2
            t28762 = t28758 * t28761
            t28767 = t28762 ** 2
            t28765 = t28761 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.38019e5) * (72 * t28759 - 427 * t28760 - 266 * t28761 + 1827 * t28762 + 196 * t28763 - 3955 * t28764 - 1568 * t28767 + 1498 * t28769 - 684 * t28771 - 2 + (630 + 124 * t28765) * t28765 + (4865 * t28765 - 3465 * t28767 + 1337 * t28769 - 217 * t28771 + 35) * t28758) * np.cos((2 * phi1 - 14 * phi2))

        if Bindx == 2925:
            t28783 = np.sin(phi)
            t28779 = t28783 ** 2
            t28780 = t28783 * t28779
            t28781 = t28780 ** 2
            t28774 = np.cos(phi)
            t28775 = t28774 ** 2
            t28777 = t28775 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.190095e6) * t28781 ** 2 * (572 * t28775 - 2015 * t28777 - 13 + (250 * t28775 + 1240 * t28777 - 34) * t28774) * np.sin((2 * phi1 - 13 * phi2)) * ((1 + t28774) ** (-0.1e1 / 0.2e1)) * ((1 - t28774) ** (-0.1e1 / 0.2e1))

        if Bindx == 2926:
            t28784 = np.cos(phi)
            t28785 = t28784 ** 2
            t28786 = t28784 * t28785
            t28789 = t28786 ** 2
            t28790 = t28784 * t28789
            t28797 = t28790 ** 2
            t28795 = t28789 ** 2
            t28787 = t28785 ** 2
            t28788 = t28784 * t28787
            t28793 = t28788 ** 2
            t28791 = t28787 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6555e4) * (124 * t28785 - 7763 * t28786 + 280 * t28787 + 46585 * t28788 - 12180 * t28789 - 129815 * t28790 - 98028 * t28793 + 94136 * t28795 - 45820 * t28797 - 2 + (52500 + 8990 * t28791) * t28791 + (195335 * t28791 - 164521 * t28793 + 73283 * t28795 - 13485 * t28797 + 381) * t28784) * np.cos((2 * phi1 - 12 * phi2))

        if Bindx == 2927:
            t28811 = np.sin(phi)
            t28807 = t28811 ** 2
            t28809 = t28811 * t28807 ** 2
            t28800 = np.cos(phi)
            t28801 = t28800 ** 2
            t28802 = t28800 * t28801
            t28805 = t28802 ** 2
            t28803 = t28801 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.9177e4) * t28809 ** 2 * (-759 * t28801 + 356 * t28802 + 6061 * t28803 - 9889 * t28805 + 11 + (-2958 * t28803 + 7192 * t28805 - 14) * t28800) * np.sin((2 * phi1 - 11 * phi2)) * ((1 + t28800) ** (-0.1e1 / 0.2e1)) * ((1 - t28800) ** (-0.1e1 / 0.2e1))

        if Bindx == 2928:
            t28812 = np.cos(phi)
            t28813 = t28812 ** 2
            t28814 = t28812 * t28813
            t28817 = t28814 ** 2
            t28818 = t28812 * t28817
            t28825 = t28818 ** 2
            t28823 = t28817 ** 2
            t28815 = t28813 ** 2
            t28816 = t28812 * t28815
            t28821 = t28816 ** 2
            t28819 = t28815 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.9177e4) * (-168 * t28813 - 2615 * t28814 + 2602 * t28815 + 20559 * t28816 - 16772 * t28817 - 71471 * t28818 - 99136 * t28821 + 98694 * t28823 - 51156 * t28825 + 2 + (55146 + 10788 * t28819) * t28819 + (129269 * t28819 - 127341 * t28821 + 64989 * t28823 - 13485 * t28825 + 95) * t28812) * np.cos((2 * phi1 - 10 * phi2))

        if Bindx == 2929:
            t28840 = np.sin(phi)
            t28837 = t28840 ** 2
            t28838 = t28837 ** 2
            t28828 = np.cos(phi)
            t28829 = t28828 ** 2
            t28831 = t28829 ** 2
            t28835 = t28831 ** 2
            t28830 = t28828 * t28829
            t28833 = t28830 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.17043e5) * t28838 ** 2 * (630 * t28829 - 1190 * t28830 - 7560 * t28831 + 25578 * t28833 - 24273 * t28835 - 7 + (8694 * t28831 - 23490 * t28833 + 21576 * t28835 + 42) * t28828) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t28828) ** (-0.1e1 / 0.2e1)) * ((1 - t28828) ** (-0.1e1 / 0.2e1))

        if Bindx == 2930:
            t28841 = np.cos(phi)
            t28842 = t28841 ** 2
            t28843 = t28841 * t28842
            t28846 = t28843 ** 2
            t28847 = t28841 * t28846
            t28854 = t28847 ** 2
            t28852 = t28846 ** 2
            t28844 = t28842 ** 2
            t28845 = t28841 * t28844
            t28850 = t28845 ** 2
            t28848 = t28844 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17043e5) * (-714 * t28842 - 5383 * t28843 + 12250 * t28844 + 51093 * t28845 - 82306 * t28846 - 211331 * t28847 - 520510 * t28850 + 545670 * t28852 - 300150 * t28854 + 7 + (278328 + 67425 * t28848) * t28848 + (446275 * t28848 - 504405 * t28850 + 291015 * t28852 - 67425 * t28854 + 161) * t28841) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 2931:
            t28871 = np.sin(phi)
            t28868 = t28871 ** 2
            t28869 = t28871 * t28868
            t28857 = np.cos(phi)
            t28858 = t28857 ** 2
            t28860 = t28858 ** 2
            t28861 = t28857 * t28860
            t28866 = t28861 ** 2
            t28864 = t28860 ** 2
            t28859 = t28857 * t28858
            t28862 = t28859 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.5681e4) * t28869 ** 2 * (-5243 * t28858 + 20496 * t28859 + 80850 * t28860 - 184380 * t28861 - 401310 * t28862 + 758205 * t28864 - 471975 * t28866 + 49 + (651960 * t28862 - 987450 * t28864 + 539400 * t28866 - 602) * t28857) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t28857) ** (-0.1e1 / 0.2e1)) * ((1 - t28857) ** (-0.1e1 / 0.2e1))

        if Bindx == 2932:
            t28872 = np.cos(phi)
            t28873 = t28872 ** 2
            t28874 = t28872 * t28873
            t28877 = t28874 ** 2
            t28878 = t28872 * t28877
            t28885 = t28878 ** 2
            t28883 = t28877 ** 2
            t28875 = t28873 ** 2
            t28876 = t28872 * t28875
            t28881 = t28876 ** 2
            t28879 = t28875 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1235e4) * (-8120 * t28873 - 37555 * t28874 + 155134 * t28875 + 405419 * t28876 - 1136268 * t28877 - 1900651 * t28878 - 8169600 * t28881 + 9042450 * t28883 - 5242620 * t28885 + 70 + (4118334 + 1240620 * t28879) * t28879 + (4521225 * t28879 - 5710785 * t28881 + 3651825 * t28883 - 930465 * t28885 + 987) * t28872) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 2933:
            t28903 = np.sin(phi)
            t28901 = t28903 ** 2
            t28888 = np.cos(phi)
            t28889 = t28888 ** 2
            t28890 = t28888 * t28889
            t28893 = t28890 ** 2
            t28899 = t28893 ** 2
            t28891 = t28889 ** 2
            t28892 = t28888 * t28891
            t28897 = t28892 ** 2
            t28895 = t28891 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * t28901 ** 2 * (9240 * t28889 - 65758 * t28890 - 168245 * t28891 + 701316 * t28892 + 1062600 * t28893 - 2903175 * t28895 + 3521760 * t28897 - 1550775 * t28899 - 77 + (-3111900 * t28893 + 6565350 * t28895 - 6543270 * t28897 + 2481240 * t28899 + 1694) * t28888) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t28888) ** (-0.1e1 / 0.2e1)) * ((1 - t28888) ** (-0.1e1 / 0.2e1))

        if Bindx == 2934:
            t28904 = np.cos(phi)
            t28905 = t28904 ** 2
            t28906 = t28904 * t28905
            t28909 = t28906 ** 2
            t28910 = t28904 * t28909
            t28917 = t28910 ** 2
            t28915 = t28909 ** 2
            t28907 = t28905 ** 2
            t28908 = t28904 * t28907
            t28913 = t28908 ** 2
            t28911 = t28907 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.8645e4) * (-2772 * t28905 - 7733 * t28906 + 57112 * t28907 + 90783 * t28908 - 447524 * t28909 - 462737 * t28910 - 3597660 * t28913 + 4170360 * t28915 - 2521260 * t28917 + 22 + (1721412 + 620310 * t28911) * t28911 + (1195425 * t28911 - 1636335 * t28913 + 1130565 * t28915 - 310155 * t28917 + 187) * t28904) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 2935:
            t28921 = np.cos(phi)
            t28922 = t28921 ** 2
            t28923 = t28921 * t28922
            t28926 = t28923 ** 2
            t28927 = t28921 * t28926
            t28934 = t28927 ** 2
            t28932 = t28926 ** 2
            t28924 = t28922 ** 2
            t28925 = t28921 * t28924
            t28930 = t28925 ** 2
            t28928 = t28924 ** 2
            t28920 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.133e3) * t28920 ** 2 * (-18447 * t28922 + 254540 * t28923 + 375375 * t28924 - 3069066 * t28925 - 2785783 * t28926 + 16102944 * t28927 + 9620325 * t28928 - 16724565 * t28930 + 14177085 * t28932 - 4652325 * t28934 + 143 + (-42921450 * t28928 + 60762780 * t28930 - 43521750 * t28932 + 12406200 * t28934 - 6006) * t28921) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t28921) ** (-0.1e1 / 0.2e1)) * ((1 - t28921) ** (-0.1e1 / 0.2e1))

        if Bindx == 2936:
            t28936 = np.cos(phi)
            t28937 = t28936 ** 2
            t28938 = t28936 * t28937
            t28941 = t28938 ** 2
            t28942 = t28936 * t28941
            t28949 = t28942 ** 2
            t28947 = t28941 ** 2
            t28939 = t28937 ** 2
            t28940 = t28936 * t28939
            t28945 = t28940 ** 2
            t28943 = t28939 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (-415272 * t28937 - 551551 * t28938 + 8938930 * t28939 + 6789783 * t28940 - 72956884 * t28941 - 36307271 * t28942 - 629909280 * t28945 + 752789310 * t28947 - 467633700 * t28949 + 3146 + (291333042 + 117858900 * t28943) * t28943 + (98423325 * t28943 - 141371685 * t28945 + 102461205 * t28947 - 29464725 * t28949 + 12727) * t28936) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 2937:
            t28953 = np.cos(phi)
            t28954 = t28953 ** 2
            t28955 = t28953 * t28954
            t28958 = t28955 ** 2
            t28959 = t28953 * t28958
            t28966 = t28959 ** 2
            t28964 = t28958 ** 2
            t28956 = t28954 ** 2
            t28957 = t28953 * t28956
            t28962 = t28957 ** 2
            t28960 = t28956 ** 2
            t28952 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.15e2) * t28952 ** 2 * (-19019 * t28954 + 836836 * t28955 + 399399 * t28956 - 10384374 * t28957 - 3062059 * t28958 + 55991936 * t28959 + 10935925 * t28960 - 19684665 * t28962 + 17298645 * t28964 - 5892945 * t28966 + 143 + (-153102950 * t28960 + 221899860 * t28962 - 162341130 * t28964 + 47143560 * t28966 - 19162) * t28953) * np.sin((2 * phi1 - phi2)) * ((1 + t28953) ** (-0.1e1 / 0.2e1)) * ((1 - t28953) ** (-0.1e1 / 0.2e1))

        if Bindx == 2938:
            t28968 = np.cos(phi)
            t28969 = t28968 ** 2
            t28970 = t28969 ** 2
            t28971 = t28969 * t28970
            t28974 = t28971 ** 2
            t28972 = t28970 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t28970 - 3461458 * t28971 + 36983310 * t28974 + 143 + (13997984 + 5892945 * t28972) * t28972 + (-30620590 * t28972 - 23191590 * t28974 - 19162) * t28969) * np.cos((2 * phi1))

        if Bindx == 2939:
            t28978 = np.cos(phi)
            t28979 = t28978 ** 2
            t28980 = t28978 * t28979
            t28983 = t28980 ** 2
            t28984 = t28978 * t28983
            t28991 = t28984 ** 2
            t28989 = t28983 ** 2
            t28981 = t28979 ** 2
            t28982 = t28978 * t28981
            t28987 = t28982 ** 2
            t28985 = t28981 ** 2
            t28977 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.15e2) * t28977 ** 2 * (19019 * t28979 + 836836 * t28980 - 399399 * t28981 - 10384374 * t28982 + 3062059 * t28983 + 55991936 * t28984 - 10935925 * t28985 + 19684665 * t28987 - 17298645 * t28989 + 5892945 * t28991 - 143 + (-153102950 * t28985 + 221899860 * t28987 - 162341130 * t28989 + 47143560 * t28991 - 19162) * t28978) * np.sin((2 * phi1 + phi2)) * ((1 + t28978) ** (-0.1e1 / 0.2e1)) * ((1 - t28978) ** (-0.1e1 / 0.2e1))

        if Bindx == 2940:
            t28993 = np.cos(phi)
            t28994 = t28993 ** 2
            t28995 = t28993 * t28994
            t28998 = t28995 ** 2
            t28999 = t28993 * t28998
            t29006 = t28999 ** 2
            t29004 = t28998 ** 2
            t28996 = t28994 ** 2
            t28997 = t28993 * t28996
            t29002 = t28997 ** 2
            t29000 = t28996 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (-415272 * t28994 + 551551 * t28995 + 8938930 * t28996 - 6789783 * t28997 - 72956884 * t28998 + 36307271 * t28999 - 629909280 * t29002 + 752789310 * t29004 - 467633700 * t29006 + 3146 + (291333042 + 117858900 * t29000) * t29000 + (-98423325 * t29000 + 141371685 * t29002 - 102461205 * t29004 + 29464725 * t29006 - 12727) * t28993) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 2941:
            t29010 = np.cos(phi)
            t29011 = t29010 ** 2
            t29012 = t29010 * t29011
            t29015 = t29012 ** 2
            t29016 = t29010 * t29015
            t29023 = t29016 ** 2
            t29021 = t29015 ** 2
            t29013 = t29011 ** 2
            t29014 = t29010 * t29013
            t29019 = t29014 ** 2
            t29017 = t29013 ** 2
            t29009 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.133e3) * t29009 ** 2 * (18447 * t29011 + 254540 * t29012 - 375375 * t29013 - 3069066 * t29014 + 2785783 * t29015 + 16102944 * t29016 - 9620325 * t29017 + 16724565 * t29019 - 14177085 * t29021 + 4652325 * t29023 - 143 + (-42921450 * t29017 + 60762780 * t29019 - 43521750 * t29021 + 12406200 * t29023 - 6006) * t29010) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t29010) ** (-0.1e1 / 0.2e1)) * ((1 - t29010) ** (-0.1e1 / 0.2e1))

        if Bindx == 2942:
            t29025 = np.cos(phi)
            t29026 = t29025 ** 2
            t29027 = t29025 * t29026
            t29030 = t29027 ** 2
            t29031 = t29025 * t29030
            t29038 = t29031 ** 2
            t29036 = t29030 ** 2
            t29028 = t29026 ** 2
            t29029 = t29025 * t29028
            t29034 = t29029 ** 2
            t29032 = t29028 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.8645e4) * (-2772 * t29026 + 7733 * t29027 + 57112 * t29028 - 90783 * t29029 - 447524 * t29030 + 462737 * t29031 - 3597660 * t29034 + 4170360 * t29036 - 2521260 * t29038 + 22 + (1721412 + 620310 * t29032) * t29032 + (-1195425 * t29032 + 1636335 * t29034 - 1130565 * t29036 + 310155 * t29038 - 187) * t29025) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 2943:
            t29056 = np.sin(phi)
            t29054 = t29056 ** 2
            t29041 = np.cos(phi)
            t29042 = t29041 ** 2
            t29043 = t29041 * t29042
            t29046 = t29043 ** 2
            t29052 = t29046 ** 2
            t29044 = t29042 ** 2
            t29045 = t29041 * t29044
            t29050 = t29045 ** 2
            t29048 = t29044 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * t29054 ** 2 * (-9240 * t29042 - 65758 * t29043 + 168245 * t29044 + 701316 * t29045 - 1062600 * t29046 + 2903175 * t29048 - 3521760 * t29050 + 1550775 * t29052 + 77 + (-3111900 * t29046 + 6565350 * t29048 - 6543270 * t29050 + 2481240 * t29052 + 1694) * t29041) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t29041) ** (-0.1e1 / 0.2e1)) * ((1 - t29041) ** (-0.1e1 / 0.2e1))

        if Bindx == 2944:
            t29057 = np.cos(phi)
            t29058 = t29057 ** 2
            t29059 = t29057 * t29058
            t29062 = t29059 ** 2
            t29063 = t29057 * t29062
            t29070 = t29063 ** 2
            t29068 = t29062 ** 2
            t29060 = t29058 ** 2
            t29061 = t29057 * t29060
            t29066 = t29061 ** 2
            t29064 = t29060 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1235e4) * (-8120 * t29058 + 37555 * t29059 + 155134 * t29060 - 405419 * t29061 - 1136268 * t29062 + 1900651 * t29063 - 8169600 * t29066 + 9042450 * t29068 - 5242620 * t29070 + 70 + (4118334 + 1240620 * t29064) * t29064 + (-4521225 * t29064 + 5710785 * t29066 - 3651825 * t29068 + 930465 * t29070 - 987) * t29057) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 2945:
            t29087 = np.sin(phi)
            t29084 = t29087 ** 2
            t29085 = t29087 * t29084
            t29073 = np.cos(phi)
            t29074 = t29073 ** 2
            t29076 = t29074 ** 2
            t29077 = t29073 * t29076
            t29082 = t29077 ** 2
            t29080 = t29076 ** 2
            t29075 = t29073 * t29074
            t29078 = t29075 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.5681e4) * t29085 ** 2 * (5243 * t29074 + 20496 * t29075 - 80850 * t29076 - 184380 * t29077 + 401310 * t29078 - 758205 * t29080 + 471975 * t29082 - 49 + (651960 * t29078 - 987450 * t29080 + 539400 * t29082 - 602) * t29073) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t29073) ** (-0.1e1 / 0.2e1)) * ((1 - t29073) ** (-0.1e1 / 0.2e1))

        if Bindx == 2946:
            t29088 = np.cos(phi)
            t29089 = t29088 ** 2
            t29090 = t29088 * t29089
            t29093 = t29090 ** 2
            t29094 = t29088 * t29093
            t29101 = t29094 ** 2
            t29099 = t29093 ** 2
            t29091 = t29089 ** 2
            t29092 = t29088 * t29091
            t29097 = t29092 ** 2
            t29095 = t29091 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17043e5) * (-714 * t29089 + 5383 * t29090 + 12250 * t29091 - 51093 * t29092 - 82306 * t29093 + 211331 * t29094 - 520510 * t29097 + 545670 * t29099 - 300150 * t29101 + 7 + (278328 + 67425 * t29095) * t29095 + (-446275 * t29095 + 504405 * t29097 - 291015 * t29099 + 67425 * t29101 - 161) * t29088) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 2947:
            t29116 = np.sin(phi)
            t29113 = t29116 ** 2
            t29114 = t29113 ** 2
            t29104 = np.cos(phi)
            t29105 = t29104 ** 2
            t29107 = t29105 ** 2
            t29111 = t29107 ** 2
            t29106 = t29104 * t29105
            t29109 = t29106 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.17043e5) * t29114 ** 2 * (-630 * t29105 - 1190 * t29106 + 7560 * t29107 - 25578 * t29109 + 24273 * t29111 + 7 + (8694 * t29107 - 23490 * t29109 + 21576 * t29111 + 42) * t29104) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t29104) ** (-0.1e1 / 0.2e1)) * ((1 - t29104) ** (-0.1e1 / 0.2e1))

        if Bindx == 2948:
            t29117 = np.cos(phi)
            t29118 = t29117 ** 2
            t29119 = t29117 * t29118
            t29122 = t29119 ** 2
            t29123 = t29117 * t29122
            t29130 = t29123 ** 2
            t29128 = t29122 ** 2
            t29120 = t29118 ** 2
            t29121 = t29117 * t29120
            t29126 = t29121 ** 2
            t29124 = t29120 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.9177e4) * (-168 * t29118 + 2615 * t29119 + 2602 * t29120 - 20559 * t29121 - 16772 * t29122 + 71471 * t29123 - 99136 * t29126 + 98694 * t29128 - 51156 * t29130 + 2 + (55146 + 10788 * t29124) * t29124 + (-129269 * t29124 + 127341 * t29126 - 64989 * t29128 + 13485 * t29130 - 95) * t29117) * np.cos((2 * phi1 + 10 * phi2))

        if Bindx == 2949:
            t29144 = np.sin(phi)
            t29140 = t29144 ** 2
            t29142 = t29144 * t29140 ** 2
            t29133 = np.cos(phi)
            t29134 = t29133 ** 2
            t29135 = t29133 * t29134
            t29138 = t29135 ** 2
            t29136 = t29134 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.9177e4) * t29142 ** 2 * (759 * t29134 + 356 * t29135 - 6061 * t29136 + 9889 * t29138 - 11 + (-2958 * t29136 + 7192 * t29138 - 14) * t29133) * np.sin((2 * phi1 + 11 * phi2)) * ((1 + t29133) ** (-0.1e1 / 0.2e1)) * ((1 - t29133) ** (-0.1e1 / 0.2e1))

        if Bindx == 2950:
            t29145 = np.cos(phi)
            t29146 = t29145 ** 2
            t29147 = t29145 * t29146
            t29150 = t29147 ** 2
            t29151 = t29145 * t29150
            t29158 = t29151 ** 2
            t29156 = t29150 ** 2
            t29148 = t29146 ** 2
            t29149 = t29145 * t29148
            t29154 = t29149 ** 2
            t29152 = t29148 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6555e4) * (124 * t29146 + 7763 * t29147 + 280 * t29148 - 46585 * t29149 - 12180 * t29150 + 129815 * t29151 - 98028 * t29154 + 94136 * t29156 - 45820 * t29158 - 2 + (52500 + 8990 * t29152) * t29152 + (-195335 * t29152 + 164521 * t29154 - 73283 * t29156 + 13485 * t29158 - 381) * t29145) * np.cos((2 * phi1 + 12 * phi2))

        if Bindx == 2951:
            t29170 = np.sin(phi)
            t29166 = t29170 ** 2
            t29167 = t29170 * t29166
            t29168 = t29167 ** 2
            t29161 = np.cos(phi)
            t29162 = t29161 ** 2
            t29164 = t29162 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.190095e6) * t29168 ** 2 * (-572 * t29162 + 2015 * t29164 + 13 + (250 * t29162 + 1240 * t29164 - 34) * t29161) * np.sin((2 * phi1 + 13 * phi2)) * ((1 + t29161) ** (-0.1e1 / 0.2e1)) * ((1 - t29161) ** (-0.1e1 / 0.2e1))

        if Bindx == 2952:
            t29171 = np.cos(phi)
            t29172 = t29171 ** 2
            t29173 = t29171 * t29172
            t29176 = t29173 ** 2
            t29177 = t29171 * t29176
            t29184 = t29177 ** 2
            t29182 = t29176 ** 2
            t29174 = t29172 ** 2
            t29175 = t29171 * t29174
            t29180 = t29175 ** 2
            t29178 = t29174 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.38019e5) * (72 * t29172 + 427 * t29173 - 266 * t29174 - 1827 * t29175 + 196 * t29176 + 3955 * t29177 - 1568 * t29180 + 1498 * t29182 - 684 * t29184 - 2 + (630 + 124 * t29178) * t29178 + (-4865 * t29178 + 3465 * t29180 - 1337 * t29182 + 217 * t29184 - 35) * t29171) * np.cos((2 * phi1 + 14 * phi2))

        if Bindx == 2953:
            t29195 = np.sin(phi)
            t29190 = t29195 ** 2
            t29191 = t29195 * t29190
            t29193 = t29195 * t29191 ** 2
            t29187 = np.cos(phi)
            t29188 = t29187 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.1178589e7) * t29193 ** 2 * (15 * t29188 - 1 + (8 * t29188 + 6) * t29187) * np.sin((2 * phi1 + 15 * phi2)) * ((1 + t29187) ** (-0.1e1 / 0.2e1)) * ((1 - t29187) ** (-0.1e1 / 0.2e1))

        if Bindx == 2954:
            t29196 = np.cos(phi)
            t29197 = t29196 ** 2
            t29198 = t29196 * t29197
            t29201 = t29198 ** 2
            t29202 = t29196 * t29201
            t29208 = t29202 ** 2
            t29209 = t29196 * t29208
            t29206 = t29201 ** 2
            t29199 = t29197 ** 2
            t29200 = t29196 * t29199
            t29204 = t29200 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1178589e7) * np.cos((2 * phi1 + 16 * phi2)) * (14 * t29198 - 14 * t29199 - 42 * t29200 + 14 * t29201 + 70 * t29202 - 14 * t29204 + 14 * t29206 - 6 * t29208 + 2 * t29209 - 1 + (-70 * t29202 + 6) * t29197 + (42 * t29204 - 14 * t29206 + t29209 - 2) * t29196)

        if Bindx == 2955:
            t29211 = np.cos(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.434217e6) * ((1 - t29211) ** (0.19e2 / 0.2e1)) * ((1 + t29211) ** (0.13e2 / 0.2e1)) * np.sin((3 * phi1 - 16 * phi2))

        if Bindx == 2956:
            t29212 = np.cos(phi)
            t29213 = t29212 ** 2
            t29214 = t29212 * t29213
            t29217 = t29214 ** 2
            t29218 = t29212 * t29217
            t29225 = t29218 ** 2
            t29223 = t29217 ** 2
            t29215 = t29213 ** 2
            t29216 = t29212 * t29215
            t29221 = t29216 ** 2
            t29219 = t29215 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.434217e6) * (57 * t29213 - 3 * t29214 - 263 * t29215 + 165 * t29216 + 549 * t29217 - 535 * t29218 + 283 * t29221 + 3 * t29223 - 57 * t29225 - 3 + (-585 + 16 * t29219) * t29219 + (795 * t29219 - 633 * t29221 + 263 * t29223 - 45 * t29225 - 7) * t29212) * np.cos((3 * phi1 - 15 * phi2))

        if Bindx == 2957:
            t29237 = np.sin(phi)
            t29233 = t29237 ** 2
            t29234 = t29237 * t29233
            t29235 = t29234 ** 2
            t29228 = np.cos(phi)
            t29229 = t29228 ** 2
            t29231 = t29229 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.14007e5) * t29235 ** 2 * (28 * t29229 - 651 * t29231 - 1 + (466 * t29229 + 248 * t29231 - 90) * t29228) * np.sin((3 * phi1 - 14 * phi2)) * ((1 + t29228) ** (-0.1e1 / 0.2e1)) * ((1 - t29228) ** (-0.1e1 / 0.2e1))

        if Bindx == 2958:
            t29238 = np.cos(phi)
            t29239 = t29238 ** 2
            t29240 = t29238 * t29239
            t29243 = t29240 ** 2
            t29244 = t29238 * t29243
            t29251 = t29244 ** 2
            t29249 = t29243 ** 2
            t29241 = t29239 ** 2
            t29242 = t29238 * t29241
            t29247 = t29242 ** 2
            t29245 = t29241 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.70035e5) * (1363 * t29239 - 2171 * t29240 - 9665 * t29241 + 15145 * t29242 + 26415 * t29243 - 47255 * t29244 + 14169 * t29247 + 7157 * t29249 - 9115 * t29251 - 29 + (-32775 + 2480 * t29245) * t29245 + (76895 * t29245 - 68497 * t29247 + 31811 * t29249 - 6045 * t29251 + 117) * t29238) * np.cos((3 * phi1 - 13 * phi2))

        if Bindx == 2959:
            t29265 = np.sin(phi)
            t29261 = t29265 ** 2
            t29263 = t29265 * t29261 ** 2
            t29254 = np.cos(phi)
            t29255 = t29254 ** 2
            t29256 = t29254 * t29255
            t29259 = t29256 ** 2
            t29257 = t29255 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t29263 ** 2 * (-2805 * t29255 - 9708 * t29256 + 20329 * t29257 - 40455 * t29259 + 51 + (13920 * t29257 + 17980 * t29259 + 688) * t29254) * np.sin((3 * phi1 - 12 * phi2)) * ((1 + t29254) ** (-0.1e1 / 0.2e1)) * ((1 - t29254) ** (-0.1e1 / 0.2e1))

        if Bindx == 2960:
            t29266 = np.cos(phi)
            t29267 = t29266 ** 2
            t29268 = t29266 * t29267
            t29271 = t29268 ** 2
            t29272 = t29266 * t29271
            t29279 = t29272 ** 2
            t29277 = t29271 ** 2
            t29269 = t29267 ** 2
            t29270 = t29266 * t29269
            t29275 = t29270 ** 2
            t29273 = t29269 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (7597 * t29267 - 41987 * t29268 - 77639 * t29269 + 309001 * t29270 + 259665 * t29271 - 1058783 * t29272 - 64665 * t29275 + 464051 * t29277 - 379813 * t29279 - 107 + (-309777 + 100688 * t29273) * t29273 + (1923647 * t29273 - 1915177 * t29275 + 989219 * t29277 - 207669 * t29279 + 1749) * t29266) * np.cos((3 * phi1 - 11 * phi2))

        if Bindx == 2961:
            t29294 = np.sin(phi)
            t29291 = t29294 ** 2
            t29292 = t29291 ** 2
            t29282 = np.cos(phi)
            t29283 = t29282 ** 2
            t29285 = t29283 ** 2
            t29289 = t29285 ** 2
            t29284 = t29282 * t29283
            t29287 = t29284 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.69e2) * t29292 ** 2 * (8970 * t29283 + 13270 * t29284 - 94860 * t29285 + 295974 * t29287 - 283185 * t29289 - 115 + (-42966 * t29285 - 47502 * t29287 + 151032 * t29289 - 618) * t29282) * np.sin((3 * phi1 - 10 * phi2)) * ((1 + t29282) ** (-0.1e1 / 0.2e1)) * ((1 - t29282) ** (-0.1e1 / 0.2e1))

        if Bindx == 2962:
            t29295 = np.cos(phi)
            t29296 = t29295 ** 2
            t29297 = t29295 * t29296
            t29300 = t29297 ** 2
            t29301 = t29295 * t29300
            t29308 = t29301 ** 2
            t29306 = t29300 ** 2
            t29298 = t29296 ** 2
            t29299 = t29295 * t29298
            t29304 = t29299 ** 2
            t29302 = t29298 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (273 * t29296 - 7197 * t29297 - 2951 * t29298 + 62979 * t29299 + 4221 * t29300 - 246281 * t29301 - 160477 * t29304 + 242883 * t29306 - 166257 * t29308 - 3 + (39159 + 43152 * t29302) * t29302 + (502173 * t29302 - 555687 * t29304 + 316593 * t29306 - 72819 * t29308 + 239) * t29295) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 2963:
            t29325 = np.sin(phi)
            t29322 = t29325 ** 2
            t29323 = t29325 * t29322
            t29311 = np.cos(phi)
            t29312 = t29311 ** 2
            t29314 = t29312 ** 2
            t29315 = t29311 * t29314
            t29320 = t29315 ** 2
            t29318 = t29314 ** 2
            t29313 = t29311 * t29312
            t29316 = t29313 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.6279e4) * t29323 ** 2 * (-3007 * t29312 + 794 * t29313 + 42150 * t29314 - 13220 * t29315 - 191790 * t29316 + 337995 * t29318 - 202275 * t29320 + 31 + (81540 * t29316 - 187050 * t29318 + 134850 * t29320 - 18) * t29311) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t29311) ** (-0.1e1 / 0.2e1)) * ((1 - t29311) ** (-0.1e1 / 0.2e1))

        if Bindx == 2964:
            t29326 = np.cos(phi)
            t29327 = t29326 ** 2
            t29328 = t29326 * t29327
            t29331 = t29328 ** 2
            t29332 = t29326 * t29331
            t29339 = t29332 ** 2
            t29337 = t29331 ** 2
            t29329 = t29327 ** 2
            t29330 = t29326 * t29329
            t29335 = t29330 ** 2
            t29333 = t29329 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2093e4) * (-3959 * t29327 - 74683 * t29328 + 76225 * t29329 + 752213 * t29330 - 602091 * t29331 - 3323311 * t29332 - 5415285 * t29335 + 6658395 * t29337 - 4226025 * t29339 + 37 + (2433903 + 1078800 * t29333) * t29333 + (7531275 * t29333 - 9156705 * t29335 + 5685015 * t29337 - 1415925 * t29339 + 2121) * t29326) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 2965:
            t29357 = np.sin(phi)
            t29355 = t29357 ** 2
            t29342 = np.cos(phi)
            t29343 = t29342 ** 2
            t29344 = t29342 * t29343
            t29347 = t29344 ** 2
            t29353 = t29347 ** 2
            t29345 = t29343 ** 2
            t29346 = t29342 * t29345
            t29351 = t29346 ** 2
            t29349 = t29345 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.455e3) * t29355 ** 2 * (22512 * t29343 - 53550 * t29344 - 382697 * t29345 + 562212 * t29346 + 2260440 * t29347 - 5797035 * t29349 + 6643320 * t29351 - 2791395 * t29353 - 201 + (-2548860 * t29347 + 5665590 * t29349 - 6063030 * t29351 + 2481240 * t29353 + 1454) * t29342) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t29342) ** (-0.1e1 / 0.2e1)) * ((1 - t29342) ** (-0.1e1 / 0.2e1))

        if Bindx == 2966:
            t29358 = np.cos(phi)
            t29359 = t29358 ** 2
            t29360 = t29358 * t29359
            t29363 = t29360 ** 2
            t29364 = t29358 * t29363
            t29371 = t29364 ** 2
            t29369 = t29363 ** 2
            t29361 = t29359 ** 2
            t29362 = t29358 * t29361
            t29367 = t29362 ** 2
            t29365 = t29361 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (-22253 * t29359 - 150931 * t29360 + 440407 * t29361 + 1678985 * t29362 - 3372369 * t29363 - 8135215 * t29364 - 27069735 * t29367 + 31863165 * t29369 - 19679835 * t29371 + 187 + (12877953 + 4962480 * t29365) * t29365 + (20056575 * t29365 - 26319705 * t29367 + 17518755 * t29369 - 4652325 * t29371 + 3861) * t29358) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 2967:
            t29375 = np.cos(phi)
            t29376 = t29375 ** 2
            t29377 = t29375 * t29376
            t29380 = t29377 ** 2
            t29381 = t29375 * t29380
            t29388 = t29381 ** 2
            t29386 = t29380 ** 2
            t29378 = t29376 ** 2
            t29379 = t29375 * t29378
            t29384 = t29379 ** 2
            t29382 = t29378 ** 2
            t29374 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t29374 ** 2 * (-33825 * t29376 + 192764 * t29377 + 656271 * t29378 - 2243472 * t29379 - 4645333 * t29380 + 11466972 * t29381 + 15312825 * t29382 - 25445475 * t29384 + 20660325 * t29386 - 6513255 * t29388 + 275 + (-30056400 * t29382 + 42223860 * t29384 - 30255120 * t29386 + 8684340 * t29388 - 4752) * t29375) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t29375) ** (-0.1e1 / 0.2e1)) * ((1 - t29375) ** (-0.1e1 / 0.2e1))

        if Bindx == 2968:
            t29390 = np.cos(phi)
            t29391 = t29390 ** 2
            t29392 = t29390 * t29391
            t29395 = t29392 ** 2
            t29396 = t29390 * t29395
            t29403 = t29396 ** 2
            t29401 = t29395 ** 2
            t29393 = t29391 ** 2
            t29394 = t29390 * t29393
            t29399 = t29394 ** 2
            t29397 = t29393 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-708279 * t29391 - 2283567 * t29392 + 14728285 * t29393 + 27048021 * t29394 - 116639523 * t29395 - 139200347 * t29396 - 961588485 * t29399 + 1130879295 * t29401 - 694397025 * t29403 + 5577 + (454049739 + 173686800 * t29397) * t29397 + (363352275 * t29397 - 502934445 * t29399 + 351645735 * t29401 - 97698825 * t29403 + 54769) * t29390) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 2969:
            t29407 = np.cos(phi)
            t29408 = t29407 ** 2
            t29409 = t29407 * t29408
            t29412 = t29409 ** 2
            t29413 = t29407 * t29412
            t29420 = t29413 ** 2
            t29418 = t29412 ** 2
            t29410 = t29408 ** 2
            t29411 = t29407 * t29410
            t29416 = t29411 ** 2
            t29414 = t29410 ** 2
            t29406 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.133e3) * t29406 ** 2 * (-18447 * t29408 + 254540 * t29409 + 375375 * t29410 - 3069066 * t29411 - 2785783 * t29412 + 16102944 * t29413 + 9620325 * t29414 - 16724565 * t29416 + 14177085 * t29418 - 4652325 * t29420 + 143 + (-42921450 * t29414 + 60762780 * t29416 - 43521750 * t29418 + 12406200 * t29420 - 6006) * t29407) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t29407) ** (-0.1e1 / 0.2e1)) * ((1 - t29407) ** (-0.1e1 / 0.2e1))

        if Bindx == 2970:
            t29422 = np.cos(phi)
            t29423 = t29422 ** 2
            t29424 = t29422 * t29423
            t29427 = t29424 ** 2
            t29428 = t29422 * t29427
            t29435 = t29428 ** 2
            t29433 = t29427 ** 2
            t29425 = t29423 ** 2
            t29426 = t29422 * t29425
            t29431 = t29426 ** 2
            t29429 = t29425 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1995e4) * (-18733 * t29423 - 18447 * t29424 + 399971 * t29425 + 225225 * t29426 - 3236233 * t29427 - 1193907 * t29428 - 27413815 * t29431 + 32422065 * t29433 - 19919955 * t29435 + 143 + (12804077 + 4962480 * t29429) * t29429 + (3206775 * t29429 - 4561245 * t29431 + 3271635 * t29433 - 930465 * t29435 + 429) * t29422) * np.cos((3 * phi1 - phi2))

        if Bindx == 2971:
            t29447 = np.sin(phi)
            t29445 = t29447 ** 2
            t29438 = np.cos(phi)
            t29439 = t29438 ** 2
            t29440 = t29439 ** 2
            t29442 = t29440 ** 2
            t29441 = t29439 * t29440
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t29438 * t29445 ** 2 * (69069 * t29440 + 740025 * t29442 + 143 + (-328900 + 310155 * t29441) * t29441 + (-780390 * t29442 - 6006) * t29439) * np.sin((3 * phi1)) * ((1 + t29438) ** (-0.1e1 / 0.2e1)) * ((1 - t29438) ** (-0.1e1 / 0.2e1))

        if Bindx == 2972:
            t29448 = np.cos(phi)
            t29449 = t29448 ** 2
            t29450 = t29448 * t29449
            t29453 = t29450 ** 2
            t29454 = t29448 * t29453
            t29461 = t29454 ** 2
            t29459 = t29453 ** 2
            t29451 = t29449 ** 2
            t29452 = t29448 * t29451
            t29457 = t29452 ** 2
            t29455 = t29451 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1995e4) * (-18733 * t29449 + 18447 * t29450 + 399971 * t29451 - 225225 * t29452 - 3236233 * t29453 + 1193907 * t29454 - 27413815 * t29457 + 32422065 * t29459 - 19919955 * t29461 + 143 + (12804077 + 4962480 * t29455) * t29455 + (-3206775 * t29455 + 4561245 * t29457 - 3271635 * t29459 + 930465 * t29461 - 429) * t29448) * np.cos((3 * phi1 + phi2))

        if Bindx == 2973:
            t29465 = np.cos(phi)
            t29466 = t29465 ** 2
            t29467 = t29465 * t29466
            t29470 = t29467 ** 2
            t29471 = t29465 * t29470
            t29478 = t29471 ** 2
            t29476 = t29470 ** 2
            t29468 = t29466 ** 2
            t29469 = t29465 * t29468
            t29474 = t29469 ** 2
            t29472 = t29468 ** 2
            t29464 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.133e3) * t29464 ** 2 * (18447 * t29466 + 254540 * t29467 - 375375 * t29468 - 3069066 * t29469 + 2785783 * t29470 + 16102944 * t29471 - 9620325 * t29472 + 16724565 * t29474 - 14177085 * t29476 + 4652325 * t29478 - 143 + (-42921450 * t29472 + 60762780 * t29474 - 43521750 * t29476 + 12406200 * t29478 - 6006) * t29465) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t29465) ** (-0.1e1 / 0.2e1)) * ((1 - t29465) ** (-0.1e1 / 0.2e1))

        if Bindx == 2974:
            t29480 = np.cos(phi)
            t29481 = t29480 ** 2
            t29482 = t29480 * t29481
            t29485 = t29482 ** 2
            t29486 = t29480 * t29485
            t29493 = t29486 ** 2
            t29491 = t29485 ** 2
            t29483 = t29481 ** 2
            t29484 = t29480 * t29483
            t29489 = t29484 ** 2
            t29487 = t29483 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-708279 * t29481 + 2283567 * t29482 + 14728285 * t29483 - 27048021 * t29484 - 116639523 * t29485 + 139200347 * t29486 - 961588485 * t29489 + 1130879295 * t29491 - 694397025 * t29493 + 5577 + (454049739 + 173686800 * t29487) * t29487 + (-363352275 * t29487 + 502934445 * t29489 - 351645735 * t29491 + 97698825 * t29493 - 54769) * t29480) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 2975:
            t29497 = np.cos(phi)
            t29498 = t29497 ** 2
            t29499 = t29497 * t29498
            t29502 = t29499 ** 2
            t29503 = t29497 * t29502
            t29510 = t29503 ** 2
            t29508 = t29502 ** 2
            t29500 = t29498 ** 2
            t29501 = t29497 * t29500
            t29506 = t29501 ** 2
            t29504 = t29500 ** 2
            t29496 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t29496 ** 2 * (33825 * t29498 + 192764 * t29499 - 656271 * t29500 - 2243472 * t29501 + 4645333 * t29502 + 11466972 * t29503 - 15312825 * t29504 + 25445475 * t29506 - 20660325 * t29508 + 6513255 * t29510 - 275 + (-30056400 * t29504 + 42223860 * t29506 - 30255120 * t29508 + 8684340 * t29510 - 4752) * t29497) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t29497) ** (-0.1e1 / 0.2e1)) * ((1 - t29497) ** (-0.1e1 / 0.2e1))

        if Bindx == 2976:
            t29512 = np.cos(phi)
            t29513 = t29512 ** 2
            t29514 = t29512 * t29513
            t29517 = t29514 ** 2
            t29518 = t29512 * t29517
            t29525 = t29518 ** 2
            t29523 = t29517 ** 2
            t29515 = t29513 ** 2
            t29516 = t29512 * t29515
            t29521 = t29516 ** 2
            t29519 = t29515 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (-22253 * t29513 + 150931 * t29514 + 440407 * t29515 - 1678985 * t29516 - 3372369 * t29517 + 8135215 * t29518 - 27069735 * t29521 + 31863165 * t29523 - 19679835 * t29525 + 187 + (12877953 + 4962480 * t29519) * t29519 + (-20056575 * t29519 + 26319705 * t29521 - 17518755 * t29523 + 4652325 * t29525 - 3861) * t29512) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 2977:
            t29543 = np.sin(phi)
            t29541 = t29543 ** 2
            t29528 = np.cos(phi)
            t29529 = t29528 ** 2
            t29530 = t29528 * t29529
            t29533 = t29530 ** 2
            t29539 = t29533 ** 2
            t29531 = t29529 ** 2
            t29532 = t29528 * t29531
            t29537 = t29532 ** 2
            t29535 = t29531 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.455e3) * t29541 ** 2 * (-22512 * t29529 - 53550 * t29530 + 382697 * t29531 + 562212 * t29532 - 2260440 * t29533 + 5797035 * t29535 - 6643320 * t29537 + 2791395 * t29539 + 201 + (-2548860 * t29533 + 5665590 * t29535 - 6063030 * t29537 + 2481240 * t29539 + 1454) * t29528) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t29528) ** (-0.1e1 / 0.2e1)) * ((1 - t29528) ** (-0.1e1 / 0.2e1))

        if Bindx == 2978:
            t29544 = np.cos(phi)
            t29545 = t29544 ** 2
            t29546 = t29544 * t29545
            t29549 = t29546 ** 2
            t29550 = t29544 * t29549
            t29557 = t29550 ** 2
            t29555 = t29549 ** 2
            t29547 = t29545 ** 2
            t29548 = t29544 * t29547
            t29553 = t29548 ** 2
            t29551 = t29547 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2093e4) * (-3959 * t29545 + 74683 * t29546 + 76225 * t29547 - 752213 * t29548 - 602091 * t29549 + 3323311 * t29550 - 5415285 * t29553 + 6658395 * t29555 - 4226025 * t29557 + 37 + (2433903 + 1078800 * t29551) * t29551 + (-7531275 * t29551 + 9156705 * t29553 - 5685015 * t29555 + 1415925 * t29557 - 2121) * t29544) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 2979:
            t29574 = np.sin(phi)
            t29571 = t29574 ** 2
            t29572 = t29574 * t29571
            t29560 = np.cos(phi)
            t29561 = t29560 ** 2
            t29563 = t29561 ** 2
            t29564 = t29560 * t29563
            t29569 = t29564 ** 2
            t29567 = t29563 ** 2
            t29562 = t29560 * t29561
            t29565 = t29562 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.6279e4) * t29572 ** 2 * (3007 * t29561 + 794 * t29562 - 42150 * t29563 - 13220 * t29564 + 191790 * t29565 - 337995 * t29567 + 202275 * t29569 - 31 + (81540 * t29565 - 187050 * t29567 + 134850 * t29569 - 18) * t29560) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t29560) ** (-0.1e1 / 0.2e1)) * ((1 - t29560) ** (-0.1e1 / 0.2e1))

        if Bindx == 2980:
            t29575 = np.cos(phi)
            t29576 = t29575 ** 2
            t29577 = t29575 * t29576
            t29580 = t29577 ** 2
            t29581 = t29575 * t29580
            t29588 = t29581 ** 2
            t29586 = t29580 ** 2
            t29578 = t29576 ** 2
            t29579 = t29575 * t29578
            t29584 = t29579 ** 2
            t29582 = t29578 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (273 * t29576 + 7197 * t29577 - 2951 * t29578 - 62979 * t29579 + 4221 * t29580 + 246281 * t29581 - 160477 * t29584 + 242883 * t29586 - 166257 * t29588 - 3 + (39159 + 43152 * t29582) * t29582 + (-502173 * t29582 + 555687 * t29584 - 316593 * t29586 + 72819 * t29588 - 239) * t29575) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 2981:
            t29603 = np.sin(phi)
            t29600 = t29603 ** 2
            t29601 = t29600 ** 2
            t29591 = np.cos(phi)
            t29592 = t29591 ** 2
            t29594 = t29592 ** 2
            t29598 = t29594 ** 2
            t29593 = t29591 * t29592
            t29596 = t29593 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.69e2) * t29601 ** 2 * (-8970 * t29592 + 13270 * t29593 + 94860 * t29594 - 295974 * t29596 + 283185 * t29598 + 115 + (-42966 * t29594 - 47502 * t29596 + 151032 * t29598 - 618) * t29591) * np.sin((3 * phi1 + 10 * phi2)) * ((1 + t29591) ** (-0.1e1 / 0.2e1)) * ((1 - t29591) ** (-0.1e1 / 0.2e1))

        if Bindx == 2982:
            t29604 = np.cos(phi)
            t29605 = t29604 ** 2
            t29606 = t29604 * t29605
            t29609 = t29606 ** 2
            t29610 = t29604 * t29609
            t29617 = t29610 ** 2
            t29615 = t29609 ** 2
            t29607 = t29605 ** 2
            t29608 = t29604 * t29607
            t29613 = t29608 ** 2
            t29611 = t29607 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (7597 * t29605 + 41987 * t29606 - 77639 * t29607 - 309001 * t29608 + 259665 * t29609 + 1058783 * t29610 - 64665 * t29613 + 464051 * t29615 - 379813 * t29617 - 107 + (-309777 + 100688 * t29611) * t29611 + (-1923647 * t29611 + 1915177 * t29613 - 989219 * t29615 + 207669 * t29617 - 1749) * t29604) * np.cos((3 * phi1 + 11 * phi2))

        if Bindx == 2983:
            t29631 = np.sin(phi)
            t29627 = t29631 ** 2
            t29629 = t29631 * t29627 ** 2
            t29620 = np.cos(phi)
            t29621 = t29620 ** 2
            t29622 = t29620 * t29621
            t29625 = t29622 ** 2
            t29623 = t29621 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t29629 ** 2 * (2805 * t29621 - 9708 * t29622 - 20329 * t29623 + 40455 * t29625 - 51 + (13920 * t29623 + 17980 * t29625 + 688) * t29620) * np.sin((3 * phi1 + 12 * phi2)) * ((1 + t29620) ** (-0.1e1 / 0.2e1)) * ((1 - t29620) ** (-0.1e1 / 0.2e1))

        if Bindx == 2984:
            t29632 = np.cos(phi)
            t29633 = t29632 ** 2
            t29634 = t29632 * t29633
            t29637 = t29634 ** 2
            t29638 = t29632 * t29637
            t29645 = t29638 ** 2
            t29643 = t29637 ** 2
            t29635 = t29633 ** 2
            t29636 = t29632 * t29635
            t29641 = t29636 ** 2
            t29639 = t29635 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.70035e5) * (1363 * t29633 + 2171 * t29634 - 9665 * t29635 - 15145 * t29636 + 26415 * t29637 + 47255 * t29638 + 14169 * t29641 + 7157 * t29643 - 9115 * t29645 - 29 + (-32775 + 2480 * t29639) * t29639 + (-76895 * t29639 + 68497 * t29641 - 31811 * t29643 + 6045 * t29645 - 117) * t29632) * np.cos((3 * phi1 + 13 * phi2))

        if Bindx == 2985:
            t29657 = np.sin(phi)
            t29653 = t29657 ** 2
            t29654 = t29657 * t29653
            t29655 = t29654 ** 2
            t29648 = np.cos(phi)
            t29649 = t29648 ** 2
            t29651 = t29649 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.14007e5) * t29655 ** 2 * (-28 * t29649 + 651 * t29651 + 1 + (466 * t29649 + 248 * t29651 - 90) * t29648) * np.sin((3 * phi1 + 14 * phi2)) * ((1 + t29648) ** (-0.1e1 / 0.2e1)) * ((1 - t29648) ** (-0.1e1 / 0.2e1))

        if Bindx == 2986:
            t29658 = np.cos(phi)
            t29659 = t29658 ** 2
            t29660 = t29658 * t29659
            t29663 = t29660 ** 2
            t29664 = t29658 * t29663
            t29671 = t29664 ** 2
            t29669 = t29663 ** 2
            t29661 = t29659 ** 2
            t29662 = t29658 * t29661
            t29667 = t29662 ** 2
            t29665 = t29661 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.434217e6) * (57 * t29659 + 3 * t29660 - 263 * t29661 - 165 * t29662 + 549 * t29663 + 535 * t29664 + 283 * t29667 + 3 * t29669 - 57 * t29671 - 3 + (-585 + 16 * t29665) * t29665 + (-795 * t29665 + 633 * t29667 - 263 * t29669 + 45 * t29671 + 7) * t29658) * np.cos((3 * phi1 + 15 * phi2))

        if Bindx == 2987:
            t29674 = np.cos(phi)
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.434217e6) * ((1 - t29674) ** (0.13e2 / 0.2e1)) * ((1 + t29674) ** (0.19e2 / 0.2e1)) * np.sin((3 * phi1 + 16 * phi2))

        if Bindx == 2988:
            t29675 = np.cos(phi)
            t29690 = 20 * t29675
            t29676 = t29675 ** 2
            t29677 = t29675 * t29676
            t29680 = t29677 ** 2
            t29686 = t29680 ** 2
            t29678 = t29676 ** 2
            t29679 = t29675 * t29678
            t29684 = t29679 ** 2
            t29682 = t29678 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.28224105e8) * np.cos((4 * phi1 - 16 * phi2)) * (20 * t29677 - 20 * t29678 - 36 * t29679 + 64 * t29684 - 20 * t29686 + 1 + (t29690 + 64) * t29680 + (t29690 - 90 + t29682) * t29682 + ((-4 * t29676 + 20) * t29686 - 36 * t29684 - 4) * t29675)

        if Bindx == 2989:
            t29700 = np.sin(phi)
            t29696 = t29700 ** 2
            t29697 = t29700 * t29696
            t29698 = t29697 ** 2
            t29691 = np.cos(phi)
            t29692 = t29691 ** 2
            t29694 = t29692 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.28224105e8) * t29698 ** 2 * (-10 * t29692 - 15 * t29694 + 1 + (20 * t29692 + 4 * t29694) * t29691) * np.sin((4 * phi1 - 15 * phi2)) * ((1 + t29691) ** (-0.1e1 / 0.2e1)) * ((1 - t29691) ** (-0.1e1 / 0.2e1))

        if Bindx == 2990:
            t29701 = np.cos(phi)
            t29702 = t29701 ** 2
            t29703 = t29701 * t29702
            t29706 = t29703 ** 2
            t29707 = t29701 * t29706
            t29714 = t29707 ** 2
            t29712 = t29706 ** 2
            t29704 = t29702 ** 2
            t29705 = t29701 * t29704
            t29710 = t29705 ** 2
            t29708 = t29704 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.910455e6) * (60 * t29702 + 185 * t29703 - 520 * t29704 - 363 * t29705 + 1708 * t29706 - 155 * t29707 + 2132 * t29710 - 680 * t29712 - 60 * t29714 - 2 + (-2700 + 62 * t29708) * t29708 + (1355 * t29708 - 1797 * t29710 + 1015 * t29712 - 217 * t29714 - 23) * t29701) * np.cos((4 * phi1 - 14 * phi2))

        if Bindx == 2991:
            t29728 = np.sin(phi)
            t29724 = t29728 ** 2
            t29726 = t29728 * t29724 ** 2
            t29717 = np.cos(phi)
            t29718 = t29717 ** 2
            t29719 = t29717 * t29718
            t29722 = t29719 ** 2
            t29720 = t29718 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.182091e6) * t29726 ** 2 * (39 * t29718 - 172 * t29719 + 13 * t29720 - 403 * t29722 - 1 + (384 * t29720 + 124 * t29722 + 16) * t29717) * np.sin((4 * phi1 - 13 * phi2)) * ((1 + t29717) ** (-0.1e1 / 0.2e1)) * ((1 - t29717) ** (-0.1e1 / 0.2e1))

        if Bindx == 2992:
            t29729 = np.cos(phi)
            t29730 = t29729 ** 2
            t29731 = t29729 * t29730
            t29734 = t29731 ** 2
            t29735 = t29729 * t29734
            t29742 = t29735 ** 2
            t29740 = t29734 ** 2
            t29732 = t29730 ** 2
            t29733 = t29729 * t29732
            t29738 = t29733 ** 2
            t29736 = t29732 ** 2
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (280 * t29730 + 85 * t29731 - 2612 * t29732 + 823 * t29733 + 9720 * t29734 - 6659 * t29735 + 14664 * t29738 - 4036 * t29740 - 1624 * t29742 - 5 + (-17286 + 899 * t29736) * t29736 + (17021 * t29736 - 20425 * t29738 + 11861 * t29740 - 2697 * t29742 - 9) * t29729) * np.cos((4 * phi1 - 12 * phi2))

        if Bindx == 2993:
            t29757 = np.sin(phi)
            t29754 = t29757 ** 2
            t29755 = t29754 ** 2
            t29745 = np.cos(phi)
            t29746 = t29745 ** 2
            t29748 = t29746 ** 2
            t29752 = t29748 ** 2
            t29747 = t29745 * t29746
            t29750 = t29747 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t29755 ** 2 * (704 * t29746 + 12084 * t29747 - 10406 * t29748 + 53592 * t29750 - 69223 * t29752 - 11 + (-44548 * t29748 + 33292 * t29750 + 25172 * t29752 - 656) * t29745) * np.sin((4 * phi1 - 11 * phi2)) * ((1 + t29745) ** (-0.1e1 / 0.2e1)) * ((1 - t29745) ** (-0.1e1 / 0.2e1))

        if Bindx == 2994:
            t29758 = np.cos(phi)
            t29759 = t29758 ** 2
            t29760 = t29758 * t29759
            t29763 = t29760 ** 2
            t29764 = t29758 * t29763
            t29771 = t29764 ** 2
            t29769 = t29763 ** 2
            t29761 = t29759 ** 2
            t29762 = t29758 * t29761
            t29767 = t29762 ** 2
            t29765 = t29761 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4485e4) * (2652 * t29759 - 6485 * t29760 - 31912 * t29761 + 58527 * t29762 + 138124 * t29763 - 248641 * t29764 + 215092 * t29767 + 504 * t29769 - 95004 * t29771 - 34 + (-267180 + 37758 * t29765) * t29765 + (550481 * t29765 - 652527 * t29767 + 392805 * t29769 - 94395 * t29771 + 235) * t29758) * np.cos((4 * phi1 - 10 * phi2))

        if Bindx == 2995:
            t29788 = np.sin(phi)
            t29785 = t29788 ** 2
            t29786 = t29788 * t29785
            t29774 = np.cos(phi)
            t29775 = t29774 ** 2
            t29777 = t29775 ** 2
            t29778 = t29774 * t29777
            t29783 = t29778 ** 2
            t29781 = t29777 ** 2
            t29776 = t29774 * t29775
            t29779 = t29776 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t29786 ** 2 * (-4505 * t29775 - 17060 * t29776 + 58410 * t29777 + 95576 * t29778 - 264186 * t29779 + 491985 * t29781 - 315549 * t29783 + 53 + (-140400 * t29779 - 45240 * t29781 + 140244 * t29783 + 672) * t29774) * np.sin((4 * phi1 - 9 * phi2)) * ((1 + t29774) ** (-0.1e1 / 0.2e1)) * ((1 - t29774) ** (-0.1e1 / 0.2e1))

        if Bindx == 2996:
            t29789 = np.cos(phi)
            t29790 = t29789 ** 2
            t29791 = t29789 * t29790
            t29794 = t29791 ** 2
            t29795 = t29789 * t29794
            t29802 = t29795 ** 2
            t29800 = t29794 ** 2
            t29792 = t29790 ** 2
            t29793 = t29789 * t29792
            t29798 = t29793 ** 2
            t29796 = t29792 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2415e4) * (2208 * t29790 - 19942 * t29791 - 31060 * t29792 + 188958 * t29793 + 142688 * t29794 - 809638 * t29795 - 47840 * t29798 + 531180 * t29800 - 542880 * t29802 - 23 + (-229578 + 175305 * t29796) * t29796 + (1818970 * t29796 - 2219490 * t29798 + 1391130 * t29800 - 350610 * t29802 + 622) * t29789) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 2997:
            t29820 = np.sin(phi)
            t29818 = t29820 ** 2
            t29805 = np.cos(phi)
            t29806 = t29805 ** 2
            t29807 = t29805 * t29806
            t29810 = t29807 ** 2
            t29816 = t29810 ** 2
            t29808 = t29806 ** 2
            t29809 = t29805 * t29808
            t29814 = t29809 ** 2
            t29812 = t29808 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.805e3) * t29818 ** 2 * (12138 * t29806 + 10388 * t29807 - 190337 * t29808 - 57708 * t29809 + 1056300 * t29810 - 2602665 * t29812 + 2929290 * t29814 - 1227135 * t29816 - 119 + (-26520 * t29810 + 684840 * t29812 - 1289340 * t29814 + 701220 * t29816 - 352) * t29805) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t29805) ** (-0.1e1 / 0.2e1)) * ((1 - t29805) ** (-0.1e1 / 0.2e1))

        if Bindx == 2998:
            t29821 = np.cos(phi)
            t29822 = t29821 ** 2
            t29823 = t29821 * t29822
            t29826 = t29823 ** 2
            t29827 = t29821 * t29826
            t29834 = t29827 ** 2
            t29832 = t29826 ** 2
            t29824 = t29822 ** 2
            t29825 = t29821 * t29824
            t29830 = t29825 ** 2
            t29828 = t29824 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.7e1) * (-6820 * t29822 - 487715 * t29823 + 175640 * t29824 + 5090953 * t29825 - 1941492 * t29826 - 23424695 * t29827 - 27968460 * t29830 + 40006200 * t29832 - 28614300 * t29834 + 62 + (10285140 + 8064030 * t29828) * t29828 + (55508775 * t29828 - 70777785 * t29830 + 46173075 * t29832 - 12096045 * t29834 + 13437) * t29821) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 2999:
            t29838 = np.cos(phi)
            t29839 = t29838 ** 2
            t29840 = t29838 * t29839
            t29843 = t29840 ** 2
            t29844 = t29838 * t29843
            t29851 = t29844 ** 2
            t29849 = t29843 ** 2
            t29841 = t29839 ** 2
            t29842 = t29838 * t29841
            t29847 = t29842 ** 2
            t29845 = t29841 ** 2
            t29837 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t29837 ** 2 * (-137885 * t29839 + 240020 * t29840 + 2511355 * t29841 - 2829904 * t29842 - 16780225 * t29843 + 15286260 * t29844 + 52579725 * t29845 - 83721495 * t29847 + 65682825 * t29849 - 20160075 * t29851 + 1199 + (-43414800 * t29845 + 66647100 * t29847 - 52026000 * t29849 + 16128060 * t29851 - 6160) * t29838) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t29838) ** (-0.1e1 / 0.2e1)) * ((1 - t29838) ** (-0.1e1 / 0.2e1))

        if Bindx == 3000:
            t29853 = np.cos(phi)
            t29854 = t29853 ** 2
            t29855 = t29853 * t29854
            t29858 = t29855 ** 2
            t29859 = t29853 * t29858
            t29866 = t29859 ** 2
            t29864 = t29858 ** 2
            t29856 = t29854 ** 2
            t29857 = t29853 * t29856
            t29862 = t29857 ** 2
            t29860 = t29856 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * (-109560 * t29854 - 849035 * t29855 + 2196260 * t29856 + 9539607 * t29857 - 17104472 * t29858 - 46737955 * t29859 - 143268840 * t29862 + 172672500 * t29864 - 109254600 * t29866 + 913 + (66647790 + 28224105 * t29860) * t29860 + (116639325 * t29860 - 155095785 * t29862 + 104702325 * t29864 - 28224105 * t29866 + 21527) * t29853) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 3001:
            t29870 = np.cos(phi)
            t29871 = t29870 ** 2
            t29872 = t29870 * t29871
            t29875 = t29872 ** 2
            t29876 = t29870 * t29875
            t29883 = t29876 ** 2
            t29881 = t29875 ** 2
            t29873 = t29871 ** 2
            t29874 = t29870 * t29873
            t29879 = t29874 ** 2
            t29877 = t29873 ** 2
            t29869 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t29869 ** 2 * (-33825 * t29871 + 192764 * t29872 + 656271 * t29873 - 2243472 * t29874 - 4645333 * t29875 + 11466972 * t29876 + 15312825 * t29877 - 25445475 * t29879 + 20660325 * t29881 - 6513255 * t29883 + 275 + (-30056400 * t29877 + 42223860 * t29879 - 30255120 * t29881 + 8684340 * t29883 - 4752) * t29870) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t29870) ** (-0.1e1 / 0.2e1)) * ((1 - t29870) ** (-0.1e1 / 0.2e1))

        if Bindx == 3002:
            t29885 = np.cos(phi)
            t29886 = t29885 ** 2
            t29887 = t29885 * t29886
            t29890 = t29887 ** 2
            t29891 = t29885 * t29890
            t29898 = t29891 ** 2
            t29896 = t29890 ** 2
            t29888 = t29886 ** 2
            t29889 = t29885 * t29888
            t29894 = t29889 ** 2
            t29892 = t29888 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.8645e4) * (-2772 * t29886 - 7733 * t29887 + 57112 * t29888 + 90783 * t29889 - 447524 * t29890 - 462737 * t29891 - 3597660 * t29894 + 4170360 * t29896 - 2521260 * t29898 + 22 + (1721412 + 620310 * t29892) * t29892 + (1195425 * t29892 - 1636335 * t29894 + 1130565 * t29896 - 310155 * t29898 + 187) * t29885) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 3003:
            t29916 = np.sin(phi)
            t29914 = t29916 ** 2
            t29901 = np.cos(phi)
            t29902 = t29901 ** 2
            t29903 = t29901 * t29902
            t29906 = t29903 ** 2
            t29912 = t29906 ** 2
            t29904 = t29902 ** 2
            t29905 = t29901 * t29904
            t29910 = t29905 ** 2
            t29908 = t29904 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5187e4) * t29914 ** 2 * (1386 * t29902 - 28644 * t29903 - 26565 * t29904 + 318780 * t29905 + 177100 * t29906 - 512325 * t29908 + 660330 * t29910 - 310155 * t29912 - 11 + (-1467400 * t29906 + 3187800 * t29908 - 3241620 * t29910 + 1240620 * t29912 + 704) * t29901) * np.sin((4 * phi1 - phi2)) * ((1 + t29901) ** (-0.1e1 / 0.2e1)) * ((1 - t29901) ** (-0.1e1 / 0.2e1))

        if Bindx == 3004:
            t29917 = np.cos(phi)
            t29918 = t29917 ** 2
            t29919 = t29918 ** 2
            t29920 = t29918 * t29919
            t29923 = t29920 ** 2
            t29921 = t29919 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t29919 - 231616 * t29920 + 2143140 * t29923 + 11 + (893090 + 310155 * t29921) * t29921 + (-1862080 * t29921 - 1280640 * t29923 - 1408) * t29918) * np.cos((4 * phi1))

        if Bindx == 3005:
            t29941 = np.sin(phi)
            t29939 = t29941 ** 2
            t29926 = np.cos(phi)
            t29927 = t29926 ** 2
            t29928 = t29926 * t29927
            t29931 = t29928 ** 2
            t29937 = t29931 ** 2
            t29929 = t29927 ** 2
            t29930 = t29926 * t29929
            t29935 = t29930 ** 2
            t29933 = t29929 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.5187e4) * t29939 ** 2 * (-1386 * t29927 - 28644 * t29928 + 26565 * t29929 + 318780 * t29930 - 177100 * t29931 + 512325 * t29933 - 660330 * t29935 + 310155 * t29937 + 11 + (-1467400 * t29931 + 3187800 * t29933 - 3241620 * t29935 + 1240620 * t29937 + 704) * t29926) * np.sin((4 * phi1 + phi2)) * ((1 + t29926) ** (-0.1e1 / 0.2e1)) * ((1 - t29926) ** (-0.1e1 / 0.2e1))

        if Bindx == 3006:
            t29942 = np.cos(phi)
            t29943 = t29942 ** 2
            t29944 = t29942 * t29943
            t29947 = t29944 ** 2
            t29948 = t29942 * t29947
            t29955 = t29948 ** 2
            t29953 = t29947 ** 2
            t29945 = t29943 ** 2
            t29946 = t29942 * t29945
            t29951 = t29946 ** 2
            t29949 = t29945 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.8645e4) * (-2772 * t29943 + 7733 * t29944 + 57112 * t29945 - 90783 * t29946 - 447524 * t29947 + 462737 * t29948 - 3597660 * t29951 + 4170360 * t29953 - 2521260 * t29955 + 22 + (1721412 + 620310 * t29949) * t29949 + (-1195425 * t29949 + 1636335 * t29951 - 1130565 * t29953 + 310155 * t29955 - 187) * t29942) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 3007:
            t29959 = np.cos(phi)
            t29960 = t29959 ** 2
            t29961 = t29959 * t29960
            t29964 = t29961 ** 2
            t29965 = t29959 * t29964
            t29972 = t29965 ** 2
            t29970 = t29964 ** 2
            t29962 = t29960 ** 2
            t29963 = t29959 * t29962
            t29968 = t29963 ** 2
            t29966 = t29962 ** 2
            t29958 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t29958 ** 2 * (33825 * t29960 + 192764 * t29961 - 656271 * t29962 - 2243472 * t29963 + 4645333 * t29964 + 11466972 * t29965 - 15312825 * t29966 + 25445475 * t29968 - 20660325 * t29970 + 6513255 * t29972 - 275 + (-30056400 * t29966 + 42223860 * t29968 - 30255120 * t29970 + 8684340 * t29972 - 4752) * t29959) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t29959) ** (-0.1e1 / 0.2e1)) * ((1 - t29959) ** (-0.1e1 / 0.2e1))

        if Bindx == 3008:
            t29974 = np.cos(phi)
            t29975 = t29974 ** 2
            t29976 = t29974 * t29975
            t29979 = t29976 ** 2
            t29980 = t29974 * t29979
            t29987 = t29980 ** 2
            t29985 = t29979 ** 2
            t29977 = t29975 ** 2
            t29978 = t29974 * t29977
            t29983 = t29978 ** 2
            t29981 = t29977 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * (-109560 * t29975 + 849035 * t29976 + 2196260 * t29977 - 9539607 * t29978 - 17104472 * t29979 + 46737955 * t29980 - 143268840 * t29983 + 172672500 * t29985 - 109254600 * t29987 + 913 + (66647790 + 28224105 * t29981) * t29981 + (-116639325 * t29981 + 155095785 * t29983 - 104702325 * t29985 + 28224105 * t29987 - 21527) * t29974) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 3009:
            t29991 = np.cos(phi)
            t29992 = t29991 ** 2
            t29993 = t29991 * t29992
            t29996 = t29993 ** 2
            t29997 = t29991 * t29996
            t30004 = t29997 ** 2
            t30002 = t29996 ** 2
            t29994 = t29992 ** 2
            t29995 = t29991 * t29994
            t30000 = t29995 ** 2
            t29998 = t29994 ** 2
            t29990 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t29990 ** 2 * (137885 * t29992 + 240020 * t29993 - 2511355 * t29994 - 2829904 * t29995 + 16780225 * t29996 + 15286260 * t29997 - 52579725 * t29998 + 83721495 * t30000 - 65682825 * t30002 + 20160075 * t30004 - 1199 + (-43414800 * t29998 + 66647100 * t30000 - 52026000 * t30002 + 16128060 * t30004 - 6160) * t29991) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t29991) ** (-0.1e1 / 0.2e1)) * ((1 - t29991) ** (-0.1e1 / 0.2e1))

        if Bindx == 3010:
            t30006 = np.cos(phi)
            t30007 = t30006 ** 2
            t30008 = t30006 * t30007
            t30011 = t30008 ** 2
            t30012 = t30006 * t30011
            t30019 = t30012 ** 2
            t30017 = t30011 ** 2
            t30009 = t30007 ** 2
            t30010 = t30006 * t30009
            t30015 = t30010 ** 2
            t30013 = t30009 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.7e1) * (-6820 * t30007 + 487715 * t30008 + 175640 * t30009 - 5090953 * t30010 - 1941492 * t30011 + 23424695 * t30012 - 27968460 * t30015 + 40006200 * t30017 - 28614300 * t30019 + 62 + (10285140 + 8064030 * t30013) * t30013 + (-55508775 * t30013 + 70777785 * t30015 - 46173075 * t30017 + 12096045 * t30019 - 13437) * t30006) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 3011:
            t30037 = np.sin(phi)
            t30035 = t30037 ** 2
            t30022 = np.cos(phi)
            t30023 = t30022 ** 2
            t30024 = t30022 * t30023
            t30027 = t30024 ** 2
            t30033 = t30027 ** 2
            t30025 = t30023 ** 2
            t30026 = t30022 * t30025
            t30031 = t30026 ** 2
            t30029 = t30025 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.805e3) * t30035 ** 2 * (-12138 * t30023 + 10388 * t30024 + 190337 * t30025 - 57708 * t30026 - 1056300 * t30027 + 2602665 * t30029 - 2929290 * t30031 + 1227135 * t30033 + 119 + (-26520 * t30027 + 684840 * t30029 - 1289340 * t30031 + 701220 * t30033 - 352) * t30022) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t30022) ** (-0.1e1 / 0.2e1)) * ((1 - t30022) ** (-0.1e1 / 0.2e1))

        if Bindx == 3012:
            t30038 = np.cos(phi)
            t30039 = t30038 ** 2
            t30040 = t30038 * t30039
            t30043 = t30040 ** 2
            t30044 = t30038 * t30043
            t30051 = t30044 ** 2
            t30049 = t30043 ** 2
            t30041 = t30039 ** 2
            t30042 = t30038 * t30041
            t30047 = t30042 ** 2
            t30045 = t30041 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2415e4) * (2208 * t30039 + 19942 * t30040 - 31060 * t30041 - 188958 * t30042 + 142688 * t30043 + 809638 * t30044 - 47840 * t30047 + 531180 * t30049 - 542880 * t30051 - 23 + (-229578 + 175305 * t30045) * t30045 + (-1818970 * t30045 + 2219490 * t30047 - 1391130 * t30049 + 350610 * t30051 - 622) * t30038) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 3013:
            t30068 = np.sin(phi)
            t30065 = t30068 ** 2
            t30066 = t30068 * t30065
            t30054 = np.cos(phi)
            t30055 = t30054 ** 2
            t30057 = t30055 ** 2
            t30058 = t30054 * t30057
            t30063 = t30058 ** 2
            t30061 = t30057 ** 2
            t30056 = t30054 * t30055
            t30059 = t30056 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t30066 ** 2 * (4505 * t30055 - 17060 * t30056 - 58410 * t30057 + 95576 * t30058 + 264186 * t30059 - 491985 * t30061 + 315549 * t30063 - 53 + (-140400 * t30059 - 45240 * t30061 + 140244 * t30063 + 672) * t30054) * np.sin((4 * phi1 + 9 * phi2)) * ((1 + t30054) ** (-0.1e1 / 0.2e1)) * ((1 - t30054) ** (-0.1e1 / 0.2e1))

        if Bindx == 3014:
            t30069 = np.cos(phi)
            t30070 = t30069 ** 2
            t30071 = t30069 * t30070
            t30074 = t30071 ** 2
            t30075 = t30069 * t30074
            t30082 = t30075 ** 2
            t30080 = t30074 ** 2
            t30072 = t30070 ** 2
            t30073 = t30069 * t30072
            t30078 = t30073 ** 2
            t30076 = t30072 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4485e4) * (2652 * t30070 + 6485 * t30071 - 31912 * t30072 - 58527 * t30073 + 138124 * t30074 + 248641 * t30075 + 215092 * t30078 + 504 * t30080 - 95004 * t30082 - 34 + (-267180 + 37758 * t30076) * t30076 + (-550481 * t30076 + 652527 * t30078 - 392805 * t30080 + 94395 * t30082 - 235) * t30069) * np.cos((4 * phi1 + 10 * phi2))

        if Bindx == 3015:
            t30097 = np.sin(phi)
            t30094 = t30097 ** 2
            t30095 = t30094 ** 2
            t30085 = np.cos(phi)
            t30086 = t30085 ** 2
            t30088 = t30086 ** 2
            t30092 = t30088 ** 2
            t30087 = t30085 * t30086
            t30090 = t30087 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t30095 ** 2 * (-704 * t30086 + 12084 * t30087 + 10406 * t30088 - 53592 * t30090 + 69223 * t30092 + 11 + (-44548 * t30088 + 33292 * t30090 + 25172 * t30092 - 656) * t30085) * np.sin((4 * phi1 + 11 * phi2)) * ((1 + t30085) ** (-0.1e1 / 0.2e1)) * ((1 - t30085) ** (-0.1e1 / 0.2e1))

        if Bindx == 3016:
            t30098 = np.cos(phi)
            t30099 = t30098 ** 2
            t30100 = t30098 * t30099
            t30103 = t30100 ** 2
            t30104 = t30098 * t30103
            t30111 = t30104 ** 2
            t30109 = t30103 ** 2
            t30101 = t30099 ** 2
            t30102 = t30098 * t30101
            t30107 = t30102 ** 2
            t30105 = t30101 ** 2
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (280 * t30099 - 85 * t30100 - 2612 * t30101 - 823 * t30102 + 9720 * t30103 + 6659 * t30104 + 14664 * t30107 - 4036 * t30109 - 1624 * t30111 - 5 + (-17286 + 899 * t30105) * t30105 + (-17021 * t30105 + 20425 * t30107 - 11861 * t30109 + 2697 * t30111 + 9) * t30098) * np.cos((4 * phi1 + 12 * phi2))

        if Bindx == 3017:
            t30125 = np.sin(phi)
            t30121 = t30125 ** 2
            t30123 = t30125 * t30121 ** 2
            t30114 = np.cos(phi)
            t30115 = t30114 ** 2
            t30116 = t30114 * t30115
            t30119 = t30116 ** 2
            t30117 = t30115 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.182091e6) * t30123 ** 2 * (-39 * t30115 - 172 * t30116 - 13 * t30117 + 403 * t30119 + 1 + (384 * t30117 + 124 * t30119 + 16) * t30114) * np.sin((4 * phi1 + 13 * phi2)) * ((1 + t30114) ** (-0.1e1 / 0.2e1)) * ((1 - t30114) ** (-0.1e1 / 0.2e1))

        if Bindx == 3018:
            t30126 = np.cos(phi)
            t30127 = t30126 ** 2
            t30128 = t30126 * t30127
            t30131 = t30128 ** 2
            t30132 = t30126 * t30131
            t30139 = t30132 ** 2
            t30137 = t30131 ** 2
            t30129 = t30127 ** 2
            t30130 = t30126 * t30129
            t30135 = t30130 ** 2
            t30133 = t30129 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.910455e6) * (60 * t30127 - 185 * t30128 - 520 * t30129 + 363 * t30130 + 1708 * t30131 + 155 * t30132 + 2132 * t30135 - 680 * t30137 - 60 * t30139 - 2 + (-2700 + 62 * t30133) * t30133 + (-1355 * t30133 + 1797 * t30135 - 1015 * t30137 + 217 * t30139 + 23) * t30126) * np.cos((4 * phi1 + 14 * phi2))

        if Bindx == 3019:
            t30151 = np.sin(phi)
            t30147 = t30151 ** 2
            t30148 = t30151 * t30147
            t30149 = t30148 ** 2
            t30142 = np.cos(phi)
            t30143 = t30142 ** 2
            t30145 = t30143 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.28224105e8) * t30149 ** 2 * (10 * t30143 + 15 * t30145 - 1 + (20 * t30143 + 4 * t30145) * t30142) * np.sin((4 * phi1 + 15 * phi2)) * ((1 + t30142) ** (-0.1e1 / 0.2e1)) * ((1 - t30142) ** (-0.1e1 / 0.2e1))

        if Bindx == 3020:
            t30152 = np.cos(phi)
            t30167 = -20 * t30152
            t30153 = t30152 ** 2
            t30154 = t30152 * t30153
            t30157 = t30154 ** 2
            t30163 = t30157 ** 2
            t30155 = t30153 ** 2
            t30156 = t30152 * t30155
            t30161 = t30156 ** 2
            t30159 = t30155 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.28224105e8) * np.cos((4 * phi1 + 16 * phi2)) * (-20 * t30154 - 20 * t30155 + 36 * t30156 + 64 * t30161 - 20 * t30163 + 1 + (t30167 + 64) * t30157 + (t30167 - 90 + t30159) * t30159 + ((4 * t30153 - 20) * t30163 + 36 * t30161 + 4) * t30152)

        if Bindx == 3021:
            t30168 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4032015e7) * ((1 - t30168) ** (0.21e2 / 0.2e1)) * ((1 + t30168) ** (0.11e2 / 0.2e1)) * np.sin((5 * phi1 - 16 * phi2))

        if Bindx == 3022:
            t30169 = np.cos(phi)
            t30170 = t30169 ** 2
            t30171 = t30169 * t30170
            t30174 = t30171 ** 2
            t30175 = t30169 * t30174
            t30182 = t30175 ** 2
            t30180 = t30174 ** 2
            t30172 = t30170 ** 2
            t30173 = t30169 * t30172
            t30178 = t30173 ** 2
            t30176 = t30172 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * (-55 * t30170 + 155 * t30171 + 65 * t30172 - 565 * t30173 + 309 * t30174 + 815 * t30175 + 1035 * t30178 - 485 * t30180 + 55 * t30182 + 5 + (-945 + 16 * t30176) * t30176 + (-395 * t30176 - 191 * t30178 + 265 * t30180 - 75 * t30182 - 9) * t30169) * np.cos((5 * phi1 - 15 * phi2))

        if Bindx == 3023:
            t30196 = np.sin(phi)
            t30192 = t30196 ** 2
            t30194 = t30196 * t30192 ** 2
            t30185 = np.cos(phi)
            t30186 = t30185 ** 2
            t30187 = t30185 * t30186
            t30190 = t30187 ** 2
            t30188 = t30186 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * t30194 ** 2 * (357 * t30186 - 140 * t30187 - 1015 * t30188 - 1085 * t30190 - 17 + (1722 * t30188 + 248 * t30190 - 70) * t30185) * np.sin((5 * phi1 - 14 * phi2)) * ((1 + t30185) ** (-0.1e1 / 0.2e1)) * ((1 - t30185) ** (-0.1e1 / 0.2e1))

        if Bindx == 3024:
            t30197 = np.cos(phi)
            t30198 = t30197 ** 2
            t30199 = t30197 * t30198
            t30202 = t30199 ** 2
            t30203 = t30197 * t30202
            t30210 = t30203 ** 2
            t30208 = t30202 ** 2
            t30200 = t30198 ** 2
            t30201 = t30197 * t30200
            t30206 = t30201 ** 2
            t30204 = t30200 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * (39 * t30198 + 1207 * t30199 - 1301 * t30200 - 4677 * t30201 + 7571 * t30202 + 6563 * t30203 + 19093 * t30206 - 9127 * t30208 + 753 * t30210 - 1 + (-17523 + 496 * t30204) * t30204 + (-227 * t30204 - 7995 * t30206 + 7241 * t30208 - 2015 * t30210 - 97) * t30197) * np.cos((5 * phi1 - 13 * phi2))

        if Bindx == 3025:
            t30225 = np.sin(phi)
            t30222 = t30225 ** 2
            t30223 = t30222 ** 2
            t30213 = np.cos(phi)
            t30214 = t30213 ** 2
            t30216 = t30214 ** 2
            t30220 = t30216 ** 2
            t30215 = t30213 * t30214
            t30218 = t30215 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.897e3) * t30223 ** 2 * (-1104 * t30214 + 2380 * t30215 + 4494 * t30216 + 1624 * t30218 - 13485 * t30220 + 23 + (-12348 * t30216 + 14964 * t30218 + 3596 * t30220 - 144) * t30213) * np.sin((5 * phi1 - 12 * phi2)) * ((1 + t30213) ** (-0.1e1 / 0.2e1)) * ((1 - t30213) ** (-0.1e1 / 0.2e1))

        if Bindx == 3026:
            t30226 = np.cos(phi)
            t30227 = t30226 ** 2
            t30228 = t30226 * t30227
            t30231 = t30228 ** 2
            t30232 = t30226 * t30231
            t30239 = t30232 ** 2
            t30237 = t30231 ** 2
            t30229 = t30227 ** 2
            t30230 = t30226 * t30229
            t30235 = t30230 ** 2
            t30233 = t30229 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (2331 * t30227 + 5005 * t30228 - 26281 * t30229 - 17919 * t30230 + 121367 * t30231 - 5423 * t30232 + 297521 * t30235 - 136963 * t30237 - 1827 * t30239 - 37 + (-270495 + 14384 * t30233) * t30233 + (127303 * t30233 - 239481 * t30235 + 180235 * t30237 - 49445 * t30239 - 275) * t30226) * np.cos((5 * phi1 - 11 * phi2))

        if Bindx == 3027:
            t30256 = np.sin(phi)
            t30253 = t30256 ** 2
            t30254 = t30256 * t30253
            t30242 = np.cos(phi)
            t30243 = t30242 ** 2
            t30245 = t30243 ** 2
            t30246 = t30242 * t30245
            t30251 = t30246 ** 2
            t30249 = t30245 ** 2
            t30244 = t30242 * t30243
            t30247 = t30244 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t30254 ** 2 * (355 * t30243 - 7840 * t30244 - 490 * t30245 + 42740 * t30246 - 22434 * t30247 + 78735 * t30249 - 67425 * t30251 - 5 + (-81240 * t30247 + 35670 * t30249 + 21576 * t30251 + 358) * t30242) * np.sin((5 * phi1 - 10 * phi2)) * ((1 + t30242) ** (-0.1e1 / 0.2e1)) * ((1 - t30242) ** (-0.1e1 / 0.2e1))

        if Bindx == 3028:
            t30257 = np.cos(phi)
            t30258 = t30257 ** 2
            t30259 = t30257 * t30258
            t30262 = t30259 ** 2
            t30263 = t30257 * t30262
            t30270 = t30263 ** 2
            t30268 = t30262 ** 2
            t30260 = t30258 ** 2
            t30261 = t30257 * t30260
            t30266 = t30261 ** 2
            t30264 = t30260 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (31789 * t30258 - 33215 * t30259 - 419699 * t30260 + 402409 * t30261 + 2056873 * t30262 - 2216387 * t30263 + 5022199 * t30266 - 1716897 * t30268 - 840333 * t30270 - 383 + (-4694525 + 560976 * t30264) * t30264 + (6016887 * t30264 - 8411949 * t30266 + 5818995 * t30268 - 1577745 * t30270 + 1005) * t30257) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 3029:
            t30288 = np.sin(phi)
            t30286 = t30288 ** 2
            t30273 = np.cos(phi)
            t30274 = t30273 ** 2
            t30275 = t30273 * t30274
            t30278 = t30275 ** 2
            t30284 = t30278 ** 2
            t30276 = t30274 ** 2
            t30277 = t30273 * t30276
            t30282 = t30277 ** 2
            t30280 = t30276 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * t30286 ** 2 * (6570 * t30274 + 43460 * t30275 - 99515 * t30276 - 306162 * t30277 + 580220 * t30278 - 1567215 * t30280 + 1934010 * t30282 - 876525 * t30284 - 73 + (777400 * t30278 - 637650 * t30280 - 203580 * t30282 + 350610 * t30284 - 1550) * t30273) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t30273) ** (-0.1e1 / 0.2e1)) * ((1 - t30273) ** (-0.1e1 / 0.2e1))

        if Bindx == 3030:
            t30289 = np.cos(phi)
            t30290 = t30289 ** 2
            t30291 = t30289 * t30290
            t30294 = t30291 ** 2
            t30295 = t30289 * t30294
            t30302 = t30295 ** 2
            t30300 = t30294 ** 2
            t30292 = t30290 ** 2
            t30293 = t30289 * t30292
            t30298 = t30293 ** 2
            t30296 = t30292 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (39105 * t30290 - 240821 * t30291 - 585935 * t30292 + 2401875 * t30293 + 3026989 * t30294 - 10931105 * t30295 + 4246515 * t30298 + 4191915 * t30300 - 7277985 * t30302 - 395 + (-6445089 + 2804880 * t30296) * t30296 + (26197965 * t30296 - 34140015 * t30298 + 22840545 * t30300 - 6135675 * t30302 + 7231) * t30289) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 3031:
            t30306 = np.cos(phi)
            t30307 = t30306 ** 2
            t30308 = t30306 * t30307
            t30311 = t30308 ** 2
            t30312 = t30306 * t30311
            t30319 = t30312 ** 2
            t30317 = t30311 ** 2
            t30309 = t30307 ** 2
            t30310 = t30306 * t30309
            t30315 = t30310 ** 2
            t30313 = t30309 ** 2
            t30305 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * t30305 ** 2 * (-483315 * t30307 - 723380 * t30308 + 8190315 * t30309 + 5575542 * t30310 - 52047275 * t30311 - 12552480 * t30312 + 158474025 * t30313 - 249496065 * t30315 + 195747825 * t30317 - 60480225 * t30319 + 4603 + (-8476650 * t30313 + 65929500 * t30315 - 81940950 * t30317 + 32256120 * t30319 + 22410) * t30306) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t30306) ** (-0.1e1 / 0.2e1)) * ((1 - t30306) ** (-0.1e1 / 0.2e1))

        if Bindx == 3032:
            t30321 = np.cos(phi)
            t30322 = t30321 ** 2
            t30323 = t30321 * t30322
            t30326 = t30323 ** 2
            t30327 = t30321 * t30326
            t30334 = t30327 ** 2
            t30332 = t30326 ** 2
            t30324 = t30322 ** 2
            t30325 = t30321 * t30324
            t30330 = t30325 ** 2
            t30328 = t30324 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-6105 * t30322 - 3702545 * t30323 + 530915 * t30324 + 39114075 * t30325 - 9587501 * t30326 - 182469925 * t30327 - 191666475 * t30330 + 293700225 * t30332 - 220460175 * t30334 + 55 + (62993205 + 64512240 * t30328) * t30328 + (439062525 * t30328 - 569159955 * t30330 + 377838825 * t30332 - 100800375 * t30334 + 100991) * t30321) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 3033:
            t30338 = np.cos(phi)
            t30339 = t30338 ** 2
            t30340 = t30338 * t30339
            t30343 = t30340 ** 2
            t30344 = t30338 * t30343
            t30351 = t30344 ** 2
            t30349 = t30343 ** 2
            t30341 = t30339 ** 2
            t30342 = t30338 * t30341
            t30347 = t30342 ** 2
            t30345 = t30341 ** 2
            t30337 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t30337 ** 2 * (-137885 * t30339 + 240020 * t30340 + 2511355 * t30341 - 2829904 * t30342 - 16780225 * t30343 + 15286260 * t30344 + 52579725 * t30345 - 83721495 * t30347 + 65682825 * t30349 - 20160075 * t30351 + 1199 + (-43414800 * t30345 + 66647100 * t30347 - 52026000 * t30349 + 16128060 * t30351 - 6160) * t30338) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t30338) ** (-0.1e1 / 0.2e1)) * ((1 - t30338) ** (-0.1e1 / 0.2e1))

        if Bindx == 3034:
            t30353 = np.cos(phi)
            t30354 = t30353 ** 2
            t30355 = t30353 * t30354
            t30358 = t30355 ** 2
            t30359 = t30353 * t30358
            t30366 = t30359 ** 2
            t30364 = t30358 ** 2
            t30356 = t30354 ** 2
            t30357 = t30353 * t30356
            t30362 = t30357 ** 2
            t30360 = t30356 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (-22253 * t30354 - 150931 * t30355 + 440407 * t30356 + 1678985 * t30357 - 3372369 * t30358 - 8135215 * t30359 - 27069735 * t30362 + 31863165 * t30364 - 19679835 * t30366 + 187 + (12877953 + 4962480 * t30360) * t30360 + (20056575 * t30360 - 26319705 * t30362 + 17518755 * t30364 - 4652325 * t30366 + 3861) * t30353) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 3035:
            t30384 = np.sin(phi)
            t30382 = t30384 ** 2
            t30369 = np.cos(phi)
            t30370 = t30369 ** 2
            t30371 = t30369 * t30370
            t30374 = t30371 ** 2
            t30380 = t30374 ** 2
            t30372 = t30370 ** 2
            t30373 = t30369 * t30372
            t30378 = t30373 ** 2
            t30376 = t30372 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * t30382 ** 2 * (9240 * t30370 - 65758 * t30371 - 168245 * t30372 + 701316 * t30373 + 1062600 * t30374 - 2903175 * t30376 + 3521760 * t30378 - 1550775 * t30380 - 77 + (-3111900 * t30374 + 6565350 * t30376 - 6543270 * t30378 + 2481240 * t30380 + 1694) * t30369) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t30369) ** (-0.1e1 / 0.2e1)) * ((1 - t30369) ** (-0.1e1 / 0.2e1))

        if Bindx == 3036:
            t30385 = np.cos(phi)
            t30386 = t30385 ** 2
            t30387 = t30385 * t30386
            t30390 = t30387 ** 2
            t30391 = t30385 * t30390
            t30398 = t30391 ** 2
            t30396 = t30390 ** 2
            t30388 = t30386 ** 2
            t30389 = t30385 * t30388
            t30394 = t30389 ** 2
            t30392 = t30388 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.741e3) * (-28413 * t30386 - 46585 * t30387 + 569723 * t30388 + 532455 * t30389 - 4331481 * t30390 - 2637525 * t30391 - 32494055 * t30394 + 36244665 * t30396 - 21040515 * t30398 + 231 + (16117365 + 4962480 * t30392) * t30392 + (6609625 * t30392 - 8761275 * t30394 + 5852925 * t30396 - 1550775 * t30398 + 1155) * t30385) * np.cos((5 * phi1 - phi2))

        if Bindx == 3037:
            t30410 = np.sin(phi)
            t30407 = t30410 ** 2
            t30408 = t30410 * t30407
            t30401 = np.cos(phi)
            t30402 = t30401 ** 2
            t30403 = t30402 ** 2
            t30405 = t30403 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t30401 * t30408 ** 2 * (-88550 * t30403 - 550275 * t30405 - 231 + (341550 * t30403 + 310155 * t30405 + 8855) * t30402) * np.sin((5 * phi1)) * ((1 + t30401) ** (-0.1e1 / 0.2e1)) * ((1 - t30401) ** (-0.1e1 / 0.2e1))

        if Bindx == 3038:
            t30411 = np.cos(phi)
            t30412 = t30411 ** 2
            t30413 = t30411 * t30412
            t30416 = t30413 ** 2
            t30417 = t30411 * t30416
            t30424 = t30417 ** 2
            t30422 = t30416 ** 2
            t30414 = t30412 ** 2
            t30415 = t30411 * t30414
            t30420 = t30415 ** 2
            t30418 = t30414 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.741e3) * (-28413 * t30412 + 46585 * t30413 + 569723 * t30414 - 532455 * t30415 - 4331481 * t30416 + 2637525 * t30417 - 32494055 * t30420 + 36244665 * t30422 - 21040515 * t30424 + 231 + (16117365 + 4962480 * t30418) * t30418 + (-6609625 * t30418 + 8761275 * t30420 - 5852925 * t30422 + 1550775 * t30424 - 1155) * t30411) * np.cos((5 * phi1 + phi2))

        if Bindx == 3039:
            t30442 = np.sin(phi)
            t30440 = t30442 ** 2
            t30427 = np.cos(phi)
            t30428 = t30427 ** 2
            t30429 = t30427 * t30428
            t30432 = t30429 ** 2
            t30438 = t30432 ** 2
            t30430 = t30428 ** 2
            t30431 = t30427 * t30430
            t30436 = t30431 ** 2
            t30434 = t30430 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * t30440 ** 2 * (-9240 * t30428 - 65758 * t30429 + 168245 * t30430 + 701316 * t30431 - 1062600 * t30432 + 2903175 * t30434 - 3521760 * t30436 + 1550775 * t30438 + 77 + (-3111900 * t30432 + 6565350 * t30434 - 6543270 * t30436 + 2481240 * t30438 + 1694) * t30427) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t30427) ** (-0.1e1 / 0.2e1)) * ((1 - t30427) ** (-0.1e1 / 0.2e1))

        if Bindx == 3040:
            t30443 = np.cos(phi)
            t30444 = t30443 ** 2
            t30445 = t30443 * t30444
            t30448 = t30445 ** 2
            t30449 = t30443 * t30448
            t30456 = t30449 ** 2
            t30454 = t30448 ** 2
            t30446 = t30444 ** 2
            t30447 = t30443 * t30446
            t30452 = t30447 ** 2
            t30450 = t30446 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * (-22253 * t30444 + 150931 * t30445 + 440407 * t30446 - 1678985 * t30447 - 3372369 * t30448 + 8135215 * t30449 - 27069735 * t30452 + 31863165 * t30454 - 19679835 * t30456 + 187 + (12877953 + 4962480 * t30450) * t30450 + (-20056575 * t30450 + 26319705 * t30452 - 17518755 * t30454 + 4652325 * t30456 - 3861) * t30443) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 3041:
            t30460 = np.cos(phi)
            t30461 = t30460 ** 2
            t30462 = t30460 * t30461
            t30465 = t30462 ** 2
            t30466 = t30460 * t30465
            t30473 = t30466 ** 2
            t30471 = t30465 ** 2
            t30463 = t30461 ** 2
            t30464 = t30460 * t30463
            t30469 = t30464 ** 2
            t30467 = t30463 ** 2
            t30459 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t30459 ** 2 * (137885 * t30461 + 240020 * t30462 - 2511355 * t30463 - 2829904 * t30464 + 16780225 * t30465 + 15286260 * t30466 - 52579725 * t30467 + 83721495 * t30469 - 65682825 * t30471 + 20160075 * t30473 - 1199 + (-43414800 * t30467 + 66647100 * t30469 - 52026000 * t30471 + 16128060 * t30473 - 6160) * t30460) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t30460) ** (-0.1e1 / 0.2e1)) * ((1 - t30460) ** (-0.1e1 / 0.2e1))

        if Bindx == 3042:
            t30475 = np.cos(phi)
            t30476 = t30475 ** 2
            t30477 = t30475 * t30476
            t30480 = t30477 ** 2
            t30481 = t30475 * t30480
            t30488 = t30481 ** 2
            t30486 = t30480 ** 2
            t30478 = t30476 ** 2
            t30479 = t30475 * t30478
            t30484 = t30479 ** 2
            t30482 = t30478 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-6105 * t30476 + 3702545 * t30477 + 530915 * t30478 - 39114075 * t30479 - 9587501 * t30480 + 182469925 * t30481 - 191666475 * t30484 + 293700225 * t30486 - 220460175 * t30488 + 55 + (62993205 + 64512240 * t30482) * t30482 + (-439062525 * t30482 + 569159955 * t30484 - 377838825 * t30486 + 100800375 * t30488 - 100991) * t30475) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 3043:
            t30492 = np.cos(phi)
            t30493 = t30492 ** 2
            t30494 = t30492 * t30493
            t30497 = t30494 ** 2
            t30498 = t30492 * t30497
            t30505 = t30498 ** 2
            t30503 = t30497 ** 2
            t30495 = t30493 ** 2
            t30496 = t30492 * t30495
            t30501 = t30496 ** 2
            t30499 = t30495 ** 2
            t30491 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * t30491 ** 2 * (483315 * t30493 - 723380 * t30494 - 8190315 * t30495 + 5575542 * t30496 + 52047275 * t30497 - 12552480 * t30498 - 158474025 * t30499 + 249496065 * t30501 - 195747825 * t30503 + 60480225 * t30505 - 4603 + (-8476650 * t30499 + 65929500 * t30501 - 81940950 * t30503 + 32256120 * t30505 + 22410) * t30492) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t30492) ** (-0.1e1 / 0.2e1)) * ((1 - t30492) ** (-0.1e1 / 0.2e1))

        if Bindx == 3044:
            t30507 = np.cos(phi)
            t30508 = t30507 ** 2
            t30509 = t30507 * t30508
            t30512 = t30509 ** 2
            t30513 = t30507 * t30512
            t30520 = t30513 ** 2
            t30518 = t30512 ** 2
            t30510 = t30508 ** 2
            t30511 = t30507 * t30510
            t30516 = t30511 ** 2
            t30514 = t30510 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (39105 * t30508 + 240821 * t30509 - 585935 * t30510 - 2401875 * t30511 + 3026989 * t30512 + 10931105 * t30513 + 4246515 * t30516 + 4191915 * t30518 - 7277985 * t30520 - 395 + (-6445089 + 2804880 * t30514) * t30514 + (-26197965 * t30514 + 34140015 * t30516 - 22840545 * t30518 + 6135675 * t30520 - 7231) * t30507) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 3045:
            t30538 = np.sin(phi)
            t30536 = t30538 ** 2
            t30523 = np.cos(phi)
            t30524 = t30523 ** 2
            t30525 = t30523 * t30524
            t30528 = t30525 ** 2
            t30534 = t30528 ** 2
            t30526 = t30524 ** 2
            t30527 = t30523 * t30526
            t30532 = t30527 ** 2
            t30530 = t30526 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * t30536 ** 2 * (-6570 * t30524 + 43460 * t30525 + 99515 * t30526 - 306162 * t30527 - 580220 * t30528 + 1567215 * t30530 - 1934010 * t30532 + 876525 * t30534 + 73 + (777400 * t30528 - 637650 * t30530 - 203580 * t30532 + 350610 * t30534 - 1550) * t30523) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t30523) ** (-0.1e1 / 0.2e1)) * ((1 - t30523) ** (-0.1e1 / 0.2e1))

        if Bindx == 3046:
            t30539 = np.cos(phi)
            t30540 = t30539 ** 2
            t30541 = t30539 * t30540
            t30544 = t30541 ** 2
            t30545 = t30539 * t30544
            t30552 = t30545 ** 2
            t30550 = t30544 ** 2
            t30542 = t30540 ** 2
            t30543 = t30539 * t30542
            t30548 = t30543 ** 2
            t30546 = t30542 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (31789 * t30540 + 33215 * t30541 - 419699 * t30542 - 402409 * t30543 + 2056873 * t30544 + 2216387 * t30545 + 5022199 * t30548 - 1716897 * t30550 - 840333 * t30552 - 383 + (-4694525 + 560976 * t30546) * t30546 + (-6016887 * t30546 + 8411949 * t30548 - 5818995 * t30550 + 1577745 * t30552 - 1005) * t30539) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 3047:
            t30569 = np.sin(phi)
            t30566 = t30569 ** 2
            t30567 = t30569 * t30566
            t30555 = np.cos(phi)
            t30556 = t30555 ** 2
            t30558 = t30556 ** 2
            t30559 = t30555 * t30558
            t30564 = t30559 ** 2
            t30562 = t30558 ** 2
            t30557 = t30555 * t30556
            t30560 = t30557 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t30567 ** 2 * (-355 * t30556 - 7840 * t30557 + 490 * t30558 + 42740 * t30559 + 22434 * t30560 - 78735 * t30562 + 67425 * t30564 + 5 + (-81240 * t30560 + 35670 * t30562 + 21576 * t30564 + 358) * t30555) * np.sin((5 * phi1 + 10 * phi2)) * ((1 + t30555) ** (-0.1e1 / 0.2e1)) * ((1 - t30555) ** (-0.1e1 / 0.2e1))

        if Bindx == 3048:
            t30570 = np.cos(phi)
            t30571 = t30570 ** 2
            t30572 = t30570 * t30571
            t30575 = t30572 ** 2
            t30576 = t30570 * t30575
            t30583 = t30576 ** 2
            t30581 = t30575 ** 2
            t30573 = t30571 ** 2
            t30574 = t30570 * t30573
            t30579 = t30574 ** 2
            t30577 = t30573 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (2331 * t30571 - 5005 * t30572 - 26281 * t30573 + 17919 * t30574 + 121367 * t30575 + 5423 * t30576 + 297521 * t30579 - 136963 * t30581 - 1827 * t30583 - 37 + (-270495 + 14384 * t30577) * t30577 + (-127303 * t30577 + 239481 * t30579 - 180235 * t30581 + 49445 * t30583 + 275) * t30570) * np.cos((5 * phi1 + 11 * phi2))

        if Bindx == 3049:
            t30598 = np.sin(phi)
            t30595 = t30598 ** 2
            t30596 = t30595 ** 2
            t30586 = np.cos(phi)
            t30587 = t30586 ** 2
            t30589 = t30587 ** 2
            t30593 = t30589 ** 2
            t30588 = t30586 * t30587
            t30591 = t30588 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.897e3) * t30596 ** 2 * (1104 * t30587 + 2380 * t30588 - 4494 * t30589 - 1624 * t30591 + 13485 * t30593 - 23 + (-12348 * t30589 + 14964 * t30591 + 3596 * t30593 - 144) * t30586) * np.sin((5 * phi1 + 12 * phi2)) * ((1 + t30586) ** (-0.1e1 / 0.2e1)) * ((1 - t30586) ** (-0.1e1 / 0.2e1))

        if Bindx == 3050:
            t30599 = np.cos(phi)
            t30600 = t30599 ** 2
            t30601 = t30599 * t30600
            t30604 = t30601 ** 2
            t30605 = t30599 * t30604
            t30612 = t30605 ** 2
            t30610 = t30604 ** 2
            t30602 = t30600 ** 2
            t30603 = t30599 * t30602
            t30608 = t30603 ** 2
            t30606 = t30602 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * (39 * t30600 - 1207 * t30601 - 1301 * t30602 + 4677 * t30603 + 7571 * t30604 - 6563 * t30605 + 19093 * t30608 - 9127 * t30610 + 753 * t30612 - 1 + (-17523 + 496 * t30606) * t30606 + (227 * t30606 + 7995 * t30608 - 7241 * t30610 + 2015 * t30612 + 97) * t30599) * np.cos((5 * phi1 + 13 * phi2))

        if Bindx == 3051:
            t30626 = np.sin(phi)
            t30622 = t30626 ** 2
            t30624 = t30626 * t30622 ** 2
            t30615 = np.cos(phi)
            t30616 = t30615 ** 2
            t30617 = t30615 * t30616
            t30620 = t30617 ** 2
            t30618 = t30616 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * t30624 ** 2 * (-357 * t30616 - 140 * t30617 + 1015 * t30618 + 1085 * t30620 + 17 + (1722 * t30618 + 248 * t30620 - 70) * t30615) * np.sin((5 * phi1 + 14 * phi2)) * ((1 + t30615) ** (-0.1e1 / 0.2e1)) * ((1 - t30615) ** (-0.1e1 / 0.2e1))

        if Bindx == 3052:
            t30627 = np.cos(phi)
            t30628 = t30627 ** 2
            t30629 = t30627 * t30628
            t30632 = t30629 ** 2
            t30633 = t30627 * t30632
            t30640 = t30633 ** 2
            t30638 = t30632 ** 2
            t30630 = t30628 ** 2
            t30631 = t30627 * t30630
            t30636 = t30631 ** 2
            t30634 = t30630 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * (-55 * t30628 - 155 * t30629 + 65 * t30630 + 565 * t30631 + 309 * t30632 - 815 * t30633 + 1035 * t30636 - 485 * t30638 + 55 * t30640 + 5 + (-945 + 16 * t30634) * t30634 + (395 * t30634 + 191 * t30636 - 265 * t30638 + 75 * t30640 + 9) * t30627) * np.cos((5 * phi1 + 15 * phi2))

        if Bindx == 3053:
            t30643 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.4032015e7) * ((1 - t30643) ** (0.11e2 / 0.2e1)) * ((1 + t30643) ** (0.21e2 / 0.2e1)) * np.sin((5 * phi1 + 16 * phi2))

        if Bindx == 3054:
            t30644 = np.cos(phi)
            t30645 = t30644 ** 2
            t30646 = t30644 * t30645
            t30649 = t30646 ** 2
            t30650 = t30644 * t30649
            t30656 = t30650 ** 2
            t30657 = t30644 * t30656
            t30654 = t30649 ** 2
            t30647 = t30645 ** 2
            t30648 = t30644 * t30647
            t30652 = t30648 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * np.cos((6 * phi1 - 16 * phi2)) * (-10 * t30646 + 50 * t30647 - 34 * t30648 - 66 * t30649 + 110 * t30650 + 66 * t30652 - 50 * t30654 + 10 * t30656 - 6 * t30657 - 1 + (-110 * t30650 - 10) * t30645 + (34 * t30652 + 10 * t30654 + t30657 + 6) * t30644)

        if Bindx == 3055:
            t30670 = np.sin(phi)
            t30666 = t30670 ** 2
            t30668 = t30670 * t30666 ** 2
            t30659 = np.cos(phi)
            t30660 = t30659 ** 2
            t30661 = t30659 * t30660
            t30664 = t30661 ** 2
            t30662 = t30660 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * t30668 ** 2 * (-3 * t30660 + 60 * t30661 - 115 * t30662 - 45 * t30664 + 3 + (102 * t30662 + 8 * t30664 - 10) * t30659) * np.sin((6 * phi1 - 15 * phi2)) * ((1 + t30659) ** (-0.1e1 / 0.2e1)) * ((1 - t30659) ** (-0.1e1 / 0.2e1))

        if Bindx == 3056:
            t30671 = np.cos(phi)
            t30672 = t30671 ** 2
            t30673 = t30671 * t30672
            t30676 = t30673 ** 2
            t30677 = t30671 * t30676
            t30684 = t30677 ** 2
            t30682 = t30676 ** 2
            t30674 = t30672 ** 2
            t30675 = t30671 * t30674
            t30680 = t30675 ** 2
            t30678 = t30674 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.130065e6) * (-280 * t30672 + 335 * t30673 + 1190 * t30674 - 2599 * t30675 - 924 * t30676 + 6215 * t30677 + 6336 * t30680 - 4310 * t30682 + 820 * t30684 + 14 + (-2970 + 124 * t30678) * t30678 + (-5885 * t30678 + 1141 * t30680 + 1435 * t30682 - 651 * t30684 + 9) * t30671) * np.cos((6 * phi1 - 14 * phi2))

        if Bindx == 3057:
            t30699 = np.sin(phi)
            t30696 = t30699 ** 2
            t30697 = t30696 ** 2
            t30687 = np.cos(phi)
            t30688 = t30687 ** 2
            t30690 = t30688 ** 2
            t30694 = t30690 ** 2
            t30689 = t30687 * t30688
            t30692 = t30689 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.26013e5) * t30697 ** 2 * (-150 * t30688 - 266 * t30689 + 1092 * t30690 - 1274 * t30692 - 1209 * t30694 + 5 + (-630 * t30690 + 2130 * t30692 + 248 * t30694 + 54) * t30687) * np.sin((6 * phi1 - 13 * phi2)) * ((1 + t30687) ** (-0.1e1 / 0.2e1)) * ((1 - t30687) ** (-0.1e1 / 0.2e1))

        if Bindx == 3058:
            t30700 = np.cos(phi)
            t30701 = t30700 ** 2
            t30702 = t30700 * t30701
            t30705 = t30702 ** 2
            t30706 = t30700 * t30705
            t30713 = t30706 ** 2
            t30711 = t30705 ** 2
            t30703 = t30701 ** 2
            t30704 = t30700 * t30703
            t30709 = t30704 ** 2
            t30707 = t30703 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.897e3) * (-276 * t30701 + 2859 * t30702 - 104 * t30703 - 15009 * t30704 + 11484 * t30705 + 32351 * t30706 + 63844 * t30709 - 40200 * t30711 + 6612 * t30713 + 6 + (-43164 + 1798 * t30707) * t30707 + (-24783 * t30707 - 8751 * t30709 + 21605 * t30711 - 8091 * t30713 - 181) * t30700) * np.cos((6 * phi1 - 12 * phi2))

        if Bindx == 3059:
            t30730 = np.sin(phi)
            t30727 = t30730 ** 2
            t30728 = t30730 * t30727
            t30716 = np.cos(phi)
            t30717 = t30716 ** 2
            t30719 = t30717 ** 2
            t30720 = t30716 * t30719
            t30725 = t30720 ** 2
            t30723 = t30719 ** 2
            t30718 = t30716 * t30717
            t30721 = t30718 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t30728 ** 2 * (1705 * t30717 - 1760 * t30718 - 11550 * t30719 + 17468 * t30720 + 19162 * t30721 + 11165 * t30723 - 29667 * t30725 - 31 + (-48840 * t30721 + 35090 * t30723 + 7192 * t30725 + 66) * t30716) * np.sin((6 * phi1 - 11 * phi2)) * ((1 + t30716) ** (-0.1e1 / 0.2e1)) * ((1 - t30716) ** (-0.1e1 / 0.2e1))

        if Bindx == 3060:
            t30731 = np.cos(phi)
            t30732 = t30731 ** 2
            t30733 = t30731 * t30732
            t30736 = t30733 ** 2
            t30737 = t30731 * t30736
            t30744 = t30737 ** 2
            t30742 = t30736 ** 2
            t30734 = t30732 ** 2
            t30735 = t30731 * t30734
            t30740 = t30735 ** 2
            t30738 = t30734 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (952 * t30732 + 4075 * t30733 - 12422 * t30734 - 20963 * t30735 + 67804 * t30736 + 32659 * t30737 + 232672 * t30740 - 134346 * t30742 + 12876 * t30744 - 14 + (-178310 + 10788 * t30738) * t30738 + (25311 * t30738 - 124407 * t30740 + 123975 * t30742 - 40455 * t30744 - 195) * t30731) * np.cos((6 * phi1 - 10 * phi2))

        if Bindx == 3061:
            t30762 = np.sin(phi)
            t30760 = t30762 ** 2
            t30747 = np.cos(phi)
            t30748 = t30747 ** 2
            t30749 = t30747 * t30748
            t30752 = t30749 ** 2
            t30758 = t30752 ** 2
            t30750 = t30748 ** 2
            t30751 = t30747 * t30750
            t30756 = t30751 ** 2
            t30754 = t30750 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.345e3) * t30760 ** 2 * (-8436 * t30748 + 79134 * t30749 + 66275 * t30750 - 545028 * t30751 + 4752 * t30752 - 799227 * t30754 + 1642212 * t30756 - 946647 * t30758 + 111 + (1538108 * t30752 - 1763190 * t30754 + 454662 * t30756 + 280488 * t30758 - 3214) * t30747) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t30747) ** (-0.1e1 / 0.2e1)) * ((1 - t30747) ** (-0.1e1 / 0.2e1))

        if Bindx == 3062:
            t30763 = np.cos(phi)
            t30764 = t30763 ** 2
            t30765 = t30763 * t30764
            t30768 = t30765 ** 2
            t30769 = t30763 * t30768
            t30776 = t30769 ** 2
            t30774 = t30768 ** 2
            t30766 = t30764 ** 2
            t30767 = t30763 * t30766
            t30772 = t30767 ** 2
            t30770 = t30766 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (8342 * t30764 - 2317 * t30765 - 115990 * t30766 + 58247 * t30767 + 607838 * t30768 - 448657 * t30769 + 1811810 * t30772 - 832650 * t30774 - 147030 * t30776 - 97 + (-1507528 + 175305 * t30770) * t30770 + (1467345 * t30770 - 2330055 * t30772 + 1781325 * t30774 - 525915 * t30776 + 27) * t30763) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 3063:
            t30780 = np.cos(phi)
            t30781 = t30780 ** 2
            t30782 = t30780 * t30781
            t30785 = t30782 ** 2
            t30786 = t30780 * t30785
            t30793 = t30786 ** 2
            t30791 = t30785 ** 2
            t30783 = t30781 ** 2
            t30784 = t30780 * t30783
            t30789 = t30784 ** 2
            t30787 = t30783 ** 2
            t30779 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.115e3) * t30779 ** 2 * (-18879 * t30781 - 172060 * t30782 + 318675 * t30783 + 1391082 * t30784 - 2196271 * t30785 - 4568256 * t30786 + 7464105 * t30787 - 13018005 * t30789 + 11123385 * t30791 - 3681405 * t30793 + 203 + (6576570 * t30787 - 2964780 * t30789 - 1662570 * t30791 + 1402440 * t30793 + 5766) * t30780) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t30780) ** (-0.1e1 / 0.2e1)) * ((1 - t30780) ** (-0.1e1 / 0.2e1))

        if Bindx == 3064:
            t30795 = np.cos(phi)
            t30796 = t30795 ** 2
            t30797 = t30795 * t30796
            t30800 = t30797 ** 2
            t30801 = t30795 * t30800
            t30808 = t30801 ** 2
            t30806 = t30800 ** 2
            t30798 = t30796 ** 2
            t30799 = t30795 * t30798
            t30804 = t30799 ** 2
            t30802 = t30798 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (227400 * t30796 - 1247925 * t30797 - 3468010 * t30798 + 12674109 * t30799 + 18442116 * t30800 - 58935085 * t30801 + 33153120 * t30804 + 16011450 * t30806 - 39019500 * t30808 - 2274 + (-41464170 + 16128060 * t30802) * t30802 + (144532575 * t30802 - 192796695 * t30804 + 132015975 * t30806 - 36288135 * t30808 + 36989) * t30795) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 3065:
            t30812 = np.cos(phi)
            t30813 = t30812 ** 2
            t30814 = t30812 * t30813
            t30817 = t30814 ** 2
            t30818 = t30812 * t30817
            t30825 = t30818 ** 2
            t30823 = t30817 ** 2
            t30815 = t30813 ** 2
            t30816 = t30812 * t30815
            t30821 = t30816 ** 2
            t30819 = t30815 ** 2
            t30811 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * t30811 ** 2 * (-483315 * t30813 - 723380 * t30814 + 8190315 * t30815 + 5575542 * t30816 - 52047275 * t30817 - 12552480 * t30818 + 158474025 * t30819 - 249496065 * t30821 + 195747825 * t30823 - 60480225 * t30825 + 4603 + (-8476650 * t30819 + 65929500 * t30821 - 81940950 * t30823 + 32256120 * t30825 + 22410) * t30812) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t30812) ** (-0.1e1 / 0.2e1)) * ((1 - t30812) ** (-0.1e1 / 0.2e1))

        if Bindx == 3066:
            t30827 = np.cos(phi)
            t30828 = t30827 ** 2
            t30829 = t30827 * t30828
            t30832 = t30829 ** 2
            t30833 = t30827 * t30832
            t30840 = t30833 ** 2
            t30838 = t30832 ** 2
            t30830 = t30828 ** 2
            t30831 = t30827 * t30830
            t30836 = t30831 ** 2
            t30834 = t30830 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.7e1) * (-6820 * t30828 - 487715 * t30829 + 175640 * t30830 + 5090953 * t30831 - 1941492 * t30832 - 23424695 * t30833 - 27968460 * t30836 + 40006200 * t30838 - 28614300 * t30840 + 62 + (10285140 + 8064030 * t30834) * t30834 + (55508775 * t30834 - 70777785 * t30836 + 46173075 * t30838 - 12096045 * t30840 + 13437) * t30827) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 3067:
            t30858 = np.sin(phi)
            t30856 = t30858 ** 2
            t30843 = np.cos(phi)
            t30844 = t30843 ** 2
            t30845 = t30843 * t30844
            t30848 = t30845 ** 2
            t30854 = t30848 ** 2
            t30846 = t30844 ** 2
            t30847 = t30843 * t30846
            t30852 = t30847 ** 2
            t30850 = t30846 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.455e3) * t30856 ** 2 * (22512 * t30844 - 53550 * t30845 - 382697 * t30846 + 562212 * t30847 + 2260440 * t30848 - 5797035 * t30850 + 6643320 * t30852 - 2791395 * t30854 - 201 + (-2548860 * t30848 + 5665590 * t30850 - 6063030 * t30852 + 2481240 * t30854 + 1454) * t30843) * np.sin((6 * phi1 - 3 * phi2)) * ((1 - t30843) ** (-0.1e1 / 0.2e1)) * ((1 + t30843) ** (-0.1e1 / 0.2e1))

        if Bindx == 3068:
            t30859 = np.cos(phi)
            t30860 = t30859 ** 2
            t30861 = t30859 * t30860
            t30864 = t30861 ** 2
            t30865 = t30859 * t30864
            t30872 = t30865 ** 2
            t30870 = t30864 ** 2
            t30862 = t30860 ** 2
            t30863 = t30859 * t30862
            t30868 = t30863 ** 2
            t30866 = t30862 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1235e4) * (-8120 * t30860 - 37555 * t30861 + 155134 * t30862 + 405419 * t30863 - 1136268 * t30864 - 1900651 * t30865 - 8169600 * t30868 + 9042450 * t30870 - 5242620 * t30872 + 70 + (4118334 + 1240620 * t30866) * t30866 + (4521225 * t30866 - 5710785 * t30868 + 3651825 * t30870 - 930465 * t30872 + 987) * t30859) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 3069:
            t30889 = np.sin(phi)
            t30886 = t30889 ** 2
            t30887 = t30889 * t30886
            t30875 = np.cos(phi)
            t30876 = t30875 ** 2
            t30878 = t30876 ** 2
            t30879 = t30875 * t30878
            t30884 = t30879 ** 2
            t30882 = t30878 ** 2
            t30877 = t30875 * t30876
            t30880 = t30877 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.741e3) * t30887 ** 2 * (-7245 * t30876 + 90160 * t30877 + 120750 * t30878 - 853300 * t30879 - 652050 * t30880 + 1350675 * t30882 - 930465 * t30884 + 63 + (3105000 * t30880 - 4702350 * t30882 + 2481240 * t30884 - 2478) * t30875) * np.sin((6 * phi1 - phi2)) * ((1 - t30875) ** (-0.1e1 / 0.2e1)) * ((1 + t30875) ** (-0.1e1 / 0.2e1))

        if Bindx == 3070:
            t30890 = np.cos(phi)
            t30891 = t30890 ** 2
            t30892 = t30891 ** 2
            t30893 = t30891 * t30892
            t30896 = t30893 ** 2
            t30894 = t30892 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t30892 - 345366 * t30893 + 2498490 * t30896 + 21 + (1225440 + 310155 * t30894) * t30894 + (-2353130 * t30894 - 1380690 * t30896 - 2478) * t30891) * np.cos((6 * phi1))

        if Bindx == 3071:
            t30913 = np.sin(phi)
            t30910 = t30913 ** 2
            t30911 = t30913 * t30910
            t30899 = np.cos(phi)
            t30900 = t30899 ** 2
            t30902 = t30900 ** 2
            t30903 = t30899 * t30902
            t30908 = t30903 ** 2
            t30906 = t30902 ** 2
            t30901 = t30899 * t30900
            t30904 = t30901 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.741e3) * t30911 ** 2 * (7245 * t30900 + 90160 * t30901 - 120750 * t30902 - 853300 * t30903 + 652050 * t30904 - 1350675 * t30906 + 930465 * t30908 - 63 + (3105000 * t30904 - 4702350 * t30906 + 2481240 * t30908 - 2478) * t30899) * np.sin((6 * phi1 + phi2)) * ((1 - t30899) ** (-0.1e1 / 0.2e1)) * ((1 + t30899) ** (-0.1e1 / 0.2e1))

        if Bindx == 3072:
            t30914 = np.cos(phi)
            t30915 = t30914 ** 2
            t30916 = t30914 * t30915
            t30919 = t30916 ** 2
            t30920 = t30914 * t30919
            t30927 = t30920 ** 2
            t30925 = t30919 ** 2
            t30917 = t30915 ** 2
            t30918 = t30914 * t30917
            t30923 = t30918 ** 2
            t30921 = t30917 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1235e4) * (-8120 * t30915 + 37555 * t30916 + 155134 * t30917 - 405419 * t30918 - 1136268 * t30919 + 1900651 * t30920 - 8169600 * t30923 + 9042450 * t30925 - 5242620 * t30927 + 70 + (4118334 + 1240620 * t30921) * t30921 + (-4521225 * t30921 + 5710785 * t30923 - 3651825 * t30925 + 930465 * t30927 - 987) * t30914) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 3073:
            t30945 = np.sin(phi)
            t30943 = t30945 ** 2
            t30930 = np.cos(phi)
            t30931 = t30930 ** 2
            t30932 = t30930 * t30931
            t30935 = t30932 ** 2
            t30941 = t30935 ** 2
            t30933 = t30931 ** 2
            t30934 = t30930 * t30933
            t30939 = t30934 ** 2
            t30937 = t30933 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.455e3) * t30943 ** 2 * (-22512 * t30931 - 53550 * t30932 + 382697 * t30933 + 562212 * t30934 - 2260440 * t30935 + 5797035 * t30937 - 6643320 * t30939 + 2791395 * t30941 + 201 + (-2548860 * t30935 + 5665590 * t30937 - 6063030 * t30939 + 2481240 * t30941 + 1454) * t30930) * np.sin((6 * phi1 + 3 * phi2)) * ((1 - t30930) ** (-0.1e1 / 0.2e1)) * ((1 + t30930) ** (-0.1e1 / 0.2e1))

        if Bindx == 3074:
            t30946 = np.cos(phi)
            t30947 = t30946 ** 2
            t30948 = t30946 * t30947
            t30951 = t30948 ** 2
            t30952 = t30946 * t30951
            t30959 = t30952 ** 2
            t30957 = t30951 ** 2
            t30949 = t30947 ** 2
            t30950 = t30946 * t30949
            t30955 = t30950 ** 2
            t30953 = t30949 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.7e1) * (-6820 * t30947 + 487715 * t30948 + 175640 * t30949 - 5090953 * t30950 - 1941492 * t30951 + 23424695 * t30952 - 27968460 * t30955 + 40006200 * t30957 - 28614300 * t30959 + 62 + (10285140 + 8064030 * t30953) * t30953 + (-55508775 * t30953 + 70777785 * t30955 - 46173075 * t30957 + 12096045 * t30959 - 13437) * t30946) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 3075:
            t30963 = np.cos(phi)
            t30964 = t30963 ** 2
            t30965 = t30963 * t30964
            t30968 = t30965 ** 2
            t30969 = t30963 * t30968
            t30976 = t30969 ** 2
            t30974 = t30968 ** 2
            t30966 = t30964 ** 2
            t30967 = t30963 * t30966
            t30972 = t30967 ** 2
            t30970 = t30966 ** 2
            t30962 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * t30962 ** 2 * (483315 * t30964 - 723380 * t30965 - 8190315 * t30966 + 5575542 * t30967 + 52047275 * t30968 - 12552480 * t30969 - 158474025 * t30970 + 249496065 * t30972 - 195747825 * t30974 + 60480225 * t30976 - 4603 + (-8476650 * t30970 + 65929500 * t30972 - 81940950 * t30974 + 32256120 * t30976 + 22410) * t30963) * np.sin((6 * phi1 + 5 * phi2)) * ((1 - t30963) ** (-0.1e1 / 0.2e1)) * ((1 + t30963) ** (-0.1e1 / 0.2e1))

        if Bindx == 3076:
            t30978 = np.cos(phi)
            t30979 = t30978 ** 2
            t30980 = t30978 * t30979
            t30983 = t30980 ** 2
            t30984 = t30978 * t30983
            t30991 = t30984 ** 2
            t30989 = t30983 ** 2
            t30981 = t30979 ** 2
            t30982 = t30978 * t30981
            t30987 = t30982 ** 2
            t30985 = t30981 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (227400 * t30979 + 1247925 * t30980 - 3468010 * t30981 - 12674109 * t30982 + 18442116 * t30983 + 58935085 * t30984 + 33153120 * t30987 + 16011450 * t30989 - 39019500 * t30991 - 2274 + (-41464170 + 16128060 * t30985) * t30985 + (-144532575 * t30985 + 192796695 * t30987 - 132015975 * t30989 + 36288135 * t30991 - 36989) * t30978) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 3077:
            t30995 = np.cos(phi)
            t30996 = t30995 ** 2
            t30997 = t30995 * t30996
            t31000 = t30997 ** 2
            t31001 = t30995 * t31000
            t31008 = t31001 ** 2
            t31006 = t31000 ** 2
            t30998 = t30996 ** 2
            t30999 = t30995 * t30998
            t31004 = t30999 ** 2
            t31002 = t30998 ** 2
            t30994 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.115e3) * t30994 ** 2 * (18879 * t30996 - 172060 * t30997 - 318675 * t30998 + 1391082 * t30999 + 2196271 * t31000 - 4568256 * t31001 - 7464105 * t31002 + 13018005 * t31004 - 11123385 * t31006 + 3681405 * t31008 - 203 + (6576570 * t31002 - 2964780 * t31004 - 1662570 * t31006 + 1402440 * t31008 + 5766) * t30995) * np.sin((6 * phi1 + 7 * phi2)) * ((1 - t30995) ** (-0.1e1 / 0.2e1)) * ((1 + t30995) ** (-0.1e1 / 0.2e1))

        if Bindx == 3078:
            t31010 = np.cos(phi)
            t31011 = t31010 ** 2
            t31012 = t31010 * t31011
            t31015 = t31012 ** 2
            t31016 = t31010 * t31015
            t31023 = t31016 ** 2
            t31021 = t31015 ** 2
            t31013 = t31011 ** 2
            t31014 = t31010 * t31013
            t31019 = t31014 ** 2
            t31017 = t31013 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (8342 * t31011 + 2317 * t31012 - 115990 * t31013 - 58247 * t31014 + 607838 * t31015 + 448657 * t31016 + 1811810 * t31019 - 832650 * t31021 - 147030 * t31023 - 97 + (-1507528 + 175305 * t31017) * t31017 + (-1467345 * t31017 + 2330055 * t31019 - 1781325 * t31021 + 525915 * t31023 - 27) * t31010) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 3079:
            t31041 = np.sin(phi)
            t31039 = t31041 ** 2
            t31026 = np.cos(phi)
            t31027 = t31026 ** 2
            t31028 = t31026 * t31027
            t31031 = t31028 ** 2
            t31037 = t31031 ** 2
            t31029 = t31027 ** 2
            t31030 = t31026 * t31029
            t31035 = t31030 ** 2
            t31033 = t31029 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.345e3) * t31039 ** 2 * (8436 * t31027 + 79134 * t31028 - 66275 * t31029 - 545028 * t31030 - 4752 * t31031 + 799227 * t31033 - 1642212 * t31035 + 946647 * t31037 - 111 + (1538108 * t31031 - 1763190 * t31033 + 454662 * t31035 + 280488 * t31037 - 3214) * t31026) * np.sin((6 * phi1 + 9 * phi2)) * ((1 - t31026) ** (-0.1e1 / 0.2e1)) * ((1 + t31026) ** (-0.1e1 / 0.2e1))

        if Bindx == 3080:
            t31042 = np.cos(phi)
            t31043 = t31042 ** 2
            t31044 = t31042 * t31043
            t31047 = t31044 ** 2
            t31048 = t31042 * t31047
            t31055 = t31048 ** 2
            t31053 = t31047 ** 2
            t31045 = t31043 ** 2
            t31046 = t31042 * t31045
            t31051 = t31046 ** 2
            t31049 = t31045 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (952 * t31043 - 4075 * t31044 - 12422 * t31045 + 20963 * t31046 + 67804 * t31047 - 32659 * t31048 + 232672 * t31051 - 134346 * t31053 + 12876 * t31055 - 14 + (-178310 + 10788 * t31049) * t31049 + (-25311 * t31049 + 124407 * t31051 - 123975 * t31053 + 40455 * t31055 + 195) * t31042) * np.cos((6 * phi1 + 10 * phi2))

        if Bindx == 3081:
            t31072 = np.sin(phi)
            t31069 = t31072 ** 2
            t31070 = t31072 * t31069
            t31058 = np.cos(phi)
            t31059 = t31058 ** 2
            t31061 = t31059 ** 2
            t31062 = t31058 * t31061
            t31067 = t31062 ** 2
            t31065 = t31061 ** 2
            t31060 = t31058 * t31059
            t31063 = t31060 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t31070 ** 2 * (-1705 * t31059 - 1760 * t31060 + 11550 * t31061 + 17468 * t31062 - 19162 * t31063 - 11165 * t31065 + 29667 * t31067 + 31 + (-48840 * t31063 + 35090 * t31065 + 7192 * t31067 + 66) * t31058) * np.sin((6 * phi1 + 11 * phi2)) * ((1 - t31058) ** (-0.1e1 / 0.2e1)) * ((1 + t31058) ** (-0.1e1 / 0.2e1))

        if Bindx == 3082:
            t31073 = np.cos(phi)
            t31074 = t31073 ** 2
            t31075 = t31073 * t31074
            t31078 = t31075 ** 2
            t31079 = t31073 * t31078
            t31086 = t31079 ** 2
            t31084 = t31078 ** 2
            t31076 = t31074 ** 2
            t31077 = t31073 * t31076
            t31082 = t31077 ** 2
            t31080 = t31076 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.897e3) * (-276 * t31074 - 2859 * t31075 - 104 * t31076 + 15009 * t31077 + 11484 * t31078 - 32351 * t31079 + 63844 * t31082 - 40200 * t31084 + 6612 * t31086 + 6 + (-43164 + 1798 * t31080) * t31080 + (24783 * t31080 + 8751 * t31082 - 21605 * t31084 + 8091 * t31086 + 181) * t31073) * np.cos((6 * phi1 + 12 * phi2))

        if Bindx == 3083:
            t31101 = np.sin(phi)
            t31098 = t31101 ** 2
            t31099 = t31098 ** 2
            t31089 = np.cos(phi)
            t31090 = t31089 ** 2
            t31092 = t31090 ** 2
            t31096 = t31092 ** 2
            t31091 = t31089 * t31090
            t31094 = t31091 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.26013e5) * t31099 ** 2 * (150 * t31090 - 266 * t31091 - 1092 * t31092 + 1274 * t31094 + 1209 * t31096 - 5 + (-630 * t31092 + 2130 * t31094 + 248 * t31096 + 54) * t31089) * np.sin((6 * phi1 + 13 * phi2)) * ((1 - t31089) ** (-0.1e1 / 0.2e1)) * ((1 + t31089) ** (-0.1e1 / 0.2e1))

        if Bindx == 3084:
            t31102 = np.cos(phi)
            t31103 = t31102 ** 2
            t31104 = t31102 * t31103
            t31107 = t31104 ** 2
            t31108 = t31102 * t31107
            t31115 = t31108 ** 2
            t31113 = t31107 ** 2
            t31105 = t31103 ** 2
            t31106 = t31102 * t31105
            t31111 = t31106 ** 2
            t31109 = t31105 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.130065e6) * (-280 * t31103 - 335 * t31104 + 1190 * t31105 + 2599 * t31106 - 924 * t31107 - 6215 * t31108 + 6336 * t31111 - 4310 * t31113 + 820 * t31115 + 14 + (-2970 + 124 * t31109) * t31109 + (5885 * t31109 - 1141 * t31111 - 1435 * t31113 + 651 * t31115 - 9) * t31102) * np.cos((6 * phi1 + 14 * phi2))

        if Bindx == 3085:
            t31129 = np.sin(phi)
            t31125 = t31129 ** 2
            t31127 = t31129 * t31125 ** 2
            t31118 = np.cos(phi)
            t31119 = t31118 ** 2
            t31120 = t31118 * t31119
            t31123 = t31120 ** 2
            t31121 = t31119 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * t31127 ** 2 * (3 * t31119 + 60 * t31120 + 115 * t31121 + 45 * t31123 - 3 + (102 * t31121 + 8 * t31123 - 10) * t31118) * np.sin((6 * phi1 + 15 * phi2)) * ((1 - t31118) ** (-0.1e1 / 0.2e1)) * ((1 + t31118) ** (-0.1e1 / 0.2e1))

        if Bindx == 3086:
            t31130 = np.cos(phi)
            t31131 = t31130 ** 2
            t31132 = t31130 * t31131
            t31135 = t31132 ** 2
            t31136 = t31130 * t31135
            t31142 = t31136 ** 2
            t31143 = t31130 * t31142
            t31140 = t31135 ** 2
            t31133 = t31131 ** 2
            t31134 = t31130 * t31133
            t31138 = t31134 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * np.cos((6 * phi1 + 16 * phi2)) * (10 * t31132 + 50 * t31133 + 34 * t31134 - 66 * t31135 - 110 * t31136 + 66 * t31138 - 50 * t31140 + 10 * t31142 + 6 * t31143 - 1 + (110 * t31136 - 10) * t31131 + (-34 * t31138 - 10 * t31140 + t31143 - 6) * t31130)

        if Bindx == 3087:
            t31145 = np.cos(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.35061e5) * ((1 - t31145) ** (0.23e2 / 0.2e1)) * ((1 + t31145) ** (0.9e1 / 0.2e1)) * np.sin((7 * phi1 - 16 * phi2))

        if Bindx == 3088:
            t31146 = np.cos(phi)
            t31147 = t31146 ** 2
            t31148 = t31146 * t31147
            t31151 = t31148 ** 2
            t31152 = t31146 * t31151
            t31159 = t31152 ** 2
            t31157 = t31151 ** 2
            t31149 = t31147 ** 2
            t31150 = t31146 * t31149
            t31155 = t31150 ** 2
            t31153 = t31149 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.35061e5) * (-7 * t31147 - 223 * t31148 + 413 * t31149 + 149 * t31150 - 1155 * t31151 + 869 * t31152 + 363 * t31155 - 737 * t31157 + 223 * t31159 - 7 + (891 + 16 * t31153) * t31153 + (-1661 * t31153 + 931 * t31155 + 7 * t31157 - 105 * t31159 + 33) * t31146) * np.cos((7 * phi1 - 15 * phi2))

        if Bindx == 3089:
            t31174 = np.sin(phi)
            t31171 = t31174 ** 2
            t31172 = t31171 ** 2
            t31162 = np.cos(phi)
            t31163 = t31162 ** 2
            t31165 = t31163 ** 2
            t31169 = t31165 ** 2
            t31164 = t31162 * t31163
            t31167 = t31164 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.1131e4) * t31172 ** 2 * (410 * t31163 - 1386 * t31164 + 952 * t31165 - 4410 * t31167 - 1519 * t31169 - 41 + (1946 * t31165 + 3730 * t31167 + 248 * t31169 + 70) * t31162) * np.sin((7 * phi1 - 14 * phi2)) * ((1 - t31162) ** (-0.1e1 / 0.2e1)) * ((1 + t31162) ** (-0.1e1 / 0.2e1))

        if Bindx == 3090:
            t31175 = np.cos(phi)
            t31176 = t31175 ** 2
            t31177 = t31175 * t31176
            t31180 = t31177 ** 2
            t31181 = t31175 * t31180
            t31188 = t31181 ** 2
            t31186 = t31180 ** 2
            t31178 = t31176 ** 2
            t31179 = t31175 * t31178
            t31184 = t31179 ** 2
            t31182 = t31178 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.5655e4) * (-3213 * t31176 + 169 * t31177 + 21035 * t31178 - 24183 * t31179 - 42889 * t31180 + 94501 * t31181 + 83369 * t31184 - 86263 * t31186 + 23085 * t31188 + 119 + (2277 + 2480 * t31182) * t31182 + (-131945 * t31182 + 59787 * t31184 + 15379 * t31186 - 14105 * t31188 + 397) * t31175) * np.cos((7 * phi1 - 13 * phi2))

        if Bindx == 3091:
            t31205 = np.sin(phi)
            t31202 = t31205 ** 2
            t31203 = t31205 * t31202
            t31191 = np.cos(phi)
            t31192 = t31191 ** 2
            t31194 = t31192 ** 2
            t31195 = t31191 * t31194
            t31200 = t31195 ** 2
            t31198 = t31194 ** 2
            t31193 = t31191 * t31192
            t31196 = t31193 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * t31203 ** 2 * (4033 * t31192 + 24724 * t31193 - 55290 * t31194 - 29176 * t31195 + 171178 * t31196 - 89929 * t31198 - 94395 * t31200 - 109 + (-121488 * t31196 + 175160 * t31198 + 17980 * t31200 - 2688) * t31191) * np.sin((7 * phi1 - 12 * phi2)) * ((1 + t31191) ** (-0.1e1 / 0.2e1)) * ((1 - t31191) ** (-0.1e1 / 0.2e1))

        if Bindx == 3092:
            t31206 = np.cos(phi)
            t31207 = t31206 ** 2
            t31208 = t31206 * t31207
            t31211 = t31208 ** 2
            t31212 = t31206 * t31211
            t31219 = t31212 ** 2
            t31217 = t31211 ** 2
            t31209 = t31207 ** 2
            t31210 = t31206 * t31209
            t31215 = t31210 ** 2
            t31213 = t31209 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-2805 * t31207 + 15095 * t31208 + 12683 * t31209 - 96081 * t31210 + 23023 * t31211 + 258907 * t31212 + 438449 * t31215 - 343127 * t31217 + 76821 * t31219 + 55 + (-219483 + 14384 * t31213) * t31213 + (-288079 * t31213 + 43989 * t31215 + 136213 * t31217 - 69223 * t31219 - 821) * t31206) * np.cos((7 * phi1 - 11 * phi2))

        if Bindx == 3093:
            t31237 = np.sin(phi)
            t31235 = t31237 ** 2
            t31222 = np.cos(phi)
            t31223 = t31222 ** 2
            t31224 = t31222 * t31223
            t31227 = t31224 ** 2
            t31233 = t31227 ** 2
            t31225 = t31223 ** 2
            t31226 = t31222 * t31225
            t31231 = t31226 ** 2
            t31229 = t31225 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.273e3) * t31235 ** 2 * (-4020 * t31223 + 1078 * t31224 + 35255 * t31225 - 32340 * t31226 - 102608 * t31227 + 77121 * t31229 + 80388 * t31231 - 94395 * t31233 + 67 + (154220 * t31227 - 246510 * t31229 + 110142 * t31231 + 21576 * t31233 + 26) * t31222) * np.sin((7 * phi1 - 10 * phi2)) * ((1 + t31222) ** (-0.1e1 / 0.2e1)) * ((1 - t31222) ** (-0.1e1 / 0.2e1))

        if Bindx == 3094:
            t31238 = np.cos(phi)
            t31239 = t31238 ** 2
            t31240 = t31238 * t31239
            t31243 = t31240 ** 2
            t31244 = t31238 * t31243
            t31251 = t31244 ** 2
            t31249 = t31243 ** 2
            t31241 = t31239 ** 2
            t31242 = t31238 * t31241
            t31247 = t31242 ** 2
            t31245 = t31241 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (31453 * t31239 + 202867 * t31240 - 456743 * t31241 - 1182377 * t31242 + 2805649 * t31243 + 2475583 * t31244 + 11914903 * t31247 - 7774221 * t31249 + 1141179 * t31251 - 443 + (-8222753 + 560976 * t31245) * t31245 + (-577071 * t31245 - 4662567 * t31247 + 5961501 * t31249 - 2208843 * t31251 - 9093) * t31238) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 3095:
            t31255 = np.cos(phi)
            t31256 = t31255 ** 2
            t31257 = t31255 * t31256
            t31260 = t31257 ** 2
            t31261 = t31255 * t31260
            t31268 = t31261 ** 2
            t31266 = t31260 ** 2
            t31258 = t31256 ** 2
            t31259 = t31255 * t31258
            t31264 = t31259 ** 2
            t31262 = t31258 ** 2
            t31254 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.3e1) * t31254 ** 2 * (59171 * t31256 - 432810 * t31257 - 584465 * t31258 + 3448214 * t31259 + 1195887 * t31260 - 12201266 * t31261 + 2790425 * t31262 - 12747735 * t31264 + 15398565 * t31266 - 6135675 * t31268 - 749 + (20670650 * t31262 - 15208830 * t31264 + 1979250 * t31266 + 1753050 * t31268 + 16318) * t31255) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t31255) ** (-0.1e1 / 0.2e1)) * ((1 - t31255) ** (-0.1e1 / 0.2e1))

        if Bindx == 3096:
            t31270 = np.cos(phi)
            t31271 = t31270 ** 2
            t31272 = t31270 * t31271
            t31275 = t31272 ** 2
            t31276 = t31270 * t31275
            t31283 = t31276 ** 2
            t31281 = t31275 ** 2
            t31273 = t31271 ** 2
            t31274 = t31270 * t31273
            t31279 = t31274 ** 2
            t31277 = t31273 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (625269 * t31271 - 13643 * t31272 - 8842015 * t31273 + 3121377 * t31274 + 47351689 * t31275 - 29931319 * t31276 + 150044895 * t31279 - 74038965 * t31281 - 8567325 * t31283 - 7187 + (-120574377 + 14024400 * t31277) * t31277 + (106536375 * t31277 - 177817185 * t31279 + 141041355 * t31281 - 42949725 * t31283 - 3619) * t31270) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 3097:
            t31287 = np.cos(phi)
            t31288 = t31287 ** 2
            t31289 = t31287 * t31288
            t31292 = t31289 ** 2
            t31293 = t31287 * t31292
            t31300 = t31293 ** 2
            t31298 = t31292 ** 2
            t31290 = t31288 ** 2
            t31291 = t31287 * t31290
            t31296 = t31291 ** 2
            t31294 = t31290 ** 2
            t31286 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.115e3) * t31286 ** 2 * (-18879 * t31288 - 172060 * t31289 + 318675 * t31290 + 1391082 * t31291 - 2196271 * t31292 - 4568256 * t31293 + 7464105 * t31294 - 13018005 * t31296 + 11123385 * t31298 - 3681405 * t31300 + 203 + (6576570 * t31294 - 2964780 * t31296 - 1662570 * t31298 + 1402440 * t31300 + 5766) * t31287) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t31287) ** (-0.1e1 / 0.2e1)) * ((1 - t31287) ** (-0.1e1 / 0.2e1))

        if Bindx == 3098:
            t31302 = np.cos(phi)
            t31303 = t31302 ** 2
            t31304 = t31302 * t31303
            t31307 = t31304 ** 2
            t31308 = t31302 * t31307
            t31315 = t31308 ** 2
            t31313 = t31307 ** 2
            t31305 = t31303 ** 2
            t31306 = t31302 * t31305
            t31311 = t31306 ** 2
            t31309 = t31305 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (39105 * t31303 - 240821 * t31304 - 585935 * t31305 + 2401875 * t31306 + 3026989 * t31307 - 10931105 * t31308 + 4246515 * t31311 + 4191915 * t31313 - 7277985 * t31315 - 395 + (-6445089 + 2804880 * t31309) * t31309 + (26197965 * t31309 - 34140015 * t31311 + 22840545 * t31313 - 6135675 * t31315 + 7231) * t31302) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 3099:
            t31333 = np.sin(phi)
            t31331 = t31333 ** 2
            t31318 = np.cos(phi)
            t31319 = t31318 ** 2
            t31320 = t31318 * t31319
            t31323 = t31320 ** 2
            t31329 = t31323 ** 2
            t31321 = t31319 ** 2
            t31322 = t31318 * t31321
            t31327 = t31322 ** 2
            t31325 = t31321 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.805e3) * t31331 ** 2 * (12138 * t31319 + 10388 * t31320 - 190337 * t31321 - 57708 * t31322 + 1056300 * t31323 - 2602665 * t31325 + 2929290 * t31327 - 1227135 * t31329 - 119 + (-26520 * t31323 + 684840 * t31325 - 1289340 * t31327 + 701220 * t31329 - 352) * t31318) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t31318) ** (-0.1e1 / 0.2e1)) * ((1 - t31318) ** (-0.1e1 / 0.2e1))

        if Bindx == 3100:
            t31334 = np.cos(phi)
            t31335 = t31334 ** 2
            t31336 = t31334 * t31335
            t31339 = t31336 ** 2
            t31340 = t31334 * t31339
            t31347 = t31340 ** 2
            t31345 = t31339 ** 2
            t31337 = t31335 ** 2
            t31338 = t31334 * t31337
            t31343 = t31338 ** 2
            t31341 = t31337 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2093e4) * (-3959 * t31335 - 74683 * t31336 + 76225 * t31337 + 752213 * t31338 - 602091 * t31339 - 3323311 * t31340 - 5415285 * t31343 + 6658395 * t31345 - 4226025 * t31347 + 37 + (2433903 + 1078800 * t31341) * t31341 + (7531275 * t31341 - 9156705 * t31343 + 5685015 * t31345 - 1415925 * t31347 + 2121) * t31334) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 3101:
            t31364 = np.sin(phi)
            t31361 = t31364 ** 2
            t31362 = t31364 * t31361
            t31350 = np.cos(phi)
            t31351 = t31350 ** 2
            t31353 = t31351 ** 2
            t31354 = t31350 * t31353
            t31359 = t31354 ** 2
            t31357 = t31353 ** 2
            t31352 = t31350 * t31351
            t31355 = t31352 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.5681e4) * t31362 ** 2 * (-5243 * t31351 + 20496 * t31352 + 80850 * t31353 - 184380 * t31354 - 401310 * t31355 + 758205 * t31357 - 471975 * t31359 + 49 + (651960 * t31355 - 987450 * t31357 + 539400 * t31359 - 602) * t31350) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t31350) ** (-0.1e1 / 0.2e1)) * ((1 - t31350) ** (-0.1e1 / 0.2e1))

        if Bindx == 3102:
            t31365 = np.cos(phi)
            t31366 = t31365 ** 2
            t31367 = t31365 * t31366
            t31370 = t31367 ** 2
            t31371 = t31365 * t31370
            t31378 = t31371 ** 2
            t31376 = t31370 ** 2
            t31368 = t31366 ** 2
            t31369 = t31365 * t31368
            t31374 = t31369 ** 2
            t31372 = t31368 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-2331 * t31366 - 5341 * t31367 + 42217 * t31368 + 54831 * t31369 - 290535 * t31370 - 243537 * t31371 - 1805905 * t31374 + 1846755 * t31376 - 987885 * t31378 + 21 + (981903 + 215760 * t31372) * t31372 + (547225 * t31372 - 651735 * t31374 + 392805 * t31376 - 94395 * t31378 + 147) * t31365) * np.cos((7 * phi1 - phi2))

        if Bindx == 3103:
            t31389 = np.sin(phi)
            t31386 = t31389 ** 2
            t31387 = t31386 ** 2
            t31381 = np.cos(phi)
            t31382 = t31381 ** 2
            t31383 = t31382 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t31381 * t31387 ** 2 * (-700 * t31382 + 21 + (-15660 * t31382 + 5670 + 13485 * t31383) * t31383) * np.sin((7 * phi1)) * ((1 + t31381) ** (-0.1e1 / 0.2e1)) * ((1 - t31381) ** (-0.1e1 / 0.2e1))

        if Bindx == 3104:
            t31390 = np.cos(phi)
            t31391 = t31390 ** 2
            t31392 = t31390 * t31391
            t31395 = t31392 ** 2
            t31396 = t31390 * t31395
            t31403 = t31396 ** 2
            t31401 = t31395 ** 2
            t31393 = t31391 ** 2
            t31394 = t31390 * t31393
            t31399 = t31394 ** 2
            t31397 = t31393 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.85215e5) * (-2331 * t31391 + 5341 * t31392 + 42217 * t31393 - 54831 * t31394 - 290535 * t31395 + 243537 * t31396 - 1805905 * t31399 + 1846755 * t31401 - 987885 * t31403 + 21 + (981903 + 215760 * t31397) * t31397 + (-547225 * t31397 + 651735 * t31399 - 392805 * t31401 + 94395 * t31403 - 147) * t31390) * np.cos((7 * phi1 + phi2))

        if Bindx == 3105:
            t31420 = np.sin(phi)
            t31417 = t31420 ** 2
            t31418 = t31420 * t31417
            t31406 = np.cos(phi)
            t31407 = t31406 ** 2
            t31409 = t31407 ** 2
            t31410 = t31406 * t31409
            t31415 = t31410 ** 2
            t31413 = t31409 ** 2
            t31408 = t31406 * t31407
            t31411 = t31408 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.5681e4) * t31418 ** 2 * (5243 * t31407 + 20496 * t31408 - 80850 * t31409 - 184380 * t31410 + 401310 * t31411 - 758205 * t31413 + 471975 * t31415 - 49 + (651960 * t31411 - 987450 * t31413 + 539400 * t31415 - 602) * t31406) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t31406) ** (-0.1e1 / 0.2e1)) * ((1 - t31406) ** (-0.1e1 / 0.2e1))

        if Bindx == 3106:
            t31421 = np.cos(phi)
            t31422 = t31421 ** 2
            t31423 = t31421 * t31422
            t31426 = t31423 ** 2
            t31427 = t31421 * t31426
            t31434 = t31427 ** 2
            t31432 = t31426 ** 2
            t31424 = t31422 ** 2
            t31425 = t31421 * t31424
            t31430 = t31425 ** 2
            t31428 = t31424 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.2093e4) * (-3959 * t31422 + 74683 * t31423 + 76225 * t31424 - 752213 * t31425 - 602091 * t31426 + 3323311 * t31427 - 5415285 * t31430 + 6658395 * t31432 - 4226025 * t31434 + 37 + (2433903 + 1078800 * t31428) * t31428 + (-7531275 * t31428 + 9156705 * t31430 - 5685015 * t31432 + 1415925 * t31434 - 2121) * t31421) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 3107:
            t31452 = np.sin(phi)
            t31450 = t31452 ** 2
            t31437 = np.cos(phi)
            t31438 = t31437 ** 2
            t31439 = t31437 * t31438
            t31442 = t31439 ** 2
            t31448 = t31442 ** 2
            t31440 = t31438 ** 2
            t31441 = t31437 * t31440
            t31446 = t31441 ** 2
            t31444 = t31440 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.805e3) * t31450 ** 2 * (-12138 * t31438 + 10388 * t31439 + 190337 * t31440 - 57708 * t31441 - 1056300 * t31442 + 2602665 * t31444 - 2929290 * t31446 + 1227135 * t31448 + 119 + (-26520 * t31442 + 684840 * t31444 - 1289340 * t31446 + 701220 * t31448 - 352) * t31437) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t31437) ** (-0.1e1 / 0.2e1)) * ((1 - t31437) ** (-0.1e1 / 0.2e1))

        if Bindx == 3108:
            t31453 = np.cos(phi)
            t31454 = t31453 ** 2
            t31455 = t31453 * t31454
            t31458 = t31455 ** 2
            t31459 = t31453 * t31458
            t31466 = t31459 ** 2
            t31464 = t31458 ** 2
            t31456 = t31454 ** 2
            t31457 = t31453 * t31456
            t31462 = t31457 ** 2
            t31460 = t31456 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.115e3) * (39105 * t31454 + 240821 * t31455 - 585935 * t31456 - 2401875 * t31457 + 3026989 * t31458 + 10931105 * t31459 + 4246515 * t31462 + 4191915 * t31464 - 7277985 * t31466 - 395 + (-6445089 + 2804880 * t31460) * t31460 + (-26197965 * t31460 + 34140015 * t31462 - 22840545 * t31464 + 6135675 * t31466 - 7231) * t31453) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 3109:
            t31470 = np.cos(phi)
            t31471 = t31470 ** 2
            t31472 = t31470 * t31471
            t31475 = t31472 ** 2
            t31476 = t31470 * t31475
            t31483 = t31476 ** 2
            t31481 = t31475 ** 2
            t31473 = t31471 ** 2
            t31474 = t31470 * t31473
            t31479 = t31474 ** 2
            t31477 = t31473 ** 2
            t31469 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.115e3) * t31469 ** 2 * (18879 * t31471 - 172060 * t31472 - 318675 * t31473 + 1391082 * t31474 + 2196271 * t31475 - 4568256 * t31476 - 7464105 * t31477 + 13018005 * t31479 - 11123385 * t31481 + 3681405 * t31483 - 203 + (6576570 * t31477 - 2964780 * t31479 - 1662570 * t31481 + 1402440 * t31483 + 5766) * t31470) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t31470) ** (-0.1e1 / 0.2e1)) * ((1 - t31470) ** (-0.1e1 / 0.2e1))

        if Bindx == 3110:
            t31485 = np.cos(phi)
            t31486 = t31485 ** 2
            t31487 = t31485 * t31486
            t31490 = t31487 ** 2
            t31491 = t31485 * t31490
            t31498 = t31491 ** 2
            t31496 = t31490 ** 2
            t31488 = t31486 ** 2
            t31489 = t31485 * t31488
            t31494 = t31489 ** 2
            t31492 = t31488 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (625269 * t31486 + 13643 * t31487 - 8842015 * t31488 - 3121377 * t31489 + 47351689 * t31490 + 29931319 * t31491 + 150044895 * t31494 - 74038965 * t31496 - 8567325 * t31498 - 7187 + (-120574377 + 14024400 * t31492) * t31492 + (-106536375 * t31492 + 177817185 * t31494 - 141041355 * t31496 + 42949725 * t31498 + 3619) * t31485) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 3111:
            t31502 = np.cos(phi)
            t31503 = t31502 ** 2
            t31504 = t31502 * t31503
            t31507 = t31504 ** 2
            t31508 = t31502 * t31507
            t31515 = t31508 ** 2
            t31513 = t31507 ** 2
            t31505 = t31503 ** 2
            t31506 = t31502 * t31505
            t31511 = t31506 ** 2
            t31509 = t31505 ** 2
            t31501 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.3e1) * t31501 ** 2 * (-59171 * t31503 - 432810 * t31504 + 584465 * t31505 + 3448214 * t31506 - 1195887 * t31507 - 12201266 * t31508 - 2790425 * t31509 + 12747735 * t31511 - 15398565 * t31513 + 6135675 * t31515 + 749 + (20670650 * t31509 - 15208830 * t31511 + 1979250 * t31513 + 1753050 * t31515 + 16318) * t31502) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t31502) ** (-0.1e1 / 0.2e1)) * ((1 - t31502) ** (-0.1e1 / 0.2e1))

        if Bindx == 3112:
            t31517 = np.cos(phi)
            t31518 = t31517 ** 2
            t31519 = t31517 * t31518
            t31522 = t31519 ** 2
            t31523 = t31517 * t31522
            t31530 = t31523 ** 2
            t31528 = t31522 ** 2
            t31520 = t31518 ** 2
            t31521 = t31517 * t31520
            t31526 = t31521 ** 2
            t31524 = t31520 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (31453 * t31518 - 202867 * t31519 - 456743 * t31520 + 1182377 * t31521 + 2805649 * t31522 - 2475583 * t31523 + 11914903 * t31526 - 7774221 * t31528 + 1141179 * t31530 - 443 + (-8222753 + 560976 * t31524) * t31524 + (577071 * t31524 + 4662567 * t31526 - 5961501 * t31528 + 2208843 * t31530 + 9093) * t31517) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 3113:
            t31548 = np.sin(phi)
            t31546 = t31548 ** 2
            t31533 = np.cos(phi)
            t31534 = t31533 ** 2
            t31535 = t31533 * t31534
            t31538 = t31535 ** 2
            t31544 = t31538 ** 2
            t31536 = t31534 ** 2
            t31537 = t31533 * t31536
            t31542 = t31537 ** 2
            t31540 = t31536 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.273e3) * t31546 ** 2 * (4020 * t31534 + 1078 * t31535 - 35255 * t31536 - 32340 * t31537 + 102608 * t31538 - 77121 * t31540 - 80388 * t31542 + 94395 * t31544 - 67 + (154220 * t31538 - 246510 * t31540 + 110142 * t31542 + 21576 * t31544 + 26) * t31533) * np.sin((7 * phi1 + 10 * phi2)) * ((1 + t31533) ** (-0.1e1 / 0.2e1)) * ((1 - t31533) ** (-0.1e1 / 0.2e1))

        if Bindx == 3114:
            t31549 = np.cos(phi)
            t31550 = t31549 ** 2
            t31551 = t31549 * t31550
            t31554 = t31551 ** 2
            t31555 = t31549 * t31554
            t31562 = t31555 ** 2
            t31560 = t31554 ** 2
            t31552 = t31550 ** 2
            t31553 = t31549 * t31552
            t31558 = t31553 ** 2
            t31556 = t31552 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-2805 * t31550 - 15095 * t31551 + 12683 * t31552 + 96081 * t31553 + 23023 * t31554 - 258907 * t31555 + 438449 * t31558 - 343127 * t31560 + 76821 * t31562 + 55 + (-219483 + 14384 * t31556) * t31556 + (288079 * t31556 - 43989 * t31558 - 136213 * t31560 + 69223 * t31562 + 821) * t31549) * np.cos((7 * phi1 + 11 * phi2))

        if Bindx == 3115:
            t31579 = np.sin(phi)
            t31576 = t31579 ** 2
            t31577 = t31579 * t31576
            t31565 = np.cos(phi)
            t31566 = t31565 ** 2
            t31568 = t31566 ** 2
            t31569 = t31565 * t31568
            t31574 = t31569 ** 2
            t31572 = t31568 ** 2
            t31567 = t31565 * t31566
            t31570 = t31567 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * t31577 ** 2 * (-4033 * t31566 + 24724 * t31567 + 55290 * t31568 - 29176 * t31569 - 171178 * t31570 + 89929 * t31572 + 94395 * t31574 + 109 + (-121488 * t31570 + 175160 * t31572 + 17980 * t31574 - 2688) * t31565) * np.sin((7 * phi1 + 12 * phi2)) * ((1 + t31565) ** (-0.1e1 / 0.2e1)) * ((1 - t31565) ** (-0.1e1 / 0.2e1))

        if Bindx == 3116:
            t31580 = np.cos(phi)
            t31581 = t31580 ** 2
            t31582 = t31580 * t31581
            t31585 = t31582 ** 2
            t31586 = t31580 * t31585
            t31593 = t31586 ** 2
            t31591 = t31585 ** 2
            t31583 = t31581 ** 2
            t31584 = t31580 * t31583
            t31589 = t31584 ** 2
            t31587 = t31583 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.5655e4) * (-3213 * t31581 - 169 * t31582 + 21035 * t31583 + 24183 * t31584 - 42889 * t31585 - 94501 * t31586 + 83369 * t31589 - 86263 * t31591 + 23085 * t31593 + 119 + (2277 + 2480 * t31587) * t31587 + (131945 * t31587 - 59787 * t31589 - 15379 * t31591 + 14105 * t31593 - 397) * t31580) * np.cos((7 * phi1 + 13 * phi2))

        if Bindx == 3117:
            t31608 = np.sin(phi)
            t31605 = t31608 ** 2
            t31606 = t31605 ** 2
            t31596 = np.cos(phi)
            t31597 = t31596 ** 2
            t31599 = t31597 ** 2
            t31603 = t31599 ** 2
            t31598 = t31596 * t31597
            t31601 = t31598 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.1131e4) * t31606 ** 2 * (-410 * t31597 - 1386 * t31598 - 952 * t31599 + 4410 * t31601 + 1519 * t31603 + 41 + (1946 * t31599 + 3730 * t31601 + 248 * t31603 + 70) * t31596) * np.sin((7 * phi1 + 14 * phi2)) * ((1 + t31596) ** (-0.1e1 / 0.2e1)) * ((1 - t31596) ** (-0.1e1 / 0.2e1))

        if Bindx == 3118:
            t31609 = np.cos(phi)
            t31610 = t31609 ** 2
            t31611 = t31609 * t31610
            t31614 = t31611 ** 2
            t31615 = t31609 * t31614
            t31622 = t31615 ** 2
            t31620 = t31614 ** 2
            t31612 = t31610 ** 2
            t31613 = t31609 * t31612
            t31618 = t31613 ** 2
            t31616 = t31612 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.35061e5) * (-7 * t31610 + 223 * t31611 + 413 * t31612 - 149 * t31613 - 1155 * t31614 - 869 * t31615 + 363 * t31618 - 737 * t31620 + 223 * t31622 - 7 + (891 + 16 * t31616) * t31616 + (1661 * t31616 - 931 * t31618 - 7 * t31620 + 105 * t31622 - 33) * t31609) * np.cos((7 * phi1 + 15 * phi2))

        if Bindx == 3119:
            t31625 = np.cos(phi)
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.35061e5) * ((1 - t31625) ** (0.9e1 / 0.2e1)) * ((1 + t31625) ** (0.23e2 / 0.2e1)) * np.sin((7 * phi1 + 16 * phi2))

        if Bindx == 3120:
            t31626 = np.cos(phi)
            t31642 = -8 * t31626
            t31627 = t31626 ** 2
            t31628 = t31626 * t31627
            t31631 = t31628 ** 2
            t31637 = t31631 ** 2
            t31629 = t31627 ** 2
            t31630 = t31626 * t31629
            t31635 = t31630 ** 2
            t31633 = t31629 ** 2
            t31632 = t31626 * t31631
            tfunc[..., c] = 0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * np.cos((8 * phi1 - 16 * phi2)) * (24 * t31627 - 24 * t31628 - 36 * t31629 + 120 * t31630 - 88 * t31631 - 88 * t31635 - 36 * t31637 + t31642 + 1 + (198 + t31633) * t31633 + (-88 * t31633 + 120 * t31635 - 24 * t31637) * t31626 + (-88 + (t31642 + 24) * t31632) * t31632)

        if Bindx == 3121:
            t31654 = np.sin(phi)
            t31651 = t31654 ** 2
            t31652 = t31651 ** 2
            t31643 = np.cos(phi)
            t31644 = t31643 ** 2
            t31645 = t31644 ** 2
            t31649 = t31645 ** 2
            t31646 = t31643 * t31645
            t31647 = t31643 * t31646
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.11687e5) * t31652 ** 2 * (12 * t31644 - 42 * t31645 + 84 * t31646 - 84 * t31647 - 15 * t31649 + 1 + (48 * t31647 + 2 * t31649 - 6) * t31643) * np.sin((8 * phi1 - 15 * phi2)) * ((1 + t31643) ** (-0.1e1 / 0.2e1)) * ((1 - t31643) ** (-0.1e1 / 0.2e1))

        if Bindx == 3122:
            t31655 = np.cos(phi)
            t31656 = t31655 ** 2
            t31657 = t31655 * t31656
            t31660 = t31657 ** 2
            t31661 = t31655 * t31660
            t31668 = t31661 ** 2
            t31666 = t31660 ** 2
            t31658 = t31656 ** 2
            t31659 = t31655 * t31658
            t31664 = t31659 ** 2
            t31662 = t31658 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.377e3) * (42 * t31656 - 303 * t31657 + 294 * t31658 + 717 * t31659 - 1694 * t31660 + 341 * t31661 - 418 * t31664 - 1158 * t31666 + 534 * t31668 - 7 + (2376 + 31 * t31662) * t31662 + (-2453 * t31662 + 2163 * t31664 - 273 * t31666 - 217 * t31668 + 25) * t31655) * np.cos((8 * phi1 - 14 * phi2))

        if Bindx == 3123:
            t31685 = np.sin(phi)
            t31682 = t31685 ** 2
            t31683 = t31685 * t31682
            t31671 = np.cos(phi)
            t31672 = t31671 ** 2
            t31674 = t31672 ** 2
            t31675 = t31671 * t31674
            t31680 = t31675 ** 2
            t31678 = t31674 ** 2
            t31673 = t31671 * t31672
            t31676 = t31673 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1885e4) * t31683 ** 2 * (-459 * t31672 + 958 * t31673 + 670 * t31674 - 4172 * t31675 + 4186 * t31676 - 5993 * t31678 - 2015 * t31680 + 27 + (1324 * t31676 + 5170 * t31678 + 310 * t31680 - 6) * t31671) * np.sin((8 * phi1 - 13 * phi2)) * ((1 + t31671) ** (-0.1e1 / 0.2e1)) * ((1 - t31671) ** (-0.1e1 / 0.2e1))

        if Bindx == 3124:
            t31686 = np.cos(phi)
            t31687 = t31686 ** 2
            t31688 = t31686 * t31687
            t31691 = t31688 ** 2
            t31692 = t31686 * t31691
            t31699 = t31692 ** 2
            t31697 = t31691 ** 2
            t31689 = t31687 ** 2
            t31690 = t31686 * t31689
            t31695 = t31690 ** 2
            t31693 = t31689 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.65e2) * (-3552 * t31687 - 3454 * t31688 + 29940 * t31689 - 17002 * t31690 - 85536 * t31691 + 121154 * t31692 + 85536 * t31695 - 146252 * t31697 + 51040 * t31699 + 111 + (64218 + 4495 * t31693) * t31693 + (-228030 * t31693 + 146838 * t31695 + 6786 * t31697 - 26970 * t31699 + 678) * t31686) * np.cos((8 * phi1 - 12 * phi2))

        if Bindx == 3125:
            t31717 = np.sin(phi)
            t31715 = t31717 ** 2
            t31702 = np.cos(phi)
            t31703 = t31702 ** 2
            t31704 = t31702 * t31703
            t31707 = t31704 ** 2
            t31713 = t31707 ** 2
            t31705 = t31703 ** 2
            t31706 = t31702 * t31705
            t31711 = t31706 ** 2
            t31709 = t31705 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.91e2) * t31715 ** 2 * (-126 * t31703 - 2420 * t31704 + 3641 * t31705 + 7194 * t31706 - 18612 * t31707 + 28677 * t31709 - 5742 * t31711 - 9889 * t31713 + 3 + (1320 * t31707 - 24486 * t31709 + 18444 * t31711 + 1798 * t31713 + 198) * t31702) * np.sin((8 * phi1 - 11 * phi2)) * ((1 + t31702) ** (-0.1e1 / 0.2e1)) * ((1 - t31702) ** (-0.1e1 / 0.2e1))

        if Bindx == 3126:
            t31718 = np.cos(phi)
            t31719 = t31718 ** 2
            t31720 = t31718 * t31719
            t31723 = t31720 ** 2
            t31724 = t31718 * t31723
            t31731 = t31724 ** 2
            t31729 = t31723 ** 2
            t31721 = t31719 ** 2
            t31722 = t31718 * t31721
            t31727 = t31722 ** 2
            t31725 = t31721 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-1566 * t31719 + 6303 * t31720 + 9534 * t31721 - 45117 * t31722 - 4422 * t31723 + 137643 * t31724 + 214918 * t31727 - 195102 * t31729 + 51678 * t31731 + 29 + (-83160 + 8091 * t31725) * t31725 + (-180587 * t31725 + 60669 * t31727 + 61857 * t31729 - 40455 * t31731 - 313) * t31718) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 3127:
            t31735 = np.cos(phi)
            t31736 = t31735 ** 2
            t31737 = t31735 * t31736
            t31740 = t31737 ** 2
            t31741 = t31735 * t31740
            t31748 = t31741 ** 2
            t31746 = t31740 ** 2
            t31738 = t31736 ** 2
            t31739 = t31735 * t31738
            t31744 = t31739 ** 2
            t31742 = t31738 ** 2
            t31734 = np.sin(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * t31734 ** 2 * (34335 * t31736 + 5586 * t31737 - 349461 * t31738 + 206514 * t31739 + 1326171 * t31740 - 1489158 * t31741 - 1973763 * t31742 + 405405 * t31744 + 1496313 * t31746 - 946647 * t31748 - 545 + (3601598 * t31742 - 3523338 * t31744 + 997542 * t31746 + 210366 * t31748 - 918) * t31735) * np.sin((8 * phi1 - 9 * phi2)) * ((1 + t31735) ** (-0.1e1 / 0.2e1)) * ((1 - t31735) ** (-0.1e1 / 0.2e1))

        if Bindx == 3128:
            t31750 = np.cos(phi)
            t31751 = t31750 ** 2
            t31752 = t31750 * t31751
            t31755 = t31752 ** 2
            t31756 = t31750 * t31755
            t31763 = t31756 ** 2
            t31761 = t31755 ** 2
            t31753 = t31751 ** 2
            t31754 = t31750 * t31753
            t31759 = t31754 ** 2
            t31757 = t31753 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (123912 * t31751 + 927276 * t31752 - 1877820 * t31753 - 5598684 * t31754 + 12065592 * t31755 + 12547788 * t31756 + 55215160 * t31759 - 37493820 * t31761 + 6107400 * t31763 - 1721 + (-36760086 + 2629575 * t31757) * t31757 + (-5384500 * t31757 - 19017180 * t31759 + 27076140 * t31761 - 10518300 * t31763 - 40732) * t31750) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 3129:
            t31767 = np.cos(phi)
            t31768 = t31767 ** 2
            t31769 = t31767 * t31768
            t31772 = t31769 ** 2
            t31773 = t31767 * t31772
            t31780 = t31773 ** 2
            t31778 = t31772 ** 2
            t31770 = t31768 ** 2
            t31771 = t31767 * t31770
            t31776 = t31771 ** 2
            t31774 = t31770 ** 2
            t31766 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.3e1) * t31766 ** 2 * (59171 * t31768 - 432810 * t31769 - 584465 * t31770 + 3448214 * t31771 + 1195887 * t31772 - 12201266 * t31773 + 2790425 * t31774 - 12747735 * t31776 + 15398565 * t31778 - 6135675 * t31780 - 749 + (20670650 * t31774 - 15208830 * t31776 + 1979250 * t31778 + 1753050 * t31780 + 16318) * t31767) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t31767) ** (-0.1e1 / 0.2e1)) * ((1 - t31767) ** (-0.1e1 / 0.2e1))

        if Bindx == 3130:
            t31782 = np.cos(phi)
            t31783 = t31782 ** 2
            t31784 = t31782 * t31783
            t31787 = t31784 ** 2
            t31788 = t31782 * t31787
            t31795 = t31788 ** 2
            t31793 = t31787 ** 2
            t31785 = t31783 ** 2
            t31786 = t31782 * t31785
            t31791 = t31786 ** 2
            t31789 = t31785 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (8342 * t31783 - 2317 * t31784 - 115990 * t31785 + 58247 * t31786 + 607838 * t31787 - 448657 * t31788 + 1811810 * t31791 - 832650 * t31793 - 147030 * t31795 - 97 + (-1507528 + 175305 * t31789) * t31789 + (1467345 * t31789 - 2330055 * t31791 + 1781325 * t31793 - 525915 * t31795 + 27) * t31782) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 3131:
            t31813 = np.sin(phi)
            t31811 = t31813 ** 2
            t31798 = np.cos(phi)
            t31799 = t31798 ** 2
            t31800 = t31798 * t31799
            t31803 = t31800 ** 2
            t31809 = t31803 ** 2
            t31801 = t31799 ** 2
            t31802 = t31798 * t31801
            t31807 = t31802 ** 2
            t31805 = t31801 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * t31811 ** 2 * (6570 * t31799 + 43460 * t31800 - 99515 * t31801 - 306162 * t31802 + 580220 * t31803 - 1567215 * t31805 + 1934010 * t31807 - 876525 * t31809 - 73 + (777400 * t31803 - 637650 * t31805 - 203580 * t31807 + 350610 * t31809 - 1550) * t31798) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t31798) ** (-0.1e1 / 0.2e1)) * ((1 - t31798) ** (-0.1e1 / 0.2e1))

        if Bindx == 3132:
            t31814 = np.cos(phi)
            t31815 = t31814 ** 2
            t31816 = t31814 * t31815
            t31819 = t31816 ** 2
            t31820 = t31814 * t31819
            t31827 = t31820 ** 2
            t31825 = t31819 ** 2
            t31817 = t31815 ** 2
            t31818 = t31814 * t31817
            t31823 = t31818 ** 2
            t31821 = t31817 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2415e4) * (2208 * t31815 - 19942 * t31816 - 31060 * t31817 + 188958 * t31818 + 142688 * t31819 - 809638 * t31820 - 47840 * t31823 + 531180 * t31825 - 542880 * t31827 - 23 + (-229578 + 175305 * t31821) * t31821 + (1818970 * t31821 - 2219490 * t31823 + 1391130 * t31825 - 350610 * t31827 + 622) * t31814) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 3133:
            t31844 = np.sin(phi)
            t31841 = t31844 ** 2
            t31842 = t31844 * t31841
            t31830 = np.cos(phi)
            t31831 = t31830 ** 2
            t31833 = t31831 ** 2
            t31834 = t31830 * t31833
            t31839 = t31834 ** 2
            t31837 = t31833 ** 2
            t31832 = t31830 * t31831
            t31835 = t31832 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.6279e4) * t31842 ** 2 * (-3007 * t31831 + 794 * t31832 + 42150 * t31833 - 13220 * t31834 - 191790 * t31835 + 337995 * t31837 - 202275 * t31839 + 31 + (81540 * t31835 - 187050 * t31837 + 134850 * t31839 - 18) * t31830) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t31830) ** (-0.1e1 / 0.2e1)) * ((1 - t31830) ** (-0.1e1 / 0.2e1))

        if Bindx == 3134:
            t31845 = np.cos(phi)
            t31846 = t31845 ** 2
            t31847 = t31845 * t31846
            t31850 = t31847 ** 2
            t31851 = t31845 * t31850
            t31858 = t31851 ** 2
            t31856 = t31850 ** 2
            t31848 = t31846 ** 2
            t31849 = t31845 * t31848
            t31854 = t31849 ** 2
            t31852 = t31848 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17043e5) * (-714 * t31846 - 5383 * t31847 + 12250 * t31848 + 51093 * t31849 - 82306 * t31850 - 211331 * t31851 - 520510 * t31854 + 545670 * t31856 - 300150 * t31858 + 7 + (278328 + 67425 * t31852) * t31852 + (446275 * t31852 - 504405 * t31854 + 291015 * t31856 - 67425 * t31858 + 161) * t31845) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 3135:
            t31873 = np.sin(phi)
            t31870 = t31873 ** 2
            t31871 = t31870 ** 2
            t31861 = np.cos(phi)
            t31862 = t31861 ** 2
            t31864 = t31862 ** 2
            t31868 = t31864 ** 2
            t31863 = t31861 * t31862
            t31866 = t31863 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.28405e5) * t31871 ** 2 * (700 * t31862 - 5600 * t31863 - 9450 * t31864 + 36540 * t31866 - 40455 * t31868 - 7 + (41580 * t31864 - 104400 * t31866 + 80910 * t31868 + 182) * t31861) * np.sin((8 * phi1 - phi2)) * ((1 - t31861) ** (-0.1e1 / 0.2e1)) * ((1 + t31861) ** (-0.1e1 / 0.2e1))

        if Bindx == 3136:
            t31874 = np.cos(phi)
            t31875 = t31874 ** 2
            t31876 = t31875 ** 2
            t31877 = t31875 * t31876
            t31880 = t31877 ** 2
            t31878 = t31876 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t31876 - 78568 * t31877 + 398340 * t31880 + 7 + (246122 + 40455 * t31878) * t31878 + (-419560 * t31878 - 198360 * t31880 - 728) * t31875) * np.cos((8 * phi1))

        if Bindx == 3137:
            t31895 = np.sin(phi)
            t31892 = t31895 ** 2
            t31893 = t31892 ** 2
            t31883 = np.cos(phi)
            t31884 = t31883 ** 2
            t31886 = t31884 ** 2
            t31890 = t31886 ** 2
            t31885 = t31883 * t31884
            t31888 = t31885 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.28405e5) * t31893 ** 2 * (-700 * t31884 - 5600 * t31885 + 9450 * t31886 - 36540 * t31888 + 40455 * t31890 + 7 + (41580 * t31886 - 104400 * t31888 + 80910 * t31890 + 182) * t31883) * np.sin((8 * phi1 + phi2)) * ((1 - t31883) ** (-0.1e1 / 0.2e1)) * ((1 + t31883) ** (-0.1e1 / 0.2e1))

        if Bindx == 3138:
            t31896 = np.cos(phi)
            t31897 = t31896 ** 2
            t31898 = t31896 * t31897
            t31901 = t31898 ** 2
            t31902 = t31896 * t31901
            t31909 = t31902 ** 2
            t31907 = t31901 ** 2
            t31899 = t31897 ** 2
            t31900 = t31896 * t31899
            t31905 = t31900 ** 2
            t31903 = t31899 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17043e5) * (-714 * t31897 + 5383 * t31898 + 12250 * t31899 - 51093 * t31900 - 82306 * t31901 + 211331 * t31902 - 520510 * t31905 + 545670 * t31907 - 300150 * t31909 + 7 + (278328 + 67425 * t31903) * t31903 + (-446275 * t31903 + 504405 * t31905 - 291015 * t31907 + 67425 * t31909 - 161) * t31896) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 3139:
            t31926 = np.sin(phi)
            t31923 = t31926 ** 2
            t31924 = t31926 * t31923
            t31912 = np.cos(phi)
            t31913 = t31912 ** 2
            t31915 = t31913 ** 2
            t31916 = t31912 * t31915
            t31921 = t31916 ** 2
            t31919 = t31915 ** 2
            t31914 = t31912 * t31913
            t31917 = t31914 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6279e4) * t31924 ** 2 * (3007 * t31913 + 794 * t31914 - 42150 * t31915 - 13220 * t31916 + 191790 * t31917 - 337995 * t31919 + 202275 * t31921 - 31 + (81540 * t31917 - 187050 * t31919 + 134850 * t31921 - 18) * t31912) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t31912) ** (-0.1e1 / 0.2e1)) * ((1 + t31912) ** (-0.1e1 / 0.2e1))

        if Bindx == 3140:
            t31927 = np.cos(phi)
            t31928 = t31927 ** 2
            t31929 = t31927 * t31928
            t31932 = t31929 ** 2
            t31933 = t31927 * t31932
            t31940 = t31933 ** 2
            t31938 = t31932 ** 2
            t31930 = t31928 ** 2
            t31931 = t31927 * t31930
            t31936 = t31931 ** 2
            t31934 = t31930 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2415e4) * (2208 * t31928 + 19942 * t31929 - 31060 * t31930 - 188958 * t31931 + 142688 * t31932 + 809638 * t31933 - 47840 * t31936 + 531180 * t31938 - 542880 * t31940 - 23 + (-229578 + 175305 * t31934) * t31934 + (-1818970 * t31934 + 2219490 * t31936 - 1391130 * t31938 + 350610 * t31940 - 622) * t31927) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 3141:
            t31958 = np.sin(phi)
            t31956 = t31958 ** 2
            t31943 = np.cos(phi)
            t31944 = t31943 ** 2
            t31945 = t31943 * t31944
            t31948 = t31945 ** 2
            t31954 = t31948 ** 2
            t31946 = t31944 ** 2
            t31947 = t31943 * t31946
            t31952 = t31947 ** 2
            t31950 = t31946 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * t31956 ** 2 * (-6570 * t31944 + 43460 * t31945 + 99515 * t31946 - 306162 * t31947 - 580220 * t31948 + 1567215 * t31950 - 1934010 * t31952 + 876525 * t31954 + 73 + (777400 * t31948 - 637650 * t31950 - 203580 * t31952 + 350610 * t31954 - 1550) * t31943) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t31943) ** (-0.1e1 / 0.2e1)) * ((1 + t31943) ** (-0.1e1 / 0.2e1))

        if Bindx == 3142:
            t31959 = np.cos(phi)
            t31960 = t31959 ** 2
            t31961 = t31959 * t31960
            t31964 = t31961 ** 2
            t31965 = t31959 * t31964
            t31972 = t31965 ** 2
            t31970 = t31964 ** 2
            t31962 = t31960 ** 2
            t31963 = t31959 * t31962
            t31968 = t31963 ** 2
            t31966 = t31962 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (8342 * t31960 + 2317 * t31961 - 115990 * t31962 - 58247 * t31963 + 607838 * t31964 + 448657 * t31965 + 1811810 * t31968 - 832650 * t31970 - 147030 * t31972 - 97 + (-1507528 + 175305 * t31966) * t31966 + (-1467345 * t31966 + 2330055 * t31968 - 1781325 * t31970 + 525915 * t31972 - 27) * t31959) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 3143:
            t31976 = np.cos(phi)
            t31977 = t31976 ** 2
            t31978 = t31976 * t31977
            t31981 = t31978 ** 2
            t31982 = t31976 * t31981
            t31989 = t31982 ** 2
            t31987 = t31981 ** 2
            t31979 = t31977 ** 2
            t31980 = t31976 * t31979
            t31985 = t31980 ** 2
            t31983 = t31979 ** 2
            t31975 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.3e1) * t31975 ** 2 * (-59171 * t31977 - 432810 * t31978 + 584465 * t31979 + 3448214 * t31980 - 1195887 * t31981 - 12201266 * t31982 - 2790425 * t31983 + 12747735 * t31985 - 15398565 * t31987 + 6135675 * t31989 + 749 + (20670650 * t31983 - 15208830 * t31985 + 1979250 * t31987 + 1753050 * t31989 + 16318) * t31976) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t31976) ** (-0.1e1 / 0.2e1)) * ((1 + t31976) ** (-0.1e1 / 0.2e1))

        if Bindx == 3144:
            t31991 = np.cos(phi)
            t31992 = t31991 ** 2
            t31993 = t31991 * t31992
            t31996 = t31993 ** 2
            t31997 = t31991 * t31996
            t32004 = t31997 ** 2
            t32002 = t31996 ** 2
            t31994 = t31992 ** 2
            t31995 = t31991 * t31994
            t32000 = t31995 ** 2
            t31998 = t31994 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (123912 * t31992 - 927276 * t31993 - 1877820 * t31994 + 5598684 * t31995 + 12065592 * t31996 - 12547788 * t31997 + 55215160 * t32000 - 37493820 * t32002 + 6107400 * t32004 - 1721 + (-36760086 + 2629575 * t31998) * t31998 + (5384500 * t31998 + 19017180 * t32000 - 27076140 * t32002 + 10518300 * t32004 + 40732) * t31991) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 3145:
            t32008 = np.cos(phi)
            t32009 = t32008 ** 2
            t32010 = t32008 * t32009
            t32013 = t32010 ** 2
            t32014 = t32008 * t32013
            t32021 = t32014 ** 2
            t32019 = t32013 ** 2
            t32011 = t32009 ** 2
            t32012 = t32008 * t32011
            t32017 = t32012 ** 2
            t32015 = t32011 ** 2
            t32007 = np.sin(phi)
            tfunc[..., c] = 0.165e3 / 0.8192e4 * t32007 ** 2 * (-34335 * t32009 + 5586 * t32010 + 349461 * t32011 + 206514 * t32012 - 1326171 * t32013 - 1489158 * t32014 + 1973763 * t32015 - 405405 * t32017 - 1496313 * t32019 + 946647 * t32021 + 545 + (3601598 * t32015 - 3523338 * t32017 + 997542 * t32019 + 210366 * t32021 - 918) * t32008) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t32008) ** (-0.1e1 / 0.2e1)) * ((1 + t32008) ** (-0.1e1 / 0.2e1))

        if Bindx == 3146:
            t32023 = np.cos(phi)
            t32024 = t32023 ** 2
            t32025 = t32023 * t32024
            t32028 = t32025 ** 2
            t32029 = t32023 * t32028
            t32036 = t32029 ** 2
            t32034 = t32028 ** 2
            t32026 = t32024 ** 2
            t32027 = t32023 * t32026
            t32032 = t32027 ** 2
            t32030 = t32026 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-1566 * t32024 - 6303 * t32025 + 9534 * t32026 + 45117 * t32027 - 4422 * t32028 - 137643 * t32029 + 214918 * t32032 - 195102 * t32034 + 51678 * t32036 + 29 + (-83160 + 8091 * t32030) * t32030 + (180587 * t32030 - 60669 * t32032 - 61857 * t32034 + 40455 * t32036 + 313) * t32023) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 3147:
            t32054 = np.sin(phi)
            t32052 = t32054 ** 2
            t32039 = np.cos(phi)
            t32040 = t32039 ** 2
            t32041 = t32039 * t32040
            t32044 = t32041 ** 2
            t32050 = t32044 ** 2
            t32042 = t32040 ** 2
            t32043 = t32039 * t32042
            t32048 = t32043 ** 2
            t32046 = t32042 ** 2
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.91e2) * t32052 ** 2 * (126 * t32040 - 2420 * t32041 - 3641 * t32042 + 7194 * t32043 + 18612 * t32044 - 28677 * t32046 + 5742 * t32048 + 9889 * t32050 - 3 + (1320 * t32044 - 24486 * t32046 + 18444 * t32048 + 1798 * t32050 + 198) * t32039) * np.sin((8 * phi1 + 11 * phi2)) * ((1 - t32039) ** (-0.1e1 / 0.2e1)) * ((1 + t32039) ** (-0.1e1 / 0.2e1))

        if Bindx == 3148:
            t32055 = np.cos(phi)
            t32056 = t32055 ** 2
            t32057 = t32055 * t32056
            t32060 = t32057 ** 2
            t32061 = t32055 * t32060
            t32068 = t32061 ** 2
            t32066 = t32060 ** 2
            t32058 = t32056 ** 2
            t32059 = t32055 * t32058
            t32064 = t32059 ** 2
            t32062 = t32058 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.65e2) * (-3552 * t32056 + 3454 * t32057 + 29940 * t32058 + 17002 * t32059 - 85536 * t32060 - 121154 * t32061 + 85536 * t32064 - 146252 * t32066 + 51040 * t32068 + 111 + (64218 + 4495 * t32062) * t32062 + (228030 * t32062 - 146838 * t32064 - 6786 * t32066 + 26970 * t32068 - 678) * t32055) * np.cos((8 * phi1 + 12 * phi2))

        if Bindx == 3149:
            t32085 = np.sin(phi)
            t32082 = t32085 ** 2
            t32083 = t32085 * t32082
            t32071 = np.cos(phi)
            t32072 = t32071 ** 2
            t32074 = t32072 ** 2
            t32075 = t32071 * t32074
            t32080 = t32075 ** 2
            t32078 = t32074 ** 2
            t32073 = t32071 * t32072
            t32076 = t32073 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.1885e4) * t32083 ** 2 * (459 * t32072 + 958 * t32073 - 670 * t32074 - 4172 * t32075 - 4186 * t32076 + 5993 * t32078 + 2015 * t32080 - 27 + (1324 * t32076 + 5170 * t32078 + 310 * t32080 - 6) * t32071) * np.sin((8 * phi1 + 13 * phi2)) * ((1 - t32071) ** (-0.1e1 / 0.2e1)) * ((1 + t32071) ** (-0.1e1 / 0.2e1))

        if Bindx == 3150:
            t32086 = np.cos(phi)
            t32087 = t32086 ** 2
            t32088 = t32086 * t32087
            t32091 = t32088 ** 2
            t32092 = t32086 * t32091
            t32099 = t32092 ** 2
            t32097 = t32091 ** 2
            t32089 = t32087 ** 2
            t32090 = t32086 * t32089
            t32095 = t32090 ** 2
            t32093 = t32089 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.377e3) * (42 * t32087 + 303 * t32088 + 294 * t32089 - 717 * t32090 - 1694 * t32091 - 341 * t32092 - 418 * t32095 - 1158 * t32097 + 534 * t32099 - 7 + (2376 + 31 * t32093) * t32093 + (2453 * t32093 - 2163 * t32095 + 273 * t32097 + 217 * t32099 - 25) * t32086) * np.cos((8 * phi1 + 14 * phi2))

        if Bindx == 3151:
            t32113 = np.sin(phi)
            t32110 = t32113 ** 2
            t32111 = t32110 ** 2
            t32102 = np.cos(phi)
            t32103 = t32102 ** 2
            t32104 = t32103 ** 2
            t32108 = t32104 ** 2
            t32105 = t32102 * t32104
            t32106 = t32102 * t32105
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.11687e5) * t32111 ** 2 * (-12 * t32103 + 42 * t32104 + 84 * t32105 + 84 * t32106 + 15 * t32108 - 1 + (48 * t32106 + 2 * t32108 - 6) * t32102) * np.sin((8 * phi1 + 15 * phi2)) * ((1 - t32102) ** (-0.1e1 / 0.2e1)) * ((1 + t32102) ** (-0.1e1 / 0.2e1))

        if Bindx == 3152:
            t32114 = np.cos(phi)
            t32130 = 8 * t32114
            t32115 = t32114 ** 2
            t32116 = t32114 * t32115
            t32119 = t32116 ** 2
            t32125 = t32119 ** 2
            t32117 = t32115 ** 2
            t32118 = t32114 * t32117
            t32123 = t32118 ** 2
            t32121 = t32117 ** 2
            t32120 = t32114 * t32119
            tfunc[..., c] = 0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * np.cos((8 * phi1 + 16 * phi2)) * (24 * t32115 + 24 * t32116 - 36 * t32117 - 120 * t32118 - 88 * t32119 - 88 * t32123 - 36 * t32125 + t32130 + 1 + (198 + t32121) * t32121 + (88 * t32121 - 120 * t32123 + 24 * t32125) * t32114 + (88 + (t32130 + 24) * t32120) * t32120)

        if Bindx == 3153:
            t32131 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.11687e5) * ((1 - t32131) ** (0.25e2 / 0.2e1)) * ((1 + t32131) ** (0.7e1 / 0.2e1)) * np.sin((9 * phi1 - 16 * phi2))

        if Bindx == 3154:
            t32132 = np.cos(phi)
            t32133 = t32132 ** 2
            t32134 = t32132 * t32133
            t32137 = t32134 ** 2
            t32138 = t32132 * t32137
            t32145 = t32138 ** 2
            t32143 = t32137 ** 2
            t32135 = t32133 ** 2
            t32136 = t32132 * t32135
            t32141 = t32136 ** 2
            t32139 = t32135 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * (153 * t32133 + 15 * t32134 - 723 * t32135 + 1227 * t32136 - 99 * t32137 - 2101 * t32138 - 2101 * t32141 - 177 * t32143 + 447 * t32145 + 9 + (2475 + 16 * t32139) * t32139 + (-99 * t32139 + 1773 * t32141 - 615 * t32143 - 135 * t32145 - 65) * t32132) * np.cos((9 * phi1 - 15 * phi2))

        if Bindx == 3155:
            t32162 = np.sin(phi)
            t32159 = t32162 ** 2
            t32160 = t32162 * t32159
            t32148 = np.cos(phi)
            t32149 = t32148 ** 2
            t32151 = t32149 ** 2
            t32152 = t32148 * t32151
            t32157 = t32152 ** 2
            t32155 = t32151 ** 2
            t32150 = t32148 * t32149
            t32153 = t32150 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.377e3) * t32160 ** 2 * (-365 * t32149 - 1680 * t32150 + 5310 * t32151 - 5124 * t32152 - 2226 * t32153 - 11445 * t32155 - 1953 * t32157 - 73 + (10440 * t32153 + 6490 * t32155 + 248 * t32157 + 378) * t32148) * np.sin((9 * phi1 - 14 * phi2)) * ((1 + t32148) ** (-0.1e1 / 0.2e1)) * ((1 - t32148) ** (-0.1e1 / 0.2e1))

        if Bindx == 3156:
            t32163 = np.cos(phi)
            t32164 = t32163 ** 2
            t32165 = t32163 * t32164
            t32168 = t32165 ** 2
            t32169 = t32163 * t32168
            t32176 = t32169 ** 2
            t32174 = t32168 ** 2
            t32166 = t32164 ** 2
            t32167 = t32163 * t32166
            t32172 = t32167 ** 2
            t32170 = t32166 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (759 * t32164 - 3301 * t32165 + 1119 * t32166 + 12011 * t32167 - 18645 * t32168 - 6193 * t32169 - 18315 * t32172 - 13691 * t32174 + 9769 * t32176 - 69 + (38577 + 496 * t32170) * t32170 + (-26763 * t32170 + 35841 * t32172 - 8151 * t32174 - 3627 * t32176 + 183) * t32163) * np.cos((9 * phi1 - 13 * phi2))

        if Bindx == 3157:
            t32194 = np.sin(phi)
            t32192 = t32194 ** 2
            t32179 = np.cos(phi)
            t32180 = t32179 ** 2
            t32181 = t32179 * t32180
            t32184 = t32181 ** 2
            t32190 = t32184 ** 2
            t32182 = t32180 ** 2
            t32183 = t32179 * t32182
            t32188 = t32183 ** 2
            t32186 = t32182 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t32192 ** 2 * (4422 * t32180 - 6084 * t32181 - 16655 * t32182 + 47772 * t32183 - 14796 * t32184 + 103113 * t32186 - 65946 * t32188 - 24273 * t32190 - 201 + (-78024 * t32184 - 15720 * t32186 + 62988 * t32188 + 3596 * t32190 - 192) * t32179) * np.sin((9 * phi1 - 12 * phi2)) * ((1 - t32179) ** (-0.1e1 / 0.2e1)) * ((1 + t32179) ** (-0.1e1 / 0.2e1))

        if Bindx == 3158:
            t32195 = np.cos(phi)
            t32196 = t32195 ** 2
            t32197 = t32195 * t32196
            t32200 = t32197 ** 2
            t32201 = t32195 * t32200
            t32208 = t32201 ** 2
            t32206 = t32200 ** 2
            t32198 = t32196 ** 2
            t32199 = t32195 * t32198
            t32204 = t32199 ** 2
            t32202 = t32198 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-8085 * t32196 - 14375 * t32197 + 79035 * t32198 - 16463 * t32199 - 266673 * t32200 + 291445 * t32201 + 145233 * t32204 - 433735 * t32206 + 181685 * t32208 + 231 + (287925 + 14384 * t32202) * t32202 + (-675345 * t32202 + 525723 * t32204 - 23925 * t32206 - 89001 * t32208 + 1941) * t32195) * np.cos((9 * phi1 - 11 * phi2))

        if Bindx == 3159:
            t32212 = np.cos(phi)
            t32213 = t32212 ** 2
            t32214 = t32212 * t32213
            t32217 = t32214 ** 2
            t32218 = t32212 * t32217
            t32225 = t32218 ** 2
            t32223 = t32217 ** 2
            t32215 = t32213 ** 2
            t32216 = t32212 * t32215
            t32221 = t32216 ** 2
            t32219 = t32215 ** 2
            t32211 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.91e2) * t32211 ** 2 * (1035 * t32213 + 85740 * t32214 - 97695 * t32215 - 353826 * t32216 + 686235 * t32217 + 348480 * t32218 - 1633005 * t32219 + 1364121 * t32221 + 35235 * t32223 - 364095 * t32225 - 23 + (691790 * t32219 - 1472580 * t32221 + 649890 * t32223 + 64728 * t32225 - 6030) * t32212) * np.sin((9 * phi1 - 10 * phi2)) * ((1 + t32212) ** (-0.1e1 / 0.2e1)) * ((1 - t32212) ** (-0.1e1 / 0.2e1))

        if Bindx == 3160:
            t32227 = np.cos(phi)
            t32228 = t32227 ** 2
            t32229 = t32227 * t32228
            t32232 = t32229 ** 2
            t32233 = t32227 * t32232
            t32240 = t32233 ** 2
            t32238 = t32232 ** 2
            t32230 = t32228 ** 2
            t32231 = t32227 * t32230
            t32236 = t32231 ** 2
            t32234 = t32230 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-320265 * t32228 + 1175895 * t32229 + 2090235 * t32230 - 8767269 * t32231 - 1924461 * t32232 + 27866355 * t32233 + 42311269 * t32236 - 40528215 * t32238 + 11349585 * t32240 + 5823 + (-14650515 + 1682928 * t32234) * t32234 + (-38442195 * t32234 + 14970501 * t32236 + 11756745 * t32238 - 8519823 * t32240 - 56593) * t32227) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 3161:
            t32244 = np.cos(phi)
            t32245 = t32244 ** 2
            t32246 = t32244 * t32245
            t32249 = t32246 ** 2
            t32250 = t32244 * t32249
            t32257 = t32250 ** 2
            t32255 = t32249 ** 2
            t32247 = t32245 ** 2
            t32248 = t32244 * t32247
            t32253 = t32248 ** 2
            t32251 = t32247 ** 2
            t32243 = np.sin(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * t32243 ** 2 * (34335 * t32245 + 5586 * t32246 - 349461 * t32247 + 206514 * t32248 + 1326171 * t32249 - 1489158 * t32250 - 1973763 * t32251 + 405405 * t32253 + 1496313 * t32255 - 946647 * t32257 - 545 + (3601598 * t32251 - 3523338 * t32253 + 997542 * t32255 + 210366 * t32257 - 918) * t32244) * np.sin((9 * phi1 - 8 * phi2)) * ((1 + t32244) ** (-0.1e1 / 0.2e1)) * ((1 - t32244) ** (-0.1e1 / 0.2e1))

        if Bindx == 3162:
            t32259 = np.cos(phi)
            t32260 = t32259 ** 2
            t32261 = t32259 * t32260
            t32264 = t32261 ** 2
            t32265 = t32259 * t32264
            t32272 = t32265 ** 2
            t32270 = t32264 ** 2
            t32262 = t32260 ** 2
            t32263 = t32259 * t32262
            t32268 = t32263 ** 2
            t32266 = t32262 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (31453 * t32260 + 202867 * t32261 - 456743 * t32262 - 1182377 * t32263 + 2805649 * t32264 + 2475583 * t32265 + 11914903 * t32268 - 7774221 * t32270 + 1141179 * t32272 - 443 + (-8222753 + 560976 * t32266) * t32266 + (-577071 * t32266 - 4662567 * t32268 + 5961501 * t32270 - 2208843 * t32272 - 9093) * t32259) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 3163:
            t32290 = np.sin(phi)
            t32288 = t32290 ** 2
            t32275 = np.cos(phi)
            t32276 = t32275 ** 2
            t32277 = t32275 * t32276
            t32280 = t32277 ** 2
            t32286 = t32280 ** 2
            t32278 = t32276 ** 2
            t32279 = t32275 * t32278
            t32284 = t32279 ** 2
            t32282 = t32278 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.345e3) * t32288 ** 2 * (-8436 * t32276 + 79134 * t32277 + 66275 * t32278 - 545028 * t32279 + 4752 * t32280 - 799227 * t32282 + 1642212 * t32284 - 946647 * t32286 + 111 + (1538108 * t32280 - 1763190 * t32282 + 454662 * t32284 + 280488 * t32286 - 3214) * t32275) * np.sin((9 * phi1 - 6 * phi2)) * ((1 - t32275) ** (-0.1e1 / 0.2e1)) * ((1 + t32275) ** (-0.1e1 / 0.2e1))

        if Bindx == 3164:
            t32291 = np.cos(phi)
            t32292 = t32291 ** 2
            t32293 = t32291 * t32292
            t32296 = t32293 ** 2
            t32297 = t32291 * t32296
            t32304 = t32297 ** 2
            t32302 = t32296 ** 2
            t32294 = t32292 ** 2
            t32295 = t32291 * t32294
            t32300 = t32295 ** 2
            t32298 = t32294 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (31789 * t32292 - 33215 * t32293 - 419699 * t32294 + 402409 * t32295 + 2056873 * t32296 - 2216387 * t32297 + 5022199 * t32300 - 1716897 * t32302 - 840333 * t32304 - 383 + (-4694525 + 560976 * t32298) * t32298 + (6016887 * t32298 - 8411949 * t32300 + 5818995 * t32302 - 1577745 * t32304 + 1005) * t32291) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 3165:
            t32321 = np.sin(phi)
            t32318 = t32321 ** 2
            t32319 = t32321 * t32318
            t32307 = np.cos(phi)
            t32308 = t32307 ** 2
            t32310 = t32308 ** 2
            t32311 = t32307 * t32310
            t32316 = t32311 ** 2
            t32314 = t32310 ** 2
            t32309 = t32307 * t32308
            t32312 = t32309 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t32319 ** 2 * (-4505 * t32308 - 17060 * t32309 + 58410 * t32310 + 95576 * t32311 - 264186 * t32312 + 491985 * t32314 - 315549 * t32316 + 53 + (-140400 * t32312 - 45240 * t32314 + 140244 * t32316 + 672) * t32307) * np.sin((9 * phi1 - 4 * phi2)) * ((1 + t32307) ** (-0.1e1 / 0.2e1)) * ((1 - t32307) ** (-0.1e1 / 0.2e1))

        if Bindx == 3166:
            t32322 = np.cos(phi)
            t32323 = t32322 ** 2
            t32324 = t32322 * t32323
            t32327 = t32324 ** 2
            t32328 = t32322 * t32327
            t32335 = t32328 ** 2
            t32333 = t32327 ** 2
            t32325 = t32323 ** 2
            t32326 = t32322 * t32325
            t32331 = t32326 ** 2
            t32329 = t32325 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (273 * t32323 - 7197 * t32324 - 2951 * t32325 + 62979 * t32326 + 4221 * t32327 - 246281 * t32328 - 160477 * t32331 + 242883 * t32333 - 166257 * t32335 - 3 + (39159 + 43152 * t32329) * t32329 + (502173 * t32329 - 555687 * t32331 + 316593 * t32333 - 72819 * t32335 + 239) * t32322) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 3167:
            t32350 = np.sin(phi)
            t32347 = t32350 ** 2
            t32348 = t32347 ** 2
            t32338 = np.cos(phi)
            t32339 = t32338 ** 2
            t32341 = t32339 ** 2
            t32345 = t32341 ** 2
            t32340 = t32338 * t32339
            t32343 = t32340 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.17043e5) * t32348 ** 2 * (630 * t32339 - 1190 * t32340 - 7560 * t32341 + 25578 * t32343 - 24273 * t32345 - 7 + (8694 * t32341 - 23490 * t32343 + 21576 * t32345 + 42) * t32338) * np.sin((9 * phi1 - 2 * phi2)) * ((1 - t32338) ** (-0.1e1 / 0.2e1)) * ((1 + t32338) ** (-0.1e1 / 0.2e1))

        if Bindx == 3168:
            t32351 = np.cos(phi)
            t32352 = t32351 ** 2
            t32353 = t32351 * t32352
            t32356 = t32353 ** 2
            t32357 = t32351 * t32356
            t32364 = t32357 ** 2
            t32362 = t32356 ** 2
            t32354 = t32352 ** 2
            t32355 = t32351 * t32354
            t32360 = t32355 ** 2
            t32358 = t32354 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (-3325 * t32352 - 9765 * t32353 + 51695 * t32354 + 85239 * t32355 - 307601 * t32356 - 322425 * t32357 - 1476215 * t32360 + 1348965 * t32362 - 651195 * t32364 + 35 + (908185 + 129456 * t32358) * t32358 + (621585 * t32358 - 642735 * t32360 + 340605 * t32362 - 72819 * t32364 + 315) * t32351) * np.cos((9 * phi1 - phi2))

        if Bindx == 3169:
            t32375 = np.sin(phi)
            t32371 = t32375 ** 2
            t32373 = t32375 * t32371 ** 2
            t32367 = np.cos(phi)
            t32368 = t32367 ** 2
            t32369 = t32368 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t32367 * t32373 ** 2 * (-5481 * t32369 - 35 + (8091 * t32369 + 945) * t32368) * np.sin((9 * phi1)) * ((1 + t32367) ** (-0.1e1 / 0.2e1)) * ((1 - t32367) ** (-0.1e1 / 0.2e1))

        if Bindx == 3170:
            t32376 = np.cos(phi)
            t32377 = t32376 ** 2
            t32378 = t32376 * t32377
            t32381 = t32378 ** 2
            t32382 = t32376 * t32381
            t32389 = t32382 ** 2
            t32387 = t32381 ** 2
            t32379 = t32377 ** 2
            t32380 = t32376 * t32379
            t32385 = t32380 ** 2
            t32383 = t32379 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.28405e5) * (-3325 * t32377 + 9765 * t32378 + 51695 * t32379 - 85239 * t32380 - 307601 * t32381 + 322425 * t32382 - 1476215 * t32385 + 1348965 * t32387 - 651195 * t32389 + 35 + (908185 + 129456 * t32383) * t32383 + (-621585 * t32383 + 642735 * t32385 - 340605 * t32387 + 72819 * t32389 - 315) * t32376) * np.cos((9 * phi1 + phi2))

        if Bindx == 3171:
            t32404 = np.sin(phi)
            t32401 = t32404 ** 2
            t32402 = t32401 ** 2
            t32392 = np.cos(phi)
            t32393 = t32392 ** 2
            t32395 = t32393 ** 2
            t32399 = t32395 ** 2
            t32394 = t32392 * t32393
            t32397 = t32394 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.17043e5) * t32402 ** 2 * (-630 * t32393 - 1190 * t32394 + 7560 * t32395 - 25578 * t32397 + 24273 * t32399 + 7 + (8694 * t32395 - 23490 * t32397 + 21576 * t32399 + 42) * t32392) * np.sin((9 * phi1 + 2 * phi2)) * ((1 - t32392) ** (-0.1e1 / 0.2e1)) * ((1 + t32392) ** (-0.1e1 / 0.2e1))

        if Bindx == 3172:
            t32405 = np.cos(phi)
            t32406 = t32405 ** 2
            t32407 = t32405 * t32406
            t32410 = t32407 ** 2
            t32411 = t32405 * t32410
            t32418 = t32411 ** 2
            t32416 = t32410 ** 2
            t32408 = t32406 ** 2
            t32409 = t32405 * t32408
            t32414 = t32409 ** 2
            t32412 = t32408 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (273 * t32406 + 7197 * t32407 - 2951 * t32408 - 62979 * t32409 + 4221 * t32410 + 246281 * t32411 - 160477 * t32414 + 242883 * t32416 - 166257 * t32418 - 3 + (39159 + 43152 * t32412) * t32412 + (-502173 * t32412 + 555687 * t32414 - 316593 * t32416 + 72819 * t32418 - 239) * t32405) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 3173:
            t32435 = np.sin(phi)
            t32432 = t32435 ** 2
            t32433 = t32435 * t32432
            t32421 = np.cos(phi)
            t32422 = t32421 ** 2
            t32424 = t32422 ** 2
            t32425 = t32421 * t32424
            t32430 = t32425 ** 2
            t32428 = t32424 ** 2
            t32423 = t32421 * t32422
            t32426 = t32423 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t32433 ** 2 * (4505 * t32422 - 17060 * t32423 - 58410 * t32424 + 95576 * t32425 + 264186 * t32426 - 491985 * t32428 + 315549 * t32430 - 53 + (-140400 * t32426 - 45240 * t32428 + 140244 * t32430 + 672) * t32421) * np.sin((9 * phi1 + 4 * phi2)) * ((1 + t32421) ** (-0.1e1 / 0.2e1)) * ((1 - t32421) ** (-0.1e1 / 0.2e1))

        if Bindx == 3174:
            t32436 = np.cos(phi)
            t32437 = t32436 ** 2
            t32438 = t32436 * t32437
            t32441 = t32438 ** 2
            t32442 = t32436 * t32441
            t32449 = t32442 ** 2
            t32447 = t32441 ** 2
            t32439 = t32437 ** 2
            t32440 = t32436 * t32439
            t32445 = t32440 ** 2
            t32443 = t32439 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.345e3) * (31789 * t32437 + 33215 * t32438 - 419699 * t32439 - 402409 * t32440 + 2056873 * t32441 + 2216387 * t32442 + 5022199 * t32445 - 1716897 * t32447 - 840333 * t32449 - 383 + (-4694525 + 560976 * t32443) * t32443 + (-6016887 * t32443 + 8411949 * t32445 - 5818995 * t32447 + 1577745 * t32449 - 1005) * t32436) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 3175:
            t32467 = np.sin(phi)
            t32465 = t32467 ** 2
            t32452 = np.cos(phi)
            t32453 = t32452 ** 2
            t32454 = t32452 * t32453
            t32457 = t32454 ** 2
            t32463 = t32457 ** 2
            t32455 = t32453 ** 2
            t32456 = t32452 * t32455
            t32461 = t32456 ** 2
            t32459 = t32455 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.345e3) * t32465 ** 2 * (8436 * t32453 + 79134 * t32454 - 66275 * t32455 - 545028 * t32456 - 4752 * t32457 + 799227 * t32459 - 1642212 * t32461 + 946647 * t32463 - 111 + (1538108 * t32457 - 1763190 * t32459 + 454662 * t32461 + 280488 * t32463 - 3214) * t32452) * np.sin((9 * phi1 + 6 * phi2)) * ((1 - t32452) ** (-0.1e1 / 0.2e1)) * ((1 + t32452) ** (-0.1e1 / 0.2e1))

        if Bindx == 3176:
            t32468 = np.cos(phi)
            t32469 = t32468 ** 2
            t32470 = t32468 * t32469
            t32473 = t32470 ** 2
            t32474 = t32468 * t32473
            t32481 = t32474 ** 2
            t32479 = t32473 ** 2
            t32471 = t32469 ** 2
            t32472 = t32468 * t32471
            t32477 = t32472 ** 2
            t32475 = t32471 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (31453 * t32469 - 202867 * t32470 - 456743 * t32471 + 1182377 * t32472 + 2805649 * t32473 - 2475583 * t32474 + 11914903 * t32477 - 7774221 * t32479 + 1141179 * t32481 - 443 + (-8222753 + 560976 * t32475) * t32475 + (577071 * t32475 + 4662567 * t32477 - 5961501 * t32479 + 2208843 * t32481 + 9093) * t32468) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 3177:
            t32485 = np.cos(phi)
            t32486 = t32485 ** 2
            t32487 = t32485 * t32486
            t32490 = t32487 ** 2
            t32491 = t32485 * t32490
            t32498 = t32491 ** 2
            t32496 = t32490 ** 2
            t32488 = t32486 ** 2
            t32489 = t32485 * t32488
            t32494 = t32489 ** 2
            t32492 = t32488 ** 2
            t32484 = np.sin(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * t32484 ** 2 * (-34335 * t32486 + 5586 * t32487 + 349461 * t32488 + 206514 * t32489 - 1326171 * t32490 - 1489158 * t32491 + 1973763 * t32492 - 405405 * t32494 - 1496313 * t32496 + 946647 * t32498 + 545 + (3601598 * t32492 - 3523338 * t32494 + 997542 * t32496 + 210366 * t32498 - 918) * t32485) * np.sin((9 * phi1 + 8 * phi2)) * ((1 - t32485) ** (-0.1e1 / 0.2e1)) * ((1 + t32485) ** (-0.1e1 / 0.2e1))

        if Bindx == 3178:
            t32500 = np.cos(phi)
            t32501 = t32500 ** 2
            t32502 = t32500 * t32501
            t32505 = t32502 ** 2
            t32506 = t32500 * t32505
            t32513 = t32506 ** 2
            t32511 = t32505 ** 2
            t32503 = t32501 ** 2
            t32504 = t32500 * t32503
            t32509 = t32504 ** 2
            t32507 = t32503 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-320265 * t32501 - 1175895 * t32502 + 2090235 * t32503 + 8767269 * t32504 - 1924461 * t32505 - 27866355 * t32506 + 42311269 * t32509 - 40528215 * t32511 + 11349585 * t32513 + 5823 + (-14650515 + 1682928 * t32507) * t32507 + (38442195 * t32507 - 14970501 * t32509 - 11756745 * t32511 + 8519823 * t32513 + 56593) * t32500) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 3179:
            t32517 = np.cos(phi)
            t32518 = t32517 ** 2
            t32519 = t32517 * t32518
            t32522 = t32519 ** 2
            t32523 = t32517 * t32522
            t32530 = t32523 ** 2
            t32528 = t32522 ** 2
            t32520 = t32518 ** 2
            t32521 = t32517 * t32520
            t32526 = t32521 ** 2
            t32524 = t32520 ** 2
            t32516 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.91e2) * t32516 ** 2 * (-1035 * t32518 + 85740 * t32519 + 97695 * t32520 - 353826 * t32521 - 686235 * t32522 + 348480 * t32523 + 1633005 * t32524 - 1364121 * t32526 - 35235 * t32528 + 364095 * t32530 + 23 + (691790 * t32524 - 1472580 * t32526 + 649890 * t32528 + 64728 * t32530 - 6030) * t32517) * np.sin((9 * phi1 + 10 * phi2)) * ((1 - t32517) ** (-0.1e1 / 0.2e1)) * ((1 + t32517) ** (-0.1e1 / 0.2e1))

        if Bindx == 3180:
            t32532 = np.cos(phi)
            t32533 = t32532 ** 2
            t32534 = t32532 * t32533
            t32537 = t32534 ** 2
            t32538 = t32532 * t32537
            t32545 = t32538 ** 2
            t32543 = t32537 ** 2
            t32535 = t32533 ** 2
            t32536 = t32532 * t32535
            t32541 = t32536 ** 2
            t32539 = t32535 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-8085 * t32533 + 14375 * t32534 + 79035 * t32535 + 16463 * t32536 - 266673 * t32537 - 291445 * t32538 + 145233 * t32541 - 433735 * t32543 + 181685 * t32545 + 231 + (287925 + 14384 * t32539) * t32539 + (675345 * t32539 - 525723 * t32541 + 23925 * t32543 + 89001 * t32545 - 1941) * t32532) * np.cos((9 * phi1 + 11 * phi2))

        if Bindx == 3181:
            t32563 = np.sin(phi)
            t32561 = t32563 ** 2
            t32548 = np.cos(phi)
            t32549 = t32548 ** 2
            t32550 = t32548 * t32549
            t32553 = t32550 ** 2
            t32559 = t32553 ** 2
            t32551 = t32549 ** 2
            t32552 = t32548 * t32551
            t32557 = t32552 ** 2
            t32555 = t32551 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t32561 ** 2 * (-4422 * t32549 - 6084 * t32550 + 16655 * t32551 + 47772 * t32552 + 14796 * t32553 - 103113 * t32555 + 65946 * t32557 + 24273 * t32559 + 201 + (-78024 * t32553 - 15720 * t32555 + 62988 * t32557 + 3596 * t32559 - 192) * t32548) * np.sin((9 * phi1 + 12 * phi2)) * ((1 - t32548) ** (-0.1e1 / 0.2e1)) * ((1 + t32548) ** (-0.1e1 / 0.2e1))

        if Bindx == 3182:
            t32564 = np.cos(phi)
            t32565 = t32564 ** 2
            t32566 = t32564 * t32565
            t32569 = t32566 ** 2
            t32570 = t32564 * t32569
            t32577 = t32570 ** 2
            t32575 = t32569 ** 2
            t32567 = t32565 ** 2
            t32568 = t32564 * t32567
            t32573 = t32568 ** 2
            t32571 = t32567 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (759 * t32565 + 3301 * t32566 + 1119 * t32567 - 12011 * t32568 - 18645 * t32569 + 6193 * t32570 - 18315 * t32573 - 13691 * t32575 + 9769 * t32577 - 69 + (38577 + 496 * t32571) * t32571 + (26763 * t32571 - 35841 * t32573 + 8151 * t32575 + 3627 * t32577 - 183) * t32564) * np.cos((9 * phi1 + 13 * phi2))

        if Bindx == 3183:
            t32594 = np.sin(phi)
            t32591 = t32594 ** 2
            t32592 = t32594 * t32591
            t32580 = np.cos(phi)
            t32581 = t32580 ** 2
            t32583 = t32581 ** 2
            t32584 = t32580 * t32583
            t32589 = t32584 ** 2
            t32587 = t32583 ** 2
            t32582 = t32580 * t32581
            t32585 = t32582 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.377e3) * t32592 ** 2 * (365 * t32581 - 1680 * t32582 - 5310 * t32583 - 5124 * t32584 + 2226 * t32585 + 11445 * t32587 + 1953 * t32589 + 73 + (10440 * t32585 + 6490 * t32587 + 248 * t32589 + 378) * t32580) * np.sin((9 * phi1 + 14 * phi2)) * ((1 - t32580) ** (-0.1e1 / 0.2e1)) * ((1 + t32580) ** (-0.1e1 / 0.2e1))

        if Bindx == 3184:
            t32595 = np.cos(phi)
            t32596 = t32595 ** 2
            t32597 = t32595 * t32596
            t32600 = t32597 ** 2
            t32601 = t32595 * t32600
            t32608 = t32601 ** 2
            t32606 = t32600 ** 2
            t32598 = t32596 ** 2
            t32599 = t32595 * t32598
            t32604 = t32599 ** 2
            t32602 = t32598 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * (153 * t32596 - 15 * t32597 - 723 * t32598 - 1227 * t32599 - 99 * t32600 + 2101 * t32601 - 2101 * t32604 - 177 * t32606 + 447 * t32608 + 9 + (2475 + 16 * t32602) * t32602 + (99 * t32602 - 1773 * t32604 + 615 * t32606 + 135 * t32608 + 65) * t32595) * np.cos((9 * phi1 + 15 * phi2))

        if Bindx == 3185:
            t32611 = np.cos(phi)
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.11687e5) * ((1 - t32611) ** (0.7e1 / 0.2e1)) * ((1 + t32611) ** (0.25e2 / 0.2e1)) * np.sin((9 * phi1 + 16 * phi2))

        if Bindx == 3186:
            t32612 = np.cos(phi)
            t32613 = t32612 ** 2
            t32614 = t32612 * t32613
            t32617 = t32614 ** 2
            t32618 = t32612 * t32617
            t32624 = t32618 ** 2
            t32625 = t32612 * t32624
            t32622 = t32617 ** 2
            t32615 = t32613 ** 2
            t32616 = t32612 * t32615
            t32620 = t32616 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * np.cos((10 * phi1 - 16 * phi2)) * (90 * t32614 - 78 * t32615 - 78 * t32616 + 286 * t32617 - 286 * t32618 - 286 * t32620 + 78 * t32622 + 42 * t32624 - 10 * t32625 - 1 + (286 * t32618 - 42) * t32613 + (78 * t32620 - 90 * t32622 + t32625 + 10) * t32612)

        if Bindx == 3187:
            t32641 = np.sin(phi)
            t32638 = t32641 ** 2
            t32639 = t32641 * t32638
            t32627 = np.cos(phi)
            t32628 = t32627 ** 2
            t32630 = t32628 ** 2
            t32631 = t32627 * t32630
            t32636 = t32631 ** 2
            t32634 = t32630 ** 2
            t32629 = t32627 * t32628
            t32632 = t32629 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.6293e4) * t32639 ** 2 * (145 * t32628 - 240 * t32629 + 90 * t32630 + 420 * t32631 - 966 * t32632 - 735 * t32634 - 75 * t32636 + 5 + (1080 * t32632 + 310 * t32634 + 8 * t32636 - 42) * t32627) * np.sin((10 * phi1 - 15 * phi2)) * ((1 - t32627) ** (-0.1e1 / 0.2e1)) * ((1 + t32627) ** (-0.1e1 / 0.2e1))

        if Bindx == 3188:
            t32642 = np.cos(phi)
            t32643 = t32642 ** 2
            t32644 = t32642 * t32643
            t32647 = t32644 ** 2
            t32648 = t32642 * t32647
            t32655 = t32648 ** 2
            t32653 = t32647 ** 2
            t32645 = t32643 ** 2
            t32646 = t32642 * t32645
            t32651 = t32646 ** 2
            t32649 = t32645 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.203e3) * (552 * t32643 + 825 * t32644 - 4602 * t32645 + 5343 * t32646 + 4004 * t32647 - 16159 * t32648 - 18304 * t32651 + 1482 * t32653 + 3828 * t32655 + 46 + (12870 + 124 * t32649) * t32649 + (6149 * t32649 + 11427 * t32651 - 6195 * t32653 - 1085 * t32655 - 305) * t32642) * np.cos((10 * phi1 - 14 * phi2))

        if Bindx == 3189:
            t32673 = np.sin(phi)
            t32671 = t32673 ** 2
            t32658 = np.cos(phi)
            t32659 = t32658 ** 2
            t32660 = t32658 * t32659
            t32663 = t32660 ** 2
            t32669 = t32663 ** 2
            t32661 = t32659 ** 2
            t32662 = t32658 * t32661
            t32667 = t32662 ** 2
            t32665 = t32661 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.1015e4) * t32671 ** 2 * (1898 * t32660 - 3965 * t32661 + 468 * t32662 + 9048 * t32663 + 4329 * t32665 - 11544 * t32667 - 2015 * t32669 + 51 + (-13260 * t32663 + 8190 * t32665 + 6786 * t32667 + 248 * t32669 - 234) * t32658) * np.sin((10 * phi1 - 13 * phi2)) * ((1 - t32658) ** (-0.1e1 / 0.2e1)) * ((1 + t32658) ** (-0.1e1 / 0.2e1))

        if Bindx == 3190:
            t32674 = np.cos(phi)
            t32675 = t32674 ** 2
            t32676 = t32674 * t32675
            t32679 = t32676 ** 2
            t32680 = t32674 * t32679
            t32687 = t32680 ** 2
            t32685 = t32679 ** 2
            t32677 = t32675 ** 2
            t32678 = t32674 * t32677
            t32683 = t32678 ** 2
            t32681 = t32677 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.35e2) * (2604 * t32675 - 9091 * t32676 - 936 * t32677 + 40937 * t32678 - 49764 * t32679 - 40183 * t32680 - 87516 * t32683 - 36296 * t32685 + 38164 * t32687 - 186 + (132132 + 1798 * t32681) * t32681 + (-67353 * t32681 + 127335 * t32683 - 38541 * t32685 - 13485 * t32687 + 381) * t32674) * np.cos((10 * phi1 - 12 * phi2))

        if Bindx == 3191:
            t32691 = np.cos(phi)
            t32692 = t32691 ** 2
            t32693 = t32691 * t32692
            t32696 = t32693 ** 2
            t32697 = t32691 * t32696
            t32704 = t32697 ** 2
            t32702 = t32696 ** 2
            t32694 = t32692 ** 2
            t32695 = t32691 * t32694
            t32700 = t32695 ** 2
            t32698 = t32694 ** 2
            t32690 = np.sin(phi)
            tfunc[..., c] = -0.99e2 / 0.16384e5 * t32690 ** 2 * (-56025 * t32692 + 54340 * t32693 + 294385 * t32694 - 638638 * t32695 - 185185 * t32696 + 1716000 * t32697 - 1349205 * t32698 + 2341053 * t32700 - 725725 * t32702 - 346115 * t32704 + 2241 + (-1128270 * t32698 - 911820 * t32700 + 878990 * t32702 + 50344 * t32704 + 3630) * t32691) * np.sin((10 * phi1 - 11 * phi2)) * ((1 - t32691) ** (-0.1e1 / 0.2e1)) * ((1 + t32691) ** (-0.1e1 / 0.2e1))

        if Bindx == 3192:
            t32706 = np.cos(phi)
            t32707 = t32706 ** 2
            t32708 = t32706 * t32707
            t32711 = t32708 ** 2
            t32712 = t32706 * t32711
            t32719 = t32712 ** 2
            t32717 = t32711 ** 2
            t32709 = t32707 ** 2
            t32710 = t32706 * t32709
            t32715 = t32710 ** 2
            t32713 = t32709 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (-112680 * t32707 - 236415 * t32708 + 1158690 * t32709 - 94185 * t32710 - 4120116 * t32711 + 4103385 * t32712 + 1624480 * t32715 - 6609330 * t32717 + 2959740 * t32719 + 3130 + (4877730 + 226548 * t32713) * t32713 + (-10279555 * t32713 + 8515611 * t32715 - 630315 * t32717 - 1415925 * t32719 + 29207) * t32706) * np.cos((10 * phi1 - 10 * phi2))

        if Bindx == 3193:
            t32723 = np.cos(phi)
            t32724 = t32723 ** 2
            t32725 = t32723 * t32724
            t32728 = t32725 ** 2
            t32729 = t32723 * t32728
            t32736 = t32729 ** 2
            t32734 = t32728 ** 2
            t32726 = t32724 ** 2
            t32727 = t32723 * t32726
            t32732 = t32727 ** 2
            t32730 = t32726 ** 2
            t32722 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.91e2) * t32722 ** 2 * (1035 * t32724 + 85740 * t32725 - 97695 * t32726 - 353826 * t32727 + 686235 * t32728 + 348480 * t32729 - 1633005 * t32730 + 1364121 * t32732 + 35235 * t32734 - 364095 * t32736 - 23 + (691790 * t32730 - 1472580 * t32732 + 649890 * t32734 + 64728 * t32736 - 6030) * t32723) * np.sin((10 * phi1 - 9 * phi2)) * ((1 - t32723) ** (-0.1e1 / 0.2e1)) * ((1 + t32723) ** (-0.1e1 / 0.2e1))

        if Bindx == 3194:
            t32738 = np.cos(phi)
            t32739 = t32738 ** 2
            t32740 = t32738 * t32739
            t32743 = t32740 ** 2
            t32744 = t32738 * t32743
            t32751 = t32744 ** 2
            t32749 = t32743 ** 2
            t32741 = t32739 ** 2
            t32742 = t32738 * t32741
            t32747 = t32742 ** 2
            t32745 = t32741 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-1566 * t32739 + 6303 * t32740 + 9534 * t32741 - 45117 * t32742 - 4422 * t32743 + 137643 * t32744 + 214918 * t32747 - 195102 * t32749 + 51678 * t32751 + 29 + (-83160 + 8091 * t32745) * t32745 + (-180587 * t32745 + 60669 * t32747 + 61857 * t32749 - 40455 * t32751 - 313) * t32738) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 3195:
            t32769 = np.sin(phi)
            t32767 = t32769 ** 2
            t32754 = np.cos(phi)
            t32755 = t32754 ** 2
            t32756 = t32754 * t32755
            t32759 = t32756 ** 2
            t32765 = t32759 ** 2
            t32757 = t32755 ** 2
            t32758 = t32754 * t32757
            t32763 = t32758 ** 2
            t32761 = t32757 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.273e3) * t32767 ** 2 * (-4020 * t32755 + 1078 * t32756 + 35255 * t32757 - 32340 * t32758 - 102608 * t32759 + 77121 * t32761 + 80388 * t32763 - 94395 * t32765 + 67 + (154220 * t32759 - 246510 * t32761 + 110142 * t32763 + 21576 * t32765 + 26) * t32754) * np.sin((10 * phi1 - 7 * phi2)) * ((1 - t32754) ** (-0.1e1 / 0.2e1)) * ((1 + t32754) ** (-0.1e1 / 0.2e1))

        if Bindx == 3196:
            t32770 = np.cos(phi)
            t32771 = t32770 ** 2
            t32772 = t32770 * t32771
            t32775 = t32772 ** 2
            t32776 = t32770 * t32775
            t32783 = t32776 ** 2
            t32781 = t32775 ** 2
            t32773 = t32771 ** 2
            t32774 = t32770 * t32773
            t32779 = t32774 ** 2
            t32777 = t32773 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (952 * t32771 + 4075 * t32772 - 12422 * t32773 - 20963 * t32774 + 67804 * t32775 + 32659 * t32776 + 232672 * t32779 - 134346 * t32781 + 12876 * t32783 - 14 + (-178310 + 10788 * t32777) * t32777 + (25311 * t32777 - 124407 * t32779 + 123975 * t32781 - 40455 * t32783 - 195) * t32770) * np.cos((10 * phi1 - 6 * phi2))

        if Bindx == 3197:
            t32800 = np.sin(phi)
            t32797 = t32800 ** 2
            t32798 = t32800 * t32797
            t32786 = np.cos(phi)
            t32787 = t32786 ** 2
            t32789 = t32787 ** 2
            t32790 = t32786 * t32789
            t32795 = t32790 ** 2
            t32793 = t32789 ** 2
            t32788 = t32786 * t32787
            t32791 = t32788 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t32798 ** 2 * (355 * t32787 - 7840 * t32788 - 490 * t32789 + 42740 * t32790 - 22434 * t32791 + 78735 * t32793 - 67425 * t32795 - 5 + (-81240 * t32791 + 35670 * t32793 + 21576 * t32795 + 358) * t32786) * np.sin((10 * phi1 - 5 * phi2)) * ((1 - t32786) ** (-0.1e1 / 0.2e1)) * ((1 + t32786) ** (-0.1e1 / 0.2e1))

        if Bindx == 3198:
            t32801 = np.cos(phi)
            t32802 = t32801 ** 2
            t32803 = t32801 * t32802
            t32806 = t32803 ** 2
            t32807 = t32801 * t32806
            t32814 = t32807 ** 2
            t32812 = t32806 ** 2
            t32804 = t32802 ** 2
            t32805 = t32801 * t32804
            t32810 = t32805 ** 2
            t32808 = t32804 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4485e4) * (2652 * t32802 - 6485 * t32803 - 31912 * t32804 + 58527 * t32805 + 138124 * t32806 - 248641 * t32807 + 215092 * t32810 + 504 * t32812 - 95004 * t32814 - 34 + (-267180 + 37758 * t32808) * t32808 + (550481 * t32808 - 652527 * t32810 + 392805 * t32812 - 94395 * t32814 + 235) * t32801) * np.cos((10 * phi1 - 4 * phi2))

        if Bindx == 3199:
            t32829 = np.sin(phi)
            t32826 = t32829 ** 2
            t32827 = t32826 ** 2
            t32817 = np.cos(phi)
            t32818 = t32817 ** 2
            t32820 = t32818 ** 2
            t32824 = t32820 ** 2
            t32819 = t32817 * t32818
            t32822 = t32819 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.69e2) * t32827 ** 2 * (8970 * t32818 + 13270 * t32819 - 94860 * t32820 + 295974 * t32822 - 283185 * t32824 - 115 + (-42966 * t32820 - 47502 * t32822 + 151032 * t32824 - 618) * t32817) * np.sin((10 * phi1 - 3 * phi2)) * ((1 - t32817) ** (-0.1e1 / 0.2e1)) * ((1 + t32817) ** (-0.1e1 / 0.2e1))

        if Bindx == 3200:
            t32830 = np.cos(phi)
            t32831 = t32830 ** 2
            t32832 = t32830 * t32831
            t32835 = t32832 ** 2
            t32836 = t32830 * t32835
            t32843 = t32836 ** 2
            t32841 = t32835 ** 2
            t32833 = t32831 ** 2
            t32834 = t32830 * t32833
            t32839 = t32834 ** 2
            t32837 = t32833 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.9177e4) * (-168 * t32831 - 2615 * t32832 + 2602 * t32833 + 20559 * t32834 - 16772 * t32835 - 71471 * t32836 - 99136 * t32839 + 98694 * t32841 - 51156 * t32843 + 2 + (55146 + 10788 * t32837) * t32837 + (129269 * t32837 - 127341 * t32839 + 64989 * t32841 - 13485 * t32843 + 95) * t32830) * np.cos((10 * phi1 - 2 * phi2))

        if Bindx == 3201:
            t32857 = np.sin(phi)
            t32853 = t32857 ** 2
            t32855 = t32857 * t32853 ** 2
            t32846 = np.cos(phi)
            t32847 = t32846 ** 2
            t32848 = t32846 * t32847
            t32851 = t32848 ** 2
            t32849 = t32847 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.15295e5) * t32855 ** 2 * (-2025 * t32847 + 10260 * t32848 + 19575 * t32849 - 40455 * t32851 + 25 + (-51678 * t32849 + 64728 * t32851 - 430) * t32846) * np.sin((10 * phi1 - phi2)) * ((1 - t32846) ** (-0.1e1 / 0.2e1)) * ((1 + t32846) ** (-0.1e1 / 0.2e1))

        if Bindx == 3202:
            t32858 = np.cos(phi)
            t32859 = t32858 ** 2
            t32860 = t32859 ** 2
            t32861 = t32859 * t32860
            t32864 = t32861 ** 2
            t32862 = t32860 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t32860 - 31766 * t32861 + 100890 * t32864 + 5 + (83680 + 8091 * t32862) * t32862 + (-122090 * t32862 - 44370 * t32864 - 430) * t32859) * np.cos((10 * phi1))

        if Bindx == 3203:
            t32878 = np.sin(phi)
            t32874 = t32878 ** 2
            t32876 = t32878 * t32874 ** 2
            t32867 = np.cos(phi)
            t32868 = t32867 ** 2
            t32869 = t32867 * t32868
            t32872 = t32869 ** 2
            t32870 = t32868 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.15295e5) * t32876 ** 2 * (2025 * t32868 + 10260 * t32869 - 19575 * t32870 + 40455 * t32872 - 25 + (-51678 * t32870 + 64728 * t32872 - 430) * t32867) * np.sin((10 * phi1 + phi2)) * ((1 - t32867) ** (-0.1e1 / 0.2e1)) * ((1 + t32867) ** (-0.1e1 / 0.2e1))

        if Bindx == 3204:
            t32879 = np.cos(phi)
            t32880 = t32879 ** 2
            t32881 = t32879 * t32880
            t32884 = t32881 ** 2
            t32885 = t32879 * t32884
            t32892 = t32885 ** 2
            t32890 = t32884 ** 2
            t32882 = t32880 ** 2
            t32883 = t32879 * t32882
            t32888 = t32883 ** 2
            t32886 = t32882 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.9177e4) * (-168 * t32880 + 2615 * t32881 + 2602 * t32882 - 20559 * t32883 - 16772 * t32884 + 71471 * t32885 - 99136 * t32888 + 98694 * t32890 - 51156 * t32892 + 2 + (55146 + 10788 * t32886) * t32886 + (-129269 * t32886 + 127341 * t32888 - 64989 * t32890 + 13485 * t32892 - 95) * t32879) * np.cos((10 * phi1 + 2 * phi2))

        if Bindx == 3205:
            t32907 = np.sin(phi)
            t32904 = t32907 ** 2
            t32905 = t32904 ** 2
            t32895 = np.cos(phi)
            t32896 = t32895 ** 2
            t32898 = t32896 ** 2
            t32902 = t32898 ** 2
            t32897 = t32895 * t32896
            t32900 = t32897 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.69e2) * t32905 ** 2 * (-8970 * t32896 + 13270 * t32897 + 94860 * t32898 - 295974 * t32900 + 283185 * t32902 + 115 + (-42966 * t32898 - 47502 * t32900 + 151032 * t32902 - 618) * t32895) * np.sin((10 * phi1 + 3 * phi2)) * ((1 - t32895) ** (-0.1e1 / 0.2e1)) * ((1 + t32895) ** (-0.1e1 / 0.2e1))

        if Bindx == 3206:
            t32908 = np.cos(phi)
            t32909 = t32908 ** 2
            t32910 = t32908 * t32909
            t32913 = t32910 ** 2
            t32914 = t32908 * t32913
            t32921 = t32914 ** 2
            t32919 = t32913 ** 2
            t32911 = t32909 ** 2
            t32912 = t32908 * t32911
            t32917 = t32912 ** 2
            t32915 = t32911 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4485e4) * (2652 * t32909 + 6485 * t32910 - 31912 * t32911 - 58527 * t32912 + 138124 * t32913 + 248641 * t32914 + 215092 * t32917 + 504 * t32919 - 95004 * t32921 - 34 + (-267180 + 37758 * t32915) * t32915 + (-550481 * t32915 + 652527 * t32917 - 392805 * t32919 + 94395 * t32921 - 235) * t32908) * np.cos((10 * phi1 + 4 * phi2))

        if Bindx == 3207:
            t32938 = np.sin(phi)
            t32935 = t32938 ** 2
            t32936 = t32938 * t32935
            t32924 = np.cos(phi)
            t32925 = t32924 ** 2
            t32927 = t32925 ** 2
            t32928 = t32924 * t32927
            t32933 = t32928 ** 2
            t32931 = t32927 ** 2
            t32926 = t32924 * t32925
            t32929 = t32926 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t32936 ** 2 * (-355 * t32925 - 7840 * t32926 + 490 * t32927 + 42740 * t32928 + 22434 * t32929 - 78735 * t32931 + 67425 * t32933 + 5 + (-81240 * t32929 + 35670 * t32931 + 21576 * t32933 + 358) * t32924) * np.sin((10 * phi1 + 5 * phi2)) * ((1 - t32924) ** (-0.1e1 / 0.2e1)) * ((1 + t32924) ** (-0.1e1 / 0.2e1))

        if Bindx == 3208:
            t32939 = np.cos(phi)
            t32940 = t32939 ** 2
            t32941 = t32939 * t32940
            t32944 = t32941 ** 2
            t32945 = t32939 * t32944
            t32952 = t32945 ** 2
            t32950 = t32944 ** 2
            t32942 = t32940 ** 2
            t32943 = t32939 * t32942
            t32948 = t32943 ** 2
            t32946 = t32942 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (952 * t32940 - 4075 * t32941 - 12422 * t32942 + 20963 * t32943 + 67804 * t32944 - 32659 * t32945 + 232672 * t32948 - 134346 * t32950 + 12876 * t32952 - 14 + (-178310 + 10788 * t32946) * t32946 + (-25311 * t32946 + 124407 * t32948 - 123975 * t32950 + 40455 * t32952 + 195) * t32939) * np.cos((10 * phi1 + 6 * phi2))

        if Bindx == 3209:
            t32970 = np.sin(phi)
            t32968 = t32970 ** 2
            t32955 = np.cos(phi)
            t32956 = t32955 ** 2
            t32957 = t32955 * t32956
            t32960 = t32957 ** 2
            t32966 = t32960 ** 2
            t32958 = t32956 ** 2
            t32959 = t32955 * t32958
            t32964 = t32959 ** 2
            t32962 = t32958 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.273e3) * t32968 ** 2 * (4020 * t32956 + 1078 * t32957 - 35255 * t32958 - 32340 * t32959 + 102608 * t32960 - 77121 * t32962 - 80388 * t32964 + 94395 * t32966 - 67 + (154220 * t32960 - 246510 * t32962 + 110142 * t32964 + 21576 * t32966 + 26) * t32955) * np.sin((10 * phi1 + 7 * phi2)) * ((1 - t32955) ** (-0.1e1 / 0.2e1)) * ((1 + t32955) ** (-0.1e1 / 0.2e1))

        if Bindx == 3210:
            t32971 = np.cos(phi)
            t32972 = t32971 ** 2
            t32973 = t32971 * t32972
            t32976 = t32973 ** 2
            t32977 = t32971 * t32976
            t32984 = t32977 ** 2
            t32982 = t32976 ** 2
            t32974 = t32972 ** 2
            t32975 = t32971 * t32974
            t32980 = t32975 ** 2
            t32978 = t32974 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-1566 * t32972 - 6303 * t32973 + 9534 * t32974 + 45117 * t32975 - 4422 * t32976 - 137643 * t32977 + 214918 * t32980 - 195102 * t32982 + 51678 * t32984 + 29 + (-83160 + 8091 * t32978) * t32978 + (180587 * t32978 - 60669 * t32980 - 61857 * t32982 + 40455 * t32984 + 313) * t32971) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 3211:
            t32988 = np.cos(phi)
            t32989 = t32988 ** 2
            t32990 = t32988 * t32989
            t32993 = t32990 ** 2
            t32994 = t32988 * t32993
            t33001 = t32994 ** 2
            t32999 = t32993 ** 2
            t32991 = t32989 ** 2
            t32992 = t32988 * t32991
            t32997 = t32992 ** 2
            t32995 = t32991 ** 2
            t32987 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.91e2) * t32987 ** 2 * (-1035 * t32989 + 85740 * t32990 + 97695 * t32991 - 353826 * t32992 - 686235 * t32993 + 348480 * t32994 + 1633005 * t32995 - 1364121 * t32997 - 35235 * t32999 + 364095 * t33001 + 23 + (691790 * t32995 - 1472580 * t32997 + 649890 * t32999 + 64728 * t33001 - 6030) * t32988) * np.sin((10 * phi1 + 9 * phi2)) * ((1 - t32988) ** (-0.1e1 / 0.2e1)) * ((1 + t32988) ** (-0.1e1 / 0.2e1))

        if Bindx == 3212:
            t33003 = np.cos(phi)
            t33004 = t33003 ** 2
            t33005 = t33003 * t33004
            t33008 = t33005 ** 2
            t33009 = t33003 * t33008
            t33016 = t33009 ** 2
            t33014 = t33008 ** 2
            t33006 = t33004 ** 2
            t33007 = t33003 * t33006
            t33012 = t33007 ** 2
            t33010 = t33006 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (-112680 * t33004 + 236415 * t33005 + 1158690 * t33006 + 94185 * t33007 - 4120116 * t33008 - 4103385 * t33009 + 1624480 * t33012 - 6609330 * t33014 + 2959740 * t33016 + 3130 + (4877730 + 226548 * t33010) * t33010 + (10279555 * t33010 - 8515611 * t33012 + 630315 * t33014 + 1415925 * t33016 - 29207) * t33003) * np.cos((10 * phi1 + 10 * phi2))

        if Bindx == 3213:
            t33020 = np.cos(phi)
            t33021 = t33020 ** 2
            t33022 = t33020 * t33021
            t33025 = t33022 ** 2
            t33026 = t33020 * t33025
            t33033 = t33026 ** 2
            t33031 = t33025 ** 2
            t33023 = t33021 ** 2
            t33024 = t33020 * t33023
            t33029 = t33024 ** 2
            t33027 = t33023 ** 2
            t33019 = np.sin(phi)
            tfunc[..., c] = 0.99e2 / 0.16384e5 * t33019 ** 2 * (56025 * t33021 + 54340 * t33022 - 294385 * t33023 - 638638 * t33024 + 185185 * t33025 + 1716000 * t33026 + 1349205 * t33027 - 2341053 * t33029 + 725725 * t33031 + 346115 * t33033 - 2241 + (-1128270 * t33027 - 911820 * t33029 + 878990 * t33031 + 50344 * t33033 + 3630) * t33020) * np.sin((10 * phi1 + 11 * phi2)) * ((1 - t33020) ** (-0.1e1 / 0.2e1)) * ((1 + t33020) ** (-0.1e1 / 0.2e1))

        if Bindx == 3214:
            t33035 = np.cos(phi)
            t33036 = t33035 ** 2
            t33037 = t33035 * t33036
            t33040 = t33037 ** 2
            t33041 = t33035 * t33040
            t33048 = t33041 ** 2
            t33046 = t33040 ** 2
            t33038 = t33036 ** 2
            t33039 = t33035 * t33038
            t33044 = t33039 ** 2
            t33042 = t33038 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.35e2) * (2604 * t33036 + 9091 * t33037 - 936 * t33038 - 40937 * t33039 - 49764 * t33040 + 40183 * t33041 - 87516 * t33044 - 36296 * t33046 + 38164 * t33048 - 186 + (132132 + 1798 * t33042) * t33042 + (67353 * t33042 - 127335 * t33044 + 38541 * t33046 + 13485 * t33048 - 381) * t33035) * np.cos((10 * phi1 + 12 * phi2))

        if Bindx == 3215:
            t33066 = np.sin(phi)
            t33064 = t33066 ** 2
            t33051 = np.cos(phi)
            t33052 = t33051 ** 2
            t33053 = t33051 * t33052
            t33056 = t33053 ** 2
            t33062 = t33056 ** 2
            t33054 = t33052 ** 2
            t33055 = t33051 * t33054
            t33060 = t33055 ** 2
            t33058 = t33054 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.1015e4) * t33064 ** 2 * (1898 * t33053 + 3965 * t33054 + 468 * t33055 - 9048 * t33056 - 4329 * t33058 + 11544 * t33060 + 2015 * t33062 - 51 + (-13260 * t33056 + 8190 * t33058 + 6786 * t33060 + 248 * t33062 - 234) * t33051) * np.sin((10 * phi1 + 13 * phi2)) * ((1 - t33051) ** (-0.1e1 / 0.2e1)) * ((1 + t33051) ** (-0.1e1 / 0.2e1))

        if Bindx == 3216:
            t33067 = np.cos(phi)
            t33068 = t33067 ** 2
            t33069 = t33067 * t33068
            t33072 = t33069 ** 2
            t33073 = t33067 * t33072
            t33080 = t33073 ** 2
            t33078 = t33072 ** 2
            t33070 = t33068 ** 2
            t33071 = t33067 * t33070
            t33076 = t33071 ** 2
            t33074 = t33070 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.203e3) * (552 * t33068 - 825 * t33069 - 4602 * t33070 - 5343 * t33071 + 4004 * t33072 + 16159 * t33073 - 18304 * t33076 + 1482 * t33078 + 3828 * t33080 + 46 + (12870 + 124 * t33074) * t33074 + (-6149 * t33074 - 11427 * t33076 + 6195 * t33078 + 1085 * t33080 + 305) * t33067) * np.cos((10 * phi1 + 14 * phi2))

        if Bindx == 3217:
            t33097 = np.sin(phi)
            t33094 = t33097 ** 2
            t33095 = t33097 * t33094
            t33083 = np.cos(phi)
            t33084 = t33083 ** 2
            t33086 = t33084 ** 2
            t33087 = t33083 * t33086
            t33092 = t33087 ** 2
            t33090 = t33086 ** 2
            t33085 = t33083 * t33084
            t33088 = t33085 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.6293e4) * t33095 ** 2 * (-145 * t33084 - 240 * t33085 - 90 * t33086 + 420 * t33087 + 966 * t33088 + 735 * t33090 + 75 * t33092 - 5 + (1080 * t33088 + 310 * t33090 + 8 * t33092 - 42) * t33083) * np.sin((10 * phi1 + 15 * phi2)) * ((1 - t33083) ** (-0.1e1 / 0.2e1)) * ((1 + t33083) ** (-0.1e1 / 0.2e1))

        if Bindx == 3218:
            t33098 = np.cos(phi)
            t33099 = t33098 ** 2
            t33100 = t33098 * t33099
            t33103 = t33100 ** 2
            t33104 = t33098 * t33103
            t33110 = t33104 ** 2
            t33111 = t33098 * t33110
            t33108 = t33103 ** 2
            t33101 = t33099 ** 2
            t33102 = t33098 * t33101
            t33106 = t33102 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * np.cos((10 * phi1 + 16 * phi2)) * (-90 * t33100 - 78 * t33101 + 78 * t33102 + 286 * t33103 + 286 * t33104 - 286 * t33106 + 78 * t33108 + 42 * t33110 + 10 * t33111 - 1 + (-286 * t33104 - 42) * t33099 + (-78 * t33106 + 90 * t33108 + t33111 - 10) * t33098)

        if Bindx == 3219:
            t33113 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6293e4) * ((1 - t33113) ** (0.27e2 / 0.2e1)) * ((1 + t33113) ** (0.5e1 / 0.2e1)) * np.sin((11 * phi1 - 16 * phi2))

        if Bindx == 3220:
            t33114 = np.cos(phi)
            t33115 = t33114 ** 2
            t33116 = t33114 * t33115
            t33119 = t33116 ** 2
            t33120 = t33114 * t33119
            t33127 = t33120 ** 2
            t33125 = t33119 ** 2
            t33117 = t33115 ** 2
            t33118 = t33114 * t33117
            t33123 = t33118 ** 2
            t33121 = t33117 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * (-407 * t33115 + 725 * t33116 - 143 * t33117 - 1963 * t33118 + 3861 * t33119 - 2431 * t33120 - 3861 * t33123 + 1963 * t33125 + 727 * t33127 - 11 + (-2145 + 16 * t33121) * t33121 + (5291 * t33121 + 143 * t33123 - 1705 * t33125 - 165 * t33127 + 105) * t33114) * np.cos((11 * phi1 - 15 * phi2))

        if Bindx == 3221:
            t33145 = np.sin(phi)
            t33143 = t33145 ** 2
            t33130 = np.cos(phi)
            t33131 = t33130 ** 2
            t33132 = t33130 * t33131
            t33135 = t33132 ** 2
            t33141 = t33135 ** 2
            t33133 = t33131 ** 2
            t33134 = t33130 * t33133
            t33139 = t33134 ** 2
            t33137 = t33133 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.203e3) * t33143 ** 2 * (-2712 * t33131 + 2618 * t33132 + 5335 * t33133 - 19404 * t33134 + 23496 * t33135 - 20691 * t33137 - 23408 * t33139 - 2387 * t33141 - 113 + (-5676 * t33135 + 31790 * t33137 + 10002 * t33139 + 248 * t33141 + 902) * t33130) * np.sin((11 * phi1 - 14 * phi2)) * ((1 + t33130) ** (-0.1e1 / 0.2e1)) * ((1 - t33130) ** (-0.1e1 / 0.2e1))

        if Bindx == 3222:
            t33146 = np.cos(phi)
            t33147 = t33146 ** 2
            t33148 = t33146 * t33147
            t33151 = t33148 ** 2
            t33152 = t33146 * t33151
            t33159 = t33152 ** 2
            t33157 = t33151 ** 2
            t33149 = t33147 ** 2
            t33150 = t33146 * t33149
            t33155 = t33150 ** 2
            t33153 = t33149 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * (1287 * t33147 + 3833 * t33148 - 15301 * t33149 + 13221 * t33150 + 22451 * t33151 - 59059 * t33152 - 73931 * t33155 + 13897 * t33157 + 16209 * t33159 + 143 + (34749 + 496 * t33153) * t33153 + (38467 * t33153 + 37323 * t33155 - 28457 * t33157 - 4433 * t33159 - 895) * t33146) * np.cos((11 * phi1 - 13 * phi2))

        if Bindx == 3223:
            t33163 = np.cos(phi)
            t33164 = t33163 ** 2
            t33165 = t33163 * t33164
            t33168 = t33165 ** 2
            t33169 = t33163 * t33168
            t33176 = t33169 ** 2
            t33174 = t33168 ** 2
            t33166 = t33164 ** 2
            t33167 = t33163 * t33166
            t33172 = t33167 ** 2
            t33170 = t33166 ** 2
            t33162 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t33162 ** 2 * (1851 * t33164 - 28028 * t33165 + 45123 * t33166 + 34320 * t33167 - 179465 * t33168 + 159588 * t33169 + 106821 * t33170 + 201201 * t33172 - 153439 * t33174 - 29667 * t33176 - 617 + (-313456 * t33170 + 50700 * t33172 + 98832 * t33174 + 3596 * t33176 + 2640) * t33163) * np.sin((11 * phi1 - 12 * phi2)) * ((1 + t33163) ** (-0.1e1 / 0.2e1)) * ((1 - t33163) ** (-0.1e1 / 0.2e1))

        if Bindx == 3224:
            t33178 = np.cos(phi)
            t33179 = t33178 ** 2
            t33180 = t33178 * t33179
            t33183 = t33180 ** 2
            t33184 = t33178 * t33183
            t33191 = t33184 ** 2
            t33189 = t33183 ** 2
            t33181 = t33179 ** 2
            t33182 = t33178 * t33181
            t33187 = t33182 ** 2
            t33185 = t33181 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (141405 * t33179 - 461035 * t33180 - 123695 * t33181 + 2221401 * t33182 - 2473471 * t33183 - 2508935 * t33184 - 5240521 * t33187 - 1755845 * t33189 + 2189355 * t33191 - 9427 + (7187895 + 100688 * t33185) * t33185 + (-3216785 * t33185 + 7026591 * t33187 - 2333485 * t33189 - 761453 * t33191 + 17317) * t33178) * np.cos((11 * phi1 - 11 * phi2))

        if Bindx == 3225:
            t33195 = np.cos(phi)
            t33196 = t33195 ** 2
            t33197 = t33195 * t33196
            t33200 = t33197 ** 2
            t33201 = t33195 * t33200
            t33208 = t33201 ** 2
            t33206 = t33200 ** 2
            t33198 = t33196 ** 2
            t33199 = t33195 * t33198
            t33204 = t33199 ** 2
            t33202 = t33198 ** 2
            t33194 = np.sin(phi)
            tfunc[..., c] = -0.99e2 / 0.16384e5 * t33194 ** 2 * (-56025 * t33196 + 54340 * t33197 + 294385 * t33198 - 638638 * t33199 - 185185 * t33200 + 1716000 * t33201 - 1349205 * t33202 + 2341053 * t33204 - 725725 * t33206 - 346115 * t33208 + 2241 + (-1128270 * t33202 - 911820 * t33204 + 878990 * t33206 + 50344 * t33208 + 3630) * t33195) * np.sin((11 * phi1 - 10 * phi2)) * ((1 + t33195) ** (-0.1e1 / 0.2e1)) * ((1 - t33195) ** (-0.1e1 / 0.2e1))

        if Bindx == 3226:
            t33210 = np.cos(phi)
            t33211 = t33210 ** 2
            t33212 = t33210 * t33211
            t33215 = t33212 ** 2
            t33216 = t33210 * t33215
            t33223 = t33216 ** 2
            t33221 = t33215 ** 2
            t33213 = t33211 ** 2
            t33214 = t33210 * t33213
            t33219 = t33214 ** 2
            t33217 = t33213 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-8085 * t33211 - 14375 * t33212 + 79035 * t33213 - 16463 * t33214 - 266673 * t33215 + 291445 * t33216 + 145233 * t33219 - 433735 * t33221 + 181685 * t33223 + 231 + (287925 + 14384 * t33217) * t33217 + (-675345 * t33217 + 525723 * t33219 - 23925 * t33221 - 89001 * t33223 + 1941) * t33210) * np.cos((11 * phi1 - 9 * phi2))

        if Bindx == 3227:
            t33241 = np.sin(phi)
            t33239 = t33241 ** 2
            t33226 = np.cos(phi)
            t33227 = t33226 ** 2
            t33228 = t33226 * t33227
            t33231 = t33228 ** 2
            t33237 = t33231 ** 2
            t33229 = t33227 ** 2
            t33230 = t33226 * t33229
            t33235 = t33230 ** 2
            t33233 = t33229 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.91e2) * t33239 ** 2 * (-126 * t33227 - 2420 * t33228 + 3641 * t33229 + 7194 * t33230 - 18612 * t33231 + 28677 * t33233 - 5742 * t33235 - 9889 * t33237 + 3 + (1320 * t33231 - 24486 * t33233 + 18444 * t33235 + 1798 * t33237 + 198) * t33226) * np.sin((11 * phi1 - 8 * phi2)) * ((1 + t33226) ** (-0.1e1 / 0.2e1)) * ((1 - t33226) ** (-0.1e1 / 0.2e1))

        if Bindx == 3228:
            t33242 = np.cos(phi)
            t33243 = t33242 ** 2
            t33244 = t33242 * t33243
            t33247 = t33244 ** 2
            t33248 = t33242 * t33247
            t33255 = t33248 ** 2
            t33253 = t33247 ** 2
            t33245 = t33243 ** 2
            t33246 = t33242 * t33245
            t33251 = t33246 ** 2
            t33249 = t33245 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-2805 * t33243 + 15095 * t33244 + 12683 * t33245 - 96081 * t33246 + 23023 * t33247 + 258907 * t33248 + 438449 * t33251 - 343127 * t33253 + 76821 * t33255 + 55 + (-219483 + 14384 * t33249) * t33249 + (-288079 * t33249 + 43989 * t33251 + 136213 * t33253 - 69223 * t33255 - 821) * t33242) * np.cos((11 * phi1 - 7 * phi2))

        if Bindx == 3229:
            t33272 = np.sin(phi)
            t33269 = t33272 ** 2
            t33270 = t33272 * t33269
            t33258 = np.cos(phi)
            t33259 = t33258 ** 2
            t33261 = t33259 ** 2
            t33262 = t33258 * t33261
            t33267 = t33262 ** 2
            t33265 = t33261 ** 2
            t33260 = t33258 * t33259
            t33263 = t33260 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t33270 ** 2 * (1705 * t33259 - 1760 * t33260 - 11550 * t33261 + 17468 * t33262 + 19162 * t33263 + 11165 * t33265 - 29667 * t33267 - 31 + (-48840 * t33263 + 35090 * t33265 + 7192 * t33267 + 66) * t33258) * np.sin((11 * phi1 - 6 * phi2)) * ((1 + t33258) ** (-0.1e1 / 0.2e1)) * ((1 - t33258) ** (-0.1e1 / 0.2e1))

        if Bindx == 3230:
            t33273 = np.cos(phi)
            t33274 = t33273 ** 2
            t33275 = t33273 * t33274
            t33278 = t33275 ** 2
            t33279 = t33273 * t33278
            t33286 = t33279 ** 2
            t33284 = t33278 ** 2
            t33276 = t33274 ** 2
            t33277 = t33273 * t33276
            t33282 = t33277 ** 2
            t33280 = t33276 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (2331 * t33274 + 5005 * t33275 - 26281 * t33276 - 17919 * t33277 + 121367 * t33278 - 5423 * t33279 + 297521 * t33282 - 136963 * t33284 - 1827 * t33286 - 37 + (-270495 + 14384 * t33280) * t33280 + (127303 * t33280 - 239481 * t33282 + 180235 * t33284 - 49445 * t33286 - 275) * t33273) * np.cos((11 * phi1 - 5 * phi2))

        if Bindx == 3231:
            t33301 = np.sin(phi)
            t33298 = t33301 ** 2
            t33299 = t33298 ** 2
            t33289 = np.cos(phi)
            t33290 = t33289 ** 2
            t33292 = t33290 ** 2
            t33296 = t33292 ** 2
            t33291 = t33289 * t33290
            t33294 = t33291 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t33299 ** 2 * (704 * t33290 + 12084 * t33291 - 10406 * t33292 + 53592 * t33294 - 69223 * t33296 - 11 + (-44548 * t33292 + 33292 * t33294 + 25172 * t33296 - 656) * t33289) * np.sin((11 * phi1 - 4 * phi2)) * ((1 + t33289) ** (-0.1e1 / 0.2e1)) * ((1 - t33289) ** (-0.1e1 / 0.2e1))

        if Bindx == 3232:
            t33302 = np.cos(phi)
            t33303 = t33302 ** 2
            t33304 = t33302 * t33303
            t33307 = t33304 ** 2
            t33308 = t33302 * t33307
            t33315 = t33308 ** 2
            t33313 = t33307 ** 2
            t33305 = t33303 ** 2
            t33306 = t33302 * t33305
            t33311 = t33306 ** 2
            t33309 = t33305 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (7597 * t33303 - 41987 * t33304 - 77639 * t33305 + 309001 * t33306 + 259665 * t33307 - 1058783 * t33308 - 64665 * t33311 + 464051 * t33313 - 379813 * t33315 - 107 + (-309777 + 100688 * t33309) * t33309 + (1923647 * t33309 - 1915177 * t33311 + 989219 * t33313 - 207669 * t33315 + 1749) * t33302) * np.cos((11 * phi1 - 3 * phi2))

        if Bindx == 3233:
            t33329 = np.sin(phi)
            t33325 = t33329 ** 2
            t33327 = t33329 * t33325 ** 2
            t33318 = np.cos(phi)
            t33319 = t33318 ** 2
            t33320 = t33318 * t33319
            t33323 = t33320 ** 2
            t33321 = t33319 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.9177e4) * t33327 ** 2 * (-759 * t33319 + 356 * t33320 + 6061 * t33321 - 9889 * t33323 + 11 + (-2958 * t33321 + 7192 * t33323 - 14) * t33318) * np.sin((11 * phi1 - 2 * phi2)) * ((1 + t33318) ** (-0.1e1 / 0.2e1)) * ((1 - t33318) ** (-0.1e1 / 0.2e1))

        if Bindx == 3234:
            t33330 = np.cos(phi)
            t33331 = t33330 ** 2
            t33332 = t33330 * t33331
            t33335 = t33332 ** 2
            t33336 = t33330 * t33335
            t33343 = t33336 ** 2
            t33341 = t33335 ** 2
            t33333 = t33331 ** 2
            t33334 = t33330 * t33333
            t33339 = t33334 ** 2
            t33337 = t33333 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.15295e5) * (-1125 * t33331 - 4015 * t33332 + 13955 * t33333 + 27489 * t33334 - 67809 * t33335 - 82995 * t33336 - 234655 * t33339 + 187665 * t33341 - 80475 * t33343 + 15 + (168045 + 14384 * t33337) * t33337 + (131615 * t33337 - 115005 * t33339 + 52635 * t33341 - 9889 * t33343 + 165) * t33330) * np.cos((11 * phi1 - phi2))

        if Bindx == 3235:
            t33353 = np.sin(phi)
            t33349 = t33353 ** 2
            t33350 = t33353 * t33349
            t33351 = t33350 ** 2
            t33346 = np.cos(phi)
            t33347 = t33346 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t33346 * t33351 ** 2 * (15 + (-290 + 899 * t33347) * t33347) * np.sin((11 * phi1)) * ((1 + t33346) ** (-0.1e1 / 0.2e1)) * ((1 - t33346) ** (-0.1e1 / 0.2e1))

        if Bindx == 3236:
            t33354 = np.cos(phi)
            t33355 = t33354 ** 2
            t33356 = t33354 * t33355
            t33359 = t33356 ** 2
            t33360 = t33354 * t33359
            t33367 = t33360 ** 2
            t33365 = t33359 ** 2
            t33357 = t33355 ** 2
            t33358 = t33354 * t33357
            t33363 = t33358 ** 2
            t33361 = t33357 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.15295e5) * (-1125 * t33355 + 4015 * t33356 + 13955 * t33357 - 27489 * t33358 - 67809 * t33359 + 82995 * t33360 - 234655 * t33363 + 187665 * t33365 - 80475 * t33367 + 15 + (168045 + 14384 * t33361) * t33361 + (-131615 * t33361 + 115005 * t33363 - 52635 * t33365 + 9889 * t33367 - 165) * t33354) * np.cos((11 * phi1 + phi2))

        if Bindx == 3237:
            t33381 = np.sin(phi)
            t33377 = t33381 ** 2
            t33379 = t33381 * t33377 ** 2
            t33370 = np.cos(phi)
            t33371 = t33370 ** 2
            t33372 = t33370 * t33371
            t33375 = t33372 ** 2
            t33373 = t33371 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.9177e4) * t33379 ** 2 * (759 * t33371 + 356 * t33372 - 6061 * t33373 + 9889 * t33375 - 11 + (-2958 * t33373 + 7192 * t33375 - 14) * t33370) * np.sin((11 * phi1 + 2 * phi2)) * ((1 + t33370) ** (-0.1e1 / 0.2e1)) * ((1 - t33370) ** (-0.1e1 / 0.2e1))

        if Bindx == 3238:
            t33382 = np.cos(phi)
            t33383 = t33382 ** 2
            t33384 = t33382 * t33383
            t33387 = t33384 ** 2
            t33388 = t33382 * t33387
            t33395 = t33388 ** 2
            t33393 = t33387 ** 2
            t33385 = t33383 ** 2
            t33386 = t33382 * t33385
            t33391 = t33386 ** 2
            t33389 = t33385 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.69e2) * (7597 * t33383 + 41987 * t33384 - 77639 * t33385 - 309001 * t33386 + 259665 * t33387 + 1058783 * t33388 - 64665 * t33391 + 464051 * t33393 - 379813 * t33395 - 107 + (-309777 + 100688 * t33389) * t33389 + (-1923647 * t33389 + 1915177 * t33391 - 989219 * t33393 + 207669 * t33395 - 1749) * t33382) * np.cos((11 * phi1 + 3 * phi2))

        if Bindx == 3239:
            t33410 = np.sin(phi)
            t33407 = t33410 ** 2
            t33408 = t33407 ** 2
            t33398 = np.cos(phi)
            t33399 = t33398 ** 2
            t33401 = t33399 ** 2
            t33405 = t33401 ** 2
            t33400 = t33398 * t33399
            t33403 = t33400 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4485e4) * t33408 ** 2 * (-704 * t33399 + 12084 * t33400 + 10406 * t33401 - 53592 * t33403 + 69223 * t33405 + 11 + (-44548 * t33401 + 33292 * t33403 + 25172 * t33405 - 656) * t33398) * np.sin((11 * phi1 + 4 * phi2)) * ((1 + t33398) ** (-0.1e1 / 0.2e1)) * ((1 - t33398) ** (-0.1e1 / 0.2e1))

        if Bindx == 3240:
            t33411 = np.cos(phi)
            t33412 = t33411 ** 2
            t33413 = t33411 * t33412
            t33416 = t33413 ** 2
            t33417 = t33411 * t33416
            t33424 = t33417 ** 2
            t33422 = t33416 ** 2
            t33414 = t33412 ** 2
            t33415 = t33411 * t33414
            t33420 = t33415 ** 2
            t33418 = t33414 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * (2331 * t33412 - 5005 * t33413 - 26281 * t33414 + 17919 * t33415 + 121367 * t33416 + 5423 * t33417 + 297521 * t33420 - 136963 * t33422 - 1827 * t33424 - 37 + (-270495 + 14384 * t33418) * t33418 + (-127303 * t33418 + 239481 * t33420 - 180235 * t33422 + 49445 * t33424 + 275) * t33411) * np.cos((11 * phi1 + 5 * phi2))

        if Bindx == 3241:
            t33441 = np.sin(phi)
            t33438 = t33441 ** 2
            t33439 = t33441 * t33438
            t33427 = np.cos(phi)
            t33428 = t33427 ** 2
            t33430 = t33428 ** 2
            t33431 = t33427 * t33430
            t33436 = t33431 ** 2
            t33434 = t33430 ** 2
            t33429 = t33427 * t33428
            t33432 = t33429 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * t33439 ** 2 * (-1705 * t33428 - 1760 * t33429 + 11550 * t33430 + 17468 * t33431 - 19162 * t33432 - 11165 * t33434 + 29667 * t33436 + 31 + (-48840 * t33432 + 35090 * t33434 + 7192 * t33436 + 66) * t33427) * np.sin((11 * phi1 + 6 * phi2)) * ((1 - t33427) ** (-0.1e1 / 0.2e1)) * ((1 + t33427) ** (-0.1e1 / 0.2e1))

        if Bindx == 3242:
            t33442 = np.cos(phi)
            t33443 = t33442 ** 2
            t33444 = t33442 * t33443
            t33447 = t33444 ** 2
            t33448 = t33442 * t33447
            t33455 = t33448 ** 2
            t33453 = t33447 ** 2
            t33445 = t33443 ** 2
            t33446 = t33442 * t33445
            t33451 = t33446 ** 2
            t33449 = t33445 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-2805 * t33443 - 15095 * t33444 + 12683 * t33445 + 96081 * t33446 + 23023 * t33447 - 258907 * t33448 + 438449 * t33451 - 343127 * t33453 + 76821 * t33455 + 55 + (-219483 + 14384 * t33449) * t33449 + (288079 * t33449 - 43989 * t33451 - 136213 * t33453 + 69223 * t33455 + 821) * t33442) * np.cos((11 * phi1 + 7 * phi2))

        if Bindx == 3243:
            t33473 = np.sin(phi)
            t33471 = t33473 ** 2
            t33458 = np.cos(phi)
            t33459 = t33458 ** 2
            t33460 = t33458 * t33459
            t33463 = t33460 ** 2
            t33469 = t33463 ** 2
            t33461 = t33459 ** 2
            t33462 = t33458 * t33461
            t33467 = t33462 ** 2
            t33465 = t33461 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.91e2) * t33471 ** 2 * (126 * t33459 - 2420 * t33460 - 3641 * t33461 + 7194 * t33462 + 18612 * t33463 - 28677 * t33465 + 5742 * t33467 + 9889 * t33469 - 3 + (1320 * t33463 - 24486 * t33465 + 18444 * t33467 + 1798 * t33469 + 198) * t33458) * np.sin((11 * phi1 + 8 * phi2)) * ((1 - t33458) ** (-0.1e1 / 0.2e1)) * ((1 + t33458) ** (-0.1e1 / 0.2e1))

        if Bindx == 3244:
            t33474 = np.cos(phi)
            t33475 = t33474 ** 2
            t33476 = t33474 * t33475
            t33479 = t33476 ** 2
            t33480 = t33474 * t33479
            t33487 = t33480 ** 2
            t33485 = t33479 ** 2
            t33477 = t33475 ** 2
            t33478 = t33474 * t33477
            t33483 = t33478 ** 2
            t33481 = t33477 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-8085 * t33475 + 14375 * t33476 + 79035 * t33477 + 16463 * t33478 - 266673 * t33479 - 291445 * t33480 + 145233 * t33483 - 433735 * t33485 + 181685 * t33487 + 231 + (287925 + 14384 * t33481) * t33481 + (675345 * t33481 - 525723 * t33483 + 23925 * t33485 + 89001 * t33487 - 1941) * t33474) * np.cos((11 * phi1 + 9 * phi2))

        if Bindx == 3245:
            t33491 = np.cos(phi)
            t33492 = t33491 ** 2
            t33493 = t33491 * t33492
            t33496 = t33493 ** 2
            t33497 = t33491 * t33496
            t33504 = t33497 ** 2
            t33502 = t33496 ** 2
            t33494 = t33492 ** 2
            t33495 = t33491 * t33494
            t33500 = t33495 ** 2
            t33498 = t33494 ** 2
            t33490 = np.sin(phi)
            tfunc[..., c] = -0.99e2 / 0.16384e5 * t33490 ** 2 * (56025 * t33492 + 54340 * t33493 - 294385 * t33494 - 638638 * t33495 + 185185 * t33496 + 1716000 * t33497 + 1349205 * t33498 - 2341053 * t33500 + 725725 * t33502 + 346115 * t33504 - 2241 + (-1128270 * t33498 - 911820 * t33500 + 878990 * t33502 + 50344 * t33504 + 3630) * t33491) * np.sin((11 * phi1 + 10 * phi2)) * ((1 - t33491) ** (-0.1e1 / 0.2e1)) * ((1 + t33491) ** (-0.1e1 / 0.2e1))

        if Bindx == 3246:
            t33506 = np.cos(phi)
            t33507 = t33506 ** 2
            t33508 = t33506 * t33507
            t33511 = t33508 ** 2
            t33512 = t33506 * t33511
            t33519 = t33512 ** 2
            t33517 = t33511 ** 2
            t33509 = t33507 ** 2
            t33510 = t33506 * t33509
            t33515 = t33510 ** 2
            t33513 = t33509 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (141405 * t33507 + 461035 * t33508 - 123695 * t33509 - 2221401 * t33510 - 2473471 * t33511 + 2508935 * t33512 - 5240521 * t33515 - 1755845 * t33517 + 2189355 * t33519 - 9427 + (7187895 + 100688 * t33513) * t33513 + (3216785 * t33513 - 7026591 * t33515 + 2333485 * t33517 + 761453 * t33519 - 17317) * t33506) * np.cos((11 * phi1 + 11 * phi2))

        if Bindx == 3247:
            t33523 = np.cos(phi)
            t33524 = t33523 ** 2
            t33525 = t33523 * t33524
            t33528 = t33525 ** 2
            t33529 = t33523 * t33528
            t33536 = t33529 ** 2
            t33534 = t33528 ** 2
            t33526 = t33524 ** 2
            t33527 = t33523 * t33526
            t33532 = t33527 ** 2
            t33530 = t33526 ** 2
            t33522 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t33522 ** 2 * (-1851 * t33524 - 28028 * t33525 - 45123 * t33526 + 34320 * t33527 + 179465 * t33528 + 159588 * t33529 - 106821 * t33530 - 201201 * t33532 + 153439 * t33534 + 29667 * t33536 + 617 + (-313456 * t33530 + 50700 * t33532 + 98832 * t33534 + 3596 * t33536 + 2640) * t33523) * np.sin((11 * phi1 + 12 * phi2)) * ((1 - t33523) ** (-0.1e1 / 0.2e1)) * ((1 + t33523) ** (-0.1e1 / 0.2e1))

        if Bindx == 3248:
            t33538 = np.cos(phi)
            t33539 = t33538 ** 2
            t33540 = t33538 * t33539
            t33543 = t33540 ** 2
            t33544 = t33538 * t33543
            t33551 = t33544 ** 2
            t33549 = t33543 ** 2
            t33541 = t33539 ** 2
            t33542 = t33538 * t33541
            t33547 = t33542 ** 2
            t33545 = t33541 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * (1287 * t33539 - 3833 * t33540 - 15301 * t33541 - 13221 * t33542 + 22451 * t33543 + 59059 * t33544 - 73931 * t33547 + 13897 * t33549 + 16209 * t33551 + 143 + (34749 + 496 * t33545) * t33545 + (-38467 * t33545 - 37323 * t33547 + 28457 * t33549 + 4433 * t33551 + 895) * t33538) * np.cos((11 * phi1 + 13 * phi2))

        if Bindx == 3249:
            t33569 = np.sin(phi)
            t33567 = t33569 ** 2
            t33554 = np.cos(phi)
            t33555 = t33554 ** 2
            t33556 = t33554 * t33555
            t33559 = t33556 ** 2
            t33565 = t33559 ** 2
            t33557 = t33555 ** 2
            t33558 = t33554 * t33557
            t33563 = t33558 ** 2
            t33561 = t33557 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.203e3) * t33567 ** 2 * (2712 * t33555 + 2618 * t33556 - 5335 * t33557 - 19404 * t33558 - 23496 * t33559 + 20691 * t33561 + 23408 * t33563 + 2387 * t33565 + 113 + (-5676 * t33559 + 31790 * t33561 + 10002 * t33563 + 248 * t33565 + 902) * t33554) * np.sin((11 * phi1 + 14 * phi2)) * ((1 - t33554) ** (-0.1e1 / 0.2e1)) * ((1 + t33554) ** (-0.1e1 / 0.2e1))

        if Bindx == 3250:
            t33570 = np.cos(phi)
            t33571 = t33570 ** 2
            t33572 = t33570 * t33571
            t33575 = t33572 ** 2
            t33576 = t33570 * t33575
            t33583 = t33576 ** 2
            t33581 = t33575 ** 2
            t33573 = t33571 ** 2
            t33574 = t33570 * t33573
            t33579 = t33574 ** 2
            t33577 = t33573 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * (-407 * t33571 - 725 * t33572 - 143 * t33573 + 1963 * t33574 + 3861 * t33575 + 2431 * t33576 - 3861 * t33579 + 1963 * t33581 + 727 * t33583 - 11 + (-2145 + 16 * t33577) * t33577 + (-5291 * t33577 - 143 * t33579 + 1705 * t33581 + 165 * t33583 - 105) * t33570) * np.cos((11 * phi1 + 15 * phi2))

        if Bindx == 3251:
            t33586 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.6293e4) * ((1 - t33586) ** (0.5e1 / 0.2e1)) * ((1 + t33586) ** (0.27e2 / 0.2e1)) * np.sin((11 * phi1 + 16 * phi2))

        if Bindx == 3252:
            t33587 = np.cos(phi)
            t33602 = -12 * t33587
            t33601 = -196 * t33587
            t33588 = t33587 ** 2
            t33590 = t33588 ** 2
            t33593 = t33590 ** 2
            t33594 = t33587 * t33593
            t33591 = t33587 * t33590
            t33592 = t33588 * t33591
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * np.cos((12 * phi1 - 16 * phi2)) * (364 * t33590 - 364 * t33591 + 572 * t33594 + t33602 + 1 + (-858 + t33593) * t33593 + (572 + (t33602 + 64) * t33592) * t33592 + (t33601 + 64 + (-364 + (t33601 + 364) * t33587) * t33594) * t33588)

        if Bindx == 3253:
            t33619 = np.sin(phi)
            t33603 = np.cos(phi)
            t33618 = 1320 * t33603
            t33616 = t33619 ** 2
            t33604 = t33603 ** 2
            t33605 = t33603 * t33604
            t33608 = t33605 ** 2
            t33614 = t33608 ** 2
            t33606 = t33604 ** 2
            t33607 = t33603 * t33606
            t33612 = t33607 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4495e4) * t33616 ** 2 * (150 * t33604 - 396 * t33605 - 396 * t33607 - 682 * t33612 - 45 * t33614 + 3 + (t33618 - 396) * t33608 + (228 * t33612 + 4 * t33614 - 32) * t33603 + (605 + (t33618 - 1683) * t33606) * t33606) * np.sin((12 * phi1 - 15 * phi2)) * ((1 - t33603) ** (-0.1e1 / 0.2e1)) * ((1 + t33603) ** (-0.1e1 / 0.2e1))

        if Bindx == 3254:
            t33620 = np.cos(phi)
            t33621 = t33620 ** 2
            t33622 = t33620 * t33621
            t33625 = t33622 ** 2
            t33626 = t33620 * t33625
            t33633 = t33626 ** 2
            t33631 = t33625 ** 2
            t33623 = t33621 ** 2
            t33624 = t33620 * t33623
            t33629 = t33624 ** 2
            t33627 = t33623 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.145e3) * (-1156 * t33621 + 1771 * t33622 + 728 * t33623 - 7553 * t33624 + 12012 * t33625 - 4433 * t33626 - 12012 * t33629 + 9464 * t33631 + 2948 * t33633 - 34 + (-12012 + 62 * t33627) * t33627 + (20449 * t33627 - 2639 * t33629 - 7259 * t33631 - 651 * t33633 + 315) * t33620) * np.cos((12 * phi1 - 14 * phi2))

        if Bindx == 3255:
            t33637 = np.cos(phi)
            t33638 = t33637 ** 2
            t33639 = t33637 * t33638
            t33642 = t33639 ** 2
            t33643 = t33637 * t33642
            t33650 = t33643 ** 2
            t33648 = t33642 ** 2
            t33640 = t33638 ** 2
            t33641 = t33637 * t33640
            t33646 = t33641 ** 2
            t33644 = t33640 ** 2
            t33636 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * np.sqrt(0.2e1) * t33636 ** 2 * (5061 * t33638 - 1820 * t33639 - 20475 * t33640 + 48048 * t33641 - 31031 * t33642 - 46332 * t33643 + 109395 * t33644 - 9009 * t33646 - 56329 * t33648 - 6045 * t33650 + 241 + (-80080 * t33644 + 64428 * t33646 + 25200 * t33648 + 620 * t33650 - 1872) * t33637) * np.sin((12 * phi1 - 13 * phi2)) * ((1 - t33637) ** (-0.1e1 / 0.2e1)) * ((1 + t33637) ** (-0.1e1 / 0.2e1))

        if Bindx == 3256:
            t33652 = np.cos(phi)
            t33653 = t33652 ** 2
            t33654 = t33652 * t33653
            t33657 = t33654 ** 2
            t33658 = t33652 * t33657
            t33665 = t33658 ** 2
            t33663 = t33657 ** 2
            t33655 = t33653 ** 2
            t33656 = t33652 * t33655
            t33661 = t33656 ** 2
            t33659 = t33655 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * (9528 * t33653 + 35259 * t33654 - 129220 * t33655 + 98553 * t33656 + 216216 * t33657 - 512941 * t33658 - 664664 * t33661 + 151788 * t33663 + 149640 * t33665 + 1191 + (265122 + 4495 * t33659) * t33659 + (383955 * t33659 + 308217 * t33661 - 269381 * t33663 - 40455 * t33665 - 7303) * t33652) * np.cos((12 * phi1 - 12 * phi2))

        if Bindx == 3257:
            t33669 = np.cos(phi)
            t33670 = t33669 ** 2
            t33671 = t33669 * t33670
            t33674 = t33671 ** 2
            t33675 = t33669 * t33674
            t33682 = t33675 ** 2
            t33680 = t33674 ** 2
            t33672 = t33670 ** 2
            t33673 = t33669 * t33672
            t33678 = t33673 ** 2
            t33676 = t33672 ** 2
            t33668 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t33668 ** 2 * (1851 * t33670 - 28028 * t33671 + 45123 * t33672 + 34320 * t33673 - 179465 * t33674 + 159588 * t33675 + 106821 * t33676 + 201201 * t33678 - 153439 * t33680 - 29667 * t33682 - 617 + (-313456 * t33676 + 50700 * t33678 + 98832 * t33680 + 3596 * t33682 + 2640) * t33669) * np.sin((12 * phi1 - 11 * phi2)) * ((1 - t33669) ** (-0.1e1 / 0.2e1)) * ((1 + t33669) ** (-0.1e1 / 0.2e1))

        if Bindx == 3258:
            t33684 = np.cos(phi)
            t33685 = t33684 ** 2
            t33686 = t33684 * t33685
            t33689 = t33686 ** 2
            t33690 = t33684 * t33689
            t33697 = t33690 ** 2
            t33695 = t33689 ** 2
            t33687 = t33685 ** 2
            t33688 = t33684 * t33687
            t33693 = t33688 ** 2
            t33691 = t33687 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.35e2) * (2604 * t33685 - 9091 * t33686 - 936 * t33687 + 40937 * t33688 - 49764 * t33689 - 40183 * t33690 - 87516 * t33693 - 36296 * t33695 + 38164 * t33697 - 186 + (132132 + 1798 * t33691) * t33691 + (-67353 * t33691 + 127335 * t33693 - 38541 * t33695 - 13485 * t33697 + 381) * t33684) * np.cos((12 * phi1 - 10 * phi2))

        if Bindx == 3259:
            t33715 = np.sin(phi)
            t33713 = t33715 ** 2
            t33700 = np.cos(phi)
            t33701 = t33700 ** 2
            t33702 = t33700 * t33701
            t33705 = t33702 ** 2
            t33711 = t33705 ** 2
            t33703 = t33701 ** 2
            t33704 = t33700 * t33703
            t33709 = t33704 ** 2
            t33707 = t33703 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t33713 ** 2 * (4422 * t33701 - 6084 * t33702 - 16655 * t33703 + 47772 * t33704 - 14796 * t33705 + 103113 * t33707 - 65946 * t33709 - 24273 * t33711 - 201 + (-78024 * t33705 - 15720 * t33707 + 62988 * t33709 + 3596 * t33711 - 192) * t33700) * np.sin((12 * phi1 - 9 * phi2)) * ((1 - t33700) ** (-0.1e1 / 0.2e1)) * ((1 + t33700) ** (-0.1e1 / 0.2e1))

        if Bindx == 3260:
            t33716 = np.cos(phi)
            t33717 = t33716 ** 2
            t33718 = t33716 * t33717
            t33721 = t33718 ** 2
            t33722 = t33716 * t33721
            t33729 = t33722 ** 2
            t33727 = t33721 ** 2
            t33719 = t33717 ** 2
            t33720 = t33716 * t33719
            t33725 = t33720 ** 2
            t33723 = t33719 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.65e2) * (-3552 * t33717 - 3454 * t33718 + 29940 * t33719 - 17002 * t33720 - 85536 * t33721 + 121154 * t33722 + 85536 * t33725 - 146252 * t33727 + 51040 * t33729 + 111 + (64218 + 4495 * t33723) * t33723 + (-228030 * t33723 + 146838 * t33725 + 6786 * t33727 - 26970 * t33729 + 678) * t33716) * np.cos((12 * phi1 - 8 * phi2))

        if Bindx == 3261:
            t33746 = np.sin(phi)
            t33743 = t33746 ** 2
            t33744 = t33746 * t33743
            t33732 = np.cos(phi)
            t33733 = t33732 ** 2
            t33735 = t33733 ** 2
            t33736 = t33732 * t33735
            t33741 = t33736 ** 2
            t33739 = t33735 ** 2
            t33734 = t33732 * t33733
            t33737 = t33734 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * t33744 ** 2 * (4033 * t33733 + 24724 * t33734 - 55290 * t33735 - 29176 * t33736 + 171178 * t33737 - 89929 * t33739 - 94395 * t33741 - 109 + (-121488 * t33737 + 175160 * t33739 + 17980 * t33741 - 2688) * t33732) * np.sin((12 * phi1 - 7 * phi2)) * ((1 - t33732) ** (-0.1e1 / 0.2e1)) * ((1 + t33732) ** (-0.1e1 / 0.2e1))

        if Bindx == 3262:
            t33747 = np.cos(phi)
            t33748 = t33747 ** 2
            t33749 = t33747 * t33748
            t33752 = t33749 ** 2
            t33753 = t33747 * t33752
            t33760 = t33753 ** 2
            t33758 = t33752 ** 2
            t33750 = t33748 ** 2
            t33751 = t33747 * t33750
            t33756 = t33751 ** 2
            t33754 = t33750 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.897e3) * (-276 * t33748 + 2859 * t33749 - 104 * t33750 - 15009 * t33751 + 11484 * t33752 + 32351 * t33753 + 63844 * t33756 - 40200 * t33758 + 6612 * t33760 + 6 + (-43164 + 1798 * t33754) * t33754 + (-24783 * t33754 - 8751 * t33756 + 21605 * t33758 - 8091 * t33760 - 181) * t33747) * np.cos((12 * phi1 - 6 * phi2))

        if Bindx == 3263:
            t33775 = np.sin(phi)
            t33772 = t33775 ** 2
            t33773 = t33772 ** 2
            t33763 = np.cos(phi)
            t33764 = t33763 ** 2
            t33766 = t33764 ** 2
            t33770 = t33766 ** 2
            t33765 = t33763 * t33764
            t33768 = t33765 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.897e3) * t33773 ** 2 * (-1104 * t33764 + 2380 * t33765 + 4494 * t33766 + 1624 * t33768 - 13485 * t33770 + 23 + (-12348 * t33766 + 14964 * t33768 + 3596 * t33770 - 144) * t33763) * np.sin((12 * phi1 - 5 * phi2)) * ((1 - t33763) ** (-0.1e1 / 0.2e1)) * ((1 + t33763) ** (-0.1e1 / 0.2e1))

        if Bindx == 3264:
            t33776 = np.cos(phi)
            t33777 = t33776 ** 2
            t33778 = t33776 * t33777
            t33781 = t33778 ** 2
            t33782 = t33776 * t33781
            t33789 = t33782 ** 2
            t33787 = t33781 ** 2
            t33779 = t33777 ** 2
            t33780 = t33776 * t33779
            t33785 = t33780 ** 2
            t33783 = t33779 ** 2
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (280 * t33777 + 85 * t33778 - 2612 * t33779 + 823 * t33780 + 9720 * t33781 - 6659 * t33782 + 14664 * t33785 - 4036 * t33787 - 1624 * t33789 - 5 + (-17286 + 899 * t33783) * t33783 + (17021 * t33783 - 20425 * t33785 + 11861 * t33787 - 2697 * t33789 - 9) * t33776) * np.cos((12 * phi1 - 4 * phi2))

        if Bindx == 3265:
            t33803 = np.sin(phi)
            t33799 = t33803 ** 2
            t33801 = t33803 * t33799 ** 2
            t33792 = np.cos(phi)
            t33793 = t33792 ** 2
            t33794 = t33792 * t33793
            t33797 = t33794 ** 2
            t33795 = t33793 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t33801 ** 2 * (-2805 * t33793 - 9708 * t33794 + 20329 * t33795 - 40455 * t33797 + 51 + (13920 * t33795 + 17980 * t33797 + 688) * t33792) * np.sin((12 * phi1 - 3 * phi2)) * ((1 - t33792) ** (-0.1e1 / 0.2e1)) * ((1 + t33792) ** (-0.1e1 / 0.2e1))

        if Bindx == 3266:
            t33804 = np.cos(phi)
            t33805 = t33804 ** 2
            t33806 = t33804 * t33805
            t33809 = t33806 ** 2
            t33810 = t33804 * t33809
            t33817 = t33810 ** 2
            t33815 = t33809 ** 2
            t33807 = t33805 ** 2
            t33808 = t33804 * t33807
            t33813 = t33808 ** 2
            t33811 = t33807 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6555e4) * (124 * t33805 - 7763 * t33806 + 280 * t33807 + 46585 * t33808 - 12180 * t33809 - 129815 * t33810 - 98028 * t33813 + 94136 * t33815 - 45820 * t33817 - 2 + (52500 + 8990 * t33811) * t33811 + (195335 * t33811 - 164521 * t33813 + 73283 * t33815 - 13485 * t33817 + 381) * t33804) * np.cos((12 * phi1 - 2 * phi2))

        if Bindx == 3267:
            t33829 = np.sin(phi)
            t33825 = t33829 ** 2
            t33826 = t33829 * t33825
            t33827 = t33826 ** 2
            t33820 = np.cos(phi)
            t33821 = t33820 ** 2
            t33823 = t33821 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.437e3) * t33827 ** 2 * (522 * t33821 - 2697 * t33823 - 9 + (-1508 * t33821 + 3596 * t33823 + 96) * t33820) * np.sin((12 * phi1 - phi2)) * ((1 - t33820) ** (-0.1e1 / 0.2e1)) * ((1 + t33820) ** (-0.1e1 / 0.2e1))

        if Bindx == 3268:
            t33830 = np.cos(phi)
            t33831 = t33830 ** 2
            t33832 = t33831 ** 2
            t33833 = t33831 * t33832
            t33836 = t33833 ** 2
            t33834 = t33832 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t33832 - 8064 * t33833 + 14532 * t33836 + 3 + (17010 + 899 * t33834) * t33834 + (-20608 * t33834 - 5568 * t33836 - 192) * t33831) * np.cos((12 * phi1))

        if Bindx == 3269:
            t33848 = np.sin(phi)
            t33844 = t33848 ** 2
            t33845 = t33848 * t33844
            t33846 = t33845 ** 2
            t33839 = np.cos(phi)
            t33840 = t33839 ** 2
            t33842 = t33840 ** 2
            tfunc[..., c] = -0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.437e3) * t33846 ** 2 * (-522 * t33840 + 2697 * t33842 + 9 + (-1508 * t33840 + 3596 * t33842 + 96) * t33839) * np.sin((12 * phi1 + phi2)) * ((1 - t33839) ** (-0.1e1 / 0.2e1)) * ((1 + t33839) ** (-0.1e1 / 0.2e1))

        if Bindx == 3270:
            t33849 = np.cos(phi)
            t33850 = t33849 ** 2
            t33851 = t33849 * t33850
            t33854 = t33851 ** 2
            t33855 = t33849 * t33854
            t33862 = t33855 ** 2
            t33860 = t33854 ** 2
            t33852 = t33850 ** 2
            t33853 = t33849 * t33852
            t33858 = t33853 ** 2
            t33856 = t33852 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6555e4) * (124 * t33850 + 7763 * t33851 + 280 * t33852 - 46585 * t33853 - 12180 * t33854 + 129815 * t33855 - 98028 * t33858 + 94136 * t33860 - 45820 * t33862 - 2 + (52500 + 8990 * t33856) * t33856 + (-195335 * t33856 + 164521 * t33858 - 73283 * t33860 + 13485 * t33862 - 381) * t33849) * np.cos((12 * phi1 + 2 * phi2))

        if Bindx == 3271:
            t33876 = np.sin(phi)
            t33872 = t33876 ** 2
            t33874 = t33876 * t33872 ** 2
            t33865 = np.cos(phi)
            t33866 = t33865 ** 2
            t33867 = t33865 * t33866
            t33870 = t33867 ** 2
            t33868 = t33866 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.2415e4) * t33874 ** 2 * (2805 * t33866 - 9708 * t33867 - 20329 * t33868 + 40455 * t33870 - 51 + (13920 * t33868 + 17980 * t33870 + 688) * t33865) * np.sin((12 * phi1 + 3 * phi2)) * ((1 - t33865) ** (-0.1e1 / 0.2e1)) * ((1 + t33865) ** (-0.1e1 / 0.2e1))

        if Bindx == 3272:
            t33877 = np.cos(phi)
            t33878 = t33877 ** 2
            t33879 = t33877 * t33878
            t33882 = t33879 ** 2
            t33883 = t33877 * t33882
            t33890 = t33883 ** 2
            t33888 = t33882 ** 2
            t33880 = t33878 ** 2
            t33881 = t33877 * t33880
            t33886 = t33881 ** 2
            t33884 = t33880 ** 2
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * (280 * t33878 - 85 * t33879 - 2612 * t33880 - 823 * t33881 + 9720 * t33882 + 6659 * t33883 + 14664 * t33886 - 4036 * t33888 - 1624 * t33890 - 5 + (-17286 + 899 * t33884) * t33884 + (-17021 * t33884 + 20425 * t33886 - 11861 * t33888 + 2697 * t33890 + 9) * t33877) * np.cos((12 * phi1 + 4 * phi2))

        if Bindx == 3273:
            t33905 = np.sin(phi)
            t33902 = t33905 ** 2
            t33903 = t33902 ** 2
            t33893 = np.cos(phi)
            t33894 = t33893 ** 2
            t33896 = t33894 ** 2
            t33900 = t33896 ** 2
            t33895 = t33893 * t33894
            t33898 = t33895 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.897e3) * t33903 ** 2 * (1104 * t33894 + 2380 * t33895 - 4494 * t33896 - 1624 * t33898 + 13485 * t33900 - 23 + (-12348 * t33896 + 14964 * t33898 + 3596 * t33900 - 144) * t33893) * np.sin((12 * phi1 + 5 * phi2)) * ((1 - t33893) ** (-0.1e1 / 0.2e1)) * ((1 + t33893) ** (-0.1e1 / 0.2e1))

        if Bindx == 3274:
            t33906 = np.cos(phi)
            t33907 = t33906 ** 2
            t33908 = t33906 * t33907
            t33911 = t33908 ** 2
            t33912 = t33906 * t33911
            t33919 = t33912 ** 2
            t33917 = t33911 ** 2
            t33909 = t33907 ** 2
            t33910 = t33906 * t33909
            t33915 = t33910 ** 2
            t33913 = t33909 ** 2
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.897e3) * (-276 * t33907 - 2859 * t33908 - 104 * t33909 + 15009 * t33910 + 11484 * t33911 - 32351 * t33912 + 63844 * t33915 - 40200 * t33917 + 6612 * t33919 + 6 + (-43164 + 1798 * t33913) * t33913 + (24783 * t33913 + 8751 * t33915 - 21605 * t33917 + 8091 * t33919 + 181) * t33906) * np.cos((12 * phi1 + 6 * phi2))

        if Bindx == 3275:
            t33936 = np.sin(phi)
            t33933 = t33936 ** 2
            t33934 = t33936 * t33933
            t33922 = np.cos(phi)
            t33923 = t33922 ** 2
            t33925 = t33923 ** 2
            t33926 = t33922 * t33925
            t33931 = t33926 ** 2
            t33929 = t33925 ** 2
            t33924 = t33922 * t33923
            t33927 = t33924 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * t33934 ** 2 * (-4033 * t33923 + 24724 * t33924 + 55290 * t33925 - 29176 * t33926 - 171178 * t33927 + 89929 * t33929 + 94395 * t33931 + 109 + (-121488 * t33927 + 175160 * t33929 + 17980 * t33931 - 2688) * t33922) * np.sin((12 * phi1 + 7 * phi2)) * ((1 - t33922) ** (-0.1e1 / 0.2e1)) * ((1 + t33922) ** (-0.1e1 / 0.2e1))

        if Bindx == 3276:
            t33937 = np.cos(phi)
            t33938 = t33937 ** 2
            t33939 = t33937 * t33938
            t33942 = t33939 ** 2
            t33943 = t33937 * t33942
            t33950 = t33943 ** 2
            t33948 = t33942 ** 2
            t33940 = t33938 ** 2
            t33941 = t33937 * t33940
            t33946 = t33941 ** 2
            t33944 = t33940 ** 2
            tfunc[..., c] = 0.99e2 / 0.8192e4 * np.sqrt(0.65e2) * (-3552 * t33938 + 3454 * t33939 + 29940 * t33940 + 17002 * t33941 - 85536 * t33942 - 121154 * t33943 + 85536 * t33946 - 146252 * t33948 + 51040 * t33950 + 111 + (64218 + 4495 * t33944) * t33944 + (228030 * t33944 - 146838 * t33946 - 6786 * t33948 + 26970 * t33950 - 678) * t33937) * np.cos((12 * phi1 + 8 * phi2))

        if Bindx == 3277:
            t33968 = np.sin(phi)
            t33966 = t33968 ** 2
            t33953 = np.cos(phi)
            t33954 = t33953 ** 2
            t33955 = t33953 * t33954
            t33958 = t33955 ** 2
            t33964 = t33958 ** 2
            t33956 = t33954 ** 2
            t33957 = t33953 * t33956
            t33962 = t33957 ** 2
            t33960 = t33956 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t33966 ** 2 * (-4422 * t33954 - 6084 * t33955 + 16655 * t33956 + 47772 * t33957 + 14796 * t33958 - 103113 * t33960 + 65946 * t33962 + 24273 * t33964 + 201 + (-78024 * t33958 - 15720 * t33960 + 62988 * t33962 + 3596 * t33964 - 192) * t33953) * np.sin((12 * phi1 + 9 * phi2)) * ((1 - t33953) ** (-0.1e1 / 0.2e1)) * ((1 + t33953) ** (-0.1e1 / 0.2e1))

        if Bindx == 3278:
            t33969 = np.cos(phi)
            t33970 = t33969 ** 2
            t33971 = t33969 * t33970
            t33974 = t33971 ** 2
            t33975 = t33969 * t33974
            t33982 = t33975 ** 2
            t33980 = t33974 ** 2
            t33972 = t33970 ** 2
            t33973 = t33969 * t33972
            t33978 = t33973 ** 2
            t33976 = t33972 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.35e2) * (2604 * t33970 + 9091 * t33971 - 936 * t33972 - 40937 * t33973 - 49764 * t33974 + 40183 * t33975 - 87516 * t33978 - 36296 * t33980 + 38164 * t33982 - 186 + (132132 + 1798 * t33976) * t33976 + (67353 * t33976 - 127335 * t33978 + 38541 * t33980 + 13485 * t33982 - 381) * t33969) * np.cos((12 * phi1 + 10 * phi2))

        if Bindx == 3279:
            t33986 = np.cos(phi)
            t33987 = t33986 ** 2
            t33988 = t33986 * t33987
            t33991 = t33988 ** 2
            t33992 = t33986 * t33991
            t33999 = t33992 ** 2
            t33997 = t33991 ** 2
            t33989 = t33987 ** 2
            t33990 = t33986 * t33989
            t33995 = t33990 ** 2
            t33993 = t33989 ** 2
            t33985 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t33985 ** 2 * (-1851 * t33987 - 28028 * t33988 - 45123 * t33989 + 34320 * t33990 + 179465 * t33991 + 159588 * t33992 - 106821 * t33993 - 201201 * t33995 + 153439 * t33997 + 29667 * t33999 + 617 + (-313456 * t33993 + 50700 * t33995 + 98832 * t33997 + 3596 * t33999 + 2640) * t33986) * np.sin((12 * phi1 + 11 * phi2)) * ((1 - t33986) ** (-0.1e1 / 0.2e1)) * ((1 + t33986) ** (-0.1e1 / 0.2e1))

        if Bindx == 3280:
            t34001 = np.cos(phi)
            t34002 = t34001 ** 2
            t34003 = t34001 * t34002
            t34006 = t34003 ** 2
            t34007 = t34001 * t34006
            t34014 = t34007 ** 2
            t34012 = t34006 ** 2
            t34004 = t34002 ** 2
            t34005 = t34001 * t34004
            t34010 = t34005 ** 2
            t34008 = t34004 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * (9528 * t34002 - 35259 * t34003 - 129220 * t34004 - 98553 * t34005 + 216216 * t34006 + 512941 * t34007 - 664664 * t34010 + 151788 * t34012 + 149640 * t34014 + 1191 + (265122 + 4495 * t34008) * t34008 + (-383955 * t34008 - 308217 * t34010 + 269381 * t34012 + 40455 * t34014 + 7303) * t34001) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 3281:
            t34018 = np.cos(phi)
            t34019 = t34018 ** 2
            t34020 = t34018 * t34019
            t34023 = t34020 ** 2
            t34024 = t34018 * t34023
            t34031 = t34024 ** 2
            t34029 = t34023 ** 2
            t34021 = t34019 ** 2
            t34022 = t34018 * t34021
            t34027 = t34022 ** 2
            t34025 = t34021 ** 2
            t34017 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * np.sqrt(0.2e1) * t34017 ** 2 * (-5061 * t34019 - 1820 * t34020 + 20475 * t34021 + 48048 * t34022 + 31031 * t34023 - 46332 * t34024 - 109395 * t34025 + 9009 * t34027 + 56329 * t34029 + 6045 * t34031 - 241 + (-80080 * t34025 + 64428 * t34027 + 25200 * t34029 + 620 * t34031 - 1872) * t34018) * np.sin((12 * phi1 + 13 * phi2)) * ((1 - t34018) ** (-0.1e1 / 0.2e1)) * ((1 + t34018) ** (-0.1e1 / 0.2e1))

        if Bindx == 3282:
            t34033 = np.cos(phi)
            t34034 = t34033 ** 2
            t34035 = t34033 * t34034
            t34038 = t34035 ** 2
            t34039 = t34033 * t34038
            t34046 = t34039 ** 2
            t34044 = t34038 ** 2
            t34036 = t34034 ** 2
            t34037 = t34033 * t34036
            t34042 = t34037 ** 2
            t34040 = t34036 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.145e3) * (-1156 * t34034 - 1771 * t34035 + 728 * t34036 + 7553 * t34037 + 12012 * t34038 + 4433 * t34039 - 12012 * t34042 + 9464 * t34044 + 2948 * t34046 - 34 + (-12012 + 62 * t34040) * t34040 + (-20449 * t34040 + 2639 * t34042 + 7259 * t34044 + 651 * t34046 - 315) * t34033) * np.cos((12 * phi1 + 14 * phi2))

        if Bindx == 3283:
            t34065 = np.sin(phi)
            t34049 = np.cos(phi)
            t34064 = 1320 * t34049
            t34062 = t34065 ** 2
            t34050 = t34049 ** 2
            t34051 = t34049 * t34050
            t34054 = t34051 ** 2
            t34060 = t34054 ** 2
            t34052 = t34050 ** 2
            t34053 = t34049 * t34052
            t34058 = t34053 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4495e4) * t34062 ** 2 * (-150 * t34050 - 396 * t34051 - 396 * t34053 + 682 * t34058 + 45 * t34060 - 3 + (t34064 + 396) * t34054 + (228 * t34058 + 4 * t34060 - 32) * t34049 + (-605 + (t34064 + 1683) * t34052) * t34052) * np.sin((12 * phi1 + 15 * phi2)) * ((1 - t34049) ** (-0.1e1 / 0.2e1)) * ((1 + t34049) ** (-0.1e1 / 0.2e1))

        if Bindx == 3284:
            t34066 = np.cos(phi)
            t34081 = 12 * t34066
            t34080 = 196 * t34066
            t34067 = t34066 ** 2
            t34069 = t34067 ** 2
            t34072 = t34069 ** 2
            t34073 = t34066 * t34072
            t34070 = t34066 * t34069
            t34071 = t34067 * t34070
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * np.cos((12 * phi1 + 16 * phi2)) * (364 * t34069 + 364 * t34070 - 572 * t34073 + t34081 + 1 + (-858 + t34072) * t34072 + (-572 + (t34081 + 64) * t34071) * t34071 + (t34080 + 64 + (364 + (t34080 + 364) * t34066) * t34073) * t34067)

        if Bindx == 3285:
            t34082 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.155e3) * ((1 - t34082) ** (0.29e2 / 0.2e1)) * ((1 + t34082) ** (0.3e1 / 0.2e1)) * np.sin((13 * phi1 - 16 * phi2))

        if Bindx == 3286:
            t34083 = np.cos(phi)
            t34084 = t34083 ** 2
            t34085 = t34083 * t34084
            t34088 = t34085 ** 2
            t34089 = t34083 * t34088
            t34096 = t34089 ** 2
            t34094 = t34088 ** 2
            t34086 = t34084 ** 2
            t34087 = t34083 * t34086
            t34092 = t34087 ** 2
            t34090 = t34086 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.155e3) * (793 * t34084 - 2317 * t34085 + 3913 * t34086 - 2821 * t34087 - 3003 * t34088 + 10439 * t34089 + 3003 * t34092 + 6643 * t34094 + 1063 * t34096 + 13 + (-12441 + 16 * t34090) * t34090 + (6149 * t34090 - 7735 * t34092 - 3367 * t34094 - 195 * t34096 - 153) * t34083) * np.cos((13 * phi1 - 15 * phi2))

        if Bindx == 3287:
            t34100 = np.cos(phi)
            t34101 = t34100 ** 2
            t34102 = t34100 * t34101
            t34105 = t34102 ** 2
            t34106 = t34100 * t34105
            t34113 = t34106 ** 2
            t34111 = t34105 ** 2
            t34103 = t34101 ** 2
            t34104 = t34100 * t34103
            t34109 = t34104 ** 2
            t34107 = t34103 ** 2
            t34099 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.5e1) * t34099 ** 2 * (-7567 * t34101 + 17836 * t34102 - 19201 * t34103 - 10010 * t34104 + 65065 * t34105 - 96096 * t34106 + 58773 * t34107 - 77077 * t34109 - 41587 * t34111 - 2821 * t34113 - 161 + (22022 * t34107 + 74620 * t34109 + 14266 * t34111 + 248 * t34113 + 1690) * t34100) * np.sin((13 * phi1 - 14 * phi2)) * ((1 - t34100) ** (-0.1e1 / 0.2e1)) * ((1 + t34100) ** (-0.1e1 / 0.2e1))

        if Bindx == 3288:
            t34115 = np.cos(phi)
            t34116 = t34115 ** 2
            t34117 = t34115 * t34116
            t34120 = t34117 ** 2
            t34121 = t34115 * t34120
            t34128 = t34121 ** 2
            t34126 = t34120 ** 2
            t34118 = t34116 ** 2
            t34119 = t34115 * t34118
            t34124 = t34119 ** 2
            t34122 = t34118 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-41613 * t34116 + 60011 * t34117 + 40495 * t34118 - 295113 * t34119 + 439439 * t34120 - 117689 * t34121 - 431431 * t34124 + 404677 * t34126 + 119685 * t34128 - 1261 + (-516087 + 2480 * t34122) * t34122 + (802945 * t34122 - 152607 * t34124 - 299299 * t34126 - 26195 * t34128 + 11563) * t34115) * np.cos((13 * phi1 - 13 * phi2))

        if Bindx == 3289:
            t34132 = np.cos(phi)
            t34133 = t34132 ** 2
            t34134 = t34132 * t34133
            t34137 = t34134 ** 2
            t34138 = t34132 * t34137
            t34145 = t34138 ** 2
            t34143 = t34137 ** 2
            t34135 = t34133 ** 2
            t34136 = t34132 * t34135
            t34141 = t34136 ** 2
            t34139 = t34135 ** 2
            t34131 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * np.sqrt(0.2e1) * t34131 ** 2 * (5061 * t34133 - 1820 * t34134 - 20475 * t34135 + 48048 * t34136 - 31031 * t34137 - 46332 * t34138 + 109395 * t34139 - 9009 * t34141 - 56329 * t34143 - 6045 * t34145 + 241 + (-80080 * t34139 + 64428 * t34141 + 25200 * t34143 + 620 * t34145 - 1872) * t34132) * np.sin((13 * phi1 - 12 * phi2)) * ((1 - t34132) ** (-0.1e1 / 0.2e1)) * ((1 + t34132) ** (-0.1e1 / 0.2e1))

        if Bindx == 3290:
            t34147 = np.cos(phi)
            t34148 = t34147 ** 2
            t34149 = t34147 * t34148
            t34152 = t34149 ** 2
            t34153 = t34147 * t34152
            t34160 = t34153 ** 2
            t34158 = t34152 ** 2
            t34150 = t34148 ** 2
            t34151 = t34147 * t34150
            t34156 = t34151 ** 2
            t34154 = t34150 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * (1287 * t34148 + 3833 * t34149 - 15301 * t34150 + 13221 * t34151 + 22451 * t34152 - 59059 * t34153 - 73931 * t34156 + 13897 * t34158 + 16209 * t34160 + 143 + (34749 + 496 * t34154) * t34154 + (38467 * t34154 + 37323 * t34156 - 28457 * t34158 - 4433 * t34160 - 895) * t34147) * np.cos((13 * phi1 - 11 * phi2))

        if Bindx == 3291:
            t34178 = np.sin(phi)
            t34176 = t34178 ** 2
            t34163 = np.cos(phi)
            t34164 = t34163 ** 2
            t34165 = t34163 * t34164
            t34168 = t34165 ** 2
            t34174 = t34168 ** 2
            t34166 = t34164 ** 2
            t34167 = t34163 * t34166
            t34172 = t34167 ** 2
            t34170 = t34166 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.1015e4) * t34176 ** 2 * (1898 * t34165 - 3965 * t34166 + 468 * t34167 + 9048 * t34168 + 4329 * t34170 - 11544 * t34172 - 2015 * t34174 + 51 + (-13260 * t34168 + 8190 * t34170 + 6786 * t34172 + 248 * t34174 - 234) * t34163) * np.sin((13 * phi1 - 10 * phi2)) * ((1 - t34163) ** (-0.1e1 / 0.2e1)) * ((1 + t34163) ** (-0.1e1 / 0.2e1))

        if Bindx == 3292:
            t34179 = np.cos(phi)
            t34180 = t34179 ** 2
            t34181 = t34179 * t34180
            t34184 = t34181 ** 2
            t34185 = t34179 * t34184
            t34192 = t34185 ** 2
            t34190 = t34184 ** 2
            t34182 = t34180 ** 2
            t34183 = t34179 * t34182
            t34188 = t34183 ** 2
            t34186 = t34182 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (759 * t34180 - 3301 * t34181 + 1119 * t34182 + 12011 * t34183 - 18645 * t34184 - 6193 * t34185 - 18315 * t34188 - 13691 * t34190 + 9769 * t34192 - 69 + (38577 + 496 * t34186) * t34186 + (-26763 * t34186 + 35841 * t34188 - 8151 * t34190 - 3627 * t34192 + 183) * t34179) * np.cos((13 * phi1 - 9 * phi2))

        if Bindx == 3293:
            t34209 = np.sin(phi)
            t34206 = t34209 ** 2
            t34207 = t34209 * t34206
            t34195 = np.cos(phi)
            t34196 = t34195 ** 2
            t34198 = t34196 ** 2
            t34199 = t34195 * t34198
            t34204 = t34199 ** 2
            t34202 = t34198 ** 2
            t34197 = t34195 * t34196
            t34200 = t34197 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1885e4) * t34207 ** 2 * (-459 * t34196 + 958 * t34197 + 670 * t34198 - 4172 * t34199 + 4186 * t34200 - 5993 * t34202 - 2015 * t34204 + 27 + (1324 * t34200 + 5170 * t34202 + 310 * t34204 - 6) * t34195) * np.sin((13 * phi1 - 8 * phi2)) * ((1 - t34195) ** (-0.1e1 / 0.2e1)) * ((1 + t34195) ** (-0.1e1 / 0.2e1))

        if Bindx == 3294:
            t34210 = np.cos(phi)
            t34211 = t34210 ** 2
            t34212 = t34210 * t34211
            t34215 = t34212 ** 2
            t34216 = t34210 * t34215
            t34223 = t34216 ** 2
            t34221 = t34215 ** 2
            t34213 = t34211 ** 2
            t34214 = t34210 * t34213
            t34219 = t34214 ** 2
            t34217 = t34213 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.5655e4) * (-3213 * t34211 + 169 * t34212 + 21035 * t34213 - 24183 * t34214 - 42889 * t34215 + 94501 * t34216 + 83369 * t34219 - 86263 * t34221 + 23085 * t34223 + 119 + (2277 + 2480 * t34217) * t34217 + (-131945 * t34217 + 59787 * t34219 + 15379 * t34221 - 14105 * t34223 + 397) * t34210) * np.cos((13 * phi1 - 7 * phi2))

        if Bindx == 3295:
            t34238 = np.sin(phi)
            t34235 = t34238 ** 2
            t34236 = t34235 ** 2
            t34226 = np.cos(phi)
            t34227 = t34226 ** 2
            t34229 = t34227 ** 2
            t34233 = t34229 ** 2
            t34228 = t34226 * t34227
            t34231 = t34228 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.26013e5) * t34236 ** 2 * (-150 * t34227 - 266 * t34228 + 1092 * t34229 - 1274 * t34231 - 1209 * t34233 + 5 + (-630 * t34229 + 2130 * t34231 + 248 * t34233 + 54) * t34226) * np.sin((13 * phi1 - 6 * phi2)) * ((1 - t34226) ** (-0.1e1 / 0.2e1)) * ((1 + t34226) ** (-0.1e1 / 0.2e1))

        if Bindx == 3296:
            t34239 = np.cos(phi)
            t34240 = t34239 ** 2
            t34241 = t34239 * t34240
            t34244 = t34241 ** 2
            t34245 = t34239 * t34244
            t34252 = t34245 ** 2
            t34250 = t34244 ** 2
            t34242 = t34240 ** 2
            t34243 = t34239 * t34242
            t34248 = t34243 ** 2
            t34246 = t34242 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * (39 * t34240 + 1207 * t34241 - 1301 * t34242 - 4677 * t34243 + 7571 * t34244 + 6563 * t34245 + 19093 * t34248 - 9127 * t34250 + 753 * t34252 - 1 + (-17523 + 496 * t34246) * t34246 + (-227 * t34246 - 7995 * t34248 + 7241 * t34250 - 2015 * t34252 - 97) * t34239) * np.cos((13 * phi1 - 5 * phi2))

        if Bindx == 3297:
            t34266 = np.sin(phi)
            t34262 = t34266 ** 2
            t34264 = t34266 * t34262 ** 2
            t34255 = np.cos(phi)
            t34256 = t34255 ** 2
            t34257 = t34255 * t34256
            t34260 = t34257 ** 2
            t34258 = t34256 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.182091e6) * t34264 ** 2 * (39 * t34256 - 172 * t34257 + 13 * t34258 - 403 * t34260 - 1 + (384 * t34258 + 124 * t34260 + 16) * t34255) * np.sin((13 * phi1 - 4 * phi2)) * ((1 - t34255) ** (-0.1e1 / 0.2e1)) * ((1 + t34255) ** (-0.1e1 / 0.2e1))

        if Bindx == 3298:
            t34267 = np.cos(phi)
            t34268 = t34267 ** 2
            t34269 = t34267 * t34268
            t34272 = t34269 ** 2
            t34273 = t34267 * t34272
            t34280 = t34273 ** 2
            t34278 = t34272 ** 2
            t34270 = t34268 ** 2
            t34271 = t34267 * t34270
            t34276 = t34271 ** 2
            t34274 = t34270 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.70035e5) * (1363 * t34268 - 2171 * t34269 - 9665 * t34270 + 15145 * t34271 + 26415 * t34272 - 47255 * t34273 + 14169 * t34276 + 7157 * t34278 - 9115 * t34280 - 29 + (-32775 + 2480 * t34274) * t34274 + (76895 * t34274 - 68497 * t34276 + 31811 * t34278 - 6045 * t34280 + 117) * t34267) * np.cos((13 * phi1 - 3 * phi2))

        if Bindx == 3299:
            t34292 = np.sin(phi)
            t34288 = t34292 ** 2
            t34289 = t34292 * t34288
            t34290 = t34289 ** 2
            t34283 = np.cos(phi)
            t34284 = t34283 ** 2
            t34286 = t34284 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.190095e6) * t34290 ** 2 * (572 * t34284 - 2015 * t34286 - 13 + (250 * t34284 + 1240 * t34286 - 34) * t34283) * np.sin((13 * phi1 - 2 * phi2)) * ((1 - t34283) ** (-0.1e1 / 0.2e1)) * ((1 + t34283) ** (-0.1e1 / 0.2e1))

        if Bindx == 3300:
            t34293 = np.cos(phi)
            t34294 = t34293 ** 2
            t34295 = t34293 * t34294
            t34298 = t34295 ** 2
            t34299 = t34293 * t34298
            t34306 = t34299 ** 2
            t34304 = t34298 ** 2
            t34296 = t34294 ** 2
            t34297 = t34293 * t34296
            t34302 = t34297 ** 2
            t34300 = t34296 ** 2
            tfunc[..., c] = -0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.12673e5) * (-153 * t34294 - 637 * t34295 + 1351 * t34296 + 3003 * t34297 - 5061 * t34298 - 6825 * t34299 - 11963 * t34302 + 8253 * t34304 - 3111 * t34306 + 3 + (10185 + 496 * t34300) * t34300 + (8645 * t34300 - 6279 * t34302 + 2457 * t34304 - 403 * t34306 + 39) * t34293) * np.cos((13 * phi1 - phi2))

        if Bindx == 3301:
            t34315 = np.sin(phi)
            t34310 = t34315 ** 2
            t34311 = t34315 * t34310
            t34313 = t34315 * t34311 ** 2
            t34309 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t34309 * t34313 ** 2 * (31 * t34309 ** 2 - 3) * np.sin((13 * phi1)) * ((1 - t34309) ** (-0.1e1 / 0.2e1)) * ((1 + t34309) ** (-0.1e1 / 0.2e1))

        if Bindx == 3302:
            t34316 = np.cos(phi)
            t34317 = t34316 ** 2
            t34318 = t34316 * t34317
            t34321 = t34318 ** 2
            t34322 = t34316 * t34321
            t34329 = t34322 ** 2
            t34327 = t34321 ** 2
            t34319 = t34317 ** 2
            t34320 = t34316 * t34319
            t34325 = t34320 ** 2
            t34323 = t34319 ** 2
            tfunc[..., c] = 0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.12673e5) * (-153 * t34317 + 637 * t34318 + 1351 * t34319 - 3003 * t34320 - 5061 * t34321 + 6825 * t34322 - 11963 * t34325 + 8253 * t34327 - 3111 * t34329 + 3 + (10185 + 496 * t34323) * t34323 + (-8645 * t34323 + 6279 * t34325 - 2457 * t34327 + 403 * t34329 - 39) * t34316) * np.cos((13 * phi1 + phi2))

        if Bindx == 3303:
            t34341 = np.sin(phi)
            t34337 = t34341 ** 2
            t34338 = t34341 * t34337
            t34339 = t34338 ** 2
            t34332 = np.cos(phi)
            t34333 = t34332 ** 2
            t34335 = t34333 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.190095e6) * t34339 ** 2 * (-572 * t34333 + 2015 * t34335 + 13 + (250 * t34333 + 1240 * t34335 - 34) * t34332) * np.sin((13 * phi1 + 2 * phi2)) * ((1 - t34332) ** (-0.1e1 / 0.2e1)) * ((1 + t34332) ** (-0.1e1 / 0.2e1))

        if Bindx == 3304:
            t34342 = np.cos(phi)
            t34343 = t34342 ** 2
            t34344 = t34342 * t34343
            t34347 = t34344 ** 2
            t34348 = t34342 * t34347
            t34355 = t34348 ** 2
            t34353 = t34347 ** 2
            t34345 = t34343 ** 2
            t34346 = t34342 * t34345
            t34351 = t34346 ** 2
            t34349 = t34345 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.70035e5) * (1363 * t34343 + 2171 * t34344 - 9665 * t34345 - 15145 * t34346 + 26415 * t34347 + 47255 * t34348 + 14169 * t34351 + 7157 * t34353 - 9115 * t34355 - 29 + (-32775 + 2480 * t34349) * t34349 + (-76895 * t34349 + 68497 * t34351 - 31811 * t34353 + 6045 * t34355 - 117) * t34342) * np.cos((13 * phi1 + 3 * phi2))

        if Bindx == 3305:
            t34369 = np.sin(phi)
            t34365 = t34369 ** 2
            t34367 = t34369 * t34365 ** 2
            t34358 = np.cos(phi)
            t34359 = t34358 ** 2
            t34360 = t34358 * t34359
            t34363 = t34360 ** 2
            t34361 = t34359 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.182091e6) * t34367 ** 2 * (-39 * t34359 - 172 * t34360 - 13 * t34361 + 403 * t34363 + 1 + (384 * t34361 + 124 * t34363 + 16) * t34358) * np.sin((13 * phi1 + 4 * phi2)) * ((1 - t34358) ** (-0.1e1 / 0.2e1)) * ((1 + t34358) ** (-0.1e1 / 0.2e1))

        if Bindx == 3306:
            t34370 = np.cos(phi)
            t34371 = t34370 ** 2
            t34372 = t34370 * t34371
            t34375 = t34372 ** 2
            t34376 = t34370 * t34375
            t34383 = t34376 ** 2
            t34381 = t34375 ** 2
            t34373 = t34371 ** 2
            t34374 = t34370 * t34373
            t34379 = t34374 ** 2
            t34377 = t34373 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.26013e5) * (39 * t34371 - 1207 * t34372 - 1301 * t34373 + 4677 * t34374 + 7571 * t34375 - 6563 * t34376 + 19093 * t34379 - 9127 * t34381 + 753 * t34383 - 1 + (-17523 + 496 * t34377) * t34377 + (227 * t34377 + 7995 * t34379 - 7241 * t34381 + 2015 * t34383 + 97) * t34370) * np.cos((13 * phi1 + 5 * phi2))

        if Bindx == 3307:
            t34398 = np.sin(phi)
            t34395 = t34398 ** 2
            t34396 = t34395 ** 2
            t34386 = np.cos(phi)
            t34387 = t34386 ** 2
            t34389 = t34387 ** 2
            t34393 = t34389 ** 2
            t34388 = t34386 * t34387
            t34391 = t34388 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.26013e5) * t34396 ** 2 * (150 * t34387 - 266 * t34388 - 1092 * t34389 + 1274 * t34391 + 1209 * t34393 - 5 + (-630 * t34389 + 2130 * t34391 + 248 * t34393 + 54) * t34386) * np.sin((13 * phi1 + 6 * phi2)) * ((1 - t34386) ** (-0.1e1 / 0.2e1)) * ((1 + t34386) ** (-0.1e1 / 0.2e1))

        if Bindx == 3308:
            t34399 = np.cos(phi)
            t34400 = t34399 ** 2
            t34401 = t34399 * t34400
            t34404 = t34401 ** 2
            t34405 = t34399 * t34404
            t34412 = t34405 ** 2
            t34410 = t34404 ** 2
            t34402 = t34400 ** 2
            t34403 = t34399 * t34402
            t34408 = t34403 ** 2
            t34406 = t34402 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.5655e4) * (-3213 * t34400 - 169 * t34401 + 21035 * t34402 + 24183 * t34403 - 42889 * t34404 - 94501 * t34405 + 83369 * t34408 - 86263 * t34410 + 23085 * t34412 + 119 + (2277 + 2480 * t34406) * t34406 + (131945 * t34406 - 59787 * t34408 - 15379 * t34410 + 14105 * t34412 - 397) * t34399) * np.cos((13 * phi1 + 7 * phi2))

        if Bindx == 3309:
            t34429 = np.sin(phi)
            t34426 = t34429 ** 2
            t34427 = t34429 * t34426
            t34415 = np.cos(phi)
            t34416 = t34415 ** 2
            t34418 = t34416 ** 2
            t34419 = t34415 * t34418
            t34424 = t34419 ** 2
            t34422 = t34418 ** 2
            t34417 = t34415 * t34416
            t34420 = t34417 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1885e4) * t34427 ** 2 * (459 * t34416 + 958 * t34417 - 670 * t34418 - 4172 * t34419 - 4186 * t34420 + 5993 * t34422 + 2015 * t34424 - 27 + (1324 * t34420 + 5170 * t34422 + 310 * t34424 - 6) * t34415) * np.sin((13 * phi1 + 8 * phi2)) * ((1 - t34415) ** (-0.1e1 / 0.2e1)) * ((1 + t34415) ** (-0.1e1 / 0.2e1))

        if Bindx == 3310:
            t34430 = np.cos(phi)
            t34431 = t34430 ** 2
            t34432 = t34430 * t34431
            t34435 = t34432 ** 2
            t34436 = t34430 * t34435
            t34443 = t34436 ** 2
            t34441 = t34435 ** 2
            t34433 = t34431 ** 2
            t34434 = t34430 * t34433
            t34439 = t34434 ** 2
            t34437 = t34433 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1885e4) * (759 * t34431 + 3301 * t34432 + 1119 * t34433 - 12011 * t34434 - 18645 * t34435 + 6193 * t34436 - 18315 * t34439 - 13691 * t34441 + 9769 * t34443 - 69 + (38577 + 496 * t34437) * t34437 + (26763 * t34437 - 35841 * t34439 + 8151 * t34441 + 3627 * t34443 - 183) * t34430) * np.cos((13 * phi1 + 9 * phi2))

        if Bindx == 3311:
            t34461 = np.sin(phi)
            t34459 = t34461 ** 2
            t34446 = np.cos(phi)
            t34447 = t34446 ** 2
            t34448 = t34446 * t34447
            t34451 = t34448 ** 2
            t34457 = t34451 ** 2
            t34449 = t34447 ** 2
            t34450 = t34446 * t34449
            t34455 = t34450 ** 2
            t34453 = t34449 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.1015e4) * t34459 ** 2 * (1898 * t34448 + 3965 * t34449 + 468 * t34450 - 9048 * t34451 - 4329 * t34453 + 11544 * t34455 + 2015 * t34457 - 51 + (-13260 * t34451 + 8190 * t34453 + 6786 * t34455 + 248 * t34457 - 234) * t34446) * np.sin((13 * phi1 + 10 * phi2)) * ((1 - t34446) ** (-0.1e1 / 0.2e1)) * ((1 + t34446) ** (-0.1e1 / 0.2e1))

        if Bindx == 3312:
            t34462 = np.cos(phi)
            t34463 = t34462 ** 2
            t34464 = t34462 * t34463
            t34467 = t34464 ** 2
            t34468 = t34462 * t34467
            t34475 = t34468 ** 2
            t34473 = t34467 ** 2
            t34465 = t34463 ** 2
            t34466 = t34462 * t34465
            t34471 = t34466 ** 2
            t34469 = t34465 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * (1287 * t34463 - 3833 * t34464 - 15301 * t34465 - 13221 * t34466 + 22451 * t34467 + 59059 * t34468 - 73931 * t34471 + 13897 * t34473 + 16209 * t34475 + 143 + (34749 + 496 * t34469) * t34469 + (-38467 * t34469 - 37323 * t34471 + 28457 * t34473 + 4433 * t34475 + 895) * t34462) * np.cos((13 * phi1 + 11 * phi2))

        if Bindx == 3313:
            t34479 = np.cos(phi)
            t34480 = t34479 ** 2
            t34481 = t34479 * t34480
            t34484 = t34481 ** 2
            t34485 = t34479 * t34484
            t34492 = t34485 ** 2
            t34490 = t34484 ** 2
            t34482 = t34480 ** 2
            t34483 = t34479 * t34482
            t34488 = t34483 ** 2
            t34486 = t34482 ** 2
            t34478 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * np.sqrt(0.2e1) * t34478 ** 2 * (-5061 * t34480 - 1820 * t34481 + 20475 * t34482 + 48048 * t34483 + 31031 * t34484 - 46332 * t34485 - 109395 * t34486 + 9009 * t34488 + 56329 * t34490 + 6045 * t34492 - 241 + (-80080 * t34486 + 64428 * t34488 + 25200 * t34490 + 620 * t34492 - 1872) * t34479) * np.sin((13 * phi1 + 12 * phi2)) * ((1 - t34479) ** (-0.1e1 / 0.2e1)) * ((1 + t34479) ** (-0.1e1 / 0.2e1))

        if Bindx == 3314:
            t34494 = np.cos(phi)
            t34495 = t34494 ** 2
            t34496 = t34494 * t34495
            t34499 = t34496 ** 2
            t34500 = t34494 * t34499
            t34507 = t34500 ** 2
            t34505 = t34499 ** 2
            t34497 = t34495 ** 2
            t34498 = t34494 * t34497
            t34503 = t34498 ** 2
            t34501 = t34497 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-41613 * t34495 - 60011 * t34496 + 40495 * t34497 + 295113 * t34498 + 439439 * t34499 + 117689 * t34500 - 431431 * t34503 + 404677 * t34505 + 119685 * t34507 - 1261 + (-516087 + 2480 * t34501) * t34501 + (-802945 * t34501 + 152607 * t34503 + 299299 * t34505 + 26195 * t34507 - 11563) * t34494) * np.cos((13 * phi1 + 13 * phi2))

        if Bindx == 3315:
            t34511 = np.cos(phi)
            t34512 = t34511 ** 2
            t34513 = t34511 * t34512
            t34516 = t34513 ** 2
            t34517 = t34511 * t34516
            t34524 = t34517 ** 2
            t34522 = t34516 ** 2
            t34514 = t34512 ** 2
            t34515 = t34511 * t34514
            t34520 = t34515 ** 2
            t34518 = t34514 ** 2
            t34510 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.5e1) * t34510 ** 2 * (7567 * t34512 + 17836 * t34513 + 19201 * t34514 - 10010 * t34515 - 65065 * t34516 - 96096 * t34517 - 58773 * t34518 + 77077 * t34520 + 41587 * t34522 + 2821 * t34524 + 161 + (22022 * t34518 + 74620 * t34520 + 14266 * t34522 + 248 * t34524 + 1690) * t34511) * np.sin((13 * phi1 + 14 * phi2)) * ((1 - t34511) ** (-0.1e1 / 0.2e1)) * ((1 + t34511) ** (-0.1e1 / 0.2e1))

        if Bindx == 3316:
            t34526 = np.cos(phi)
            t34527 = t34526 ** 2
            t34528 = t34526 * t34527
            t34531 = t34528 ** 2
            t34532 = t34526 * t34531
            t34539 = t34532 ** 2
            t34537 = t34531 ** 2
            t34529 = t34527 ** 2
            t34530 = t34526 * t34529
            t34535 = t34530 ** 2
            t34533 = t34529 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.155e3) * (793 * t34527 + 2317 * t34528 + 3913 * t34529 + 2821 * t34530 - 3003 * t34531 - 10439 * t34532 + 3003 * t34535 + 6643 * t34537 + 1063 * t34539 + 13 + (-12441 + 16 * t34533) * t34533 + (-6149 * t34533 + 7735 * t34535 + 3367 * t34537 + 195 * t34539 + 153) * t34526) * np.cos((13 * phi1 + 15 * phi2))

        if Bindx == 3317:
            t34542 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.155e3) * ((1 - t34542) ** (0.3e1 / 0.2e1)) * ((1 + t34542) ** (0.29e2 / 0.2e1)) * np.sin((13 * phi1 + 16 * phi2))

        if Bindx == 3318:
            t34543 = np.cos(phi)
            t34544 = t34543 ** 2
            t34545 = t34543 * t34544
            t34548 = t34545 ** 2
            t34549 = t34543 * t34548
            t34555 = t34549 ** 2
            t34556 = t34543 * t34555
            t34553 = t34548 ** 2
            t34546 = t34544 ** 2
            t34547 = t34543 * t34546
            t34551 = t34547 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31e2) * (350 * t34545 - 910 * t34546 + 1638 * t34547 - 2002 * t34548 + 1430 * t34549 + 2002 * t34551 + 910 * t34553 + 90 * t34555 - 14 * t34556 - 1 + (-1430 * t34549 - 90) * t34544 + (-1638 * t34551 - 350 * t34553 + t34556 + 14) * t34543) * np.cos((14 * phi1 - 16 * phi2))

        if Bindx == 3319:
            t34559 = np.cos(phi)
            t34560 = t34559 ** 2
            t34561 = t34559 * t34560
            t34564 = t34561 ** 2
            t34569 = t34564 ** 2
            t34570 = t34559 * t34569
            t34571 = t34559 * t34570
            t34562 = t34560 ** 2
            t34563 = t34559 * t34562
            t34567 = t34563 ** 2
            t34565 = t34562 ** 2
            t34558 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31e2) * t34558 ** 2 * (525 * t34560 - 1820 * t34561 + 4095 * t34562 - 6006 * t34563 + 5005 * t34564 - 6435 * t34565 - 9009 * t34567 - 2275 * t34569 + 630 * t34570 - 105 * t34571 + 7 + (10010 * t34565 + 5460 * t34567 + 8 * t34571 - 90) * t34559) * np.sin((14 * phi1 - 15 * phi2)) * ((1 - t34559) ** (-0.1e1 / 0.2e1)) * ((1 + t34559) ** (-0.1e1 / 0.2e1))

        if Bindx == 3320:
            t34573 = np.cos(phi)
            t34574 = t34573 ** 2
            t34575 = t34573 * t34574
            t34578 = t34575 ** 2
            t34579 = t34573 * t34578
            t34586 = t34579 ** 2
            t34584 = t34578 ** 2
            t34576 = t34574 ** 2
            t34577 = t34573 * t34576
            t34582 = t34577 ** 2
            t34580 = t34576 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (5640 * t34574 - 16205 * t34575 + 26390 * t34576 - 16107 * t34577 - 28028 * t34578 + 80795 * t34579 + 32032 * t34582 + 53690 * t34584 + 8340 * t34586 + 94 + (-90090 + 124 * t34580) * t34580 + (37895 * t34580 - 65247 * t34582 - 26705 * t34584 - 1519 * t34586 - 1099) * t34573) * np.cos((14 * phi1 - 14 * phi2))

        if Bindx == 3321:
            t34590 = np.cos(phi)
            t34591 = t34590 ** 2
            t34592 = t34590 * t34591
            t34595 = t34592 ** 2
            t34596 = t34590 * t34595
            t34603 = t34596 ** 2
            t34601 = t34595 ** 2
            t34593 = t34591 ** 2
            t34594 = t34590 * t34593
            t34599 = t34594 ** 2
            t34597 = t34593 ** 2
            t34589 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.5e1) * t34589 ** 2 * (-7567 * t34591 + 17836 * t34592 - 19201 * t34593 - 10010 * t34594 + 65065 * t34595 - 96096 * t34596 + 58773 * t34597 - 77077 * t34599 - 41587 * t34601 - 2821 * t34603 - 161 + (22022 * t34597 + 74620 * t34599 + 14266 * t34601 + 248 * t34603 + 1690) * t34590) * np.sin((14 * phi1 - 13 * phi2)) * ((1 - t34590) ** (-0.1e1 / 0.2e1)) * ((1 + t34590) ** (-0.1e1 / 0.2e1))

        if Bindx == 3322:
            t34605 = np.cos(phi)
            t34606 = t34605 ** 2
            t34607 = t34605 * t34606
            t34610 = t34607 ** 2
            t34611 = t34605 * t34610
            t34618 = t34611 ** 2
            t34616 = t34610 ** 2
            t34608 = t34606 ** 2
            t34609 = t34605 * t34608
            t34614 = t34609 ** 2
            t34612 = t34608 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.145e3) * (-1156 * t34606 + 1771 * t34607 + 728 * t34608 - 7553 * t34609 + 12012 * t34610 - 4433 * t34611 - 12012 * t34614 + 9464 * t34616 + 2948 * t34618 - 34 + (-12012 + 62 * t34612) * t34612 + (20449 * t34612 - 2639 * t34614 - 7259 * t34616 - 651 * t34618 + 315) * t34605) * np.cos((14 * phi1 - 12 * phi2))

        if Bindx == 3323:
            t34636 = np.sin(phi)
            t34634 = t34636 ** 2
            t34621 = np.cos(phi)
            t34622 = t34621 ** 2
            t34623 = t34621 * t34622
            t34626 = t34623 ** 2
            t34632 = t34626 ** 2
            t34624 = t34622 ** 2
            t34625 = t34621 * t34624
            t34630 = t34625 ** 2
            t34628 = t34624 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.203e3) * t34634 ** 2 * (-2712 * t34622 + 2618 * t34623 + 5335 * t34624 - 19404 * t34625 + 23496 * t34626 - 20691 * t34628 - 23408 * t34630 - 2387 * t34632 - 113 + (-5676 * t34626 + 31790 * t34628 + 10002 * t34630 + 248 * t34632 + 902) * t34621) * np.sin((14 * phi1 - 11 * phi2)) * ((1 - t34621) ** (-0.1e1 / 0.2e1)) * ((1 + t34621) ** (-0.1e1 / 0.2e1))

        if Bindx == 3324:
            t34637 = np.cos(phi)
            t34638 = t34637 ** 2
            t34639 = t34637 * t34638
            t34642 = t34639 ** 2
            t34643 = t34637 * t34642
            t34650 = t34643 ** 2
            t34648 = t34642 ** 2
            t34640 = t34638 ** 2
            t34641 = t34637 * t34640
            t34646 = t34641 ** 2
            t34644 = t34640 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.203e3) * (552 * t34638 + 825 * t34639 - 4602 * t34640 + 5343 * t34641 + 4004 * t34642 - 16159 * t34643 - 18304 * t34646 + 1482 * t34648 + 3828 * t34650 + 46 + (12870 + 124 * t34644) * t34644 + (6149 * t34644 + 11427 * t34646 - 6195 * t34648 - 1085 * t34650 - 305) * t34637) * np.cos((14 * phi1 - 10 * phi2))

        if Bindx == 3325:
            t34667 = np.sin(phi)
            t34664 = t34667 ** 2
            t34665 = t34667 * t34664
            t34653 = np.cos(phi)
            t34654 = t34653 ** 2
            t34656 = t34654 ** 2
            t34657 = t34653 * t34656
            t34662 = t34657 ** 2
            t34660 = t34656 ** 2
            t34655 = t34653 * t34654
            t34658 = t34655 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.377e3) * t34665 ** 2 * (-365 * t34654 - 1680 * t34655 + 5310 * t34656 - 5124 * t34657 - 2226 * t34658 - 11445 * t34660 - 1953 * t34662 - 73 + (10440 * t34658 + 6490 * t34660 + 248 * t34662 + 378) * t34653) * np.sin((14 * phi1 - 9 * phi2)) * ((1 - t34653) ** (-0.1e1 / 0.2e1)) * ((1 + t34653) ** (-0.1e1 / 0.2e1))

        if Bindx == 3326:
            t34668 = np.cos(phi)
            t34669 = t34668 ** 2
            t34670 = t34668 * t34669
            t34673 = t34670 ** 2
            t34674 = t34668 * t34673
            t34681 = t34674 ** 2
            t34679 = t34673 ** 2
            t34671 = t34669 ** 2
            t34672 = t34668 * t34671
            t34677 = t34672 ** 2
            t34675 = t34671 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.377e3) * (42 * t34669 - 303 * t34670 + 294 * t34671 + 717 * t34672 - 1694 * t34673 + 341 * t34674 - 418 * t34677 - 1158 * t34679 + 534 * t34681 - 7 + (2376 + 31 * t34675) * t34675 + (-2453 * t34675 + 2163 * t34677 - 273 * t34679 - 217 * t34681 + 25) * t34668) * np.cos((14 * phi1 - 8 * phi2))

        if Bindx == 3327:
            t34696 = np.sin(phi)
            t34693 = t34696 ** 2
            t34694 = t34693 ** 2
            t34684 = np.cos(phi)
            t34685 = t34684 ** 2
            t34687 = t34685 ** 2
            t34691 = t34687 ** 2
            t34686 = t34684 * t34685
            t34689 = t34686 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.1131e4) * t34694 ** 2 * (410 * t34685 - 1386 * t34686 + 952 * t34687 - 4410 * t34689 - 1519 * t34691 - 41 + (1946 * t34687 + 3730 * t34689 + 248 * t34691 + 70) * t34684) * np.sin((14 * phi1 - 7 * phi2)) * ((1 - t34684) ** (-0.1e1 / 0.2e1)) * ((1 + t34684) ** (-0.1e1 / 0.2e1))

        if Bindx == 3328:
            t34697 = np.cos(phi)
            t34698 = t34697 ** 2
            t34699 = t34697 * t34698
            t34702 = t34699 ** 2
            t34703 = t34697 * t34702
            t34710 = t34703 ** 2
            t34708 = t34702 ** 2
            t34700 = t34698 ** 2
            t34701 = t34697 * t34700
            t34706 = t34701 ** 2
            t34704 = t34700 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.130065e6) * (-280 * t34698 + 335 * t34699 + 1190 * t34700 - 2599 * t34701 - 924 * t34702 + 6215 * t34703 + 6336 * t34706 - 4310 * t34708 + 820 * t34710 + 14 + (-2970 + 124 * t34704) * t34704 + (-5885 * t34704 + 1141 * t34706 + 1435 * t34708 - 651 * t34710 + 9) * t34697) * np.cos((14 * phi1 - 6 * phi2))

        if Bindx == 3329:
            t34724 = np.sin(phi)
            t34720 = t34724 ** 2
            t34722 = t34724 * t34720 ** 2
            t34713 = np.cos(phi)
            t34714 = t34713 ** 2
            t34715 = t34713 * t34714
            t34718 = t34715 ** 2
            t34716 = t34714 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * t34722 ** 2 * (357 * t34714 - 140 * t34715 - 1015 * t34716 - 1085 * t34718 - 17 + (1722 * t34716 + 248 * t34718 - 70) * t34713) * np.sin((14 * phi1 - 5 * phi2)) * ((1 - t34713) ** (-0.1e1 / 0.2e1)) * ((1 + t34713) ** (-0.1e1 / 0.2e1))

        if Bindx == 3330:
            t34725 = np.cos(phi)
            t34726 = t34725 ** 2
            t34727 = t34725 * t34726
            t34730 = t34727 ** 2
            t34731 = t34725 * t34730
            t34738 = t34731 ** 2
            t34736 = t34730 ** 2
            t34728 = t34726 ** 2
            t34729 = t34725 * t34728
            t34734 = t34729 ** 2
            t34732 = t34728 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.910455e6) * (60 * t34726 + 185 * t34727 - 520 * t34728 - 363 * t34729 + 1708 * t34730 - 155 * t34731 + 2132 * t34734 - 680 * t34736 - 60 * t34738 - 2 + (-2700 + 62 * t34732) * t34732 + (1355 * t34732 - 1797 * t34734 + 1015 * t34736 - 217 * t34738 - 23) * t34725) * np.cos((14 * phi1 - 4 * phi2))

        if Bindx == 3331:
            t34750 = np.sin(phi)
            t34746 = t34750 ** 2
            t34747 = t34750 * t34746
            t34748 = t34747 ** 2
            t34741 = np.cos(phi)
            t34742 = t34741 ** 2
            t34744 = t34742 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.14007e5) * t34748 ** 2 * (28 * t34742 - 651 * t34744 - 1 + (466 * t34742 + 248 * t34744 - 90) * t34741) * np.sin((14 * phi1 - 3 * phi2)) * ((1 - t34741) ** (-0.1e1 / 0.2e1)) * ((1 + t34741) ** (-0.1e1 / 0.2e1))

        if Bindx == 3332:
            t34751 = np.cos(phi)
            t34752 = t34751 ** 2
            t34753 = t34751 * t34752
            t34756 = t34753 ** 2
            t34757 = t34751 * t34756
            t34764 = t34757 ** 2
            t34762 = t34756 ** 2
            t34754 = t34752 ** 2
            t34755 = t34751 * t34754
            t34760 = t34755 ** 2
            t34758 = t34754 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.38019e5) * (72 * t34752 - 427 * t34753 - 266 * t34754 + 1827 * t34755 + 196 * t34756 - 3955 * t34757 - 1568 * t34760 + 1498 * t34762 - 684 * t34764 - 2 + (630 + 124 * t34758) * t34758 + (4865 * t34758 - 3465 * t34760 + 1337 * t34762 - 217 * t34764 + 35) * t34751) * np.cos((14 * phi1 - 2 * phi2))

        if Bindx == 3333:
            t34775 = np.sin(phi)
            t34770 = t34775 ** 2
            t34771 = t34775 * t34770
            t34773 = t34775 * t34771 ** 2
            t34767 = np.cos(phi)
            t34768 = t34767 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.63365e5) * t34773 ** 2 * (-217 * t34768 + 7 + (248 * t34768 - 38) * t34767) * np.sin((14 * phi1 - phi2)) * ((1 - t34767) ** (-0.1e1 / 0.2e1)) * ((1 + t34767) ** (-0.1e1 / 0.2e1))

        if Bindx == 3334:
            t34776 = np.cos(phi)
            t34777 = t34776 ** 2
            t34778 = t34777 ** 2
            t34779 = t34777 * t34778
            t34782 = t34779 ** 2
            t34780 = t34778 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t34778 - 686 * t34779 + 658 * t34782 + 1 + (1120 + 31 * t34780) * t34780 + (-1106 * t34780 - 218 * t34782 - 38) * t34777) * np.cos((14 * phi1))

        if Bindx == 3335:
            t34793 = np.sin(phi)
            t34788 = t34793 ** 2
            t34789 = t34793 * t34788
            t34791 = t34793 * t34789 ** 2
            t34785 = np.cos(phi)
            t34786 = t34785 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.63365e5) * t34791 ** 2 * (217 * t34786 - 7 + (248 * t34786 - 38) * t34785) * np.sin((14 * phi1 + phi2)) * ((1 - t34785) ** (-0.1e1 / 0.2e1)) * ((1 + t34785) ** (-0.1e1 / 0.2e1))

        if Bindx == 3336:
            t34794 = np.cos(phi)
            t34795 = t34794 ** 2
            t34796 = t34794 * t34795
            t34799 = t34796 ** 2
            t34800 = t34794 * t34799
            t34807 = t34800 ** 2
            t34805 = t34799 ** 2
            t34797 = t34795 ** 2
            t34798 = t34794 * t34797
            t34803 = t34798 ** 2
            t34801 = t34797 ** 2
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.38019e5) * (72 * t34795 + 427 * t34796 - 266 * t34797 - 1827 * t34798 + 196 * t34799 + 3955 * t34800 - 1568 * t34803 + 1498 * t34805 - 684 * t34807 - 2 + (630 + 124 * t34801) * t34801 + (-4865 * t34801 + 3465 * t34803 - 1337 * t34805 + 217 * t34807 - 35) * t34794) * np.cos((14 * phi1 + 2 * phi2))

        if Bindx == 3337:
            t34819 = np.sin(phi)
            t34815 = t34819 ** 2
            t34816 = t34819 * t34815
            t34817 = t34816 ** 2
            t34810 = np.cos(phi)
            t34811 = t34810 ** 2
            t34813 = t34811 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.14007e5) * t34817 ** 2 * (-28 * t34811 + 651 * t34813 + 1 + (466 * t34811 + 248 * t34813 - 90) * t34810) * np.sin((14 * phi1 + 3 * phi2)) * ((1 - t34810) ** (-0.1e1 / 0.2e1)) * ((1 + t34810) ** (-0.1e1 / 0.2e1))

        if Bindx == 3338:
            t34820 = np.cos(phi)
            t34821 = t34820 ** 2
            t34822 = t34820 * t34821
            t34825 = t34822 ** 2
            t34826 = t34820 * t34825
            t34833 = t34826 ** 2
            t34831 = t34825 ** 2
            t34823 = t34821 ** 2
            t34824 = t34820 * t34823
            t34829 = t34824 ** 2
            t34827 = t34823 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.910455e6) * (60 * t34821 - 185 * t34822 - 520 * t34823 + 363 * t34824 + 1708 * t34825 + 155 * t34826 + 2132 * t34829 - 680 * t34831 - 60 * t34833 - 2 + (-2700 + 62 * t34827) * t34827 + (-1355 * t34827 + 1797 * t34829 - 1015 * t34831 + 217 * t34833 + 23) * t34820) * np.cos((14 * phi1 + 4 * phi2))

        if Bindx == 3339:
            t34847 = np.sin(phi)
            t34843 = t34847 ** 2
            t34845 = t34847 * t34843 ** 2
            t34836 = np.cos(phi)
            t34837 = t34836 ** 2
            t34838 = t34836 * t34837
            t34841 = t34838 ** 2
            t34839 = t34837 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * t34845 ** 2 * (-357 * t34837 - 140 * t34838 + 1015 * t34839 + 1085 * t34841 + 17 + (1722 * t34839 + 248 * t34841 - 70) * t34836) * np.sin((14 * phi1 + 5 * phi2)) * ((1 - t34836) ** (-0.1e1 / 0.2e1)) * ((1 + t34836) ** (-0.1e1 / 0.2e1))

        if Bindx == 3340:
            t34848 = np.cos(phi)
            t34849 = t34848 ** 2
            t34850 = t34848 * t34849
            t34853 = t34850 ** 2
            t34854 = t34848 * t34853
            t34861 = t34854 ** 2
            t34859 = t34853 ** 2
            t34851 = t34849 ** 2
            t34852 = t34848 * t34851
            t34857 = t34852 ** 2
            t34855 = t34851 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.130065e6) * (-280 * t34849 - 335 * t34850 + 1190 * t34851 + 2599 * t34852 - 924 * t34853 - 6215 * t34854 + 6336 * t34857 - 4310 * t34859 + 820 * t34861 + 14 + (-2970 + 124 * t34855) * t34855 + (5885 * t34855 - 1141 * t34857 - 1435 * t34859 + 651 * t34861 - 9) * t34848) * np.cos((14 * phi1 + 6 * phi2))

        if Bindx == 3341:
            t34876 = np.sin(phi)
            t34873 = t34876 ** 2
            t34874 = t34873 ** 2
            t34864 = np.cos(phi)
            t34865 = t34864 ** 2
            t34867 = t34865 ** 2
            t34871 = t34867 ** 2
            t34866 = t34864 * t34865
            t34869 = t34866 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1131e4) * t34874 ** 2 * (-410 * t34865 - 1386 * t34866 - 952 * t34867 + 4410 * t34869 + 1519 * t34871 + 41 + (1946 * t34867 + 3730 * t34869 + 248 * t34871 + 70) * t34864) * np.sin((14 * phi1 + 7 * phi2)) * ((1 - t34864) ** (-0.1e1 / 0.2e1)) * ((1 + t34864) ** (-0.1e1 / 0.2e1))

        if Bindx == 3342:
            t34877 = np.cos(phi)
            t34878 = t34877 ** 2
            t34879 = t34877 * t34878
            t34882 = t34879 ** 2
            t34883 = t34877 * t34882
            t34890 = t34883 ** 2
            t34888 = t34882 ** 2
            t34880 = t34878 ** 2
            t34881 = t34877 * t34880
            t34886 = t34881 ** 2
            t34884 = t34880 ** 2
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.377e3) * (42 * t34878 + 303 * t34879 + 294 * t34880 - 717 * t34881 - 1694 * t34882 - 341 * t34883 - 418 * t34886 - 1158 * t34888 + 534 * t34890 - 7 + (2376 + 31 * t34884) * t34884 + (2453 * t34884 - 2163 * t34886 + 273 * t34888 + 217 * t34890 - 25) * t34877) * np.cos((14 * phi1 + 8 * phi2))

        if Bindx == 3343:
            t34907 = np.sin(phi)
            t34904 = t34907 ** 2
            t34905 = t34907 * t34904
            t34893 = np.cos(phi)
            t34894 = t34893 ** 2
            t34896 = t34894 ** 2
            t34897 = t34893 * t34896
            t34902 = t34897 ** 2
            t34900 = t34896 ** 2
            t34895 = t34893 * t34894
            t34898 = t34895 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.377e3) * t34905 ** 2 * (365 * t34894 - 1680 * t34895 - 5310 * t34896 - 5124 * t34897 + 2226 * t34898 + 11445 * t34900 + 1953 * t34902 + 73 + (10440 * t34898 + 6490 * t34900 + 248 * t34902 + 378) * t34893) * np.sin((14 * phi1 + 9 * phi2)) * ((1 - t34893) ** (-0.1e1 / 0.2e1)) * ((1 + t34893) ** (-0.1e1 / 0.2e1))

        if Bindx == 3344:
            t34908 = np.cos(phi)
            t34909 = t34908 ** 2
            t34910 = t34908 * t34909
            t34913 = t34910 ** 2
            t34914 = t34908 * t34913
            t34921 = t34914 ** 2
            t34919 = t34913 ** 2
            t34911 = t34909 ** 2
            t34912 = t34908 * t34911
            t34917 = t34912 ** 2
            t34915 = t34911 ** 2
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.203e3) * (552 * t34909 - 825 * t34910 - 4602 * t34911 - 5343 * t34912 + 4004 * t34913 + 16159 * t34914 - 18304 * t34917 + 1482 * t34919 + 3828 * t34921 + 46 + (12870 + 124 * t34915) * t34915 + (-6149 * t34915 - 11427 * t34917 + 6195 * t34919 + 1085 * t34921 + 305) * t34908) * np.cos((14 * phi1 + 10 * phi2))

        if Bindx == 3345:
            t34939 = np.sin(phi)
            t34937 = t34939 ** 2
            t34924 = np.cos(phi)
            t34925 = t34924 ** 2
            t34926 = t34924 * t34925
            t34929 = t34926 ** 2
            t34935 = t34929 ** 2
            t34927 = t34925 ** 2
            t34928 = t34924 * t34927
            t34933 = t34928 ** 2
            t34931 = t34927 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.203e3) * t34937 ** 2 * (2712 * t34925 + 2618 * t34926 - 5335 * t34927 - 19404 * t34928 - 23496 * t34929 + 20691 * t34931 + 23408 * t34933 + 2387 * t34935 + 113 + (-5676 * t34929 + 31790 * t34931 + 10002 * t34933 + 248 * t34935 + 902) * t34924) * np.sin((14 * phi1 + 11 * phi2)) * ((1 - t34924) ** (-0.1e1 / 0.2e1)) * ((1 + t34924) ** (-0.1e1 / 0.2e1))

        if Bindx == 3346:
            t34940 = np.cos(phi)
            t34941 = t34940 ** 2
            t34942 = t34940 * t34941
            t34945 = t34942 ** 2
            t34946 = t34940 * t34945
            t34953 = t34946 ** 2
            t34951 = t34945 ** 2
            t34943 = t34941 ** 2
            t34944 = t34940 * t34943
            t34949 = t34944 ** 2
            t34947 = t34943 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.145e3) * (-1156 * t34941 - 1771 * t34942 + 728 * t34943 + 7553 * t34944 + 12012 * t34945 + 4433 * t34946 - 12012 * t34949 + 9464 * t34951 + 2948 * t34953 - 34 + (-12012 + 62 * t34947) * t34947 + (-20449 * t34947 + 2639 * t34949 + 7259 * t34951 + 651 * t34953 - 315) * t34940) * np.cos((14 * phi1 + 12 * phi2))

        if Bindx == 3347:
            t34957 = np.cos(phi)
            t34958 = t34957 ** 2
            t34959 = t34957 * t34958
            t34962 = t34959 ** 2
            t34963 = t34957 * t34962
            t34970 = t34963 ** 2
            t34968 = t34962 ** 2
            t34960 = t34958 ** 2
            t34961 = t34957 * t34960
            t34966 = t34961 ** 2
            t34964 = t34960 ** 2
            t34956 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.5e1) * t34956 ** 2 * (7567 * t34958 + 17836 * t34959 + 19201 * t34960 - 10010 * t34961 - 65065 * t34962 - 96096 * t34963 - 58773 * t34964 + 77077 * t34966 + 41587 * t34968 + 2821 * t34970 + 161 + (22022 * t34964 + 74620 * t34966 + 14266 * t34968 + 248 * t34970 + 1690) * t34957) * np.sin((14 * phi1 + 13 * phi2)) * ((1 - t34957) ** (-0.1e1 / 0.2e1)) * ((1 + t34957) ** (-0.1e1 / 0.2e1))

        if Bindx == 3348:
            t34972 = np.cos(phi)
            t34973 = t34972 ** 2
            t34974 = t34972 * t34973
            t34977 = t34974 ** 2
            t34978 = t34972 * t34977
            t34985 = t34978 ** 2
            t34983 = t34977 ** 2
            t34975 = t34973 ** 2
            t34976 = t34972 * t34975
            t34981 = t34976 ** 2
            t34979 = t34975 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * (5640 * t34973 + 16205 * t34974 + 26390 * t34975 + 16107 * t34976 - 28028 * t34977 - 80795 * t34978 + 32032 * t34981 + 53690 * t34983 + 8340 * t34985 + 94 + (-90090 + 124 * t34979) * t34979 + (-37895 * t34979 + 65247 * t34981 + 26705 * t34983 + 1519 * t34985 + 1099) * t34972) * np.cos((14 * phi1 + 14 * phi2))

        if Bindx == 3349:
            t34989 = np.cos(phi)
            t34990 = t34989 ** 2
            t34991 = t34989 * t34990
            t34994 = t34991 ** 2
            t34999 = t34994 ** 2
            t35000 = t34989 * t34999
            t35001 = t34989 * t35000
            t34992 = t34990 ** 2
            t34993 = t34989 * t34992
            t34997 = t34993 ** 2
            t34995 = t34992 ** 2
            t34988 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31e2) * t34988 ** 2 * (-525 * t34990 - 1820 * t34991 - 4095 * t34992 - 6006 * t34993 - 5005 * t34994 + 6435 * t34995 + 9009 * t34997 + 2275 * t34999 + 630 * t35000 + 105 * t35001 - 7 + (10010 * t34995 + 5460 * t34997 + 8 * t35001 - 90) * t34989) * np.sin((14 * phi1 + 15 * phi2)) * ((1 - t34989) ** (-0.1e1 / 0.2e1)) * ((1 + t34989) ** (-0.1e1 / 0.2e1))

        if Bindx == 3350:
            t35003 = np.cos(phi)
            t35004 = t35003 ** 2
            t35005 = t35003 * t35004
            t35008 = t35005 ** 2
            t35009 = t35003 * t35008
            t35015 = t35009 ** 2
            t35016 = t35003 * t35015
            t35013 = t35008 ** 2
            t35006 = t35004 ** 2
            t35007 = t35003 * t35006
            t35011 = t35007 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31e2) * (-350 * t35005 - 910 * t35006 - 1638 * t35007 - 2002 * t35008 - 1430 * t35009 + 2002 * t35011 + 910 * t35013 + 90 * t35015 + 14 * t35016 - 1 + (1430 * t35009 - 90) * t35004 + (1638 * t35011 + 350 * t35013 + t35016 - 14) * t35003) * np.cos((14 * phi1 + 16 * phi2))

        if Bindx == 3351:
            t35018 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * ((1 - t35018) ** (0.31e2 / 0.2e1)) * np.sqrt((1 + t35018)) * np.sin((15 * phi1 - 16 * phi2))

        if Bindx == 3352:
            t35019 = np.cos(phi)
            t35020 = t35019 ** 2
            t35021 = t35019 * t35020
            t35024 = t35021 ** 2
            t35025 = t35019 * t35024
            t35032 = t35025 ** 2
            t35030 = t35024 ** 2
            t35022 = t35020 ** 2
            t35023 = t35019 * t35022
            t35028 = t35023 ** 2
            t35026 = t35022 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-1335 * t35020 + 5145 * t35021 - 13195 * t35022 + 23205 * t35023 - 27027 * t35024 + 16445 * t35025 + 35035 * t35028 + 15015 * t35030 + 1455 * t35032 - 15 + (6435 + 16 * t35026) * t35026 + (-27885 * t35026 - 27573 * t35028 - 5705 * t35030 - 225 * t35032 + 209) * t35019) * np.cos((15 * phi1 - 15 * phi2))

        if Bindx == 3353:
            t35036 = np.cos(phi)
            t35037 = t35036 ** 2
            t35038 = t35036 * t35037
            t35041 = t35038 ** 2
            t35046 = t35041 ** 2
            t35047 = t35036 * t35046
            t35048 = t35036 * t35047
            t35039 = t35037 ** 2
            t35040 = t35036 * t35039
            t35044 = t35040 ** 2
            t35042 = t35039 ** 2
            t35035 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31e2) * t35035 ** 2 * (525 * t35037 - 1820 * t35038 + 4095 * t35039 - 6006 * t35040 + 5005 * t35041 - 6435 * t35042 - 9009 * t35044 - 2275 * t35046 + 630 * t35047 - 105 * t35048 + 7 + (10010 * t35042 + 5460 * t35044 + 8 * t35048 - 90) * t35036) * np.sin((15 * phi1 - 14 * phi2)) * ((1 - t35036) ** (-0.1e1 / 0.2e1)) * ((1 + t35036) ** (-0.1e1 / 0.2e1))

        if Bindx == 3354:
            t35050 = np.cos(phi)
            t35051 = t35050 ** 2
            t35052 = t35050 * t35051
            t35055 = t35052 ** 2
            t35056 = t35050 * t35055
            t35063 = t35056 ** 2
            t35061 = t35055 ** 2
            t35053 = t35051 ** 2
            t35054 = t35050 * t35053
            t35059 = t35054 ** 2
            t35057 = t35053 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.155e3) * (793 * t35051 - 2317 * t35052 + 3913 * t35053 - 2821 * t35054 - 3003 * t35055 + 10439 * t35056 + 3003 * t35059 + 6643 * t35061 + 1063 * t35063 + 13 + (-12441 + 16 * t35057) * t35057 + (6149 * t35057 - 7735 * t35059 - 3367 * t35061 - 195 * t35063 - 153) * t35050) * np.cos((15 * phi1 - 13 * phi2))

        if Bindx == 3355:
            t35082 = np.sin(phi)
            t35066 = np.cos(phi)
            t35081 = 1320 * t35066
            t35079 = t35082 ** 2
            t35067 = t35066 ** 2
            t35068 = t35066 * t35067
            t35071 = t35068 ** 2
            t35077 = t35071 ** 2
            t35069 = t35067 ** 2
            t35070 = t35066 * t35069
            t35075 = t35070 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4495e4) * t35079 ** 2 * (150 * t35067 - 396 * t35068 - 396 * t35070 - 682 * t35075 - 45 * t35077 + 3 + (t35081 - 396) * t35071 + (228 * t35075 + 4 * t35077 - 32) * t35066 + (605 + (t35081 - 1683) * t35069) * t35069) * np.sin((15 * phi1 - 12 * phi2)) * ((1 - t35066) ** (-0.1e1 / 0.2e1)) * ((1 + t35066) ** (-0.1e1 / 0.2e1))

        if Bindx == 3356:
            t35083 = np.cos(phi)
            t35084 = t35083 ** 2
            t35085 = t35083 * t35084
            t35088 = t35085 ** 2
            t35089 = t35083 * t35088
            t35096 = t35089 ** 2
            t35094 = t35088 ** 2
            t35086 = t35084 ** 2
            t35087 = t35083 * t35086
            t35092 = t35087 ** 2
            t35090 = t35086 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * (-407 * t35084 + 725 * t35085 - 143 * t35086 - 1963 * t35087 + 3861 * t35088 - 2431 * t35089 - 3861 * t35092 + 1963 * t35094 + 727 * t35096 - 11 + (-2145 + 16 * t35090) * t35090 + (5291 * t35090 + 143 * t35092 - 1705 * t35094 - 165 * t35096 + 105) * t35083) * np.cos((15 * phi1 - 11 * phi2))

        if Bindx == 3357:
            t35113 = np.sin(phi)
            t35110 = t35113 ** 2
            t35111 = t35113 * t35110
            t35099 = np.cos(phi)
            t35100 = t35099 ** 2
            t35102 = t35100 ** 2
            t35103 = t35099 * t35102
            t35108 = t35103 ** 2
            t35106 = t35102 ** 2
            t35101 = t35099 * t35100
            t35104 = t35101 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.6293e4) * t35111 ** 2 * (145 * t35100 - 240 * t35101 + 90 * t35102 + 420 * t35103 - 966 * t35104 - 735 * t35106 - 75 * t35108 + 5 + (1080 * t35104 + 310 * t35106 + 8 * t35108 - 42) * t35099) * np.sin((15 * phi1 - 10 * phi2)) * ((1 - t35099) ** (-0.1e1 / 0.2e1)) * ((1 + t35099) ** (-0.1e1 / 0.2e1))

        if Bindx == 3358:
            t35114 = np.cos(phi)
            t35115 = t35114 ** 2
            t35116 = t35114 * t35115
            t35119 = t35116 ** 2
            t35120 = t35114 * t35119
            t35127 = t35120 ** 2
            t35125 = t35119 ** 2
            t35117 = t35115 ** 2
            t35118 = t35114 * t35117
            t35123 = t35118 ** 2
            t35121 = t35117 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * (153 * t35115 + 15 * t35116 - 723 * t35117 + 1227 * t35118 - 99 * t35119 - 2101 * t35120 - 2101 * t35123 - 177 * t35125 + 447 * t35127 + 9 + (2475 + 16 * t35121) * t35121 + (-99 * t35121 + 1773 * t35123 - 615 * t35125 - 135 * t35127 - 65) * t35114) * np.cos((15 * phi1 - 9 * phi2))

        if Bindx == 3359:
            t35141 = np.sin(phi)
            t35138 = t35141 ** 2
            t35139 = t35138 ** 2
            t35130 = np.cos(phi)
            t35131 = t35130 ** 2
            t35132 = t35131 ** 2
            t35136 = t35132 ** 2
            t35133 = t35130 * t35132
            t35134 = t35130 * t35133
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.11687e5) * t35139 ** 2 * (12 * t35131 - 42 * t35132 + 84 * t35133 - 84 * t35134 - 15 * t35136 + 1 + (48 * t35134 + 2 * t35136 - 6) * t35130) * np.sin((15 * phi1 - 8 * phi2)) * ((1 - t35130) ** (-0.1e1 / 0.2e1)) * ((1 + t35130) ** (-0.1e1 / 0.2e1))

        if Bindx == 3360:
            t35142 = np.cos(phi)
            t35143 = t35142 ** 2
            t35144 = t35142 * t35143
            t35147 = t35144 ** 2
            t35148 = t35142 * t35147
            t35155 = t35148 ** 2
            t35153 = t35147 ** 2
            t35145 = t35143 ** 2
            t35146 = t35142 * t35145
            t35151 = t35146 ** 2
            t35149 = t35145 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.35061e5) * (-7 * t35143 - 223 * t35144 + 413 * t35145 + 149 * t35146 - 1155 * t35147 + 869 * t35148 + 363 * t35151 - 737 * t35153 + 223 * t35155 - 7 + (891 + 16 * t35149) * t35149 + (-1661 * t35149 + 931 * t35151 + 7 * t35153 - 105 * t35155 + 33) * t35142) * np.cos((15 * phi1 - 7 * phi2))

        if Bindx == 3361:
            t35169 = np.sin(phi)
            t35165 = t35169 ** 2
            t35167 = t35169 * t35165 ** 2
            t35158 = np.cos(phi)
            t35159 = t35158 ** 2
            t35160 = t35158 * t35159
            t35163 = t35160 ** 2
            t35161 = t35159 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * t35167 ** 2 * (-3 * t35159 + 60 * t35160 - 115 * t35161 - 45 * t35163 + 3 + (102 * t35161 + 8 * t35163 - 10) * t35158) * np.sin((15 * phi1 - 6 * phi2)) * ((1 - t35158) ** (-0.1e1 / 0.2e1)) * ((1 + t35158) ** (-0.1e1 / 0.2e1))

        if Bindx == 3362:
            t35170 = np.cos(phi)
            t35171 = t35170 ** 2
            t35172 = t35170 * t35171
            t35175 = t35172 ** 2
            t35176 = t35170 * t35175
            t35183 = t35176 ** 2
            t35181 = t35175 ** 2
            t35173 = t35171 ** 2
            t35174 = t35170 * t35173
            t35179 = t35174 ** 2
            t35177 = t35173 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * (-55 * t35171 + 155 * t35172 + 65 * t35173 - 565 * t35174 + 309 * t35175 + 815 * t35176 + 1035 * t35179 - 485 * t35181 + 55 * t35183 + 5 + (-945 + 16 * t35177) * t35177 + (-395 * t35177 - 191 * t35179 + 265 * t35181 - 75 * t35183 - 9) * t35170) * np.cos((15 * phi1 - 5 * phi2))

        if Bindx == 3363:
            t35195 = np.sin(phi)
            t35191 = t35195 ** 2
            t35192 = t35195 * t35191
            t35193 = t35192 ** 2
            t35186 = np.cos(phi)
            t35187 = t35186 ** 2
            t35189 = t35187 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.28224105e8) * t35193 ** 2 * (-10 * t35187 - 15 * t35189 + 1 + (20 * t35187 + 4 * t35189) * t35186) * np.sin((15 * phi1 - 4 * phi2)) * ((1 - t35186) ** (-0.1e1 / 0.2e1)) * ((1 + t35186) ** (-0.1e1 / 0.2e1))

        if Bindx == 3364:
            t35196 = np.cos(phi)
            t35197 = t35196 ** 2
            t35198 = t35196 * t35197
            t35201 = t35198 ** 2
            t35202 = t35196 * t35201
            t35209 = t35202 ** 2
            t35207 = t35201 ** 2
            t35199 = t35197 ** 2
            t35200 = t35196 * t35199
            t35205 = t35200 ** 2
            t35203 = t35199 ** 2
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.434217e6) * (57 * t35197 - 3 * t35198 - 263 * t35199 + 165 * t35200 + 549 * t35201 - 535 * t35202 + 283 * t35205 + 3 * t35207 - 57 * t35209 - 3 + (-585 + 16 * t35203) * t35203 + (795 * t35203 - 633 * t35205 + 263 * t35207 - 45 * t35209 - 7) * t35196) * np.cos((15 * phi1 - 3 * phi2))

        if Bindx == 3365:
            t35220 = np.sin(phi)
            t35215 = t35220 ** 2
            t35216 = t35220 * t35215
            t35218 = t35220 * t35216 ** 2
            t35212 = np.cos(phi)
            t35213 = t35212 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1178589e7) * t35218 ** 2 * (-15 * t35213 + 1 + (8 * t35213 + 6) * t35212) * np.sin((15 * phi1 - 2 * phi2)) * ((1 - t35212) ** (-0.1e1 / 0.2e1)) * ((1 + t35212) ** (-0.1e1 / 0.2e1))

        if Bindx == 3366:
            t35221 = np.cos(phi)
            t35222 = t35221 ** 2
            t35223 = t35221 * t35222
            t35226 = t35223 ** 2
            t35227 = t35221 * t35226
            t35234 = t35227 ** 2
            t35232 = t35226 ** 2
            t35224 = t35222 ** 2
            t35225 = t35221 * t35224
            t35230 = t35225 ** 2
            t35228 = t35224 ** 2
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1964315e7) * (-23 * t35222 - 105 * t35223 + 133 * t35224 + 315 * t35225 - 371 * t35226 - 525 * t35227 - 581 * t35230 + 343 * t35232 - 113 * t35234 + 1 + (595 + 16 * t35228) * t35228 + (525 * t35228 - 315 * t35230 + 105 * t35232 - 15 * t35234 + 15) * t35221) * np.cos((15 * phi1 - phi2))

        if Bindx == 3367:
            t35242 = np.sin(phi)
            t35238 = t35242 ** 2
            t35239 = t35238 ** 2
            t35240 = t35239 ** 2
            t35237 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t35237 * t35240 ** 2 * np.sin((15 * phi1)) * ((1 - t35237) ** (-0.1e1 / 0.2e1)) * ((1 + t35237) ** (-0.1e1 / 0.2e1))

        if Bindx == 3368:
            t35243 = np.cos(phi)
            t35244 = t35243 ** 2
            t35245 = t35243 * t35244
            t35248 = t35245 ** 2
            t35249 = t35243 * t35248
            t35256 = t35249 ** 2
            t35254 = t35248 ** 2
            t35246 = t35244 ** 2
            t35247 = t35243 * t35246
            t35252 = t35247 ** 2
            t35250 = t35246 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.1964315e7) * (-23 * t35244 + 105 * t35245 + 133 * t35246 - 315 * t35247 - 371 * t35248 + 525 * t35249 - 581 * t35252 + 343 * t35254 - 113 * t35256 + 1 + (595 + 16 * t35250) * t35250 + (-525 * t35250 + 315 * t35252 - 105 * t35254 + 15 * t35256 - 15) * t35243) * np.cos((15 * phi1 + phi2))

        if Bindx == 3369:
            t35267 = np.sin(phi)
            t35262 = t35267 ** 2
            t35263 = t35267 * t35262
            t35265 = t35267 * t35263 ** 2
            t35259 = np.cos(phi)
            t35260 = t35259 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1178589e7) * t35265 ** 2 * (15 * t35260 - 1 + (8 * t35260 + 6) * t35259) * np.sin((15 * phi1 + 2 * phi2)) * ((1 - t35259) ** (-0.1e1 / 0.2e1)) * ((1 + t35259) ** (-0.1e1 / 0.2e1))

        if Bindx == 3370:
            t35268 = np.cos(phi)
            t35269 = t35268 ** 2
            t35270 = t35268 * t35269
            t35273 = t35270 ** 2
            t35274 = t35268 * t35273
            t35281 = t35274 ** 2
            t35279 = t35273 ** 2
            t35271 = t35269 ** 2
            t35272 = t35268 * t35271
            t35277 = t35272 ** 2
            t35275 = t35271 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.434217e6) * (57 * t35269 + 3 * t35270 - 263 * t35271 - 165 * t35272 + 549 * t35273 + 535 * t35274 + 283 * t35277 + 3 * t35279 - 57 * t35281 - 3 + (-585 + 16 * t35275) * t35275 + (-795 * t35275 + 633 * t35277 - 263 * t35279 + 45 * t35281 + 7) * t35268) * np.cos((15 * phi1 + 3 * phi2))

        if Bindx == 3371:
            t35293 = np.sin(phi)
            t35289 = t35293 ** 2
            t35290 = t35293 * t35289
            t35291 = t35290 ** 2
            t35284 = np.cos(phi)
            t35285 = t35284 ** 2
            t35287 = t35285 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.28224105e8) * t35291 ** 2 * (10 * t35285 + 15 * t35287 - 1 + (20 * t35285 + 4 * t35287) * t35284) * np.sin((15 * phi1 + 4 * phi2)) * ((1 - t35284) ** (-0.1e1 / 0.2e1)) * ((1 + t35284) ** (-0.1e1 / 0.2e1))

        if Bindx == 3372:
            t35294 = np.cos(phi)
            t35295 = t35294 ** 2
            t35296 = t35294 * t35295
            t35299 = t35296 ** 2
            t35300 = t35294 * t35299
            t35307 = t35300 ** 2
            t35305 = t35299 ** 2
            t35297 = t35295 ** 2
            t35298 = t35294 * t35297
            t35303 = t35298 ** 2
            t35301 = t35297 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * (-55 * t35295 - 155 * t35296 + 65 * t35297 + 565 * t35298 + 309 * t35299 - 815 * t35300 + 1035 * t35303 - 485 * t35305 + 55 * t35307 + 5 + (-945 + 16 * t35301) * t35301 + (395 * t35301 + 191 * t35303 - 265 * t35305 + 75 * t35307 + 9) * t35294) * np.cos((15 * phi1 + 5 * phi2))

        if Bindx == 3373:
            t35321 = np.sin(phi)
            t35317 = t35321 ** 2
            t35319 = t35321 * t35317 ** 2
            t35310 = np.cos(phi)
            t35311 = t35310 ** 2
            t35312 = t35310 * t35311
            t35315 = t35312 ** 2
            t35313 = t35311 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * t35319 ** 2 * (3 * t35311 + 60 * t35312 + 115 * t35313 + 45 * t35315 - 3 + (102 * t35313 + 8 * t35315 - 10) * t35310) * np.sin((15 * phi1 + 6 * phi2)) * ((1 - t35310) ** (-0.1e1 / 0.2e1)) * ((1 + t35310) ** (-0.1e1 / 0.2e1))

        if Bindx == 3374:
            t35322 = np.cos(phi)
            t35323 = t35322 ** 2
            t35324 = t35322 * t35323
            t35327 = t35324 ** 2
            t35328 = t35322 * t35327
            t35335 = t35328 ** 2
            t35333 = t35327 ** 2
            t35325 = t35323 ** 2
            t35326 = t35322 * t35325
            t35331 = t35326 ** 2
            t35329 = t35325 ** 2
            tfunc[..., c] = 0.165e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.35061e5) * (-7 * t35323 + 223 * t35324 + 413 * t35325 - 149 * t35326 - 1155 * t35327 - 869 * t35328 + 363 * t35331 - 737 * t35333 + 223 * t35335 - 7 + (891 + 16 * t35329) * t35329 + (1661 * t35329 - 931 * t35331 - 7 * t35333 + 105 * t35335 - 33) * t35322) * np.cos((15 * phi1 + 7 * phi2))

        if Bindx == 3375:
            t35349 = np.sin(phi)
            t35346 = t35349 ** 2
            t35347 = t35346 ** 2
            t35338 = np.cos(phi)
            t35339 = t35338 ** 2
            t35340 = t35339 ** 2
            t35344 = t35340 ** 2
            t35341 = t35338 * t35340
            t35342 = t35338 * t35341
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.11687e5) * t35347 ** 2 * (-12 * t35339 + 42 * t35340 + 84 * t35341 + 84 * t35342 + 15 * t35344 - 1 + (48 * t35342 + 2 * t35344 - 6) * t35338) * np.sin((15 * phi1 + 8 * phi2)) * ((1 - t35338) ** (-0.1e1 / 0.2e1)) * ((1 + t35338) ** (-0.1e1 / 0.2e1))

        if Bindx == 3376:
            t35350 = np.cos(phi)
            t35351 = t35350 ** 2
            t35352 = t35350 * t35351
            t35355 = t35352 ** 2
            t35356 = t35350 * t35355
            t35363 = t35356 ** 2
            t35361 = t35355 ** 2
            t35353 = t35351 ** 2
            t35354 = t35350 * t35353
            t35359 = t35354 ** 2
            t35357 = t35353 ** 2
            tfunc[..., c] = -0.99e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * (153 * t35351 - 15 * t35352 - 723 * t35353 - 1227 * t35354 - 99 * t35355 + 2101 * t35356 - 2101 * t35359 - 177 * t35361 + 447 * t35363 + 9 + (2475 + 16 * t35357) * t35357 + (99 * t35357 - 1773 * t35359 + 615 * t35361 + 135 * t35363 + 65) * t35350) * np.cos((15 * phi1 + 9 * phi2))

        if Bindx == 3377:
            t35380 = np.sin(phi)
            t35377 = t35380 ** 2
            t35378 = t35380 * t35377
            t35366 = np.cos(phi)
            t35367 = t35366 ** 2
            t35369 = t35367 ** 2
            t35370 = t35366 * t35369
            t35375 = t35370 ** 2
            t35373 = t35369 ** 2
            t35368 = t35366 * t35367
            t35371 = t35368 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.6293e4) * t35378 ** 2 * (-145 * t35367 - 240 * t35368 - 90 * t35369 + 420 * t35370 + 966 * t35371 + 735 * t35373 + 75 * t35375 - 5 + (1080 * t35371 + 310 * t35373 + 8 * t35375 - 42) * t35366) * np.sin((15 * phi1 + 10 * phi2)) * ((1 - t35366) ** (-0.1e1 / 0.2e1)) * ((1 + t35366) ** (-0.1e1 / 0.2e1))

        if Bindx == 3378:
            t35381 = np.cos(phi)
            t35382 = t35381 ** 2
            t35383 = t35381 * t35382
            t35386 = t35383 ** 2
            t35387 = t35381 * t35386
            t35394 = t35387 ** 2
            t35392 = t35386 ** 2
            t35384 = t35382 ** 2
            t35385 = t35381 * t35384
            t35390 = t35385 ** 2
            t35388 = t35384 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * (-407 * t35382 - 725 * t35383 - 143 * t35384 + 1963 * t35385 + 3861 * t35386 + 2431 * t35387 - 3861 * t35390 + 1963 * t35392 + 727 * t35394 - 11 + (-2145 + 16 * t35388) * t35388 + (-5291 * t35388 - 143 * t35390 + 1705 * t35392 + 165 * t35394 - 105) * t35381) * np.cos((15 * phi1 + 11 * phi2))

        if Bindx == 3379:
            t35413 = np.sin(phi)
            t35397 = np.cos(phi)
            t35412 = 1320 * t35397
            t35410 = t35413 ** 2
            t35398 = t35397 ** 2
            t35399 = t35397 * t35398
            t35402 = t35399 ** 2
            t35408 = t35402 ** 2
            t35400 = t35398 ** 2
            t35401 = t35397 * t35400
            t35406 = t35401 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4495e4) * t35410 ** 2 * (-150 * t35398 - 396 * t35399 - 396 * t35401 + 682 * t35406 + 45 * t35408 - 3 + (t35412 + 396) * t35402 + (228 * t35406 + 4 * t35408 - 32) * t35397 + (-605 + (t35412 + 1683) * t35400) * t35400) * np.sin((15 * phi1 + 12 * phi2)) * ((1 - t35397) ** (-0.1e1 / 0.2e1)) * ((1 + t35397) ** (-0.1e1 / 0.2e1))

        if Bindx == 3380:
            t35414 = np.cos(phi)
            t35415 = t35414 ** 2
            t35416 = t35414 * t35415
            t35419 = t35416 ** 2
            t35420 = t35414 * t35419
            t35427 = t35420 ** 2
            t35425 = t35419 ** 2
            t35417 = t35415 ** 2
            t35418 = t35414 * t35417
            t35423 = t35418 ** 2
            t35421 = t35417 ** 2
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.155e3) * (793 * t35415 + 2317 * t35416 + 3913 * t35417 + 2821 * t35418 - 3003 * t35419 - 10439 * t35420 + 3003 * t35423 + 6643 * t35425 + 1063 * t35427 + 13 + (-12441 + 16 * t35421) * t35421 + (-6149 * t35421 + 7735 * t35423 + 3367 * t35425 + 195 * t35427 + 153) * t35414) * np.cos((15 * phi1 + 13 * phi2))

        if Bindx == 3381:
            t35431 = np.cos(phi)
            t35432 = t35431 ** 2
            t35433 = t35431 * t35432
            t35436 = t35433 ** 2
            t35441 = t35436 ** 2
            t35442 = t35431 * t35441
            t35443 = t35431 * t35442
            t35434 = t35432 ** 2
            t35435 = t35431 * t35434
            t35439 = t35435 ** 2
            t35437 = t35434 ** 2
            t35430 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.31e2) * t35430 ** 2 * (-525 * t35432 - 1820 * t35433 - 4095 * t35434 - 6006 * t35435 - 5005 * t35436 + 6435 * t35437 + 9009 * t35439 + 2275 * t35441 + 630 * t35442 + 105 * t35443 - 7 + (10010 * t35437 + 5460 * t35439 + 8 * t35443 - 90) * t35431) * np.sin((15 * phi1 + 14 * phi2)) * ((1 - t35431) ** (-0.1e1 / 0.2e1)) * ((1 + t35431) ** (-0.1e1 / 0.2e1))

        if Bindx == 3382:
            t35445 = np.cos(phi)
            t35446 = t35445 ** 2
            t35447 = t35445 * t35446
            t35450 = t35447 ** 2
            t35451 = t35445 * t35450
            t35458 = t35451 ** 2
            t35456 = t35450 ** 2
            t35448 = t35446 ** 2
            t35449 = t35445 * t35448
            t35454 = t35449 ** 2
            t35452 = t35448 ** 2
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-1335 * t35446 - 5145 * t35447 - 13195 * t35448 - 23205 * t35449 - 27027 * t35450 - 16445 * t35451 + 35035 * t35454 + 15015 * t35456 + 1455 * t35458 - 15 + (6435 + 16 * t35452) * t35452 + (27885 * t35452 + 27573 * t35454 + 5705 * t35456 + 225 * t35458 - 209) * t35445) * np.cos((15 * phi1 + 15 * phi2))

        if Bindx == 3383:
            t35461 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt((1 - t35461)) * ((1 + t35461) ** (0.31e2 / 0.2e1)) * np.sin((15 * phi1 + 16 * phi2))

        if Bindx == 3384:
            t35462 = np.cos(phi)
            t35478 = -16 * t35462
            t35463 = t35462 ** 2
            t35464 = t35462 * t35463
            t35467 = t35464 ** 2
            t35473 = t35467 ** 2
            t35465 = t35463 ** 2
            t35466 = t35462 * t35465
            t35471 = t35466 ** 2
            t35469 = t35465 ** 2
            t35468 = t35462 * t35467
            tfunc[..., c] = 0.33e2 / 0.65536e5 * np.sqrt(0.2e1) * np.cos((16 * phi1 - 16 * phi2)) * (120 * t35463 - 560 * t35464 + 1820 * t35465 - 4368 * t35466 + 8008 * t35467 + 8008 * t35471 + 1820 * t35473 + t35478 + 1 + (12870 + t35469) * t35469 + (-11440 * t35469 - 4368 * t35471 - 560 * t35473) * t35462 + (-11440 + (t35478 + 120) * t35468) * t35468)

        if Bindx == 3385:
            t35479 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * ((1 - t35479) ** (0.31e2 / 0.2e1)) * np.sqrt((1 + t35479)) * np.sin((16 * phi1 - 15 * phi2))

        if Bindx == 3386:
            t35480 = np.cos(phi)
            t35481 = t35480 ** 2
            t35482 = t35480 * t35481
            t35485 = t35482 ** 2
            t35486 = t35480 * t35485
            t35492 = t35486 ** 2
            t35493 = t35480 * t35492
            t35490 = t35485 ** 2
            t35483 = t35481 ** 2
            t35484 = t35480 * t35483
            t35488 = t35484 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31e2) * (350 * t35482 - 910 * t35483 + 1638 * t35484 - 2002 * t35485 + 1430 * t35486 + 2002 * t35488 + 910 * t35490 + 90 * t35492 - 14 * t35493 - 1 + (-1430 * t35486 - 90) * t35481 + (-1638 * t35488 - 350 * t35490 + t35493 + 14) * t35480) * np.cos((16 * phi1 - 14 * phi2))

        if Bindx == 3387:
            t35495 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.155e3) * ((1 - t35495) ** (0.29e2 / 0.2e1)) * ((1 + t35495) ** (0.3e1 / 0.2e1)) * np.sin((16 * phi1 - 13 * phi2))

        if Bindx == 3388:
            t35496 = np.cos(phi)
            t35511 = -12 * t35496
            t35510 = -196 * t35496
            t35497 = t35496 ** 2
            t35499 = t35497 ** 2
            t35502 = t35499 ** 2
            t35503 = t35496 * t35502
            t35500 = t35496 * t35499
            t35501 = t35497 * t35500
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * np.cos((16 * phi1 - 12 * phi2)) * (364 * t35499 - 364 * t35500 + 572 * t35503 + t35511 + 1 + (-858 + t35502) * t35502 + (572 + (t35511 + 64) * t35501) * t35501 + (t35510 + 64 + (-364 + (t35510 + 364) * t35496) * t35503) * t35497)

        if Bindx == 3389:
            t35512 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6293e4) * ((1 - t35512) ** (0.27e2 / 0.2e1)) * ((1 + t35512) ** (0.5e1 / 0.2e1)) * np.sin((16 * phi1 - 11 * phi2))

        if Bindx == 3390:
            t35513 = np.cos(phi)
            t35514 = t35513 ** 2
            t35515 = t35513 * t35514
            t35518 = t35515 ** 2
            t35519 = t35513 * t35518
            t35525 = t35519 ** 2
            t35526 = t35513 * t35525
            t35523 = t35518 ** 2
            t35516 = t35514 ** 2
            t35517 = t35513 * t35516
            t35521 = t35517 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * np.cos((16 * phi1 - 10 * phi2)) * (90 * t35515 - 78 * t35516 - 78 * t35517 + 286 * t35518 - 286 * t35519 - 286 * t35521 + 78 * t35523 + 42 * t35525 - 10 * t35526 - 1 + (286 * t35519 - 42) * t35514 + (78 * t35521 - 90 * t35523 + t35526 + 10) * t35513)

        if Bindx == 3391:
            t35528 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.11687e5) * ((1 - t35528) ** (0.25e2 / 0.2e1)) * ((1 + t35528) ** (0.7e1 / 0.2e1)) * np.sin((16 * phi1 - 9 * phi2))

        if Bindx == 3392:
            t35529 = np.cos(phi)
            t35545 = -8 * t35529
            t35530 = t35529 ** 2
            t35531 = t35529 * t35530
            t35534 = t35531 ** 2
            t35540 = t35534 ** 2
            t35532 = t35530 ** 2
            t35533 = t35529 * t35532
            t35538 = t35533 ** 2
            t35536 = t35532 ** 2
            t35535 = t35529 * t35534
            tfunc[..., c] = 0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * np.cos((16 * phi1 - 8 * phi2)) * (24 * t35530 - 24 * t35531 - 36 * t35532 + 120 * t35533 - 88 * t35534 - 88 * t35538 - 36 * t35540 + t35545 + 1 + (198 + t35536) * t35536 + (-88 * t35536 + 120 * t35538 - 24 * t35540) * t35529 + (-88 + (t35545 + 24) * t35535) * t35535)

        if Bindx == 3393:
            t35546 = np.cos(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.35061e5) * ((1 - t35546) ** (0.23e2 / 0.2e1)) * ((1 + t35546) ** (0.9e1 / 0.2e1)) * np.sin((16 * phi1 - 7 * phi2))

        if Bindx == 3394:
            t35547 = np.cos(phi)
            t35548 = t35547 ** 2
            t35549 = t35547 * t35548
            t35552 = t35549 ** 2
            t35553 = t35547 * t35552
            t35559 = t35553 ** 2
            t35560 = t35547 * t35559
            t35557 = t35552 ** 2
            t35550 = t35548 ** 2
            t35551 = t35547 * t35550
            t35555 = t35551 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * np.cos((16 * phi1 - 6 * phi2)) * (-10 * t35549 + 50 * t35550 - 34 * t35551 - 66 * t35552 + 110 * t35553 + 66 * t35555 - 50 * t35557 + 10 * t35559 - 6 * t35560 - 1 + (-110 * t35553 - 10) * t35548 + (34 * t35555 + 10 * t35557 + t35560 + 6) * t35547)

        if Bindx == 3395:
            t35562 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4032015e7) * ((1 - t35562) ** (0.21e2 / 0.2e1)) * ((1 + t35562) ** (0.11e2 / 0.2e1)) * np.sin((16 * phi1 - 5 * phi2))

        if Bindx == 3396:
            t35563 = np.cos(phi)
            t35578 = 20 * t35563
            t35564 = t35563 ** 2
            t35565 = t35563 * t35564
            t35568 = t35565 ** 2
            t35574 = t35568 ** 2
            t35566 = t35564 ** 2
            t35567 = t35563 * t35566
            t35572 = t35567 ** 2
            t35570 = t35566 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.28224105e8) * np.cos((16 * phi1 - 4 * phi2)) * (20 * t35565 - 20 * t35566 - 36 * t35567 + 64 * t35572 - 20 * t35574 + 1 + (t35578 + 64) * t35568 + (t35578 - 90 + t35570) * t35570 + ((-4 * t35564 + 20) * t35574 - 36 * t35572 - 4) * t35563)

        if Bindx == 3397:
            t35579 = np.cos(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.434217e6) * ((1 - t35579) ** (0.19e2 / 0.2e1)) * ((1 + t35579) ** (0.13e2 / 0.2e1)) * np.sin((16 * phi1 - 3 * phi2))

        if Bindx == 3398:
            t35580 = np.cos(phi)
            t35581 = t35580 ** 2
            t35582 = t35580 * t35581
            t35585 = t35582 ** 2
            t35595 = 14 * t35585 ** 2
            t35586 = t35580 * t35585
            t35592 = t35586 ** 2
            t35593 = t35580 * t35592
            t35583 = t35581 ** 2
            t35584 = t35580 * t35583
            t35588 = t35584 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1178589e7) * np.cos((16 * phi1 - 2 * phi2)) * (-14 * t35582 - 14 * t35583 + 42 * t35584 + 14 * t35585 - 70 * t35586 - 14 * t35588 - 6 * t35592 - 2 * t35593 + t35595 - 1 + (70 * t35586 + 6) * t35581 + (-42 * t35588 + t35593 + t35595 + 2) * t35580)

        if Bindx == 3399:
            t35596 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1964315e7) * ((1 - t35596) ** (0.17e2 / 0.2e1)) * ((1 + t35596) ** (0.15e2 / 0.2e1)) * np.sin((16 * phi1 - phi2))

        if Bindx == 3400:
            t35597 = np.cos(phi)
            t35598 = t35597 ** 2
            t35606 = -8 * t35598
            t35599 = t35598 ** 2
            t35601 = t35599 ** 2
            t35600 = t35598 * t35599
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t35599 + t35606 + 1 + (-56 * t35598 + 70 + t35601) * t35601 + (-56 + (t35606 + 28) * t35600) * t35600)

        if Bindx == 3401:
            t35607 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1964315e7) * ((1 - t35607) ** (0.15e2 / 0.2e1)) * ((1 + t35607) ** (0.17e2 / 0.2e1)) * np.sin((16 * phi1 + phi2))

        if Bindx == 3402:
            t35608 = np.cos(phi)
            t35609 = t35608 ** 2
            t35610 = t35608 * t35609
            t35613 = t35610 ** 2
            t35614 = t35608 * t35613
            t35620 = t35614 ** 2
            t35621 = t35608 * t35620
            t35618 = t35613 ** 2
            t35611 = t35609 ** 2
            t35612 = t35608 * t35611
            t35616 = t35612 ** 2
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.1178589e7) * np.cos((16 * phi1 + 2 * phi2)) * (14 * t35610 - 14 * t35611 - 42 * t35612 + 14 * t35613 + 70 * t35614 - 14 * t35616 + 14 * t35618 - 6 * t35620 + 2 * t35621 - 1 + (-70 * t35614 + 6) * t35609 + (42 * t35616 - 14 * t35618 + t35621 - 2) * t35608)

        if Bindx == 3403:
            t35623 = np.cos(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.434217e6) * ((1 - t35623) ** (0.13e2 / 0.2e1)) * ((1 + t35623) ** (0.19e2 / 0.2e1)) * np.sin((16 * phi1 + 3 * phi2))

        if Bindx == 3404:
            t35624 = np.cos(phi)
            t35639 = -20 * t35624
            t35625 = t35624 ** 2
            t35626 = t35624 * t35625
            t35629 = t35626 ** 2
            t35635 = t35629 ** 2
            t35627 = t35625 ** 2
            t35628 = t35624 * t35627
            t35633 = t35628 ** 2
            t35631 = t35627 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.28224105e8) * np.cos((16 * phi1 + 4 * phi2)) * (-20 * t35626 - 20 * t35627 + 36 * t35628 + 64 * t35633 - 20 * t35635 + 1 + (t35639 + 64) * t35629 + (t35639 - 90 + t35631) * t35631 + ((4 * t35625 - 20) * t35635 + 36 * t35633 + 4) * t35624)

        if Bindx == 3405:
            t35640 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.4032015e7) * ((1 - t35640) ** (0.11e2 / 0.2e1)) * ((1 + t35640) ** (0.21e2 / 0.2e1)) * np.sin((16 * phi1 + 5 * phi2))

        if Bindx == 3406:
            t35641 = np.cos(phi)
            t35642 = t35641 ** 2
            t35643 = t35641 * t35642
            t35646 = t35643 ** 2
            t35647 = t35641 * t35646
            t35653 = t35647 ** 2
            t35654 = t35641 * t35653
            t35651 = t35646 ** 2
            t35644 = t35642 ** 2
            t35645 = t35641 * t35644
            t35649 = t35645 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * np.cos((16 * phi1 + 6 * phi2)) * (10 * t35643 + 50 * t35644 + 34 * t35645 - 66 * t35646 - 110 * t35647 + 66 * t35649 - 50 * t35651 + 10 * t35653 + 6 * t35654 - 1 + (110 * t35647 - 10) * t35642 + (-34 * t35649 - 10 * t35651 + t35654 - 6) * t35641)

        if Bindx == 3407:
            t35656 = np.cos(phi)
            tfunc[..., c] = -0.165e3 / 0.8192e4 * np.sqrt(0.35061e5) * ((1 - t35656) ** (0.9e1 / 0.2e1)) * ((1 + t35656) ** (0.23e2 / 0.2e1)) * np.sin((16 * phi1 + 7 * phi2))

        if Bindx == 3408:
            t35657 = np.cos(phi)
            t35673 = 8 * t35657
            t35658 = t35657 ** 2
            t35659 = t35657 * t35658
            t35662 = t35659 ** 2
            t35668 = t35662 ** 2
            t35660 = t35658 ** 2
            t35661 = t35657 * t35660
            t35666 = t35661 ** 2
            t35664 = t35660 ** 2
            t35663 = t35657 * t35662
            tfunc[..., c] = 0.495e3 / 0.32768e5 * np.sqrt(0.2e1) * np.sqrt(0.11687e5) * np.cos((16 * phi1 + 8 * phi2)) * (24 * t35658 + 24 * t35659 - 36 * t35660 - 120 * t35661 - 88 * t35662 - 88 * t35666 - 36 * t35668 + t35673 + 1 + (198 + t35664) * t35664 + (88 * t35664 - 120 * t35666 + 24 * t35668) * t35657 + (88 + (t35673 + 24) * t35663) * t35663)

        if Bindx == 3409:
            t35674 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.11687e5) * ((1 - t35674) ** (0.7e1 / 0.2e1)) * ((1 + t35674) ** (0.25e2 / 0.2e1)) * np.sin((16 * phi1 + 9 * phi2))

        if Bindx == 3410:
            t35675 = np.cos(phi)
            t35676 = t35675 ** 2
            t35677 = t35675 * t35676
            t35680 = t35677 ** 2
            t35681 = t35675 * t35680
            t35687 = t35681 ** 2
            t35688 = t35675 * t35687
            t35685 = t35680 ** 2
            t35678 = t35676 ** 2
            t35679 = t35675 * t35678
            t35683 = t35679 ** 2
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.6293e4) * np.cos((16 * phi1 + 10 * phi2)) * (-90 * t35677 - 78 * t35678 + 78 * t35679 + 286 * t35680 + 286 * t35681 - 286 * t35683 + 78 * t35685 + 42 * t35687 + 10 * t35688 - 1 + (-286 * t35681 - 42) * t35676 + (-78 * t35683 + 90 * t35685 + t35688 - 10) * t35675)

        if Bindx == 3411:
            t35690 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.6293e4) * ((1 - t35690) ** (0.5e1 / 0.2e1)) * ((1 + t35690) ** (0.27e2 / 0.2e1)) * np.sin((16 * phi1 + 11 * phi2))

        if Bindx == 3412:
            t35691 = np.cos(phi)
            t35706 = 12 * t35691
            t35705 = 196 * t35691
            t35692 = t35691 ** 2
            t35694 = t35692 ** 2
            t35697 = t35694 ** 2
            t35698 = t35691 * t35697
            t35695 = t35691 * t35694
            t35696 = t35692 * t35695
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * np.cos((16 * phi1 + 12 * phi2)) * (364 * t35694 + 364 * t35695 - 572 * t35698 + t35706 + 1 + (-858 + t35697) * t35697 + (-572 + (t35706 + 64) * t35696) * t35696 + (t35705 + 64 + (364 + (t35705 + 364) * t35691) * t35698) * t35692)

        if Bindx == 3413:
            t35707 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.155e3) * ((1 - t35707) ** (0.3e1 / 0.2e1)) * ((1 + t35707) ** (0.29e2 / 0.2e1)) * np.sin((16 * phi1 + 13 * phi2))

        if Bindx == 3414:
            t35708 = np.cos(phi)
            t35709 = t35708 ** 2
            t35710 = t35708 * t35709
            t35713 = t35710 ** 2
            t35714 = t35708 * t35713
            t35720 = t35714 ** 2
            t35721 = t35708 * t35720
            t35718 = t35713 ** 2
            t35711 = t35709 ** 2
            t35712 = t35708 * t35711
            t35716 = t35712 ** 2
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.31e2) * (-350 * t35710 - 910 * t35711 - 1638 * t35712 - 2002 * t35713 - 1430 * t35714 + 2002 * t35716 + 910 * t35718 + 90 * t35720 + 14 * t35721 - 1 + (1430 * t35714 - 90) * t35709 + (1638 * t35716 + 350 * t35718 + t35721 - 14) * t35708) * np.cos((16 * phi1 + 14 * phi2))

        if Bindx == 3415:
            t35723 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * ((1 + t35723) ** (0.31e2 / 0.2e1)) * np.sin((16 * phi1 + 15 * phi2)) * np.sqrt((1 - t35723))

        if Bindx == 3416:
            t35724 = np.cos(phi)
            t35740 = 16 * t35724
            t35725 = t35724 ** 2
            t35726 = t35724 * t35725
            t35729 = t35726 ** 2
            t35735 = t35729 ** 2
            t35727 = t35725 ** 2
            t35728 = t35724 * t35727
            t35733 = t35728 ** 2
            t35731 = t35727 ** 2
            t35730 = t35724 * t35729
            tfunc[..., c] = 0.33e2 / 0.65536e5 * np.sqrt(0.2e1) * np.cos((16 * phi1 + 16 * phi2)) * (120 * t35725 + 560 * t35726 + 1820 * t35727 + 4368 * t35728 + 8008 * t35729 + 8008 * t35733 + 1820 * t35735 + t35740 + 1 + (12870 + t35731) * t35731 + (11440 * t35731 + 4368 * t35733 + 560 * t35735) * t35724 + (11440 + (t35740 + 120) * t35730) * t35730)
	
        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

