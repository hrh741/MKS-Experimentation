import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [4, 0, 1],
                        [4, 1, 1],
                        [4, 2, 1],
                        [4, 3, 1],
                        [4, 4, 1],
                        [6, 0, 1],
                        [6, 1, 1],
                        [6, 2, 1],
                        [6, 3, 1],
                        [6, 4, 1],
                        [6, 5, 1],
                        [6, 6, 1],
                        [8, 0, 1],
                        [8, 1, 1],
                        [8, 2, 1],
                        [8, 3, 1],
                        [8, 4, 1],
                        [8, 5, 1],
                        [8, 6, 1],
                        [8, 7, 1],
                        [8, 8, 1],
                        [9, 0, 1],
                        [9, 1, 1],
                        [9, 2, 1],
                        [9, 3, 1],
                        [9, 4, 1],
                        [9, 5, 1],
                        [9, 6, 1],
                        [9, 7, 1],
                        [9, 8, 1],
                        [9, 9, 1],
                        [10, 0, 1],
                        [10, 1, 1],
                        [10, 2, 1],
                        [10, 3, 1],
                        [10, 4, 1],
                        [10, 5, 1],
                        [10, 6, 1],
                        [10, 7, 1],
                        [10, 8, 1],
                        [10, 9, 1],
                        [10, 10, 1],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 12, 1],
                        [12, 12, 2],
                        [13, 0, 1],
                        [13, 1, 1],
                        [13, 2, 1],
                        [13, 3, 1],
                        [13, 4, 1],
                        [13, 5, 1],
                        [13, 6, 1],
                        [13, 7, 1],
                        [13, 8, 1],
                        [13, 9, 1],
                        [13, 10, 1],
                        [13, 11, 1],
                        [13, 12, 1],
                        [13, 13, 1],
                        [14, 0, 1],
                        [14, 1, 1],
                        [14, 2, 1],
                        [14, 3, 1],
                        [14, 4, 1],
                        [14, 5, 1],
                        [14, 6, 1],
                        [14, 7, 1],
                        [14, 8, 1],
                        [14, 9, 1],
                        [14, 10, 1],
                        [14, 11, 1],
                        [14, 12, 1],
                        [14, 13, 1],
                        [14, 14, 1],
                        [15, 0, 1],
                        [15, 1, 1],
                        [15, 2, 1],
                        [15, 3, 1],
                        [15, 4, 1],
                        [15, 5, 1],
                        [15, 6, 1],
                        [15, 7, 1],
                        [15, 8, 1],
                        [15, 9, 1],
                        [15, 10, 1],
                        [15, 11, 1],
                        [15, 12, 1],
                        [15, 13, 1],
                        [15, 14, 1],
                        [15, 15, 1],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 16, 1],
                        [16, 16, 2]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='float64')

    c = 0
    for Bindx in Bvec:
        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t4 = np.cos(phi)
            t3 = t4 ** 2
            t2 = t3 ** 2
            tfunc[..., c] = 0.3e1 / 0.16e2 * np.sqrt(0.7e1) * np.sqrt(0.3e1) * ((35 * t2) - (30 * t3) + 0.3e1 + (5 * t2 - 10 * t3 + 5) * np.sqrt(0.2e1) * np.cos((4 * phi2)))

        if Bindx == 2:
            t14 = np.cos(phi)
            t12 = t14 ** 2
            t16 = t12 ** 2
            t19 = -1 + 2 * t12 - t16
            t11 = t14 * t12
            t9 = t14 * t16
            t18 = t14 + t9 - 2 * t11
            tfunc[..., c] = 0.3e1 / 0.16e2 * np.sqrt(0.7e1) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.2e1) * ((-20 * t11 + 6 * t14 + 14 * t9) * np.sin(phi1) + (t18 + t19) * np.sin(phi1 - (4 * phi2)) + (t18 - t19) * np.sin(phi1 + (4 * phi2))) * ((1 + t14) ** (-0.1e1 / 0.2e1)) * ((1 - t14) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t25 = np.cos(phi)
            t27 = t25 ** 2
            t23 = t27 ** 2
            t31 = -1 + t23
            t30 = 2 * (-t27 + 1) * t25
            t26 = 2 * phi1
            tfunc[..., c] = -0.3e1 / 0.16e2 * np.sqrt(0.5e1) * np.sqrt(0.21e2) * ((14 * t23 - 16 * t27 + 2) * np.cos(t26) + (t30 + t31) * np.cos(-t26 + (4 * phi2)) + (-t30 + t31) * np.cos(t26 + (4 * phi2)))

        if Bindx == 4:
            t39 = np.cos(phi)
            t38 = t39 ** 2
            t42 = t38 ** 2
            t45 = 1 + 2 * t38 - 3 * t42
            t35 = t39 * t42
            t37 = t39 * t38
            t44 = t35 + 2 * t37 - 3 * t39
            t40 = 3 * phi1
            tfunc[..., c] = -0.3e1 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * (0.14e2 * (t35 - 2 * t37 + t39) * np.sin(t40) - (t44 + t45) * np.sin(-t40 + (4 * phi2)) + (t44 - t45) * np.sin(t40 + (4 * phi2))) * ((1 + t39) ** (-0.1e1 / 0.2e1)) * ((1 - t39) ** (-0.1e1 / 0.2e1))

        if Bindx == 5:
            t52 = np.cos(phi)
            t51 = t52 ** 2
            t56 = 4 * (-t51 - 1) * t52
            t49 = t51 ** 2
            t55 = 1 + t49 + 6 * t51
            tfunc[..., c] = 0.3e1 / 0.32e2 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * ((14 * t49 - 28 * t51 + 14) * np.cos((4 * phi1)) + (t55 + t56) * np.cos((4 * phi1 - 4 * phi2)) + (t55 - t56) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 6:
            t61 = np.cos(phi)
            t60 = t61 ** 2
            t63 = t60 ** 2
            t58 = t60 * t63
            tfunc[..., c] = (0.3003e4 / 0.64e2 * t58 - 0.4095e4 / 0.64e2 * t63 + 0.1365e4 / 0.64e2 * t60 - 0.65e2 / 0.64e2) * np.sqrt(0.2e1) + (-0.3003e4 / 0.32e2 * t58 + 0.6279e4 / 0.32e2 * t63 - 0.3549e4 / 0.32e2 * t60 + 0.273e3 / 0.32e2) * np.cos((4 * phi2))

        if Bindx == 7:
            t74 = np.cos(phi)
            t72 = t74 ** 2
            t76 = t72 ** 2
            t75 = t74 * t72
            t78 = t75 ** 2
            t81 = 2 - 26 * t72 + 46 * t76 - 22 * t78
            t67 = t74 * t78
            t69 = t74 * t76
            t80 = -33 * t67 + 79 * t69 + 13 * t74 - 59 * t75
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.14e2) * np.sqrt(0.3e1) * ((66 * t67 - 126 * t69 + 70 * t75 - 10 * t74) * np.sin(phi1) + (t80 - t81) * np.sin(phi1 - (4 * phi2)) + (t80 + t81) * np.sin(phi1 + (4 * phi2))) * ((1 + t74) ** (-0.1e1 / 0.2e1)) * ((1 - t74) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t90 = np.cos(phi)
            t89 = t90 ** 2
            t92 = t90 * t89
            t93 = t89 ** 2
            t97 = 64 * t92 + (-44 * t93 - 20) * t90
            t85 = t92 ** 2
            t96 = -1 + 33 * t85 + 11 * t89 - 43 * t93
            t91 = 2 * phi1
            tfunc[..., c] = 0.13e2 / 0.128e3 * np.sqrt(0.7e1) * np.sqrt(0.15e2) * ((-66 * t85 + 102 * t93 - 38 * t89 + 2) * np.cos(t91) + (t96 + t97) * np.cos(-t91 + (4 * phi2)) + (t96 - t97) * np.cos(t91 + (4 * phi2)))

        if Bindx == 9:
            t107 = np.cos(phi)
            t106 = t107 ** 2
            t110 = t106 ** 2
            t109 = t107 * t106
            t112 = t109 ** 2
            t115 = 2 - 18 * t106 + 38 * t110 - 22 * t112
            t101 = t107 * t112
            t103 = t107 * t110
            t114 = 11 * t101 - 9 * t103 + 5 * t107 - 7 * t109
            t108 = 3 * phi1
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.7e1) * np.sqrt(0.15e2) * ((-22 * t101 + 50 * t103 - 34 * t109 + 6 * t107) * np.sin(t108) - (t114 + t115) * np.sin(-t108 + (4 * phi2)) + (t114 - t115) * np.sin(t108 + (4 * phi2))) * ((1 + t107) ** (-0.1e1 / 0.2e1)) * ((1 - t107) ** (-0.1e1 / 0.2e1))

        if Bindx == 10:
            t124 = np.cos(phi)
            t123 = t124 ** 2
            t125 = t124 * t123
            t126 = t123 ** 2
            t130 = 80 * t125 + (-88 * t126 - 8) * t124
            t119 = t125 ** 2
            t129 = -13 - 33 * t119 + 65 * t123 - 35 * t126
            tfunc[..., c] = 0.13e2 / 0.128e3 * np.sqrt(0.14e2) * ((66 * t119 - 138 * t126 + 78 * t123 - 6) * np.cos((4 * phi1)) + (t129 - t130) * np.cos((4 * phi1 - 4 * phi2)) + (t129 + t130) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 11:
            t140 = np.cos(phi)
            t139 = t140 ** 2
            t143 = t139 ** 2
            t142 = t140 * t139
            t145 = t142 ** 2
            t148 = -2 + 2 * t139 + 10 * t143 - 10 * t145
            t134 = t140 * t145
            t136 = t140 * t143
            t147 = 3 * t134 + 7 * t136 + 5 * t140 - 15 * t142
            t141 = 5 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.11e2) * np.sqrt(0.7e1) * (0.6e1 * (-t134 + 3 * t136 - 3 * t142 + t140) * np.sin(t141) - (t147 + t148) * np.sin(-t141 + (4 * phi2)) + (t147 - t148) * np.sin(t141 + (4 * phi2))) * ((1 + t140) ** (-0.1e1 / 0.2e1)) * ((1 - t140) ** (-0.1e1 / 0.2e1))

        if Bindx == 12:
            t156 = np.cos(phi)
            t155 = t156 ** 2
            t158 = t155 ** 2
            t159 = t156 * t158
            t162 = 4 * t156 - 4 * t159
            t152 = t156 * t159
            t161 = -1 + t152 - 5 * t155 + 5 * t158
            t157 = 6 * phi1
            tfunc[..., c] = 0.13e2 / 0.128e3 * np.sqrt(0.7e1) * np.sqrt(0.33e2) * ((-2 * t152 + 6 * t158 - 6 * t155 + 2) * np.cos(t157) + (t161 + t162) * np.cos(-t157 + (4 * phi2)) + (t161 - t162) * np.cos(t157 + (4 * phi2)))

        if Bindx == 13:
            t169 = np.cos(phi)
            t168 = t169 ** 2
            t171 = t168 ** 2
            t166 = t168 * t171
            t165 = t171 ** 2
            tfunc[..., c] = 0.17e2 / 0.1024e4 * np.sqrt(0.3e1) * np.sqrt(0.11e2) * ((6435 * t165) - (12012 * t166) + (6930 * t171) - (1260 * t168) + 0.35e2 + ((1820 * t165 - 4368 * t166 + 3304 * t171 - 784 * t168 + 28) * np.cos((4 * phi2)) + (65 * t165 - 260 * t166 + 390 * t171 - 260 * t168 + 65) * np.cos((8 * phi2))) * np.sqrt(0.2e1))

        if Bindx == 14:
            t187 = np.cos(phi)
            t185 = t187 ** 2
            t189 = t185 ** 2
            t188 = t187 * t185
            t191 = t188 ** 2
            t193 = t189 ** 2
            t198 = -1 + 4 * t185 - 6 * t189 + 4 * t191 - t193
            t178 = t187 * t193
            t180 = t187 * t191
            t182 = t187 * t189
            t197 = t178 + t187 - 4 * t180 + 6 * t182 - 4 * t188
            t196 = -14 + 392 * t185 - 1652 * t189 + 2184 * t191 - 910 * t193
            t195 = 1820 * t178 - 5096 * t180 + 4928 * t182 + 196 * t187 - 1848 * t188
            tfunc[..., c] = 0.17e2 / 0.1536e4 * np.sqrt(0.3e1) * np.sqrt(0.11e2) * ((12870 * t178 - 30888 * t180 + 24948 * t182 - 7560 * t188 + 630 * t187) * np.sin(phi1) + (t195 + t196) * np.sin(phi1 - (4 * phi2)) + (t195 - t196) * np.sin(phi1 + (4 * phi2)) + 0.65e2 * (t197 + t198) * np.sin(phi1 - (8 * phi2)) + 0.65e2 * (t197 - t198) * np.sin(phi1 + (8 * phi2))) * ((1 + t187) ** (-0.1e1 / 0.2e1)) * ((1 - t187) ** (-0.1e1 / 0.2e1))

        if Bindx == 15:
            t211 = np.cos(phi)
            t210 = t211 ** 2
            t214 = t210 ** 2
            t204 = t214 ** 2
            t213 = t211 * t210
            t216 = t213 ** 2
            t222 = -13 + 13 * t204 + 26 * t210 - 26 * t216
            t205 = t211 * t216
            t207 = t211 * t214
            t221 = -26 * t205 + 78 * t207 + 26 * t211 - 78 * t213
            t220 = -364 * t205 + 676 * t207 + 44 * t211 - 356 * t213
            t219 = 4 + 364 * t204 - 104 * t210 + 464 * t214 - 728 * t216
            t212 = 2 * phi1
            tfunc[..., c] = -0.17e2 / 0.3072e4 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.7e1) * np.sqrt(0.11e2) * ((2574 * t204 - 5148 * t216 + 3168 * t214 - 612 * t210 + 18) * np.cos(t212) + (t221 + t222) * np.cos(-t212 + (8 * phi2)) + (-t221 + t222) * np.cos(t212 + (8 * phi2)) + (t219 + t220) * np.cos(-t212 + (4 * phi2)) + (t219 - t220) * np.cos(t212 + (4 * phi2)))

        if Bindx == 16:
            t236 = np.cos(phi)
            t235 = t236 ** 2
            t239 = t235 ** 2
            t238 = t236 * t235
            t241 = t238 ** 2
            t243 = t239 ** 2
            t248 = 13 - 78 * t239 + 104 * t241 - 39 * t243
            t228 = t236 * t243
            t232 = t236 * t239
            t247 = 13 * t228 - 78 * t232 - 39 * t236 + 104 * t238
            t246 = -10 + 240 * t235 - 932 * t239 + 1248 * t241 - 546 * t243
            t230 = t236 * t241
            t245 = 364 * t228 - 728 * t230 + 432 * t232 + 4 * t236 - 72 * t238
            t237 = 3 * phi1
            tfunc[..., c] = -0.17e2 / 0.512e3 * np.sqrt(0.5e1) * np.sqrt(0.7e1) * ((2574 * t228 - 6864 * t230 + 6204 * t232 - 2112 * t238 + 198 * t236) * np.sin(t237) - (t247 + t248) * np.sin(-t237 + (8 * phi2)) + (t247 - t248) * np.sin(t237 + (8 * phi2)) - (t245 + t246) * np.sin(-t237 + (4 * phi2)) + (t245 - t246) * np.sin(t237 + (4 * phi2))) * ((1 + t236) ** (-0.1e1 / 0.2e1)) * ((1 - t236) ** (-0.1e1 / 0.2e1))

        if Bindx == 17:
            t261 = np.cos(phi)
            t260 = t261 ** 2
            t263 = t261 * t260
            t266 = t263 ** 2
            t255 = t261 * t266
            t264 = t260 ** 2
            t257 = t261 * t264
            t272 = -260 * t255 + 260 * t257 - 260 * t261 + 260 * t263
            t271 = -3640 * t255 + 6136 * t257 + 456 * t261 - 3080 * t263
            t254 = t264 ** 2
            t270 = 65 + 65 * t254 + 260 * t260 - 650 * t264 + 260 * t266
            t269 = -36 + 1820 * t254 + 720 * t260 - 920 * t264 - 1456 * t266
            t262 = 4 * phi1
            tfunc[..., c] = 0.17e2 / 0.3072e4 * np.sqrt(0.3e1) * np.sqrt(0.7e1) * ((12870 * t254 - 30888 * t266 + 23364 * t264 - 5544 * t260 + 198) * np.cos(t262) + (t270 + t272) * np.cos(-t262 + (8 * phi2)) + (t270 - t272) * np.cos(t262 + (8 * phi2)) + (t269 + t271) * np.cos((4 * phi1 - 4 * phi2)) + (t269 - t271) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 18:
            t286 = np.cos(phi)
            t285 = t286 ** 2
            t289 = t285 ** 2
            t293 = t289 ** 2
            t298 = -5 - 40 * t285 + 70 * t289 - 25 * t293
            t278 = t286 * t293
            t288 = t286 * t285
            t291 = t288 ** 2
            t280 = t286 * t291
            t282 = t286 * t289
            t297 = 5 * t278 + 40 * t280 - 70 * t282 + 25 * t286
            t296 = -6 + 96 * t285 - 460 * t289 + 720 * t291 - 350 * t293
            t295 = 140 * t278 - 56 * t280 - 304 * t282 - 60 * t286 + 280 * t288
            t287 = 5 * phi1
            tfunc[..., c] = 0.17e2 / 0.1536e4 * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * ((990 * t278 - 3168 * t280 + 3564 * t282 - 1584 * t288 + 198 * t286) * np.sin(t287) - (t297 + t298) * np.sin(-t287 + (8 * phi2)) + (t297 - t298) * np.sin(t287 + (8 * phi2)) - (t295 + t296) * np.sin(-t287 + (4 * phi2)) + (t295 - t296) * np.sin(t287 + (4 * phi2))) * ((1 + t286) ** (-0.1e1 / 0.2e1)) * ((1 - t286) ** (-0.1e1 / 0.2e1))

        if Bindx == 19:
            t311 = np.cos(phi)
            t310 = t311 ** 2
            t314 = t310 ** 2
            t304 = t314 ** 2
            t313 = t311 * t310
            t316 = t313 ** 2
            t322 = -5 + 5 * t304 - 70 * t310 + 70 * t316
            t305 = t311 * t316
            t307 = t311 * t314
            t321 = -30 * t305 - 70 * t307 + 30 * t311 + 70 * t313
            t320 = -420 * t305 + 588 * t307 - 28 * t311 - 140 * t313
            t319 = -28 + 140 * t304 + 280 * t310 - 560 * t314 + 168 * t316
            t312 = 6 * phi1
            tfunc[..., c] = -0.17e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * ((990 * t304 - 3036 * t316 + 3168 * t314 - 1188 * t310 + 66) * np.cos(t312) + (t321 + t322) * np.cos(-t312 + (8 * phi2)) + (-t321 + t322) * np.cos(t312 + (8 * phi2)) + (t319 + t320) * np.cos(-t312 + (4 * phi2)) + (t319 - t320) * np.cos(t312 + (4 * phi2)))

        if Bindx == 20:
            t336 = np.cos(phi)
            t335 = t336 ** 2
            t339 = t335 ** 2
            t338 = t336 * t335
            t341 = t338 ** 2
            t343 = t339 ** 2
            t348 = 1 + 20 * t335 + 14 * t339 - 28 * t341 - 7 * t343
            t347 = 14 - 56 * t335 - 28 * t339 + 168 * t341 - 98 * t343
            t328 = t336 * t343
            t330 = t336 * t341
            t332 = t336 * t339
            t346 = t328 + 20 * t330 + 14 * t332 - 7 * t336 - 28 * t338
            t345 = 28 * t328 + 56 * t330 - 224 * t332 - 28 * t336 + 168 * t338
            t337 = 7 * phi1
            tfunc[..., c] = -0.17e2 / 0.1536e4 * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * (0.198e3 * (t328 - 4 * t330 + 6 * t332 - 4 * t338 + t336) * np.sin(t337) - (t346 + t348) * np.sin(-t337 + (8 * phi2)) + (t346 - t348) * np.sin(t337 + (8 * phi2)) - (t345 + t347) * np.sin(-t337 + (4 * phi2)) + (t345 - t347) * np.sin(t337 + (4 * phi2))) * ((1 + t336) ** (-0.1e1 / 0.2e1)) * ((1 - t336) ** (-0.1e1 / 0.2e1))

        if Bindx == 21:
            t361 = np.cos(phi)
            t360 = t361 ** 2
            t363 = t361 * t360
            t366 = t363 ** 2
            t373 = (-t366 - 1) * t361
            t364 = t360 ** 2
            t357 = t361 * t364
            t372 = -56 * t357 - 56 * t363 + 8 * t373
            t354 = t364 ** 2
            t371 = 1 + t354 + 28 * t360 + 70 * t364 + 28 * t366
            t370 = 112 * t357 + 112 * t363 + 112 * t373
            t369 = 28 + 28 * t354 + 112 * t360 - 280 * t364 + 112 * t366
            t362 = 8 * phi1
            tfunc[..., c] = 0.17e2 / 0.6144e4 * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * ((198 * t354 - 792 * t366 + 1188 * t364 - 792 * t360 + 198) * np.cos(t362) + (t371 + t372) * np.cos((8 * phi1 - 8 * phi2)) + (t371 - t372) * np.cos((8 * phi1 + 8 * phi2)) + (t369 + t370) * np.cos(-t362 + (4 * phi2)) + (t369 - t370) * np.cos(t362 + (4 * phi2)))

        if Bindx == 22:
            tfunc[..., c] = 0

        if Bindx == 23:
            t387 = np.cos(phi)
            t386 = t387 ** 2
            t389 = t386 ** 2
            t393 = t389 ** 2
            t379 = t387 * t393
            t388 = t387 * t386
            t391 = t388 ** 2
            t381 = t387 * t391
            t390 = t387 * t389
            t399 = 8 * t379 - 32 * t381 + 8 * t387 - 32 * t388 + 48 * t390
            t398 = -136 * t379 + 352 * t381 - 8 * t387 + 96 * t388 - 304 * t390
            t378 = t390 ** 2
            t397 = 1 - 9 * t378 - 13 * t386 + 42 * t389 - 58 * t391 + 37 * t393
            t396 = 2 - 306 * t378 - 74 * t386 + 452 * t389 - 996 * t391 + 922 * t393
            tfunc[..., c] = -0.19e2 / 0.3072e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.3e1) * np.sqrt(0.143e3) * np.sqrt(0.7e1) * ((t397 + t399) * np.sin((phi1 - 8 * phi2)) + (-t397 + t399) * np.sin((phi1 + 8 * phi2)) + (-t396 + t398) * np.sin((phi1 - 4 * phi2)) + (t396 + t398) * np.sin((phi1 + 4 * phi2))) * ((1 + t387) ** (-0.1e1 / 0.2e1)) * ((1 - t387) ** (-0.1e1 / 0.2e1))

        if Bindx == 24:
            t412 = np.cos(phi)
            t411 = t412 ** 2
            t415 = t411 ** 2
            t414 = t412 * t411
            t417 = t414 ** 2
            t419 = t415 ** 2
            t424 = -2 + 22 * t411 - 54 * t415 + 50 * t417 - 16 * t419
            t404 = t412 * t419
            t406 = t412 * t417
            t408 = t412 * t415
            t423 = -9 * t404 + 22 * t406 - 12 * t408 + 5 * t412 - 6 * t414
            t422 = 2 - 70 * t411 + 358 * t415 - 562 * t417 + 272 * t419
            t421 = -306 * t404 + 700 * t406 - 544 * t408 - 14 * t412 + 164 * t414
            t413 = 2 * phi1
            tfunc[..., c] = -0.19e2 / 0.768e3 * np.sqrt(0.17e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * ((-t423 + t424) * np.cos((-t413 + 8 * phi2)) + (t421 + t422) * np.cos((-t413 + 4 * phi2)) + (-t421 + t422) * np.cos((t413 + 4 * phi2)) + (t423 + t424) * np.cos((t413 + 8 * phi2)))

        if Bindx == 25:
            t438 = np.cos(phi)
            t437 = t438 ** 2
            t441 = t437 ** 2
            t445 = t441 ** 2
            t430 = t438 * t445
            t440 = t438 * t437
            t443 = t440 ** 2
            t432 = t438 * t443
            t442 = t438 * t441
            t451 = -56 * t430 + 168 * t432 + 56 * t440 - 168 * t442
            t429 = t442 ** 2
            t450 = -7 - 21 * t429 + 63 * t437 - 126 * t441 + 70 * t443 + 21 * t445
            t449 = 952 * t430 - 2408 * t432 + 64 * t438 - 696 * t440 + 2088 * t442
            t448 = 2 - 714 * t429 - 66 * t437 + 484 * t441 - 1428 * t443 + 1722 * t445
            t439 = 3 * phi1
            tfunc[..., c] = -0.19e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.13e2) * (-(-t450 + t451) * np.sin((-t439 + 8 * phi2)) + (t450 + t451) * np.sin((t439 + 8 * phi2)) - (t448 + t449) * np.sin((-t439 + 4 * phi2)) + (-t448 + t449) * np.sin((t439 + 4 * phi2))) * ((1 + t438) ** (-0.1e1 / 0.2e1)) * ((1 - t438) ** (-0.1e1 / 0.2e1))

        if Bindx == 26:
            t464 = np.cos(phi)
            t463 = t464 ** 2
            t467 = t463 ** 2
            t466 = t464 * t463
            t469 = t466 ** 2
            t471 = t467 ** 2
            t476 = -28 + 140 * t463 + 28 * t467 - 364 * t469 + 224 * t471
            t456 = t464 * t471
            t458 = t464 * t469
            t460 = t464 * t467
            t475 = -63 * t456 - 140 * t458 + 518 * t460 + 49 * t464 - 364 * t466
            t474 = -36 + 1044 * t463 - 4796 * t467 + 7532 * t469 - 3808 * t471
            t473 = -2142 * t456 + 2968 * t458 - 532 * t460 + 66 * t464 - 424 * t466
            t465 = 4 * phi1
            tfunc[..., c] = -0.19e2 / 0.1536e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.3e1) * ((t475 + t476) * np.cos((-t465 + 8 * phi2)) + (-t475 + t476) * np.cos((t465 + 8 * phi2)) + (-t473 + t474) * np.cos((4 * phi1 - 4 * phi2)) + (t473 + t474) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 27:
            t490 = np.cos(phi)
            t489 = t490 ** 2
            t493 = t489 ** 2
            t497 = t493 ** 2
            t482 = t490 * t497
            t492 = t490 * t489
            t495 = t492 ** 2
            t484 = t490 * t495
            t494 = t490 * t493
            t503 = 40 * t482 - 40 * t484 - 16 * t490 + 72 * t492 - 56 * t494
            t481 = t494 ** 2
            t502 = 5 - 9 * t481 - 5 * t489 - 70 * t493 + 126 * t495 - 47 * t497
            t501 = -680 * t482 + 1640 * t484 - 48 * t490 + 440 * t492 - 1352 * t494
            t500 = -6 - 306 * t481 + 150 * t489 - 460 * t493 + 252 * t495 + 370 * t497
            t491 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.1536e4 * np.sqrt(0.17e2) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.7e1) * (-(t502 + t503) * np.sin((-t491 + 8 * phi2)) - (-t500 + t501) * np.sin((-t491 + 4 * phi2)) + (t500 + t501) * np.sin((t491 + 4 * phi2)) + (-t502 + t503) * np.sin((t491 + 8 * phi2))) * ((1 + t490) ** (-0.1e1 / 0.2e1)) * ((1 - t490) ** (-0.1e1 / 0.2e1))

        if Bindx == 28:
            t516 = np.cos(phi)
            t515 = t516 ** 2
            t519 = t515 ** 2
            t518 = t516 * t515
            t521 = t518 ** 2
            t523 = t519 ** 2
            t528 = -2 - 10 * t515 + 42 * t519 - 14 * t521 - 16 * t523
            t508 = t516 * t523
            t510 = t516 * t521
            t512 = t516 * t519
            t527 = -3 * t508 - 30 * t510 + 28 * t512 - 9 * t516 + 14 * t518
            t526 = 2 - 38 * t515 + 262 * t519 - 498 * t521 + 272 * t523
            t525 = -102 * t508 - 12 * t510 + 288 * t512 + 38 * t516 - 212 * t518
            t517 = 6 * phi1
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.17e2) * np.sqrt(0.7e1) * ((-t527 + t528) * np.cos((-t517 + 8 * phi2)) + (t525 + t526) * np.cos((-t517 + 4 * phi2)) + (-t525 + t526) * np.cos((t517 + 4 * phi2)) + (t527 + t528) * np.cos((t517 + 8 * phi2)))

        if Bindx == 29:
            t542 = np.cos(phi)
            t541 = t542 ** 2
            t545 = t541 ** 2
            t549 = t545 ** 2
            t534 = t542 * t549
            t544 = t542 * t541
            t547 = t544 ** 2
            t536 = t542 * t547
            t546 = t542 * t545
            t555 = -56 * t534 - 112 * t536 - 40 * t542 - 16 * t544 + 224 * t546
            t554 = 952 * t534 - 2128 * t536 - 88 * t542 - 48 * t544 + 1312 * t546
            t533 = t546 ** 2
            t553 = -7 - 9 * t533 - 77 * t541 + 154 * t545 + 70 * t547 - 131 * t549
            t552 = -46 - 306 * t533 + 598 * t541 - 1852 * t545 + 1788 * t547 - 182 * t549
            t543 = 7 * phi1
            tfunc[..., c] = -0.19e2 / 0.3072e4 * np.sqrt(0.17e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * (-(-t553 + t555) * np.sin((-t543 + 8 * phi2)) - (t552 + t554) * np.sin((-t543 + 4 * phi2)) + (-t552 + t554) * np.sin((t543 + 4 * phi2)) + (t553 + t555) * np.sin((t543 + 8 * phi2))) * ((1 + t542) ** (-0.1e1 / 0.2e1)) * ((1 - t542) ** (-0.1e1 / 0.2e1))

        if Bindx == 30:
            t568 = np.cos(phi)
            t567 = t568 ** 2
            t571 = t567 ** 2
            t570 = t568 * t567
            t573 = t570 ** 2
            t575 = t571 ** 2
            t580 = 8 + 152 * t567 + 56 * t571 - 280 * t573 - 64 * t575
            t560 = t568 * t575
            t562 = t568 * t573
            t564 = t568 * t571
            t579 = -9 * t560 - 188 * t562 - 182 * t564 + 55 * t568 + 196 * t570
            t578 = -136 + 680 * t567 + 136 * t571 - 1768 * t573 + 1088 * t575
            t577 = -306 * t560 - 680 * t562 + 2516 * t564 + 238 * t568 - 1768 * t570
            t569 = 8 * phi1
            tfunc[..., c] = 0.19e2 / 0.3072e4 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * np.sqrt(0.3e1) * ((t577 + t578) * np.cos((-t569 + 4 * phi2)) + (-t577 + t578) * np.cos((t569 + 4 * phi2)) + (-t579 + t580) * np.cos((8 * phi1 - 8 * phi2)) + (t579 + t580) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 31:
            t593 = np.cos(phi)
            t592 = t593 ** 2
            t596 = t592 ** 2
            t599 = t596 ** 2
            t600 = t593 * t599
            t606 = t593 - t600
            t595 = t593 * t592
            t597 = t595 ** 2
            t588 = t593 * t597
            t605 = -48 * t588 + 48 * t595 + 8 * t606
            t604 = -272 * t588 + 272 * t595 - 136 * t606
            t585 = t593 * t600
            t603 = 1 - t585 + 27 * t592 + 42 * t596 - 42 * t597 - 27 * t599
            t602 = 34 - 34 * t585 + 102 * t592 - 476 * t596 + 476 * t597 - 102 * t599
            t594 = 9 * phi1
            tfunc[..., c] = 0.19e2 / 0.1024e4 * np.sqrt(0.3e1) * np.sqrt(0.7e1) * (-(-t603 + t605) * np.sin((-t594 + 8 * phi2)) + (t603 + t605) * np.sin((t594 + 8 * phi2)) - (t602 + t604) * np.sin((-t594 + 4 * phi2)) + (-t602 + t604) * np.sin((t594 + 4 * phi2))) * ((1 + t593) ** (-0.1e1 / 0.2e1)) * ((1 - t593) ** (-0.1e1 / 0.2e1))

        if Bindx == 32:
            t614 = np.cos(phi)
            t613 = t614 ** 2
            t616 = t613 ** 2
            t618 = t616 ** 2
            t615 = np.sqrt(0.2e1)
            t611 = t613 * t616
            t609 = t613 * t618
            tfunc[..., c] = -0.7e1 / 0.4096e4 * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.13e2) * t615 * (-(46189 * t609) + (109395 * t618) - (90090 * t611) + (30030 * t616) - (3465 * t613) + 0.63e2 + ((42636 * t609 - 118932 * t618 + 115896 * t611 - 45672 * t616 + 6204 * t613 - 132) * np.cos((4 * phi2)) + (3553 * t609 - 14399 * t618 + 22066 * t611 - 15334 * t616 + 4301 * t613 - 187) * np.cos((8 * phi2))) * t615)

        if Bindx == 33:
            t635 = np.cos(phi)
            t633 = t635 ** 2
            t637 = t633 ** 2
            t636 = t635 * t633
            t639 = t636 ** 2
            t641 = t637 ** 2
            t638 = t635 * t637
            t643 = t638 ** 2
            t648 = 68 - 1564 * t633 + 5576 * t637 - 8024 * t639 + 5236 * t641 - 1292 * t643
            t647 = 24 - 1128 * t633 + 8304 * t637 - 21072 * t639 + 21624 * t641 - 7752 * t643
            t624 = t635 * t643
            t626 = t635 * t641
            t628 = t635 * t639
            t646 = -1615 * t624 + 6851 * t626 - 11254 * t628 + 391 * t635 - 3179 * t636 + 8806 * t638
            t645 = -19380 * t624 + 62628 * t626 - 74856 * t628 + 564 * t635 - 8868 * t636 + 39912 * t638
            tfunc[..., c] = 0.7e1 / 0.4096e4 * np.sqrt(0.3e1) * np.sqrt(0.13e2) * np.sqrt(0.2e1) * np.sqrt(0.11e2) * ((41990 * t624 - 121550 * t626 + 128700 * t628 - 60060 * t638 + 11550 * t636 - 630 * t635) * np.sin(phi1) + (t646 - t648) * np.sin(phi1 - (8 * phi2)) + (t645 - t647) * np.sin(phi1 - (4 * phi2)) + (t645 + t647) * np.sin(phi1 + (4 * phi2)) + (t646 + t648) * np.sin(phi1 + (8 * phi2))) * ((1 + t635) ** (-0.1e1 / 0.2e1)) * ((1 - t635) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t663 = np.cos(phi)
            t662 = t663 ** 2
            t666 = t662 ** 2
            t670 = t666 ** 2
            t655 = t663 * t670
            t665 = t663 * t662
            t668 = t665 ** 2
            t657 = t663 * t668
            t667 = t663 * t666
            t676 = -2584 * t655 + 8432 * t657 - 680 * t663 + 4624 * t665 - 9792 * t667
            t675 = -15504 * t655 + 35360 * t657 - 496 * t663 + 7136 * t665 - 26496 * t667
            t654 = t667 ** 2
            t674 = 17 + 1615 * t654 - 357 * t662 - 646 * t666 + 3910 * t668 - 4539 * t670
            t673 = -52 + 19380 * t654 + 2340 * t662 - 17128 * t666 + 45032 * t668 - 49572 * t670
            t664 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * np.sqrt(0.11e2) * ((-41990 * t654 + 103870 * t670 - 89180 * t668 + 30940 * t666 - 3710 * t662 + 70) * np.cos(t664) + (t674 + t676) * np.cos(-t664 + (8 * phi2)) + (t673 + t675) * np.cos(-t664 + (4 * phi2)) + (t673 - t675) * np.cos(t664 + (4 * phi2)) + (t674 - t676) * np.cos(t664 + (8 * phi2)))

        if Bindx == 35:
            t692 = np.cos(phi)
            t691 = t692 ** 2
            t695 = t691 ** 2
            t694 = t692 * t691
            t697 = t694 ** 2
            t699 = t695 ** 2
            t696 = t692 * t695
            t701 = t696 ** 2
            t706 = 68 - 1292 * t691 + 7344 * t695 - 14960 * t697 + 12716 * t699 - 3876 * t701
            t705 = 88 - 3784 * t691 + 26016 * t695 - 63392 * t697 + 64328 * t699 - 23256 * t701
            t682 = t692 * t701
            t684 = t692 * t699
            t686 = t692 * t697
            t704 = 1615 * t682 - 2839 * t684 - 1938 * t686 + 765 * t692 - 4301 * t694 + 6698 * t696
            t703 = 19380 * t682 - 53652 * t684 + 54408 * t686 - 324 * t692 + 4996 * t694 - 24808 * t696
            t693 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.2048e4 * np.sqrt(0.11e2) * ((-41990 * t682 + 130390 * t684 - 148460 * t686 + 74620 * t696 - 15470 * t694 + 910 * t692) * np.sin(t693) - (t704 + t706) * np.sin(-t693 + (8 * phi2)) - (t703 + t705) * np.sin(-t693 + (4 * phi2)) + (t703 - t705) * np.sin(t693 + (4 * phi2)) + (t704 - t706) * np.sin(t693 + (8 * phi2))) * ((1 + t692) ** (-0.1e1 / 0.2e1)) * ((1 - t692) ** (-0.1e1 / 0.2e1))

        if Bindx == 36:
            t721 = np.cos(phi)
            t720 = t721 ** 2
            t724 = t720 ** 2
            t728 = t724 ** 2
            t713 = t721 * t728
            t723 = t721 * t720
            t726 = t723 ** 2
            t715 = t721 * t726
            t725 = t721 * t724
            t734 = -5168 * t713 + 10880 * t715 + 544 * t721 - 544 * t723 - 5712 * t725
            t733 = -31008 * t713 + 69632 * t715 - 1216 * t721 + 15424 * t723 - 53088 * t725
            t712 = t725 ** 2
            t732 = 4 + 19380 * t712 - 156 * t720 - 2296 * t724 + 19432 * t726 - 36108 * t728
            t731 = 187 + 1615 * t712 - 2805 * t720 + 9758 * t724 - 10234 * t726 + 1479 * t728
            t722 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * ((-41990 * t712 + 117130 * t728 - 114140 * t726 + 44980 * t724 - 6110 * t720 + 130) * np.cos(t722) + (t731 + t734) * np.cos(-t722 + (8 * phi2)) + (t731 - t734) * np.cos(t722 + (8 * phi2)) + (t732 + t733) * np.cos((4 * phi1 - 4 * phi2)) + (t732 - t733) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 37:
            t750 = np.cos(phi)
            t749 = t750 ** 2
            t753 = t749 ** 2
            t757 = t753 ** 2
            t754 = t750 * t753
            t759 = t754 ** 2
            t764 = -68 + 748 * t749 - 1632 * t753 + 2244 * t757 - 1292 * t759
            t740 = t750 * t759
            t742 = t750 * t757
            t752 = t750 * t749
            t755 = t752 ** 2
            t744 = t750 * t755
            t763 = 323 * t740 + 1037 * t742 - 3978 * t744 + 17 * t750 - 969 * t752 + 3570 * t754
            t762 = 40 - 1400 * t749 + 8640 * t753 - 20608 * t755 + 21080 * t757 - 7752 * t759
            t761 = 3876 * t740 - 7140 * t742 + 1640 * t744 + 172 * t750 - 1740 * t752 + 3192 * t754
            t751 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.2048e4 * np.sqrt(0.5e1) * np.sqrt(0.11e2) * ((-8398 * t740 + 29614 * t742 - 38844 * t744 + 22828 * t754 - 5590 * t752 + 390 * t750) * np.sin(t751) - (t763 + t764) * np.sin(-t751 + (8 * phi2)) + (t763 - t764) * np.sin(t751 + (8 * phi2)) - (t761 + t762) * np.sin(-t751 + (4 * phi2)) + (t761 - t762) * np.sin(t751 + (4 * phi2))) * ((1 + t750) ** (-0.1e1 / 0.2e1)) * ((1 - t750) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t779 = np.cos(phi)
            t778 = t779 ** 2
            t782 = t778 ** 2
            t786 = t782 ** 2
            t771 = t779 * t786
            t781 = t779 * t778
            t784 = t781 ** 2
            t773 = t779 * t784
            t783 = t779 * t782
            t792 = -7752 * t771 + 1360 * t773 + 1224 * t779 - 10064 * t781 + 15232 * t783
            t770 = t783 ** 2
            t791 = -527 + 1615 * t770 + 2635 * t778 + 4522 * t782 - 19754 * t784 + 11509 * t786
            t790 = 332 + 19380 * t770 - 9628 * t778 + 35672 * t782 - 32088 * t784 - 13668 * t786
            t789 = 46512 * t771 - 101728 * t773 + 1872 * t779 - 20128 * t781 + 73472 * t783
            t780 = 6 * phi1
            tfunc[..., c] = 0.21e2 / 0.8192e4 * np.sqrt(0.11e2) * ((-41990 * t770 + 139230 * t786 - 166140 * t784 + 82940 * t782 - 14430 * t778 + 390) * np.cos(t780) + (t791 + t792) * np.cos(-t780 + (8 * phi2)) + (-t789 + t790) * np.cos(-t780 + (4 * phi2)) + (t789 + t790) * np.cos(t780 + (4 * phi2)) + (t791 - t792) * np.cos(t780 + (8 * phi2)))

        if Bindx == 39:
            t808 = np.cos(phi)
            t807 = t808 ** 2
            t811 = t807 ** 2
            t810 = t808 * t807
            t813 = t810 ** 2
            t815 = t811 ** 2
            t812 = t808 * t811
            t817 = t812 ** 2
            t822 = 44 + 44 * t807 - 1208 * t811 + 1960 * t813 - 308 * t815 - 532 * t817
            t821 = 8 - 184 * t807 + 2416 * t811 - 7504 * t813 + 8456 * t815 - 3192 * t817
            t798 = t808 * t817
            t800 = t808 * t815
            t802 = t808 * t813
            t820 = 95 * t798 + 1013 * t800 - 1514 * t802 - 175 * t808 + 763 * t810 - 182 * t812
            t819 = 1140 * t798 - 516 * t800 - 4376 * t802 + 364 * t808 - 2716 * t810 + 6104 * t812
            t809 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.4096e4 * np.sqrt(0.11e2) * np.sqrt(0.17e2) * ((-2470 * t798 + 10270 * t800 - 16380 * t802 + 12220 * t812 - 4030 * t810 + 390 * t808) * np.sin(t809) - (t820 + t822) * np.sin(-t809 + (8 * phi2)) - (t819 + t821) * np.sin(-t809 + (4 * phi2)) + (t819 - t821) * np.sin(t809 + (4 * phi2)) + (t820 - t822) * np.sin(t809 + (8 * phi2))) * ((1 + t808) ** (-0.1e1 / 0.2e1)) * ((1 - t808) ** (-0.1e1 / 0.2e1))

        if Bindx == 40:
            t837 = np.cos(phi)
            t836 = t837 ** 2
            t840 = t836 ** 2
            t844 = t840 ** 2
            t829 = t837 * t844
            t839 = t837 * t836
            t842 = t839 ** 2
            t831 = t837 * t842
            t841 = t837 * t840
            t850 = -608 * t829 - 1536 * t831 - 320 * t837 + 192 * t839 + 2016 * t841
            t849 = -3648 * t829 + 7680 * t831 + 384 * t837 - 384 * t839 - 4032 * t841
            t828 = t841 ** 2
            t848 = -59 - 95 * t828 - 531 * t836 + 1722 * t840 + 210 * t842 - 1503 * t844
            t847 = -132 - 1140 * t828 + 1980 * t836 - 6888 * t840 + 7224 * t842 - 1044 * t844
            t838 = 8 * phi1
            tfunc[..., c] = 0.7e1 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.17e2) * np.sqrt(0.11e2) * ((2470 * t828 - 10010 * t844 + 15340 * t842 - 10660 * t840 + 2990 * t836 - 130) * np.cos(t838) + (t847 - t849) * np.cos(-t838 + (4 * phi2)) + (t847 + t849) * np.cos(t838 + (4 * phi2)) + (t848 - t850) * np.cos((8 * phi1 - 8 * phi2)) + (t848 + t850) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 41:
            t866 = np.cos(phi)
            t865 = t866 ** 2
            t869 = t865 ** 2
            t868 = t866 * t865
            t871 = t868 ** 2
            t873 = t869 ** 2
            t870 = t866 * t869
            t875 = t870 ** 2
            t880 = -4 - 68 * t865 + 72 * t869 + 168 * t871 - 132 * t873 - 36 * t875
            t856 = t866 * t875
            t858 = t866 * t873
            t860 = t866 * t871
            t879 = 5 * t856 + 103 * t858 + 18 * t860 + 27 * t866 + 57 * t868 - 210 * t870
            t878 = -24 + 168 * t865 - 144 * t869 - 336 * t871 + 552 * t873 - 216 * t875
            t877 = 60 * t856 + 84 * t858 - 648 * t860 + 36 * t866 - 372 * t868 + 840 * t870
            t867 = 9 * phi1
            tfunc[..., c] = -0.7e1 / 0.4096e4 * np.sqrt(0.3e1) * np.sqrt(0.11e2) * np.sqrt(0.17e2) * np.sqrt(0.19e2) * (0.130e3 * (-t856 + 5 * t858 - 10 * t860 + 10 * t870 - 5 * t868 + t866) * np.sin(t867) - (t879 + t880) * np.sin(-t867 + (8 * phi2)) - (t877 + t878) * np.sin(-t867 + (4 * phi2)) + (t877 - t878) * np.sin(t867 + (4 * phi2)) + (t879 - t880) * np.sin(t867 + (8 * phi2))) * ((1 + t866) ** (-0.1e1 / 0.2e1)) * ((1 - t866) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t894 = np.cos(phi)
            t893 = t894 ** 2
            t897 = t893 ** 2
            t900 = t897 ** 2
            t901 = t894 * t900
            t907 = t894 - t901
            t896 = t894 * t893
            t898 = t896 ** 2
            t889 = t894 * t898
            t906 = -48 * t889 + 48 * t896 + 8 * t907
            t905 = 96 * t889 - 96 * t896 + 48 * t907
            t886 = t894 * t901
            t904 = 1 - t886 + 27 * t893 + 42 * t897 - 42 * t898 - 27 * t900
            t903 = 12 - 12 * t886 + 36 * t893 - 168 * t897 + 168 * t898 - 36 * t900
            t895 = 10 * phi1
            tfunc[..., c] = -0.7e1 / 0.8192e4 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.17e2) * np.sqrt(0.11e2) * np.sqrt(0.19e2) * ((26 * t886 - 130 * t900 + 260 * t898 - 260 * t897 + 130 * t893 - 26) * np.cos(t895) + (t904 - t906) * np.cos(-t895 + (8 * phi2)) + (t904 + t906) * np.cos(t895 + (8 * phi2)) + (t903 - t905) * np.cos(-t895 + (4 * phi2)) + (t903 + t905) * np.cos(t895 + (4 * phi2)))

        if Bindx == 43:
            t916 = np.cos(phi)
            t915 = t916 ** 2
            t918 = t915 ** 2
            t920 = t918 ** 2
            t919 = t915 * t918
            t911 = t915 * t920
            t910 = t919 ** 2
            tfunc[..., c] = -0.15e2 / 0.167936e6 * np.sqrt(0.11e2) * np.sqrt(0.41e2) * (-(2028117 * t910) + (5819814 * t911) - (6235515 * t920) + (3063060 * t919) - (675675 * t918) + (54054 * t915) - 0.693e3 + ((2704156 * t910 - 8700328 * t911 + 10463908 * t920 - 5767216 * t919 + 1425060 * t918 - 127400 * t915 + 1820) * np.cos((4 * phi2)) + (-676039 * t910 + 2880514 * t911 - 4765865 * t920 + 3779100 * t919 - 1406665 * t918 + 193154 * t915 - 4199) * np.cos((8 * phi2))) * np.sqrt(0.2e1))

        if Bindx == 44:
            t932 = np.cos(phi)
            t931 = t932 ** 2
            t934 = t931 ** 2
            t936 = t934 ** 2
            t935 = t931 * t934
            t933 = np.sqrt(0.2e1)
            t927 = t931 * t936
            t926 = t935 ** 2
            tfunc[..., c] = 0.5e1 / 0.8060928e7 * t933 * np.sqrt(0.3e1) * np.sqrt(0.41e2) * np.sqrt(0.19e2) * np.sqrt(0.7e1) * np.sqrt(0.13e2) * np.sqrt(0.17e2) * np.sqrt(0.23e2) * ((1352078 * t926) - (3879876 * t927) + (4157010 * t936) - (2042040 * t935) + (450450 * t934) - (36036 * t931) + 0.462e3 + ((735471 * t926 - 2366298 * t927 + 2845953 * t936 - 1568556 * t935 + 387585 * t934 - 34650 * t931 + 495) * np.cos((4 * phi2)) + (10626 * t926 - 45276 * t927 + 74910 * t936 - 59400 * t935 + 22110 * t934 - 3036 * t931 + 66) * np.cos((8 * phi2)) + (1025 * t926 - 6150 * t927 + 15375 * t936 - 20500 * t935 + 15375 * t934 - 6150 * t931 + 1025) * np.cos((12 * phi2))) * t933)

        if Bindx == 45:
            t956 = np.cos(phi)
            t954 = t956 ** 2
            t958 = t954 ** 2
            t957 = t956 * t954
            t960 = t957 ** 2
            t962 = t958 ** 2
            t959 = t956 * t958
            t964 = t959 ** 2
            t966 = t960 ** 2
            t971 = 9800 * t954 - 109620 * t958 + 443632 * t960 - 804916 * t962 + 669256 * t964 - 208012 * t966 - 140
            t970 = 29716 * t954 - 216410 * t958 + 581400 * t960 - 733210 * t962 + 443156 * t964 - 104006 * t966 - 646
            t943 = t956 * t966
            t945 = t956 * t964
            t947 = t956 * t962
            t949 = t956 * t960
            t969 = 156009 * t943 - 709954 * t945 + 1287155 * t947 - 1169260 * t949 + 7429 * t956 - 115634 * t957 + 544255 * t959
            t968 = -624036 * t943 + 2297176 * t945 - 3282972 * t947 + 2275280 * t949 - 4900 * t956 + 114520 * t957 - 775068 * t959
            tfunc[..., c] = 0.5e1 / 0.167936e6 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * np.sqrt(0.41e2) * np.sqrt(0.3e1) * np.sqrt(0.13e2) * ((-108108 * t957 + 936054 * t943 - 3174444 * t945 + 4157010 * t947 - 2625480 * t949 + 810810 * t959 + 4158 * t956) * np.sin(phi1) + (t969 + t970) * np.sin(phi1 - (8 * phi2)) + (t968 - t971) * np.sin(phi1 - (4 * phi2)) + (t968 + t971) * np.sin(phi1 + (4 * phi2)) + (t969 - t970) * np.sin(phi1 + (8 * phi2))) * ((1 + t956) ** (-0.1e1 / 0.2e1)) * ((1 - t956) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t991 = np.cos(phi)
            t989 = t991 ** 2
            t992 = t991 * t989
            t995 = t992 ** 2
            t1001 = t995 ** 2
            t993 = t989 ** 2
            t997 = t993 ** 2
            t994 = t991 * t993
            t999 = t994 ** 2
            t1008 = -1 - t1001 + 6 * t989 - 15 * t993 + 20 * t995 - 15 * t997 + 6 * t999
            t978 = t991 * t1001
            t980 = t991 * t999
            t982 = t991 * t997
            t984 = t991 * t995
            t1007 = t978 + t991 - 6 * t980 + 15 * t982 - 20 * t984 - 6 * t992 + 15 * t994
            t1006 = -44 - 7084 * t1001 + 2024 * t989 - 14740 * t993 + 39600 * t995 - 49940 * t997 + 30184 * t999
            t1005 = 10626 * t978 - 48356 * t980 + 87670 * t982 - 79640 * t984 + 506 * t991 - 7876 * t992 + 37070 * t994
            t1004 = -245157 * t1001 + 11550 * t989 - 129195 * t993 + 522852 * t995 - 948651 * t997 + 788766 * t999 - 165
            t1003 = 735471 * t978 - 2707386 * t980 + 3869217 * t982 - 2681580 * t984 + 5775 * t991 - 134970 * t992 + 913473 * t994
            tfunc[..., c] = 0.5e1 / 0.1343488e7 * np.sqrt(0.41e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.23e2) * np.sqrt(0.7e1) * ((2704156 * t978 - 9170616 * t980 + 12009140 * t982 - 7584720 * t984 + 2342340 * t994 - 312312 * t992 + 12012 * t991) * np.sin(phi1) + (t1005 + t1006) * np.sin(phi1 - (8 * phi2)) + (t1003 + t1004) * np.sin(phi1 - (4 * phi2)) + (t1003 - t1004) * np.sin(phi1 + (4 * phi2)) + (t1005 - t1006) * np.sin(phi1 + (8 * phi2)) + 0.1025e4 * (t1007 + t1008) * np.sin(phi1 - (12 * phi2)) + 0.1025e4 * (t1007 - t1008) * np.sin(phi1 + (12 * phi2))) * ((1 + t991) ** (-0.1e1 / 0.2e1)) * ((1 - t991) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t1025 = np.cos(phi)
            t1024 = t1025 ** 2
            t1028 = t1024 ** 2
            t1029 = t1025 * t1028
            t1034 = t1029 ** 2
            t1015 = t1025 * t1034
            t1032 = t1028 ** 2
            t1017 = t1025 * t1032
            t1027 = t1025 * t1024
            t1030 = t1027 ** 2
            t1019 = t1025 * t1030
            t1040 = -653752 * t1015 + 1780376 * t1017 - 1741616 * t1019 + 5560 * t1025 - 122520 * t1027 + 731952 * t1029
            t1039 = -326876 * t1015 + 1169260 * t1017 - 1563320 * t1019 + 16796 * t1025 - 239020 * t1027 + 943160 * t1029
            t1014 = t1030 ** 2
            t1038 = -245157 * t1014 + 14212 * t1024 - 143735 * t1028 + 594320 * t1030 - 1057825 * t1032 + 838508 * t1034 - 323
            t1037 = 980628 * t1014 - 42160 * t1024 + 465180 * t1028 - 1888768 * t1030 + 3497444 * t1032 - 3012944 * t1034 + 620
            t1026 = 2 * phi1
            tfunc[..., c] = 0.5e1 / 0.167936e6 * np.sqrt(0.41e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * ((-1470942 * t1014 + 4348872 * t1034 - 4796550 * t1032 + 2423520 * t1030 - 549450 * t1028 + 45144 * t1024 - 594) * np.cos(t1026) + (t1038 - t1039) * np.cos(-t1026 + (8 * phi2)) + (t1037 + t1040) * np.cos(-t1026 + (4 * phi2)) + (t1037 - t1040) * np.cos(t1026 + (4 * phi2)) + (t1038 + t1039) * np.cos(t1026 + (8 * phi2)))

        if Bindx == 48:
            t1059 = np.cos(phi)
            t1058 = t1059 ** 2
            t1061 = t1059 * t1058
            t1064 = t1061 ** 2
            t1048 = t1064 ** 2
            t1062 = t1058 ** 2
            t1066 = t1062 ** 2
            t1063 = t1059 * t1062
            t1068 = t1063 ** 2
            t1076 = -1025 + 1025 * t1048 + 4100 * t1058 - 5125 * t1062 + 5125 * t1066 - 4100 * t1068
            t1049 = t1059 * t1068
            t1051 = t1059 * t1066
            t1053 = t1059 * t1064
            t1075 = -14168 * t1049 + 50680 * t1051 - 67760 * t1053 + 728 * t1059 - 10360 * t1061 + 40880 * t1063
            t1074 = -2050 * t1049 + 10250 * t1051 - 20500 * t1053 + 2050 * t1059 - 10250 * t1061 + 20500 * t1063
            t1073 = 14 + 10626 * t1048 - 616 * t1058 + 6230 * t1062 - 25760 * t1064 + 45850 * t1066 - 36344 * t1068
            t1072 = -490314 * t1049 + 1335282 * t1051 - 1306212 * t1053 + 4170 * t1059 - 91890 * t1061 + 548964 * t1063
            t1071 = 735471 * t1048 - 31620 * t1058 + 348885 * t1062 - 1416576 * t1064 + 2623083 * t1066 - 2259708 * t1068 + 465
            t1060 = 2 * phi1
            tfunc[..., c] = -0.5e1 / 0.2686976e7 * np.sqrt(0.2e1) * np.sqrt(0.41e2) * np.sqrt(0.11e2) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * ((2704156 * t1048 - 7994896 * t1068 + 8817900 * t1066 - 4455360 * t1064 + 1010100 * t1062 - 82992 * t1058 + 1092) * np.cos(t1060) + (t1074 + t1076) * np.cos(-t1060 + (12 * phi2)) + (-t1074 + t1076) * np.cos(t1060 + (12 * phi2)) + (t1073 + t1075) * np.cos(-t1060 + (8 * phi2)) + (t1071 + t1072) * np.cos(-t1060 + (4 * phi2)) + (t1071 - t1072) * np.cos(t1060 + (4 * phi2)) + (t1073 - t1075) * np.cos(t1060 + (8 * phi2)))

        if Bindx == 49:
            t1094 = np.cos(phi)
            t1093 = t1094 ** 2
            t1096 = t1094 * t1093
            t1099 = t1096 ** 2
            t1105 = t1099 ** 2
            t1082 = t1094 * t1105
            t1097 = t1093 ** 2
            t1098 = t1094 * t1097
            t1103 = t1098 ** 2
            t1084 = t1094 * t1103
            t1101 = t1097 ** 2
            t1086 = t1094 * t1101
            t1088 = t1094 * t1099
            t1110 = -81719 * t1082 + 234498 * t1084 - 179265 * t1086 - 55556 * t1088 + 3553 * t1094 - 44574 * t1096 + 123063 * t1098
            t1109 = 27132 * t1093 - 203490 * t1097 + 617576 * t1099 - 893418 * t1101 + 616284 * t1103 - 163438 * t1105 - 646
            t1108 = 17688 * t1093 - 188100 * t1097 + 731408 * t1099 - 1290708 * t1101 + 1056856 * t1103 - 326876 * t1105 - 268
            t1107 = 326876 * t1082 - 1108536 * t1084 + 1466420 * t1086 - 952272 * t1088 + 2028 * t1094 - 45688 * t1096 + 311172 * t1098
            t1095 = 3 * phi1
            tfunc[..., c] = 0.15e2 / 0.167936e6 * np.sqrt(0.2e1) * np.sqrt(0.41e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * ((1602216 * t1088 - 521334 * t1098 + 73260 * t1096 - 2970 * t1094 - 490314 * t1082 + 1748076 * t1084 - 2408934 * t1086) * np.sin(t1095) - (-t1109 + t1110) * np.sin(-t1095 + (8 * phi2)) - (t1107 + t1108) * np.sin(-t1095 + (4 * phi2)) + (t1107 - t1108) * np.sin(t1095 + (4 * phi2)) + (t1109 + t1110) * np.sin(t1095 + (8 * phi2))) * ((1 + t1094) ** (-0.1e1 / 0.2e1)) * ((1 - t1094) ** (-0.1e1 / 0.2e1))

        if Bindx == 50:
            t1130 = np.cos(phi)
            t1129 = t1130 ** 2
            t1133 = t1129 ** 2
            t1132 = t1130 * t1129
            t1135 = t1132 ** 2
            t1137 = t1133 ** 2
            t1134 = t1130 * t1133
            t1139 = t1134 ** 2
            t1141 = t1135 ** 2
            t1148 = 1025 - 2050 * t1129 - 5125 * t1133 + 20500 * t1135 - 25625 * t1137 + 14350 * t1139 - 3075 * t1141
            t1118 = t1130 * t1141
            t1120 = t1130 * t1139
            t1122 = t1130 * t1137
            t1124 = t1130 * t1135
            t1147 = 1025 * t1118 - 2050 * t1120 - 5125 * t1122 + 20500 * t1124 - 3075 * t1130 + 14350 * t1132 - 25625 * t1134
            t1146 = 10626 * t1118 - 30492 * t1120 + 23310 * t1122 + 7224 * t1124 - 462 * t1130 + 5796 * t1132 - 16002 * t1134
            t1145 = 3528 * t1129 - 26460 * t1133 + 80304 * t1135 - 116172 * t1137 + 80136 * t1139 - 21252 * t1141 - 84
            t1144 = 39798 * t1129 - 423225 * t1133 + 1645668 * t1135 - 2904093 * t1137 + 2377926 * t1139 - 735471 * t1141 - 603
            t1143 = 735471 * t1118 - 2494206 * t1120 + 3299445 * t1122 - 2142612 * t1124 + 4563 * t1130 - 102798 * t1132 + 700137 * t1134
            t1131 = 3 * phi1
            tfunc[..., c] = -0.5e1 / 0.4030464e7 * np.sqrt(0.3e1) * np.sqrt(0.41e2) * np.sqrt(0.11e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.23e2) * ((2704156 * t1118 - 9640904 * t1120 + 13285636 * t1122 - 8836464 * t1124 + 2875236 * t1134 - 404040 * t1132 + 16380 * t1130) * np.sin(t1131) - (t1145 + t1146) * np.sin(-t1131 + (8 * phi2)) - (t1143 + t1144) * np.sin(-t1131 + (4 * phi2)) + (t1143 - t1144) * np.sin(t1131 + (4 * phi2)) + (-t1145 + t1146) * np.sin(t1131 + (8 * phi2)) - (t1147 + t1148) * np.sin(-t1131 + (12 * phi2)) + (t1147 - t1148) * np.sin(t1131 + (12 * phi2))) * ((1 + t1130) ** (-0.1e1 / 0.2e1)) * ((1 - t1130) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t1165 = np.cos(phi)
            t1164 = t1165 ** 2
            t1168 = t1164 ** 2
            t1169 = t1165 * t1168
            t1174 = t1169 ** 2
            t1155 = t1165 * t1174
            t1172 = t1168 ** 2
            t1157 = t1165 * t1172
            t1167 = t1165 * t1164
            t1170 = t1167 ** 2
            t1159 = t1165 * t1170
            t1180 = -1961256 * t1155 + 5573688 * t1157 - 5596944 * t1159 + 23256 * t1165 - 379848 * t1167 + 2341104 * t1169
            t1179 = -3922512 * t1155 + 10775280 * t1157 - 10821792 * t1159 + 42416 * t1165 - 857360 * t1167 + 4775776 * t1169
            t1154 = t1170 ** 2
            t1178 = -2941884 * t1154 + 59272 * t1164 - 698500 * t1168 + 3352944 * t1170 - 7538820 * t1172 + 7759752 * t1174 - 956
            t1177 = 735471 * t1154 + 331398 * t1164 - 1867263 * t1168 + 3585300 * t1170 - 2115327 * t1172 - 660858 * t1174 - 8721
            t1166 = 4 * phi1
            tfunc[..., c] = 0.5e1 / 0.671744e6 * np.sqrt(0.2e1) * np.sqrt(0.41e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * ((2970 + 4412826 * t1154 - 14197788 * t1174 + 17075718 * t1172 - 9411336 * t1170 + 2325510 * t1168 - 207900 * t1164) * np.cos(t1166) + (t1177 + t1180) * np.cos(-t1166 + (8 * phi2)) + (t1177 - t1180) * np.cos(t1166 + (8 * phi2)) + (t1178 - t1179) * np.cos((4 * phi1 - 4 * phi2)) + (t1178 + t1179) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 52:
            t1199 = np.cos(phi)
            t1198 = t1199 ** 2
            t1202 = t1198 ** 2
            t1203 = t1199 * t1202
            t1208 = t1203 ** 2
            t1189 = t1199 * t1208
            t1206 = t1202 ** 2
            t1191 = t1199 * t1206
            t1201 = t1199 * t1198
            t1204 = t1201 ** 2
            t1193 = t1199 * t1204
            t1216 = -4100 * t1189 + 12300 * t1191 - 8200 * t1193 - 4100 * t1199 + 12300 * t1201 - 8200 * t1203
            t1215 = -28336 * t1189 + 80528 * t1191 - 80864 * t1193 + 336 * t1199 - 5488 * t1201 + 33824 * t1203
            t1188 = t1204 ** 2
            t1214 = -126 + 10626 * t1188 + 4788 * t1198 - 26978 * t1202 + 51800 * t1204 - 30562 * t1206 - 9548 * t1208
            t1213 = 1025 + 1025 * t1188 + 2050 * t1198 - 17425 * t1202 + 28700 * t1204 - 17425 * t1206 + 2050 * t1208
            t1212 = -980628 * t1189 + 2693820 * t1191 - 2705448 * t1193 + 10604 * t1199 - 214340 * t1201 + 1193944 * t1203
            t1211 = 735471 * t1188 - 14818 * t1198 + 174625 * t1202 - 838236 * t1204 + 1884705 * t1206 - 1939938 * t1208 + 239
            t1200 = 4 * phi1
            tfunc[..., c] = 0.5e1 / 0.5373952e7 * np.sqrt(0.3e1) * np.sqrt(0.41e2) * np.sqrt(0.11e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.23e2) * ((2704156 * t1188 - 8700328 * t1208 + 10463908 * t1206 - 5767216 * t1204 + 1425060 * t1202 - 127400 * t1198 + 1820) * np.cos(t1200) + (t1214 + t1215) * np.cos(-t1200 + (8 * phi2)) + (t1214 - t1215) * np.cos(t1200 + (8 * phi2)) + (t1213 + t1216) * np.cos(-t1200 + (12 * phi2)) + (t1213 - t1216) * np.cos(t1200 + (12 * phi2)) + (t1211 + t1212) * np.cos((4 * phi1 - 4 * phi2)) + (t1211 - t1212) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 53:
            t1234 = np.cos(phi)
            t1233 = t1234 ** 2
            t1237 = t1233 ** 2
            t1236 = t1234 * t1233
            t1239 = t1236 ** 2
            t1241 = t1237 ** 2
            t1238 = t1234 * t1237
            t1243 = t1238 ** 2
            t1245 = t1239 ** 2
            t1250 = -11628 * t1233 + 26562 * t1237 + 94392 * t1239 - 367878 * t1241 + 402420 * t1243 - 144210 * t1245 + 342
            t1222 = t1234 * t1245
            t1224 = t1234 * t1243
            t1226 = t1234 * t1241
            t1228 = t1234 * t1239
            t1249 = 43263 * t1222 + 21318 * t1224 - 341487 * t1226 + 506388 * t1228 - 5985 * t1234 + 72390 * t1236 - 295887 * t1238
            t1248 = -173052 * t1222 + 486552 * t1224 - 475380 * t1226 + 174480 * t1228 + 404 * t1234 - 5544 * t1236 - 7460 * t1238
            t1247 = 19720 * t1233 - 189820 * t1237 + 690736 * t1239 - 1173516 * t1241 + 941640 * t1243 - 288420 * t1245 - 340
            t1235 = 5 * phi1
            tfunc[..., c] = 0.5e1 / 0.167936e6 * np.sqrt(0.41e2) * np.sqrt(0.17e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * ((-65340 * t1236 + 2970 * t1234 + 259578 * t1222 - 1015740 * t1224 + 1546182 * t1226 - 1142856 * t1228 + 415206 * t1238) * np.sin(t1235) - (t1249 + t1250) * np.sin(-t1235 + (8 * phi2)) - (-t1247 + t1248) * np.sin(-t1235 + (4 * phi2)) + (t1247 + t1248) * np.sin(t1235 + (4 * phi2)) + (t1249 - t1250) * np.sin(t1235 + (8 * phi2))) * ((1 + t1234) ** (-0.1e1 / 0.2e1)) * ((1 - t1234) ** (-0.1e1 / 0.2e1))

        if Bindx == 54:
            t1270 = np.cos(phi)
            t1269 = t1270 ** 2
            t1273 = t1269 ** 2
            t1272 = t1270 * t1269
            t1275 = t1272 ** 2
            t1277 = t1273 ** 2
            t1274 = t1270 * t1273
            t1279 = t1274 ** 2
            t1281 = t1275 ** 2
            t1288 = 84 - 2856 * t1269 + 6524 * t1273 + 23184 * t1275 - 90356 * t1277 + 98840 * t1279 - 35420 * t1281
            t1287 = -1025 - 6150 * t1269 + 29725 * t1273 - 36900 * t1275 + 9225 * t1277 + 10250 * t1279 - 5125 * t1281
            t1258 = t1270 * t1281
            t1260 = t1270 * t1279
            t1262 = t1270 * t1277
            t1264 = t1270 * t1275
            t1286 = 1025 * t1258 + 6150 * t1260 - 29725 * t1262 + 36900 * t1264 + 5125 * t1270 - 10250 * t1272 - 9225 * t1274
            t1285 = 10626 * t1258 + 5236 * t1260 - 83874 * t1262 + 124376 * t1264 - 1470 * t1270 + 17780 * t1272 - 72674 * t1274
            t1284 = 735471 * t1258 - 2067846 * t1260 + 2020365 * t1262 - 741540 * t1264 - 1717 * t1270 + 23562 * t1272 + 31705 * t1274
            t1283 = 83810 * t1269 - 806735 * t1273 + 2935628 * t1275 - 4987443 * t1277 + 4001970 * t1279 - 1225785 * t1281 - 1445
            t1271 = 5 * phi1
            tfunc[..., c] = 0.5e1 / 0.2686976e7 * np.sqrt(0.3e1) * np.sqrt(0.41e2) * np.sqrt(0.2e1) * np.sqrt(0.23e2) * np.sqrt(0.11e2) * np.sqrt(0.19e2) * ((2704156 * t1258 - 10581480 * t1260 + 16107364 * t1262 - 11905712 * t1264 + 4325412 * t1274 - 680680 * t1272 + 30940 * t1270) * np.sin(t1271) - (t1285 + t1288) * np.sin(-t1271 + (8 * phi2)) - (t1283 + t1284) * np.sin(-t1271 + (4 * phi2)) + (-t1283 + t1284) * np.sin(t1271 + (4 * phi2)) + (t1285 - t1288) * np.sin(t1271 + (8 * phi2)) - (t1286 + t1287) * np.sin(-t1271 + (12 * phi2)) + (t1286 - t1287) * np.sin(t1271 + (12 * phi2))) * ((1 + t1270) ** (-0.1e1 / 0.2e1)) * ((1 - t1270) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t1305 = np.cos(phi)
            t1304 = t1305 ** 2
            t1308 = t1304 ** 2
            t1309 = t1305 * t1308
            t1314 = t1309 ** 2
            t1295 = t1305 * t1314
            t1312 = t1308 ** 2
            t1297 = t1305 * t1312
            t1307 = t1305 * t1304
            t1310 = t1307 ** 2
            t1299 = t1305 * t1310
            t1320 = -134596 * t1295 + 217588 * t1297 - 7752 * t1299 - 7676 * t1305 + 63308 * t1307 - 130872 * t1309
            t1294 = t1310 ** 2
            t1319 = -134596 * t1294 - 10192 * t1304 + 68180 * t1308 - 103936 * t1310 - 77140 * t1312 + 257488 * t1314 + 196
            t1318 = -269192 * t1295 + 750120 * t1297 - 768208 * t1299 + 3976 * t1305 - 69160 * t1307 + 352464 * t1309
            t1317 = 33649 * t1294 + 10108 * t1304 - 106533 * t1308 + 338352 * t1310 - 386403 * t1312 + 111188 * t1314 - 361
            t1306 = 6 * phi1
            tfunc[..., c] = -0.15e2 / 0.335872e6 * np.sqrt(0.2e1) * np.sqrt(0.41e2) * np.sqrt(0.13e2) * np.sqrt(0.17e2) * ((201894 * t1294 - 737352 * t1314 + 1019502 * t1312 - 653664 * t1310 + 189090 * t1308 - 19800 * t1304 + 330) * np.cos(t1306) + (t1317 + t1320) * np.cos(-t1306 + (8 * phi2)) + (-t1318 + t1319) * np.cos(-t1306 + (4 * phi2)) + (t1318 + t1319) * np.cos(t1306 + (4 * phi2)) + (t1317 - t1320) * np.cos(t1306 + (8 * phi2)))

        if Bindx == 56:
            t1339 = np.cos(phi)
            t1338 = t1339 ** 2
            t1341 = t1339 * t1338
            t1344 = t1341 ** 2
            t1328 = t1344 ** 2
            t1342 = t1338 ** 2
            t1346 = t1342 ** 2
            t1343 = t1339 * t1342
            t1348 = t1343 ** 2
            t1356 = -1025 + 1025 * t1328 - 12300 * t1338 + 27675 * t1342 - 27675 * t1346 + 12300 * t1348
            t1329 = t1339 * t1348
            t1331 = t1339 * t1346
            t1333 = t1339 * t1344
            t1355 = -6150 * t1329 - 2050 * t1331 + 36900 * t1333 + 6150 * t1339 + 2050 * t1341 - 36900 * t1343
            t1354 = -42504 * t1329 + 68712 * t1331 - 2448 * t1333 - 2424 * t1339 + 19992 * t1341 - 41328 * t1343
            t1353 = 10626 * t1328 + 3192 * t1338 - 33642 * t1342 + 106848 * t1344 - 122022 * t1346 + 35112 * t1348 - 114
            t1352 = -1470942 * t1329 + 4098870 * t1331 - 4197708 * t1333 + 21726 * t1339 - 377910 * t1341 + 1925964 * t1343
            t1351 = 735471 * t1328 + 55692 * t1338 - 372555 * t1342 + 567936 * t1344 + 421515 * t1346 - 1406988 * t1348 - 1071
            t1340 = 6 * phi1
            tfunc[..., c] = -0.5e1 / 0.8060928e7 * np.sqrt(0.3e1) * np.sqrt(0.41e2) * np.sqrt(0.11e2) * np.sqrt(0.19e2) * np.sqrt(0.7e1) * np.sqrt(0.23e2) * ((2704156 * t1328 - 9876048 * t1348 + 13655148 * t1346 - 8755136 * t1344 + 2532660 * t1342 - 265200 * t1338 + 4420) * np.cos(t1340) + (t1355 + t1356) * np.cos(-t1340 + (12 * phi2)) + (-t1355 + t1356) * np.cos(t1340 + (12 * phi2)) + (t1353 + t1354) * np.cos(-t1340 + (8 * phi2)) + (t1351 + t1352) * np.cos(-t1340 + (4 * phi2)) + (t1351 - t1352) * np.cos(t1340 + (4 * phi2)) + (t1353 - t1354) * np.cos(t1340 + (8 * phi2)))

        if Bindx == 57:
            t1374 = np.cos(phi)
            t1373 = t1374 ** 2
            t1377 = t1373 ** 2
            t1376 = t1374 * t1373
            t1379 = t1376 ** 2
            t1381 = t1377 ** 2
            t1378 = t1374 * t1377
            t1383 = t1378 ** 2
            t1385 = t1379 ** 2
            t1390 = 278 - 6116 * t1373 + 34650 * t1377 - 66360 * t1379 + 29610 * t1381 + 32732 * t1383 - 24794 * t1385
            t1362 = t1374 * t1385
            t1364 = t1374 * t1383
            t1366 = t1374 * t1381
            t1368 = t1374 * t1379
            t1389 = -21252 * t1362 + 41272 * t1364 + 7140 * t1366 - 64624 * t1368 + 924 * t1374 - 13384 * t1376 + 49924 * t1378
            t1388 = 5313 * t1362 + 29414 * t1364 - 95405 * t1366 + 82980 * t1368 + 1141 * t1374 - 3178 * t1376 - 20265 * t1378
            t1387 = -3864 * t1373 + 33740 * t1377 - 121296 * t1379 + 205996 * t1381 - 164248 * t1383 + 49588 * t1385 + 84
            t1375 = 7 * phi1
            tfunc[..., c] = -0.5e1 / 0.167936e6 * np.sqrt(0.41e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * ((31878 * t1362 - 141372 * t1364 + 247698 * t1366 - 214632 * t1368 + 93258 * t1378 - 17820 * t1376 + 990 * t1374) * np.sin(t1375) - (t1388 + t1390) * np.sin(-t1375 + (8 * phi2)) - (t1387 + t1389) * np.sin(-t1375 + (4 * phi2)) + (-t1387 + t1389) * np.sin(t1375 + (4 * phi2)) + (t1388 - t1390) * np.sin(t1375 + (8 * phi2))) * ((1 + t1374) ** (-0.1e1 / 0.2e1)) * ((1 - t1374) ** (-0.1e1 / 0.2e1))

        if Bindx == 58:
            t1410 = np.cos(phi)
            t1409 = t1410 ** 2
            t1413 = t1409 ** 2
            t1412 = t1410 * t1409
            t1415 = t1412 ** 2
            t1417 = t1413 ** 2
            t1414 = t1410 * t1413
            t1419 = t1414 ** 2
            t1421 = t1415 ** 2
            t1428 = 1025 + 18450 * t1409 - 25625 * t1413 - 36900 * t1415 + 64575 * t1417 - 14350 * t1419 - 7175 * t1421
            t1398 = t1410 * t1421
            t1400 = t1410 * t1419
            t1402 = t1410 * t1417
            t1404 = t1410 * t1415
            t1427 = 1025 * t1398 + 18450 * t1400 - 25625 * t1402 - 36900 * t1404 - 7175 * t1410 - 14350 * t1412 + 64575 * t1414
            t1426 = -12232 * t1409 + 69300 * t1413 - 132720 * t1415 + 59220 * t1417 + 65464 * t1419 - 49588 * t1421 + 556
            t1425 = 10626 * t1398 + 58828 * t1400 - 190810 * t1402 + 165960 * t1404 + 2282 * t1410 - 6356 * t1412 - 40530 * t1414
            t1424 = -133722 * t1409 + 1167645 * t1413 - 4197708 * t1415 + 7128933 * t1417 - 5684154 * t1419 + 1716099 * t1421 + 2907
            t1423 = 735471 * t1398 - 1428306 * t1400 - 247095 * t1402 + 2236452 * t1404 - 31977 * t1410 + 463182 * t1412 - 1727727 * t1414
            t1411 = 7 * phi1
            tfunc[..., c] = -0.5e1 / 0.2686976e7 * np.sqrt(0.2e1) * np.sqrt(0.41e2) * np.sqrt(0.23e2) * np.sqrt(0.7e1) * np.sqrt(0.11e2) * ((2704156 * t1398 - 11992344 * t1400 + 21011796 * t1402 - 18206864 * t1404 + 7910916 * t1414 - 1511640 * t1412 + 83980 * t1410) * np.sin(t1411) - (t1425 + t1426) * np.sin(-t1411 + (8 * phi2)) - (t1423 - t1424) * np.sin(-t1411 + (4 * phi2)) + (t1423 + t1424) * np.sin(t1411 + (4 * phi2)) + (t1425 - t1426) * np.sin(t1411 + (8 * phi2)) - (t1427 + t1428) * np.sin(-t1411 + (12 * phi2)) + (t1427 - t1428) * np.sin(t1411 + (12 * phi2))) * ((1 + t1410) ** (-0.1e1 / 0.2e1)) * ((1 - t1410) ** (-0.1e1 / 0.2e1))

        if Bindx == 59:
            t1445 = np.cos(phi)
            t1444 = t1445 ** 2
            t1448 = t1444 ** 2
            t1449 = t1445 * t1448
            t1454 = t1449 ** 2
            t1435 = t1445 * t1454
            t1452 = t1448 ** 2
            t1437 = t1445 * t1452
            t1447 = t1445 * t1444
            t1450 = t1447 ** 2
            t1439 = t1445 * t1450
            t1460 = -28336 * t1435 - 2800 * t1437 + 84384 * t1439 - 176 * t1445 + 15120 * t1447 - 69216 * t1449
            t1434 = t1450 ** 2
            t1459 = 673 + 5313 * t1434 - 9422 * t1444 + 22575 * t1448 + 20412 * t1450 - 87345 * t1452 + 48818 * t1454
            t1458 = -21252 * t1434 - 9576 * t1444 + 53956 * t1448 - 103600 * t1450 + 61124 * t1452 + 19096 * t1454 + 252
            t1457 = 56672 * t1435 - 161056 * t1437 + 161728 * t1439 - 672 * t1445 + 10976 * t1447 - 67648 * t1449
            t1446 = 8 * phi1
            tfunc[..., c] = 0.5e1 / 0.335872e6 * np.sqrt(0.41e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * ((31878 * t1434 - 135828 * t1454 + 224730 * t1452 - 178200 * t1450 + 66330 * t1448 - 9108 * t1444 + 198) * np.cos(t1446) + (t1457 + t1458) * np.cos(-t1446 + (4 * phi2)) + (-t1457 + t1458) * np.cos(t1446 + (4 * phi2)) + (t1459 + t1460) * np.cos((8 * phi1 - 8 * phi2)) + (t1459 - t1460) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 60:
            t1479 = np.cos(phi)
            t1478 = t1479 ** 2
            t1482 = t1478 ** 2
            t1483 = t1479 * t1482
            t1488 = t1483 ** 2
            t1469 = t1479 * t1488
            t1486 = t1482 ** 2
            t1471 = t1479 * t1486
            t1481 = t1479 * t1478
            t1484 = t1481 ** 2
            t1473 = t1479 * t1484
            t1496 = -8200 * t1469 - 41000 * t1471 + 49200 * t1473 - 8200 * t1479 - 41000 * t1481 + 49200 * t1483
            t1468 = t1484 ** 2
            t1495 = 1025 + 1025 * t1468 + 26650 * t1478 + 15375 * t1482 - 86100 * t1484 + 15375 * t1486 + 26650 * t1488
            t1494 = 10626 * t1468 - 18844 * t1478 + 45150 * t1482 + 40824 * t1484 - 174690 * t1486 + 97636 * t1488 + 1346
            t1493 = 56672 * t1469 + 5600 * t1471 - 168768 * t1473 + 352 * t1479 - 30240 * t1481 + 138432 * t1483
            t1492 = -1961256 * t1469 + 5573688 * t1471 - 5596944 * t1473 + 23256 * t1479 - 379848 * t1481 + 2341104 * t1483
            t1491 = 735471 * t1468 + 331398 * t1478 - 1867263 * t1482 + 3585300 * t1484 - 2115327 * t1486 - 660858 * t1488 - 8721
            t1480 = 8 * phi1
            tfunc[..., c] = 0.5e1 / 0.5373952e7 * np.sqrt(0.2e1) * np.sqrt(0.41e2) * np.sqrt(0.23e2) * np.sqrt(0.7e1) * np.sqrt(0.11e2) * ((16796 + 2704156 * t1468 - 11522056 * t1488 + 19063460 * t1486 - 15116400 * t1484 + 5626660 * t1482 - 772616 * t1478) * np.cos(t1480) + (t1491 + t1492) * np.cos(-t1480 + (4 * phi2)) + (t1491 - t1492) * np.cos(t1480 + (4 * phi2)) + (t1495 + t1496) * np.cos(-t1480 + (12 * phi2)) + (t1495 - t1496) * np.cos(t1480 + (12 * phi2)) + (-t1493 + t1494) * np.cos((8 * phi1 - 8 * phi2)) + (t1493 + t1494) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 61:
            t1514 = np.cos(phi)
            t1513 = t1514 ** 2
            t1517 = t1513 ** 2
            t1516 = t1514 * t1513
            t1519 = t1516 ** 2
            t1521 = t1517 ** 2
            t1518 = t1514 * t1517
            t1523 = t1518 ** 2
            t1525 = t1519 ** 2
            t1530 = -62 + 372 * t1513 + 1070 * t1517 - 6504 * t1519 + 7614 * t1521 - 972 * t1523 - 1518 * t1525
            t1529 = 4 - 120 * t1513 - 804 * t1517 + 6128 * t1519 - 12420 * t1521 + 10248 * t1523 - 3036 * t1525
            t1502 = t1514 * t1525
            t1504 = t1514 * t1523
            t1506 = t1514 * t1521
            t1508 = t1514 * t1519
            t1528 = 253 * t1502 + 3102 * t1504 - 5545 * t1506 - 204 * t1508 + 177 * t1514 - 1842 * t1516 + 4059 * t1518
            t1527 = -1012 * t1502 + 792 * t1504 + 5396 * t1506 - 11056 * t1508 + 236 * t1514 - 2408 * t1516 + 8052 * t1518
            t1515 = 9 * phi1
            tfunc[..., c] = 0.15e2 / 0.167936e6 * np.sqrt(0.41e2) * np.sqrt(0.17e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * np.sqrt(0.19e2) * ((1518 * t1502 - 7788 * t1504 + 16170 * t1506 - 17160 * t1508 + 9570 * t1518 - 2508 * t1516 + 198 * t1514) * np.sin(t1515) - (t1528 + t1530) * np.sin(-t1515 + (8 * phi2)) - (t1527 - t1529) * np.sin(-t1515 + (4 * phi2)) + (t1527 + t1529) * np.sin(t1515 + (4 * phi2)) + (t1528 - t1530) * np.sin(t1515 + (8 * phi2))) * ((1 + t1514) ** (-0.1e1 / 0.2e1)) * ((1 - t1514) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t1550 = np.cos(phi)
            t1549 = t1550 ** 2
            t1553 = t1549 ** 2
            t1552 = t1550 * t1549
            t1555 = t1552 ** 2
            t1557 = t1553 ** 2
            t1554 = t1550 * t1553
            t1559 = t1554 ** 2
            t1561 = t1555 ** 2
            t1568 = 34850 * t1549 + 56375 * t1553 - 135300 * t1555 - 33825 * t1557 + 67650 * t1559 + 9225 * t1561 + 1025
            t1538 = t1550 * t1561
            t1540 = t1550 * t1559
            t1542 = t1550 * t1557
            t1544 = t1550 * t1555
            t1567 = 1025 * t1538 + 34850 * t1540 + 56375 * t1542 - 135300 * t1544 + 9225 * t1550 + 67650 * t1552 - 33825 * t1554
            t1566 = 15624 * t1549 + 44940 * t1553 - 273168 * t1555 + 319788 * t1557 - 40824 * t1559 - 63756 * t1561 - 2604
            t1565 = 10626 * t1538 + 130284 * t1540 - 232890 * t1542 - 8568 * t1544 + 7434 * t1550 - 77364 * t1552 + 170478 * t1554
            t1564 = -87210 * t1549 - 584307 * t1553 + 4453524 * t1555 - 9026235 * t1557 + 7447734 * t1559 - 2206413 * t1561 + 2907
            t1563 = 735471 * t1538 - 575586 * t1540 - 3921543 * t1542 + 8034948 * t1544 - 171513 * t1550 + 1750014 * t1552 - 5851791 * t1554
            t1551 = 9 * phi1
            tfunc[..., c] = 0.5e1 / 0.8060928e7 * np.sqrt(0.3e1) * np.sqrt(0.41e2) * np.sqrt(0.2e1) * np.sqrt(0.23e2) * np.sqrt(0.11e2) * ((-4467736 * t1552 + 352716 * t1550 + 2704156 * t1538 - 13873496 * t1540 + 28805140 * t1542 - 30568720 * t1544 + 17047940 * t1554) * np.sin(t1551) - (t1565 + t1566) * np.sin(-t1551 + (8 * phi2)) - (t1563 + t1564) * np.sin(-t1551 + (4 * phi2)) + (t1563 - t1564) * np.sin(t1551 + (4 * phi2)) + (t1565 - t1566) * np.sin(t1551 + (8 * phi2)) - (t1567 - t1568) * np.sin(-t1551 + (12 * phi2)) + (t1567 + t1568) * np.sin(t1551 + (12 * phi2))) * ((1 + t1550) ** (-0.1e1 / 0.2e1)) * ((1 - t1550) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t1585 = np.cos(phi)
            t1584 = t1585 ** 2
            t1588 = t1584 ** 2
            t1589 = t1585 * t1588
            t1594 = t1589 ** 2
            t1575 = t1585 * t1594
            t1592 = t1588 ** 2
            t1577 = t1585 * t1592
            t1587 = t1585 * t1584
            t1590 = t1587 ** 2
            t1579 = t1585 * t1590
            t1600 = -920 * t1575 + 2680 * t1577 - 2416 * t1579 - 104 * t1585 + 392 * t1587 + 368 * t1589
            t1599 = -460 * t1575 - 1060 * t1577 + 2472 * t1579 + 140 * t1585 - 540 * t1587 - 552 * t1589
            t1574 = t1590 ** 2
            t1598 = -29 + 69 * t1574 - 116 * t1584 + 1335 * t1588 - 1680 * t1590 - 735 * t1592 + 1156 * t1594
            t1597 = 20 - 276 * t1574 - 400 * t1584 + 2020 * t1588 - 3584 * t1590 + 2332 * t1592 - 112 * t1594
            t1586 = 10 * phi1
            tfunc[..., c] = -0.5e1 / 0.335872e6 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * np.sqrt(0.41e2) * np.sqrt(0.19e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * np.sqrt(0.13e2) * np.sqrt(0.17e2) * ((414 * t1574 - 2088 * t1594 + 4230 * t1592 - 4320 * t1590 + 2250 * t1588 - 504 * t1584 + 18) * np.cos(t1586) + (t1598 + t1599) * np.cos(-t1586 + (8 * phi2)) + (t1597 - t1600) * np.cos(-t1586 + (4 * phi2)) + (t1597 + t1600) * np.cos(t1586 + (4 * phi2)) + (t1598 - t1599) * np.cos(t1586 + (8 * phi2)))

        if Bindx == 64:
            t1619 = np.cos(phi)
            t1618 = t1619 ** 2
            t1621 = t1619 * t1618
            t1624 = t1621 ** 2
            t1608 = t1624 ** 2
            t1622 = t1618 ** 2
            t1626 = t1622 ** 2
            t1623 = t1619 * t1622
            t1628 = t1623 ** 2
            t1636 = 1025 * t1608 - 45100 * t1618 + 45100 * t1628 - 1025 + 169125 * t1626 - 169125 * t1622
            t1609 = t1619 * t1628
            t1611 = t1619 * t1626
            t1613 = t1619 * t1624
            t1635 = -70840 * t1609 - 163240 * t1611 + 380688 * t1613 + 21560 * t1619 - 83160 * t1621 - 85008 * t1623
            t1634 = -10250 * t1609 + 10250 * t1619 - 135300 * t1613 + 135300 * t1623 - 112750 * t1611 + 112750 * t1621
            t1633 = 10626 * t1608 - 17864 * t1618 + 205590 * t1622 - 258720 * t1624 - 113190 * t1626 + 178024 * t1628 - 4466
            t1632 = -2451570 * t1609 + 7141530 * t1611 - 6438036 * t1613 - 277134 * t1619 + 1044582 * t1621 + 980628 * t1623
            t1631 = 735471 * t1608 + 1065900 * t1618 - 5382795 * t1622 + 9550464 * t1624 - 6214197 * t1626 + 298452 * t1628 - 53295
            t1620 = 10 * phi1
            tfunc[..., c] = -0.5e1 / 0.2686976e7 * np.sqrt(0.41e2) * np.sqrt(0.23e2) * ((2704156 * t1608 - 13638352 * t1628 + 27629420 * t1626 - 28217280 * t1624 + 14696500 * t1622 - 3292016 * t1618 + 117572) * np.cos(t1620) + (t1634 + t1636) * np.cos(-t1620 + (12 * phi2)) + (-t1634 + t1636) * np.cos(t1620 + (12 * phi2)) + (t1633 + t1635) * np.cos(-t1620 + (8 * phi2)) + (t1631 + t1632) * np.cos(-t1620 + (4 * phi2)) + (t1631 - t1632) * np.cos(t1620 + (4 * phi2)) + (t1633 - t1635) * np.cos(t1620 + (8 * phi2)))

        if Bindx == 65:
            t1654 = np.cos(phi)
            t1653 = t1654 ** 2
            t1657 = t1653 ** 2
            t1656 = t1654 * t1653
            t1659 = t1656 ** 2
            t1661 = t1657 ** 2
            t1658 = t1654 * t1657
            t1663 = t1658 ** 2
            t1665 = t1659 ** 2
            t1670 = 2 + 28 * t1653 - 90 * t1657 - 24 * t1659 + 174 * t1661 - 68 * t1663 - 22 * t1665
            t1669 = 4 - 40 * t1653 + 76 * t1657 + 16 * t1659 - 164 * t1661 + 152 * t1663 - 44 * t1665
            t1642 = t1654 * t1665
            t1644 = t1654 * t1663
            t1646 = t1654 * t1661
            t1648 = t1654 * t1659
            t1668 = 3 * t1642 + 62 * t1644 - 35 * t1646 - 156 * t1648 - 13 * t1654 - 2 * t1656 + 141 * t1658
            t1667 = -12 * t1642 - 8 * t1644 + 156 * t1646 - 304 * t1648 + 4 * t1654 - 72 * t1656 + 236 * t1658
            t1655 = 11 * phi1
            tfunc[..., c] = -0.5e1 / 0.167936e6 * np.sqrt(0.11e2) * np.sqrt(0.41e2) * np.sqrt(0.7e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * (0.18e2 * (t1642 - 6 * t1644 + 15 * t1646 - 20 * t1648 + 15 * t1658 - 6 * t1656 + t1654) * np.sin(t1655) - (t1668 + t1670) * np.sin(-t1655 + (8 * phi2)) - (t1667 - t1669) * np.sin(-t1655 + (4 * phi2)) + (t1667 + t1669) * np.sin(t1655 + (4 * phi2)) + (t1668 - t1670) * np.sin(t1655 + (8 * phi2))) * ((1 + t1654) ** (-0.1e1 / 0.2e1)) * ((1 - t1654) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t1690 = np.cos(phi)
            t1689 = t1690 ** 2
            t1693 = t1689 ** 2
            t1692 = t1690 * t1689
            t1695 = t1692 ** 2
            t1697 = t1693 ** 2
            t1694 = t1690 * t1693
            t1699 = t1694 ** 2
            t1701 = t1695 ** 2
            t1708 = 99176 * t1689 - 318780 * t1693 - 85008 * t1695 + 616308 * t1697 - 240856 * t1699 - 77924 * t1701 + 7084
            t1707 = -55350 * t1689 - 281875 * t1693 - 135300 * t1695 + 304425 * t1697 + 157850 * t1699 + 11275 * t1701 - 1025
            t1678 = t1690 * t1701
            t1680 = t1690 * t1699
            t1682 = t1690 * t1697
            t1684 = t1690 * t1695
            t1706 = 10626 * t1678 + 219604 * t1680 - 123970 * t1682 - 552552 * t1684 - 46046 * t1690 - 7084 * t1692 + 499422 * t1694
            t1705 = 1025 * t1678 + 55350 * t1680 + 281875 * t1682 + 135300 * t1684 - 11275 * t1690 - 157850 * t1692 - 304425 * t1694
            t1704 = -2451570 * t1689 + 4657983 * t1693 + 980628 * t1695 - 10051437 * t1697 + 9315966 * t1699 - 2696727 * t1701 + 245157
            t1703 = 735471 * t1678 + 490314 * t1680 - 9561123 * t1682 + 18631932 * t1684 - 245157 * t1690 + 4412826 * t1692 - 14464263 * t1694
            t1691 = 11 * phi1
            tfunc[..., c] = -0.5e1 / 0.2686976e7 * np.sqrt(0.41e2) * np.sqrt(0.2e1) * (0.2704156e7 * (-20 * t1684 + 15 * t1682 + 15 * t1694 - 6 * t1680 - 6 * t1692 + t1678 + t1690) * np.sin(t1691) - (t1706 + t1708) * np.sin(-t1691 + (8 * phi2)) - (t1703 + t1704) * np.sin(-t1691 + (4 * phi2)) + (t1703 - t1704) * np.sin(t1691 + (4 * phi2)) + (t1706 - t1708) * np.sin(t1691 + (8 * phi2)) - (t1705 - t1707) * np.sin(-t1691 + (12 * phi2)) + (t1705 + t1707) * np.sin(t1691 + (12 * phi2))) * ((1 + t1690) ** (-0.1e1 / 0.2e1)) * ((1 - t1690) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t1725 = np.cos(phi)
            t1724 = t1725 ** 2
            t1728 = t1724 ** 2
            t1729 = t1725 * t1728
            t1734 = t1729 ** 2
            t1741 = (-t1734 - 1) * t1725
            t1732 = t1728 ** 2
            t1717 = t1725 * t1732
            t1727 = t1725 * t1724
            t1730 = t1727 ** 2
            t1719 = t1725 * t1730
            t1740 = -40 * t1717 + 48 * t1719 - 40 * t1727 + 48 * t1729 + 8 * t1741
            t1739 = 48 * t1717 - 32 * t1719 + 48 * t1727 - 32 * t1729 + 16 * t1741
            t1714 = t1730 ** 2
            t1738 = -4 - 4 * t1714 - 8 * t1724 + 68 * t1728 - 112 * t1730 + 68 * t1732 - 8 * t1734
            t1737 = 1 + t1714 + 26 * t1724 + 15 * t1728 - 84 * t1730 + 15 * t1732 + 26 * t1734
            t1726 = 12 * phi1
            tfunc[..., c] = 0.15e2 / 0.671744e6 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * np.sqrt(0.41e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * ((6 * t1714 - 36 * t1734 + 90 * t1732 - 120 * t1730 + 90 * t1728 - 36 * t1724 + 6) * np.cos(t1726) + (t1737 + t1740) * np.cos(-t1726 + (8 * phi2)) + (t1737 - t1740) * np.cos(t1726 + (8 * phi2)) + (t1738 - t1739) * np.cos(-t1726 + (4 * phi2)) + (t1738 + t1739) * np.cos(t1726 + (4 * phi2)))

        if Bindx == 68:
            t1760 = np.cos(phi)
            t1759 = t1760 ** 2
            t1763 = t1759 ** 2
            t1767 = t1763 ** 2
            t1780 = t1767 + t1763
            t1764 = t1760 * t1763
            t1769 = t1764 ** 2
            t1779 = t1769 + t1759
            t1750 = t1760 * t1769
            t1778 = -t1750 - t1760
            t1762 = t1760 * t1759
            t1765 = t1762 ** 2
            t1749 = t1765 ** 2
            t1777 = 1025 * t1749 + 67650 * t1759 + 947100 * t1765 + 67650 * t1769 + 507375 * t1780 + 1025
            t1752 = t1760 * t1767
            t1754 = t1760 * t1765
            t1776 = -12300 * t1750 - 12300 * t1760 - 811800 * t1754 - 811800 * t1764 - 225500 * t1752 - 225500 * t1762
            t1775 = 510048 * t1754 + 510048 * t1764 - 425040 * t1752 - 425040 * t1762 + 85008 * t1778
            t1774 = 10626 * t1749 - 892584 * t1765 + 276276 * t1779 + 159390 * t1780 + 10626
            t1773 = 8825652 * t1752 + 8825652 * t1762 - 5883768 * t1754 - 5883768 * t1764 + 2941884 * t1778
            t1772 = 735471 * t1749 + 20593188 * t1765 + 1470942 * t1779 - 12503007 * t1780 + 735471
            t1761 = 12 * phi1
            tfunc[..., c] = 0.5e1 / 0.16121856e8 * np.sqrt(0.41e2) * np.sqrt(0.3e1) * ((-54083120 * t1765 + 2704156 * t1749 + 2704156 + 40562340 * t1767 + 40562340 * t1763 - 16224936 * t1769 - 16224936 * t1759) * np.cos(t1761) + (t1774 + t1775) * np.cos(-t1761 + (8 * phi2)) + (t1772 + t1773) * np.cos(-t1761 + (4 * phi2)) + (t1772 - t1773) * np.cos(t1761 + (4 * phi2)) + (t1774 - t1775) * np.cos(t1761 + (8 * phi2)) + (t1776 + t1777) * np.cos((12 * phi1 - 12 * phi2)) + (-t1776 + t1777) * np.cos((12 * phi1 + 12 * phi2)))

        if Bindx == 69:
            tfunc[..., c] = 0

        if Bindx == 70:
            t1800 = np.cos(phi)
            t1799 = t1800 ** 2
            t1801 = t1800 * t1799
            t1804 = t1801 ** 2
            t1810 = t1804 ** 2
            t1788 = t1800 * t1810
            t1802 = t1799 ** 2
            t1803 = t1800 * t1802
            t1808 = t1803 ** 2
            t1790 = t1800 * t1808
            t1806 = t1802 ** 2
            t1792 = t1800 * t1806
            t1805 = t1800 * t1804
            t1818 = -276 * t1788 + 1656 * t1790 - 4140 * t1792 - 276 * t1800 + 1656 * t1801 - 4140 * t1803 + 5520 * t1805
            t1817 = 3680 * t1788 - 16192 * t1790 + 28064 * t1792 + 96 * t1800 - 1856 * t1801 + 10144 * t1803 - 23936 * t1805
            t1787 = t1805 ** 2
            t1816 = 23 - 299 * t1787 - 437 * t1799 + 2139 * t1802 - 4945 * t1804 + 6325 * t1806 - 4623 * t1808 + 1817 * t1810
            t1815 = 12 - 5980 * t1787 - 708 * t1799 + 7036 * t1802 - 27284 * t1804 + 52516 * t1806 - 53836 * t1808 + 28244 * t1810
            t1814 = 43700 * t1788 - 150328 * t1790 + 198284 * t1792 + 180 * t1800 - 4920 * t1801 + 38028 * t1803 - 124944 * t1805
            t1813 = -142025 * t1787 - 3735 * t1799 + 51225 * t1802 - 266187 * t1804 + 664791 * t1806 - 859541 * t1808 + 555427 * t1810 + 45
            tfunc[..., c] = 0.45e2 / 0.65536e5 * np.sqrt(0.3e1) * np.sqrt(0.11e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.2e1) * ((t1815 + t1817) * np.sin((phi1 - 8 * phi2)) + (t1813 + t1814) * np.sin((phi1 - 4 * phi2)) + (-t1813 + t1814) * np.sin((phi1 + 4 * phi2)) + (-t1815 + t1817) * np.sin((phi1 + 8 * phi2)) + (-t1816 + t1818) * np.sin((phi1 - 12 * phi2)) + (t1816 + t1818) * np.sin((phi1 + 12 * phi2))) * ((1 + t1800) ** (-0.1e1 / 0.2e1)) * ((1 - t1800) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t1837 = np.cos(phi)
            t1836 = t1837 ** 2
            t1840 = t1836 ** 2
            t1839 = t1837 * t1836
            t1842 = t1839 ** 2
            t1844 = t1840 ** 2
            t1841 = t1837 * t1840
            t1846 = t1841 ** 2
            t1848 = t1842 ** 2
            t1855 = 46 - 782 * t1836 + 3220 * t1840 - 5980 * t1842 + 5750 * t1844 - 2806 * t1846 + 552 * t1848
            t1825 = t1837 * t1848
            t1827 = t1837 * t1846
            t1829 = t1837 * t1844
            t1831 = t1837 * t1842
            t1854 = -299 * t1825 + 1288 * t1827 - 1955 * t1829 + 920 * t1831 + 207 * t1837 - 736 * t1839 + 575 * t1841
            t1853 = -16 + 912 * t1836 - 8160 * t1840 + 26528 * t1842 - 39504 * t1844 + 27600 * t1846 - 7360 * t1848
            t1852 = -5980 * t1825 + 22080 * t1827 - 31260 * t1829 + 21152 * t1831 - 52 * t1837 + 1056 * t1839 - 6996 * t1841
            t1851 = 2430 * t1836 - 30900 * t1840 + 140220 * t1842 - 282150 * t1844 + 257830 * t1846 - 87400 * t1848 - 30
            t1850 = -142025 * t1825 + 471960 * t1827 - 606385 * t1829 + 376200 * t1831 - 555 * t1837 + 14880 * t1839 - 114075 * t1841
            t1838 = 2 * phi1
            tfunc[..., c] = 0.9e1 / 0.32768e5 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.2e1) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.11e2) * ((-t1852 + t1853) * np.cos((-t1838 + 8 * phi2)) + (-t1850 + t1851) * np.cos((-t1838 + 4 * phi2)) + (t1850 + t1851) * np.cos((t1838 + 4 * phi2)) + (t1852 + t1853) * np.cos((t1838 + 8 * phi2)) + (t1854 + t1855) * np.cos((-t1838 + 12 * phi2)) + (-t1854 + t1855) * np.cos((t1838 + 12 * phi2)))

        if Bindx == 72:
            t1875 = np.cos(phi)
            t1874 = t1875 ** 2
            t1877 = t1875 * t1874
            t1880 = t1877 ** 2
            t1886 = t1880 ** 2
            t1863 = t1875 * t1886
            t1878 = t1874 ** 2
            t1879 = t1875 * t1878
            t1884 = t1879 ** 2
            t1865 = t1875 * t1884
            t1882 = t1878 ** 2
            t1867 = t1875 * t1882
            t1881 = t1875 * t1880
            t1894 = 9108 * t1863 - 44528 * t1865 + 86020 * t1867 - 1012 * t1875 - 4048 * t1877 + 35420 * t1879 - 80960 * t1881
            t1862 = t1881 ** 2
            t1893 = -759 - 3289 * t1862 + 11385 * t1874 - 42251 * t1878 + 67045 * t1880 - 46805 * t1882 + 5819 * t1884 + 8855 * t1886
            t1892 = -65780 * t1862 + 4180 * t1874 - 29244 * t1878 + 43172 * t1880 + 71068 * t1882 - 240900 * t1884 + 217580 * t1886 - 76
            t1891 = -121440 * t1863 + 485760 * t1865 - 763104 * t1867 - 2208 * t1875 + 41088 * t1877 - 231456 * t1879 + 591360 * t1881
            t1890 = -1442100 * t1863 + 4999280 * t1865 - 6696740 * t1867 - 7020 * t1875 + 183120 * t1877 - 1359420 * t1879 + 4322880 * t1881
            t1889 = -1562275 * t1862 - 34365 * t1874 + 461655 * t1878 - 2414745 * t1880 + 6209865 * t1882 - 8404935 * t1884 + 5744365 * t1886 + 435
            t1876 = 3 * phi1
            tfunc[..., c] = 0.9e1 / 0.131072e6 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * np.sqrt(0.2e1) * (-(t1891 - t1892) * np.sin((-t1876 + 8 * phi2)) - (-t1889 + t1890) * np.sin((-t1876 + 4 * phi2)) + (t1889 + t1890) * np.sin((t1876 + 4 * phi2)) + (t1891 + t1892) * np.sin((t1876 + 8 * phi2)) - (t1893 + t1894) * np.sin((-t1876 + 12 * phi2)) + (-t1893 + t1894) * np.sin((t1876 + 12 * phi2))) * ((1 + t1875) ** (-0.1e1 / 0.2e1)) * ((1 - t1875) ** (-0.1e1 / 0.2e1))

        if Bindx == 73:
            t1913 = np.cos(phi)
            t1912 = t1913 ** 2
            t1916 = t1912 ** 2
            t1915 = t1913 * t1912
            t1918 = t1915 ** 2
            t1920 = t1916 ** 2
            t1917 = t1913 * t1916
            t1922 = t1917 ** 2
            t1924 = t1918 ** 2
            t1931 = 1012 - 11132 * t1912 + 22264 * t1916 + 2024 * t1918 - 43516 * t1920 + 41492 * t1922 - 12144 * t1924
            t1901 = t1913 * t1924
            t1903 = t1913 * t1922
            t1905 = t1913 * t1920
            t1907 = t1913 * t1918
            t1930 = -3289 * t1901 - 2530 * t1903 + 43769 * t1905 - 83996 * t1907 + 759 * t1913 - 18722 * t1915 + 64009 * t1917
            t1929 = 65780 * t1901 - 103224 * t1903 - 86196 * t1905 + 254960 * t1907 - 2572 * t1913 + 41160 * t1915 - 169908 * t1917
            t1928 = -8160 * t1912 + 80064 * t1916 - 322496 * t1918 + 598560 * t1920 - 510048 * t1922 + 161920 * t1924 + 160
            t1927 = -65700 * t1912 + 780360 * t1916 - 3347496 * t1918 + 6460380 * t1920 - 5749172 * t1922 + 1922800 * t1924 + 876
            t1926 = -1562275 * t1901 + 4643562 * t1903 - 5292925 * t1905 + 2917260 * t1907 - 3891 * t1913 + 100650 * t1915 - 804429 * t1917
            t1914 = 4 * phi1
            tfunc[..., c] = 0.45e2 / 0.65536e5 * np.sqrt(0.3e1) * np.sqrt(0.19e2) * ((t1928 - t1929) * np.cos((-t1914 + 8 * phi2)) + (t1928 + t1929) * np.cos((t1914 + 8 * phi2)) + (-t1930 + t1931) * np.cos((-t1914 + 12 * phi2)) + (t1930 + t1931) * np.cos((t1914 + 12 * phi2)) + (t1926 + t1927) * np.cos((4 * phi1 - 4 * phi2)) + (-t1926 + t1927) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 74:
            t1951 = np.cos(phi)
            t1950 = t1951 ** 2
            t1953 = t1951 * t1950
            t1956 = t1953 ** 2
            t1962 = t1956 ** 2
            t1939 = t1951 * t1962
            t1954 = t1950 ** 2
            t1955 = t1951 * t1954
            t1960 = t1955 ** 2
            t1941 = t1951 * t1960
            t1958 = t1954 ** 2
            t1943 = t1951 * t1958
            t1957 = t1951 * t1956
            t1970 = -15180 * t1939 + 40480 * t1941 - 7084 * t1943 + 3036 * t1951 - 32384 * t1953 + 83996 * t1955 - 72864 * t1957
            t1938 = t1957 ** 2
            t1969 = -3289 * t1938 - 8855 * t1950 - 3795 * t1954 + 75141 * t1956 - 129789 * t1958 + 82731 * t1960 - 13409 * t1962 + 1265
            t1968 = 202400 * t1939 - 647680 * t1941 + 756128 * t1943 - 544 * t1951 + 2816 * t1953 + 63968 * t1955 - 377088 * t1957
            t1967 = -65780 * t1938 + 20116 * t1950 - 160988 * t1954 + 503844 * t1956 - 703236 * t1958 + 375100 * t1960 + 31372 * t1962 - 428
            t1966 = -1562275 * t1938 - 3053 * t1950 + 88895 * t1954 - 870585 * t1956 + 3394065 * t1958 - 6060791 * t1960 + 5013701 * t1962 + 43
            t1965 = 2403500 * t1939 - 8460320 * t1941 + 11611660 * t1943 + 15940 * t1951 - 376960 * t1953 + 2589188 * t1955 - 7783008 * t1957
            t1952 = 5 * phi1
            tfunc[..., c] = 0.45e2 / 0.131072e6 * np.sqrt(0.3e1) * np.sqrt(0.2e1) * np.sqrt(0.19e2) * (-(t1967 + t1968) * np.sin((-t1952 + 8 * phi2)) - (t1965 + t1966) * np.sin((-t1952 + 4 * phi2)) + (t1965 - t1966) * np.sin((t1952 + 4 * phi2)) + (-t1967 + t1968) * np.sin((t1952 + 8 * phi2)) - (-t1969 + t1970) * np.sin((-t1952 + 12 * phi2)) + (t1969 + t1970) * np.sin((t1952 + 12 * phi2))) * ((1 + t1951) ** (-0.1e1 / 0.2e1)) * ((1 - t1951) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t1989 = np.cos(phi)
            t1988 = t1989 ** 2
            t1991 = t1989 * t1988
            t1994 = t1991 ** 2
            t2000 = t1994 ** 2
            t1977 = t1989 * t2000
            t1992 = t1988 ** 2
            t1993 = t1989 * t1992
            t1998 = t1993 ** 2
            t1979 = t1989 * t1998
            t1996 = t1992 ** 2
            t1981 = t1989 * t1996
            t1983 = t1989 * t1994
            t2007 = -3289 * t1977 - 30360 * t1979 + 91839 * t1981 - 54648 * t1983 - 5819 * t1989 + 36432 * t1991 - 34155 * t1993
            t2006 = 1518 * t1988 + 47564 * t1992 - 118404 * t1994 + 77418 * t1996 + 11638 * t1998 - 18216 * t2000 - 1518
            t2005 = 20336 * t1988 - 99616 * t1992 + 82272 * t1994 + 276816 * t1996 - 522192 * t1998 + 242880 * t2000 - 496
            t2004 = -65780 * t1977 - 129536 * t1979 + 658636 * t1981 - 742176 * t1983 + 4164 * t1989 - 63456 * t1991 + 338148 * t1993
            t2003 = -1562275 * t1977 + 3730232 * t1979 - 2590555 * t1981 + 28120 * t1983 + 7239 * t1989 - 138320 * t1991 + 525559 * t1993
            t2002 = -130910 * t1988 + 1390420 * t1992 - 5531356 * t1994 + 10201670 * t1996 - 8816038 * t1998 + 2884200 * t2000 + 2014
            t1990 = 6 * phi1
            tfunc[..., c] = -0.45e2 / 0.32768e5 * np.sqrt(0.3e1) * ((t2004 + t2005) * np.cos((-t1990 + 8 * phi2)) + (t2002 + t2003) * np.cos((-t1990 + 4 * phi2)) + (t2002 - t2003) * np.cos((t1990 + 4 * phi2)) + (-t2004 + t2005) * np.cos((t1990 + 8 * phi2)) + (t2006 - t2007) * np.cos((-t1990 + 12 * phi2)) + (t2006 + t2007) * np.cos((t1990 + 12 * phi2)))

        if Bindx == 76:
            t2027 = np.cos(phi)
            t2026 = t2027 ** 2
            t2029 = t2027 * t2026
            t2032 = t2029 ** 2
            t2038 = t2032 ** 2
            t2015 = t2027 * t2038
            t2030 = t2026 ** 2
            t2031 = t2027 * t2030
            t2036 = t2031 ** 2
            t2017 = t2027 * t2036
            t2034 = t2030 ** 2
            t2019 = t2027 * t2034
            t2033 = t2027 * t2032
            t2046 = 21252 * t2015 + 14168 * t2017 - 162932 * t2019 + 9108 * t2027 - 34408 * t2029 - 29348 * t2031 + 182160 * t2033
            t2014 = t2033 ** 2
            t2045 = -3289 * t2014 - 8855 * t2026 + 90321 * t2030 - 143451 * t2032 + 6831 * t2034 + 107019 * t2036 - 46805 * t2038 - 1771
            t2044 = -283360 * t2015 + 566720 * t2017 - 72352 * t2019 + 10144 * t2027 - 117824 * t2029 + 428512 * t2031 - 531840 * t2033
            t2043 = -65780 * t2014 + 980 * t2026 - 100492 * t2030 + 599844 * t2032 - 1269204 * t2034 + 1082620 * t2036 - 247940 * t2038 - 28
            t2042 = -3364900 * t2015 + 12113640 * t2017 - 16989420 * t2019 - 31540 * t2027 + 640680 * t2029 - 4043580 * t2031 + 11675120 * t2033
            t2041 = -1562275 * t2014 + 128915 * t2026 - 1110645 * t2030 + 3057575 * t2032 - 2494795 * t2034 - 1934295 * t2036 + 3917705 * t2038 - 2185
            t2028 = 7 * phi1
            tfunc[..., c] = 0.9e1 / 0.65536e5 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * (-(-t2043 + t2044) * np.sin((-t2028 + 8 * phi2)) - (-t2041 + t2042) * np.sin((-t2028 + 4 * phi2)) + (t2041 + t2042) * np.sin((t2028 + 4 * phi2)) + (t2043 + t2044) * np.sin((t2028 + 8 * phi2)) - (t2045 + t2046) * np.sin((-t2028 + 12 * phi2)) + (-t2045 + t2046) * np.sin((t2028 + 12 * phi2))) * ((1 + t2027) ** (-0.1e1 / 0.2e1)) * ((1 - t2027) ** (-0.1e1 / 0.2e1))

        if Bindx == 77:
            t2065 = np.cos(phi)
            t2064 = t2065 ** 2
            t2068 = t2064 ** 2
            t2067 = t2065 * t2064
            t2070 = t2067 ** 2
            t2072 = t2068 ** 2
            t2069 = t2065 * t2068
            t2074 = t2069 ** 2
            t2076 = t2070 ** 2
            t2083 = -26312 * t2064 + 101200 * t2068 + 12144 * t2070 - 188232 * t2072 + 78936 * t2074 + 24288 * t2076 - 2024
            t2053 = t2065 * t2076
            t2055 = t2065 * t2074
            t2057 = t2065 * t2072
            t2059 = t2065 * t2070
            t2082 = 3289 * t2053 + 69322 * t2055 - 31625 * t2057 - 179124 * t2059 - 12903 * t2065 + 4554 * t2067 + 146487 * t2069
            t2081 = -65780 * t2053 - 455400 * t2055 + 1156980 * t2057 - 743856 * t2059 - 13236 * t2065 + 77848 * t2067 + 39348 * t2069
            t2080 = -46656 * t2064 + 346240 * t2068 - 859776 * t2070 + 635328 * t2072 + 242880 * t2074 - 323840 * t2076 + 1728
            t2079 = 193800 * t2064 - 1901520 * t2068 + 7659280 * t2070 - 14215800 * t2072 + 12113640 * t2074 - 3845600 * t2076 - 3800
            t2078 = -1562275 * t2053 + 2451570 * t2055 + 2047155 * t2057 - 6055300 * t2059 + 61085 * t2065 - 977550 * t2067 + 4035315 * t2069
            t2066 = 8 * phi1
            tfunc[..., c] = -0.9e1 / 0.65536e5 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.2e1) * ((-t2078 + t2079) * np.cos((-t2066 + 4 * phi2)) + (t2078 + t2079) * np.cos((t2066 + 4 * phi2)) + (-t2082 + t2083) * np.cos((-t2066 + 12 * phi2)) + (t2082 + t2083) * np.cos((t2066 + 12 * phi2)) + (t2080 - t2081) * np.cos((8 * phi1 - 8 * phi2)) + (t2080 + t2081) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 78:
            t2103 = np.cos(phi)
            t2102 = t2103 ** 2
            t2105 = t2103 * t2102
            t2108 = t2105 ** 2
            t2114 = t2108 ** 2
            t2091 = t2103 * t2114
            t2106 = t2102 ** 2
            t2107 = t2103 * t2106
            t2112 = t2107 ** 2
            t2093 = t2103 * t2112
            t2110 = t2106 ** 2
            t2095 = t2103 * t2110
            t2109 = t2103 * t2108
            t2122 = 2484 * t2091 + 12696 * t2093 - 21252 * t2095 - 1564 * t2103 - 3496 * t2105 + 23276 * t2107 - 12144 * t2109
            t2090 = t2109 ** 2
            t2121 = 207 - 299 * t2090 + 4347 * t2102 - 8349 * t2106 - 17457 * t2108 + 32637 * t2110 - 2783 * t2112 - 8303 * t2114
            t2120 = 5980 * t2090 + 9348 * t2102 - 39708 * t2106 + 32532 * t2108 + 83388 * t2110 - 147444 * t2112 + 56396 * t2114 - 492
            t2119 = -33120 * t2091 + 13248 * t2093 + 124128 * t2095 - 480 * t2103 - 8768 * t2105 + 74336 * t2107 - 169344 * t2109
            t2118 = -393300 * t2091 + 1457832 * t2093 - 2053596 * t2095 - 2052 * t2103 + 46056 * t2105 - 403788 * t2107 + 1348848 * t2109
            t2117 = -142025 * t2090 + 59641 * t2102 - 416271 * t2106 + 1107605 * t2108 - 1258769 * t2110 + 427899 * t2112 + 223307 * t2114 - 1387
            t2104 = 9 * phi1
            tfunc[..., c] = -0.45e2 / 0.65536e5 * np.sqrt(0.3e1) * np.sqrt(0.11e2) * (-(t2119 + t2120) * np.sin((-t2104 + 8 * phi2)) - (-t2117 + t2118) * np.sin((-t2104 + 4 * phi2)) + (t2117 + t2118) * np.sin((t2104 + 4 * phi2)) + (t2119 - t2120) * np.sin((t2104 + 8 * phi2)) - (t2121 + t2122) * np.sin((-t2104 + 12 * phi2)) + (-t2121 + t2122) * np.sin((t2104 + 12 * phi2))) * ((1 + t2103) ** (-0.1e1 / 0.2e1)) * ((1 - t2103) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t2141 = np.cos(phi)
            t2140 = t2141 ** 2
            t2144 = t2140 ** 2
            t2143 = t2141 * t2140
            t2146 = t2143 ** 2
            t2148 = t2144 ** 2
            t2145 = t2141 * t2144
            t2150 = t2145 ** 2
            t2152 = t2146 ** 2
            t2159 = 10 + 310 * t2140 + 220 * t2144 - 1716 * t2146 + 66 * t2148 + 990 * t2150 + 120 * t2152
            t2158 = -48 + 432 * t2140 + 352 * t2144 - 5664 * t2146 + 8208 * t2148 - 1680 * t2150 - 1600 * t2152
            t2129 = t2141 * t2152
            t2131 = t2141 * t2150
            t2133 = t2141 * t2148
            t2135 = t2141 * t2146
            t2157 = -13 * t2129 - 472 * t2131 - 1045 * t2133 + 1320 * t2135 - 87 * t2141 - 528 * t2143 + 825 * t2145
            t2156 = 38 - 1254 * t2140 - 1596 * t2144 + 30932 * t2146 - 71250 * t2148 + 62130 * t2150 - 19000 * t2152
            t2155 = -260 * t2129 - 3456 * t2131 + 5052 * t2133 + 1632 * t2135 - 108 * t2141 + 1568 * t2143 - 4428 * t2145
            t2154 = -6175 * t2129 + 3192 * t2131 + 37449 * t2133 - 70984 * t2135 + 1235 * t2141 - 13680 * t2143 + 48963 * t2145
            t2142 = 10 * phi1
            tfunc[..., c] = 0.45e2 / 0.32768e5 * np.sqrt(0.3e1) * np.sqrt(0.11e2) * np.sqrt(0.23e2) * ((-t2155 + t2158) * np.cos((-t2142 + 8 * phi2)) + (-t2154 + t2156) * np.cos((-t2142 + 4 * phi2)) + (t2154 + t2156) * np.cos((t2142 + 4 * phi2)) + (t2155 + t2158) * np.cos((t2142 + 8 * phi2)) + (t2157 + t2159) * np.cos((-t2142 + 12 * phi2)) + (-t2157 + t2159) * np.cos((t2142 + 12 * phi2)))

        if Bindx == 80:
            t2179 = np.cos(phi)
            t2178 = t2179 ** 2
            t2181 = t2179 * t2178
            t2184 = t2181 ** 2
            t2190 = t2184 ** 2
            t2167 = t2179 * t2190
            t2182 = t2178 ** 2
            t2183 = t2179 * t2182
            t2188 = t2183 ** 2
            t2169 = t2179 * t2188
            t2186 = t2182 ** 2
            t2171 = t2179 * t2186
            t2185 = t2179 * t2184
            t2198 = -132 * t2167 - 1408 * t2169 - 836 * t2171 - 108 * t2179 - 992 * t2181 + 308 * t2183 + 3168 * t2185
            t2197 = 1760 * t2167 + 2816 * t2169 - 13600 * t2171 + 416 * t2179 - 2560 * t2181 + 1184 * t2183 + 9984 * t2185
            t2166 = t2185 ** 2
            t2196 = -11 - 13 * t2166 - 451 * t2178 - 1023 * t2182 + 2409 * t2184 + 1551 * t2186 - 1881 * t2188 - 581 * t2190
            t2195 = -92 - 260 * t2166 - 92 * t2178 + 4660 * t2182 - 11532 * t2184 + 5100 * t2186 + 6508 * t2188 - 4292 * t2190
            t2194 = 20900 * t2167 - 80256 * t2169 + 109668 * t2171 - 2356 * t2179 + 12768 * t2181 - 6612 * t2183 - 54112 * t2185
            t2193 = 6175 * t2166 - 8303 * t2178 + 51813 * t2182 - 125267 * t2184 + 136363 * t2186 - 58653 * t2188 - 2489 * t2190 + 361
            t2180 = 11 * phi1
            tfunc[..., c] = -0.45e2 / 0.131072e6 * np.sqrt(0.3e1) * np.sqrt(0.2e1) * np.sqrt(0.11e2) * np.sqrt(0.23e2) * (-(t2195 + t2197) * np.sin((-t2180 + 8 * phi2)) - (-t2193 + t2194) * np.sin((-t2180 + 4 * phi2)) + (t2193 + t2194) * np.sin((t2180 + 4 * phi2)) + (-t2195 + t2197) * np.sin((t2180 + 8 * phi2)) - (-t2196 + t2198) * np.sin((-t2180 + 12 * phi2)) + (t2196 + t2198) * np.sin((t2180 + 12 * phi2))) * ((1 + t2179) ** (-0.1e1 / 0.2e1)) * ((1 - t2179) ** (-0.1e1 / 0.2e1))

        if Bindx == 81:
            t2217 = np.cos(phi)
            t2216 = t2217 ** 2
            t2220 = t2216 ** 2
            t2219 = t2217 * t2216
            t2222 = t2219 ** 2
            t2224 = t2220 ** 2
            t2221 = t2217 * t2220
            t2226 = t2221 ** 2
            t2228 = t2222 ** 2
            t2235 = 12 + 636 * t2216 + 3080 * t2220 + 792 * t2222 - 4356 * t2224 - 2068 * t2226 - 144 * t2228
            t2234 = -160 - 2080 * t2216 + 8000 * t2220 + 960 * t2222 - 14880 * t2224 + 6240 * t2226 + 1920 * t2228
            t2205 = t2217 * t2228
            t2207 = t2217 * t2226
            t2209 = t2217 * t2224
            t2211 = t2217 * t2222
            t2233 = -13 * t2205 - 714 * t2207 - 3795 * t2209 - 2508 * t2211 + 131 * t2217 + 1782 * t2219 + 3069 * t2221
            t2232 = -260 * t2205 - 5480 * t2207 + 2500 * t2209 + 14160 * t2211 + 1020 * t2217 - 360 * t2219 - 11580 * t2221
            t2231 = -1900 + 20900 * t2216 - 41800 * t2220 - 3800 * t2222 + 81700 * t2224 - 77900 * t2226 + 22800 * t2228
            t2230 = -6175 * t2205 - 4750 * t2207 + 82175 * t2209 - 157700 * t2211 + 1425 * t2217 - 35150 * t2219 + 120175 * t2221
            t2218 = 12 * phi1
            tfunc[..., c] = 0.9e1 / 0.65536e5 * np.sqrt(0.3e1) * np.sqrt(0.23e2) * np.sqrt(0.11e2) * ((t2232 + t2234) * np.cos((-t2218 + 8 * phi2)) + (t2230 + t2231) * np.cos((-t2218 + 4 * phi2)) + (-t2230 + t2231) * np.cos((t2218 + 4 * phi2)) + (-t2232 + t2234) * np.cos((t2218 + 8 * phi2)) + (-t2233 + t2235) * np.cos((12 * phi1 - 12 * phi2)) + (t2233 + t2235) * np.cos((12 * phi1 + 12 * phi2)))

        if Bindx == 82:
            t2254 = np.cos(phi)
            t2253 = t2254 ** 2
            t2257 = t2253 ** 2
            t2258 = t2254 * t2257
            t2262 = t2258 ** 2
            t2245 = t2254 * t2262
            t2256 = t2254 * t2253
            t2275 = -4 * t2245 + 4 * t2256
            t2259 = t2256 ** 2
            t2264 = t2259 ** 2
            t2265 = t2254 * t2264
            t2274 = t2254 - t2265
            t2242 = t2254 * t2265
            t2273 = 1 - t2242
            t2260 = t2257 ** 2
            t2247 = t2254 * t2260
            t2272 = -20 * t2247 + 20 * t2258 + 4 * t2274 - 4 * t2275
            t2271 = 208 * t2245 + 572 * t2247 - 12 * t2254 - 208 * t2256 - 572 * t2258 + 12 * t2265
            t2270 = 1760 * t2247 - 1760 * t2258 + 160 * t2274 + 160 * t2275
            t2269 = t2253 - 19 * t2257 + 45 * t2259 - 45 * t2260 + 19 * t2262 - t2264 + t2273
            t2268 = 65 * t2253 + 429 * t2257 + 429 * t2259 - 429 * t2260 - 429 * t2262 - 65 * t2264 + t2273
            t2267 = 20 - 20 * t2242 + 500 * t2253 - 220 * t2257 - 1980 * t2259 + 1980 * t2260 + 220 * t2262 - 500 * t2264
            t2255 = 13 * phi1
            tfunc[..., c] = -0.9e1 / 0.131072e6 * np.sqrt(0.3e1) * np.sqrt(0.23e2) * np.sqrt(0.11e2) * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (-(t2268 + t2271) * np.sin((-t2255 + 12 * phi2)) + (-t2268 + t2271) * np.sin((t2255 + 12 * phi2)) - (-t2267 + t2270) * np.sin((-t2255 + 8 * phi2)) + (t2267 + t2270) * np.sin((t2255 + 8 * phi2)) - 0.475e3 * (-t2269 + t2272) * np.sin((-t2255 + 4 * phi2)) + 0.475e3 * (t2269 + t2272) * np.sin((t2255 + 4 * phi2))) * ((1 + t2254) ** (-0.1e1 / 0.2e1)) * ((1 - t2254) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t2286 = np.cos(phi)
            t2285 = t2286 ** 2
            t2288 = t2285 ** 2
            t2289 = t2285 * t2288
            t2292 = t2289 ** 2
            t2290 = t2288 ** 2
            t2281 = t2285 * t2290
            t2279 = t2285 * t2292
            tfunc[..., c] = 0.29e2 / 0.393216e6 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * np.sqrt(0.17e2) * (-(10029150 * t2279) + (33801950 * t2292) - (44618574 * t2281) + (29099070 * t2290) - (9699690 * t2289) + (1531530 * t2288) - (90090 * t2285) + 0.858e3 + ((8436285 * t2279 - 30933045 * t2292 + 44431101 * t2281 - 31519917 * t2290 + 11419551 * t2289 - 1957527 * t2288 + 124839 * t2285 - 1287) * np.cos((4 * phi2)) + (1533870 * t2279 - 6987630 * t2292 + 12714078 * t2281 - 11658894 * t2290 + 5561946 * t2289 - 1270074 * t2288 + 108186 * t2285 - 1482) * np.cos((8 * phi2)) + (58995 * t2279 - 356155 * t2292 + 898035 * t2281 - 1212675 * t2290 + 928625 * t2289 - 386745 * t2288 + 72105 * t2285 - 2185) * np.cos((12 * phi2))) * np.sqrt(0.2e1))

        if Bindx == 84:
            t2315 = np.cos(phi)
            t2313 = t2315 ** 2
            t2317 = t2313 ** 2
            t2316 = t2315 * t2313
            t2319 = t2316 ** 2
            t2321 = t2317 ** 2
            t2318 = t2315 * t2317
            t2323 = t2318 ** 2
            t2325 = t2319 ** 2
            t2320 = t2315 * t2319
            t2327 = t2320 ** 2
            t2334 = 83226 * t2313 - 1305018 * t2317 + 7613034 * t2319 - 21013278 * t2321 + 29620734 * t2323 - 20622030 * t2325 + 5624190 * t2327 - 858
            t2333 = -144210 * t2313 + 773490 * t2317 - 1857250 * t2319 + 2425350 * t2321 - 1796070 * t2323 + 712310 * t2325 - 117990 * t2327 + 4370
            t2332 = -144248 * t2313 + 1693432 * t2317 - 7415928 * t2319 + 15545192 * t2321 - 16952104 * t2323 + 9316840 * t2325 - 2045160 * t2327 + 1976
            t2300 = t2315 * t2327
            t2302 = t2315 * t2325
            t2304 = t2315 * t2323
            t2306 = t2315 * t2321
            t2331 = -137655 * t2300 + 849965 * t2302 - 2209035 * t2304 + 3113625 * t2306 + 24035 * t2315 - 281865 * t2316 + 1186455 * t2318 - 2545525 * t2320
            t2330 = -3579030 * t2300 + 17554290 * t2302 - 35165390 * t2304 + 36735322 * t2306 + 36062 * t2315 - 882778 * t2316 + 6408662 * t2318 - 21107138 * t2320
            t2329 = -19684665 * t2300 + 81550755 * t2302 - 135917925 * t2304 + 116078391 * t2306 + 41613 * t2315 - 1346631 * t2316 + 12724569 * t2318 - 53446107 * t2320
            tfunc[..., c] = -0.29e2 / 0.131072e6 * np.sqrt(0.17e2) * ((-21441420 * t2318 + 2102100 * t2316 - 60060 * t2315 + 46802700 * t2300 - 182010500 * t2302 + 283936380 * t2304 - 226326100 * t2306 + 96996900 * t2320) * np.sin(phi1) + (t2330 - t2332) * np.sin(phi1 - (8 * phi2)) + (t2329 + t2334) * np.sin(phi1 - (4 * phi2)) + (t2329 - t2334) * np.sin(phi1 + (4 * phi2)) + (t2330 + t2332) * np.sin(phi1 + (8 * phi2)) + (t2331 - t2333) * np.sin(phi1 - (12 * phi2)) + (t2331 + t2333) * np.sin(phi1 + (12 * phi2))) * ((1 + t2315) ** (-0.1e1 / 0.2e1)) * ((1 - t2315) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t2355 = np.cos(phi)
            t2354 = t2355 ** 2
            t2357 = t2355 * t2354
            t2360 = t2357 ** 2
            t2361 = t2355 * t2360
            t2342 = t2361 ** 2
            t2358 = t2354 ** 2
            t2362 = t2358 ** 2
            t2359 = t2355 * t2358
            t2364 = t2359 ** 2
            t2366 = t2360 ** 2
            t2374 = 137655 * t2342 - 67735 * t2354 + 168245 * t2358 + 98325 * t2360 - 797525 * t2362 + 1090315 * t2364 - 631465 * t2366 + 2185
            t2343 = t2355 * t2366
            t2345 = t2355 * t2364
            t2347 = t2355 * t2362
            t2373 = -235980 * t2343 + 1223600 * t2345 - 2578300 * t2347 - 43700 * t2355 + 454480 * t2357 - 1616900 * t2359 + 2796800 * t2361
            t2372 = -11248380 * t2343 + 35764080 * t2345 - 43320684 * t2347 - 25476 * t2355 + 790416 * t2357 - 6839316 * t2359 + 24879360 * t2361
            t2371 = -4090320 * t2343 + 16081600 * t2345 - 24590864 * t2347 - 44080 * t2355 + 1020224 * t2357 - 6606832 * t2359 + 18230272 * t2361
            t2370 = 3579030 * t2342 + 110618 * t2354 - 1380046 * t2358 + 6900610 * t2360 - 17083394 * t2362 + 22020430 * t2364 - 14145690 * t2366 - 1558
            t2369 = 19684665 * t2342 + 279015 * t2354 - 4317093 * t2358 + 25055547 * t2360 - 69396987 * t2362 + 99000165 * t2364 - 70302375 * t2366 - 2937
            t2356 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.524288e6 * np.sqrt(0.13e2) * np.sqrt(0.17e2) * ((4620 - 49244580 * t2360 + 7932540 * t2358 - 475860 * t2354 - 46802700 * t2342 + 161209300 * t2366 - 217372540 * t2364 + 144749220 * t2362) * np.cos(t2356) + (t2370 + t2371) * np.cos(-t2356 + (8 * phi2)) + (t2369 + t2372) * np.cos(-t2356 + (4 * phi2)) + (t2369 - t2372) * np.cos(t2356 + (4 * phi2)) + (t2370 - t2371) * np.cos(t2356 + (8 * phi2)) + (t2373 + t2374) * np.cos(-t2356 + (12 * phi2)) + (-t2373 + t2374) * np.cos(t2356 + (12 * phi2)))

        if Bindx == 86:
            t2396 = np.cos(phi)
            t2395 = t2396 ** 2
            t2399 = t2395 ** 2
            t2398 = t2396 * t2395
            t2401 = t2398 ** 2
            t2403 = t2399 ** 2
            t2400 = t2396 * t2399
            t2405 = t2400 ** 2
            t2407 = t2401 ** 2
            t2402 = t2396 * t2401
            t2409 = t2402 ** 2
            t2416 = -126730 * t2395 + 1630010 * t2399 - 6402050 * t2401 + 11689750 * t2403 - 11147870 * t2405 + 5414430 * t2407 - 1061910 * t2409 + 4370
            t2415 = -865458 * t2395 + 13063842 * t2399 - 73723914 * t2401 + 197967726 * t2403 - 273162582 * t2405 + 187328790 * t2407 - 50617710 * t2409 + 9306
            t2414 = -975384 * t2395 + 11273688 * t2399 - 50659320 * t2401 + 112284072 * t2403 - 131299272 * t2405 + 77768520 * t2407 - 18406440 * t2409 + 14136
            t2382 = t2396 * t2409
            t2384 = t2396 * t2407
            t2386 = t2396 * t2405
            t2388 = t2396 * t2403
            t2413 = 10737090 * t2382 - 39710190 * t2384 + 54314730 * t2386 - 31494438 * t2388 + 33630 * t2396 - 660402 * t2398 + 2172726 * t2400 + 4606854 * t2402
            t2412 = 412965 * t2382 - 1352515 * t2384 + 404225 * t2386 + 3812825 * t2388 + 163875 * t2396 - 1531685 * t2398 + 4787335 * t2400 - 6697025 * t2402
            t2411 = 59053995 * t2382 - 233403885 * t2384 + 373143375 * t2386 - 308275209 * t2388 - 112563 * t2396 + 3526677 * t2398 - 32902551 * t2400 + 138970161 * t2402
            t2397 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.786432e6 * np.sqrt(0.3e1) * np.sqrt(0.13e2) * ((-338743020 * t2402 + 77833140 * t2400 - 7932540 * t2398 + 235620 * t2396 - 140408100 * t2382 + 566832700 * t2384 - 918372980 * t2386 + 760555180 * t2388) * np.sin(t2397) - (t2413 + t2414) * np.sin(-t2397 + (8 * phi2)) - (t2411 + t2415) * np.sin(-t2397 + (4 * phi2)) + (t2411 - t2415) * np.sin(t2397 + (4 * phi2)) + (t2413 - t2414) * np.sin(t2397 + (8 * phi2)) - (t2412 + t2416) * np.sin(-t2397 + (12 * phi2)) + (t2412 - t2416) * np.sin(t2397 + (12 * phi2))) * ((1 + t2396) ** (-0.1e1 / 0.2e1)) * ((1 - t2396) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t2437 = np.cos(phi)
            t2436 = t2437 ** 2
            t2439 = t2437 * t2436
            t2442 = t2439 ** 2
            t2443 = t2437 * t2442
            t2424 = t2443 ** 2
            t2440 = t2436 ** 2
            t2444 = t2440 ** 2
            t2441 = t2437 * t2440
            t2446 = t2441 ** 2
            t2448 = t2442 ** 2
            t2456 = 45885 * t2424 - 54625 * t2436 + 369265 * t2440 - 928625 * t2442 + 1037875 * t2444 - 461035 * t2446 - 10925 * t2448 + 2185
            t2425 = t2437 * t2448
            t2427 = t2437 * t2446
            t2429 = t2437 * t2444
            t2455 = -157320 * t2425 + 594320 * t2427 - 786600 * t2429 + 17480 * t2437 - 104880 * t2439 + 87400 * t2441 + 349600 * t2443
            t2454 = -2726880 * t2425 + 9369280 * t2427 - 12403808 * t2429 - 16416 * t2437 + 366016 * t2439 - 2528672 * t2441 + 7940480 * t2443
            t2453 = -7498920 * t2425 + 24227280 * t2427 - 30111048 * t2429 - 21656 * t2437 + 631184 * t2439 - 5166328 * t2441 + 17935392 * t2443
            t2452 = 1193010 * t2424 - 96330 * t2436 + 917738 * t2440 - 2872154 * t2442 + 3198574 * t2444 + 214130 * t2446 - 2556450 * t2448 + 1482
            t2451 = 6561555 * t2424 + 67729 * t2436 - 1030561 * t2440 + 6149217 * t2442 - 18088323 * t2444 + 27904635 * t2446 - 21559395 * t2448 - 761
            t2438 = 4 * phi1
            tfunc[..., c] = 0.29e2 / 0.524288e6 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.13e2) * np.sqrt(0.11e2) * ((2380 - 15600900 * t2424 + 57203300 * t2448 - 82164740 * t2446 + 58288580 * t2444 - 21117740 * t2442 + 3619980 * t2440 - 230860 * t2436) * np.cos(t2438) + (t2452 + t2454) * np.cos(-t2438 + (8 * phi2)) + (t2452 - t2454) * np.cos(t2438 + (8 * phi2)) + (t2455 + t2456) * np.cos(-t2438 + (12 * phi2)) + (-t2455 + t2456) * np.cos(t2438 + (12 * phi2)) + (t2451 + t2453) * np.cos((4 * phi1 - 4 * phi2)) + (t2451 - t2453) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 88:
            t2478 = np.cos(phi)
            t2477 = t2478 ** 2
            t2481 = t2477 ** 2
            t2480 = t2478 * t2477
            t2483 = t2480 ** 2
            t2485 = t2481 ** 2
            t2482 = t2478 * t2481
            t2487 = t2482 ** 2
            t2489 = t2483 ** 2
            t2484 = t2478 * t2483
            t2491 = t2484 ** 2
            t2498 = 230 - 4830 * t2477 + 25070 * t2481 - 46230 * t2483 + 22770 * t2485 + 25990 * t2487 - 33350 * t2489 + 10350 * t2491
            t2464 = t2478 * t2491
            t2466 = t2478 * t2489
            t2468 = t2478 * t2487
            t2470 = t2478 * t2485
            t2497 = 2415 * t2464 + 6095 * t2466 - 51405 * t2468 + 95795 * t2470 - 575 * t2478 - 575 * t2480 + 23805 * t2482 - 75555 * t2484
            t2496 = 62790 * t2464 - 80730 * t2466 - 226274 * t2468 + 578334 * t2470 + 1674 * t2478 - 33718 * t2480 + 197170 * t2482 - 499246 * t2484
            t2495 = -1464 * t2477 + 25976 * t2481 - 184920 * t2483 + 578248 * t2485 - 877864 * t2487 + 639400 * t2489 - 179400 * t2491 + 24
            t2494 = 345345 * t2464 - 1233375 * t2466 + 1732797 * t2468 - 1215555 * t2470 - 241 * t2478 + 7695 * t2480 - 85421 * t2482 + 448755 * t2484
            t2493 = 11050 * t2477 - 154330 * t2481 + 817426 * t2483 - 2090310 * t2485 + 2782494 * t2487 - 1859550 * t2489 + 493350 * t2491 - 130
            t2479 = 5 * phi1
            tfunc[..., c] = 0.29e2 / 0.262144e6 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.19e2) * np.sqrt(0.13e2) * np.sqrt(0.11e2) * ((-6207516 * t2468 + 5551588 * t2470 - 2676548 * t2484 + 666876 * t2482 - 73780 * t2480 + 2380 * t2478 - 821100 * t2464 + 3558100 * t2466) * np.sin(t2479) - (t2495 + t2496) * np.sin(-t2479 + (8 * phi2)) - (-t2493 + t2494) * np.sin(-t2479 + (4 * phi2)) + (t2493 + t2494) * np.sin(t2479 + (4 * phi2)) + (-t2495 + t2496) * np.sin(t2479 + (8 * phi2)) - (t2497 - t2498) * np.sin(-t2479 + (12 * phi2)) + (t2497 + t2498) * np.sin(t2479 + (12 * phi2))) * ((1 + t2478) ** (-0.1e1 / 0.2e1)) * ((1 - t2478) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t2519 = np.cos(phi)
            t2518 = t2519 ** 2
            t2521 = t2519 * t2518
            t2524 = t2521 ** 2
            t2525 = t2519 * t2524
            t2506 = t2525 ** 2
            t2522 = t2518 ** 2
            t2526 = t2522 ** 2
            t2523 = t2519 * t2522
            t2528 = t2523 ** 2
            t2530 = t2524 ** 2
            t2538 = 21735 * t2506 + 50025 * t2518 - 133515 * t2522 - 83835 * t2524 + 580635 * t2526 - 584085 * t2528 + 152375 * t2530 - 3335
            t2507 = t2519 * t2530
            t2509 = t2519 * t2528
            t2511 = t2519 * t2526
            t2537 = -111780 * t2507 + 160080 * t2509 + 272780 * t2511 + 1380 * t2519 - 86480 * t2521 + 426420 * t2523 - 662400 * t2525
            t2536 = 3108105 * t2506 - 22041 * t2518 + 191259 * t2522 - 22581 * t2524 - 3050091 * t2526 + 8527365 * t2528 - 8732295 * t2530 + 279
            t2535 = -1937520 * t2507 + 5056320 * t2509 - 4317744 * t2511 + 10608 * t2519 - 161088 * t2521 + 358704 * t2523 + 990720 * t2525
            t2534 = -5328180 * t2507 + 17669520 * t2509 - 22706244 * t2511 - 22284 * t2519 + 581616 * t2521 - 4355964 * t2523 + 14161536 * t2525
            t2533 = 565110 * t2506 - 102630 * t2518 + 989874 * t2522 - 3787038 * t2524 + 6543198 * t2526 - 4703730 * t2528 + 493350 * t2530 + 1866
            t2520 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.1572864e7 * np.sqrt(0.3e1) * np.sqrt(0.19e2) * np.sqrt(0.13e2) * np.sqrt(0.11e2) * ((-7389900 * t2506 + 29833300 * t2530 - 47459580 * t2528 + 37477860 * t2526 + 2380 - 15162980 * t2524 + 2905980 * t2522 - 207060 * t2518) * np.cos(t2520) + (t2533 + t2535) * np.cos(-t2520 + (8 * phi2)) + (t2534 + t2536) * np.cos(-t2520 + (4 * phi2)) + (-t2534 + t2536) * np.cos(t2520 + (4 * phi2)) + (t2533 - t2535) * np.cos(t2520 + (8 * phi2)) + (t2537 + t2538) * np.cos(-t2520 + (12 * phi2)) + (-t2537 + t2538) * np.cos(t2520 + (12 * phi2)))

        if Bindx == 90:
            t2560 = np.cos(phi)
            t2559 = t2560 ** 2
            t2563 = t2559 ** 2
            t2562 = t2560 * t2559
            t2565 = t2562 ** 2
            t2567 = t2563 ** 2
            t2564 = t2560 * t2563
            t2569 = t2564 ** 2
            t2571 = t2565 ** 2
            t2566 = t2560 * t2565
            t2573 = t2566 ** 2
            t2580 = 230 - 2070 * t2559 - 1610 * t2563 + 31050 * t2565 - 60030 * t2567 + 36110 * t2569 + 2530 * t2571 - 6210 * t2573
            t2546 = t2560 * t2573
            t2548 = t2560 * t2571
            t2550 = t2560 * t2569
            t2552 = t2560 * t2567
            t2579 = 1035 * t2546 + 11615 * t2548 - 36225 * t2550 + 22195 * t2552 - 575 * t2560 + 8165 * t2562 - 25875 * t2564 + 19665 * t2566
            t2578 = -7448 * t2559 + 54936 * t2563 - 136920 * t2565 + 74376 * t2567 + 184184 * t2569 - 276920 * t2571 + 107640 * t2573 + 152
            t2577 = 26910 * t2546 + 62790 * t2548 - 388010 * t2550 + 563486 * t2552 + 650 * t2560 - 13454 * t2562 + 106386 * t2564 - 358758 * t2566
            t2576 = 148005 * t2546 - 444015 * t2548 + 406065 * t2550 - 3267 * t2552 + 783 * t2560 - 17877 * t2562 + 102243 * t2564 - 191937 * t2566
            t2575 = 9198 * t2559 - 114702 * t2563 + 563598 * t2565 - 1373322 * t2567 + 1765434 * t2569 - 1146090 * t2571 + 296010 * t2573 - 126
            t2561 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.262144e6 * np.sqrt(0.2e1) * np.sqrt(0.19e2) * np.sqrt(0.11e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * ((-351900 * t2546 + 1681300 * t2548 - 3260940 * t2550 + 3271140 * t2552 - 1784660 * t2566 + 506940 * t2564 - 64260 * t2562 + 2380 * t2560) * np.sin(t2561) - (t2577 - t2578) * np.sin(-t2561 + (8 * phi2)) - (-t2575 + t2576) * np.sin(-t2561 + (4 * phi2)) + (t2575 + t2576) * np.sin(t2561 + (4 * phi2)) + (t2577 + t2578) * np.sin(t2561 + (8 * phi2)) - (t2579 + t2580) * np.sin(-t2561 + (12 * phi2)) + (t2579 - t2580) * np.sin(t2561 + (12 * phi2))) * ((1 + t2560) ** (-0.1e1 / 0.2e1)) * ((1 - t2560) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t2601 = np.cos(phi)
            t2600 = t2601 ** 2
            t2603 = t2601 * t2600
            t2606 = t2603 ** 2
            t2612 = t2606 ** 2
            t2589 = t2601 * t2612
            t2604 = t2600 ** 2
            t2605 = t2601 * t2604
            t2610 = t2605 ** 2
            t2591 = t2601 * t2610
            t2608 = t2604 ** 2
            t2593 = t2601 * t2608
            t2607 = t2601 * t2606
            t2620 = 49680 * t2589 + 92000 * t2591 - 384560 * t2593 + 9200 * t2601 - 69920 * t2603 + 60720 * t2605 + 242880 * t2607
            t2588 = t2607 ** 2
            t2619 = -7245 * t2588 + 2185 * t2600 + 110055 * t2604 - 322575 * t2606 + 178365 * t2608 + 165715 * t2610 - 124315 * t2612 - 2185
            t2618 = -188370 * t2588 - 23206 * t2600 - 48378 * t2604 + 1048410 * t2606 - 3069198 * t2608 + 3235870 * t2610 - 959790 * t2612 + 566
            t2617 = -861120 * t2589 + 1251200 * t2591 + 663872 * t2593 + 18880 * t2601 - 263808 * t2603 + 1189056 * t2605 - 2002176 * t2607
            t2616 = -2368080 * t2589 + 8136480 * t2591 - 10771728 * t2593 - 14256 * t2601 + 317856 * t2603 - 2195952 * t2605 + 6895680 * t2607
            t2615 = -1036035 * t2588 + 83655 * t2600 - 796983 * t2604 + 2494239 * t2606 - 2777709 * t2608 - 185955 * t2610 + 2220075 * t2612 - 1287
            t2602 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.262144e6 * np.sqrt(0.19e2) * np.sqrt(0.13e2) * ((2463300 * t2588 - 11221700 * t2612 + 20418020 * t2610 - 18723460 * t2608 + 8932140 * t2606 - 2039660 * t2604 + 173740 * t2600 - 2380) * np.cos(t2602) + (t2615 - t2616) * np.cos(-t2602 + (4 * phi2)) + (t2615 + t2616) * np.cos(t2602 + (4 * phi2)) + (t2619 + t2620) * np.cos(-t2602 + (12 * phi2)) + (t2619 - t2620) * np.cos(t2602 + (12 * phi2)) + (-t2617 + t2618) * np.cos((8 * phi1 - 8 * phi2)) + (t2617 + t2618) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 92:
            t2642 = np.cos(phi)
            t2641 = t2642 ** 2
            t2645 = t2641 ** 2
            t2644 = t2642 * t2641
            t2647 = t2644 ** 2
            t2649 = t2645 ** 2
            t2646 = t2642 * t2645
            t2651 = t2646 ** 2
            t2653 = t2647 ** 2
            t2648 = t2642 * t2647
            t2655 = t2648 ** 2
            t2662 = -370 - 2590 * t2641 + 27710 * t2645 - 43230 * t2647 - 23430 * t2649 + 73590 * t2651 - 24390 * t2653 - 7290 * t2655
            t2628 = t2642 * t2655
            t2630 = t2642 * t2653
            t2632 = t2642 * t2651
            t2634 = t2642 * t2649
            t2661 = 945 * t2628 + 21565 * t2630 - 15635 * t2632 - 64295 * t2634 + 2115 * t2642 - 8385 * t2644 - 16665 * t2646 + 80355 * t2648
            t2660 = 24570 * t2628 + 175890 * t2630 - 608670 * t2632 + 587994 * t2634 - 4194 * t2642 + 38646 * t2644 - 74250 * t2646 - 139986 * t2648
            t2659 = 10296 * t2641 - 108984 * t2645 + 409464 * t2647 - 620136 * t2649 + 277992 * t2651 + 158040 * t2653 - 126360 * t2655 - 312
            t2658 = 11286 * t2641 - 134838 * t2645 + 689238 * t2647 - 1716066 * t2649 + 2196018 * t2651 - 1392930 * t2653 + 347490 * t2655 - 198
            t2657 = 135135 * t2628 - 302445 * t2630 - 120285 * t2632 + 896247 * t2634 + 4653 * t2642 - 86031 * t2644 + 446985 * t2646 - 974259 * t2648
            t2643 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.786432e6 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * np.sqrt(0.3e1) * np.sqrt(0.19e2) * np.sqrt(0.13e2) * ((-321300 * t2628 + 1725500 * t2630 - 3815140 * t2632 + 4438700 * t2634 - 2867900 * t2648 + 987700 * t2646 - 154700 * t2644 + 7140 * t2642) * np.sin(t2643) - (t2659 + t2660) * np.sin(-t2643 + (8 * phi2)) - (t2657 - t2658) * np.sin(-t2643 + (4 * phi2)) + (t2657 + t2658) * np.sin(t2643 + (4 * phi2)) + (-t2659 + t2660) * np.sin(t2643 + (8 * phi2)) - (t2661 + t2662) * np.sin(-t2643 + (12 * phi2)) + (t2661 - t2662) * np.sin(t2643 + (12 * phi2))) * ((1 + t2642) ** (-0.1e1 / 0.2e1)) * ((1 - t2642) ** (-0.1e1 / 0.2e1))

        if Bindx == 93:
            t2683 = np.cos(phi)
            t2682 = t2683 ** 2
            t2685 = t2683 * t2682
            t2688 = t2685 ** 2
            t2694 = t2688 ** 2
            t2671 = t2683 * t2694
            t2686 = t2682 ** 2
            t2687 = t2683 * t2686
            t2692 = t2687 ** 2
            t2673 = t2683 * t2692
            t2690 = t2686 ** 2
            t2675 = t2683 * t2690
            t2689 = t2683 * t2688
            t2702 = -2700 * t2671 - 16400 * t2673 + 15620 * t2675 + 1100 * t2683 + 400 * t2685 - 19140 * t2687 + 21120 * t2689
            t2670 = t2689 ** 2
            t2701 = -155 + 315 * t2670 - 2635 * t2682 + 10065 * t2686 + 7425 * t2688 - 33825 * t2690 + 9295 * t2692 + 9515 * t2694
            t2700 = 8190 * t2670 + 10258 * t2682 - 54582 * t2686 + 73722 * t2688 + 67782 * t2690 - 191114 * t2692 + 86190 * t2694 - 446
            t2699 = 46800 * t2671 + 1600 * t2673 - 196592 * t2675 + 1072 * t2683 + 4032 * t2685 - 76560 * t2687 + 219648 * t2689
            t2698 = -128700 * t2671 + 462000 * t2673 - 620268 * t2675 - 132 * t2683 + 6864 * t2685 - 95700 * t2687 + 375936 * t2689
            t2697 = 45045 * t2670 - 17061 * t2682 + 127743 * t2686 - 361713 * t2688 + 438801 * t2690 - 175263 * t2692 - 57915 * t2694 + 363
            t2684 = 10 * phi1
            tfunc[..., c] = -0.29e2 / 0.524288e6 * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.13e2) * ((-107100 * t2670 + 559300 * t2694 - 1190476 * t2692 + 1311380 * t2690 - 778260 * t2688 + 230860 * t2686 - 26180 * t2682 + 476) * np.cos(t2684) + (-t2699 + t2700) * np.cos(-t2684 + (8 * phi2)) + (t2697 + t2698) * np.cos(-t2684 + (4 * phi2)) + (t2697 - t2698) * np.cos(t2684 + (4 * phi2)) + (t2699 + t2700) * np.cos(t2684 + (8 * phi2)) + (t2701 + t2702) * np.cos(-t2684 + (12 * phi2)) + (t2701 - t2702) * np.cos(t2684 + (12 * phi2)))

        if Bindx == 94:
            t2724 = np.cos(phi)
            t2723 = t2724 ** 2
            t2727 = t2723 ** 2
            t2726 = t2724 * t2723
            t2729 = t2726 ** 2
            t2731 = t2727 ** 2
            t2728 = t2724 * t2727
            t2733 = t2728 ** 2
            t2735 = t2729 ** 2
            t2730 = t2724 * t2729
            t2737 = t2730 ** 2
            t2744 = 38 + 1026 * t2723 - 1394 * t2727 - 7062 * t2729 + 10098 * t2731 + 2662 * t2733 - 4774 * t2735 - 594 * t2737
            t2710 = t2724 * t2737
            t2712 = t2724 * t2735
            t2714 = t2724 * t2733
            t2716 = t2724 * t2731
            t2743 = 63 * t2710 + 2351 * t2712 + 4131 * t2714 - 10637 * t2716 - 319 * t2724 - 1199 * t2726 + 6237 * t2728 - 627 * t2730
            t2742 = 232 - 3016 * t2723 + 4104 * t2727 + 28248 * t2729 - 82632 * t2731 + 67496 * t2733 - 4136 * t2735 - 10296 * t2737
            t2741 = 1638 * t2710 + 21606 * t2712 - 51074 * t2714 + 10142 * t2716 - 374 * t2724 + 8426 * t2726 - 36366 * t2728 + 46002 * t2730
            t2740 = 9009 * t2710 - 11583 * t2712 - 57651 * t2714 + 167805 * t2716 + 1551 * t2724 - 20097 * t2726 + 89331 * t2728 - 178365 * t2730
            t2739 = -2442 * t2723 + 4026 * t2727 + 35310 * t2729 - 134970 * t2731 + 188034 * t2733 - 118338 * t2735 + 28314 * t2737 + 66
            t2725 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.262144e6 * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.13e2) * ((-21420 * t2710 + 130900 * t2712 - 335580 * t2714 + 464100 * t2716 - 368900 * t2730 + 164220 * t2728 - 35700 * t2726 + 2380 * t2724) * np.sin(t2725) - (t2741 + t2742) * np.sin(-t2725 + (8 * phi2)) - (-t2739 + t2740) * np.sin(-t2725 + (4 * phi2)) + (t2739 + t2740) * np.sin(t2725 + (4 * phi2)) + (t2741 - t2742) * np.sin(t2725 + (8 * phi2)) - (t2743 + t2744) * np.sin(-t2725 + (12 * phi2)) + (t2743 - t2744) * np.sin(t2725 + (12 * phi2))) * ((1 + t2724) ** (-0.1e1 / 0.2e1)) * ((1 - t2724) ** (-0.1e1 / 0.2e1))

        if Bindx == 95:
            t2765 = np.cos(phi)
            t2764 = t2765 ** 2
            t2767 = t2765 * t2764
            t2770 = t2767 ** 2
            t2776 = t2770 ** 2
            t2753 = t2765 * t2776
            t2768 = t2764 ** 2
            t2769 = t2765 * t2768
            t2774 = t2769 ** 2
            t2755 = t2765 * t2774
            t2772 = t2768 ** 2
            t2757 = t2765 * t2772
            t2771 = t2765 * t2770
            t2784 = -1944 * t2753 - 21840 * t2755 - 19448 * t2757 - 1320 * t2765 - 11024 * t2767 + 10296 * t2769 + 41184 * t2771
            t2752 = t2771 ** 2
            t2783 = -137 - 189 * t2752 - 5343 * t2764 - 9009 * t2768 + 36465 * t2770 + 14157 * t2772 - 31317 * t2774 - 8723 * t2776
            t2782 = 33696 * t2753 + 62400 * t2755 - 260832 * t2757 + 6240 * t2765 - 47424 * t2767 + 41184 * t2769 + 164736 * t2771
            t2781 = 92664 * t2753 - 350064 * t2755 + 463320 * t2757 - 10296 * t2765 + 61776 * t2767 - 51480 * t2769 - 205920 * t2771
            t2780 = -4914 * t2752 + 1482 * t2764 + 74646 * t2768 - 218790 * t2770 + 120978 * t2772 + 112398 * t2774 - 84318 * t2776 - 1482
            t2779 = -27027 * t2752 + 32175 * t2764 - 217503 * t2768 + 546975 * t2770 - 611325 * t2772 + 271557 * t2774 + 6435 * t2776 - 1287
            t2766 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.1572864e7 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.3e1) * np.sqrt(0.19e2) * ((64260 * t2752 - 387940 * t2776 + 978180 * t2774 - 1320900 * t2772 + 1011500 * t2770 - 421260 * t2768 + 78540 * t2764 - 2380) * np.cos(t2766) + (t2780 + t2782) * np.cos(-t2766 + (8 * phi2)) + (t2779 + t2781) * np.cos(-t2766 + (4 * phi2)) + (t2779 - t2781) * np.cos(t2766 + (4 * phi2)) + (t2780 - t2782) * np.cos(t2766 + (8 * phi2)) + (t2783 - t2784) * np.cos((12 * phi1 - 12 * phi2)) + (t2783 + t2784) * np.cos((12 * phi1 + 12 * phi2)))

        if Bindx == 96:
            t2806 = np.cos(phi)
            t2805 = t2806 ** 2
            t2808 = t2806 * t2805
            t2811 = t2808 ** 2
            t2812 = t2806 * t2811
            t2819 = t2812 ** 2
            t2792 = t2806 * t2819
            t2827 = 7 * t2792
            t2809 = t2805 ** 2
            t2813 = t2809 ** 2
            t2810 = t2806 * t2809
            t2815 = t2810 ** 2
            t2817 = t2811 ** 2
            t2826 = -2 + 26 * t2805 - 74 * t2809 + 50 * t2811 + 90 * t2813 - 178 * t2815 + 114 * t2817 - 26 * t2819
            t2794 = t2806 * t2817
            t2796 = t2806 * t2815
            t2798 = t2806 * t2813
            t2825 = t2806 + t2827 - t2794 - 101 * t2796 + 275 * t2798 - 39 * t2808 + 173 * t2810 - 315 * t2812
            t2824 = -6 - 306 * t2805 - 1118 * t2809 + 1430 * t2811 + 2574 * t2813 - 1430 * t2815 - 1066 * t2817 - 78 * t2819
            t2823 = t2827 + 383 * t2794 + 1755 * t2796 - 429 * t2798 + 65 * t2806 + 793 * t2808 + 429 * t2810 - 3003 * t2812
            t2822 = -104 - 1144 * t2805 + 6968 * t2809 - 5720 * t2811 - 10296 * t2813 + 14872 * t2815 - 3224 * t2817 - 1352 * t2819
            t2821 = 182 * t2792 + 3718 * t2794 - 5330 * t2796 - 8866 * t2798 + 650 * t2806 - 1222 * t2808 - 7150 * t2810 + 18018 * t2812
            t2807 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.262144e6 * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * (0.2380e4 * (-t2792 + 7 * t2794 - 21 * t2796 + 35 * t2798 - 35 * t2812 + 21 * t2810 - 7 * t2808 + t2806) * np.sin(t2807) - (t2821 + t2822) * np.sin(-t2807 + (8 * phi2)) + (t2821 - t2822) * np.sin(t2807 + (8 * phi2)) - (t2823 + t2824) * np.sin(-t2807 + (12 * phi2)) + (t2823 - t2824) * np.sin(t2807 + (12 * phi2)) - 0.143e3 * (t2825 + t2826) * np.sin(-t2807 + (4 * phi2)) + 0.143e3 * (t2825 - t2826) * np.sin(t2807 + (4 * phi2))) * ((1 - t2806) ** (-0.1e1 / 0.2e1)) * ((1 + t2806) ** (-0.1e1 / 0.2e1))

        if Bindx == 97:
            t2847 = np.cos(phi)
            t2846 = t2847 ** 2
            t2850 = t2846 ** 2
            t2851 = t2847 * t2850
            t2855 = t2851 ** 2
            t2838 = t2847 * t2855
            t2849 = t2847 * t2846
            t2868 = -4 * t2838 + 4 * t2849
            t2852 = t2849 ** 2
            t2857 = t2852 ** 2
            t2858 = t2847 * t2857
            t2867 = t2847 - t2858
            t2835 = t2847 * t2858
            t2866 = -1 + t2835
            t2853 = t2850 ** 2
            t2840 = t2847 * t2853
            t2865 = -20 * t2840 + 20 * t2851 + 4 * t2867 - 4 * t2868
            t2864 = -208 * t2838 - 572 * t2840 + 12 * t2847 + 208 * t2849 + 572 * t2851 - 12 * t2858
            t2863 = 2288 * t2840 - 2288 * t2851 + 208 * t2867 + 208 * t2868
            t2862 = t2857 - t2846 + 19 * t2850 - 45 * t2852 + 45 * t2853 - 19 * t2855 + t2866
            t2861 = -65 * t2846 - 429 * t2850 - 429 * t2852 + 429 * t2853 + 429 * t2855 + 65 * t2857 + t2866
            t2860 = -26 + 26 * t2835 - 650 * t2846 + 286 * t2850 + 2574 * t2852 - 2574 * t2853 - 286 * t2855 + 650 * t2857
            t2848 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.524288e6 * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.7e1) * ((-340 * t2835 + 2380 * t2857 - 7140 * t2855 + 11900 * t2853 - 11900 * t2852 + 7140 * t2850 - 2380 * t2846 + 340) * np.cos(t2848) + (t2861 + t2864) * np.cos(-t2848 + (12 * phi2)) + (t2861 - t2864) * np.cos(t2848 + (12 * phi2)) + (t2860 + t2863) * np.cos(-t2848 + (8 * phi2)) + (t2860 - t2863) * np.cos(t2848 + (8 * phi2)) + 0.143e3 * (t2862 + t2865) * np.cos(-t2848 + (4 * phi2)) + 0.143e3 * (t2862 - t2865) * np.cos(t2848 + (4 * phi2)))

        if Bindx == 98:
            tfunc[..., c] = 0

        if Bindx == 99:
            t2890 = np.cos(phi)
            t2889 = t2890 ** 2
            t2891 = t2890 * t2889
            t2894 = t2891 ** 2
            t2895 = t2890 * t2894
            t2902 = t2895 ** 2
            t2876 = t2890 * t2902
            t2900 = t2894 ** 2
            t2878 = t2890 * t2900
            t2892 = t2889 ** 2
            t2893 = t2890 * t2892
            t2898 = t2893 ** 2
            t2880 = t2890 * t2898
            t2896 = t2892 ** 2
            t2882 = t2890 * t2896
            t2910 = -1740 * t2876 + 10620 * t2878 - 27180 * t2880 + 37500 * t2882 + 180 * t2890 - 2820 * t2891 + 13140 * t2893 - 29700 * t2895
            t2875 = t2896 ** 2
            t2909 = 15 + 2175 * t2875 - 720 * t2889 + 6180 * t2892 - 22800 * t2894 + 45450 * t2896 - 53040 * t2898 + 36420 * t2900 - 13680 * t2902
            t2908 = -40020 * t2876 + 155940 * t2878 - 242420 * t2880 + 191268 * t2882 + 44 * t2890 - 1628 * t2891 + 17292 * t2893 - 80476 * t2895
            t2907 = 41760 * t2876 - 197280 * t2878 + 377120 * t2880 - 371104 * t2882 - 224 * t2890 + 6496 * t2891 - 53984 * t2893 + 197216 * t2895
            t2906 = 78300 * t2875 - 2464 * t2889 + 36176 * t2892 - 206304 * t2894 + 590056 * t2896 - 936032 * t2898 + 839120 * t2900 - 398880 * t2902 + 28
            t2905 = -150075 * t2875 + 1232 * t2889 - 22836 * t2892 + 162448 * t2894 - 571186 * t2896 + 1097008 * t2898 - 1173460 * t2900 + 656880 * t2902 - 11
            tfunc[..., c] = -0.31e2 / 0.262144e6 * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * np.sqrt(0.23e2) * np.sqrt(0.323e3) * ((-t2906 + t2907) * np.sin((phi1 - 8 * phi2)) + (-t2905 + t2908) * np.sin((phi1 - 4 * phi2)) + (t2905 + t2908) * np.sin((phi1 + 4 * phi2)) + (t2906 + t2907) * np.sin((phi1 + 8 * phi2)) + (t2909 + t2910) * np.sin((phi1 - 12 * phi2)) + (-t2909 + t2910) * np.sin((phi1 + 12 * phi2))) * ((1 + t2890) ** (-0.1e1 / 0.2e1)) * ((1 - t2890) ** (-0.1e1 / 0.2e1))

        if Bindx == 100:
            t2931 = np.cos(phi)
            t2930 = t2931 ** 2
            t2933 = t2931 * t2930
            t2936 = t2933 ** 2
            t2937 = t2931 * t2936
            t2944 = t2937 ** 2
            t2917 = t2931 * t2944
            t2942 = t2936 ** 2
            t2919 = t2931 * t2942
            t2934 = t2930 ** 2
            t2935 = t2931 * t2934
            t2940 = t2935 ** 2
            t2921 = t2931 * t2940
            t2938 = t2934 ** 2
            t2923 = t2931 * t2938
            t2951 = -15225 * t2917 + 73815 * t2919 - 140325 * t2921 + 127275 * t2923 - 375 * t2931 + 4185 * t2933 - 75 * t2935 - 49275 * t2937
            t2950 = -8280 * t2930 + 63060 * t2934 - 197400 * t2936 + 318300 * t2938 - 280680 * t2940 + 129180 * t2942 - 24360 * t2944 + 180
            t2949 = -4840 * t2930 + 84876 * t2934 - 547624 * t2936 + 1656644 * t2938 - 2540120 * t2940 + 1911300 * t2942 - 560280 * t2944 + 44
            t2948 = 19264 * t2930 - 263648 * t2934 + 1332800 * t2936 - 3190432 * t2938 + 3926720 * t2940 - 2409120 * t2942 + 584640 * t2944 - 224
            t2947 = -548100 * t2917 + 2304540 * t2919 - 3894100 * t2921 + 3376268 * t2923 + 1540 * t2931 - 44828 * t2933 + 394324 * t2935 - 1589644 * t2937
            t2946 = -1050525 * t2917 + 4011315 * t2919 - 6142265 * t2921 + 4801687 * t2923 + 1133 * t2931 - 41283 * t2933 + 434313 * t2935 - 2014375 * t2937
            t2932 = 2 * phi1
            tfunc[..., c] = 0.31e2 / 0.262144e6 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * np.sqrt(0.23e2) * np.sqrt(0.3e1) * np.sqrt(0.19e2) * ((t2947 + t2948) * np.cos((-t2932 + 8 * phi2)) + (-t2946 + t2949) * np.cos((-t2932 + 4 * phi2)) + (t2946 + t2949) * np.cos((t2932 + 4 * phi2)) + (-t2947 + t2948) * np.cos((t2932 + 8 * phi2)) + (t2950 - t2951) * np.cos((-t2932 + 12 * phi2)) + (t2950 + t2951) * np.cos((t2932 + 12 * phi2)))

        if Bindx == 101:
            t2973 = np.cos(phi)
            t2972 = t2973 ** 2
            t2975 = t2973 * t2972
            t2978 = t2975 ** 2
            t2979 = t2973 * t2978
            t2986 = t2979 ** 2
            t2959 = t2973 * t2986
            t2984 = t2978 ** 2
            t2961 = t2973 * t2984
            t2976 = t2972 ** 2
            t2977 = t2973 * t2976
            t2982 = t2977 ** 2
            t2963 = t2973 * t2982
            t2980 = t2976 ** 2
            t2965 = t2973 * t2980
            t2994 = -158340 * t2959 + 839540 * t2961 - 1826500 * t2963 + 2081300 * t2965 + 3900 * t2973 - 67340 * t2975 + 436540 * t2977 - 1309100 * t2979
            t2958 = t2980 ** 2
            t2993 = 65975 * t2958 + 37180 * t2972 - 253760 * t2976 + 674700 * t2978 - 809250 * t2980 + 311220 * t2982 + 224120 * t2984 - 249340 * t2986 - 845
            t2992 = -2375100 * t2958 - 7056 * t2972 + 30912 * t2976 + 549360 * t2978 - 4270392 * t2980 + 11685072 * t2982 - 15244320 * t2984 + 9631440 * t2986 + 84
            t2991 = -3641820 * t2959 + 14334060 * t2961 - 22608540 * t2963 + 18182604 * t2965 + 4708 * t2973 - 168212 * t2975 + 1730916 * t2977 - 7833716 * t2979
            t2990 = 3800160 * t2959 - 16904160 * t2961 + 30492000 * t2963 - 28473312 * t2965 - 16800 * t2973 + 471072 * t2975 - 3892896 * t2977 + 14523936 * t2979
            t2989 = -4552275 * t2958 + 34452 * t2972 - 624448 * t2976 + 4404356 * t2978 - 15553494 * t2980 + 30338748 * t2982 - 33260760 * t2984 + 19213740 * t2986 - 319
            t2974 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.262144e6 * np.sqrt(0.3e1) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * (-(t2990 + t2992) * np.sin((-t2974 + 8 * phi2)) - (-t2989 + t2991) * np.sin((-t2974 + 4 * phi2)) + (t2989 + t2991) * np.sin((t2974 + 4 * phi2)) + (t2990 - t2992) * np.sin((t2974 + 8 * phi2)) - (t2993 + t2994) * np.sin((-t2974 + 12 * phi2)) + (-t2993 + t2994) * np.sin((t2974 + 12 * phi2))) * ((1 + t2973) ** (-0.1e1 / 0.2e1)) * ((1 - t2973) ** (-0.1e1 / 0.2e1))

        if Bindx == 102:
            t3015 = np.cos(phi)
            t3014 = t3015 ** 2
            t3018 = t3014 ** 2
            t3017 = t3015 * t3014
            t3020 = t3017 ** 2
            t3022 = t3018 ** 2
            t3019 = t3015 * t3018
            t3024 = t3019 ** 2
            t3026 = t3020 ** 2
            t3021 = t3015 * t3020
            t3028 = t3021 ** 2
            t3035 = 62400 * t3014 - 170040 * t3018 - 546000 * t3020 + 2691000 * t3022 - 3999840 * t3024 + 2597400 * t3026 - 633360 * t3028 - 1560
            t3001 = t3015 * t3028
            t3003 = t3015 * t3026
            t3005 = t3015 * t3024
            t3007 = t3015 * t3022
            t3034 = -197925 * t3001 + 214305 * t3003 + 1411995 * t3005 - 3861975 * t3007 - 29445 * t3015 + 407745 * t3017 - 1913925 * t3019 + 3969225 * t3021
            t3033 = -155584 * t3014 + 2590456 * t3018 - 15955632 * t3020 + 46384008 * t3022 - 68856480 * t3024 + 50554920 * t3026 - 14567280 * t3028 + 1496
            t3032 = 322560 * t3014 - 4363968 * t3018 + 23124864 * t3020 - 60373824 * t3022 + 82440960 * t3024 - 56347200 * t3026 + 15200640 * t3028 - 4032
            t3031 = -7125300 * t3001 + 18853380 * t3003 - 11536980 * t3005 - 9260412 * t3007 - 37044 * t3015 + 932484 * t3017 - 6029268 * t3019 + 14203140 * t3021
            t3030 = -13656825 * t3001 + 48944805 * t3003 - 70490745 * t3005 + 52191117 * t3007 + 12199 * t3015 - 426811 * t3017 + 4448807 * t3019 - 21026643 * t3021
            t3016 = 4 * phi1
            tfunc[..., c] = -0.31e2 / 0.131072e6 * np.sqrt(0.23e2) * ((t3031 + t3032) * np.cos((-t3016 + 8 * phi2)) + (-t3031 + t3032) * np.cos((t3016 + 8 * phi2)) + (-t3034 + t3035) * np.cos((-t3016 + 12 * phi2)) + (t3034 + t3035) * np.cos((t3016 + 12 * phi2)) + (-t3030 + t3033) * np.cos((4 * phi1 - 4 * phi2)) + (t3030 + t3033) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 103:
            t3057 = np.cos(phi)
            t3056 = t3057 ** 2
            t3059 = t3057 * t3056
            t3062 = t3059 ** 2
            t3063 = t3057 * t3062
            t3070 = t3063 ** 2
            t3043 = t3057 * t3070
            t3068 = t3062 ** 2
            t3045 = t3057 * t3068
            t3060 = t3056 ** 2
            t3061 = t3057 * t3060
            t3066 = t3061 ** 2
            t3047 = t3057 * t3066
            t3064 = t3060 ** 2
            t3049 = t3057 * t3064
            t3078 = 158340 * t3043 - 585780 * t3045 + 694980 * t3047 - 80340 * t3049 + 8580 * t3057 - 99060 * t3059 + 358020 * t3061 - 454740 * t3063
            t3042 = t3064 ** 2
            t3077 = 39585 * t3042 + 7020 * t3056 - 129480 * t3060 + 659100 * t3062 - 1435590 * t3064 + 1506180 * t3066 - 695760 * t3068 + 49140 * t3070 - 195
            t3076 = -3800160 * t3043 + 14807520 * t3045 - 22965600 * t3047 + 18033120 * t3049 + 6048 * t3057 - 170016 * t3059 + 1645728 * t3061 - 7556640 * t3063
            t3075 = 3641820 * t3043 - 14621100 * t3045 + 23668380 * t3047 - 19688460 * t3049 - 6436 * t3057 + 213780 * t3059 - 2064164 * t3061 + 8856180 * t3063
            t3074 = -2731365 * t3042 + 11300 * t3056 - 208280 * t3060 + 1596596 * t3062 - 6313890 * t3064 + 13835052 * t3066 - 16863600 * t3068 + 10674300 * t3070 - 113
            t3073 = -1425060 * t3042 - 95760 * t3056 + 1165920 * t3060 - 5280912 * t3062 + 11071704 * t3064 - 10525872 * t3066 + 2271360 * t3068 + 2817360 * t3070 + 1260
            t3058 = 5 * phi1
            tfunc[..., c] = 0.31e2 / 0.262144e6 * np.sqrt(0.5e1) * np.sqrt(0.11e2) * np.sqrt(0.23e2) * (-(-t3073 + t3076) * np.sin((-t3058 + 8 * phi2)) - (t3074 + t3075) * np.sin((-t3058 + 4 * phi2)) + (-t3074 + t3075) * np.sin((t3058 + 4 * phi2)) + (t3073 + t3076) * np.sin((t3058 + 8 * phi2)) - (-t3077 + t3078) * np.sin((-t3058 + 12 * phi2)) + (t3077 + t3078) * np.sin((t3058 + 12 * phi2))) * ((1 + t3057) ** (-0.1e1 / 0.2e1)) * ((1 - t3057) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t3099 = np.cos(phi)
            t3098 = t3099 ** 2
            t3102 = t3098 ** 2
            t3101 = t3099 * t3098
            t3104 = t3101 ** 2
            t3106 = t3102 ** 2
            t3103 = t3099 * t3102
            t3108 = t3103 ** 2
            t3110 = t3104 ** 2
            t3105 = t3099 * t3104
            t3112 = t3105 ** 2
            t3119 = -7800 * t3098 + 64740 * t3102 - 190840 * t3104 + 212940 * t3106 - 29640 * t3108 - 94900 * t3110 + 45240 * t3112 + 260
            t3085 = t3099 * t3112
            t3087 = t3099 * t3110
            t3089 = t3099 * t3108
            t3091 = t3099 * t3106
            t3118 = 9425 * t3085 + 48945 * t3087 - 234195 * t3089 + 306605 * t3091 - 2145 * t3099 + 14495 * t3101 + 195 * t3103 - 143325 * t3105
            t3117 = 6720 * t3098 - 31584 * t3102 - 245952 * t3104 + 1689312 * t3106 - 3608640 * t3108 + 3276000 * t3110 - 1085760 * t3112 - 96
            t3116 = -650325 * t3085 + 2076555 * t3087 - 2498145 * t3089 + 1383519 * t3091 - 91 * t3099 + 1509 * t3101 + 23089 * t3103 - 336111 * t3105
            t3115 = 15416 * t3098 - 234884 * t3102 + 1344056 * t3104 - 3687084 * t3106 + 5235720 * t3108 - 3713580 * t3110 + 1040520 * t3112 - 164
            t3114 = -339300 * t3085 + 16380 * t3087 + 2222220 * t3089 - 3803604 * t3091 - 5532 * t3099 + 128772 * t3101 - 883596 * t3103 + 2664660 * t3105
            t3100 = 6 * phi1
            tfunc[..., c] = -0.31e2 / 0.262144e6 * np.sqrt(0.2e1) * np.sqrt(0.23e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * np.sqrt(0.11e2) * ((-t3114 + t3117) * np.cos((-t3100 + 8 * phi2)) + (t3115 + t3116) * np.cos((-t3100 + 4 * phi2)) + (t3115 - t3116) * np.cos((t3100 + 4 * phi2)) + (t3114 + t3117) * np.cos((t3100 + 8 * phi2)) + (-t3118 + t3119) * np.cos((-t3100 + 12 * phi2)) + (t3118 + t3119) * np.cos((t3100 + 12 * phi2)))

        if Bindx == 105:
            t3141 = np.cos(phi)
            t3140 = t3141 ** 2
            t3143 = t3141 * t3140
            t3146 = t3143 ** 2
            t3147 = t3141 * t3146
            t3154 = t3147 ** 2
            t3127 = t3141 * t3154
            t3152 = t3146 ** 2
            t3129 = t3141 * t3152
            t3144 = t3140 ** 2
            t3145 = t3141 * t3144
            t3150 = t3145 ** 2
            t3131 = t3141 * t3150
            t3148 = t3144 ** 2
            t3133 = t3141 * t3148
            t3162 = 158340 * t3127 - 205140 * t3129 - 596700 * t3131 + 1467180 * t3133 - 3900 * t3141 - 17940 * t3143 + 339300 * t3145 - 1141140 * t3147
            t3126 = t3148 ** 2
            t3161 = -28275 * t3126 + 42120 * t3140 - 244140 * t3144 + 429000 * t3146 + 115830 * t3148 - 1046760 * t3150 + 982020 * t3152 - 248040 * t3154 - 1755
            t3160 = -3800160 * t3127 + 11662560 * t3129 - 11989600 * t3131 + 3012064 * t3133 - 19040 * t3141 + 376544 * t3143 - 1843296 * t3145 + 2600928 * t3147
            t3159 = 3641820 * t3127 - 15051660 * t3129 + 25166140 * t3131 - 21755148 * t3133 - 9828 * t3141 + 290612 * t3143 - 2562308 * t3145 + 10280372 * t3147
            t3158 = -1950975 * t3126 - 21912 * t3140 + 273188 * t3144 - 1015512 * t3146 + 653518 * t3148 + 3562424 * t3150 - 8210540 * t3152 + 6709560 * t3154 + 249
            t3157 = -1017900 * t3126 - 101632 * t3140 + 1259664 * t3144 - 6578880 * t3146 + 16803864 * t3148 - 21574784 * t3150 + 12368720 * t3152 - 1160640 * t3154 + 1588
            t3142 = 7 * phi1
            tfunc[..., c] = -0.31e2 / 0.262144e6 * np.sqrt(0.3e1) * np.sqrt(0.7e1) * np.sqrt(0.23e2) * (-(-t3157 + t3160) * np.sin((-t3142 + 8 * phi2)) - (t3158 + t3159) * np.sin((-t3142 + 4 * phi2)) + (-t3158 + t3159) * np.sin((t3142 + 4 * phi2)) + (t3157 + t3160) * np.sin((t3142 + 8 * phi2)) - (t3161 + t3162) * np.sin((-t3142 + 12 * phi2)) + (-t3161 + t3162) * np.sin((t3142 + 12 * phi2))) * ((1 + t3141) ** (-0.1e1 / 0.2e1)) * ((1 - t3141) ** (-0.1e1 / 0.2e1))

        if Bindx == 106:
            t3183 = np.cos(phi)
            t3182 = t3183 ** 2
            t3185 = t3183 * t3182
            t3188 = t3185 ** 2
            t3189 = t3183 * t3188
            t3196 = t3189 ** 2
            t3169 = t3183 * t3196
            t3194 = t3188 ** 2
            t3171 = t3183 * t3194
            t3186 = t3182 ** 2
            t3187 = t3183 * t3186
            t3192 = t3187 ** 2
            t3173 = t3183 * t3192
            t3190 = t3186 ** 2
            t3175 = t3183 * t3190
            t3203 = -28275 * t3169 - 395265 * t3171 + 837525 * t3173 - 2145 * t3175 + 2925 * t3183 - 114465 * t3185 + 594165 * t3187 - 894465 * t3189
            t3202 = 49920 * t3182 - 115440 * t3186 - 343200 * t3188 + 1338480 * t3190 - 1235520 * t3192 + 127920 * t3194 + 180960 * t3196 - 3120
            t3201 = 88320 * t3182 - 1194896 * t3186 + 6331808 * t3188 - 16530928 * t3190 + 22573120 * t3192 - 15428400 * t3194 + 4162080 * t3196 - 1104
            t3200 = 222208 * t3182 - 1954176 * t3186 + 6209280 * t3188 - 6880896 * t3190 - 2168320 * t3192 + 8910720 * t3194 - 4343040 * t3196 - 3968
            t3199 = -1950975 * t3169 + 5162235 * t3171 - 3158935 * t3173 - 2535589 * t3175 - 10143 * t3183 + 255323 * t3185 - 1650871 * t3187 + 3888955 * t3189
            t3198 = -1017900 * t3169 - 3652740 * t3171 + 16225300 * t3173 - 19711076 * t3175 - 4780 * t3183 + 172284 * t3185 - 2288748 * t3187 + 10269468 * t3189
            t3184 = 8 * phi1
            tfunc[..., c] = 0.31e2 / 0.131072e6 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * ((t3199 + t3201) * np.cos((-t3184 + 4 * phi2)) + (-t3199 + t3201) * np.cos((t3184 + 4 * phi2)) + (t3202 + t3203) * np.cos((-t3184 + 12 * phi2)) + (t3202 - t3203) * np.cos((t3184 + 12 * phi2)) + (-t3198 + t3200) * np.cos((8 * phi1 - 8 * phi2)) + (t3198 + t3200) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 107:
            t3225 = np.cos(phi)
            t3224 = t3225 ** 2
            t3228 = t3224 ** 2
            t3232 = t3228 ** 2
            t3210 = t3232 ** 2
            t3227 = t3225 * t3224
            t3230 = t3227 ** 2
            t3229 = t3225 * t3228
            t3234 = t3229 ** 2
            t3236 = t3230 ** 2
            t3231 = t3225 * t3230
            t3238 = t3231 ** 2
            t3246 = -65975 * t3210 - 92040 * t3224 - 337740 * t3228 + 2865720 * t3230 - 5049330 * t3232 + 1870440 * t3234 + 2038660 * t3236 - 1241240 * t3238 + 11505
            t3211 = t3225 * t3238
            t3213 = t3225 * t3236
            t3215 = t3225 * t3234
            t3217 = t3225 * t3232
            t3245 = -475020 * t3211 - 907140 * t3213 + 4685460 * t3215 - 4126980 * t3217 + 36660 * t3225 - 511940 * t3227 + 1536340 * t3229 - 237380 * t3231
            t3244 = -10925460 * t3211 + 46877220 * t3213 - 80974260 * t3215 + 71862948 * t3217 + 42412 * t3225 - 1076124 * t3227 + 8869260 * t3229 - 34675996 * t3231
            t3243 = 11400480 * t3211 - 22407840 * t3213 - 6179040 * t3215 + 45335136 * t3217 + 150304 * t3225 - 2620576 * t3227 + 15916320 * t3229 - 41594784 * t3231
            t3242 = -4552275 * t3210 - 349416 * t3224 + 3919108 * t3228 - 15865768 * t3230 + 28351686 * t3232 - 19359928 * t3234 - 4957420 * t3236 + 12809160 * t3238 + 4853
            t3241 = -2375100 * t3210 + 431424 * t3224 - 1683696 * t3228 - 5115264 * t3230 + 37361016 * t3232 - 71845312 * t3234 + 55815760 * t3236 - 12579840 * t3238 - 8988
            t3226 = 9 * phi1
            tfunc[..., c] = -0.93e2 / 0.262144e6 * (-(t3241 + t3243) * np.sin((-t3226 + 8 * phi2)) - (-t3242 + t3244) * np.sin((-t3226 + 4 * phi2)) + (t3242 + t3244) * np.sin((t3226 + 4 * phi2)) + (-t3241 + t3243) * np.sin((t3226 + 8 * phi2)) - (t3245 - t3246) * np.sin((-t3226 + 12 * phi2)) + (t3245 + t3246) * np.sin((t3226 + 12 * phi2))) * ((1 + t3225) ** (-0.1e1 / 0.2e1)) * ((1 - t3225) ** (-0.1e1 / 0.2e1))

        if Bindx == 108:
            t3267 = np.cos(phi)
            t3266 = t3267 ** 2
            t3269 = t3267 * t3266
            t3272 = t3269 ** 2
            t3273 = t3267 * t3272
            t3280 = t3273 ** 2
            t3253 = t3267 * t3280
            t3278 = t3272 ** 2
            t3255 = t3267 * t3278
            t3270 = t3266 ** 2
            t3271 = t3267 * t3270
            t3276 = t3271 ** 2
            t3257 = t3267 * t3276
            t3274 = t3270 ** 2
            t3259 = t3267 * t3274
            t3287 = -7917 * t3253 - 200109 * t3255 + 11271 * t3257 + 646503 * t3259 - 10179 * t3267 + 70941 * t3269 + 5577 * t3271 - 516087 * t3273
            t3286 = 4056 * t3266 - 158964 * t3270 + 408408 * t3272 - 46332 * t3274 - 545688 * t3276 + 273156 * t3278 + 63336 * t3280 + 2028
            t3285 = 28520 * t3266 - 394220 * t3270 + 2304232 * t3272 - 6282404 * t3274 + 8545880 * t3276 - 5658276 * t3278 + 1456728 * t3280 - 460
            t3284 = 59584 * t3266 - 895776 * t3270 + 4154304 * t3272 - 7488096 * t3274 + 4459840 * t3276 + 1231776 * t3278 - 1520064 * t3280 - 1568
            t3283 = -285012 * t3253 - 2355444 * t3255 + 6984796 * t3257 - 5422340 * t3259 + 39508 * t3267 - 445452 * t3269 + 1285284 * t3271 + 198660 * t3273
            t3282 = -546273 * t3253 + 1061151 * t3255 + 1026467 * t3257 - 4261693 * t3259 - 16399 * t3267 + 327313 * t3269 - 1815827 * t3271 + 4225261 * t3273
            t3268 = 10 * phi1
            tfunc[..., c] = -0.155e3 / 0.262144e6 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((-t3283 + t3284) * np.cos((-t3268 + 8 * phi2)) + (t3282 + t3285) * np.cos((-t3268 + 4 * phi2)) + (-t3282 + t3285) * np.cos((t3268 + 4 * phi2)) + (t3283 + t3284) * np.cos((t3268 + 8 * phi2)) + (t3286 + t3287) * np.cos((-t3268 + 12 * phi2)) + (t3286 - t3287) * np.cos((t3268 + 12 * phi2)))

        if Bindx == 109:
            t3309 = np.cos(phi)
            t3308 = t3309 ** 2
            t3312 = t3308 ** 2
            t3316 = t3312 ** 2
            t3294 = t3316 ** 2
            t3311 = t3309 * t3308
            t3314 = t3311 ** 2
            t3313 = t3309 * t3312
            t3318 = t3313 ** 2
            t3320 = t3314 ** 2
            t3315 = t3309 * t3314
            t3322 = t3315 ** 2
            t3330 = 3045 * t3294 + 13068 * t3308 - 106392 * t3312 + 101244 * t3314 + 285714 * t3316 - 444444 * t3318 + 51168 * t3320 + 95508 * t3322 + 1089
            t3295 = t3309 * t3322
            t3297 = t3309 * t3320
            t3299 = t3309 * t3318
            t3301 = t3309 * t3316
            t3329 = -26796 * t3295 - 158532 * t3297 + 262548 * t3299 + 169884 * t3301 - 7212 * t3309 + 19068 * t3311 + 120276 * t3313 - 379236 * t3315
            t3328 = -616308 * t3295 + 2765796 * t3297 - 4907188 * t3299 + 4295940 * t3301 - 1012 * t3309 - 3036 * t3311 + 322828 * t3313 - 1857020 * t3315
            t3327 = 643104 * t3295 - 376992 * t3297 - 3161312 * t3299 + 5615456 * t3301 - 16352 * t3309 + 35168 * t3311 + 712992 * t3313 - 3452064 * t3315
            t3326 = -210105 * t3294 - 72956 * t3308 + 643448 * t3312 - 2285740 * t3314 + 3908390 * t3316 - 3170228 * t3318 + 758816 * t3320 + 426972 * t3322 + 1403
            t3325 = -109620 * t3294 + 112112 * t3308 - 805728 * t3312 + 1955184 * t3314 - 899976 * t3316 - 2748592 * t3318 + 3650752 * t3320 - 1150128 * t3322 - 4004
            t3310 = 11 * phi1
            tfunc[..., c] = 0.31e2 / 0.262144e6 * np.sqrt(0.5e1) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * (-(t3325 + t3327) * np.sin((-t3310 + 8 * phi2)) - (-t3326 + t3328) * np.sin((-t3310 + 4 * phi2)) + (t3326 + t3328) * np.sin((t3310 + 4 * phi2)) + (-t3325 + t3327) * np.sin((t3310 + 8 * phi2)) - (t3329 + t3330) * np.sin((-t3310 + 12 * phi2)) + (t3329 - t3330) * np.sin((t3310 + 12 * phi2))) * ((1 + t3309) ** (-0.1e1 / 0.2e1)) * ((1 - t3309) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t3351 = np.cos(phi)
            t3350 = t3351 ** 2
            t3354 = t3350 ** 2
            t3353 = t3351 * t3350
            t3356 = t3353 ** 2
            t3358 = t3354 ** 2
            t3355 = t3351 * t3354
            t3360 = t3355 ** 2
            t3362 = t3356 ** 2
            t3357 = t3351 * t3356
            t3364 = t3357 ** 2
            t3371 = 11712 * t3350 - 30264 * t3354 - 80080 * t3356 + 175032 * t3358 + 13728 * t3360 - 84968 * t3362 - 9744 * t3364 + 488
            t3337 = t3351 * t3364
            t3339 = t3351 * t3362
            t3341 = t3351 * t3360
            t3343 = t3351 * t3358
            t3370 = 1015 * t3337 + 39669 * t3339 + 86775 * t3341 - 152867 * t3343 - 3945 * t3351 - 9451 * t3353 + 90519 * t3355 - 47619 * t3357
            t3369 = 22080 * t3350 - 60168 * t3354 - 193200 * t3356 + 952200 * t3358 - 1415328 * t3360 + 919080 * t3362 - 224112 * t3364 - 552
            t3368 = -36540 * t3337 - 510804 * t3339 + 1082340 * t3341 - 2772 * t3343 + 3780 * t3351 - 147924 * t3353 + 767844 * t3355 - 1155924 * t3357
            t3367 = 70035 * t3337 - 75831 * t3339 - 499629 * t3341 + 1366545 * t3343 + 10419 * t3351 - 144279 * t3353 + 677235 * t3355 - 1404495 * t3357
            t3366 = 64512 * t3350 - 149184 * t3354 - 443520 * t3356 + 1729728 * t3358 - 1596672 * t3360 + 165312 * t3362 + 233856 * t3364 - 4032
            t3352 = 12 * phi1
            tfunc[..., c] = -0.31e2 / 0.131072e6 * np.sqrt(0.5e1) * np.sqrt(0.13e2) * ((t3366 + t3368) * np.cos((-t3352 + 8 * phi2)) + (t3367 + t3369) * np.cos((-t3352 + 4 * phi2)) + (-t3367 + t3369) * np.cos((t3352 + 4 * phi2)) + (t3366 - t3368) * np.cos((t3352 + 8 * phi2)) + (t3370 + t3371) * np.cos((12 * phi1 - 12 * phi2)) + (-t3370 + t3371) * np.cos((12 * phi1 + 12 * phi2)))

        if Bindx == 111:
            t3393 = np.cos(phi)
            t3392 = t3393 ** 2
            t3395 = t3393 * t3392
            t3398 = t3395 ** 2
            t3399 = t3393 * t3398
            t3406 = t3399 ** 2
            t3379 = t3393 * t3406
            t3404 = t3398 ** 2
            t3381 = t3393 * t3404
            t3396 = t3392 ** 2
            t3397 = t3393 * t3396
            t3402 = t3397 ** 2
            t3383 = t3393 * t3402
            t3400 = t3396 ** 2
            t3385 = t3393 * t3400
            t3414 = -1508 * t3379 - 16172 * t3381 - 2340 * t3383 + 47476 * t3385 + 860 * t3393 + 5588 * t3395 - 17316 * t3397 - 16588 * t3399
            t3378 = t3400 ** 2
            t3413 = -91 + 145 * t3378 - 3276 * t3392 - 208 * t3396 + 31460 * t3398 - 23166 * t3400 - 31460 * t3402 + 19864 * t3404 + 6732 * t3406
            t3412 = 36192 * t3379 + 38688 * t3381 - 354720 * t3383 + 431904 * t3385 - 5280 * t3393 + 54048 * t3395 - 108960 * t3397 - 91872 * t3399
            t3411 = -34684 * t3379 + 163852 * t3381 - 295228 * t3383 + 232300 * t3385 - 3772 * t3393 + 28428 * t3395 - 50876 * t3397 - 40020 * t3399
            t3410 = 5220 * t3378 + 5424 * t3392 + 62592 * t3396 - 298320 * t3398 + 382536 * t3400 - 41712 * t3402 - 201696 * t3404 + 87312 * t3406 - 1356
            t3409 = -10005 * t3378 - 10948 * t3392 + 87952 * t3396 - 279220 * t3398 + 432630 * t3400 - 336076 * t3402 + 104328 * t3404 + 10948 * t3406 + 391
            t3394 = 13 * phi1
            tfunc[..., c] = -0.31e2 / 0.262144e6 * np.sqrt(0.5e1) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * (-(-t3410 + t3412) * np.sin((-t3394 + 8 * phi2)) - (-t3409 + t3411) * np.sin((-t3394 + 4 * phi2)) + (t3409 + t3411) * np.sin((t3394 + 4 * phi2)) + (t3410 + t3412) * np.sin((t3394 + 8 * phi2)) - (t3413 + t3414) * np.sin((-t3394 + 12 * phi2)) + (-t3413 + t3414) * np.sin((t3394 + 12 * phi2))) * ((1 + t3393) ** (-0.1e1 / 0.2e1)) * ((1 - t3393) ** (-0.1e1 / 0.2e1))

        if Bindx == 112:
            t3435 = np.cos(phi)
            t3434 = t3435 ** 2
            t3437 = t3435 * t3434
            t3440 = t3437 ** 2
            t3441 = t3435 * t3440
            t3448 = t3441 ** 2
            t3456 = -4 - 56 * t3448
            t3438 = t3434 ** 2
            t3442 = t3438 ** 2
            t3439 = t3435 * t3438
            t3444 = t3439 ** 2
            t3446 = t3440 ** 2
            t3455 = 56 * t3434 - 164 * t3438 + 120 * t3440 + 180 * t3442 - 376 * t3444 + 244 * t3446 + t3456
            t3421 = t3435 * t3448
            t3423 = t3435 * t3446
            t3425 = t3435 * t3444
            t3427 = t3435 * t3442
            t3454 = t3423 - 15 * t3421 + 221 * t3425 - 595 * t3427 - t3435 + 79 * t3437 - 365 * t3439 + 675 * t3441
            t3453 = -200 * t3434 - 676 * t3438 + 1144 * t3440 + 1716 * t3442 - 1144 * t3444 - 780 * t3446 + t3456
            t3452 = -5 * t3421 - 277 * t3423 - 1313 * t3425 + 143 * t3427 - 43 * t3435 - 507 * t3437 - 143 * t3439 + 2145 * t3441
            t3451 = 96 + 960 * t3434 - 6816 * t3438 + 6336 * t3440 + 9504 * t3442 - 14784 * t3444 + 3360 * t3446 + 1344 * t3448
            t3450 = -180 * t3421 - 3732 * t3423 + 5052 * t3425 + 9372 * t3427 - 588 * t3435 + 1428 * t3437 + 6468 * t3439 - 17820 * t3441
            t3436 = 14 * phi1
            tfunc[..., c] = 0.31e2 / 0.262144e6 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.7e1) * np.sqrt(0.29e2) * ((t3450 + t3451) * np.cos((-t3436 + 8 * phi2)) + (-t3450 + t3451) * np.cos((t3436 + 8 * phi2)) + (-t3452 + t3453) * np.cos((-t3436 + 12 * phi2)) + (t3452 + t3453) * np.cos((t3436 + 12 * phi2)) + 0.23e2 * (-t3454 + t3455) * np.cos((-t3436 + 4 * phi2)) + 0.23e2 * (t3454 + t3455) * np.cos((t3436 + 4 * phi2)))

        if Bindx == 113:
            t3475 = np.cos(phi)
            t3474 = t3475 ** 2
            t3478 = t3474 ** 2
            t3479 = t3475 * t3478
            t3483 = t3479 ** 2
            t3466 = t3475 * t3483
            t3477 = t3475 * t3474
            t3496 = -4 * t3466 + 4 * t3477
            t3480 = t3477 ** 2
            t3485 = t3480 ** 2
            t3486 = t3475 * t3485
            t3495 = t3486 - t3475
            t3463 = t3475 * t3486
            t3494 = 1 - t3463
            t3481 = t3478 ** 2
            t3468 = t3475 * t3481
            t3493 = 20 * t3468 - 20 * t3479 + 4 * t3495 + 4 * t3496
            t3492 = 208 * t3466 + 572 * t3468 - 12 * t3475 - 208 * t3477 - 572 * t3479 + 12 * t3486
            t3491 = 3168 * t3468 - 3168 * t3479 - 288 * t3495 + 288 * t3496
            t3490 = t3474 - 19 * t3478 + 45 * t3480 - 45 * t3481 + 19 * t3483 - t3485 + t3494
            t3489 = 65 * t3474 + 429 * t3478 + 429 * t3480 - 429 * t3481 - 429 * t3483 - 65 * t3485 + t3494
            t3488 = 36 - 36 * t3463 + 900 * t3474 - 396 * t3478 - 3564 * t3480 + 3564 * t3481 + 396 * t3483 - 900 * t3485
            t3476 = 15 * phi1
            tfunc[..., c] = 0.155e3 / 0.262144e6 * np.sqrt(0.13e2) * np.sqrt((1 - t3475)) * np.sqrt((1 + t3475)) * np.sqrt(0.7e1) * np.sqrt(0.29e2) * (-(t3489 + t3492) * np.sin((-t3476 + 12 * phi2)) + (-t3489 + t3492) * np.sin((t3476 + 12 * phi2)) - (-t3488 + t3491) * np.sin((-t3476 + 8 * phi2)) + (t3488 + t3491) * np.sin((t3476 + 8 * phi2)) - 0.69e2 * (t3490 + t3493) * np.sin((-t3476 + 4 * phi2)) + 0.69e2 * (-t3490 + t3493) * np.sin((t3476 + 4 * phi2)))

        if Bindx == 114:
            t3508 = np.cos(phi)
            t3507 = t3508 ** 2
            t3510 = t3507 ** 2
            t3511 = t3507 * t3510
            t3514 = t3511 ** 2
            t3512 = t3510 ** 2
            t3509 = np.sqrt(0.2e1)
            t3503 = t3507 * t3512
            t3501 = t3507 * t3514
            t3500 = t3512 ** 2
            tfunc[..., c] = -0.11e2 / 0.29622272e8 * t3509 * np.sqrt(0.113e3) * np.sqrt(0.19e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * ((601080390 * t3500) - (2326762800 * t3501) + (3650610600 * t3514) - (2974571600 * t3503) + (1338557220 * t3512) - (325909584 * t3511) + (38798760 * t3510) - (1750320 * t3507) + 0.12870e5 + ((-775077345 * t3500 + 3200319360 * t3501 - 5355706860 * t3514 + 4653337920 * t3503 - 2231831910 * t3512 + 578808384 * t3511 - 73340652 * t3510 + 3518592 * t3507 - 27489) * np.cos((4 * phi2)) + (158179050 * t3500 - 775587600 * t3501 + 1557509400 * t3514 - 1640479600 * t3503 + 962337020 * t3512 - 307200880 * t3511 + 48061720 * t3510 - 2846480 * t3507 + 27370) * np.cos((8 * phi2)) + (15817905 * t3500 - 97968960 * t3501 + 255690540 * t3514 - 362597760 * t3503 + 299290950 * t3512 - 141886080 * t3511 + 34978860 * t3510 - 3378240 * t3507 + 52785) * np.cos((12 * phi2))) * t3509)

        if Bindx == 115:
            t3529 = np.cos(phi)
            t3528 = t3529 ** 2
            t3531 = t3528 ** 2
            t3532 = t3528 * t3531
            t3535 = t3532 ** 2
            t3533 = t3531 ** 2
            t3530 = np.sqrt(0.2e1)
            t3524 = t3528 * t3533
            t3522 = t3528 * t3535
            t3521 = t3533 ** 2
            tfunc[..., c] = 0.33e2 / 0.947912704e9 * t3530 * np.sqrt(0.3e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.23e2) * np.sqrt(0.19e2) * np.sqrt(0.17e2) * (((300540195 * t3521 - 1163381400 * t3522 + 1825305300 * t3535 - 1487285800 * t3524 + 669278610 * t3533 - 162954792 * t3532 + 19399380 * t3531 - 875160 * t3528 + 6435) * t3530) + (451585680 * t3521 - 1864611840 * t3522 + 3120411840 * t3535 - 2711188480 * t3524 + 1300339040 * t3533 - 337232896 * t3532 + 42730688 * t3531 - 2050048 * t3528 + 16016) * np.cos((4 * phi2)) + (21036600 * t3521 - 103147200 * t3522 + 207136800 * t3535 - 218171200 * t3524 + 127983440 * t3533 - 40855360 * t3532 + 6391840 * t3531 - 378560 * t3528 + 3640) * np.cos((8 * phi2)) + (71920 * t3521 - 445440 * t3522 + 1162560 * t3535 - 1648640 * t3524 + 1360800 * t3533 - 645120 * t3532 + 159040 * t3531 - 15360 * t3528 + 240) * np.cos((12 * phi2)) + (32770 * t3521 + 2293900 * t3533 + 32770 - 1835120 * t3524 - 1835120 * t3532 + 917560 * t3535 + 917560 * t3531 - 262160 * t3522 - 262160 * t3528) * np.cos((16 * phi2)))

        if Bindx == 116:
            t3561 = np.cos(phi)
            t3559 = t3561 ** 2
            t3563 = t3559 ** 2
            t3562 = t3561 * t3559
            t3565 = t3562 ** 2
            t3567 = t3563 ** 2
            t3564 = t3561 * t3563
            t3569 = t3564 ** 2
            t3571 = t3565 ** 2
            t3566 = t3561 * t3565
            t3573 = t3566 ** 2
            t3575 = t3567 ** 2
            t3582 = 596160 * t3559 - 6172740 * t3563 + 25038720 * t3565 - 52816050 * t3567 + 63987840 * t3569 - 45121860 * t3571 + 17288640 * t3573 - 2791395 * t3575 - 9315
            t3581 = -334880 * t3559 + 5654320 * t3563 - 36141280 * t3565 + 113216120 * t3567 - 192997600 * t3569 + 183236400 * t3571 - 91245600 * t3573 + 18609300 * t3575 + 3220
            t3580 = 206976 * t3559 - 4314156 * t3563 + 34047552 * t3565 - 131284230 * t3567 + 273725760 * t3569 - 315041580 * t3571 + 188254080 * t3573 - 45592785 * t3575 - 1617
            t3544 = t3561 * t3575
            t3546 = t3561 * t3573
            t3548 = t3561 * t3571
            t3550 = t3561 * t3569
            t3552 = t3561 * t3567
            t3579 = 3721860 * t3544 - 23891940 * t3546 + 65291940 * t3548 - 98445060 * t3550 + 88533900 * t3552 + 99360 * t3561 - 2156940 * t3562 + 14576940 * t3564 - 47730060 * t3566
            t3578 = 37218600 * t3544 - 196898400 * t3546 + 434534400 * t3548 - 516101600 * t3550 + 354463120 * t3552 + 83720 * t3561 - 2910880 * t3562 + 29933120 * t3564 - 140322080 * t3566
            t3577 = -182371140 * t3544 + 841260420 * t3546 - 1604014020 * t3548 + 1629439140 * t3550 - 946882860 * t3552 - 103488 * t3561 + 4417644 * t3562 - 55385484 * t3564 + 313639788 * t3566
            tfunc[..., c] = -0.11e2 / 0.29622272e8 * np.sqrt(0.1921e4) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.19e2) * ((282861360 * t3544 - 1240940160 * t3546 + 2246529600 * t3548 - 2163324800 * t3550 + 1189828640 * t3552 - 372468096 * t3566 + 62078016 * t3564 - 4667520 * t3562 + 102960 * t3561) * np.sin(phi1) + (t3578 - t3581) * np.sin(phi1 - (8 * phi2)) + (t3577 - t3580) * np.sin(phi1 - (4 * phi2)) + (t3577 + t3580) * np.sin(phi1 + (4 * phi2)) + (t3578 + t3581) * np.sin(phi1 + (8 * phi2)) + (t3579 + t3582) * np.sin(phi1 - (12 * phi2)) + (t3579 - t3582) * np.sin(phi1 + (12 * phi2))) * ((1 + t3561) ** (-0.1e1 / 0.2e1)) * ((1 - t3561) ** (-0.1e1 / 0.2e1))

        if Bindx == 117:
            t3608 = np.cos(phi)
            t3606 = t3608 ** 2
            t3610 = t3606 ** 2
            t3609 = t3608 * t3606
            t3612 = t3609 ** 2
            t3614 = t3610 ** 2
            t3611 = t3608 * t3610
            t3616 = t3611 ** 2
            t3618 = t3612 ** 2
            t3613 = t3608 * t3612
            t3620 = t3613 ** 2
            t3622 = t3614 ** 2
            t3631 = -5760 * t3606 + 59640 * t3610 - 241920 * t3612 + 510300 * t3614 - 618240 * t3616 + 435960 * t3618 - 167040 * t3620 + 26970 * t3622 + 90
            t3591 = t3608 * t3622
            t3593 = t3608 * t3620
            t3595 = t3608 * t3618
            t3597 = t3608 * t3616
            t3599 = t3608 * t3614
            t3630 = 35960 * t3591 - 230840 * t3593 + 630840 * t3595 - 951160 * t3597 + 855400 * t3599 + 960 * t3608 - 20840 * t3609 + 140840 * t3611 - 461160 * t3613
            t3629 = -131080 * t3606 + 458780 * t3610 - 917560 * t3612 + 1146950 * t3614 - 917560 * t3616 + 458780 * t3618 - 131080 * t3620 + 16385 * t3622 + 16385
            t3628 = 16385 * t3591 - 131080 * t3593 + 458780 * t3595 - 917560 * t3597 + 1146950 * t3599 + 16385 * t3608 - 131080 * t3609 + 458780 * t3611 - 917560 * t3613
            t3627 = -94640 * t3606 + 1597960 * t3610 - 10213840 * t3612 + 31995860 * t3614 - 54542800 * t3616 + 51784200 * t3618 - 25786800 * t3620 + 5259150 * t3622 + 910
            t3626 = 256256 * t3606 - 5341336 * t3610 + 42154112 * t3612 - 162542380 * t3614 + 338898560 * t3616 - 390051480 * t3618 + 233076480 * t3620 - 56448210 * t3622 - 2002
            t3625 = 10518300 * t3591 - 55645200 * t3593 + 122803200 * t3595 - 145854800 * t3597 + 100174360 * t3599 + 23660 * t3608 - 822640 * t3609 + 8459360 * t3611 - 39656240 * t3613
            t3624 = 225792840 * t3591 - 1041560520 * t3593 + 1985922120 * t3595 - 2017400840 * t3597 + 1172331160 * t3599 + 128128 * t3608 - 5469464 * t3609 + 68572504 * t3611 - 388315928 * t3613
            tfunc[..., c] = 0.33e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.113e3) * np.sqrt(0.19e2) * np.sqrt(0.31e2) * np.sqrt(0.23e2) * ((601080390 * t3591 - 2636997840 * t3593 + 4773875400 * t3595 - 4597065200 * t3597 + 2528385860 * t3599 - 791494704 * t3613 + 131915784 * t3611 - 9918480 * t3609 + 218790 * t3608) * np.sin(phi1) + (t3625 - t3627) * np.sin(phi1 - (8 * phi2)) + (t3624 + t3626) * np.sin(phi1 - (4 * phi2)) + (t3624 - t3626) * np.sin(phi1 + (4 * phi2)) + (t3625 + t3627) * np.sin(phi1 + (8 * phi2)) + (t3628 - t3629) * np.sin(phi1 - (16 * phi2)) + (t3630 - t3631) * np.sin(phi1 - (12 * phi2)) + (t3630 + t3631) * np.sin(phi1 + (12 * phi2)) + (t3628 + t3629) * np.sin(phi1 + (16 * phi2))) * ((1 + t3608) ** (-0.1e1 / 0.2e1)) * ((1 - t3608) ** (-0.1e1 / 0.2e1))

        if Bindx == 118:
            t3654 = np.cos(phi)
            t3653 = t3654 ** 2
            t3657 = t3653 ** 2
            t3661 = t3657 ** 2
            t3639 = t3661 ** 2
            t3656 = t3654 * t3653
            t3659 = t3656 ** 2
            t3658 = t3654 * t3657
            t3663 = t3658 ** 2
            t3665 = t3659 ** 2
            t3660 = t3654 * t3659
            t3667 = t3660 ** 2
            t3675 = 620310 * t3639 + 8556 * t3653 + 19320 * t3657 - 840420 * t3659 + 3622500 * t3661 - 6763932 * t3663 + 6495384 * t3665 - 3161580 * t3667 - 138
            t3640 = t3654 * t3667
            t3642 = t3654 * t3665
            t3644 = t3654 * t3663
            t3646 = t3654 * t3661
            t3674 = -930465 * t3640 + 5056527 * t3642 - 11351949 * t3644 + 13478115 * t3646 + 26289 * t3654 - 535647 * t3656 + 3214365 * t3658 - 8957235 * t3660
            t3673 = -15197595 * t3640 + 55397685 * t3642 - 80180415 * t3644 + 58575825 * t3646 + 9163 * t3654 - 378917 * t3656 + 4448367 * t3658 - 22674113 * t3660
            t3672 = -6203100 * t3640 + 26773380 * t3642 - 46405260 * t3644 + 41057300 * t3646 + 14812 * t3654 - 495236 * t3656 + 4700556 * t3658 - 19442452 * t3660
            t3671 = 6203100 * t3639 - 65688 * t3653 + 1127000 * t3657 - 7572152 * t3659 + 25606176 * t3661 - 47886920 * t3663 + 50201640 * t3665 - 27613800 * t3667 + 644
            t3670 = -30395190 * t3639 + 135828 * t3653 - 2798488 * t3657 + 21928676 * t3659 - 84349188 * t3661 + 176285340 * t3663 - 204347640 * t3665 + 123541740 * t3667 - 1078
            t3655 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.29622272e8 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.5e1) * np.sqrt(0.13e2) * np.sqrt(0.19e2) * ((1144 + 47143560 * t3639 - 185532720 * t3667 + 295866480 * t3665 - 244964720 * t3663 + 111983872 * t3661 - 27691664 * t3659 + 3347344 * t3657 - 153296 * t3653) * np.cos(t3655) + (t3671 + t3672) * np.cos(-t3655 + (8 * phi2)) + (t3670 - t3673) * np.cos(-t3655 + (4 * phi2)) + (t3670 + t3673) * np.cos(t3655 + (4 * phi2)) + (t3671 - t3672) * np.cos(t3655 + (8 * phi2)) + (t3674 + t3675) * np.cos(-t3655 + (12 * phi2)) + (-t3674 + t3675) * np.cos(t3655 + (12 * phi2)))

        if Bindx == 119:
            t3700 = np.cos(phi)
            t3699 = t3700 ** 2
            t3702 = t3700 * t3699
            t3705 = t3702 ** 2
            t3711 = t3705 ** 2
            t3688 = t3700 * t3711
            t3725 = t3702 - t3688
            t3703 = t3699 ** 2
            t3704 = t3700 * t3703
            t3709 = t3704 ** 2
            t3724 = t3705 + t3711 - t3703 - t3709
            t3707 = t3703 ** 2
            t3685 = t3707 ** 2
            t3706 = t3700 * t3705
            t3713 = t3706 ** 2
            t3723 = -16385 + 16385 * t3685 + 98310 * t3699 - 98310 * t3713
            t3686 = t3700 * t3713
            t3690 = t3700 * t3709
            t3692 = t3700 * t3707
            t3722 = -32770 * t3686 + 32770 * t3700 + 1146950 * t3692 - 1146950 * t3706 - 688170 * t3690 + 688170 * t3704
            t3721 = 35960 * t3685 + 496 * t3699 + 1120 * t3703 - 48720 * t3705 + 210000 * t3707 - 392112 * t3709 + 376544 * t3711 - 183280 * t3713 - 8
            t3720 = 53940 * t3686 - 293132 * t3688 + 658084 * t3690 - 781340 * t3692 - 1524 * t3700 + 31052 * t3702 - 186340 * t3704 + 519260 * t3706
            t3719 = -10518300 * t3686 + 45398340 * t3688 - 78687180 * t3690 + 69618900 * t3692 + 25116 * t3700 - 839748 * t3702 + 7970508 * t3704 - 32967636 * t3706
            t3718 = -112896420 * t3686 + 411525660 * t3688 - 595625940 * t3690 + 435134700 * t3692 + 68068 * t3700 - 2814812 * t3702 + 33045012 * t3704 - 168436268 * t3706
            t3717 = 10518300 * t3685 - 111384 * t3699 + 1911000 * t3703 - 12839736 * t3705 + 43419168 * t3707 - 81199560 * t3709 + 85124520 * t3711 - 46823400 * t3713 + 1092
            t3716 = 225792840 * t3685 - 1009008 * t3699 + 20788768 * t3703 - 162898736 * t3705 + 626593968 * t3707 - 1309548240 * t3709 + 1518011040 * t3711 - 917738640 * t3713 + 8008
            t3701 = 2 * phi1
            t3679 = np.cos((-t3701 + 16 * phi2))
            t3676 = np.cos((t3701 + 16 * phi2))
            tfunc[..., c] = -0.33e2 / 0.236978176e9 * np.sqrt(0.5e1) * np.sqrt(0.113e3) * np.sqrt(0.19e2) * np.sqrt(0.31e2) * np.sqrt(0.23e2) * ((601080390 * t3685 - 2365542180 * t3713 + 3772297620 * t3711 - 3123300180 * t3709 + 1427794368 * t3707 - 353068716 * t3705 + 42678636 * t3703 - 1954524 * t3699 + 14586) * np.cos(t3701) + ((t3722 + t3723) * t3679) + ((-t3722 + t3723) * t3676) + (t3717 + t3719) * np.cos(-t3701 + (8 * phi2)) + (t3716 + t3718) * np.cos(-t3701 + (4 * phi2)) + (t3716 - t3718) * np.cos(t3701 + (4 * phi2)) + (t3717 - t3719) * np.cos(t3701 + (8 * phi2)) + (-t3720 + t3721) * np.cos(-t3701 + (12 * phi2)) + (t3720 + t3721) * np.cos(t3701 + (12 * phi2)) + (229390 * (t3724 - t3725) * t3679) + (229390 * (t3724 + t3725) * t3676))

        if Bindx == 120:
            t3749 = np.cos(phi)
            t3748 = t3749 ** 2
            t3752 = t3748 ** 2
            t3756 = t3752 ** 2
            t3764 = t3756 ** 2
            t3733 = t3749 * t3764
            t3751 = t3749 * t3748
            t3754 = t3751 ** 2
            t3755 = t3749 * t3754
            t3762 = t3755 ** 2
            t3735 = t3749 * t3762
            t3760 = t3754 ** 2
            t3737 = t3749 * t3760
            t3753 = t3749 * t3752
            t3758 = t3753 ** 2
            t3739 = t3749 * t3758
            t3741 = t3749 * t3756
            t3771 = -12406200 * t3733 + 54427200 * t3735 - 96346080 * t3737 + 87753280 * t3739 - 43435408 * t3741 - 1656 * t3749 + 78016 * t3751 - 1440352 * t3753 + 11371200 * t3755
            t3770 = 211140 * t3748 - 2405616 * t3752 + 11775540 * t3754 - 29937030 * t3756 + 42912204 * t3758 - 35121000 * t3760 + 15359676 * t3762 - 2791395 * t3764 - 3519
            t3769 = -1240620 * t3733 + 5242620 * t3735 - 6933948 * t3737 - 595332 * t3739 + 10337580 * t3741 + 47472 * t3749 - 907212 * t3751 + 4784460 * t3753 - 10735020 * t3755
            t3768 = 285200 * t3748 - 4716288 * t3752 + 30110864 * t3754 - 95939624 * t3756 + 168707760 * t3758 - 166759200 * t3760 + 86923440 * t3762 - 18609300 * t3764 - 2852
            t3767 = 238700 * t3748 - 4830672 * t3752 + 37111228 * t3754 - 139707106 * t3756 + 285308100 * t3758 - 322740600 * t3760 + 190215060 * t3762 - 45592785 * t3764 - 1925
            t3766 = 60790380 * t3733 - 272576220 * t3735 + 507352860 * t3737 - 505961820 * t3739 + 290663604 * t3741 + 33264 * t3749 - 1382612 * t3751 + 17053652 * t3753 - 95973108 * t3755
            t3750 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.29622272e8 * np.sqrt(0.7e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.5e1) * np.sqrt(0.13e2) * ((-94287120 * t3733 + 425812800 * t3735 - 793731840 * t3737 + 787159360 * t3739 - 445935776 * t3741 + 143805376 * t3755 - 24692096 * t3753 + 1912768 * t3751 - 43472 * t3749) * np.sin(t3750) - (-t3768 + t3771) * np.sin(-t3750 + (8 * phi2)) - (t3766 + t3767) * np.sin(-t3750 + (4 * phi2)) + (t3766 - t3767) * np.sin(t3750 + (4 * phi2)) + (t3768 + t3771) * np.sin(t3750 + (8 * phi2)) - (t3769 - t3770) * np.sin(-t3750 + (12 * phi2)) + (t3769 + t3770) * np.sin(t3750 + (12 * phi2))) * ((1 + t3749) ** (-0.1e1 / 0.2e1)) * ((1 - t3749) ** (-0.1e1 / 0.2e1))

        if Bindx == 121:
            t3797 = np.cos(phi)
            t3796 = t3797 ** 2
            t3799 = t3797 * t3796
            t3802 = t3799 ** 2
            t3800 = t3796 ** 2
            t3804 = t3800 ** 2
            t3801 = t3797 * t3800
            t3806 = t3801 ** 2
            t3808 = t3802 ** 2
            t3803 = t3797 * t3802
            t3810 = t3803 ** 2
            t3812 = t3804 ** 2
            t3821 = 65540 * t3796 - 458780 * t3802 + 1146950 * t3804 - 1376340 * t3806 + 917560 * t3808 - 327700 * t3810 + 49155 * t3812 - 16385
            t3781 = t3797 * t3812
            t3783 = t3797 * t3810
            t3787 = t3797 * t3806
            t3789 = t3797 * t3804
            t3820 = 16385 * t3781 - 65540 * t3783 + 458780 * t3787 - 1146950 * t3789 - 49155 * t3797 + 327700 * t3799 - 917560 * t3801 + 1376340 * t3803
            t3819 = -6120 * t3796 + 69728 * t3800 - 341320 * t3802 + 867740 * t3804 - 1243832 * t3806 + 1018000 * t3808 - 445208 * t3810 + 80910 * t3812 + 102
            t3785 = t3797 * t3808
            t3818 = 35960 * t3781 - 151960 * t3783 + 200984 * t3785 + 17256 * t3787 - 299640 * t3789 - 1376 * t3797 + 26296 * t3799 - 138680 * t3801 + 311160 * t3803
            t3817 = 10518300 * t3781 - 46144800 * t3783 + 81684720 * t3785 - 74399520 * t3787 + 36825672 * t3789 + 1404 * t3797 - 66144 * t3799 + 1221168 * t3801 - 9640800 * t3803
            t3816 = 241800 * t3796 - 3998592 * t3800 + 25528776 * t3802 - 81340116 * t3804 + 143034840 * t3806 - 141382800 * t3808 + 73695960 * t3810 - 15777450 * t3812 - 2418
            t3815 = 886600 * t3796 - 17942496 * t3800 + 137841704 * t3802 - 518912108 * t3804 + 1059715800 * t3806 - 1198750800 * t3808 + 706513080 * t3810 - 169344630 * t3812 - 7150
            t3814 = 225792840 * t3781 - 1012425960 * t3783 + 1884453480 * t3785 - 1879286760 * t3787 + 1079607672 * t3789 + 123552 * t3797 - 5135416 * t3799 + 63342136 * t3801 - 356471544 * t3803
            t3798 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.23e2) * np.sqrt(0.7e1) * ((601080390 * t3781 - 2714556600 * t3783 + 5060040480 * t3785 - 5018140920 * t3787 + 2842840572 * t3789 - 916759272 * t3803 + 157412112 * t3801 - 12193896 * t3799 + 277134 * t3797) * np.sin(t3798) - (t3820 - t3821) * np.sin(-t3798 + (16 * phi2)) + (t3820 + t3821) * np.sin(t3798 + (16 * phi2)) - (t3816 + t3817) * np.sin(-t3798 + (8 * phi2)) - (t3814 + t3815) * np.sin(-t3798 + (4 * phi2)) + (t3814 - t3815) * np.sin(t3798 + (4 * phi2)) + (-t3816 + t3817) * np.sin(t3798 + (8 * phi2)) - (t3818 - t3819) * np.sin(-t3798 + (12 * phi2)) + (t3818 + t3819) * np.sin(t3798 + (12 * phi2))) * ((1 + t3797) ** (-0.1e1 / 0.2e1)) * ((1 - t3797) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t3844 = np.cos(phi)
            t3843 = t3844 ** 2
            t3846 = t3844 * t3843
            t3849 = t3846 ** 2
            t3850 = t3844 * t3849
            t3857 = t3850 ** 2
            t3830 = t3844 * t3857
            t3855 = t3849 ** 2
            t3832 = t3844 * t3855
            t3847 = t3843 ** 2
            t3848 = t3844 * t3847
            t3853 = t3848 ** 2
            t3834 = t3844 * t3853
            t3851 = t3847 ** 2
            t3836 = t3844 * t3851
            t3865 = -12096045 * t3830 + 53196585 * t3832 - 91606125 * t3834 + 76339185 * t3836 - 40365 * t3844 + 381225 * t3846 + 3691155 * t3848 - 29865615 * t3850
            t3864 = -80640300 * t3830 + 319959900 * t3832 - 510482700 * t3834 + 418363100 * t3836 + 143060 * t3844 - 4586660 * t3846 + 43460340 * t3848 - 186216740 * t3850
            t3863 = -197568735 * t3830 + 732916275 * t3832 - 1085670495 * t3834 + 816475275 * t3836 + 150689 * t3844 - 5943245 * t3846 + 66777249 * t3848 - 327165685 * t3850
            t3829 = t3851 ** 2
            t3862 = 4032015 * t3829 + 1255800 * t3843 - 11714820 * t3847 + 43594200 * t3849 - 77527710 * t3851 + 65768040 * t3853 - 18101460 * t3855 - 7283640 * t3857 - 22425
            t3861 = 40320150 * t3829 + 507840 * t3843 - 7143800 * t3847 + 32818240 * t3849 - 52802940 * t3851 - 11003200 * t3853 + 122171400 * t3855 - 124862400 * t3857 - 5290
            t3860 = -197568735 * t3829 + 766920 * t3843 - 15373820 * t3847 + 119731304 * t3849 - 466534530 * t3851 + 1002881880 * t3853 - 1208707500 * t3855 + 764782200 * t3857 - 6391
            t3845 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.14811136e8 * np.sqrt(0.7e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * ((10868 + 306433140 * t3829 - 1265272320 * t3857 + 2117422320 * t3855 - 1839735040 * t3853 + 882372920 * t3851 - 228836608 * t3849 + 28995824 * t3847 - 1391104 * t3843) * np.cos(t3845) + (t3861 + t3864) * np.cos(-t3845 + (8 * phi2)) + (t3861 - t3864) * np.cos(t3845 + (8 * phi2)) + (t3862 + t3865) * np.cos(-t3845 + (12 * phi2)) + (t3862 - t3865) * np.cos(t3845 + (12 * phi2)) + (t3860 - t3863) * np.cos((4 * phi1 - 4 * phi2)) + (t3860 + t3863) * np.cos((4 * phi1 + 4 * phi2)))

        if Bindx == 123:
            t3890 = np.cos(phi)
            t3889 = t3890 ** 2
            t3893 = t3889 ** 2
            t3892 = t3890 * t3889
            t3895 = t3892 ** 2
            t3901 = t3895 ** 2
            t3915 = -t3893 - t3901
            t3878 = t3890 * t3901
            t3897 = t3893 ** 2
            t3882 = t3890 * t3897
            t3896 = t3890 * t3895
            t3914 = -t3878 - t3882 - t3892 - t3896
            t3903 = t3896 ** 2
            t3876 = t3890 * t3903
            t3894 = t3890 * t3893
            t3899 = t3894 ** 2
            t3880 = t3890 * t3899
            t3913 = -65540 * t3876 - 65540 * t3890 - 589860 * t3880 - 589860 * t3894
            t3875 = t3897 ** 2
            t3912 = 16385 * t3875 + 1048640 * t3895 - 1474650 * t3897 + 1048640 * t3899 + 16385
            t3911 = -107880 * t3876 + 474440 * t3878 - 817000 * t3880 + 680840 * t3882 - 360 * t3890 + 3400 * t3892 + 32920 * t3894 - 266360 * t3896
            t3910 = 35960 * t3875 + 11200 * t3889 - 104480 * t3893 + 388800 * t3895 - 691440 * t3897 + 586560 * t3899 - 161440 * t3901 - 64960 * t3903 - 200
            t3909 = -21036600 * t3876 + 83467800 * t3878 - 133169400 * t3880 + 109138200 * t3882 + 37320 * t3890 - 1196520 * t3892 + 11337480 * t3894 - 48578280 * t3896
            t3908 = 10518300 * t3875 + 132480 * t3889 - 1863600 * t3893 + 8561280 * t3895 - 13774680 * t3897 - 2870400 * t3899 + 31870800 * t3901 - 32572800 * t3903 - 1380
            t3907 = -225792840 * t3876 + 837618600 * t3878 - 1240766280 * t3880 + 933114600 * t3882 + 172216 * t3890 - 6792280 * t3892 + 76316856 * t3894 - 373903640 * t3896
            t3906 = 225792840 * t3875 - 876480 * t3889 + 17570080 * t3893 - 136835776 * t3895 + 533182320 * t3897 - 1146150720 * t3899 + 1381380000 * t3901 - 874036800 * t3903 + 7304
            t3891 = 4 * phi1
            t3871 = np.cos((-t3891 + 16 * phi2))
            t3868 = np.cos((t3891 + 16 * phi2))
            tfunc[..., c] = 0.33e2 / 0.473956352e9 * np.sqrt(0.2e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.23e2) * np.sqrt(0.13e2) * np.sqrt(0.7e1) * ((601080390 * t3875 - 2481880320 * t3903 + 4153405320 * t3901 - 3608711040 * t3899 + 1730808420 * t3897 - 448871808 * t3895 + 56876424 * t3893 - 2728704 * t3889 + 21318) * np.cos(t3891) + ((t3912 + t3913) * t3871) + ((t3912 - t3913) * t3868) + (t3908 + t3909) * np.cos(-t3891 + (8 * phi2)) + (t3908 - t3909) * np.cos(t3891 + (8 * phi2)) + (t3910 + t3911) * np.cos(-t3891 + (12 * phi2)) + (t3910 - t3911) * np.cos(t3891 + (12 * phi2)) + (t3906 + t3907) * np.cos((4 * phi1 - 4 * phi2)) + (t3906 - t3907) * np.cos((4 * phi1 + 4 * phi2)) + (327700 * (-t3914 + t3915) * t3871) + (327700 * (t3914 + t3915) * t3868))

        if Bindx == 124:
            t3939 = np.cos(phi)
            t3938 = t3939 ** 2
            t3942 = t3938 ** 2
            t3941 = t3939 * t3938
            t3944 = t3941 ** 2
            t3946 = t3942 ** 2
            t3943 = t3939 * t3942
            t3948 = t3943 ** 2
            t3950 = t3944 ** 2
            t3945 = t3939 * t3944
            t3952 = t3945 ** 2
            t3954 = t3946 ** 2
            t3961 = -3089360 * t3938 + 51854880 * t3942 - 361477200 * t3944 + 1300498200 * t3946 - 2598383600 * t3948 + 2903409600 * t3950 - 1696047600 * t3952 + 403201500 * t3954 + 33580
            t3960 = 6815116 * t3938 - 129812760 * t3942 + 945287420 * t3944 - 3398637550 * t3946 + 6678759780 * t3948 - 7320811680 * t3950 + 4206302100 * t3952 - 987843675 * t3954 - 58751
            t3959 = -5364060 * t3938 + 40580280 * t3942 - 103459980 * t3944 + 51227670 * t3946 + 200048940 * t3948 - 371860320 * t3950 + 249204540 * t3952 - 60480225 * t3954 + 103155
            t3923 = t3939 * t3954
            t3925 = t3939 * t3952
            t3927 = t3939 * t3950
            t3929 = t3939 * t3948
            t3931 = t3939 * t3946
            t3958 = 16128060 * t3923 + 2601300 * t3925 - 227066580 * t3927 + 570366420 * t3929 - 627953820 * t3931 - 645840 * t3939 + 13257660 * t3941 - 101953020 * t3943 + 355265820 * t3945
            t3957 = 161280600 * t3923 - 416208000 * t3925 + 55255200 * t3927 + 850595200 * t3929 - 1149361520 * t3931 - 713000 * t3939 + 21417600 * t3941 - 181530720 * t3943 + 659264640 * t3945
            t3956 = -790274940 * t3923 + 3339548940 * t3925 - 5814981900 * t3927 + 5393033100 * t3929 - 2876351940 * t3931 - 301840 * t3939 + 12062820 * t3941 - 150426276 * t3943 + 887692036 * t3945
            t3940 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.29622272e8 * np.sqrt(0.17e2) * np.sqrt(0.113e3) * ((1225732560 * t3923 - 5851884480 * t3925 + 11551063680 * t3927 - 12149159360 * t3929 + 7308947360 * t3931 - 2505552192 * t3945 + 457673216 * t3943 - 37733696 * t3941 + 912912 * t3939) * np.sin(t3940) - (t3957 - t3961) * np.sin(-t3940 + (8 * phi2)) - (t3956 - t3960) * np.sin(-t3940 + (4 * phi2)) + (t3956 + t3960) * np.sin(t3940 + (4 * phi2)) + (t3957 + t3961) * np.sin(t3940 + (8 * phi2)) - (t3958 + t3959) * np.sin(-t3940 + (12 * phi2)) + (t3958 - t3959) * np.sin(t3940 + (12 * phi2))) * ((1 + t3939) ** (-0.1e1 / 0.2e1)) * ((1 - t3939) ** (-0.1e1 / 0.2e1))

        if Bindx == 125:
            t3987 = np.cos(phi)
            t3986 = t3987 ** 2
            t3990 = t3986 ** 2
            t3994 = t3990 ** 2
            t4002 = t3994 ** 2
            t3971 = t3987 * t4002
            t3989 = t3987 * t3986
            t3992 = t3989 ** 2
            t3993 = t3987 * t3992
            t4000 = t3993 ** 2
            t3973 = t3987 * t4000
            t3998 = t3992 ** 2
            t3975 = t3987 * t3998
            t3991 = t3987 * t3990
            t3996 = t3991 ** 2
            t3977 = t3987 * t3996
            t3979 = t3987 * t3994
            t4011 = 35960 * t3971 + 5800 * t3973 - 506280 * t3975 + 1271720 * t3977 - 1400120 * t3979 - 1440 * t3987 + 29560 * t3989 - 227320 * t3991 + 792120 * t3993
            t4010 = -11960 * t3986 + 90480 * t3990 - 230680 * t3992 + 114220 * t3994 + 446040 * t3996 - 829120 * t3998 + 555640 * t4000 - 134850 * t4002 + 230
            t4009 = 65540 * t3986 - 655400 * t3990 + 1638500 * t3992 - 1802350 * t3994 + 720940 * t3996 + 262160 * t3998 - 327700 * t4000 + 81925 * t4002 + 16385
            t4008 = 16385 * t3971 + 65540 * t3973 - 655400 * t3975 + 1638500 * t3977 - 1802350 * t3979 + 81925 * t3987 - 327700 * t3989 + 262160 * t3991 + 720940 * t3993
            t4007 = -201480 * t3986 + 3381840 * t3990 - 23574600 * t3992 + 84815100 * t3994 - 169459800 * t3996 + 189352800 * t3998 - 110611800 * t4000 + 26295750 * t4002 + 2190
            t4006 = 10518300 * t3971 - 27144000 * t3973 + 3603600 * t3975 + 55473600 * t3977 - 74958360 * t3979 - 46500 * t3987 + 1396800 * t3989 - 11838960 * t3991 + 42995520 * t3993
            t4005 = -1947176 * t3986 + 37089360 * t3990 - 270082120 * t3992 + 971039300 * t3994 - 1908217080 * t3996 + 2091660480 * t3998 - 1201800600 * t4000 + 282241050 * t4002 + 16786
            t4004 = 225792840 * t3971 - 954156840 * t3973 + 1661423400 * t3975 - 1540866600 * t3977 + 821814840 * t3979 + 86240 * t3987 - 3446520 * t3989 + 42978936 * t3991 - 253626296 * t3993
            t3988 = 5 * phi1
            tfunc[..., c] = 0.33e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.113e3) * np.sqrt(0.13e2) * np.sqrt(0.23e2) * np.sqrt(0.31e2) * ((601080390 * t3971 - 2869674120 * t3973 + 5664463920 * t3975 - 5957760840 * t3977 + 3584195340 * t3979 - 1228684248 * t3993 + 224435904 * t3991 - 18504024 * t3989 + 447678 * t3987) * np.sin(t3988) - (t4006 - t4007) * np.sin(-t3988 + (8 * phi2)) - (t4004 - t4005) * np.sin(-t3988 + (4 * phi2)) + (t4004 + t4005) * np.sin(t3988 + (4 * phi2)) + (t4006 + t4007) * np.sin(t3988 + (8 * phi2)) - (t4008 - t4009) * np.sin(-t3988 + (16 * phi2)) - (t4010 + t4011) * np.sin(-t3988 + (12 * phi2)) + (-t4010 + t4011) * np.sin(t3988 + (12 * phi2)) + (t4008 + t4009) * np.sin(t3988 + (16 * phi2))) * ((1 + t3987) ** (-0.1e1 / 0.2e1)) * ((1 - t3987) ** (-0.1e1 / 0.2e1))

        if Bindx == 126:
            t4034 = np.cos(phi)
            t4033 = t4034 ** 2
            t4036 = t4034 * t4033
            t4039 = t4036 ** 2
            t4040 = t4034 * t4039
            t4047 = t4040 ** 2
            t4020 = t4034 * t4047
            t4045 = t4039 ** 2
            t4022 = t4034 * t4045
            t4037 = t4033 ** 2
            t4038 = t4034 * t4037
            t4043 = t4038 ** 2
            t4024 = t4034 * t4043
            t4041 = t4037 ** 2
            t4026 = t4034 * t4041
            t4055 = -241920900 * t4020 + 819409500 * t4022 - 1071825300 * t4024 + 674978700 * t4026 + 12420 * t4034 - 1065820 * t4036 + 26793620 * t4038 - 206382220 * t4040
            t4054 = -36288135 * t4020 + 96898425 * t4022 - 39248235 * t4024 - 111151755 * t4026 - 811785 * t4034 + 12822615 * t4036 - 67315365 * t4038 + 145094235 * t4040
            t4019 = t4041 ** 2
            t4053 = 8064030 * t4019 - 1237860 * t4033 - 466440 * t4037 + 51505740 * t4039 - 193590540 * t4041 + 286340340 * t4043 - 180297000 * t4045 + 29654820 * t4047 + 26910
            t4052 = 592706205 * t4020 - 2262480675 * t4022 + 3468111465 * t4024 - 2719929975 * t4026 - 658413 * t4034 + 23898035 * t4036 - 249456697 * t4038 + 1147810055 * t4040
            t4051 = 80640300 * t4019 + 3837320 * t4033 - 53355400 * t4037 + 279605480 * t4039 - 693462880 * t4041 + 833432600 * t4043 - 383019000 * t4045 - 67633800 * t4047 - 44620
            t4050 = -395137470 * t4019 + 334180 * t4033 - 8606360 * t4037 + 95133108 * t4039 - 503971860 * t4041 + 1370454540 * t4043 - 1960303800 * t4045 + 1402100700 * t4047 - 3038
            t4035 = 6 * phi1
            tfunc[..., c] = 0.33e2 / 0.29622272e8 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * ((612866280 * t4019 - 2728243440 * t4047 + 4937016240 * t4045 - 4649784880 * t4043 + 2421469440 * t4041 - 682443216 * t4039 + 93974608 * t4037 - 4896528 * t4033 + 41496) * np.cos(t4035) + (t4051 + t4055) * np.cos(-t4035 + (8 * phi2)) + (t4050 + t4052) * np.cos(-t4035 + (4 * phi2)) + (t4050 - t4052) * np.cos(t4035 + (4 * phi2)) + (t4051 - t4055) * np.cos(t4035 + (8 * phi2)) + (t4053 + t4054) * np.cos(-t4035 + (12 * phi2)) + (t4053 - t4054) * np.cos(t4035 + (12 * phi2)))

        if Bindx == 127:
            t4080 = np.cos(phi)
            t4079 = t4080 ** 2
            t4083 = t4079 ** 2
            t4087 = t4083 ** 2
            t4065 = t4087 ** 2
            t4082 = t4080 * t4079
            t4085 = t4082 ** 2
            t4084 = t4080 * t4083
            t4089 = t4084 ** 2
            t4091 = t4085 ** 2
            t4086 = t4080 * t4085
            t4093 = t4086 ** 2
            t4103 = 35960 * t4065 - 5520 * t4079 - 2080 * t4083 + 229680 * t4085 - 863280 * t4087 + 1276880 * t4089 - 804000 * t4091 + 132240 * t4093 + 120
            t4102 = 16385 * t4065 - 16385 + 1081410 * t4089 - 1081410 * t4085 - 819250 * t4091 + 819250 * t4083 - 163850 * t4079 + 163850 * t4093
            t4066 = t4080 * t4093
            t4068 = t4080 * t4091
            t4070 = t4080 * t4089
            t4072 = t4080 * t4087
            t4101 = -161820 * t4066 + 432100 * t4068 - 175020 * t4070 - 495660 * t4072 - 3620 * t4080 + 57180 * t4082 - 300180 * t4084 + 647020 * t4086
            t4100 = 98310 * t4066 - 98310 * t4080 + 1802350 * t4072 - 1802350 * t4086 - 557090 * t4070 + 557090 * t4084 - 163850 * t4068 + 163850 * t4082
            t4099 = -31554900 * t4066 + 106879500 * t4068 - 139803300 * t4070 + 88040700 * t4072 + 1620 * t4080 - 139020 * t4082 + 3494820 * t4084 - 26919420 * t4086
            t4098 = 10518300 * t4065 + 500520 * t4079 - 6959400 * t4083 + 36470280 * t4085 - 90451680 * t4087 + 108708600 * t4089 - 49959000 * t4091 - 8821800 * t4093 - 5820
            t4097 = 338689260 * t4066 - 1292846100 * t4068 + 1981777980 * t4070 - 1554245700 * t4072 - 376236 * t4080 + 13656020 * t4082 - 142546684 * t4084 + 655891460 * t4086
            t4096 = 225792840 * t4065 - 190960 * t4079 + 4917920 * t4083 - 54361776 * t4085 + 287983920 * t4087 - 783116880 * t4089 + 1120173600 * t4091 - 801200400 * t4093 + 1736
            t4081 = 6 * phi1
            tfunc[..., c] = -0.33e2 / 0.236978176e9 * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.13e2) * np.sqrt(0.23e2) * ((601080390 * t4065 - 2675777220 * t4093 + 4842073620 * t4091 - 4560365940 * t4089 + 2374902720 * t4087 - 669319308 * t4085 + 92167404 * t4083 - 4802364 * t4079 + 40698) * np.cos(t4081) + (-t4100 + t4102) * np.cos(-t4081 + (16 * phi2)) + (t4100 + t4102) * np.cos(t4081 + (16 * phi2)) + (t4098 + t4099) * np.cos(-t4081 + (8 * phi2)) + (t4096 - t4097) * np.cos(-t4081 + (4 * phi2)) + (t4096 + t4097) * np.cos(t4081 + (4 * phi2)) + (t4098 - t4099) * np.cos(t4081 + (8 * phi2)) + (t4101 + t4103) * np.cos(-t4081 + (12 * phi2)) + (-t4101 + t4103) * np.cos(t4081 + (12 * phi2)))

        if Bindx == 128:
            t4127 = np.cos(phi)
            t4126 = t4127 ** 2
            t4130 = t4126 ** 2
            t4129 = t4127 * t4126
            t4132 = t4129 ** 2
            t4134 = t4130 ** 2
            t4131 = t4127 * t4130
            t4136 = t4131 ** 2
            t4138 = t4132 ** 2
            t4133 = t4127 * t4132
            t4140 = t4133 ** 2
            t4142 = t4134 ** 2
            t4149 = -170040 * t4126 + 2640924 * t4130 - 13620984 * t4132 + 30161274 * t4134 - 29024424 * t4136 + 6153420 * t4138 + 7536984 * t4140 - 3681405 * t4142 + 4251
            t4148 = -239680 * t4126 + 2574544 * t4130 - 7121408 * t4132 - 6378152 * t4134 + 62152640 * t4136 - 112585200 * t4138 + 86136960 * t4140 - 24542700 * t4142 + 2996
            t4147 = 606424 * t4126 - 10521868 * t4130 + 71006488 * t4132 - 240374498 * t4134 + 450355080 * t4136 - 474730620 * t4138 + 263794440 * t4140 - 60129615 * t4142 - 5831
            t4111 = t4127 * t4142
            t4113 = t4127 * t4140
            t4115 = t4127 * t4138
            t4117 = t4127 * t4136
            t4119 = t4127 * t4134
            t4146 = 7012200 * t4111 + 904800 * t4113 - 68752320 * t4115 + 143517920 * t4117 - 131487664 * t4119 - 65272 * t4127 + 1796512 * t4129 - 15524096 * t4131 + 62597920 * t4133
            t4145 = -34359780 * t4111 + 131897220 * t4113 - 194272260 * t4115 + 131591460 * t4117 - 33328428 * t4119 + 17248 * t4127 - 543508 * t4129 + 3862964 * t4131 - 4864916 * t4133
            t4144 = 701220 * t4111 + 4727580 * t4113 - 23128092 * t4115 + 32868732 * t4117 - 16667508 * t4119 + 104832 * t4127 - 1278732 * t4129 + 4345068 * t4131 - 1673100 * t4133
            t4128 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.29622272e8 * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.5e1) * np.sqrt(0.23e2) * ((53292720 * t4111 - 275059200 * t4113 + 589717440 * t4115 - 676898560 * t4117 + 446441632 * t4119 - 168450048 * t4133 + 33971392 * t4131 - 3098368 * t4129 + 82992 * t4127) * np.sin(t4128) - (t4146 + t4148) * np.sin(-t4128 + (8 * phi2)) - (t4145 - t4147) * np.sin(-t4128 + (4 * phi2)) + (t4145 + t4147) * np.sin(t4128 + (4 * phi2)) + (t4146 - t4148) * np.sin(t4128 + (8 * phi2)) - (t4144 + t4149) * np.sin(-t4128 + (12 * phi2)) + (t4144 - t4149) * np.sin(t4128 + (12 * phi2))) * ((1 + t4127) ** (-0.1e1 / 0.2e1)) * ((1 - t4127) ** (-0.1e1 / 0.2e1))

        if Bindx == 129:
            t4175 = np.cos(phi)
            t4174 = t4175 ** 2
            t4178 = t4174 ** 2
            t4182 = t4178 ** 2
            t4190 = t4182 ** 2
            t4159 = t4175 * t4190
            t4177 = t4175 * t4174
            t4180 = t4177 ** 2
            t4181 = t4175 * t4180
            t4188 = t4181 ** 2
            t4161 = t4175 * t4188
            t4186 = t4180 ** 2
            t4163 = t4175 * t4186
            t4179 = t4175 * t4178
            t4184 = t4179 ** 2
            t4165 = t4175 * t4184
            t4167 = t4175 * t4182
            t4199 = 35960 * t4159 + 242440 * t4161 - 1186056 * t4163 + 1685576 * t4165 - 854744 * t4167 + 5376 * t4175 - 65576 * t4177 + 222824 * t4179 - 85800 * t4181
            t4198 = -262160 * t4174 + 983100 * t4178 - 524320 * t4180 - 1802350 * t4182 + 2883760 * t4184 - 1376340 * t4186 + 114695 * t4190 - 16385
            t4197 = 16385 * t4159 + 262160 * t4161 - 983100 * t4163 + 524320 * t4165 + 1802350 * t4167 - 114695 * t4175 + 1376340 * t4179 - 2883760 * t4181
            t4196 = 8720 * t4174 - 135432 * t4178 + 698512 * t4180 - 1546732 * t4182 + 1488432 * t4184 - 315560 * t4186 - 386512 * t4188 + 188790 * t4190 - 218
            t4195 = 359520 * t4174 - 3861816 * t4178 + 10682112 * t4180 + 9567228 * t4182 - 93228960 * t4184 + 168877800 * t4186 - 129205440 * t4188 + 36814050 * t4190 - 4494
            t4194 = 10518300 * t4159 + 1357200 * t4161 - 103128480 * t4163 + 215276880 * t4165 - 197231496 * t4167 - 97908 * t4175 + 2694768 * t4177 - 23286144 * t4179 + 93896880 * t4181
            t4193 = -3985072 * t4174 + 69143704 * t4178 - 466614064 * t4180 + 1579603844 * t4182 - 2959476240 * t4184 + 3119658360 * t4186 - 1733506320 * t4188 + 395137470 * t4190 + 38318
            t4192 = 225792840 * t4159 - 866753160 * t4161 + 1276646280 * t4163 - 864743880 * t4165 + 219015384 * t4167 - 113344 * t4175 + 3571624 * t4177 - 25385192 * t4179 + 31969448 * t4181
            t4176 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.13e2) * ((601080390 * t4159 - 3102350400 * t4161 + 6651332280 * t4163 - 7634634720 * t4165 + 5035346484 * t4167 - 1899922176 * t4181 + 383158104 * t4179 - 34946016 * t4177 + 936054 * t4175) * np.sin(t4176) - (t4197 - t4198) * np.sin(-t4176 + (16 * phi2)) + (t4197 + t4198) * np.sin(t4176 + (16 * phi2)) - (t4194 - t4195) * np.sin(-t4176 + (8 * phi2)) - (t4192 - t4193) * np.sin(-t4176 + (4 * phi2)) + (t4192 + t4193) * np.sin(t4176 + (4 * phi2)) + (t4194 + t4195) * np.sin(t4176 + (8 * phi2)) - (-t4196 + t4199) * np.sin(-t4176 + (12 * phi2)) + (t4196 + t4199) * np.sin(t4176 + (12 * phi2))) * ((1 + t4175) ** (-0.1e1 / 0.2e1)) * ((1 - t4175) ** (-0.1e1 / 0.2e1))

        if Bindx == 130:
            t4222 = np.cos(phi)
            t4221 = t4222 ** 2
            t4224 = t4222 * t4221
            t4227 = t4224 ** 2
            t4228 = t4222 * t4227
            t4235 = t4228 ** 2
            t4208 = t4222 * t4235
            t4233 = t4227 ** 2
            t4210 = t4222 * t4233
            t4225 = t4221 ** 2
            t4226 = t4222 * t4225
            t4231 = t4226 ** 2
            t4212 = t4222 * t4231
            t4229 = t4225 ** 2
            t4214 = t4222 * t4229
            t4243 = -3155490 * t4208 + 793962 * t4210 + 17180046 * t4212 - 26679510 * t4214 + 79326 * t4222 - 404118 * t4224 - 1989234 * t4226 + 14175018 * t4228
            t4242 = -21036600 * t4208 + 54152280 * t4210 - 38034360 * t4212 - 10769000 * t4214 - 81464 * t4222 + 1854552 * t4224 - 11197368 * t4226 + 25095576 * t4228
            t4241 = -51539670 * t4208 + 204496110 * t4210 - 326265030 * t4212 + 267388590 * t4214 + 91434 * t4222 - 2931474 * t4224 + 27776826 * t4226 - 119016786 * t4228
            t4207 = t4229 ** 2
            t4240 = 525915 * t4207 - 415584 * t4221 + 3502980 * t4225 - 10007712 * t4227 + 7513506 * t4229 + 10007712 * t4231 - 17111484 * t4233 + 5971680 * t4235 + 12987
            t4239 = -25769835 * t4207 - 324576 * t4221 + 4565820 * t4225 - 20975136 * t4227 + 33747966 * t4229 + 7032480 * t4231 - 78083460 * t4233 + 79803360 * t4235 + 3381
            t4238 = 5259150 * t4207 + 247824 * t4221 - 3755640 * t4225 + 24131184 * t4227 - 73520172 * t4229 + 110430320 * t4231 - 74987640 * t4233 + 12214800 * t4235 - 3442
            t4223 = 8 * phi1
            tfunc[..., c] = -0.11e2 / 0.29622272e8 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.23e2) * np.sqrt(0.5e1) * np.sqrt(0.3e1) * ((39969540 * t4207 - 195979680 * t4235 + 393559920 * t4233 - 414525280 * t4231 + 243168536 * t4229 - 77625184 * t4227 + 12144496 * t4225 - 719264 * t4221 + 6916) * np.cos(t4223) + (t4239 - t4241) * np.cos(-t4223 + (4 * phi2)) + (t4239 + t4241) * np.cos(t4223 + (4 * phi2)) + (t4240 + t4243) * np.cos(-t4223 + (12 * phi2)) + (t4240 - t4243) * np.cos(t4223 + (12 * phi2)) + (t4238 + t4242) * np.cos((8 * phi1 - 8 * phi2)) + (t4238 - t4242) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 131:
            t4268 = np.cos(phi)
            t4267 = t4268 ** 2
            t4270 = t4268 * t4267
            t4273 = t4270 ** 2
            t4274 = t4268 * t4273
            t4281 = t4274 ** 2
            t4254 = t4268 * t4281
            t4279 = t4273 ** 2
            t4256 = t4268 * t4279
            t4271 = t4267 ** 2
            t4272 = t4268 * t4271
            t4277 = t4272 ** 2
            t4258 = t4268 * t4277
            t4275 = t4271 ** 2
            t4260 = t4268 * t4275
            t4291 = -215760 * t4254 + 54288 * t4256 + 1174704 * t4258 - 1824240 * t4260 + 5424 * t4268 - 27632 * t4270 - 136016 * t4272 + 969232 * t4274
            t4253 = t4275 ** 2
            t4290 = 35960 * t4253 - 28416 * t4267 + 239520 * t4271 - 684288 * t4273 + 513744 * t4275 + 684288 * t4277 - 1170016 * t4279 + 408320 * t4281 + 888
            t4289 = 16385 * t4253 + 393240 * t4267 - 589860 * t4271 - 1441880 * t4273 + 3244230 * t4275 - 1441880 * t4277 - 589860 * t4279 + 393240 * t4281 + 16385
            t4288 = 1966200 * t4258 + 1966200 * t4272 - 1441880 * t4260 - 1441880 * t4274 - 393240 * t4256 - 393240 * t4270 - 131080 * t4254 - 131080 * t4268
            t4287 = 42073200 * t4254 - 108304560 * t4256 + 76068720 * t4258 + 21538000 * t4260 + 162928 * t4268 - 3709104 * t4270 + 22394736 * t4272 - 50191152 * t4274
            t4286 = 10518300 * t4253 + 495648 * t4267 - 7511280 * t4271 + 48262368 * t4273 - 147040344 * t4275 + 220860640 * t4277 - 149975280 * t4279 + 24429600 * t4281 - 6884
            t4285 = 451585680 * t4254 - 1791775440 * t4256 + 2858703120 * t4258 - 2342833360 * t4260 - 801136 * t4268 + 25685296 * t4270 - 243377904 * t4272 + 1042813744 * t4274
            t4284 = 225792840 * t4253 + 2843904 * t4267 - 40005280 * t4271 + 183782144 * t4273 - 295696464 * t4275 - 61617920 * t4277 + 684159840 * t4279 - 699229440 * t4281 - 29624
            t4269 = 8 * phi1
            tfunc[..., c] = 0.33e2 / 0.473956352e9 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.13e2) * ((601080390 * t4253 - 2947232880 * t4281 + 5918535720 * t4279 - 6233822480 * t4277 + 3656880676 * t4275 - 1167363344 * t4273 + 182634536 * t4271 - 10816624 * t4267 + 104006) * np.cos(t4269) + (t4284 - t4285) * np.cos(-t4269 + (4 * phi2)) + (t4284 + t4285) * np.cos(t4269 + (4 * phi2)) + (t4288 + t4289) * np.cos(-t4269 + (16 * phi2)) + (t4290 + t4291) * np.cos(-t4269 + (12 * phi2)) + (t4290 - t4291) * np.cos(t4269 + (12 * phi2)) + (-t4288 + t4289) * np.cos(t4269 + (16 * phi2)) + (t4286 - t4287) * np.cos((8 * phi1 - 8 * phi2)) + (t4286 + t4287) * np.cos((8 * phi1 + 8 * phi2)))

        if Bindx == 132:
            t4315 = np.cos(phi)
            t4314 = t4315 ** 2
            t4318 = t4314 ** 2
            t4317 = t4315 * t4314
            t4320 = t4317 ** 2
            t4322 = t4318 ** 2
            t4319 = t4315 * t4318
            t4324 = t4319 ** 2
            t4326 = t4320 ** 2
            t4321 = t4315 * t4320
            t4328 = t4321 ** 2
            t4330 = t4322 ** 2
            t4337 = 564408 * t4314 - 3006900 * t4318 + 2683512 * t4320 + 13577850 * t4322 - 33575256 * t4324 + 24655644 * t4326 - 2035800 * t4328 - 2839941 * t4330 - 23517
            t4336 = -697600 * t4314 + 7675920 * t4318 - 33512640 * t4320 + 65998680 * t4322 - 47583360 * t4324 - 21818160 * t4326 + 48859200 * t4328 - 18932940 * t4330 + 10900
            t4299 = t4315 * t4330
            t4301 = t4315 * t4328
            t4303 = t4315 * t4326
            t4305 = t4315 * t4324
            t4307 = t4315 * t4322
            t4335 = 420732 * t4299 + 6528132 * t4301 - 16157700 * t4303 + 1919268 * t4305 + 22007700 * t4307 - 22464 * t4315 - 666900 * t4317 + 6990516 * t4319 - 21019284 * t4321
            t4334 = 685608 * t4314 - 10596348 * t4318 + 66588648 * t4320 - 215248866 * t4322 + 388443384 * t4324 - 394957836 * t4326 + 211478904 * t4328 - 46385703 * t4330 - 7791
            t4333 = 4207320 * t4299 + 15743520 * t4301 - 90417600 * t4303 + 142498720 * t4305 - 101815120 * t4307 + 18360 * t4315 - 130080 * t4317 - 4018560 * t4319 + 33913440 * t4321
            t4332 = -20615868 * t4299 + 68497884 * t4301 - 61159644 * t4303 - 35399364 * t4305 + 99922956 * t4307 + 98784 * t4315 - 2804172 * t4317 + 21869484 * t4319 - 70410060 * t4321
            t4316 = 9 * phi1
            tfunc[..., c] = -0.11e2 / 0.29622272e8 * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.3e1) * ((31975632 * t4299 - 181539072 * t4301 + 431795520 * t4303 - 555176960 * t4305 + 414525280 * t4307 - 179009792 * t4321 + 41717312 * t4319 - 4426240 * t4317 + 138320 * t4315) * np.sin(t4316) - (t4333 + t4336) * np.sin(-t4316 + (8 * phi2)) - (t4332 - t4334) * np.sin(-t4316 + (4 * phi2)) + (t4332 + t4334) * np.sin(t4316 + (4 * phi2)) + (t4333 - t4336) * np.sin(t4316 + (8 * phi2)) - (t4335 + t4337) * np.sin(-t4316 + (12 * phi2)) + (t4335 - t4337) * np.sin(t4316 + (12 * phi2))) * ((1 + t4315) ** (-0.1e1 / 0.2e1)) * ((1 - t4315) ** (-0.1e1 / 0.2e1))

        if Bindx == 133:
            t4363 = np.cos(phi)
            t4362 = t4363 ** 2
            t4366 = t4362 ** 2
            t4365 = t4363 * t4362
            t4368 = t4365 ** 2
            t4370 = t4366 ** 2
            t4367 = t4363 * t4366
            t4372 = t4367 ** 2
            t4374 = t4368 ** 2
            t4369 = t4363 * t4368
            t4376 = t4369 ** 2
            t4378 = t4370 ** 2
            t4387 = -9648 * t4362 + 51400 * t4366 - 45872 * t4368 - 232100 * t4370 + 573936 * t4372 - 421464 * t4374 + 34800 * t4376 + 48546 * t4378 + 402
            t4386 = -104864 * t4362 + 39324 * t4366 + 681616 * t4368 - 937222 * t4370 + 511212 * t4374 - 157296 * t4376 - 29493 * t4378 - 3277
            t4347 = t4363 * t4378
            t4349 = t4363 * t4376
            t4351 = t4363 * t4374
            t4353 = t4363 * t4372
            t4355 = t4363 * t4370
            t4385 = 3277 * t4347 + 104864 * t4349 - 39324 * t4351 - 681616 * t4353 + 937222 * t4355 + 29493 * t4363 + 157296 * t4365 - 511212 * t4367
            t4384 = 7192 * t4347 + 111592 * t4349 - 276200 * t4351 + 32808 * t4353 + 376200 * t4355 - 384 * t4363 - 11400 * t4365 + 119496 * t4367 - 359304 * t4369
            t4383 = 2103660 * t4347 + 7871760 * t4349 - 45208800 * t4351 + 71249360 * t4353 - 50907560 * t4355 + 9180 * t4363 - 65040 * t4365 - 2009280 * t4367 + 16956720 * t4369
            t4382 = -348800 * t4362 + 3837960 * t4366 - 16756320 * t4368 + 32999340 * t4370 - 23791680 * t4372 - 10909080 * t4374 + 24429600 * t4376 - 9466470 * t4378 + 5450
            t4381 = 1501808 * t4362 - 23211048 * t4366 + 145860848 * t4368 - 471497516 * t4370 + 850875984 * t4372 - 865145736 * t4374 + 463239504 * t4376 - 101606778 * t4378 - 17066
            t4380 = 45158568 * t4347 - 150042984 * t4349 + 133968744 * t4351 + 77541464 * t4353 - 218878856 * t4355 - 216384 * t4363 + 6142472 * t4365 - 47904584 * t4367 + 154231560 * t4369
            t4364 = 9 * phi1
            tfunc[..., c] = 0.33e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.113e3) * np.sqrt(0.13e2) * np.sqrt(0.31e2) * ((120216078 * t4347 - 682517088 * t4349 + 1623385080 * t4351 - 2087251840 * t4353 + 1558455620 * t4355 - 673007968 * t4369 + 156841048 * t4367 - 16640960 * t4365 + 520030 * t4363) * np.sin(t4364) - (t4385 + t4386) * np.sin(-t4364 + (16 * phi2)) + (t4385 - t4386) * np.sin(t4364 + (16 * phi2)) - (t4382 + t4383) * np.sin(-t4364 + (8 * phi2)) - (t4380 + t4381) * np.sin(-t4364 + (4 * phi2)) + (t4380 - t4381) * np.sin(t4364 + (4 * phi2)) + (-t4382 + t4383) * np.sin(t4364 + (8 * phi2)) - (t4384 - t4387) * np.sin(-t4364 + (12 * phi2)) + (t4384 + t4387) * np.sin(t4364 + (12 * phi2))) * ((1 + t4363) ** (-0.1e1 / 0.2e1)) * ((1 - t4363) ** (-0.1e1 / 0.2e1))

        if Bindx == 134:
            t4410 = np.cos(phi)
            t4409 = t4410 ** 2
            t4413 = t4409 ** 2
            t4417 = t4413 ** 2
            t4395 = t4417 ** 2
            t4412 = t4410 * t4409
            t4415 = t4412 ** 2
            t4414 = t4410 * t4413
            t4419 = t4414 ** 2
            t4421 = t4415 ** 2
            t4416 = t4410 * t4415
            t4423 = t4416 ** 2
            t4431 = 16182 * t4395 + 23436 * t4409 - 8424 * t4413 - 447876 * t4415 + 1189188 * t4417 - 787644 * t4419 - 326664 * t4421 + 343476 * t4423 - 1674
            t4396 = t4410 * t4423
            t4398 = t4410 * t4421
            t4400 = t4410 * t4419
            t4402 = t4410 * t4417
            t4430 = -121365 * t4396 - 346869 * t4398 + 1146015 * t4400 - 606177 * t4402 + 3429 * t4410 - 81819 * t4412 + 368433 * t4414 - 361647 * t4416
            t4429 = 161820 * t4395 - 31320 * t4409 + 190680 * t4413 - 88440 * t4415 - 1663200 * t4417 + 4298360 * t4419 - 3902040 * t4421 + 1033560 * t4423 + 580
            t4428 = -792918 * t4395 - 55692 * t4409 + 670152 * t4413 - 2900604 * t4415 + 5610780 * t4417 - 4516932 * t4419 - 10584 * t4421 + 1995084 * t4423 + 714
            t4427 = -809100 * t4396 + 1237140 * t4398 + 1213380 * t4400 - 3611740 * t4402 - 6260 * t4410 + 126060 * t4412 - 902340 * t4414 + 2752860 * t4416
            t4426 = -1982295 * t4396 + 8248905 * t4398 - 13703067 * t4400 + 11560101 * t4402 + 4935 * t4410 - 136185 * t4412 + 1229067 * t4414 - 5221461 * t4416
            t4411 = 10 * phi1
            tfunc[..., c] = 0.11e2 / 0.29622272e8 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.23e2) * np.sqrt(0.5e1) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * ((1229832 * t4395 - 6744240 * t4423 + 15335280 * t4421 - 18557680 * t4419 + 12719360 * t4417 - 4828432 * t4415 + 910480 * t4413 + 760 - 65360 * t4409) * np.cos(t4411) + (t4427 + t4429) * np.cos(-t4411 + (8 * phi2)) + (-t4426 + t4428) * np.cos(-t4411 + (4 * phi2)) + (t4426 + t4428) * np.cos(t4411 + (4 * phi2)) + (-t4427 + t4429) * np.cos(t4411 + (8 * phi2)) + (t4430 + t4431) * np.cos(-t4411 + (12 * phi2)) + (-t4430 + t4431) * np.cos(t4411 + (12 * phi2)))

        if Bindx == 135:
            t4456 = np.cos(phi)
            t4455 = t4456 ** 2
            t4458 = t4456 * t4455
            t4461 = t4458 ** 2
            t4462 = t4456 * t4461
            t4469 = t4462 ** 2
            t4442 = t4456 * t4469
            t4467 = t4461 ** 2
            t4444 = t4456 * t4467
            t4459 = t4455 ** 2
            t4460 = t4456 * t4459
            t4465 = t4460 ** 2
            t4446 = t4456 * t4465
            t4463 = t4459 ** 2
            t4448 = t4456 * t4463
            t4479 = -53940 * t4442 - 154164 * t4444 + 509340 * t4446 - 269412 * t4448 + 1524 * t4456 - 36364 * t4458 + 163748 * t4460 - 160732 * t4462
            t4441 = t4463 ** 2
            t4478 = 7192 * t4441 + 10416 * t4455 - 3744 * t4459 - 199056 * t4461 + 528528 * t4463 - 350064 * t4465 - 145184 * t4467 + 152656 * t4469 - 744
            t4477 = 3277 * t4441 - 3277 + 937222 * t4461 - 937222 * t4465 - 255606 * t4459 + 255606 * t4467 + 137634 * t4469 - 137634 * t4455
            t4476 = -32770 * t4442 + 32770 * t4456 + 937222 * t4448 - 937222 * t4462 - 294930 * t4444 + 294930 * t4458 + 255606 * t4446 - 255606 * t4460
            t4475 = -10518300 * t4442 + 16082820 * t4444 + 15773940 * t4446 - 46952620 * t4448 - 81380 * t4456 + 1638780 * t4458 - 11730420 * t4460 + 35787180 * t4462
            t4474 = -112896420 * t4442 + 469794780 * t4444 - 780422292 * t4446 + 658375276 * t4448 + 281060 * t4456 - 7756060 * t4458 + 69998292 * t4460 - 297374636 * t4462
            t4473 = 2103660 * t4441 - 407160 * t4455 + 2478840 * t4459 - 1149720 * t4461 - 21621600 * t4463 + 55878680 * t4465 - 50726520 * t4467 + 13436280 * t4469 + 7540
            t4472 = 45158568 * t4441 + 3171792 * t4455 - 38166752 * t4459 + 165196304 * t4461 - 319547280 * t4463 + 257250032 * t4465 + 602784 * t4467 - 113624784 * t4469 - 40664
            t4457 = 10 * phi1
            tfunc[..., c] = -0.33e2 / 0.236978176e9 * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.7e1) * ((74290 + 120216078 * t4441 - 659249460 * t4469 + 1499023620 * t4467 - 1814013220 * t4465 + 1243317440 * t4463 - 471979228 * t4461 + 88999420 * t4459 - 6388940 * t4455) * np.cos(t4457) + (t4476 + t4477) * np.cos(-t4457 + (16 * phi2)) + (-t4476 + t4477) * np.cos(t4457 + (16 * phi2)) + (t4473 + t4475) * np.cos(-t4457 + (8 * phi2)) + (t4472 + t4474) * np.cos(-t4457 + (4 * phi2)) + (t4472 - t4474) * np.cos(t4457 + (4 * phi2)) + (t4473 - t4475) * np.cos(t4457 + (8 * phi2)) + (t4478 + t4479) * np.cos(-t4457 + (12 * phi2)) + (t4478 - t4479) * np.cos(t4457 + (12 * phi2)))

        if Bindx == 136:
            t4503 = np.cos(phi)
            t4502 = t4503 ** 2
            t4506 = t4502 ** 2
            t4510 = t4506 ** 2
            t4518 = t4510 ** 2
            t4487 = t4503 * t4518
            t4505 = t4503 * t4502
            t4508 = t4505 ** 2
            t4509 = t4503 * t4508
            t4516 = t4509 ** 2
            t4489 = t4503 * t4516
            t4514 = t4508 ** 2
            t4491 = t4503 * t4514
            t4507 = t4503 * t4506
            t4512 = t4507 ** 2
            t4493 = t4503 * t4512
            t4495 = t4503 * t4510
            t4525 = 3596 * t4487 + 95236 * t4489 - 48132 * t4491 - 364156 * t4493 + 473044 * t4495 - 2640 * t4503 + 30668 * t4505 - 62348 * t4507 - 125268 * t4509
            t4524 = 2468 * t4502 + 43272 * t4506 - 224588 * t4508 + 286286 * t4510 + 94380 * t4512 - 354640 * t4514 + 123772 * t4516 + 29667 * t4518 - 617
            t4523 = -2640 * t4502 + 77920 * t4506 - 520400 * t4508 + 1390840 * t4510 - 1634160 * t4512 + 605440 * t4514 + 280720 * t4516 - 197780 * t4518 + 60
            t4522 = -5236 * t4502 + 93016 * t4506 - 696388 * t4508 + 2441978 * t4510 - 4485404 * t4512 + 4480784 * t4514 - 2313388 * t4516 + 484561 * t4518 + 77
            t4521 = 35960 * t4487 + 296960 * t4489 - 1191520 * t4491 + 1374720 * t4493 - 398640 * t4495 + 3960 * t4503 - 56320 * t4505 + 244640 * t4507 - 309760 * t4509
            t4520 = -176204 * t4487 + 471772 * t4489 + 186788 * t4491 - 2025380 * t4493 + 2969932 * t4495 + 4592 * t4503 - 102956 * t4505 + 677740 * t4507 - 2006284 * t4509
            t4504 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.29622272e8 * np.sqrt(0.7e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.13e2) * np.sqrt(0.23e2) * np.sqrt(0.5e1) * np.sqrt(0.3e1) * ((273296 * t4487 - 1727936 * t4489 + 4632960 * t4491 - 6815680 * t4493 + 5931040 * t4495 - 3053376 * t4509 + 870656 * t4507 - 115520 * t4505 + 4560 * t4503) * np.sin(t4504) - (t4521 + t4523) * np.sin(-t4504 + (8 * phi2)) - (t4520 + t4522) * np.sin(-t4504 + (4 * phi2)) + (t4520 - t4522) * np.sin(t4504 + (4 * phi2)) + (t4521 - t4523) * np.sin(t4504 + (8 * phi2)) - (-t4524 + t4525) * np.sin(-t4504 + (12 * phi2)) + (t4524 + t4525) * np.sin(t4504 + (12 * phi2))) * ((1 + t4503) ** (-0.1e1 / 0.2e1)) * ((1 - t4503) ** (-0.1e1 / 0.2e1))

        if Bindx == 137:
            t4551 = np.cos(phi)
            t4550 = t4551 ** 2
            t4554 = t4550 ** 2
            t4553 = t4551 * t4550
            t4556 = t4553 ** 2
            t4558 = t4554 ** 2
            t4555 = t4551 * t4554
            t4560 = t4555 ** 2
            t4562 = t4556 ** 2
            t4557 = t4551 * t4556
            t4564 = t4557 ** 2
            t4566 = t4558 ** 2
            t4575 = 4936 * t4550 + 86544 * t4554 - 449176 * t4556 + 572572 * t4558 + 188760 * t4560 - 709280 * t4562 + 247544 * t4564 + 59334 * t4566 - 1234
            t4535 = t4551 * t4566
            t4537 = t4551 * t4564
            t4539 = t4551 * t4562
            t4541 = t4551 * t4560
            t4543 = t4551 * t4558
            t4574 = 7192 * t4535 + 190472 * t4537 - 96264 * t4539 - 728312 * t4541 + 946088 * t4543 - 5280 * t4551 + 61336 * t4553 - 124696 * t4555 - 250536 * t4557
            t4573 = -170404 * t4550 - 550536 * t4554 + 1192828 * t4556 + 937222 * t4558 - 1874444 * t4560 + 432564 * t4564 + 36047 * t4566 - 3277
            t4572 = 3277 * t4535 + 170404 * t4537 + 550536 * t4539 - 1192828 * t4541 - 937222 * t4543 - 36047 * t4551 - 432564 * t4553 + 1874444 * t4557
            t4571 = -154440 * t4550 + 4558320 * t4554 - 30443400 * t4556 + 81364140 * t4558 - 95598360 * t4560 + 35418240 * t4562 + 16422120 * t4564 - 11570130 * t4566 + 3510
            t4570 = -1341912 * t4550 + 23838672 * t4554 - 178474296 * t4556 + 625844076 * t4558 - 1149544968 * t4560 + 1148360928 * t4562 - 592888296 * t4564 + 124186062 * t4566 + 19734
            t4569 = 2103660 * t4535 + 17372160 * t4537 - 69703920 * t4539 + 80421120 * t4541 - 23320440 * t4543 + 231660 * t4551 - 3294720 * t4553 + 14311440 * t4555 - 18120960 * t4557
            t4568 = 45158568 * t4535 - 120908424 * t4537 - 47871096 * t4539 + 519075960 * t4541 - 761151144 * t4543 - 1176864 * t4551 + 26386152 * t4553 - 173695080 * t4555 + 514181928 * t4557
            t4552 = 11 * phi1
            tfunc[..., c] = -0.11e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * np.sqrt(0.7e1) * ((120216078 * t4535 - 760075848 * t4537 + 2037923280 * t4539 - 2998047240 * t4541 + 2608916220 * t4543 - 1343103768 * t4557 + 382979808 * t4555 - 50814360 * t4553 + 2005830 * t4551) * np.sin(t4552) - (t4572 - t4573) * np.sin(-t4552 + (16 * phi2)) + (t4572 + t4573) * np.sin(t4552 + (16 * phi2)) - (t4569 + t4571) * np.sin(-t4552 + (8 * phi2)) - (t4568 - t4570) * np.sin(-t4552 + (4 * phi2)) + (t4568 + t4570) * np.sin(t4552 + (4 * phi2)) + (t4569 - t4571) * np.sin(t4552 + (8 * phi2)) - (t4574 - t4575) * np.sin(-t4552 + (12 * phi2)) + (t4574 + t4575) * np.sin(t4552 + (12 * phi2))) * ((1 + t4551) ** (-0.1e1 / 0.2e1)) * ((1 - t4551) ** (-0.1e1 / 0.2e1))

        if Bindx == 138:
            t4598 = np.cos(phi)
            t4597 = t4598 ** 2
            t4600 = t4598 * t4597
            t4603 = t4600 ** 2
            t4604 = t4598 * t4603
            t4611 = t4604 ** 2
            t4584 = t4598 * t4611
            t4609 = t4603 ** 2
            t4586 = t4598 * t4609
            t4601 = t4597 ** 2
            t4602 = t4598 * t4601
            t4607 = t4602 ** 2
            t4588 = t4598 * t4607
            t4605 = t4601 ** 2
            t4590 = t4598 * t4605
            t4619 = -40455 * t4584 - 269381 * t4586 + 308217 * t4588 + 383955 * t4590 - 7303 * t4598 + 35259 * t4600 + 98553 * t4602 - 512941 * t4604
            t4618 = -269700 * t4584 + 67860 * t4586 + 1468380 * t4588 - 2280300 * t4590 + 6780 * t4598 - 34540 * t4600 - 170020 * t4602 + 1211540 * t4604
            t4617 = -660765 * t4584 + 2905945 * t4586 - 5004125 * t4588 + 4170145 * t4590 - 2205 * t4598 + 20825 * t4600 + 201635 * t4602 - 1631455 * t4604
            t4583 = t4605 ** 2
            t4616 = 4495 * t4583 + 9528 * t4597 - 129220 * t4601 + 216216 * t4603 + 265122 * t4605 - 664664 * t4607 + 151788 * t4609 + 149640 * t4611 + 1191
            t4615 = 44950 * t4583 - 35520 * t4597 + 299400 * t4601 - 855360 * t4603 + 642180 * t4605 + 855360 * t4607 - 1462520 * t4609 + 510400 * t4611 + 1110
            t4614 = -220255 * t4583 - 68600 * t4597 + 639940 * t4601 - 2381400 * t4603 + 4235070 * t4605 - 3592680 * t4607 + 988820 * t4609 + 397880 * t4611 + 1225
            t4599 = 12 * phi1
            tfunc[..., c] = -0.33e2 / 0.14811136e8 * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.23e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * ((341620 * t4583 - 2115840 * t4611 + 5522160 * t4609 - 7831040 * t4607 + 6463800 * t4605 - 3064320 * t4603 + 755440 * t4601 - 72960 * t4597 + 1140) * np.cos(t4599) + (t4615 + t4618) * np.cos(-t4599 + (8 * phi2)) + (t4614 - t4617) * np.cos(-t4599 + (4 * phi2)) + (t4614 + t4617) * np.cos(t4599 + (4 * phi2)) + (t4615 - t4618) * np.cos(t4599 + (8 * phi2)) + (t4616 + t4619) * np.cos((12 * phi1 - 12 * phi2)) + (t4616 - t4619) * np.cos((12 * phi1 + 12 * phi2)))

        if Bindx == 139:
            t4644 = np.cos(phi)
            t4643 = t4644 ** 2
            t4647 = t4643 ** 2
            t4651 = t4647 ** 2
            t4629 = t4651 ** 2
            t4646 = t4644 * t4643
            t4649 = t4646 ** 2
            t4655 = t4649 ** 2
            t4650 = t4644 * t4649
            t4657 = t4650 ** 2
            t4667 = 16385 * t4629 + 1048640 * t4643 - 14058330 * t4651 + 1048640 * t4657 + 16385 + 5964140 * t4647 + 5964140 * t4655
            t4648 = t4644 * t4647
            t4653 = t4648 ** 2
            t4666 = 35960 * t4629 + 76224 * t4643 - 1033760 * t4647 + 1729728 * t4649 + 2120976 * t4651 - 5317312 * t4653 + 1214304 * t4655 + 1197120 * t4657 + 9528
            t4630 = t4644 * t4657
            t4632 = t4644 * t4655
            t4634 = t4644 * t4653
            t4636 = t4644 * t4651
            t4665 = -323640 * t4630 - 2155048 * t4632 + 2465736 * t4634 + 3071640 * t4636 - 58424 * t4644 + 282072 * t4646 + 788424 * t4648 - 4103528 * t4650
            t4664 = -196620 * t4630 - 3211460 * t4632 + 9372220 * t4636 - 196620 * t4644 - 3211460 * t4646 + 9372220 * t4650 - 5964140 * t4634 - 5964140 * t4648
            t4663 = -63109800 * t4630 + 15879240 * t4632 + 343600920 * t4634 - 533590200 * t4636 + 1586520 * t4644 - 8082360 * t4646 - 39784680 * t4648 + 283500360 * t4650
            t4662 = -677378520 * t4630 + 2979008760 * t4632 - 5129943000 * t4634 + 4274994360 * t4636 - 2260440 * t4644 + 21348600 * t4646 + 206704680 * t4648 - 1672474440 * t4650
            t4661 = 10518300 * t4629 - 8311680 * t4643 + 70059600 * t4647 - 200154240 * t4649 + 150270120 * t4651 + 200154240 * t4653 - 342229680 * t4655 + 119433600 * t4657 + 259740
            t4660 = 225792840 * t4629 + 70324800 * t4643 - 656029920 * t4647 + 2441275200 * t4649 - 4341551760 * t4651 + 3683010240 * t4653 - 1013681760 * t4655 - 407883840 * t4657 - 1255800
            t4645 = 12 * phi1
            tfunc[..., c] = 0.11e2 / 0.473956352e9 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * ((9716240520 * t4655 - 13778714880 * t4653 + 11373056100 * t4651 - 5391671040 * t4649 + 1329196680 * t4647 - 128373120 * t4643 + 601080390 * t4629 - 3722820480 * t4657 + 2005830) * np.cos(t4645) + (t4664 + t4667) * np.cos(-t4645 + (16 * phi2)) + (-t4664 + t4667) * np.cos(t4645 + (16 * phi2)) + (t4661 + t4663) * np.cos(-t4645 + (8 * phi2)) + (t4660 + t4662) * np.cos(-t4645 + (4 * phi2)) + (t4660 - t4662) * np.cos(t4645 + (4 * phi2)) + (t4661 - t4663) * np.cos(t4645 + (8 * phi2)) + (t4665 + t4666) * np.cos((12 * phi1 - 12 * phi2)) + (-t4665 + t4666) * np.cos((12 * phi1 + 12 * phi2)))

        if Bindx == 140:
            t4691 = np.cos(phi)
            t4690 = t4691 ** 2
            t4694 = t4690 ** 2
            t4698 = t4694 ** 2
            t4706 = t4698 ** 2
            t4675 = t4691 * t4706
            t4693 = t4691 * t4690
            t4696 = t4693 ** 2
            t4697 = t4691 * t4696
            t4704 = t4697 ** 2
            t4677 = t4691 * t4704
            t4702 = t4696 ** 2
            t4679 = t4691 * t4702
            t4695 = t4691 * t4694
            t4700 = t4695 ** 2
            t4681 = t4691 * t4700
            t4683 = t4691 * t4698
            t4713 = 620 * t4675 + 24580 * t4677 + 39228 * t4679 - 144508 * t4681 + 33748 * t4683 + 1872 * t4691 - 52 * t4693 - 49868 * t4695 + 94380 * t4697
            t4712 = -4820 * t4690 + 25536 * t4694 + 10556 * t4696 - 140426 * t4698 + 118404 * t4700 + 47320 * t4702 - 50284 * t4704 - 6045 * t4706 - 241
            t4711 = -10800 * t4690 + 42560 * t4694 + 15440 * t4696 - 321640 * t4698 + 557040 * t4700 - 322400 * t4702 - 1040 * t4704 + 40300 * t4706 + 540
            t4710 = -10780 * t4690 + 47040 * t4694 + 16660 * t4696 - 428750 * t4698 + 971180 * t4700 - 993720 * t4702 + 496860 * t4704 - 98735 * t4706 + 245
            t4709 = 6200 * t4675 + 84800 * t4677 - 265120 * t4679 + 141120 * t4681 + 245520 * t4683 + 120 * t4691 - 19520 * t4693 + 141280 * t4695 - 334400 * t4697
            t4708 = -30380 * t4675 + 57820 * t4677 + 208740 * t4679 - 851620 * t4681 + 1229900 * t4683 + 3920 * t4691 - 61740 * t4693 + 343980 * t4695 - 900620 * t4697
            t4692 = 13 * phi1
            tfunc[..., c] = -0.33e2 / 0.29622272e8 * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.3e1) * np.sqrt(0.13e2) * np.sqrt(0.23e2) * np.sqrt(0.29e2) * ((47120 * t4675 - 334400 * t4677 + 1021440 * t4679 - 1744960 * t4681 + 1808800 * t4683 + 4560 * t4691 - 79040 * t4693 + 425600 * t4695 - 1149120 * t4697) * np.sin(t4692) - (t4709 - t4711) * np.sin(-t4692 + (8 * phi2)) - (t4708 - t4710) * np.sin(-t4692 + (4 * phi2)) + (t4708 + t4710) * np.sin(t4692 + (4 * phi2)) + (t4709 + t4711) * np.sin(t4692 + (8 * phi2)) - (t4712 + t4713) * np.sin(-t4692 + (12 * phi2)) + (-t4712 + t4713) * np.sin(t4692 + (12 * phi2))) * ((1 + t4691) ** (-0.1e1 / 0.2e1)) * ((1 - t4691) ** (-0.1e1 / 0.2e1))

        if Bindx == 141:
            t4739 = np.cos(phi)
            t4738 = t4739 ** 2
            t4742 = t4738 ** 2
            t4746 = t4742 ** 2
            t4754 = t4746 ** 2
            t4723 = t4739 * t4754
            t4741 = t4739 * t4738
            t4744 = t4741 ** 2
            t4745 = t4739 * t4744
            t4752 = t4745 ** 2
            t4725 = t4739 * t4752
            t4750 = t4744 ** 2
            t4727 = t4739 * t4750
            t4743 = t4739 * t4742
            t4748 = t4743 ** 2
            t4729 = t4739 * t4748
            t4731 = t4739 * t4746
            t4763 = 1240 * t4723 + 49160 * t4725 + 78456 * t4727 - 289016 * t4729 + 67496 * t4731 + 3744 * t4739 - 104 * t4741 - 99736 * t4743 + 188760 * t4745
            t4762 = -9640 * t4738 + 51072 * t4742 + 21112 * t4744 - 280852 * t4746 + 236808 * t4748 + 94640 * t4750 - 100568 * t4752 - 12090 * t4754 - 482
            t4761 = -42940 * t4738 - 316400 * t4742 - 205660 * t4744 + 807950 * t4746 + 323180 * t4748 - 411320 * t4750 - 146900 * t4752 - 7345 * t4754 - 565
            t4760 = 565 * t4723 + 42940 * t4725 + 316400 * t4727 + 205660 * t4729 - 807950 * t4731 + 7345 * t4739 + 146900 * t4741 + 411320 * t4743 - 323180 * t4745
            t4759 = 631800 * t4738 - 2489760 * t4742 - 903240 * t4744 + 18815940 * t4746 - 32586840 * t4748 + 18860400 * t4750 + 60840 * t4752 - 2357550 * t4754 - 31590
            t4758 = 362700 * t4723 + 4960800 * t4725 - 15509520 * t4727 + 8255520 * t4729 + 14362920 * t4731 + 7020 * t4739 - 1141920 * t4741 + 8264880 * t4743 - 19562400 * t4745
            t4757 = -2762760 * t4738 + 12055680 * t4742 + 4269720 * t4744 - 109882500 * t4746 + 248899560 * t4748 - 254676240 * t4750 + 127338120 * t4752 - 25304370 * t4754 + 62790
            t4756 = 7785960 * t4723 - 14818440 * t4725 - 53497080 * t4727 + 218258040 * t4729 - 315205800 * t4731 - 1004640 * t4739 + 15823080 * t4741 - 88157160 * t4743 + 230816040 * t4745
            t4740 = 13 * phi1
            tfunc[..., c] = 0.11e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.29e2) * np.sqrt(0.113e3) * np.sqrt(0.31e2) * ((-34767720 * t4741 + 2005830 * t4739 + 20726910 * t4723 - 147094200 * t4725 + 449305920 * t4727 - 767564280 * t4729 + 795645900 * t4731 - 505469160 * t4745 + 187210800 * t4743) * np.sin(t4740) - (t4758 + t4759) * np.sin(-t4740 + (8 * phi2)) - (t4756 + t4757) * np.sin(-t4740 + (4 * phi2)) + (t4756 - t4757) * np.sin(t4740 + (4 * phi2)) + (t4758 - t4759) * np.sin(t4740 + (8 * phi2)) - (t4760 + t4761) * np.sin(-t4740 + (16 * phi2)) - (t4762 + t4763) * np.sin(-t4740 + (12 * phi2)) + (-t4762 + t4763) * np.sin(t4740 + (12 * phi2)) + (t4760 - t4761) * np.sin(t4740 + (16 * phi2))) * ((1 + t4739) ** (-0.1e1 / 0.2e1)) * ((1 - t4739) ** (-0.1e1 / 0.2e1))

        if Bindx == 142:
            t4786 = np.cos(phi)
            t4785 = t4786 ** 2
            t4788 = t4786 * t4785
            t4791 = t4788 ** 2
            t4792 = t4786 * t4791
            t4799 = t4792 ** 2
            t4772 = t4786 * t4799
            t4797 = t4791 ** 2
            t4774 = t4786 * t4797
            t4789 = t4785 ** 2
            t4790 = t4786 * t4789
            t4795 = t4790 ** 2
            t4776 = t4786 * t4795
            t4793 = t4789 ** 2
            t4778 = t4786 * t4793
            t4807 = -651 * t4772 - 7259 * t4774 - 2639 * t4776 + 20449 * t4778 + 315 * t4786 + 1771 * t4788 - 7553 * t4790 - 4433 * t4792
            t4806 = -4340 * t4772 - 5460 * t4774 + 43260 * t4776 - 49060 * t4778 + 500 * t4786 - 6060 * t4788 + 14340 * t4790 + 6820 * t4792
            t4805 = -10633 * t4772 + 49735 * t4774 - 88053 * t4776 + 66395 * t4778 - 1127 * t4786 + 9065 * t4788 - 17787 * t4790 - 7595 * t4792
            t4771 = t4793 ** 2
            t4804 = -34 + 62 * t4771 - 1156 * t4785 + 728 * t4789 + 12012 * t4791 - 12012 * t4793 - 12012 * t4795 + 9464 * t4797 + 2948 * t4799
            t4803 = -140 + 620 * t4771 + 840 * t4785 + 5880 * t4789 - 33880 * t4791 + 47520 * t4793 - 8360 * t4795 - 23160 * t4797 + 10680 * t4799
            t4802 = -3038 * t4771 - 2940 * t4785 + 25480 * t4789 - 83692 * t4791 + 132300 * t4793 - 104468 * t4795 + 33320 * t4797 + 2940 * t4799 + 98
            t4787 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.29622272e8 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.23e2) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.13e2) * np.sqrt(0.29e2) * ((4712 * t4771 - 33136 * t4799 + 100016 * t4797 - 168112 * t4795 + 170240 * t4793 - 104272 * t4791 + 36176 * t4789 - 5776 * t4785 + 152) * np.cos(t4787) + (t4803 + t4806) * np.cos(-t4787 + (8 * phi2)) + (t4802 - t4805) * np.cos(-t4787 + (4 * phi2)) + (t4802 + t4805) * np.cos(t4787 + (4 * phi2)) + (t4803 - t4806) * np.cos(t4787 + (8 * phi2)) + (t4804 + t4807) * np.cos(-t4787 + (12 * phi2)) + (t4804 - t4807) * np.cos(t4787 + (12 * phi2)))

        if Bindx == 143:
            t4832 = np.cos(phi)
            t4831 = t4832 ** 2
            t4834 = t4832 * t4831
            t4837 = t4834 ** 2
            t4838 = t4832 * t4837
            t4845 = t4838 ** 2
            t4818 = t4832 * t4845
            t4843 = t4837 ** 2
            t4820 = t4832 * t4843
            t4835 = t4831 ** 2
            t4836 = t4832 * t4835
            t4841 = t4836 ** 2
            t4822 = t4832 * t4841
            t4839 = t4835 ** 2
            t4824 = t4832 * t4839
            t4855 = -2604 * t4818 - 29036 * t4820 - 10556 * t4822 + 81796 * t4824 + 1260 * t4832 + 7084 * t4834 - 30212 * t4836 - 17732 * t4838
            t4817 = t4839 ** 2
            t4854 = -136 + 248 * t4817 - 4624 * t4831 + 2912 * t4835 + 48048 * t4837 - 48048 * t4839 - 48048 * t4841 + 37856 * t4843 + 11792 * t4845
            t4853 = 113 * t4817 - 10170 * t4831 + 10170 * t4845 - 113 + 226226 * t4841 - 226226 * t4837 + 102830 * t4843 - 102830 * t4835
            t4852 = -1582 * t4818 - 39550 * t4820 + 1582 * t4832 + 39550 * t4834 - 185094 * t4822 + 185094 * t4836 - 161590 * t4824 + 161590 * t4838
            t4851 = 72540 * t4817 + 98280 * t4831 + 687960 * t4835 - 3963960 * t4837 + 5559840 * t4839 - 978120 * t4841 - 2709720 * t4843 + 1249560 * t4845 - 16380
            t4850 = -507780 * t4818 - 638820 * t4820 + 5061420 * t4822 - 5740020 * t4824 + 58500 * t4832 - 709020 * t4834 + 1677780 * t4836 + 797940 * t4838
            t4849 = -5450172 * t4818 + 25492740 * t4820 - 45133452 * t4822 + 34032180 * t4824 - 577668 * t4832 + 4646460 * t4834 - 9117108 * t4836 - 3892980 * t4838
            t4848 = 1557192 * t4817 + 1506960 * t4831 - 13060320 * t4835 + 42898128 * t4837 - 67813200 * t4839 + 53547312 * t4841 - 17078880 * t4843 - 1506960 * t4845 - 50232
            t4833 = 14 * phi1
            tfunc[..., c] = -0.11e2 / 0.236978176e9 * np.sqrt(0.31e2) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.29e2) * np.sqrt(0.113e3) * ((133722 + 149768640 * t4839 - 91733292 * t4837 + 31825836 * t4835 - 5081436 * t4831 + 4145382 * t4817 - 29151396 * t4845 + 87989076 * t4843 - 147896532 * t4841) * np.cos(t4833) + (t4852 + t4853) * np.cos(-t4833 + (16 * phi2)) + (-t4852 + t4853) * np.cos(t4833 + (16 * phi2)) + (t4850 + t4851) * np.cos(-t4833 + (8 * phi2)) + (t4848 + t4849) * np.cos(-t4833 + (4 * phi2)) + (t4848 - t4849) * np.cos(t4833 + (4 * phi2)) + (-t4850 + t4851) * np.cos(t4833 + (8 * phi2)) + (t4854 + t4855) * np.cos(-t4833 + (12 * phi2)) + (t4854 - t4855) * np.cos(t4833 + (12 * phi2)))

        if Bindx == 144:
            t4879 = np.cos(phi)
            t4878 = t4879 ** 2
            t4882 = t4878 ** 2
            t4881 = t4879 * t4878
            t4884 = t4881 ** 2
            t4886 = t4882 ** 2
            t4883 = t4879 * t4882
            t4888 = t4883 ** 2
            t4890 = t4884 ** 2
            t4885 = t4879 * t4884
            t4892 = t4885 ** 2
            t4894 = t4886 ** 2
            t4901 = 3 + 144 * t4878 + 308 * t4882 - 1456 * t4884 - 286 * t4886 + 2288 * t4888 - 364 * t4890 - 592 * t4892 - 45 * t4894
            t4863 = t4879 * t4894
            t4865 = t4879 * t4892
            t4867 = t4879 * t4890
            t4869 = t4879 * t4888
            t4871 = t4879 * t4886
            t4900 = -196 * t4863 + 196 * t4865 + 2940 * t4867 - 10780 * t4869 + 16660 * t4871 - 980 * t4881 + 5684 * t4883 - 13524 * t4885
            t4899 = 20 + 160 * t4878 - 1680 * t4882 + 3040 * t4884 + 440 * t4886 - 5280 * t4888 + 4080 * t4890 - 480 * t4892 - 300 * t4894
            t4898 = 49 - 784 * t4878 + 2940 * t4882 - 3920 * t4884 - 490 * t4886 + 7056 * t4888 - 8036 * t4890 + 3920 * t4892 - 735 * t4894
            t4897 = 4 * t4863 + 220 * t4865 + 868 * t4867 - 1092 * t4869 - 1716 * t4871 - 32 * t4879 - 332 * t4881 + 364 * t4883 + 1716 * t4885
            t4896 = 40 * t4863 + 800 * t4865 - 1920 * t4867 - 1120 * t4869 + 6160 * t4871 - 120 * t4879 + 480 * t4881 + 960 * t4883 - 5280 * t4885
            t4880 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.29622272e8 * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.5e1) * np.sqrt(0.899e3) * np.sqrt(0.23e2) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * (0.304e3 * (t4863 - 8 * t4865 + 28 * t4867 - 56 * t4869 + 70 * t4871 - 56 * t4885 + 28 * t4883 - 8 * t4881 + t4879) * np.sin(t4880) - (-t4898 + t4900) * np.sin(-t4880 + (4 * phi2)) + (t4898 + t4900) * np.sin(t4880 + (4 * phi2)) - (t4896 + t4899) * np.sin(-t4880 + (8 * phi2)) + (t4896 - t4899) * np.sin(t4880 + (8 * phi2)) - (t4897 + t4901) * np.sin(-t4880 + (12 * phi2)) + (t4897 - t4901) * np.sin(t4880 + (12 * phi2))) * ((1 - t4879) ** (-0.1e1 / 0.2e1)) * ((1 + t4879) ** (-0.1e1 / 0.2e1))

        if Bindx == 145:
            t4927 = np.cos(phi)
            t4926 = t4927 ** 2
            t4930 = t4926 ** 2
            t4929 = t4927 * t4926
            t4932 = t4929 ** 2
            t4934 = t4930 ** 2
            t4931 = t4927 * t4930
            t4936 = t4931 ** 2
            t4938 = t4932 ** 2
            t4933 = t4927 * t4932
            t4940 = t4933 ** 2
            t4942 = t4934 ** 2
            t4951 = -8928 * t4926 - 19096 * t4930 + 90272 * t4932 + 17732 * t4934 - 141856 * t4936 + 22568 * t4938 + 36704 * t4940 + 2790 * t4942 - 186
            t4911 = t4927 * t4942
            t4913 = t4927 * t4940
            t4915 = t4927 * t4938
            t4917 = t4927 * t4936
            t4919 = t4927 * t4934
            t4950 = 248 * t4911 + 13640 * t4913 + 53816 * t4915 - 67704 * t4917 - 1984 * t4927 - 20584 * t4929 + 22568 * t4931 - 106392 * t4919 + 106392 * t4933
            t4949 = -11752 * t4926 - 142380 * t4930 - 411320 * t4932 - 161590 * t4934 + 387816 * t4936 + 287924 * t4938 + 49720 * t4940 + 1695 * t4942 - 113
            t4948 = 113 * t4911 + 11752 * t4913 + 142380 * t4915 + 411320 * t4917 + 161590 * t4919 - 1695 * t4927 - 49720 * t4929 - 287924 * t4931 - 387816 * t4933
            t4947 = -290160 * t4926 + 3046680 * t4930 - 5513040 * t4932 - 797940 * t4934 + 9575280 * t4936 - 7399080 * t4938 + 870480 * t4940 + 544050 * t4942 - 36270
            t4946 = 1557192 * t4911 - 1557192 * t4913 - 23357880 * t4915 + 85645560 * t4917 - 132361320 * t4919 + 7785960 * t4929 - 45158568 * t4931 + 107446248 * t4933
            t4945 = 72540 * t4911 + 1450800 * t4913 - 3481920 * t4915 - 2031120 * t4917 + 11171160 * t4919 - 217620 * t4927 + 870480 * t4929 + 1740960 * t4931 - 9575280 * t4933
            t4944 = -6228768 * t4926 + 23357880 * t4930 - 31143840 * t4932 - 3892980 * t4934 + 56058912 * t4936 - 63844872 * t4938 + 31143840 * t4940 - 5839470 * t4942 + 389298
            t4928 = 15 * phi1
            tfunc[..., c] = -0.11e2 / 0.236978176e9 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.29e2) * np.sqrt(0.113e3) * (0.4145382e7 * (70 * t4919 - 56 * t4917 - 56 * t4933 + 28 * t4915 + 28 * t4931 - 8 * t4913 - 8 * t4929 + t4911 + t4927) * np.sin(t4928) - (t4944 + t4946) * np.sin(-t4928 + (4 * phi2)) + (-t4944 + t4946) * np.sin(t4928 + (4 * phi2)) - (t4945 - t4947) * np.sin(-t4928 + (8 * phi2)) + (t4945 + t4947) * np.sin(t4928 + (8 * phi2)) - (t4948 - t4949) * np.sin(-t4928 + (16 * phi2)) - (t4950 - t4951) * np.sin(-t4928 + (12 * phi2)) + (t4950 + t4951) * np.sin(t4928 + (12 * phi2)) + (t4948 + t4949) * np.sin(t4928 + (16 * phi2))) * ((1 - t4927) ** (-0.1e1 / 0.2e1)) * ((1 + t4927) ** (-0.1e1 / 0.2e1))

        if Bindx == 146:
            t4974 = np.cos(phi)
            t4973 = t4974 ** 2
            t4976 = t4974 * t4973
            t4979 = t4976 ** 2
            t4980 = t4974 * t4979
            t4987 = t4980 ** 2
            t4960 = t4974 * t4987
            t4996 = -t4960 - t4974
            t4977 = t4973 ** 2
            t4981 = t4977 ** 2
            t4959 = t4981 ** 2
            t4985 = t4979 ** 2
            t4995 = 1 + t4959 + 64 * t4973 + 364 * t4977 - 858 * t4981 + 364 * t4985 + 64 * t4987
            t4978 = t4974 * t4977
            t4983 = t4978 ** 2
            t4994 = -49 - 49 * t4959 + 980 * t4977 - 3136 * t4979 + 4410 * t4981 - 3136 * t4983 + 980 * t4985
            t4962 = t4974 * t4985
            t4964 = t4974 * t4983
            t4966 = t4974 * t4981
            t4993 = -12 * t4960 - 196 * t4962 - 364 * t4964 + 572 * t4966 - 12 * t4974 - 196 * t4976 - 364 * t4978 + 572 * t4980
            t4992 = -240 * t4962 + 1200 * t4964 - 880 * t4966 - 240 * t4976 + 1200 * t4978 - 880 * t4980 + 80 * t4996
            t4991 = 980 * t4962 - 1764 * t4964 + 980 * t4966 + 980 * t4976 - 1764 * t4978 + 980 * t4980 + 196 * t4996
            t4990 = 10 + 10 * t4959 + 240 * t4973 - 360 * t4977 - 880 * t4979 + 1980 * t4981 - 880 * t4983 - 360 * t4985 + 240 * t4987
            t4975 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.59244544e8 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * np.sqrt(0.113e3) * np.sqrt(0.13e2) * np.sqrt(0.3e1) * np.sqrt(0.5e1) * np.sqrt(0.23e2) * np.sqrt(0.899e3) * ((76 * t4959 - 608 * t4987 + 2128 * t4985 - 4256 * t4983 + 5320 * t4981 - 4256 * t4979 + 2128 * t4977 - 608 * t4973 + 76) * np.cos(t4975) + (t4993 + t4995) * np.cos(-t4975 + (12 * phi2)) + (-t4993 + t4995) * np.cos(t4975 + (12 * phi2)) + (-t4991 + t4994) * np.cos(-t4975 + (4 * phi2)) + (t4991 + t4994) * np.cos(t4975 + (4 * phi2)) + (t4990 + t4992) * np.cos(-t4975 + (8 * phi2)) + (t4990 - t4992) * np.cos(t4975 + (8 * phi2)))

        if Bindx == 147:
            t5021 = np.cos(phi)
            t5020 = t5021 ** 2
            t5023 = t5021 * t5020
            t5026 = t5023 ** 2
            t5027 = t5021 * t5026
            t5034 = t5027 ** 2
            t5007 = t5021 * t5034
            t5047 = -t5007 - t5021
            t5032 = t5026 ** 2
            t5009 = t5021 * t5032
            t5051 = -t5009 - t5023
            t5024 = t5020 ** 2
            t5028 = t5024 ** 2
            t5013 = t5021 * t5028
            t5050 = -t5013 - t5027
            t5025 = t5021 * t5024
            t5030 = t5025 ** 2
            t5049 = t5030 + t5026
            t5048 = t5032 + t5024
            t5045 = t5050 + t5051
            t5006 = t5028 ** 2
            t5044 = 248 * t5006 + 15872 * t5020 + 90272 * t5024 - 212784 * t5028 + 90272 * t5032 + 15872 * t5034 + 248
            t5011 = t5021 * t5030
            t5043 = -56058912 * t5011 - 56058912 * t5025 + 6228768 * t5047
            t5042 = 2976 * t5007 + 48608 * t5009 + 90272 * t5011 + 2976 * t5021 + 48608 * t5023 + 90272 * t5025 + 141856 * t5050
            t5041 = 1557192 * t5006 - 140147280 * t5028 + 99660288 * t5049 + 1557192
            t5040 = -63280 * t5009 - 63280 * t5023 - 1292720 * t5013 - 1292720 * t5027 - 493584 * t5011 - 493584 * t5025 + 1808 * t5047
            t5039 = 113 * t5006 + 13560 * t5020 + 1454310 * t5028 + 13560 * t5034 + 205660 * t5048 + 904904 * t5049 + 113
            t5038 = 72540 * t5006 + 1740960 * t5020 + 14362920 * t5028 + 1740960 * t5034 - 2611440 * t5048 - 6383520 * t5049 + 72540
            t5037 = 8704800 * t5011 + 8704800 * t5025 + 6383520 * t5050 + 1740960 * t5051 + 580320 * t5047
            t5022 = 16 * phi1
            t5003 = np.cos((-t5022 + 4 * phi2))
            t5002 = np.cos((t5022 + 4 * phi2))
            tfunc[..., c] = 0.11e2 / 0.947912704e9 * np.sqrt(0.5e1) * np.sqrt(0.3e1) * np.sqrt(0.29e2) * np.sqrt(0.113e3) * ((290176740 * t5028 + 4145382 * t5006 + 4145382 - 232141392 * t5030 - 232141392 * t5026 + 116070696 * t5032 + 116070696 * t5024 - 33163056 * t5034 - 33163056 * t5020) * np.cos(t5022) + ((t5041 + t5043) * t5003) + ((t5041 - t5043) * t5002) + (-t5042 + t5044) * np.cos(-t5022 + (12 * phi2)) + (t5042 + t5044) * np.cos(t5022 + (12 * phi2)) + (t5037 + t5038) * np.cos(-t5022 + (8 * phi2)) + (-t5037 + t5038) * np.cos(t5022 + (8 * phi2)) + (t5039 + t5040) * np.cos((16 * phi1 - 16 * phi2)) + (t5039 - t5040) * np.cos((16 * phi1 + 16 * phi2)) + (31143840 * (-t5045 - t5048) * t5003) + (31143840 * (t5045 - t5048) * t5002))

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

