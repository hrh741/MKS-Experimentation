import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [1, 0, 2],
                        [1, 0, 3],
                        [1, 1, 1],
                        [1, 1, 2],
                        [1, 1, 3],
                        [2, 0, 3],
                        [2, 0, 4],
                        [2, 0, 5],
                        [2, 1, 1],
                        [2, 1, 2],
                        [2, 1, 3],
                        [2, 1, 4],
                        [2, 1, 5],
                        [2, 2, 1],
                        [2, 2, 2],
                        [2, 2, 3],
                        [2, 2, 4],
                        [2, 2, 5],
                        [3, 0, 4],
                        [3, 0, 5],
                        [3, 0, 6],
                        [3, 0, 7],
                        [3, 1, 1],
                        [3, 1, 2],
                        [3, 1, 3],
                        [3, 1, 4],
                        [3, 1, 5],
                        [3, 1, 6],
                        [3, 1, 7],
                        [3, 2, 1],
                        [3, 2, 2],
                        [3, 2, 3],
                        [3, 2, 4],
                        [3, 2, 5],
                        [3, 2, 6],
                        [3, 2, 7],
                        [3, 3, 1],
                        [3, 3, 2],
                        [3, 3, 3],
                        [3, 3, 4],
                        [3, 3, 5],
                        [3, 3, 6],
                        [3, 3, 7],
                        [4, 0, 5],
                        [4, 0, 6],
                        [4, 0, 7],
                        [4, 0, 8],
                        [4, 0, 9],
                        [4, 1, 1],
                        [4, 1, 2],
                        [4, 1, 3],
                        [4, 1, 4],
                        [4, 1, 5],
                        [4, 1, 6],
                        [4, 1, 7],
                        [4, 1, 8],
                        [4, 1, 9],
                        [4, 2, 1],
                        [4, 2, 2],
                        [4, 2, 3],
                        [4, 2, 4],
                        [4, 2, 5],
                        [4, 2, 6],
                        [4, 2, 7],
                        [4, 2, 8],
                        [4, 2, 9],
                        [4, 3, 1],
                        [4, 3, 2],
                        [4, 3, 3],
                        [4, 3, 4],
                        [4, 3, 5],
                        [4, 3, 6],
                        [4, 3, 7],
                        [4, 3, 8],
                        [4, 3, 9],
                        [4, 4, 1],
                        [4, 4, 2],
                        [4, 4, 3],
                        [4, 4, 4],
                        [4, 4, 5],
                        [4, 4, 6],
                        [4, 4, 7],
                        [4, 4, 8],
                        [4, 4, 9],
                        [5, 0, 6],
                        [5, 0, 7],
                        [5, 0, 8],
                        [5, 0, 9],
                        [5, 0, 10],
                        [5, 0, 11],
                        [5, 1, 1],
                        [5, 1, 2],
                        [5, 1, 3],
                        [5, 1, 4],
                        [5, 1, 5],
                        [5, 1, 6],
                        [5, 1, 7],
                        [5, 1, 8],
                        [5, 1, 9],
                        [5, 1, 10],
                        [5, 1, 11],
                        [5, 2, 1],
                        [5, 2, 2],
                        [5, 2, 3],
                        [5, 2, 4],
                        [5, 2, 5],
                        [5, 2, 6],
                        [5, 2, 7],
                        [5, 2, 8],
                        [5, 2, 9],
                        [5, 2, 10],
                        [5, 2, 11],
                        [5, 3, 1],
                        [5, 3, 2],
                        [5, 3, 3],
                        [5, 3, 4],
                        [5, 3, 5],
                        [5, 3, 6],
                        [5, 3, 7],
                        [5, 3, 8],
                        [5, 3, 9],
                        [5, 3, 10],
                        [5, 3, 11],
                        [5, 4, 1],
                        [5, 4, 2],
                        [5, 4, 3],
                        [5, 4, 4],
                        [5, 4, 5],
                        [5, 4, 6],
                        [5, 4, 7],
                        [5, 4, 8],
                        [5, 4, 9],
                        [5, 4, 10],
                        [5, 4, 11],
                        [5, 5, 1],
                        [5, 5, 2],
                        [5, 5, 3],
                        [5, 5, 4],
                        [5, 5, 5],
                        [5, 5, 6],
                        [5, 5, 7],
                        [5, 5, 8],
                        [5, 5, 9],
                        [5, 5, 10],
                        [5, 5, 11],
                        [6, 0, 7],
                        [6, 0, 8],
                        [6, 0, 9],
                        [6, 0, 10],
                        [6, 0, 11],
                        [6, 0, 12],
                        [6, 0, 13],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 1, 3],
                        [6, 1, 4],
                        [6, 1, 5],
                        [6, 1, 6],
                        [6, 1, 7],
                        [6, 1, 8],
                        [6, 1, 9],
                        [6, 1, 10],
                        [6, 1, 11],
                        [6, 1, 12],
                        [6, 1, 13],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 2, 3],
                        [6, 2, 4],
                        [6, 2, 5],
                        [6, 2, 6],
                        [6, 2, 7],
                        [6, 2, 8],
                        [6, 2, 9],
                        [6, 2, 10],
                        [6, 2, 11],
                        [6, 2, 12],
                        [6, 2, 13],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 3, 3],
                        [6, 3, 4],
                        [6, 3, 5],
                        [6, 3, 6],
                        [6, 3, 7],
                        [6, 3, 8],
                        [6, 3, 9],
                        [6, 3, 10],
                        [6, 3, 11],
                        [6, 3, 12],
                        [6, 3, 13],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 4, 3],
                        [6, 4, 4],
                        [6, 4, 5],
                        [6, 4, 6],
                        [6, 4, 7],
                        [6, 4, 8],
                        [6, 4, 9],
                        [6, 4, 10],
                        [6, 4, 11],
                        [6, 4, 12],
                        [6, 4, 13],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 5, 3],
                        [6, 5, 4],
                        [6, 5, 5],
                        [6, 5, 6],
                        [6, 5, 7],
                        [6, 5, 8],
                        [6, 5, 9],
                        [6, 5, 10],
                        [6, 5, 11],
                        [6, 5, 12],
                        [6, 5, 13],
                        [6, 6, 1],
                        [6, 6, 2],
                        [6, 6, 3],
                        [6, 6, 4],
                        [6, 6, 5],
                        [6, 6, 6],
                        [6, 6, 7],
                        [6, 6, 8],
                        [6, 6, 9],
                        [6, 6, 10],
                        [6, 6, 11],
                        [6, 6, 12],
                        [6, 6, 13],
                        [7, 0, 8],
                        [7, 0, 9],
                        [7, 0, 10],
                        [7, 0, 11],
                        [7, 0, 12],
                        [7, 0, 13],
                        [7, 0, 14],
                        [7, 0, 15],
                        [7, 1, 1],
                        [7, 1, 2],
                        [7, 1, 3],
                        [7, 1, 4],
                        [7, 1, 5],
                        [7, 1, 6],
                        [7, 1, 7],
                        [7, 1, 8],
                        [7, 1, 9],
                        [7, 1, 10],
                        [7, 1, 11],
                        [7, 1, 12],
                        [7, 1, 13],
                        [7, 1, 14],
                        [7, 1, 15],
                        [7, 2, 1],
                        [7, 2, 2],
                        [7, 2, 3],
                        [7, 2, 4],
                        [7, 2, 5],
                        [7, 2, 6],
                        [7, 2, 7],
                        [7, 2, 8],
                        [7, 2, 9],
                        [7, 2, 10],
                        [7, 2, 11],
                        [7, 2, 12],
                        [7, 2, 13],
                        [7, 2, 14],
                        [7, 2, 15],
                        [7, 3, 1],
                        [7, 3, 2],
                        [7, 3, 3],
                        [7, 3, 4],
                        [7, 3, 5],
                        [7, 3, 6],
                        [7, 3, 7],
                        [7, 3, 8],
                        [7, 3, 9],
                        [7, 3, 10],
                        [7, 3, 11],
                        [7, 3, 12],
                        [7, 3, 13],
                        [7, 3, 14],
                        [7, 3, 15],
                        [7, 4, 1],
                        [7, 4, 2],
                        [7, 4, 3],
                        [7, 4, 4],
                        [7, 4, 5],
                        [7, 4, 6],
                        [7, 4, 7],
                        [7, 4, 8],
                        [7, 4, 9],
                        [7, 4, 10],
                        [7, 4, 11],
                        [7, 4, 12],
                        [7, 4, 13],
                        [7, 4, 14],
                        [7, 4, 15],
                        [7, 5, 1],
                        [7, 5, 2],
                        [7, 5, 3],
                        [7, 5, 4],
                        [7, 5, 5],
                        [7, 5, 6],
                        [7, 5, 7],
                        [7, 5, 8],
                        [7, 5, 9],
                        [7, 5, 10],
                        [7, 5, 11],
                        [7, 5, 12],
                        [7, 5, 13],
                        [7, 5, 14],
                        [7, 5, 15],
                        [7, 6, 1],
                        [7, 6, 2],
                        [7, 6, 3],
                        [7, 6, 4],
                        [7, 6, 5],
                        [7, 6, 6],
                        [7, 6, 7],
                        [7, 6, 8],
                        [7, 6, 9],
                        [7, 6, 10],
                        [7, 6, 11],
                        [7, 6, 12],
                        [7, 6, 13],
                        [7, 6, 14],
                        [7, 6, 15],
                        [7, 7, 1],
                        [7, 7, 2],
                        [7, 7, 3],
                        [7, 7, 4],
                        [7, 7, 5],
                        [7, 7, 6],
                        [7, 7, 7],
                        [7, 7, 8],
                        [7, 7, 9],
                        [7, 7, 10],
                        [7, 7, 11],
                        [7, 7, 12],
                        [7, 7, 13],
                        [7, 7, 14],
                        [7, 7, 15],
                        [8, 0, 9],
                        [8, 0, 10],
                        [8, 0, 11],
                        [8, 0, 12],
                        [8, 0, 13],
                        [8, 0, 14],
                        [8, 0, 15],
                        [8, 0, 16],
                        [8, 0, 17],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 1, 3],
                        [8, 1, 4],
                        [8, 1, 5],
                        [8, 1, 6],
                        [8, 1, 7],
                        [8, 1, 8],
                        [8, 1, 9],
                        [8, 1, 10],
                        [8, 1, 11],
                        [8, 1, 12],
                        [8, 1, 13],
                        [8, 1, 14],
                        [8, 1, 15],
                        [8, 1, 16],
                        [8, 1, 17],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 2, 3],
                        [8, 2, 4],
                        [8, 2, 5],
                        [8, 2, 6],
                        [8, 2, 7],
                        [8, 2, 8],
                        [8, 2, 9],
                        [8, 2, 10],
                        [8, 2, 11],
                        [8, 2, 12],
                        [8, 2, 13],
                        [8, 2, 14],
                        [8, 2, 15],
                        [8, 2, 16],
                        [8, 2, 17],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 3, 3],
                        [8, 3, 4],
                        [8, 3, 5],
                        [8, 3, 6],
                        [8, 3, 7],
                        [8, 3, 8],
                        [8, 3, 9],
                        [8, 3, 10],
                        [8, 3, 11],
                        [8, 3, 12],
                        [8, 3, 13],
                        [8, 3, 14],
                        [8, 3, 15],
                        [8, 3, 16],
                        [8, 3, 17],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 4, 3],
                        [8, 4, 4],
                        [8, 4, 5],
                        [8, 4, 6],
                        [8, 4, 7],
                        [8, 4, 8],
                        [8, 4, 9],
                        [8, 4, 10],
                        [8, 4, 11],
                        [8, 4, 12],
                        [8, 4, 13],
                        [8, 4, 14],
                        [8, 4, 15],
                        [8, 4, 16],
                        [8, 4, 17],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 5, 3],
                        [8, 5, 4],
                        [8, 5, 5],
                        [8, 5, 6],
                        [8, 5, 7],
                        [8, 5, 8],
                        [8, 5, 9],
                        [8, 5, 10],
                        [8, 5, 11],
                        [8, 5, 12],
                        [8, 5, 13],
                        [8, 5, 14],
                        [8, 5, 15],
                        [8, 5, 16],
                        [8, 5, 17],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 6, 3],
                        [8, 6, 4],
                        [8, 6, 5],
                        [8, 6, 6],
                        [8, 6, 7],
                        [8, 6, 8],
                        [8, 6, 9],
                        [8, 6, 10],
                        [8, 6, 11],
                        [8, 6, 12],
                        [8, 6, 13],
                        [8, 6, 14],
                        [8, 6, 15],
                        [8, 6, 16],
                        [8, 6, 17],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 7, 3],
                        [8, 7, 4],
                        [8, 7, 5],
                        [8, 7, 6],
                        [8, 7, 7],
                        [8, 7, 8],
                        [8, 7, 9],
                        [8, 7, 10],
                        [8, 7, 11],
                        [8, 7, 12],
                        [8, 7, 13],
                        [8, 7, 14],
                        [8, 7, 15],
                        [8, 7, 16],
                        [8, 7, 17],
                        [8, 8, 1],
                        [8, 8, 2],
                        [8, 8, 3],
                        [8, 8, 4],
                        [8, 8, 5],
                        [8, 8, 6],
                        [8, 8, 7],
                        [8, 8, 8],
                        [8, 8, 9],
                        [8, 8, 10],
                        [8, 8, 11],
                        [8, 8, 12],
                        [8, 8, 13],
                        [8, 8, 14],
                        [8, 8, 15],
                        [8, 8, 16],
                        [8, 8, 17],
                        [9, 0, 10],
                        [9, 0, 11],
                        [9, 0, 12],
                        [9, 0, 13],
                        [9, 0, 14],
                        [9, 0, 15],
                        [9, 0, 16],
                        [9, 0, 17],
                        [9, 0, 18],
                        [9, 0, 19],
                        [9, 1, 1],
                        [9, 1, 2],
                        [9, 1, 3],
                        [9, 1, 4],
                        [9, 1, 5],
                        [9, 1, 6],
                        [9, 1, 7],
                        [9, 1, 8],
                        [9, 1, 9],
                        [9, 1, 10],
                        [9, 1, 11],
                        [9, 1, 12],
                        [9, 1, 13],
                        [9, 1, 14],
                        [9, 1, 15],
                        [9, 1, 16],
                        [9, 1, 17],
                        [9, 1, 18],
                        [9, 1, 19],
                        [9, 2, 1],
                        [9, 2, 2],
                        [9, 2, 3],
                        [9, 2, 4],
                        [9, 2, 5],
                        [9, 2, 6],
                        [9, 2, 7],
                        [9, 2, 8],
                        [9, 2, 9],
                        [9, 2, 10],
                        [9, 2, 11],
                        [9, 2, 12],
                        [9, 2, 13],
                        [9, 2, 14],
                        [9, 2, 15],
                        [9, 2, 16],
                        [9, 2, 17],
                        [9, 2, 18],
                        [9, 2, 19],
                        [9, 3, 1],
                        [9, 3, 2],
                        [9, 3, 3],
                        [9, 3, 4],
                        [9, 3, 5],
                        [9, 3, 6],
                        [9, 3, 7],
                        [9, 3, 8],
                        [9, 3, 9],
                        [9, 3, 10],
                        [9, 3, 11],
                        [9, 3, 12],
                        [9, 3, 13],
                        [9, 3, 14],
                        [9, 3, 15],
                        [9, 3, 16],
                        [9, 3, 17],
                        [9, 3, 18],
                        [9, 3, 19],
                        [9, 4, 1],
                        [9, 4, 2],
                        [9, 4, 3],
                        [9, 4, 4],
                        [9, 4, 5],
                        [9, 4, 6],
                        [9, 4, 7],
                        [9, 4, 8],
                        [9, 4, 9],
                        [9, 4, 10],
                        [9, 4, 11],
                        [9, 4, 12],
                        [9, 4, 13],
                        [9, 4, 14],
                        [9, 4, 15],
                        [9, 4, 16],
                        [9, 4, 17],
                        [9, 4, 18],
                        [9, 4, 19],
                        [9, 5, 1],
                        [9, 5, 2],
                        [9, 5, 3],
                        [9, 5, 4],
                        [9, 5, 5],
                        [9, 5, 6],
                        [9, 5, 7],
                        [9, 5, 8],
                        [9, 5, 9],
                        [9, 5, 10],
                        [9, 5, 11],
                        [9, 5, 12],
                        [9, 5, 13],
                        [9, 5, 14],
                        [9, 5, 15],
                        [9, 5, 16],
                        [9, 5, 17],
                        [9, 5, 18],
                        [9, 5, 19],
                        [9, 6, 1],
                        [9, 6, 2],
                        [9, 6, 3],
                        [9, 6, 4],
                        [9, 6, 5],
                        [9, 6, 6],
                        [9, 6, 7],
                        [9, 6, 8],
                        [9, 6, 9],
                        [9, 6, 10],
                        [9, 6, 11],
                        [9, 6, 12],
                        [9, 6, 13],
                        [9, 6, 14],
                        [9, 6, 15],
                        [9, 6, 16],
                        [9, 6, 17],
                        [9, 6, 18],
                        [9, 6, 19],
                        [9, 7, 1],
                        [9, 7, 2],
                        [9, 7, 3],
                        [9, 7, 4],
                        [9, 7, 5],
                        [9, 7, 6],
                        [9, 7, 7],
                        [9, 7, 8],
                        [9, 7, 9],
                        [9, 7, 10],
                        [9, 7, 11],
                        [9, 7, 12],
                        [9, 7, 13],
                        [9, 7, 14],
                        [9, 7, 15],
                        [9, 7, 16],
                        [9, 7, 17],
                        [9, 7, 18],
                        [9, 7, 19],
                        [9, 8, 1],
                        [9, 8, 2],
                        [9, 8, 3],
                        [9, 8, 4],
                        [9, 8, 5],
                        [9, 8, 6],
                        [9, 8, 7],
                        [9, 8, 8],
                        [9, 8, 9],
                        [9, 8, 10],
                        [9, 8, 11],
                        [9, 8, 12],
                        [9, 8, 13],
                        [9, 8, 14],
                        [9, 8, 15],
                        [9, 8, 16],
                        [9, 8, 17],
                        [9, 8, 18],
                        [9, 8, 19],
                        [9, 9, 1],
                        [9, 9, 2],
                        [9, 9, 3],
                        [9, 9, 4],
                        [9, 9, 5],
                        [9, 9, 6],
                        [9, 9, 7],
                        [9, 9, 8],
                        [9, 9, 9],
                        [9, 9, 10],
                        [9, 9, 11],
                        [9, 9, 12],
                        [9, 9, 13],
                        [9, 9, 14],
                        [9, 9, 15],
                        [9, 9, 16],
                        [9, 9, 17],
                        [9, 9, 18],
                        [9, 9, 19],
                        [10, 0, 11],
                        [10, 0, 12],
                        [10, 0, 13],
                        [10, 0, 14],
                        [10, 0, 15],
                        [10, 0, 16],
                        [10, 0, 17],
                        [10, 0, 18],
                        [10, 0, 19],
                        [10, 0, 20],
                        [10, 0, 21],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 1, 3],
                        [10, 1, 4],
                        [10, 1, 5],
                        [10, 1, 6],
                        [10, 1, 7],
                        [10, 1, 8],
                        [10, 1, 9],
                        [10, 1, 10],
                        [10, 1, 11],
                        [10, 1, 12],
                        [10, 1, 13],
                        [10, 1, 14],
                        [10, 1, 15],
                        [10, 1, 16],
                        [10, 1, 17],
                        [10, 1, 18],
                        [10, 1, 19],
                        [10, 1, 20],
                        [10, 1, 21],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 2, 3],
                        [10, 2, 4],
                        [10, 2, 5],
                        [10, 2, 6],
                        [10, 2, 7],
                        [10, 2, 8],
                        [10, 2, 9],
                        [10, 2, 10],
                        [10, 2, 11],
                        [10, 2, 12],
                        [10, 2, 13],
                        [10, 2, 14],
                        [10, 2, 15],
                        [10, 2, 16],
                        [10, 2, 17],
                        [10, 2, 18],
                        [10, 2, 19],
                        [10, 2, 20],
                        [10, 2, 21],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 3, 3],
                        [10, 3, 4],
                        [10, 3, 5],
                        [10, 3, 6],
                        [10, 3, 7],
                        [10, 3, 8],
                        [10, 3, 9],
                        [10, 3, 10],
                        [10, 3, 11],
                        [10, 3, 12],
                        [10, 3, 13],
                        [10, 3, 14],
                        [10, 3, 15],
                        [10, 3, 16],
                        [10, 3, 17],
                        [10, 3, 18],
                        [10, 3, 19],
                        [10, 3, 20],
                        [10, 3, 21],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 4, 3],
                        [10, 4, 4],
                        [10, 4, 5],
                        [10, 4, 6],
                        [10, 4, 7],
                        [10, 4, 8],
                        [10, 4, 9],
                        [10, 4, 10],
                        [10, 4, 11],
                        [10, 4, 12],
                        [10, 4, 13],
                        [10, 4, 14],
                        [10, 4, 15],
                        [10, 4, 16],
                        [10, 4, 17],
                        [10, 4, 18],
                        [10, 4, 19],
                        [10, 4, 20],
                        [10, 4, 21],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 5, 3],
                        [10, 5, 4],
                        [10, 5, 5],
                        [10, 5, 6],
                        [10, 5, 7],
                        [10, 5, 8],
                        [10, 5, 9],
                        [10, 5, 10],
                        [10, 5, 11],
                        [10, 5, 12],
                        [10, 5, 13],
                        [10, 5, 14],
                        [10, 5, 15],
                        [10, 5, 16],
                        [10, 5, 17],
                        [10, 5, 18],
                        [10, 5, 19],
                        [10, 5, 20],
                        [10, 5, 21],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 6, 3],
                        [10, 6, 4],
                        [10, 6, 5],
                        [10, 6, 6],
                        [10, 6, 7],
                        [10, 6, 8],
                        [10, 6, 9],
                        [10, 6, 10],
                        [10, 6, 11],
                        [10, 6, 12],
                        [10, 6, 13],
                        [10, 6, 14],
                        [10, 6, 15],
                        [10, 6, 16],
                        [10, 6, 17],
                        [10, 6, 18],
                        [10, 6, 19],
                        [10, 6, 20],
                        [10, 6, 21],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 7, 3],
                        [10, 7, 4],
                        [10, 7, 5],
                        [10, 7, 6],
                        [10, 7, 7],
                        [10, 7, 8],
                        [10, 7, 9],
                        [10, 7, 10],
                        [10, 7, 11],
                        [10, 7, 12],
                        [10, 7, 13],
                        [10, 7, 14],
                        [10, 7, 15],
                        [10, 7, 16],
                        [10, 7, 17],
                        [10, 7, 18],
                        [10, 7, 19],
                        [10, 7, 20],
                        [10, 7, 21],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 8, 3],
                        [10, 8, 4],
                        [10, 8, 5],
                        [10, 8, 6],
                        [10, 8, 7],
                        [10, 8, 8],
                        [10, 8, 9],
                        [10, 8, 10],
                        [10, 8, 11],
                        [10, 8, 12],
                        [10, 8, 13],
                        [10, 8, 14],
                        [10, 8, 15],
                        [10, 8, 16],
                        [10, 8, 17],
                        [10, 8, 18],
                        [10, 8, 19],
                        [10, 8, 20],
                        [10, 8, 21],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 9, 3],
                        [10, 9, 4],
                        [10, 9, 5],
                        [10, 9, 6],
                        [10, 9, 7],
                        [10, 9, 8],
                        [10, 9, 9],
                        [10, 9, 10],
                        [10, 9, 11],
                        [10, 9, 12],
                        [10, 9, 13],
                        [10, 9, 14],
                        [10, 9, 15],
                        [10, 9, 16],
                        [10, 9, 17],
                        [10, 9, 18],
                        [10, 9, 19],
                        [10, 9, 20],
                        [10, 9, 21],
                        [10, 10, 1],
                        [10, 10, 2],
                        [10, 10, 3],
                        [10, 10, 4],
                        [10, 10, 5],
                        [10, 10, 6],
                        [10, 10, 7],
                        [10, 10, 8],
                        [10, 10, 9],
                        [10, 10, 10],
                        [10, 10, 11],
                        [10, 10, 12],
                        [10, 10, 13],
                        [10, 10, 14],
                        [10, 10, 15],
                        [10, 10, 16],
                        [10, 10, 17],
                        [10, 10, 18],
                        [10, 10, 19],
                        [10, 10, 20],
                        [10, 10, 21]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            tfunc[..., c] = 0.3e1 * np.cos(phi)

        if Bindx == 2:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.3e1 * np.sqrt((1 - t1)) * np.sqrt((1 + t1)) * np.sin(phi2)

        if Bindx == 3:
            tfunc[..., c] = -0.3e1 / 0.2e1 * np.sqrt(0.2e1) * np.cos(phi1 - phi2) * (np.cos(phi) - 0.1e1)

        if Bindx == 4:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.3e1 * t2 ** 2 * np.sin(phi1) * ((1 - t3) ** (-0.1e1 / 0.2e1)) * ((1 + t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 5:
            tfunc[..., c] = 0.3e1 / 0.2e1 * np.sqrt(0.2e1) * np.cos(phi1 + phi2) * (0.1e1 + np.cos(phi))

        if Bindx == 6:
            t4 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t4 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 7:
            t6 = np.cos(phi)
            t5 = np.sin(phi)
            tfunc[..., c] = 0.5e1 * np.sqrt(0.3e1) * t6 * t5 ** 2 * np.sin(phi2) * ((1 - t6) ** (-0.1e1 / 0.2e1)) * ((1 + t6) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t7 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t7 ** 2 - 1) * np.cos((2 * phi2))

        if Bindx == 9:
            t8 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * ((1 - t8) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t8)) * np.sin((phi1 - 2 * phi2))

        if Bindx == 10:
            t9 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * (2 * t9 ** 2 - t9 - 1) * np.cos(phi1 - phi2)

        if Bindx == 11:
            t11 = np.cos(phi)
            t10 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t11 * t10 ** 2 * np.sin(phi1) * ((1 - t11) ** (-0.1e1 / 0.2e1)) * ((1 + t11) ** (-0.1e1 / 0.2e1))

        if Bindx == 12:
            t12 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.2e1 * np.sqrt(0.2e1) * (2 * t12 ** 2 + t12 - 1) * np.cos(phi1 + phi2)

        if Bindx == 13:
            t13 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.2e1 * np.sqrt(0.2e1) * np.sqrt((1 - t13)) * ((1 + t13) ** (0.3e1 / 0.2e1)) * np.sin((phi1 + 2 * phi2))

        if Bindx == 14:
            t14 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.4e1 * np.sqrt(0.2e1) * np.cos((2 * phi1 - 2 * phi2)) * (1 + (-2 + t14) * t14)

        if Bindx == 15:
            t15 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * ((1 - t15) ** (0.3e1 / 0.2e1)) * np.sqrt((1 + t15)) * np.sin((2 * phi1 - phi2))

        if Bindx == 16:
            t16 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t16 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 17:
            t17 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.2e1) * ((1 + t17) ** (0.3e1 / 0.2e1)) * np.sqrt((1 - t17)) * np.sin((2 * phi1 + phi2))

        if Bindx == 18:
            t18 = np.cos(phi)
            tfunc[..., c] = 0.5e1 / 0.4e1 * np.sqrt(0.2e1) * np.cos((2 * phi1 + 2 * phi2)) * (1 + (2 + t18) * t18)

        if Bindx == 19:
            t19 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.2e1 * t19 * (5 * t19 ** 2 - 3)

        if Bindx == 20:
            t21 = np.cos(phi)
            t20 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t20 ** 2 * (5 * t21 ** 2 - 1) * np.sin(phi2) * ((1 - t21) ** (-0.1e1 / 0.2e1)) * ((1 + t21) ** (-0.1e1 / 0.2e1))

        if Bindx == 21:
            t22 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.2e1 * np.sqrt(0.15e2) * t22 * (t22 ** 2 - 1) * np.cos((2 * phi2))

        if Bindx == 22:
            t23 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t23) ** (0.3e1 / 0.2e1)) * ((1 + t23) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi2))

        if Bindx == 23:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t24 * t25 - t24 - t25 + 1) * np.cos((phi1 - 3 * phi2))

        if Bindx == 24:
            t28 = np.cos(phi)
            t27 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t27 ** 2 * (-1 + (-2 + 3 * t28) * t28) * np.sin((phi1 - 2 * phi2)) * ((1 - t28) ** (-0.1e1 / 0.2e1)) * ((1 + t28) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t29 = np.cos(phi)
            t30 = t29 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * (-5 * t30 + 1 + (15 * t30 - 11) * t29) * np.cos(phi1 - phi2)

        if Bindx == 26:
            t33 = np.cos(phi)
            t32 = np.sin(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t32 ** 2 * (5 * t33 ** 2 - 1) * np.sin(phi1) * ((1 - t33) ** (-0.1e1 / 0.2e1)) * ((1 + t33) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t34 = np.cos(phi)
            t35 = t34 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * (5 * t35 - 1 + (15 * t35 - 11) * t34) * np.cos(phi1 + phi2)

        if Bindx == 28:
            t38 = np.cos(phi)
            t37 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t37 ** 2 * (-1 + (2 + 3 * t38) * t38) * np.sin((phi1 + 2 * phi2)) * ((1 - t38) ** (-0.1e1 / 0.2e1)) * ((1 + t38) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t39 = np.cos(phi)
            t40 = t39 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t39 * t40 - t39 + t40 - 1) * np.cos((phi1 + 3 * phi2))

        if Bindx == 30:
            t42 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.3e1) * ((1 - t42) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t42)) * np.sin((2 * phi1 - 3 * phi2))

        if Bindx == 31:
            t43 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * (-t43 + 2 + (3 * t43 - 4) * t43 ** 2) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 32:
            t47 = np.cos(phi)
            t46 = np.sin(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t46 ** 2 * (-1 + (-2 + 3 * t47) * t47) * np.sin((2 * phi1 - phi2)) * ((1 - t47) ** (-0.1e1 / 0.2e1)) * ((1 + t47) ** (-0.1e1 / 0.2e1))

        if Bindx == 33:
            t48 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.2e1 * np.sqrt(0.15e2) * t48 * (t48 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 34:
            t50 = np.cos(phi)
            t49 = np.sin(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.5e1) * t49 ** 2 * (-1 + (2 + 3 * t50) * t50) * np.sin((2 * phi1 + phi2)) * ((1 - t50) ** (-0.1e1 / 0.2e1)) * ((1 + t50) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t51 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.2e1) * (-t51 - 2 + (3 * t51 + 4) * t51 ** 2) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 36:
            t54 = np.cos(phi)
            tfunc[..., c] = 0.7e1 / 0.4e1 * np.sqrt(0.3e1) * np.sqrt((1 - t54)) * ((1 + t54) ** (0.5e1 / 0.2e1)) * np.sin((2 * phi1 + 3 * phi2))

        if Bindx == 37:
            t55 = np.cos(phi)
            t56 = t55 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.cos((3 * phi1 - 3 * phi2)) * (-3 * t56 - 1 + (t56 + 3) * t55)

        if Bindx == 38:
            t58 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.3e1) * ((1 - t58) ** (0.5e1 / 0.2e1)) * np.sqrt((1 + t58)) * np.sin((3 * phi1 - 2 * phi2))

        if Bindx == 39:
            t59 = np.cos(phi)
            t60 = t59 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t59 * t60 - t59 - t60 + 1) * np.cos((3 * phi1 - phi2))

        if Bindx == 40:
            t62 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t62) ** (0.3e1 / 0.2e1)) * ((1 + t62) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi1))

        if Bindx == 41:
            t63 = np.cos(phi)
            t64 = t63 ** 2
            tfunc[..., c] = -0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * (t63 * t64 - t63 + t64 - 1) * np.cos((3 * phi1 + phi2))

        if Bindx == 42:
            t66 = np.cos(phi)
            tfunc[..., c] = -0.7e1 / 0.4e1 * np.sqrt(0.3e1) * ((1 + t66) ** (0.5e1 / 0.2e1)) * np.sqrt((1 - t66)) * np.sin((3 * phi1 + 2 * phi2))

        if Bindx == 43:
            t67 = np.cos(phi)
            t68 = t67 ** 2
            tfunc[..., c] = 0.7e1 / 0.8e1 * np.sqrt(0.2e1) * np.cos((3 * phi1 + 3 * phi2)) * (3 * t68 + 1 + (t68 + 3) * t67)

        if Bindx == 44:
            t70 = np.cos(phi)
            t71 = t70 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t71) * t71

        if Bindx == 45:
            t74 = np.cos(phi)
            t73 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t74 * t73 ** 2 * (7 * t74 ** 2 - 3) * np.sin(phi2) * ((1 + t74) ** (-0.1e1 / 0.2e1)) * ((1 - t74) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t75 = np.cos(phi)
            t76 = t75 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t76) * t76) * np.cos((2 * phi2))

        if Bindx == 47:
            t81 = np.sin(phi)
            t79 = t81 ** 2
            t78 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t78 * t79 ** 2 * np.sin((3 * phi2)) * ((1 + t78) ** (-0.1e1 / 0.2e1)) * ((1 - t78) ** (-0.1e1 / 0.2e1))

        if Bindx == 48:
            t82 = np.cos(phi)
            t83 = t82 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi2)) * (1 + (-2 + t83) * t83)

        if Bindx == 49:
            t85 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t85) ** (0.5e1 / 0.2e1)) * ((1 + t85) ** (0.3e1 / 0.2e1)) * np.sin((phi1 - 4 * phi2))

        if Bindx == 50:
            t86 = np.cos(phi)
            t87 = t86 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (3 * t86 + 1 + (-3 * t86 - 5 + 4 * t87) * t87) * np.cos((phi1 - 3 * phi2))

        if Bindx == 51:
            t91 = np.cos(phi)
            t92 = t91 ** 2
            t90 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * t90 ** 2 * (-7 * t92 + 1 + (14 * t92 - 8) * t91) * np.sin((phi1 - 2 * phi2)) * ((1 + t91) ** (-0.1e1 / 0.2e1)) * ((1 - t91) ** (-0.1e1 / 0.2e1))

        if Bindx == 52:
            t94 = np.cos(phi)
            t95 = t94 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (3 * t94 + 3 + (-7 * t94 - 27 + 28 * t95) * t95) * np.cos(phi1 - phi2)

        if Bindx == 53:
            t99 = np.cos(phi)
            t98 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t99 * t98 ** 2 * (7 * t99 ** 2 - 3) * np.sin(phi1) * ((1 + t99) ** (-0.1e1 / 0.2e1)) * ((1 - t99) ** (-0.1e1 / 0.2e1))

        if Bindx == 54:
            t100 = np.cos(phi)
            t101 = t100 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (-3 * t100 + 3 + (7 * t100 - 27 + 28 * t101) * t101) * np.cos(phi1 + phi2)

        if Bindx == 55:
            t105 = np.cos(phi)
            t106 = t105 ** 2
            t104 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * t104 ** 2 * (7 * t106 - 1 + (14 * t106 - 8) * t105) * np.sin((phi1 + 2 * phi2)) * ((1 + t105) ** (-0.1e1 / 0.2e1)) * ((1 - t105) ** (-0.1e1 / 0.2e1))

        if Bindx == 56:
            t108 = np.cos(phi)
            t109 = t108 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-3 * t108 + 1 + (3 * t108 - 5 + 4 * t109) * t109) * np.cos((phi1 + 3 * phi2))

        if Bindx == 57:
            t112 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t112) ** (0.3e1 / 0.2e1)) * ((1 + t112) ** (0.5e1 / 0.2e1)) * np.sin((phi1 + 4 * phi2))

        if Bindx == 58:
            t113 = np.cos(phi)
            t114 = t113 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t114 ** 2 - 1 + (-2 * t114 + 2) * t113) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 59:
            t118 = np.cos(phi)
            t117 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t117 ** 2 * (1 + (2 * t118 - 3) * t118 ** 2) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t118) ** (-0.1e1 / 0.2e1)) * ((1 - t118) ** (-0.1e1 / 0.2e1))

        if Bindx == 60:
            t121 = np.cos(phi)
            t122 = t121 ** 2
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * (5 * t121 + 1 + (-7 * t121 - 6 + 7 * t122) * t122) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 61:
            t126 = np.cos(phi)
            t127 = t126 ** 2
            t125 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * t125 ** 2 * (-7 * t127 + 1 + (14 * t127 - 8) * t126) * np.sin((2 * phi1 - phi2)) * ((1 + t126) ** (-0.1e1 / 0.2e1)) * ((1 - t126) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t129 = np.cos(phi)
            t130 = t129 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t130) * t130) * np.cos((2 * phi1))

        if Bindx == 63:
            t133 = np.cos(phi)
            t134 = t133 ** 2
            t132 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * t132 ** 2 * (7 * t134 - 1 + (14 * t134 - 8) * t133) * np.sin((2 * phi1 + phi2)) * ((1 + t133) ** (-0.1e1 / 0.2e1)) * ((1 - t133) ** (-0.1e1 / 0.2e1))

        if Bindx == 64:
            t136 = np.cos(phi)
            t137 = t136 ** 2
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.2e1) * (-5 * t136 + 1 + (7 * t136 - 6 + 7 * t137) * t137) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 65:
            t141 = np.cos(phi)
            t140 = np.sin(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t140 ** 2 * (-1 + (2 * t141 + 3) * t141 ** 2) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t141) ** (-0.1e1 / 0.2e1)) * ((1 - t141) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t144 = np.cos(phi)
            t145 = t144 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t145 ** 2 - 1 + (2 * t145 - 2) * t144) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 67:
            t148 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * ((1 - t148) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t148)) * np.sin((3 * phi1 - 4 * phi2))

        if Bindx == 68:
            t149 = np.cos(phi)
            t150 = t149 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (5 * t149 - 3 + (-9 * t149 + 3 + 4 * t150) * t150) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 69:
            t154 = np.cos(phi)
            t153 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t153 ** 2 * (1 + (2 * t154 - 3) * t154 ** 2) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t154) ** (-0.1e1 / 0.2e1)) * ((1 - t154) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t157 = np.cos(phi)
            t158 = t157 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (3 * t157 + 1 + (-3 * t157 - 5 + 4 * t158) * t158) * np.cos((3 * phi1 - phi2))

        if Bindx == 71:
            t164 = np.sin(phi)
            t162 = t164 ** 2
            t161 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t161 * t162 ** 2 * np.sin((3 * phi1)) * ((1 + t161) ** (-0.1e1 / 0.2e1)) * ((1 - t161) ** (-0.1e1 / 0.2e1))

        if Bindx == 72:
            t165 = np.cos(phi)
            t166 = t165 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (-3 * t165 + 1 + (3 * t165 - 5 + 4 * t166) * t166) * np.cos((3 * phi1 + phi2))

        if Bindx == 73:
            t170 = np.cos(phi)
            t169 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * t169 ** 2 * (-1 + (2 * t170 + 3) * t170 ** 2) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t170) ** (-0.1e1 / 0.2e1)) * ((1 - t170) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t173 = np.cos(phi)
            t174 = t173 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.2e1) * (-5 * t173 - 3 + (9 * t173 + 3 + 4 * t174) * t174) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 75:
            t177 = np.cos(phi)
            tfunc[..., c] = 0.9e1 / 0.4e1 * np.sqrt((1 - t177)) * ((1 + t177) ** (0.7e1 / 0.2e1)) * np.sin((3 * phi1 + 4 * phi2))

        if Bindx == 76:
            t178 = np.cos(phi)
            t182 = -4 * t178
            t179 = t178 ** 2
            tfunc[..., c] = 0.9e1 / 0.16e2 * np.sqrt(0.2e1) * np.cos((4 * phi1 - 4 * phi2)) * (t182 + 1 + (t182 + 6 + t179) * t179)

        if Bindx == 77:
            t183 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * ((1 - t183) ** (0.7e1 / 0.2e1)) * np.sqrt((1 + t183)) * np.sin((4 * phi1 - 3 * phi2))

        if Bindx == 78:
            t184 = np.cos(phi)
            t185 = t184 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t185 ** 2 - 1 + (-2 * t185 + 2) * t184) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 79:
            t188 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t188) ** (0.5e1 / 0.2e1)) * ((1 + t188) ** (0.3e1 / 0.2e1)) * np.sin((4 * phi1 - phi2))

        if Bindx == 80:
            t189 = np.cos(phi)
            t190 = t189 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t190) * t190)

        if Bindx == 81:
            t192 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.7e1) * ((1 - t192) ** (0.3e1 / 0.2e1)) * ((1 + t192) ** (0.5e1 / 0.2e1)) * np.sin((4 * phi1 + phi2))

        if Bindx == 82:
            t193 = np.cos(phi)
            t194 = t193 ** 2
            tfunc[..., c] = -0.9e1 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * (t194 ** 2 - 1 + (2 * t194 - 2) * t193) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 83:
            t197 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * ((1 + t197) ** (0.7e1 / 0.2e1)) * np.sqrt((1 - t197)) * np.sin((4 * phi1 + 3 * phi2))

        if Bindx == 84:
            t198 = np.cos(phi)
            t202 = 4 * t198
            t199 = t198 ** 2
            tfunc[..., c] = 0.9e1 / 0.16e2 * np.sqrt(0.2e1) * np.cos((4 * phi1 + 4 * phi2)) * (t202 + 1 + (t202 + 6 + t199) * t199)

        if Bindx == 85:
            t203 = np.cos(phi)
            t204 = t203 ** 2
            tfunc[..., c] = 0.11e2 / 0.8e1 * t203 * (15 + (-70 + 63 * t204) * t204)

        if Bindx == 86:
            t207 = np.cos(phi)
            t208 = t207 ** 2
            t206 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.15e2) * t206 ** 2 * (1 + (-14 + 21 * t208) * t208) * np.sin(phi2) * ((1 - t207) ** (-0.1e1 / 0.2e1)) * ((1 + t207) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t210 = np.cos(phi)
            t211 = t210 ** 2
            tfunc[..., c] = -0.11e2 / 0.4e1 * t210 * np.sqrt(0.105e3) * (1 + (-4 + 3 * t211) * t211) * np.cos((2 * phi2))

        if Bindx == 88:
            t216 = np.sin(phi)
            t214 = t216 ** 2
            t213 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t214 ** 2 * (9 * t213 ** 2 - 1) * np.sin((3 * phi2)) * ((1 + t213) ** (-0.1e1 / 0.2e1)) * ((1 - t213) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t217 = np.cos(phi)
            t218 = t217 ** 2
            tfunc[..., c] = 0.33e2 / 0.8e1 * np.sqrt(0.35e2) * t217 * np.cos((4 * phi2)) * (1 + (-2 + t218) * t218)

        if Bindx == 90:
            t220 = np.cos(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t220) ** (0.5e1 / 0.2e1)) * ((1 + t220) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi2))

        if Bindx == 91:
            t221 = np.cos(phi)
            t222 = t221 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((phi1 - 5 * phi2)) * (t221 - 1) * (1 + (-2 + t222) * t222)

        if Bindx == 92:
            t230 = np.sin(phi)
            t228 = t230 ** 2
            t227 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t228 ** 2 * (-1 + (-4 + 5 * t227) * t227) * np.sin((phi1 - 4 * phi2)) * ((1 + t227) ** (-0.1e1 / 0.2e1)) * ((1 - t227) ** (-0.1e1 / 0.2e1))

        if Bindx == 93:
            t231 = np.cos(phi)
            t232 = t231 ** 2
            t234 = t232 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (10 * t232 - 9 * t234 - 1 + (-22 * t232 + 15 * t234 + 7) * t231) * np.cos((phi1 - 3 * phi2))

        if Bindx == 94:
            t237 = np.cos(phi)
            t238 = t237 ** 2
            t236 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t236 ** 2 * (2 * t237 + 1 + (-6 * t237 - 12 + 15 * t238) * t238) * np.sin((phi1 - 2 * phi2)) * ((1 + t237) ** (-0.1e1 / 0.2e1)) * ((1 - t237) ** (-0.1e1 / 0.2e1))

        if Bindx == 95:
            t241 = np.cos(phi)
            t242 = t241 ** 2
            t244 = t242 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (14 * t242 - 21 * t244 - 1 + (-126 * t242 + 105 * t244 + 29) * t241) * np.cos(phi1 - phi2)

        if Bindx == 96:
            t247 = np.cos(phi)
            t248 = t247 ** 2
            t246 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * t246 ** 2 * (1 + (-14 + 21 * t248) * t248) * np.sin(phi1) * ((1 + t247) ** (-0.1e1 / 0.2e1)) * ((1 - t247) ** (-0.1e1 / 0.2e1))

        if Bindx == 97:
            t250 = np.cos(phi)
            t251 = t250 ** 2
            t253 = t251 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (-14 * t251 + 21 * t253 + 1 + (-126 * t251 + 105 * t253 + 29) * t250) * np.cos(phi1 + phi2)

        if Bindx == 98:
            t256 = np.cos(phi)
            t257 = t256 ** 2
            t255 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t255 ** 2 * (-2 * t256 + 1 + (6 * t256 - 12 + 15 * t257) * t257) * np.sin((phi1 + 2 * phi2)) * ((1 + t256) ** (-0.1e1 / 0.2e1)) * ((1 - t256) ** (-0.1e1 / 0.2e1))

        if Bindx == 99:
            t260 = np.cos(phi)
            t261 = t260 ** 2
            t263 = t261 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (-10 * t261 + 9 * t263 + 1 + (-22 * t261 + 15 * t263 + 7) * t260) * np.cos((phi1 + 3 * phi2))

        if Bindx == 100:
            t268 = np.sin(phi)
            t266 = t268 ** 2
            t265 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t266 ** 2 * (-1 + (4 + 5 * t265) * t265) * np.sin((phi1 + 4 * phi2)) * ((1 + t265) ** (-0.1e1 / 0.2e1)) * ((1 - t265) ** (-0.1e1 / 0.2e1))

        if Bindx == 101:
            t269 = np.cos(phi)
            t270 = t269 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((phi1 + 5 * phi2)) * (t269 + 1) * (1 + (-2 + t270) * t270)

        if Bindx == 102:
            t276 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t276) ** (0.7e1 / 0.2e1)) * ((1 + t276) ** (0.3e1 / 0.2e1)) * np.sin((2 * phi1 - 5 * phi2))

        if Bindx == 103:
            t277 = np.cos(phi)
            t278 = t277 ** 2
            t280 = t278 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (10 * t278 - 8 * t280 - 2 + (-4 * t278 + 5 * t280 - 1) * t277) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 104:
            t283 = np.cos(phi)
            t284 = t283 ** 2
            t282 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t282 ** 2 * (10 * t283 + 1 + (-18 * t283 - 8 + 15 * t284) * t284) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t283) ** (-0.1e1 / 0.2e1)) * ((1 - t283) ** (-0.1e1 / 0.2e1))

        if Bindx == 105:
            t287 = np.cos(phi)
            t288 = t287 ** 2
            t290 = t288 ** 2
            tfunc[..., c] = 0.11e2 / 0.4e1 * np.sqrt(0.2e1) * (11 * t288 - 12 * t290 - 1 + (-18 * t288 + 15 * t290 + 5) * t287) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 106:
            t293 = np.cos(phi)
            t294 = t293 ** 2
            t292 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t292 ** 2 * (2 * t293 + 1 + (-6 * t293 - 12 + 15 * t294) * t294) * np.sin((2 * phi1 - phi2)) * ((1 + t293) ** (-0.1e1 / 0.2e1)) * ((1 - t293) ** (-0.1e1 / 0.2e1))

        if Bindx == 107:
            t297 = np.cos(phi)
            t298 = t297 ** 2
            tfunc[..., c] = -0.11e2 / 0.4e1 * t297 * np.sqrt(0.105e3) * (1 + (-4 + 3 * t298) * t298) * np.cos((2 * phi1))

        if Bindx == 108:
            t301 = np.cos(phi)
            t302 = t301 ** 2
            t300 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * t300 ** 2 * (-2 * t301 + 1 + (6 * t301 - 12 + 15 * t302) * t302) * np.sin((2 * phi1 + phi2)) * ((1 + t301) ** (-0.1e1 / 0.2e1)) * ((1 - t301) ** (-0.1e1 / 0.2e1))

        if Bindx == 109:
            t305 = np.cos(phi)
            t306 = t305 ** 2
            t308 = t306 ** 2
            tfunc[..., c] = 0.11e2 / 0.4e1 * np.sqrt(0.2e1) * (-11 * t306 + 12 * t308 + 1 + (-18 * t306 + 15 * t308 + 5) * t305) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 110:
            t311 = np.cos(phi)
            t312 = t311 ** 2
            t310 = np.sin(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t310 ** 2 * (-10 * t311 + 1 + (18 * t311 - 8 + 15 * t312) * t312) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t311) ** (-0.1e1 / 0.2e1)) * ((1 - t311) ** (-0.1e1 / 0.2e1))

        if Bindx == 111:
            t315 = np.cos(phi)
            t316 = t315 ** 2
            t318 = t316 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-10 * t316 + 8 * t318 + 2 + (-4 * t316 + 5 * t318 - 1) * t315) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 112:
            t320 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t320) ** (0.3e1 / 0.2e1)) * ((1 + t320) ** (0.7e1 / 0.2e1)) * np.sin((2 * phi1 + 5 * phi2))

        if Bindx == 113:
            t321 = np.cos(phi)
            t322 = t321 ** 2
            t326 = 2 * t322
            t324 = t322 ** 2
            tfunc[..., c] = 0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-3 * t324 + t326 + 1 + (t324 + t326 - 3) * t321) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 114:
            t328 = np.cos(phi)
            t329 = t328 ** 2
            t327 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * t327 ** 2 * (4 * t328 - 3 + (-12 * t328 + 6 + 5 * t329) * t329) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t328) ** (-0.1e1 / 0.2e1)) * ((1 - t328) ** (-0.1e1 / 0.2e1))

        if Bindx == 115:
            t332 = np.cos(phi)
            t333 = t332 ** 2
            t335 = t333 ** 2
            tfunc[..., c] = -0.11e2 / 0.32e2 * np.sqrt(0.2e1) * (78 * t333 - 81 * t335 - 13 + (-14 * t333 + 45 * t335 - 15) * t332) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 116:
            t338 = np.cos(phi)
            t339 = t338 ** 2
            t337 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t337 ** 2 * (10 * t338 + 1 + (-18 * t338 - 8 + 15 * t339) * t339) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t338) ** (-0.1e1 / 0.2e1)) * ((1 - t338) ** (-0.1e1 / 0.2e1))

        if Bindx == 117:
            t342 = np.cos(phi)
            t343 = t342 ** 2
            t345 = t343 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (10 * t343 - 9 * t345 - 1 + (-22 * t343 + 15 * t345 + 7) * t342) * np.cos((3 * phi1 - phi2))

        if Bindx == 118:
            t350 = np.sin(phi)
            t348 = t350 ** 2
            t347 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t348 ** 2 * (9 * t347 ** 2 - 1) * np.sin((3 * phi1)) * ((1 + t347) ** (-0.1e1 / 0.2e1)) * ((1 - t347) ** (-0.1e1 / 0.2e1))

        if Bindx == 119:
            t351 = np.cos(phi)
            t352 = t351 ** 2
            t354 = t352 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.21e2) * (-10 * t352 + 9 * t354 + 1 + (-22 * t352 + 15 * t354 + 7) * t351) * np.cos((3 * phi1 + phi2))

        if Bindx == 120:
            t357 = np.cos(phi)
            t358 = t357 ** 2
            t356 = np.sin(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.3e1) * t356 ** 2 * (-10 * t357 + 1 + (18 * t357 - 8 + 15 * t358) * t358) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t357) ** (-0.1e1 / 0.2e1)) * ((1 - t357) ** (-0.1e1 / 0.2e1))

        if Bindx == 121:
            t361 = np.cos(phi)
            t362 = t361 ** 2
            t364 = t362 ** 2
            tfunc[..., c] = 0.11e2 / 0.32e2 * np.sqrt(0.2e1) * (-78 * t362 + 81 * t364 + 13 + (-14 * t362 + 45 * t364 - 15) * t361) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 122:
            t367 = np.cos(phi)
            t368 = t367 ** 2
            t366 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * t366 ** 2 * (-4 * t367 - 3 + (12 * t367 + 6 + 5 * t368) * t368) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t367) ** (-0.1e1 / 0.2e1)) * ((1 - t367) ** (-0.1e1 / 0.2e1))

        if Bindx == 123:
            t371 = np.cos(phi)
            t372 = t371 ** 2
            t374 = t372 ** 2
            tfunc[..., c] = -0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-2 * t372 + 3 * t374 - 1 + (2 * t372 + t374 - 3) * t371) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 124:
            t376 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.5e1) * ((1 - t376) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t376)) * np.sin((4 * phi1 - 5 * phi2))

        if Bindx == 125:
            t377 = np.cos(phi)
            t378 = t377 ** 2
            t380 = t378 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (4 * t378 - 16 * t380 + 4 + (14 * t378 + 5 * t380 - 11) * t377) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 126:
            t383 = np.cos(phi)
            t384 = t383 ** 2
            t382 = np.sin(phi)
            tfunc[..., c] = 0.33e2 / 0.16e2 * t382 ** 2 * (4 * t383 - 3 + (-12 * t383 + 6 + 5 * t384) * t384) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t383) ** (-0.1e1 / 0.2e1)) * ((1 - t383) ** (-0.1e1 / 0.2e1))

        if Bindx == 127:
            t387 = np.cos(phi)
            t388 = t387 ** 2
            t390 = t388 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (10 * t388 - 8 * t390 - 2 + (-4 * t388 + 5 * t390 - 1) * t387) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 128:
            t395 = np.sin(phi)
            t393 = t395 ** 2
            t392 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t393 ** 2 * (-1 + (-4 + 5 * t392) * t392) * np.sin((4 * phi1 - phi2)) * ((1 + t392) ** (-0.1e1 / 0.2e1)) * ((1 - t392) ** (-0.1e1 / 0.2e1))

        if Bindx == 129:
            t396 = np.cos(phi)
            t397 = t396 ** 2
            tfunc[..., c] = 0.33e2 / 0.8e1 * np.sqrt(0.35e2) * t396 * np.cos((4 * phi1)) * (1 + (-2 + t397) * t397)

        if Bindx == 130:
            t402 = np.sin(phi)
            t400 = t402 ** 2
            t399 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t400 ** 2 * (-1 + (4 + 5 * t399) * t399) * np.sin((4 * phi1 + phi2)) * ((1 + t399) ** (-0.1e1 / 0.2e1)) * ((1 - t399) ** (-0.1e1 / 0.2e1))

        if Bindx == 131:
            t403 = np.cos(phi)
            t404 = t403 ** 2
            t406 = t404 ** 2
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-10 * t404 + 8 * t406 + 2 + (-4 * t404 + 5 * t406 - 1) * t403) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 132:
            t409 = np.cos(phi)
            t410 = t409 ** 2
            t408 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.16e2 * t408 ** 2 * (-4 * t409 - 3 + (12 * t409 + 6 + 5 * t410) * t410) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t409) ** (-0.1e1 / 0.2e1)) * ((1 - t409) ** (-0.1e1 / 0.2e1))

        if Bindx == 133:
            t413 = np.cos(phi)
            t414 = t413 ** 2
            t416 = t414 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.2e1) * (-4 * t414 + 16 * t416 - 4 + (14 * t414 + 5 * t416 - 11) * t413) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 134:
            t418 = np.cos(phi)
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.5e1) * np.sqrt((1 - t418)) * ((1 + t418) ** (0.9e1 / 0.2e1)) * np.sin((4 * phi1 + 5 * phi2))

        if Bindx == 135:
            t419 = np.cos(phi)
            t420 = t419 ** 2
            t422 = t420 ** 2
            tfunc[..., c] = -0.11e2 / 0.32e2 * np.sqrt(0.2e1) * np.cos((5 * phi1 - 5 * phi2)) * (-10 * t420 - 5 * t422 - 1 + (10 * t420 + t422 + 5) * t419)

        if Bindx == 136:
            t424 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.5e1) * ((1 - t424) ** (0.9e1 / 0.2e1)) * np.sqrt((1 + t424)) * np.sin((5 * phi1 - 4 * phi2))

        if Bindx == 137:
            t425 = np.cos(phi)
            t426 = t425 ** 2
            t430 = 2 * t426
            t428 = t426 ** 2
            tfunc[..., c] = 0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-3 * t428 + t430 + 1 + (t428 + t430 - 3) * t425) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 138:
            t431 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t431) ** (0.7e1 / 0.2e1)) * ((1 + t431) ** (0.3e1 / 0.2e1)) * np.sin((5 * phi1 - 2 * phi2))

        if Bindx == 139:
            t432 = np.cos(phi)
            t433 = t432 ** 2
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((5 * phi1 - phi2)) * (t432 - 1) * (1 + (-2 + t433) * t433)

        if Bindx == 140:
            t438 = np.cos(phi)
            tfunc[..., c] = -0.33e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.7e1) * ((1 - t438) ** (0.5e1 / 0.2e1)) * ((1 + t438) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi1))

        if Bindx == 141:
            t439 = np.cos(phi)
            t440 = t439 ** 2
            tfunc[..., c] = 0.11e2 / 0.16e2 * np.sqrt(0.105e3) * np.cos((5 * phi1 + phi2)) * (t439 + 1) * (1 + (-2 + t440) * t440)

        if Bindx == 142:
            t446 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.8e1 * np.sqrt(0.15e2) * ((1 - t446) ** (0.3e1 / 0.2e1)) * ((1 + t446) ** (0.7e1 / 0.2e1)) * np.sin((5 * phi1 + 2 * phi2))

        if Bindx == 143:
            t447 = np.cos(phi)
            t448 = t447 ** 2
            t450 = t448 ** 2
            tfunc[..., c] = -0.33e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-2 * t448 + 3 * t450 - 1 + (2 * t448 + t450 - 3) * t447) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 144:
            t452 = np.cos(phi)
            tfunc[..., c] = -0.11e2 / 0.16e2 * np.sqrt(0.5e1) * ((1 + t452) ** (0.9e1 / 0.2e1)) * np.sin((5 * phi1 + 4 * phi2)) * np.sqrt((1 - t452))

        if Bindx == 145:
            t453 = np.cos(phi)
            t454 = t453 ** 2
            t458 = 10 * t454
            t456 = t454 ** 2
            tfunc[..., c] = 0.11e2 / 0.32e2 * np.sqrt(0.2e1) * np.cos((5 * phi1 + 5 * phi2)) * (5 * t456 + t458 + 1 + (t456 + t458 + 5) * t453)

        if Bindx == 146:
            t459 = np.cos(phi)
            t460 = t459 ** 2
            t461 = t460 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t461 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t461 + 0.1365e4 / 0.16e2) * t460

        if Bindx == 147:
            t464 = np.cos(phi)
            t465 = t464 ** 2
            t463 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t464 * t463 ** 2 * (5 + (-30 + 33 * t465) * t465) * np.sin(phi2) * ((1 - t464) ** (-0.1e1 / 0.2e1)) * ((1 + t464) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t467 = np.cos(phi)
            t468 = t467 ** 2
            t469 = t468 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t469 - 1 + (33 * t469 + 19) * t468) * np.cos((2 * phi2))

        if Bindx == 149:
            t474 = np.sin(phi)
            t472 = t474 ** 2
            t471 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t471 * t472 ** 2 * (11 * t471 ** 2 - 3) * np.sin((3 * phi2)) * ((1 - t471) ** (-0.1e1 / 0.2e1)) * ((1 + t471) ** (-0.1e1 / 0.2e1))

        if Bindx == 150:
            t475 = np.cos(phi)
            t476 = t475 ** 2
            t477 = t476 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t477 - 1 + (11 * t477 + 13) * t476) * np.cos((4 * phi2))

        if Bindx == 151:
            t483 = np.sin(phi)
            t480 = t483 ** 2
            t481 = t483 * t480
            t479 = np.cos(phi)
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t479 * t481 ** 2 * np.sin((5 * phi2)) * ((1 - t479) ** (-0.1e1 / 0.2e1)) * ((1 + t479) ** (-0.1e1 / 0.2e1))

        if Bindx == 152:
            t484 = np.cos(phi)
            t485 = t484 ** 2
            t486 = t485 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t486 - 1 + (t486 + 3) * t485)

        if Bindx == 153:
            t488 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t488) ** (0.7e1 / 0.2e1)) * ((1 + t488) ** (0.5e1 / 0.2e1)) * np.sin((phi1 - 6 * phi2))

        if Bindx == 154:
            t489 = np.cos(phi)
            t495 = -5 * t489
            t490 = t489 ** 2
            t491 = t489 * t490
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t495 - 1 + (10 + 6 * t491) * t491 + (8 + (t495 - 13) * t490) * t490) * np.cos((phi1 - 5 * phi2))

        if Bindx == 155:
            t501 = np.sin(phi)
            t499 = t501 ** 2
            t496 = np.cos(phi)
            t497 = t496 ** 2
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t499 ** 2 * (-22 * t497 + 2 + (33 * t497 - 13) * t496) * np.sin((phi1 - 4 * phi2)) * ((1 - t496) ** (-0.1e1 / 0.2e1)) * ((1 + t496) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t502 = np.cos(phi)
            t503 = t502 ** 2
            t505 = t503 ** 2
            t504 = t502 * t503
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t503 - 37 * t505 - 1 + (14 + 22 * t504) * t504 + (-11 * t505 - 3) * t502) * np.cos((phi1 - 3 * phi2))

        if Bindx == 157:
            t509 = np.cos(phi)
            t510 = t509 ** 2
            t512 = t510 ** 2
            t508 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t508 ** 2 * (18 * t510 - 33 * t512 - 1 + (-102 * t510 + 99 * t512 + 19) * t509) * np.sin((phi1 - 2 * phi2)) * ((1 - t509) ** (-0.1e1 / 0.2e1)) * ((1 + t509) ** (-0.1e1 / 0.2e1))

        if Bindx == 158:
            t514 = np.cos(phi)
            t515 = t514 ** 2
            t517 = t515 ** 2
            t516 = t514 * t515
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * (100 * t515 - 285 * t517 - 5 + (30 + 198 * t516) * t516 + (-33 * t517 - 5) * t514) * np.cos(phi1 - phi2)

        if Bindx == 159:
            t521 = np.cos(phi)
            t522 = t521 ** 2
            t520 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t521 * t520 ** 2 * (5 + (-30 + 33 * t522) * t522) * np.sin(phi1) * ((1 - t521) ** (-0.1e1 / 0.2e1)) * ((1 + t521) ** (-0.1e1 / 0.2e1))

        if Bindx == 160:
            t524 = np.cos(phi)
            t525 = t524 ** 2
            t527 = t525 ** 2
            t526 = t524 * t525
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * (100 * t525 - 285 * t527 - 5 + (-30 + 198 * t526) * t526 + (33 * t527 + 5) * t524) * np.cos(phi1 + phi2)

        if Bindx == 161:
            t531 = np.cos(phi)
            t532 = t531 ** 2
            t534 = t532 ** 2
            t530 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t530 ** 2 * (-18 * t532 + 33 * t534 + 1 + (-102 * t532 + 99 * t534 + 19) * t531) * np.sin((phi1 + 2 * phi2)) * ((1 + t531) ** (-0.1e1 / 0.2e1)) * ((1 - t531) ** (-0.1e1 / 0.2e1))

        if Bindx == 162:
            t536 = np.cos(phi)
            t537 = t536 ** 2
            t539 = t537 ** 2
            t538 = t536 * t537
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t537 - 37 * t539 - 1 + (-14 + 22 * t538) * t538 + (11 * t539 + 3) * t536) * np.cos((phi1 + 3 * phi2))

        if Bindx == 163:
            t547 = np.sin(phi)
            t545 = t547 ** 2
            t542 = np.cos(phi)
            t543 = t542 ** 2
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t545 ** 2 * (22 * t543 - 2 + (33 * t543 - 13) * t542) * np.sin((phi1 + 4 * phi2)) * ((1 + t542) ** (-0.1e1 / 0.2e1)) * ((1 - t542) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t548 = np.cos(phi)
            t554 = 5 * t548
            t549 = t548 ** 2
            t550 = t548 * t549
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t554 - 1 + (-10 + 6 * t550) * t550 + (8 + (t554 - 13) * t549) * t549) * np.cos((phi1 + 5 * phi2))

        if Bindx == 165:
            t555 = np.cos(phi)
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t555) ** (0.5e1 / 0.2e1)) * ((1 + t555) ** (0.7e1 / 0.2e1)) * np.sin((phi1 + 6 * phi2))

        if Bindx == 166:
            t556 = np.cos(phi)
            t562 = -2 * t556
            t557 = t556 ** 2
            t559 = t557 ** 2
            t558 = t556 * t557
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((2 * phi1 - 6 * phi2)) * (t559 * t562 - t557 - t559 + t562 + 1 + (4 + t558) * t558)

        if Bindx == 167:
            t569 = np.sin(phi)
            t563 = np.cos(phi)
            t568 = 1 + t563
            t566 = t569 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t566 ** 2 * (t568 + (3 * t563 - 5) * t563 ** 2) * np.sin((2 * phi1 - 5 * phi2)) * (t568 ** (-0.1e1 / 0.2e1)) * ((1 - t563) ** (-0.1e1 / 0.2e1))

        if Bindx == 168:
            t570 = np.cos(phi)
            t571 = t570 ** 2
            t573 = t571 ** 2
            t572 = t570 * t571
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t571 - 43 * t573 - 1 + (64 + 33 * t572) * t572 + (-44 * t573 - 20) * t570) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 169:
            t577 = np.cos(phi)
            t578 = t577 ** 2
            t580 = t578 ** 2
            t576 = np.sin(phi)
            tfunc[..., c] = -0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t576 ** 2 * (42 * t578 - 55 * t580 - 3 + (-50 * t578 + 55 * t580 + 11) * t577) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t577) ** (-0.1e1 / 0.2e1)) * ((1 - t577) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t582 = np.cos(phi)
            t583 = t582 ** 2
            t585 = t583 ** 2
            t584 = t582 * t583
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * (289 * t583 - 735 * t585 - 17 + (372 + 495 * t584) * t584 + (-330 * t585 - 74) * t582) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 171:
            t589 = np.cos(phi)
            t590 = t589 ** 2
            t592 = t590 ** 2
            t588 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t588 ** 2 * (18 * t590 - 33 * t592 - 1 + (-102 * t590 + 99 * t592 + 19) * t589) * np.sin((2 * phi1 - phi2)) * ((1 + t589) ** (-0.1e1 / 0.2e1)) * ((1 - t589) ** (-0.1e1 / 0.2e1))

        if Bindx == 172:
            t594 = np.cos(phi)
            t595 = t594 ** 2
            t596 = t595 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t596 - 1 + (33 * t596 + 19) * t595) * np.cos((2 * phi1))

        if Bindx == 173:
            t599 = np.cos(phi)
            t600 = t599 ** 2
            t602 = t600 ** 2
            t598 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.5e1) * t598 ** 2 * (-18 * t600 + 33 * t602 + 1 + (-102 * t600 + 99 * t602 + 19) * t599) * np.sin((2 * phi1 + phi2)) * ((1 + t599) ** (-0.1e1 / 0.2e1)) * ((1 - t599) ** (-0.1e1 / 0.2e1))

        if Bindx == 174:
            t604 = np.cos(phi)
            t605 = t604 ** 2
            t607 = t605 ** 2
            t606 = t604 * t605
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * (289 * t605 - 735 * t607 - 17 + (-372 + 495 * t606) * t606 + (330 * t607 + 74) * t604) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 175:
            t611 = np.cos(phi)
            t612 = t611 ** 2
            t616 = 55 * t612 ** 2
            t610 = np.sin(phi)
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t610 ** 2 * (-42 * t612 + t616 + 3 + (-50 * t612 + t616 + 11) * t611) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t611) ** (-0.1e1 / 0.2e1)) * ((1 - t611) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t617 = np.cos(phi)
            t618 = t617 ** 2
            t620 = t618 ** 2
            t619 = t617 * t618
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t618 - 43 * t620 - 1 + (-64 + 33 * t619) * t619 + (44 * t620 + 20) * t617) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 177:
            t629 = np.sin(phi)
            t623 = np.cos(phi)
            t628 = 1 - t623
            t626 = t629 ** 2
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t626 ** 2 * (-t628 + (3 * t623 + 5) * t623 ** 2) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t623) ** (-0.1e1 / 0.2e1)) * (t628 ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t630 = np.cos(phi)
            t636 = 2 * t630
            t631 = t630 ** 2
            t633 = t631 ** 2
            t632 = t630 * t631
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((2 * phi1 + 6 * phi2)) * (t633 * t636 - t631 - t633 + t636 + 1 + (-4 + t632) * t632)

        if Bindx == 179:
            t637 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t637) ** (0.9e1 / 0.2e1)) * ((1 + t637) ** (0.3e1 / 0.2e1)) * np.sin((3 * phi1 - 6 * phi2))

        if Bindx == 180:
            t638 = np.cos(phi)
            t639 = t638 ** 2
            t641 = t639 ** 2
            t640 = t638 * t639
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (-5 * t638 * t641 - t638 - 4 * t639 + t641 + 1 + (6 + 2 * t640) * t640) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 181:
            t645 = np.cos(phi)
            t646 = t645 ** 2
            t648 = t646 ** 2
            t644 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t644 ** 2 * (16 * t646 - 22 * t648 - 2 + (2 * t646 + 11 * t648 - 5) * t645) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t645) ** (-0.1e1 / 0.2e1)) * ((1 - t645) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t650 = np.cos(phi)
            t651 = t650 ** 2
            t653 = t651 ** 2
            t652 = t650 * t651
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (12 * t651 - 105 * t653 - 1 + (206 + 110 * t652) * t652 + (-165 * t653 - 57) * t650) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 183:
            t657 = np.cos(phi)
            t658 = t657 ** 2
            t660 = t658 ** 2
            t656 = np.sin(phi)
            tfunc[..., c] = -0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t656 ** 2 * (42 * t658 - 55 * t660 - 3 + (-50 * t658 + 55 * t660 + 11) * t657) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t657) ** (-0.1e1 / 0.2e1)) * ((1 - t657) ** (-0.1e1 / 0.2e1))

        if Bindx == 184:
            t662 = np.cos(phi)
            t663 = t662 ** 2
            t665 = t663 ** 2
            t664 = t662 * t663
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t663 - 37 * t665 - 1 + (14 + 22 * t664) * t664 + (-11 * t665 - 3) * t662) * np.cos((3 * phi1 - phi2))

        if Bindx == 185:
            t671 = np.sin(phi)
            t669 = t671 ** 2
            t668 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t668 * t669 ** 2 * (11 * t668 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t668) ** (-0.1e1 / 0.2e1)) * ((1 - t668) ** (-0.1e1 / 0.2e1))

        if Bindx == 186:
            t672 = np.cos(phi)
            t673 = t672 ** 2
            t675 = t673 ** 2
            t674 = t672 * t673
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.5e1) * (16 * t673 - 37 * t675 - 1 + (-14 + 22 * t674) * t674 + (11 * t675 + 3) * t672) * np.cos((3 * phi1 + phi2))

        if Bindx == 187:
            t679 = np.cos(phi)
            t680 = t679 ** 2
            t684 = 55 * t680 ** 2
            t678 = np.sin(phi)
            tfunc[..., c] = -0.39e2 / 0.32e2 * np.sqrt(0.2e1) * t678 ** 2 * (-42 * t680 + t684 + 3 + (-50 * t680 + t684 + 11) * t679) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t679) ** (-0.1e1 / 0.2e1)) * ((1 - t679) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t685 = np.cos(phi)
            t686 = t685 ** 2
            t688 = t686 ** 2
            t687 = t685 * t686
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (12 * t686 - 105 * t688 - 1 + (-206 + 110 * t687) * t687 + (165 * t688 + 57) * t685) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 189:
            t692 = np.cos(phi)
            t693 = t692 ** 2
            t695 = t693 ** 2
            t691 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t691 ** 2 * (-16 * t693 + 22 * t695 + 2 + (2 * t693 + 11 * t695 - 5) * t692) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t692) ** (-0.1e1 / 0.2e1)) * ((1 - t692) ** (-0.1e1 / 0.2e1))

        if Bindx == 190:
            t697 = np.cos(phi)
            t698 = t697 ** 2
            t700 = t698 ** 2
            t699 = t697 * t698
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (5 * t697 * t700 + t697 - 4 * t698 + t700 + 1 + (-6 + 2 * t699) * t699) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 191:
            t703 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t703) ** (0.3e1 / 0.2e1)) * ((1 + t703) ** (0.9e1 / 0.2e1)) * np.sin((3 * phi1 + 6 * phi2))

        if Bindx == 192:
            t704 = np.cos(phi)
            t705 = t704 ** 2
            t706 = t705 ** 2
            t707 = t704 * t706
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t705 + 5 * t706 - 4 * t707 - 1 + (t707 + 4) * t704) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 193:
            t710 = np.cos(phi)
            t711 = t710 ** 2
            t713 = t711 ** 2
            t709 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t709 ** 2 * (-10 * t713 + 2 + (10 * t711 + 3 * t713 - 5) * t710) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t710) ** (-0.1e1 / 0.2e1)) * ((1 - t710) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t715 = np.cos(phi)
            t716 = t715 ** 2
            t718 = t716 ** 2
            t717 = t715 * t716
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-65 * t716 + 35 * t718 + 13 + (80 + 33 * t717) * t717 + (-88 * t718 - 8) * t715) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 195:
            t722 = np.cos(phi)
            t723 = t722 ** 2
            t725 = t723 ** 2
            t721 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t721 ** 2 * (16 * t723 - 22 * t725 - 2 + (2 * t723 + 11 * t725 - 5) * t722) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t722) ** (-0.1e1 / 0.2e1)) * ((1 - t722) ** (-0.1e1 / 0.2e1))

        if Bindx == 196:
            t727 = np.cos(phi)
            t728 = t727 ** 2
            t730 = t728 ** 2
            t729 = t727 * t728
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t728 - 43 * t730 - 1 + (64 + 33 * t729) * t729 + (-44 * t730 - 20) * t727) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 197:
            t738 = np.sin(phi)
            t736 = t738 ** 2
            t733 = np.cos(phi)
            t734 = t733 ** 2
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t736 ** 2 * (-22 * t734 + 2 + (33 * t734 - 13) * t733) * np.sin((4 * phi1 - phi2)) * ((1 + t733) ** (-0.1e1 / 0.2e1)) * ((1 - t733) ** (-0.1e1 / 0.2e1))

        if Bindx == 198:
            t739 = np.cos(phi)
            t740 = t739 ** 2
            t741 = t740 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t741 - 1 + (11 * t741 + 13) * t740) * np.cos((4 * phi1))

        if Bindx == 199:
            t748 = np.sin(phi)
            t746 = t748 ** 2
            t743 = np.cos(phi)
            t744 = t743 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t746 ** 2 * (22 * t744 - 2 + (33 * t744 - 13) * t743) * np.sin((4 * phi1 + phi2)) * ((1 + t743) ** (-0.1e1 / 0.2e1)) * ((1 - t743) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t749 = np.cos(phi)
            t750 = t749 ** 2
            t752 = t750 ** 2
            t751 = t749 * t750
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.15e2) * (11 * t750 - 43 * t752 - 1 + (-64 + 33 * t751) * t751 + (44 * t752 + 20) * t749) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 201:
            t756 = np.cos(phi)
            t757 = t756 ** 2
            t759 = t757 ** 2
            t755 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.15e2) * t755 ** 2 * (-16 * t757 + 22 * t759 + 2 + (2 * t757 + 11 * t759 - 5) * t756) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t756) ** (-0.1e1 / 0.2e1)) * ((1 - t756) ** (-0.1e1 / 0.2e1))

        if Bindx == 202:
            t761 = np.cos(phi)
            t762 = t761 ** 2
            t764 = t762 ** 2
            t763 = t761 * t762
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-65 * t762 + 35 * t764 + 13 + (-80 + 33 * t763) * t763 + (88 * t764 + 8) * t761) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 203:
            t768 = np.cos(phi)
            t769 = t768 ** 2
            t771 = t769 ** 2
            t767 = np.sin(phi)
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t767 ** 2 * (10 * t771 - 2 + (10 * t769 + 3 * t771 - 5) * t768) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t768) ** (-0.1e1 / 0.2e1)) * ((1 - t768) ** (-0.1e1 / 0.2e1))

        if Bindx == 204:
            t773 = np.cos(phi)
            t774 = t773 ** 2
            t775 = t774 ** 2
            t776 = t773 * t775
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t774 + 5 * t775 + 4 * t776 - 1 + (t776 - 4) * t773) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 205:
            t778 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((1 - t778) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t778)) * np.sin((5 * phi1 - 6 * phi2))

        if Bindx == 206:
            t779 = np.cos(phi)
            t780 = t779 ** 2
            t782 = t780 ** 2
            t781 = t779 * t780
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-20 * t780 + 35 * t782 - 5 + (-10 + 6 * t781) * t781 + (-25 * t782 + 19) * t779) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 207:
            t786 = np.cos(phi)
            t787 = t786 ** 2
            t789 = t787 ** 2
            t785 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t785 ** 2 * (-10 * t789 + 2 + (10 * t787 + 3 * t789 - 5) * t786) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t786) ** (-0.1e1 / 0.2e1)) * ((1 - t786) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t791 = np.cos(phi)
            t792 = t791 ** 2
            t794 = t792 ** 2
            t793 = t791 * t792
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (-5 * t791 * t794 - t791 - 4 * t792 + t794 + 1 + (6 + 2 * t793) * t793) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 209:
            t803 = np.sin(phi)
            t797 = np.cos(phi)
            t802 = 1 + t797
            t800 = t803 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t800 ** 2 * (t802 + (3 * t797 - 5) * t797 ** 2) * np.sin((5 * phi1 - 2 * phi2)) * (t802 ** (-0.1e1 / 0.2e1)) * ((1 - t797) ** (-0.1e1 / 0.2e1))

        if Bindx == 210:
            t804 = np.cos(phi)
            t810 = -5 * t804
            t805 = t804 ** 2
            t806 = t804 * t805
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t810 - 1 + (10 + 6 * t806) * t806 + (8 + (t810 - 13) * t805) * t805) * np.cos((5 * phi1 - phi2))

        if Bindx == 211:
            t815 = np.sin(phi)
            t812 = t815 ** 2
            t813 = t815 * t812
            t811 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t811 * t813 ** 2 * np.sin((5 * phi1)) * ((1 - t811) ** (-0.1e1 / 0.2e1)) * ((1 + t811) ** (-0.1e1 / 0.2e1))

        if Bindx == 212:
            t816 = np.cos(phi)
            t822 = 5 * t816
            t817 = t816 ** 2
            t818 = t816 * t817
            tfunc[..., c] = 0.13e2 / 0.16e2 * np.sqrt(0.33e2) * (t822 - 1 + (-10 + 6 * t818) * t818 + (8 + (t822 - 13) * t817) * t817) * np.cos((5 * phi1 + phi2))

        if Bindx == 213:
            t829 = np.sin(phi)
            t823 = np.cos(phi)
            t828 = 1 - t823
            t826 = t829 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * t826 ** 2 * (-t828 + (3 * t823 + 5) * t823 ** 2) * np.sin((5 * phi1 + 2 * phi2)) * (t828 ** (-0.1e1 / 0.2e1)) * ((1 + t823) ** (-0.1e1 / 0.2e1))

        if Bindx == 214:
            t830 = np.cos(phi)
            t831 = t830 ** 2
            t833 = t831 ** 2
            t832 = t830 * t831
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.165e3) * (5 * t830 * t833 + t830 - 4 * t831 + t833 + 1 + (-6 + 2 * t832) * t832) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 215:
            t837 = np.cos(phi)
            t838 = t837 ** 2
            t840 = t838 ** 2
            t836 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.11e2) * t836 ** 2 * (10 * t840 - 2 + (10 * t838 + 3 * t840 - 5) * t837) * np.sin((5 * phi1 + 4 * phi2)) * ((1 - t837) ** (-0.1e1 / 0.2e1)) * ((1 + t837) ** (-0.1e1 / 0.2e1))

        if Bindx == 216:
            t842 = np.cos(phi)
            t843 = t842 ** 2
            t845 = t843 ** 2
            t844 = t842 * t843
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * (-20 * t843 + 35 * t845 - 5 + (10 + 6 * t844) * t844 + (25 * t845 - 19) * t842) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 217:
            t848 = np.cos(phi)
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt((1 - t848)) * ((1 + t848) ** (0.11e2 / 0.2e1)) * np.sin((5 * phi1 + 6 * phi2))

        if Bindx == 218:
            t849 = np.cos(phi)
            t855 = -6 * t849
            t850 = t849 ** 2
            t851 = t849 * t850
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * np.cos((6 * phi1 - 6 * phi2)) * (t855 + 1 + (-20 + t851) * t851 + (15 + (t855 + 15) * t850) * t850)

        if Bindx == 219:
            t856 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((1 - t856) ** (0.11e2 / 0.2e1)) * np.sqrt((1 + t856)) * np.sin((6 * phi1 - 5 * phi2))

        if Bindx == 220:
            t857 = np.cos(phi)
            t858 = t857 ** 2
            t859 = t858 ** 2
            t860 = t857 * t859
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t858 + 5 * t859 - 4 * t860 - 1 + (t860 + 4) * t857) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 221:
            t862 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t862) ** (0.9e1 / 0.2e1)) * ((1 + t862) ** (0.3e1 / 0.2e1)) * np.sin((6 * phi1 - 3 * phi2))

        if Bindx == 222:
            t863 = np.cos(phi)
            t869 = -2 * t863
            t864 = t863 ** 2
            t866 = t864 ** 2
            t865 = t863 * t864
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((6 * phi1 - 2 * phi2)) * (t866 * t869 - t864 - t866 + t869 + 1 + (4 + t865) * t865)

        if Bindx == 223:
            t870 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t870) ** (0.7e1 / 0.2e1)) * ((1 + t870) ** (0.5e1 / 0.2e1)) * np.sin((6 * phi1 - phi2))

        if Bindx == 224:
            t871 = np.cos(phi)
            t872 = t871 ** 2
            t873 = t872 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t873 - 1 + (t873 + 3) * t872)

        if Bindx == 225:
            t875 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.11e2) * ((1 - t875) ** (0.5e1 / 0.2e1)) * ((1 + t875) ** (0.7e1 / 0.2e1)) * np.sin((6 * phi1 + phi2))

        if Bindx == 226:
            t876 = np.cos(phi)
            t882 = 2 * t876
            t877 = t876 ** 2
            t879 = t877 ** 2
            t878 = t876 * t877
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * np.cos((6 * phi1 + 2 * phi2)) * (t879 * t882 - t877 - t879 + t882 + 1 + (-4 + t878) * t878)

        if Bindx == 227:
            t883 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * ((1 - t883) ** (0.3e1 / 0.2e1)) * ((1 + t883) ** (0.9e1 / 0.2e1)) * np.sin((6 * phi1 + 3 * phi2))

        if Bindx == 228:
            t884 = np.cos(phi)
            t885 = t884 ** 2
            t886 = t885 ** 2
            t887 = t884 * t886
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.33e2) * (-5 * t885 + 5 * t886 + 4 * t887 - 1 + (t887 - 4) * t884) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 229:
            t889 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((1 + t889) ** (0.11e2 / 0.2e1)) * np.sin((6 * phi1 + 5 * phi2)) * np.sqrt((1 - t889))

        if Bindx == 230:
            t890 = np.cos(phi)
            t896 = 6 * t890
            t891 = t890 ** 2
            t892 = t890 * t891
            tfunc[..., c] = 0.13e2 / 0.64e2 * np.sqrt(0.2e1) * np.cos((6 * phi1 + 6 * phi2)) * (t896 + 1 + (20 + t892) * t892 + (15 + (t896 + 15) * t891) * t891)

        if Bindx == 231:
            t897 = np.cos(phi)
            t898 = t897 ** 2
            t899 = t898 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * t897 * (-693 * t899 - 35 + (429 * t899 + 315) * t898)

        if Bindx == 232:
            t902 = np.cos(phi)
            t903 = t902 ** 2
            t904 = t903 ** 2
            t901 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.7e1) * t901 ** 2 * (-495 * t904 - 5 + (429 * t904 + 135) * t903) * np.sin(phi2) * ((1 + t902) ** (-0.1e1 / 0.2e1)) * ((1 - t902) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t906 = np.cos(phi)
            t907 = t906 ** 2
            t908 = t907 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t906 * (-253 * t908 - 15 + (143 * t908 + 125) * t907) * np.cos((2 * phi2))

        if Bindx == 234:
            t915 = np.sin(phi)
            t913 = t915 ** 2
            t910 = np.cos(phi)
            t911 = t910 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.21e2) * t913 ** 2 * (3 + (-66 + 143 * t911) * t911) * np.sin((3 * phi2)) * ((1 + t910) ** (-0.1e1 / 0.2e1)) * ((1 - t910) ** (-0.1e1 / 0.2e1))

        if Bindx == 235:
            t916 = np.cos(phi)
            t917 = t916 ** 2
            t918 = t917 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * t916 * np.sqrt(0.231e3) * (-29 * t918 - 3 + (13 * t918 + 19) * t917) * np.cos((4 * phi2))

        if Bindx == 236:
            t924 = np.sin(phi)
            t921 = t924 ** 2
            t922 = t924 * t921
            t920 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.231e3) * t922 ** 2 * (13 * t920 ** 2 - 1) * np.sin((5 * phi2)) * ((1 + t920) ** (-0.1e1 / 0.2e1)) * ((1 - t920) ** (-0.1e1 / 0.2e1))

        if Bindx == 237:
            t925 = np.cos(phi)
            t926 = t925 ** 2
            t927 = t926 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * t925 * np.cos((6 * phi2)) * (-3 * t927 - 1 + (t927 + 3) * t926)

        if Bindx == 238:
            t929 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.429e3) * ((1 - t929) ** (0.7e1 / 0.2e1)) * ((1 + t929) ** (0.7e1 / 0.2e1)) * np.sin((7 * phi2))

        if Bindx == 239:
            t930 = np.cos(phi)
            t931 = t930 ** 2
            t932 = t930 * t931
            t937 = -3 * t931 ** 2 + t932 ** 2 - 1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((phi1 - 7 * phi2)) * (t937 * t930 - 3 * t931 + 3 * t932 - t937)

        if Bindx == 240:
            t942 = np.sin(phi)
            t939 = t942 ** 2
            t940 = t942 * t939
            t938 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t940 ** 2 * (-1 + (-6 + 7 * t938) * t938) * np.sin((phi1 - 6 * phi2)) * ((1 + t938) ** (-0.1e1 / 0.2e1)) * ((1 - t938) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t943 = np.cos(phi)
            t944 = t943 ** 2
            t945 = t943 * t944
            t948 = t945 ** 2
            t946 = t944 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-75 * t944 + 153 * t945 + 135 * t946 - 65 * t948 + 5 + (-213 * t946 + 91 * t948 - 31) * t943) * np.cos((phi1 - 5 * phi2))

        if Bindx == 242:
            t956 = np.sin(phi)
            t954 = t956 ** 2
            t950 = np.cos(phi)
            t951 = t950 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t954 ** 2 * (12 * t950 + 3 + (-52 * t950 - 54 + 91 * t951) * t951) * np.sin((phi1 - 4 * phi2)) * ((1 + t950) ** (-0.1e1 / 0.2e1)) * ((1 - t950) ** (-0.1e1 / 0.2e1))

        if Bindx == 243:
            t957 = np.cos(phi)
            t958 = t957 ** 2
            t959 = t957 * t958
            t962 = t959 ** 2
            t960 = t958 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-207 * t958 + 1043 * t959 + 627 * t960 - 429 * t962 + 9 + (-1903 * t960 + 1001 * t962 - 141) * t957) * np.cos((phi1 - 3 * phi2))

        if Bindx == 244:
            t965 = np.cos(phi)
            t966 = t965 ** 2
            t968 = t966 ** 2
            t967 = t965 * t966
            t964 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t964 ** 2 * (375 * t966 - 1265 * t968 - 15 + (220 + 1001 * t967) * t967 + (-286 * t968 - 30) * t965) * np.sin((phi1 - 2 * phi2)) * ((1 + t965) ** (-0.1e1 / 0.2e1)) * ((1 - t965) ** (-0.1e1 / 0.2e1))

        if Bindx == 245:
            t971 = np.cos(phi)
            t972 = t971 ** 2
            t973 = t971 * t972
            t976 = t973 ** 2
            t974 = t972 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (-135 * t972 + 2385 * t973 + 495 * t974 - 429 * t976 + 5 + (-5049 * t974 + 3003 * t976 - 275) * t971) * np.cos(phi1 - phi2)

        if Bindx == 246:
            t979 = np.cos(phi)
            t980 = t979 ** 2
            t981 = t980 ** 2
            t978 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.7e1) * t978 ** 2 * (-495 * t981 - 5 + (429 * t981 + 135) * t980) * np.sin(phi1) * ((1 + t979) ** (-0.1e1 / 0.2e1)) * ((1 - t979) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t983 = np.cos(phi)
            t984 = t983 ** 2
            t985 = t983 * t984
            t988 = t985 ** 2
            t986 = t984 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (135 * t984 + 2385 * t985 - 495 * t986 + 429 * t988 - 5 + (-5049 * t986 + 3003 * t988 - 275) * t983) * np.cos(phi1 + phi2)

        if Bindx == 248:
            t991 = np.cos(phi)
            t992 = t991 ** 2
            t994 = t992 ** 2
            t993 = t991 * t992
            t990 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t990 ** 2 * (375 * t992 - 1265 * t994 - 15 + (-220 + 1001 * t993) * t993 + (286 * t994 + 30) * t991) * np.sin((phi1 + 2 * phi2)) * ((1 + t991) ** (-0.1e1 / 0.2e1)) * ((1 - t991) ** (-0.1e1 / 0.2e1))

        if Bindx == 249:
            t997 = np.cos(phi)
            t998 = t997 ** 2
            t999 = t997 * t998
            t1002 = t999 ** 2
            t1000 = t998 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-627 * t1000 + 429 * t1002 + 207 * t998 + 1043 * t999 - 9 + (-1903 * t1000 + 1001 * t1002 - 141) * t997) * np.cos((phi1 + 3 * phi2))

        if Bindx == 250:
            t1010 = np.sin(phi)
            t1008 = t1010 ** 2
            t1004 = np.cos(phi)
            t1005 = t1004 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1008 ** 2 * (-12 * t1004 + 3 + (52 * t1004 - 54 + 91 * t1005) * t1005) * np.sin((phi1 + 4 * phi2)) * ((1 + t1004) ** (-0.1e1 / 0.2e1)) * ((1 - t1004) ** (-0.1e1 / 0.2e1))

        if Bindx == 251:
            t1011 = np.cos(phi)
            t1012 = t1011 ** 2
            t1013 = t1011 * t1012
            t1016 = t1013 ** 2
            t1014 = t1012 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (75 * t1012 + 153 * t1013 - 135 * t1014 + 65 * t1016 - 5 + (-213 * t1014 + 91 * t1016 - 31) * t1011) * np.cos((phi1 + 5 * phi2))

        if Bindx == 252:
            t1022 = np.sin(phi)
            t1019 = t1022 ** 2
            t1020 = t1022 * t1019
            t1018 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1020 ** 2 * (-1 + (6 + 7 * t1018) * t1018) * np.sin((phi1 + 6 * phi2)) * ((1 + t1018) ** (-0.1e1 / 0.2e1)) * ((1 - t1018) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t1023 = np.cos(phi)
            t1024 = t1023 ** 2
            t1025 = t1023 * t1024
            t1031 = -3 * t1024 ** 2 + t1025 ** 2 - 1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((phi1 + 7 * phi2)) * (t1023 * t1031 + 3 * t1024 + 3 * t1025 + t1031)

        if Bindx == 254:
            t1032 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1032) ** (0.9e1 / 0.2e1)) * ((1 + t1032) ** (0.5e1 / 0.2e1)) * np.sin((2 * phi1 - 7 * phi2))

        if Bindx == 255:
            t1033 = np.cos(phi)
            t1034 = t1033 ** 2
            t1035 = t1033 * t1034
            t1038 = t1035 ** 2
            t1036 = t1034 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (-16 * t1034 + t1035 + 26 * t1036 - 12 * t1038 + 2 + (-11 * t1036 + 7 * t1038 + 3) * t1033) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 256:
            t1046 = np.sin(phi)
            t1044 = t1046 ** 2
            t1040 = np.cos(phi)
            t1041 = t1040 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1044 ** 2 * (50 * t1040 + 1 + (-130 * t1040 - 12 + 91 * t1041) * t1041) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t1040) ** (-0.1e1 / 0.2e1)) * ((1 - t1040) ** (-0.1e1 / 0.2e1))

        if Bindx == 257:
            t1047 = np.cos(phi)
            t1048 = t1047 ** 2
            t1049 = t1047 * t1048
            t1052 = t1049 ** 2
            t1050 = t1048 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (-72 * t1048 + 73 * t1049 + 172 * t1050 - 104 * t1052 + 4 + (-153 * t1050 + 91 * t1052 - 11) * t1047) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 258:
            t1055 = np.cos(phi)
            t1056 = t1055 ** 2
            t1058 = t1056 ** 2
            t1057 = t1055 * t1056
            t1054 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * t1054 ** 2 * (399 * t1056 - 1221 * t1058 - 19 + (836 + 1001 * t1057) * t1057 + (-858 * t1058 - 138) * t1055) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t1055) ** (-0.1e1 / 0.2e1)) * ((1 - t1055) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t1061 = np.cos(phi)
            t1062 = t1061 ** 2
            t1063 = t1061 * t1062
            t1066 = t1063 ** 2
            t1064 = t1062 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (-240 * t1062 + 895 * t1063 + 770 * t1064 - 572 * t1066 + 10 + (-1749 * t1064 + 1001 * t1066 - 115) * t1061) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 260:
            t1069 = np.cos(phi)
            t1070 = t1069 ** 2
            t1072 = t1070 ** 2
            t1071 = t1069 * t1070
            t1068 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t1068 ** 2 * (375 * t1070 - 1265 * t1072 - 15 + (220 + 1001 * t1071) * t1071 + (-286 * t1072 - 30) * t1069) * np.sin((2 * phi1 - phi2)) * ((1 + t1069) ** (-0.1e1 / 0.2e1)) * ((1 - t1069) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t1075 = np.cos(phi)
            t1076 = t1075 ** 2
            t1077 = t1076 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t1075 * (-253 * t1077 - 15 + (143 * t1077 + 125) * t1076) * np.cos((2 * phi1))

        if Bindx == 262:
            t1080 = np.cos(phi)
            t1081 = t1080 ** 2
            t1083 = t1081 ** 2
            t1082 = t1080 * t1081
            t1079 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.3e1) * t1079 ** 2 * (375 * t1081 - 1265 * t1083 - 15 + (-220 + 1001 * t1082) * t1082 + (286 * t1083 + 30) * t1080) * np.sin((2 * phi1 + phi2)) * ((1 + t1080) ** (-0.1e1 / 0.2e1)) * ((1 - t1080) ** (-0.1e1 / 0.2e1))

        if Bindx == 263:
            t1086 = np.cos(phi)
            t1087 = t1086 ** 2
            t1088 = t1086 * t1087
            t1091 = t1088 ** 2
            t1089 = t1087 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (240 * t1087 + 895 * t1088 - 770 * t1089 + 572 * t1091 - 10 + (-1749 * t1089 + 1001 * t1091 - 115) * t1086) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 264:
            t1094 = np.cos(phi)
            t1095 = t1094 ** 2
            t1097 = t1095 ** 2
            t1096 = t1094 * t1095
            t1093 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * t1093 ** 2 * (399 * t1095 - 1221 * t1097 - 19 + (-836 + 1001 * t1096) * t1096 + (858 * t1097 + 138) * t1094) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t1094) ** (-0.1e1 / 0.2e1)) * ((1 - t1094) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t1100 = np.cos(phi)
            t1101 = t1100 ** 2
            t1102 = t1100 * t1101
            t1105 = t1102 ** 2
            t1103 = t1101 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (72 * t1101 + 73 * t1102 - 172 * t1103 + 104 * t1105 - 4 + (-153 * t1103 + 91 * t1105 - 11) * t1100) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 266:
            t1113 = np.sin(phi)
            t1111 = t1113 ** 2
            t1107 = np.cos(phi)
            t1108 = t1107 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1111 ** 2 * (-50 * t1107 + 1 + (130 * t1107 - 12 + 91 * t1108) * t1108) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t1107) ** (-0.1e1 / 0.2e1)) * ((1 - t1107) ** (-0.1e1 / 0.2e1))

        if Bindx == 267:
            t1114 = np.cos(phi)
            t1115 = t1114 ** 2
            t1116 = t1114 * t1115
            t1119 = t1116 ** 2
            t1117 = t1115 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (16 * t1115 + t1116 - 26 * t1117 + 12 * t1119 - 2 + (-11 * t1117 + 7 * t1119 + 3) * t1114) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 268:
            t1121 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1121) ** (0.5e1 / 0.2e1)) * ((1 + t1121) ** (0.9e1 / 0.2e1)) * np.sin((2 * phi1 + 7 * phi2))

        if Bindx == 269:
            t1122 = np.cos(phi)
            t1123 = t1122 ** 2
            t1124 = t1122 * t1123
            t1127 = t1124 ** 2
            t1125 = t1123 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((3 * phi1 - 7 * phi2)) * (-t1123 - 5 * t1124 + 5 * t1125 - 3 * t1127 - 1 + (t1125 + t1127 + 3) * t1122)

        if Bindx == 270:
            t1135 = np.sin(phi)
            t1133 = t1135 ** 2
            t1129 = np.cos(phi)
            t1130 = t1129 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1133 ** 2 * (2 * t1129 - 3 + (-18 * t1129 + 12 + 7 * t1130) * t1130) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t1129) ** (-0.1e1 / 0.2e1)) * ((1 - t1129) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t1136 = np.cos(phi)
            t1137 = t1136 ** 2
            t1138 = t1136 * t1137
            t1141 = t1138 ** 2
            t1139 = t1137 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (-121 * t1137 - 95 * t1138 + 305 * t1139 - 195 * t1141 + 11 + (-41 * t1139 + 91 * t1141 + 45) * t1136) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 272:
            t1144 = np.cos(phi)
            t1145 = t1144 ** 2
            t1147 = t1145 ** 2
            t1146 = t1144 * t1145
            t1143 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1143 ** 2 * (-15 * t1145 - 45 * t1147 + 1 + (160 + 91 * t1146) * t1146 + (-156 * t1147 - 36) * t1144) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t1144) ** (-0.1e1 / 0.2e1)) * ((1 - t1144) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t1150 = np.cos(phi)
            t1151 = t1150 ** 2
            t1152 = t1150 * t1151
            t1155 = t1152 ** 2
            t1153 = t1151 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (-741 * t1151 + 555 * t1152 + 1925 * t1153 - 1287 * t1155 + 39 + (-1419 * t1153 + 1001 * t1155 - 73) * t1150) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 274:
            t1158 = np.cos(phi)
            t1159 = t1158 ** 2
            t1161 = t1159 ** 2
            t1160 = t1158 * t1159
            t1157 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * t1157 ** 2 * (399 * t1159 - 1221 * t1161 - 19 + (836 + 1001 * t1160) * t1160 + (-858 * t1161 - 138) * t1158) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t1158) ** (-0.1e1 / 0.2e1)) * ((1 - t1158) ** (-0.1e1 / 0.2e1))

        if Bindx == 275:
            t1164 = np.cos(phi)
            t1165 = t1164 ** 2
            t1166 = t1164 * t1165
            t1169 = t1166 ** 2
            t1167 = t1165 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (-207 * t1165 + 1043 * t1166 + 627 * t1167 - 429 * t1169 + 9 + (-1903 * t1167 + 1001 * t1169 - 141) * t1164) * np.cos((3 * phi1 - phi2))

        if Bindx == 276:
            t1176 = np.sin(phi)
            t1174 = t1176 ** 2
            t1171 = np.cos(phi)
            t1172 = t1171 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.21e2) * t1174 ** 2 * (3 + (-66 + 143 * t1172) * t1172) * np.sin((3 * phi1)) * ((1 + t1171) ** (-0.1e1 / 0.2e1)) * ((1 - t1171) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t1177 = np.cos(phi)
            t1178 = t1177 ** 2
            t1179 = t1177 * t1178
            t1182 = t1179 ** 2
            t1180 = t1178 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * (207 * t1178 + 1043 * t1179 - 627 * t1180 + 429 * t1182 - 9 + (-1903 * t1180 + 1001 * t1182 - 141) * t1177) * np.cos((3 * phi1 + phi2))

        if Bindx == 278:
            t1185 = np.cos(phi)
            t1186 = t1185 ** 2
            t1188 = t1186 ** 2
            t1187 = t1185 * t1186
            t1184 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * t1184 ** 2 * (399 * t1186 - 1221 * t1188 - 19 + (-836 + 1001 * t1187) * t1187 + (858 * t1188 + 138) * t1185) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t1185) ** (-0.1e1 / 0.2e1)) * ((1 - t1185) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t1191 = np.cos(phi)
            t1192 = t1191 ** 2
            t1193 = t1191 * t1192
            t1196 = t1193 ** 2
            t1194 = t1192 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (741 * t1192 + 555 * t1193 - 1925 * t1194 + 1287 * t1196 - 39 + (-1419 * t1194 + 1001 * t1196 - 73) * t1191) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 280:
            t1199 = np.cos(phi)
            t1200 = t1199 ** 2
            t1202 = t1200 ** 2
            t1201 = t1199 * t1200
            t1198 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1198 ** 2 * (-15 * t1200 - 45 * t1202 + 1 + (-160 + 91 * t1201) * t1201 + (156 * t1202 + 36) * t1199) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t1199) ** (-0.1e1 / 0.2e1)) * ((1 - t1199) ** (-0.1e1 / 0.2e1))

        if Bindx == 281:
            t1205 = np.cos(phi)
            t1206 = t1205 ** 2
            t1207 = t1205 * t1206
            t1210 = t1207 ** 2
            t1208 = t1206 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (121 * t1206 - 95 * t1207 - 305 * t1208 + 195 * t1210 - 11 + (-41 * t1208 + 91 * t1210 + 45) * t1205) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 282:
            t1218 = np.sin(phi)
            t1216 = t1218 ** 2
            t1212 = np.cos(phi)
            t1213 = t1212 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1216 ** 2 * (-2 * t1212 - 3 + (18 * t1212 + 12 + 7 * t1213) * t1213) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t1212) ** (-0.1e1 / 0.2e1)) * ((1 - t1212) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t1219 = np.cos(phi)
            t1220 = t1219 ** 2
            t1221 = t1219 * t1220
            t1224 = t1221 ** 2
            t1222 = t1220 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((3 * phi1 + 7 * phi2)) * (t1220 - 5 * t1221 - 5 * t1222 + 3 * t1224 + 1 + (t1222 + t1224 + 3) * t1219)

        if Bindx == 284:
            t1226 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1226) ** (0.11e2 / 0.2e1)) * ((1 + t1226) ** (0.3e1 / 0.2e1)) * np.sin((4 * phi1 - 7 * phi2))

        if Bindx == 285:
            t1227 = np.cos(phi)
            t1228 = t1227 ** 2
            t1229 = t1227 * t1228
            t1232 = t1229 ** 2
            t1230 = t1228 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (8 * t1228 - 35 * t1229 + 20 * t1230 - 24 * t1232 - 4 + (19 * t1230 + 7 * t1232 + 9) * t1227) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 286:
            t1235 = np.cos(phi)
            t1236 = t1235 ** 2
            t1238 = t1236 ** 2
            t1237 = t1235 * t1236
            t1234 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1234 ** 2 * (-175 * t1236 + 155 * t1238 + 25 + (160 + 91 * t1237) * t1237 + (-260 * t1238 + 4) * t1235) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t1235) ** (-0.1e1 / 0.2e1)) * ((1 - t1235) ** (-0.1e1 / 0.2e1))

        if Bindx == 287:
            t1241 = np.cos(phi)
            t1242 = t1241 ** 2
            t1243 = t1241 * t1242
            t1246 = t1243 ** 2
            t1244 = t1242 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.2e1) * (-96 * t1242 - 115 * t1243 + 280 * t1244 - 208 * t1246 + 8 + (-3 * t1244 + 91 * t1246 + 43) * t1241) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 288:
            t1249 = np.cos(phi)
            t1250 = t1249 ** 2
            t1252 = t1250 ** 2
            t1251 = t1249 * t1250
            t1248 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1248 ** 2 * (-15 * t1250 - 45 * t1252 + 1 + (160 + 91 * t1251) * t1251 + (-156 * t1252 - 36) * t1249) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t1249) ** (-0.1e1 / 0.2e1)) * ((1 - t1249) ** (-0.1e1 / 0.2e1))

        if Bindx == 289:
            t1255 = np.cos(phi)
            t1256 = t1255 ** 2
            t1257 = t1255 * t1256
            t1260 = t1257 ** 2
            t1258 = t1256 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (-72 * t1256 + 73 * t1257 + 172 * t1258 - 104 * t1260 + 4 + (-153 * t1258 + 91 * t1260 - 11) * t1255) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 290:
            t1268 = np.sin(phi)
            t1266 = t1268 ** 2
            t1262 = np.cos(phi)
            t1263 = t1262 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1266 ** 2 * (12 * t1262 + 3 + (-52 * t1262 - 54 + 91 * t1263) * t1263) * np.sin((4 * phi1 - phi2)) * ((1 + t1262) ** (-0.1e1 / 0.2e1)) * ((1 - t1262) ** (-0.1e1 / 0.2e1))

        if Bindx == 291:
            t1269 = np.cos(phi)
            t1270 = t1269 ** 2
            t1271 = t1270 ** 2
            tfunc[..., c] = 0.15e2 / 0.16e2 * t1269 * np.sqrt(0.231e3) * (-29 * t1271 - 3 + (13 * t1271 + 19) * t1270) * np.cos((4 * phi1))

        if Bindx == 292:
            t1279 = np.sin(phi)
            t1277 = t1279 ** 2
            t1273 = np.cos(phi)
            t1274 = t1273 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * t1277 ** 2 * (-12 * t1273 + 3 + (52 * t1273 - 54 + 91 * t1274) * t1274) * np.sin((4 * phi1 + phi2)) * ((1 + t1273) ** (-0.1e1 / 0.2e1)) * ((1 - t1273) ** (-0.1e1 / 0.2e1))

        if Bindx == 293:
            t1280 = np.cos(phi)
            t1281 = t1280 ** 2
            t1282 = t1280 * t1281
            t1285 = t1282 ** 2
            t1283 = t1281 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.11e2) * (72 * t1281 + 73 * t1282 - 172 * t1283 + 104 * t1285 - 4 + (-153 * t1283 + 91 * t1285 - 11) * t1280) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 294:
            t1288 = np.cos(phi)
            t1289 = t1288 ** 2
            t1291 = t1289 ** 2
            t1290 = t1288 * t1289
            t1287 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * t1287 ** 2 * (-15 * t1289 - 45 * t1291 + 1 + (-160 + 91 * t1290) * t1290 + (156 * t1291 + 36) * t1288) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t1288) ** (-0.1e1 / 0.2e1)) * ((1 - t1288) ** (-0.1e1 / 0.2e1))

        if Bindx == 295:
            t1294 = np.cos(phi)
            t1295 = t1294 ** 2
            t1296 = t1294 * t1295
            t1299 = t1296 ** 2
            t1297 = t1295 ** 2
            tfunc[..., c] = 0.15e2 / 0.32e2 * np.sqrt(0.2e1) * (96 * t1295 - 115 * t1296 - 280 * t1297 + 208 * t1299 - 8 + (-3 * t1297 + 91 * t1299 + 43) * t1294) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 296:
            t1302 = np.cos(phi)
            t1303 = t1302 ** 2
            t1305 = t1303 ** 2
            t1304 = t1302 * t1303
            t1301 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1301 ** 2 * (-175 * t1303 + 155 * t1305 + 25 + (-160 + 91 * t1304) * t1304 + (260 * t1305 - 4) * t1302) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t1302) ** (-0.1e1 / 0.2e1)) * ((1 - t1302) ** (-0.1e1 / 0.2e1))

        if Bindx == 297:
            t1308 = np.cos(phi)
            t1309 = t1308 ** 2
            t1310 = t1308 * t1309
            t1313 = t1310 ** 2
            t1311 = t1309 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (-8 * t1309 - 35 * t1310 - 20 * t1311 + 24 * t1313 + 4 + (19 * t1311 + 7 * t1313 + 9) * t1308) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 298:
            t1315 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1315) ** (0.3e1 / 0.2e1)) * ((1 + t1315) ** (0.11e2 / 0.2e1)) * np.sin((4 * phi1 + 7 * phi2))

        if Bindx == 299:
            t1316 = np.cos(phi)
            t1317 = t1316 ** 2
            t1318 = t1316 * t1317
            t1321 = t1318 ** 2
            t1319 = t1317 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (9 * t1317 - 5 * t1318 - 5 * t1319 - 5 * t1321 + 1 + (9 * t1319 + t1321 - 5) * t1316) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 300:
            t1324 = np.cos(phi)
            t1325 = t1324 ** 2
            t1327 = t1325 ** 2
            t1326 = t1324 * t1325
            t1323 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1323 ** 2 * (-15 * t1325 + 45 * t1327 - 5 + (-20 + 7 * t1326) * t1326 + (-30 * t1327 + 18) * t1324) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t1324) ** (-0.1e1 / 0.2e1)) * ((1 - t1324) ** (-0.1e1 / 0.2e1))

        if Bindx == 301:
            t1330 = np.cos(phi)
            t1331 = t1330 ** 2
            t1332 = t1330 * t1331
            t1335 = t1332 ** 2
            t1333 = t1331 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (129 * t1331 - 415 * t1332 + 175 * t1333 - 325 * t1335 - 43 + (303 * t1333 + 91 * t1335 + 85) * t1330) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 302:
            t1338 = np.cos(phi)
            t1339 = t1338 ** 2
            t1341 = t1339 ** 2
            t1340 = t1338 * t1339
            t1337 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1337 ** 2 * (-175 * t1339 + 155 * t1341 + 25 + (160 + 91 * t1340) * t1340 + (-260 * t1341 + 4) * t1338) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t1338) ** (-0.1e1 / 0.2e1)) * ((1 - t1338) ** (-0.1e1 / 0.2e1))

        if Bindx == 303:
            t1344 = np.cos(phi)
            t1345 = t1344 ** 2
            t1346 = t1344 * t1345
            t1349 = t1346 ** 2
            t1347 = t1345 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (-121 * t1345 - 95 * t1346 + 305 * t1347 - 195 * t1349 + 11 + (-41 * t1347 + 91 * t1349 + 45) * t1344) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 304:
            t1357 = np.sin(phi)
            t1355 = t1357 ** 2
            t1351 = np.cos(phi)
            t1352 = t1351 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1355 ** 2 * (50 * t1351 + 1 + (-130 * t1351 - 12 + 91 * t1352) * t1352) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t1351) ** (-0.1e1 / 0.2e1)) * ((1 - t1351) ** (-0.1e1 / 0.2e1))

        if Bindx == 305:
            t1358 = np.cos(phi)
            t1359 = t1358 ** 2
            t1360 = t1358 * t1359
            t1363 = t1360 ** 2
            t1361 = t1359 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (-75 * t1359 + 153 * t1360 + 135 * t1361 - 65 * t1363 + 5 + (-213 * t1361 + 91 * t1363 - 31) * t1358) * np.cos((5 * phi1 - phi2))

        if Bindx == 306:
            t1369 = np.sin(phi)
            t1366 = t1369 ** 2
            t1367 = t1369 * t1366
            t1365 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.231e3) * t1367 ** 2 * (13 * t1365 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t1365) ** (-0.1e1 / 0.2e1)) * ((1 - t1365) ** (-0.1e1 / 0.2e1))

        if Bindx == 307:
            t1370 = np.cos(phi)
            t1371 = t1370 ** 2
            t1372 = t1370 * t1371
            t1375 = t1372 ** 2
            t1373 = t1371 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.33e2) * (75 * t1371 + 153 * t1372 - 135 * t1373 + 65 * t1375 - 5 + (-213 * t1373 + 91 * t1375 - 31) * t1370) * np.cos((5 * phi1 + phi2))

        if Bindx == 308:
            t1383 = np.sin(phi)
            t1381 = t1383 ** 2
            t1377 = np.cos(phi)
            t1378 = t1377 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.11e2) * t1381 ** 2 * (-50 * t1377 + 1 + (130 * t1377 - 12 + 91 * t1378) * t1378) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t1377) ** (-0.1e1 / 0.2e1)) * ((1 - t1377) ** (-0.1e1 / 0.2e1))

        if Bindx == 309:
            t1384 = np.cos(phi)
            t1385 = t1384 ** 2
            t1386 = t1384 * t1385
            t1389 = t1386 ** 2
            t1387 = t1385 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.11e2) * (121 * t1385 - 95 * t1386 - 305 * t1387 + 195 * t1389 - 11 + (-41 * t1387 + 91 * t1389 + 45) * t1384) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 310:
            t1392 = np.cos(phi)
            t1393 = t1392 ** 2
            t1395 = t1393 ** 2
            t1394 = t1392 * t1393
            t1391 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * t1391 ** 2 * (-175 * t1393 + 155 * t1395 + 25 + (-160 + 91 * t1394) * t1394 + (260 * t1395 - 4) * t1392) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t1392) ** (-0.1e1 / 0.2e1)) * ((1 - t1392) ** (-0.1e1 / 0.2e1))

        if Bindx == 311:
            t1398 = np.cos(phi)
            t1399 = t1398 ** 2
            t1400 = t1398 * t1399
            t1403 = t1400 ** 2
            t1401 = t1399 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * (-129 * t1399 - 415 * t1400 - 175 * t1401 + 325 * t1403 + 43 + (303 * t1401 + 91 * t1403 + 85) * t1398) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 312:
            t1406 = np.cos(phi)
            t1407 = t1406 ** 2
            t1409 = t1407 ** 2
            t1408 = t1406 * t1407
            t1405 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1405 ** 2 * (-15 * t1407 + 45 * t1409 - 5 + (20 + 7 * t1408) * t1408 + (30 * t1409 - 18) * t1406) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t1406) ** (-0.1e1 / 0.2e1)) * ((1 - t1406) ** (-0.1e1 / 0.2e1))

        if Bindx == 313:
            t1412 = np.cos(phi)
            t1413 = t1412 ** 2
            t1414 = t1412 * t1413
            t1417 = t1414 ** 2
            t1415 = t1413 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-9 * t1413 - 5 * t1414 + 5 * t1415 + 5 * t1417 - 1 + (9 * t1415 + t1417 - 5) * t1412) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 314:
            t1419 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.7e1) * ((1 - t1419) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t1419)) * np.sin((6 * phi1 - 7 * phi2))

        if Bindx == 315:
            t1420 = np.cos(phi)
            t1421 = t1420 ** 2
            t1422 = t1420 * t1421
            t1425 = t1422 ** 2
            t1423 = t1421 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (48 * t1421 - 15 * t1422 - 50 * t1423 - 36 * t1425 + 6 + (69 * t1423 + 7 * t1425 - 29) * t1420) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 316:
            t1428 = np.cos(phi)
            t1429 = t1428 ** 2
            t1431 = t1429 ** 2
            t1430 = t1428 * t1429
            t1427 = np.sin(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1427 ** 2 * (-15 * t1429 + 45 * t1431 - 5 + (-20 + 7 * t1430) * t1430 + (-30 * t1431 + 18) * t1428) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t1428) ** (-0.1e1 / 0.2e1)) * ((1 - t1428) ** (-0.1e1 / 0.2e1))

        if Bindx == 317:
            t1434 = np.cos(phi)
            t1435 = t1434 ** 2
            t1436 = t1434 * t1435
            t1439 = t1436 ** 2
            t1437 = t1435 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (8 * t1435 - 35 * t1436 + 20 * t1437 - 24 * t1439 - 4 + (19 * t1437 + 7 * t1439 + 9) * t1434) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 318:
            t1447 = np.sin(phi)
            t1445 = t1447 ** 2
            t1441 = np.cos(phi)
            t1442 = t1441 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1445 ** 2 * (2 * t1441 - 3 + (-18 * t1441 + 12 + 7 * t1442) * t1442) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t1441) ** (-0.1e1 / 0.2e1)) * ((1 - t1441) ** (-0.1e1 / 0.2e1))

        if Bindx == 319:
            t1448 = np.cos(phi)
            t1449 = t1448 ** 2
            t1450 = t1448 * t1449
            t1453 = t1450 ** 2
            t1451 = t1449 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (-16 * t1449 + t1450 + 26 * t1451 - 12 * t1453 + 2 + (-11 * t1451 + 7 * t1453 + 3) * t1448) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 320:
            t1459 = np.sin(phi)
            t1456 = t1459 ** 2
            t1457 = t1459 * t1456
            t1455 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1457 ** 2 * (-1 + (-6 + 7 * t1455) * t1455) * np.sin((6 * phi1 - phi2)) * ((1 + t1455) ** (-0.1e1 / 0.2e1)) * ((1 - t1455) ** (-0.1e1 / 0.2e1))

        if Bindx == 321:
            t1460 = np.cos(phi)
            t1461 = t1460 ** 2
            t1462 = t1461 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * t1460 * np.cos((6 * phi1)) * (-3 * t1462 - 1 + (t1462 + 3) * t1461)

        if Bindx == 322:
            t1468 = np.sin(phi)
            t1465 = t1468 ** 2
            t1466 = t1468 * t1465
            t1464 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.429e3) * t1466 ** 2 * (-1 + (6 + 7 * t1464) * t1464) * np.sin((6 * phi1 + phi2)) * ((1 + t1464) ** (-0.1e1 / 0.2e1)) * ((1 - t1464) ** (-0.1e1 / 0.2e1))

        if Bindx == 323:
            t1469 = np.cos(phi)
            t1470 = t1469 ** 2
            t1471 = t1469 * t1470
            t1474 = t1471 ** 2
            t1472 = t1470 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * (16 * t1470 + t1471 - 26 * t1472 + 12 * t1474 - 2 + (-11 * t1472 + 7 * t1474 + 3) * t1469) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 324:
            t1482 = np.sin(phi)
            t1480 = t1482 ** 2
            t1476 = np.cos(phi)
            t1477 = t1476 ** 2
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.143e3) * t1480 ** 2 * (-2 * t1476 - 3 + (18 * t1476 + 12 + 7 * t1477) * t1477) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t1476) ** (-0.1e1 / 0.2e1)) * ((1 - t1476) ** (-0.1e1 / 0.2e1))

        if Bindx == 325:
            t1483 = np.cos(phi)
            t1484 = t1483 ** 2
            t1485 = t1483 * t1484
            t1488 = t1485 ** 2
            t1486 = t1484 ** 2
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.13e2) * (-8 * t1484 - 35 * t1485 - 20 * t1486 + 24 * t1488 + 4 + (19 * t1486 + 7 * t1488 + 9) * t1483) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 326:
            t1491 = np.cos(phi)
            t1492 = t1491 ** 2
            t1494 = t1492 ** 2
            t1493 = t1491 * t1492
            t1490 = np.sin(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.13e2) * t1490 ** 2 * (-15 * t1492 + 45 * t1494 - 5 + (20 + 7 * t1493) * t1493 + (30 * t1494 - 18) * t1491) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t1491) ** (-0.1e1 / 0.2e1)) * ((1 - t1491) ** (-0.1e1 / 0.2e1))

        if Bindx == 327:
            t1497 = np.cos(phi)
            t1498 = t1497 ** 2
            t1499 = t1497 * t1498
            t1502 = t1499 ** 2
            t1500 = t1498 ** 2
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.2e1) * (-48 * t1498 - 15 * t1499 + 50 * t1500 + 36 * t1502 - 6 + (69 * t1500 + 7 * t1502 - 29) * t1497) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 328:
            t1504 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.7e1) * np.sqrt((1 - t1504)) * ((1 + t1504) ** (0.13e2 / 0.2e1)) * np.sin((6 * phi1 + 7 * phi2))

        if Bindx == 329:
            t1505 = np.cos(phi)
            t1506 = t1505 ** 2
            t1507 = t1505 * t1506
            t1510 = t1507 ** 2
            t1508 = t1506 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.cos((7 * phi1 - 7 * phi2)) * (-21 * t1506 + 35 * t1507 - 35 * t1508 - 7 * t1510 - 1 + (21 * t1508 + t1510 + 7) * t1505)

        if Bindx == 330:
            t1512 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.7e1) * ((1 - t1512) ** (0.13e2 / 0.2e1)) * np.sqrt((1 + t1512)) * np.sin((7 * phi1 - 6 * phi2))

        if Bindx == 331:
            t1513 = np.cos(phi)
            t1514 = t1513 ** 2
            t1515 = t1513 * t1514
            t1518 = t1515 ** 2
            t1516 = t1514 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (9 * t1514 - 5 * t1515 - 5 * t1516 - 5 * t1518 + 1 + (9 * t1516 + t1518 - 5) * t1513) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 332:
            t1520 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1520) ** (0.11e2 / 0.2e1)) * ((1 + t1520) ** (0.3e1 / 0.2e1)) * np.sin((7 * phi1 - 4 * phi2))

        if Bindx == 333:
            t1521 = np.cos(phi)
            t1522 = t1521 ** 2
            t1523 = t1521 * t1522
            t1526 = t1523 ** 2
            t1524 = t1522 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((7 * phi1 - 3 * phi2)) * (-t1522 - 5 * t1523 + 5 * t1524 - 3 * t1526 - 1 + (t1524 + t1526 + 3) * t1521)

        if Bindx == 334:
            t1528 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1528) ** (0.9e1 / 0.2e1)) * ((1 + t1528) ** (0.5e1 / 0.2e1)) * np.sin((7 * phi1 - 2 * phi2))

        if Bindx == 335:
            t1529 = np.cos(phi)
            t1530 = t1529 ** 2
            t1531 = t1529 * t1530
            t1536 = -3 * t1530 ** 2 + t1531 ** 2 - 1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((7 * phi1 - phi2)) * (t1536 * t1529 - 3 * t1530 + 3 * t1531 - t1536)

        if Bindx == 336:
            t1537 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.32e2 * np.sqrt(0.429e3) * ((1 - t1537) ** (0.7e1 / 0.2e1)) * ((1 + t1537) ** (0.7e1 / 0.2e1)) * np.sin((7 * phi1))

        if Bindx == 337:
            t1538 = np.cos(phi)
            t1539 = t1538 ** 2
            t1540 = t1538 * t1539
            t1546 = -3 * t1539 ** 2 + t1540 ** 2 - 1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3003e4) * np.cos((7 * phi1 + phi2)) * (t1538 * t1546 + 3 * t1539 + 3 * t1540 + t1546)

        if Bindx == 338:
            t1547 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.1001e4) * ((1 - t1547) ** (0.5e1 / 0.2e1)) * ((1 + t1547) ** (0.9e1 / 0.2e1)) * np.sin((7 * phi1 + 2 * phi2))

        if Bindx == 339:
            t1548 = np.cos(phi)
            t1549 = t1548 ** 2
            t1550 = t1548 * t1549
            t1553 = t1550 ** 2
            t1551 = t1549 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * np.cos((7 * phi1 + 3 * phi2)) * (t1549 - 5 * t1550 - 5 * t1551 + 3 * t1553 + 1 + (t1551 + t1553 + 3) * t1548)

        if Bindx == 340:
            t1555 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * ((1 - t1555) ** (0.3e1 / 0.2e1)) * ((1 + t1555) ** (0.11e2 / 0.2e1)) * np.sin((7 * phi1 + 4 * phi2))

        if Bindx == 341:
            t1556 = np.cos(phi)
            t1557 = t1556 ** 2
            t1558 = t1556 * t1557
            t1561 = t1558 ** 2
            t1559 = t1557 ** 2
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * (-9 * t1557 - 5 * t1558 + 5 * t1559 + 5 * t1561 - 1 + (9 * t1559 + t1561 - 5) * t1556) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 342:
            t1563 = np.cos(phi)
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.7e1) * ((1 + t1563) ** (0.13e2 / 0.2e1)) * np.sin((7 * phi1 + 6 * phi2)) * np.sqrt((1 - t1563))

        if Bindx == 343:
            t1564 = np.cos(phi)
            t1565 = t1564 ** 2
            t1566 = t1564 * t1565
            t1569 = t1566 ** 2
            t1567 = t1565 ** 2
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.2e1) * np.cos((7 * phi1 + 7 * phi2)) * (21 * t1565 + 35 * t1566 + 35 * t1567 + 7 * t1569 + 1 + (21 * t1567 + t1569 + 7) * t1564)

        if Bindx == 344:
            t1571 = np.cos(phi)
            t1572 = t1571 ** 2
            t1573 = t1572 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t1572 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t1572 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t1573) * t1573

        if Bindx == 345:
            t1577 = np.cos(phi)
            t1578 = t1577 ** 2
            t1579 = t1578 ** 2
            t1576 = np.sin(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * t1577 * t1576 ** 2 * (-1001 * t1579 - 35 + (715 * t1579 + 385) * t1578) * np.sin(phi2) * ((1 + t1577) ** (-0.1e1 / 0.2e1)) * ((1 - t1577) ** (-0.1e1 / 0.2e1))

        if Bindx == 346:
            t1581 = np.cos(phi)
            t1582 = t1581 ** 2
            t1583 = t1582 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t1582 + 1 + (-286 * t1582 + 176 + 143 * t1583) * t1583) * np.cos((2 * phi2))

        if Bindx == 347:
            t1591 = np.sin(phi)
            t1589 = t1591 ** 2
            t1586 = np.cos(phi)
            t1587 = t1586 ** 2
            tfunc[..., c] = 0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t1586 * t1589 ** 2 * (3 + (-26 + 39 * t1587) * t1587) * np.sin((3 * phi2)) * ((1 + t1586) ** (-0.1e1 / 0.2e1)) * ((1 - t1586) ** (-0.1e1 / 0.2e1))

        if Bindx == 348:
            t1592 = np.cos(phi)
            t1593 = t1592 ** 2
            t1594 = t1593 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t1593 + 1 + (-156 * t1593 + 118 + 65 * t1594) * t1594) * np.cos((4 * phi2))

        if Bindx == 349:
            t1601 = np.sin(phi)
            t1598 = t1601 ** 2
            t1599 = t1601 * t1598
            t1597 = np.cos(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t1597 * t1599 ** 2 * (5 * t1597 ** 2 - 1) * np.sin((5 * phi2)) * ((1 + t1597) ** (-0.1e1 / 0.2e1)) * ((1 - t1597) ** (-0.1e1 / 0.2e1))

        if Bindx == 350:
            t1602 = np.cos(phi)
            t1603 = t1602 ** 2
            t1604 = t1603 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t1603 + 1 + (-46 * t1603 + 48 + 15 * t1604) * t1604) * np.cos((6 * phi2))

        if Bindx == 351:
            t1611 = np.sin(phi)
            t1608 = t1611 ** 2
            t1609 = t1608 ** 2
            t1607 = np.cos(phi)
            tfunc[..., c] = 0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t1607 * t1609 ** 2 * np.sin((7 * phi2)) * ((1 + t1607) ** (-0.1e1 / 0.2e1)) * ((1 - t1607) ** (-0.1e1 / 0.2e1))

        if Bindx == 352:
            t1612 = np.cos(phi)
            t1613 = t1612 ** 2
            t1617 = -4 * t1613
            t1614 = t1613 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi2)) * (t1617 + 1 + (t1617 + 6 + t1614) * t1614)

        if Bindx == 353:
            t1618 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t1618) ** (0.9e1 / 0.2e1)) * ((1 + t1618) ** (0.7e1 / 0.2e1)) * np.sin((phi1 - 8 * phi2))

        if Bindx == 354:
            t1619 = np.cos(phi)
            t1620 = t1619 ** 2
            t1621 = t1619 * t1620
            t1624 = t1621 ** 2
            t1622 = t1620 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t1620 - 21 * t1621 - 25 * t1624 + 1 + (27 + 8 * t1622) * t1622 + (21 * t1622 - 7 * t1624 + 7) * t1619) * np.cos((phi1 - 7 * phi2))

        if Bindx == 355:
            t1633 = np.sin(phi)
            t1630 = t1633 ** 2
            t1631 = t1633 * t1630
            t1627 = np.cos(phi)
            t1628 = t1627 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t1631 ** 2 * (-15 * t1628 + 1 + (20 * t1628 - 6) * t1627) * np.sin((phi1 - 6 * phi2)) * ((1 + t1627) ** (-0.1e1 / 0.2e1)) * ((1 - t1627) ** (-0.1e1 / 0.2e1))

        if Bindx == 356:
            t1634 = np.cos(phi)
            t1635 = t1634 ** 2
            t1636 = t1634 * t1635
            t1639 = t1636 ** 2
            t1637 = t1635 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t1635 - 35 * t1636 - 101 * t1639 + 1 + (83 + 40 * t1637) * t1637 + (55 * t1637 - 25 * t1639 + 5) * t1634) * np.cos((phi1 - 5 * phi2))

        if Bindx == 357:
            t1649 = np.sin(phi)
            t1647 = t1649 ** 2
            t1642 = np.cos(phi)
            t1643 = t1642 ** 2
            t1645 = t1643 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t1647 ** 2 * (26 * t1643 - 65 * t1645 - 1 + (-104 * t1643 + 130 * t1645 + 14) * t1642) * np.sin((phi1 - 4 * phi2)) * ((1 + t1642) ** (-0.1e1 / 0.2e1)) * ((1 - t1642) ** (-0.1e1 / 0.2e1))

        if Bindx == 358:
            t1650 = np.cos(phi)
            t1651 = t1650 ** 2
            t1652 = t1650 * t1651
            t1655 = t1652 ** 2
            t1653 = t1651 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t1651 - 29 * t1652 - 221 * t1655 + 1 + (147 + 104 * t1653) * t1653 + (65 * t1653 - 39 * t1655 + 3) * t1650) * np.cos((phi1 - 3 * phi2))

        if Bindx == 359:
            t1659 = np.cos(phi)
            t1660 = t1659 ** 2
            t1661 = t1659 * t1660
            t1664 = t1661 ** 2
            t1662 = t1660 ** 2
            t1658 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1658 ** 2 * (-33 * t1660 + 352 * t1661 + 143 * t1662 - 143 * t1664 + 1 + (-858 * t1662 + 572 * t1664 - 34) * t1659) * np.sin((phi1 - 2 * phi2)) * ((1 + t1659) ** (-0.1e1 / 0.2e1)) * ((1 - t1659) ** (-0.1e1 / 0.2e1))

        if Bindx == 360:
            t1666 = np.cos(phi)
            t1667 = t1666 ** 2
            t1668 = t1666 * t1667
            t1671 = t1668 ** 2
            t1669 = t1667 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-1225 * t1667 - 385 * t1668 - 11011 * t1671 + 35 + (6545 + 5720 * t1669) * t1669 + (1001 * t1669 - 715 * t1671 + 35) * t1666) * np.cos(phi1 - phi2)

        if Bindx == 361:
            t1675 = np.cos(phi)
            t1676 = t1675 ** 2
            t1677 = t1676 ** 2
            t1674 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t1675 * t1674 ** 2 * (-1001 * t1677 - 35 + (715 * t1677 + 385) * t1676) * np.sin(phi1) * ((1 + t1675) ** (-0.1e1 / 0.2e1)) * ((1 - t1675) ** (-0.1e1 / 0.2e1))

        if Bindx == 362:
            t1679 = np.cos(phi)
            t1680 = t1679 ** 2
            t1681 = t1679 * t1680
            t1684 = t1681 ** 2
            t1682 = t1680 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-1225 * t1680 + 385 * t1681 - 11011 * t1684 + 35 + (6545 + 5720 * t1682) * t1682 + (-1001 * t1682 + 715 * t1684 - 35) * t1679) * np.cos(phi1 + phi2)

        if Bindx == 363:
            t1688 = np.cos(phi)
            t1689 = t1688 ** 2
            t1690 = t1688 * t1689
            t1693 = t1690 ** 2
            t1691 = t1689 ** 2
            t1687 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1687 ** 2 * (33 * t1689 + 352 * t1690 - 143 * t1691 + 143 * t1693 - 1 + (-858 * t1691 + 572 * t1693 - 34) * t1688) * np.sin((phi1 + 2 * phi2)) * ((1 + t1688) ** (-0.1e1 / 0.2e1)) * ((1 - t1688) ** (-0.1e1 / 0.2e1))

        if Bindx == 364:
            t1695 = np.cos(phi)
            t1696 = t1695 ** 2
            t1697 = t1695 * t1696
            t1700 = t1697 ** 2
            t1698 = t1696 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t1696 + 29 * t1697 - 221 * t1700 + 1 + (147 + 104 * t1698) * t1698 + (-65 * t1698 + 39 * t1700 - 3) * t1695) * np.cos((phi1 + 3 * phi2))

        if Bindx == 365:
            t1710 = np.sin(phi)
            t1708 = t1710 ** 2
            t1703 = np.cos(phi)
            t1704 = t1703 ** 2
            t1706 = t1704 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t1708 ** 2 * (-26 * t1704 + 65 * t1706 + 1 + (-104 * t1704 + 130 * t1706 + 14) * t1703) * np.sin((phi1 + 4 * phi2)) * ((1 + t1703) ** (-0.1e1 / 0.2e1)) * ((1 - t1703) ** (-0.1e1 / 0.2e1))

        if Bindx == 366:
            t1711 = np.cos(phi)
            t1712 = t1711 ** 2
            t1713 = t1711 * t1712
            t1716 = t1713 ** 2
            t1714 = t1712 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t1712 + 35 * t1713 - 101 * t1716 + 1 + (83 + 40 * t1714) * t1714 + (-55 * t1714 + 25 * t1716 - 5) * t1711) * np.cos((phi1 + 5 * phi2))

        if Bindx == 367:
            t1725 = np.sin(phi)
            t1722 = t1725 ** 2
            t1723 = t1725 * t1722
            t1719 = np.cos(phi)
            t1720 = t1719 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t1723 ** 2 * (15 * t1720 - 1 + (20 * t1720 - 6) * t1719) * np.sin((phi1 + 6 * phi2)) * ((1 + t1719) ** (-0.1e1 / 0.2e1)) * ((1 - t1719) ** (-0.1e1 / 0.2e1))

        if Bindx == 368:
            t1726 = np.cos(phi)
            t1727 = t1726 ** 2
            t1728 = t1726 * t1727
            t1731 = t1728 ** 2
            t1729 = t1727 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t1727 + 21 * t1728 - 25 * t1731 + 1 + (27 + 8 * t1729) * t1729 + (-21 * t1729 + 7 * t1731 - 7) * t1726) * np.cos((phi1 + 7 * phi2))

        if Bindx == 369:
            t1734 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t1734) ** (0.7e1 / 0.2e1)) * ((1 + t1734) ** (0.9e1 / 0.2e1)) * np.sin((phi1 + 8 * phi2))

        if Bindx == 370:
            t1735 = np.cos(phi)
            t1736 = t1735 ** 2
            t1737 = t1735 * t1736
            t1739 = t1737 ** 2
            t1740 = t1735 * t1739
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((2 * phi1 - 8 * phi2)) * (-6 * t1737 - 2 * t1739 - 2 * t1740 - 1 + (6 * t1737 + 2) * t1736 + (t1740 + 2) * t1735)

        if Bindx == 371:
            t1748 = np.sin(phi)
            t1745 = t1748 ** 2
            t1746 = t1748 * t1745
            t1742 = np.cos(phi)
            t1743 = t1742 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t1746 ** 2 * (-7 * t1743 + 1 + (4 * t1743 + 2) * t1742) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t1742) ** (-0.1e1 / 0.2e1)) * ((1 - t1742) ** (-0.1e1 / 0.2e1))

        if Bindx == 372:
            t1749 = np.cos(phi)
            t1750 = t1749 ** 2
            t1751 = t1749 * t1750
            t1754 = t1751 ** 2
            t1752 = t1750 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t1749 * (-5 * t1750 + 2 * t1751 + 7 * t1752 - 3 * t1754 + 1 + (-4 * t1752 + 2 * t1754) * t1749) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 373:
            t1763 = np.sin(phi)
            t1761 = t1763 ** 2
            t1756 = np.cos(phi)
            t1757 = t1756 ** 2
            t1759 = t1757 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t1761 ** 2 * (20 * t1757 - 35 * t1759 - 1 + (-14 * t1757 + 28 * t1759 + 2) * t1756) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t1756) ** (-0.1e1 / 0.2e1)) * ((1 - t1756) ** (-0.1e1 / 0.2e1))

        if Bindx == 374:
            t1764 = np.cos(phi)
            t1765 = t1764 ** 2
            t1766 = t1764 * t1765
            t1769 = t1766 ** 2
            t1767 = t1765 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t1765 - 89 * t1766 - 182 * t1769 + 1 + (116 + 91 * t1767) * t1767 + (169 * t1767 - 91 * t1769 + 11) * t1764) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 375:
            t1773 = np.cos(phi)
            t1774 = t1773 ** 2
            t1775 = t1773 * t1774
            t1778 = t1775 ** 2
            t1776 = t1774 ** 2
            t1772 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t1772 ** 2 * (-87 * t1774 + 240 * t1775 + 325 * t1776 - 273 * t1778 + 3 + (-546 * t1776 + 364 * t1778 - 26) * t1773) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t1773) ** (-0.1e1 / 0.2e1)) * ((1 - t1773) ** (-0.1e1 / 0.2e1))

        if Bindx == 376:
            t1780 = np.cos(phi)
            t1781 = t1780 ** 2
            t1782 = t1780 * t1781
            t1785 = t1782 ** 2
            t1783 = t1781 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (-512 * t1781 - 671 * t1782 - 4004 * t1785 + 16 + (2530 + 2002 * t1783) * t1783 + (1573 * t1783 - 1001 * t1785 + 67) * t1780) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 377:
            t1789 = np.cos(phi)
            t1790 = t1789 ** 2
            t1791 = t1789 * t1790
            t1794 = t1791 ** 2
            t1792 = t1790 ** 2
            t1788 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1788 ** 2 * (-33 * t1790 + 352 * t1791 + 143 * t1792 - 143 * t1794 + 1 + (-858 * t1792 + 572 * t1794 - 34) * t1789) * np.sin((2 * phi1 - phi2)) * ((1 + t1789) ** (-0.1e1 / 0.2e1)) * ((1 - t1789) ** (-0.1e1 / 0.2e1))

        if Bindx == 378:
            t1796 = np.cos(phi)
            t1797 = t1796 ** 2
            t1798 = t1797 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t1797 + 1 + (-286 * t1797 + 176 + 143 * t1798) * t1798) * np.cos((2 * phi1))

        if Bindx == 379:
            t1802 = np.cos(phi)
            t1803 = t1802 ** 2
            t1804 = t1802 * t1803
            t1807 = t1804 ** 2
            t1805 = t1803 ** 2
            t1801 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.35e2) * t1801 ** 2 * (33 * t1803 + 352 * t1804 - 143 * t1805 + 143 * t1807 - 1 + (-858 * t1805 + 572 * t1807 - 34) * t1802) * np.sin((2 * phi1 + phi2)) * ((1 + t1802) ** (-0.1e1 / 0.2e1)) * ((1 - t1802) ** (-0.1e1 / 0.2e1))

        if Bindx == 380:
            t1809 = np.cos(phi)
            t1810 = t1809 ** 2
            t1811 = t1809 * t1810
            t1814 = t1811 ** 2
            t1812 = t1810 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (-512 * t1810 + 671 * t1811 - 4004 * t1814 + 16 + (2530 + 2002 * t1812) * t1812 + (-1573 * t1812 + 1001 * t1814 - 67) * t1809) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 381:
            t1818 = np.cos(phi)
            t1819 = t1818 ** 2
            t1820 = t1818 * t1819
            t1823 = t1820 ** 2
            t1821 = t1819 ** 2
            t1817 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t1817 ** 2 * (87 * t1819 + 240 * t1820 - 325 * t1821 + 273 * t1823 - 3 + (-546 * t1821 + 364 * t1823 - 26) * t1818) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t1818) ** (-0.1e1 / 0.2e1)) * ((1 - t1818) ** (-0.1e1 / 0.2e1))

        if Bindx == 382:
            t1825 = np.cos(phi)
            t1826 = t1825 ** 2
            t1827 = t1825 * t1826
            t1830 = t1827 ** 2
            t1828 = t1826 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t1826 + 89 * t1827 - 182 * t1830 + 1 + (116 + 91 * t1828) * t1828 + (-169 * t1828 + 91 * t1830 - 11) * t1825) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 383:
            t1840 = np.sin(phi)
            t1838 = t1840 ** 2
            t1833 = np.cos(phi)
            t1834 = t1833 ** 2
            t1836 = t1834 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t1838 ** 2 * (-20 * t1834 + 35 * t1836 + 1 + (-14 * t1834 + 28 * t1836 + 2) * t1833) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t1833) ** (-0.1e1 / 0.2e1)) * ((1 - t1833) ** (-0.1e1 / 0.2e1))

        if Bindx == 384:
            t1841 = np.cos(phi)
            t1842 = t1841 ** 2
            t1843 = t1841 * t1842
            t1846 = t1843 ** 2
            t1844 = t1842 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t1841 * (5 * t1842 + 2 * t1843 - 7 * t1844 + 3 * t1846 - 1 + (-4 * t1844 + 2 * t1846) * t1841) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 385:
            t1854 = np.sin(phi)
            t1851 = t1854 ** 2
            t1852 = t1854 * t1851
            t1848 = np.cos(phi)
            t1849 = t1848 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t1852 ** 2 * (7 * t1849 - 1 + (4 * t1849 + 2) * t1848) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t1848) ** (-0.1e1 / 0.2e1)) * ((1 - t1848) ** (-0.1e1 / 0.2e1))

        if Bindx == 386:
            t1855 = np.cos(phi)
            t1856 = t1855 ** 2
            t1857 = t1855 * t1856
            t1859 = t1857 ** 2
            t1860 = t1855 * t1859
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((2 * phi1 + 8 * phi2)) * (6 * t1857 - 2 * t1859 + 2 * t1860 - 1 + (-6 * t1857 + 2) * t1856 + (t1860 - 2) * t1855)

        if Bindx == 387:
            t1862 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t1862) ** (0.11e2 / 0.2e1)) * ((1 + t1862) ** (0.5e1 / 0.2e1)) * np.sin((3 * phi1 - 8 * phi2))

        if Bindx == 388:
            t1863 = np.cos(phi)
            t1864 = t1863 ** 2
            t1865 = t1863 * t1864
            t1868 = t1865 ** 2
            t1866 = t1864 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-21 * t1863 * t1868 + t1863 + 21 * t1864 - 23 * t1865 - t1868 - 3 + (43 * t1863 - 25 + 8 * t1866) * t1866) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 389:
            t1878 = np.sin(phi)
            t1876 = t1878 ** 2
            t1871 = np.cos(phi)
            t1872 = t1871 ** 2
            t1874 = t1872 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t1876 ** 2 * (12 * t1872 - 27 * t1874 - 1 + (10 * t1872 + 12 * t1874 - 6) * t1871) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t1871) ** (-0.1e1 / 0.2e1)) * ((1 - t1871) ** (-0.1e1 / 0.2e1))

        if Bindx == 390:
            t1879 = np.cos(phi)
            t1880 = t1879 ** 2
            t1881 = t1879 * t1880
            t1884 = t1881 ** 2
            t1882 = t1880 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t1880 - 107 * t1881 - 63 * t1884 - 1 + (-11 + 56 * t1882) * t1882 + (195 * t1882 - 105 * t1884 + 17) * t1879) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 391:
            t1888 = np.cos(phi)
            t1889 = t1888 ** 2
            t1890 = t1888 * t1889
            t1893 = t1890 ** 2
            t1891 = t1889 ** 2
            t1887 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t1887 ** 2 * (-115 * t1889 + 34 * t1890 + 351 * t1891 - 273 * t1893 + 5 + (-182 * t1891 + 182 * t1893 - 2) * t1888) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t1888) ** (-0.1e1 / 0.2e1)) * ((1 - t1888) ** (-0.1e1 / 0.2e1))

        if Bindx == 392:
            t1895 = np.cos(phi)
            t1896 = t1895 ** 2
            t1897 = t1895 * t1896
            t1900 = t1897 ** 2
            t1898 = t1896 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-459 * t1896 - 2107 * t1897 - 3913 * t1900 + 17 + (2235 + 2184 * t1898) * t1898 + (4251 * t1898 - 2457 * t1900 + 249) * t1895) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 393:
            t1904 = np.cos(phi)
            t1905 = t1904 ** 2
            t1906 = t1904 * t1905
            t1909 = t1906 ** 2
            t1907 = t1905 ** 2
            t1903 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t1903 ** 2 * (-87 * t1905 + 240 * t1906 + 325 * t1907 - 273 * t1909 + 3 + (-546 * t1907 + 364 * t1909 - 26) * t1904) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t1904) ** (-0.1e1 / 0.2e1)) * ((1 - t1904) ** (-0.1e1 / 0.2e1))

        if Bindx == 394:
            t1911 = np.cos(phi)
            t1912 = t1911 ** 2
            t1913 = t1911 * t1912
            t1916 = t1913 ** 2
            t1914 = t1912 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t1912 - 29 * t1913 - 221 * t1916 + 1 + (147 + 104 * t1914) * t1914 + (65 * t1914 - 39 * t1916 + 3) * t1911) * np.cos((3 * phi1 - phi2))

        if Bindx == 395:
            t1924 = np.sin(phi)
            t1922 = t1924 ** 2
            t1919 = np.cos(phi)
            t1920 = t1919 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t1919 * t1922 ** 2 * (3 + (-26 + 39 * t1920) * t1920) * np.sin((3 * phi1)) * ((1 + t1919) ** (-0.1e1 / 0.2e1)) * ((1 - t1919) ** (-0.1e1 / 0.2e1))

        if Bindx == 396:
            t1925 = np.cos(phi)
            t1926 = t1925 ** 2
            t1927 = t1925 * t1926
            t1930 = t1927 ** 2
            t1928 = t1926 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * (-31 * t1926 + 29 * t1927 - 221 * t1930 + 1 + (147 + 104 * t1928) * t1928 + (-65 * t1928 + 39 * t1930 - 3) * t1925) * np.cos((3 * phi1 + phi2))

        if Bindx == 397:
            t1934 = np.cos(phi)
            t1935 = t1934 ** 2
            t1936 = t1934 * t1935
            t1939 = t1936 ** 2
            t1937 = t1935 ** 2
            t1933 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.33e2) * t1933 ** 2 * (87 * t1935 + 240 * t1936 - 325 * t1937 + 273 * t1939 - 3 + (-546 * t1937 + 364 * t1939 - 26) * t1934) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t1934) ** (-0.1e1 / 0.2e1)) * ((1 - t1934) ** (-0.1e1 / 0.2e1))

        if Bindx == 398:
            t1941 = np.cos(phi)
            t1942 = t1941 ** 2
            t1943 = t1941 * t1942
            t1946 = t1943 ** 2
            t1944 = t1942 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-459 * t1942 + 2107 * t1943 - 3913 * t1946 + 17 + (2235 + 2184 * t1944) * t1944 + (-4251 * t1944 + 2457 * t1946 - 249) * t1941) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 399:
            t1950 = np.cos(phi)
            t1951 = t1950 ** 2
            t1952 = t1950 * t1951
            t1955 = t1952 ** 2
            t1953 = t1951 ** 2
            t1949 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t1949 ** 2 * (115 * t1951 + 34 * t1952 - 351 * t1953 + 273 * t1955 - 5 + (-182 * t1953 + 182 * t1955 - 2) * t1950) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t1950) ** (-0.1e1 / 0.2e1)) * ((1 - t1950) ** (-0.1e1 / 0.2e1))

        if Bindx == 400:
            t1957 = np.cos(phi)
            t1958 = t1957 ** 2
            t1959 = t1957 * t1958
            t1962 = t1959 ** 2
            t1960 = t1958 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t1958 + 107 * t1959 - 63 * t1962 - 1 + (-11 + 56 * t1960) * t1960 + (-195 * t1960 + 105 * t1962 - 17) * t1957) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 401:
            t1972 = np.sin(phi)
            t1970 = t1972 ** 2
            t1965 = np.cos(phi)
            t1966 = t1965 ** 2
            t1968 = t1966 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t1970 ** 2 * (-12 * t1966 + 27 * t1968 + 1 + (10 * t1966 + 12 * t1968 - 6) * t1965) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t1965) ** (-0.1e1 / 0.2e1)) * ((1 - t1965) ** (-0.1e1 / 0.2e1))

        if Bindx == 402:
            t1973 = np.cos(phi)
            t1974 = t1973 ** 2
            t1975 = t1973 * t1974
            t1978 = t1975 ** 2
            t1976 = t1974 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (21 * t1973 * t1978 - t1973 + 21 * t1974 + 23 * t1975 - t1978 - 3 + (-43 * t1973 - 25 + 8 * t1976) * t1976) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 403:
            t1981 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t1981) ** (0.5e1 / 0.2e1)) * ((1 + t1981) ** (0.11e2 / 0.2e1)) * np.sin((3 * phi1 + 8 * phi2))

        if Bindx == 404:
            t1982 = np.cos(phi)
            t1990 = -4 * t1982
            t1983 = t1982 ** 2
            t1985 = t1983 ** 2
            t1984 = t1982 * t1983
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((4 * phi1 - 8 * phi2)) * (4 * t1983 + t1990 + 1 + (4 * t1982 - 10 + t1985) * t1985 + (4 + (t1990 + 4) * t1984) * t1984)

        if Bindx == 405:
            t1998 = np.sin(phi)
            t1996 = t1998 ** 2
            t1991 = np.cos(phi)
            t1992 = t1991 ** 2
            t1994 = t1992 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t1996 ** 2 * (-2 * t1992 - 7 * t1994 + 1 + (8 * t1992 + 2 * t1994 - 2) * t1991) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t1991) ** (-0.1e1 / 0.2e1)) * ((1 - t1991) ** (-0.1e1 / 0.2e1))

        if Bindx == 406:
            t1999 = np.cos(phi)
            t2000 = t1999 ** 2
            t2002 = t2000 ** 2
            t2001 = t1999 * t2000
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (-t1999 + 10 * t2000 - 1 + (21 * t1999 - 20 + 5 * t2002) * t2002 + (-5 + (-15 * t1999 + 6) * t2001) * t2001) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 407:
            t2008 = np.cos(phi)
            t2009 = t2008 ** 2
            t2010 = t2008 * t2009
            t2013 = t2010 ** 2
            t2011 = t2009 ** 2
            t2007 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2007 ** 2 * (-45 * t2009 - 110 * t2010 + 185 * t2011 - 175 * t2013 + 3 + (42 * t2011 + 70 * t2013 + 30) * t2008) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t2008) ** (-0.1e1 / 0.2e1)) * ((1 - t2008) ** (-0.1e1 / 0.2e1))

        if Bindx == 408:
            t2015 = np.cos(phi)
            t2016 = t2015 ** 2
            t2017 = t2015 * t2016
            t2020 = t2017 ** 2
            t2018 = t2016 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (180 * t2016 - 770 * t2017 - 364 * t2020 - 9 + (-230 + 455 * t2018) * t2018 + (1534 * t2018 - 910 * t2020 + 114) * t2015) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 409:
            t2024 = np.cos(phi)
            t2025 = t2024 ** 2
            t2026 = t2024 * t2025
            t2029 = t2026 ** 2
            t2027 = t2025 ** 2
            t2023 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t2023 ** 2 * (-115 * t2025 + 34 * t2026 + 351 * t2027 - 273 * t2029 + 5 + (-182 * t2027 + 182 * t2029 - 2) * t2024) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t2024) ** (-0.1e1 / 0.2e1)) * ((1 - t2024) ** (-0.1e1 / 0.2e1))

        if Bindx == 410:
            t2031 = np.cos(phi)
            t2032 = t2031 ** 2
            t2033 = t2031 * t2032
            t2036 = t2033 ** 2
            t2034 = t2032 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t2032 - 89 * t2033 - 182 * t2036 + 1 + (116 + 91 * t2034) * t2034 + (169 * t2034 - 91 * t2036 + 11) * t2031) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 411:
            t2046 = np.sin(phi)
            t2044 = t2046 ** 2
            t2039 = np.cos(phi)
            t2040 = t2039 ** 2
            t2042 = t2040 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t2044 ** 2 * (26 * t2040 - 65 * t2042 - 1 + (-104 * t2040 + 130 * t2042 + 14) * t2039) * np.sin((4 * phi1 - phi2)) * ((1 + t2039) ** (-0.1e1 / 0.2e1)) * ((1 - t2039) ** (-0.1e1 / 0.2e1))

        if Bindx == 412:
            t2047 = np.cos(phi)
            t2048 = t2047 ** 2
            t2049 = t2048 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t2048 + 1 + (-156 * t2048 + 118 + 65 * t2049) * t2049) * np.cos((4 * phi1))

        if Bindx == 413:
            t2059 = np.sin(phi)
            t2057 = t2059 ** 2
            t2052 = np.cos(phi)
            t2053 = t2052 ** 2
            t2055 = t2053 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t2057 ** 2 * (-26 * t2053 + 65 * t2055 + 1 + (-104 * t2053 + 130 * t2055 + 14) * t2052) * np.sin((4 * phi1 + phi2)) * ((1 + t2052) ** (-0.1e1 / 0.2e1)) * ((1 - t2052) ** (-0.1e1 / 0.2e1))

        if Bindx == 414:
            t2060 = np.cos(phi)
            t2061 = t2060 ** 2
            t2062 = t2060 * t2061
            t2065 = t2062 ** 2
            t2063 = t2061 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.55e2) * (-26 * t2061 + 89 * t2062 - 182 * t2065 + 1 + (116 + 91 * t2063) * t2063 + (-169 * t2063 + 91 * t2065 - 11) * t2060) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 415:
            t2069 = np.cos(phi)
            t2070 = t2069 ** 2
            t2071 = t2069 * t2070
            t2074 = t2071 ** 2
            t2072 = t2070 ** 2
            t2068 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t2068 ** 2 * (115 * t2070 + 34 * t2071 - 351 * t2072 + 273 * t2074 - 5 + (-182 * t2072 + 182 * t2074 - 2) * t2069) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t2069) ** (-0.1e1 / 0.2e1)) * ((1 - t2069) ** (-0.1e1 / 0.2e1))

        if Bindx == 416:
            t2076 = np.cos(phi)
            t2077 = t2076 ** 2
            t2078 = t2076 * t2077
            t2081 = t2078 ** 2
            t2079 = t2077 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (180 * t2077 + 770 * t2078 - 364 * t2081 - 9 + (-230 + 455 * t2079) * t2079 + (-1534 * t2079 + 910 * t2081 - 114) * t2076) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 417:
            t2085 = np.cos(phi)
            t2086 = t2085 ** 2
            t2087 = t2085 * t2086
            t2090 = t2087 ** 2
            t2088 = t2086 ** 2
            t2084 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2084 ** 2 * (45 * t2086 - 110 * t2087 - 185 * t2088 + 175 * t2090 - 3 + (42 * t2088 + 70 * t2090 + 30) * t2085) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t2085) ** (-0.1e1 / 0.2e1)) * ((1 - t2085) ** (-0.1e1 / 0.2e1))

        if Bindx == 418:
            t2092 = np.cos(phi)
            t2093 = t2092 ** 2
            t2095 = t2093 ** 2
            t2094 = t2092 * t2093
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (t2092 + 10 * t2093 - 1 + (-21 * t2092 - 20 + 5 * t2095) * t2095 + (5 + (15 * t2092 + 6) * t2094) * t2094) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 419:
            t2107 = np.sin(phi)
            t2105 = t2107 ** 2
            t2100 = np.cos(phi)
            t2101 = t2100 ** 2
            t2103 = t2101 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2105 ** 2 * (2 * t2101 + 7 * t2103 - 1 + (8 * t2101 + 2 * t2103 - 2) * t2100) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t2100) ** (-0.1e1 / 0.2e1)) * ((1 - t2100) ** (-0.1e1 / 0.2e1))

        if Bindx == 420:
            t2108 = np.cos(phi)
            t2109 = t2108 ** 2
            t2110 = t2108 * t2109
            t2116 = 4 * t2110 ** 2
            t2111 = t2109 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((4 * phi1 + 8 * phi2)) * (4 * t2109 - 4 * t2110 + t2116 + 1 + (-10 + t2111) * t2111 + (-4 * t2111 + t2116 + 4) * t2108)

        if Bindx == 421:
            t2117 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2117) ** (0.13e2 / 0.2e1)) * ((1 + t2117) ** (0.3e1 / 0.2e1)) * np.sin((5 * phi1 - 8 * phi2))

        if Bindx == 422:
            t2118 = np.cos(phi)
            t2119 = t2118 ** 2
            t2120 = t2118 * t2119
            t2123 = t2120 ** 2
            t2121 = t2119 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2119 + 47 * t2120 + 47 * t2123 + 5 + (-65 + 8 * t2121) * t2121 + (5 * t2121 - 35 * t2123 - 17) * t2118) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 423:
            t2127 = np.cos(phi)
            t2128 = t2127 ** 2
            t2129 = t2127 * t2128
            t2132 = t2129 ** 2
            t2130 = t2128 ** 2
            t2126 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2126 ** 2 * (35 * t2128 - 80 * t2129 + 15 * t2130 - 75 * t2132 - 7 + (82 * t2130 + 20 * t2132 + 10) * t2127) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t2127) ** (-0.1e1 / 0.2e1)) * ((1 - t2127) ** (-0.1e1 / 0.2e1))

        if Bindx == 424:
            t2134 = np.cos(phi)
            t2135 = t2134 ** 2
            t2136 = t2134 * t2135
            t2139 = t2136 ** 2
            t2137 = t2135 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (495 * t2135 - 145 * t2136 + 469 * t2139 - 45 + (-1135 + 280 * t2137) * t2137 + (1025 * t2137 - 875 * t2139 - 69) * t2134) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 425:
            t2143 = np.cos(phi)
            t2144 = t2143 ** 2
            t2145 = t2143 * t2144
            t2148 = t2145 ** 2
            t2146 = t2144 ** 2
            t2142 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2142 ** 2 * (-45 * t2144 - 110 * t2145 + 185 * t2146 - 175 * t2148 + 3 + (42 * t2146 + 70 * t2148 + 30) * t2143) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t2143) ** (-0.1e1 / 0.2e1)) * ((1 - t2143) ** (-0.1e1 / 0.2e1))

        if Bindx == 426:
            t2150 = np.cos(phi)
            t2151 = t2150 ** 2
            t2152 = t2150 * t2151
            t2155 = t2152 ** 2
            t2153 = t2151 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t2151 - 107 * t2152 - 63 * t2155 - 1 + (-11 + 56 * t2153) * t2153 + (195 * t2153 - 105 * t2155 + 17) * t2150) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 427:
            t2165 = np.sin(phi)
            t2163 = t2165 ** 2
            t2158 = np.cos(phi)
            t2159 = t2158 ** 2
            t2161 = t2159 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t2163 ** 2 * (20 * t2159 - 35 * t2161 - 1 + (-14 * t2159 + 28 * t2161 + 2) * t2158) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t2158) ** (-0.1e1 / 0.2e1)) * ((1 - t2158) ** (-0.1e1 / 0.2e1))

        if Bindx == 428:
            t2166 = np.cos(phi)
            t2167 = t2166 ** 2
            t2168 = t2166 * t2167
            t2171 = t2168 ** 2
            t2169 = t2167 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t2167 - 35 * t2168 - 101 * t2171 + 1 + (83 + 40 * t2169) * t2169 + (55 * t2169 - 25 * t2171 + 5) * t2166) * np.cos((5 * phi1 - phi2))

        if Bindx == 429:
            t2178 = np.sin(phi)
            t2175 = t2178 ** 2
            t2176 = t2178 * t2175
            t2174 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t2174 * t2176 ** 2 * (5 * t2174 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t2174) ** (-0.1e1 / 0.2e1)) * ((1 - t2174) ** (-0.1e1 / 0.2e1))

        if Bindx == 430:
            t2179 = np.cos(phi)
            t2180 = t2179 ** 2
            t2181 = t2179 * t2180
            t2184 = t2181 ** 2
            t2182 = t2180 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (-23 * t2180 + 35 * t2181 - 101 * t2184 + 1 + (83 + 40 * t2182) * t2182 + (-55 * t2182 + 25 * t2184 - 5) * t2179) * np.cos((5 * phi1 + phi2))

        if Bindx == 431:
            t2194 = np.sin(phi)
            t2192 = t2194 ** 2
            t2187 = np.cos(phi)
            t2188 = t2187 ** 2
            t2190 = t2188 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.715e3) * t2192 ** 2 * (-20 * t2188 + 35 * t2190 + 1 + (-14 * t2188 + 28 * t2190 + 2) * t2187) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t2187) ** (-0.1e1 / 0.2e1)) * ((1 - t2187) ** (-0.1e1 / 0.2e1))

        if Bindx == 432:
            t2195 = np.cos(phi)
            t2196 = t2195 ** 2
            t2197 = t2195 * t2196
            t2200 = t2197 ** 2
            t2198 = t2196 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.195e3) * (19 * t2196 + 107 * t2197 - 63 * t2200 - 1 + (-11 + 56 * t2198) * t2198 + (-195 * t2198 + 105 * t2200 - 17) * t2195) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 433:
            t2204 = np.cos(phi)
            t2205 = t2204 ** 2
            t2206 = t2204 * t2205
            t2209 = t2206 ** 2
            t2207 = t2205 ** 2
            t2203 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2203 ** 2 * (45 * t2205 - 110 * t2206 - 185 * t2207 + 175 * t2209 - 3 + (42 * t2207 + 70 * t2209 + 30) * t2204) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t2204) ** (-0.1e1 / 0.2e1)) * ((1 - t2204) ** (-0.1e1 / 0.2e1))

        if Bindx == 434:
            t2211 = np.cos(phi)
            t2212 = t2211 ** 2
            t2213 = t2211 * t2212
            t2216 = t2213 ** 2
            t2214 = t2212 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (495 * t2212 + 145 * t2213 + 469 * t2216 - 45 + (-1135 + 280 * t2214) * t2214 + (-1025 * t2214 + 875 * t2216 + 69) * t2211) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 435:
            t2220 = np.cos(phi)
            t2221 = t2220 ** 2
            t2222 = t2220 * t2221
            t2225 = t2222 ** 2
            t2223 = t2221 ** 2
            t2219 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2219 ** 2 * (-35 * t2221 - 80 * t2222 - 15 * t2223 + 75 * t2225 + 7 + (82 * t2223 + 20 * t2225 + 10) * t2220) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t2220) ** (-0.1e1 / 0.2e1)) * ((1 - t2220) ** (-0.1e1 / 0.2e1))

        if Bindx == 436:
            t2227 = np.cos(phi)
            t2228 = t2227 ** 2
            t2229 = t2227 * t2228
            t2232 = t2229 ** 2
            t2230 = t2228 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2228 - 47 * t2229 + 47 * t2232 + 5 + (-65 + 8 * t2230) * t2230 + (-5 * t2230 + 35 * t2232 + 17) * t2227) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 437:
            t2235 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2235) ** (0.3e1 / 0.2e1)) * ((1 + t2235) ** (0.13e2 / 0.2e1)) * np.sin((5 * phi1 + 8 * phi2))

        if Bindx == 438:
            t2236 = np.cos(phi)
            t2237 = t2236 ** 2
            t2243 = -14 * t2237
            t2238 = t2236 * t2237
            t2240 = t2238 ** 2
            t2241 = t2236 * t2240
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (14 * t2240 - 6 * t2241 + t2243 - 1 + (t2243 + 14) * t2238 + (t2241 + 6) * t2236) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 439:
            t2245 = np.cos(phi)
            t2246 = t2245 ** 2
            t2247 = t2246 ** 2
            t2248 = t2245 * t2247
            t2249 = t2245 * t2248
            t2244 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2244 ** 2 * (21 * t2246 - 35 * t2247 + 42 * t2248 - 21 * t2249 + 3 + (4 * t2249 - 14) * t2245) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t2245) ** (-0.1e1 / 0.2e1)) * ((1 - t2245) ** (-0.1e1 / 0.2e1))

        if Bindx == 440:
            t2251 = np.cos(phi)
            t2252 = t2251 ** 2
            t2253 = t2251 * t2252
            t2256 = t2253 ** 2
            t2254 = t2252 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (175 * t2253 + 196 * t2256 + 16 + (-210 + 30 * t2254) * t2254 + (-21 * t2254 - 135 * t2256 - 51) * t2251) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 441:
            t2260 = np.cos(phi)
            t2261 = t2260 ** 2
            t2262 = t2260 * t2261
            t2265 = t2262 ** 2
            t2263 = t2261 ** 2
            t2259 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2259 ** 2 * (35 * t2261 - 80 * t2262 + 15 * t2263 - 75 * t2265 - 7 + (82 * t2263 + 20 * t2265 + 10) * t2260) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t2260) ** (-0.1e1 / 0.2e1)) * ((1 - t2260) ** (-0.1e1 / 0.2e1))

        if Bindx == 442:
            t2267 = np.cos(phi)
            t2268 = t2267 ** 2
            t2270 = t2268 ** 2
            t2269 = t2267 * t2268
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (-t2267 + 10 * t2268 - 1 + (21 * t2267 - 20 + 5 * t2270) * t2270 + (-5 + (-15 * t2267 + 6) * t2269) * t2269) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 443:
            t2282 = np.sin(phi)
            t2280 = t2282 ** 2
            t2275 = np.cos(phi)
            t2276 = t2275 ** 2
            t2278 = t2276 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t2280 ** 2 * (12 * t2276 - 27 * t2278 - 1 + (10 * t2276 + 12 * t2278 - 6) * t2275) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t2275) ** (-0.1e1 / 0.2e1)) * ((1 - t2275) ** (-0.1e1 / 0.2e1))

        if Bindx == 444:
            t2283 = np.cos(phi)
            t2284 = t2283 ** 2
            t2285 = t2283 * t2284
            t2288 = t2285 ** 2
            t2286 = t2284 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t2283 * (-5 * t2284 + 2 * t2285 + 7 * t2286 - 3 * t2288 + 1 + (-4 * t2286 + 2 * t2288) * t2283) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 445:
            t2296 = np.sin(phi)
            t2293 = t2296 ** 2
            t2294 = t2296 * t2293
            t2290 = np.cos(phi)
            t2291 = t2290 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t2294 ** 2 * (-15 * t2291 + 1 + (20 * t2291 - 6) * t2290) * np.sin((6 * phi1 - phi2)) * ((1 + t2290) ** (-0.1e1 / 0.2e1)) * ((1 - t2290) ** (-0.1e1 / 0.2e1))

        if Bindx == 446:
            t2297 = np.cos(phi)
            t2298 = t2297 ** 2
            t2299 = t2298 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t2298 + 1 + (-46 * t2298 + 48 + 15 * t2299) * t2299) * np.cos((6 * phi1))

        if Bindx == 447:
            t2308 = np.sin(phi)
            t2305 = t2308 ** 2
            t2306 = t2308 * t2305
            t2302 = np.cos(phi)
            t2303 = t2302 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.429e3) * t2306 ** 2 * (15 * t2303 - 1 + (20 * t2303 - 6) * t2302) * np.sin((6 * phi1 + phi2)) * ((1 + t2302) ** (-0.1e1 / 0.2e1)) * ((1 - t2302) ** (-0.1e1 / 0.2e1))

        if Bindx == 448:
            t2309 = np.cos(phi)
            t2310 = t2309 ** 2
            t2311 = t2309 * t2310
            t2314 = t2311 ** 2
            t2312 = t2310 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15015e5) * t2309 * (5 * t2310 + 2 * t2311 - 7 * t2312 + 3 * t2314 - 1 + (-4 * t2312 + 2 * t2314) * t2309) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 449:
            t2323 = np.sin(phi)
            t2321 = t2323 ** 2
            t2316 = np.cos(phi)
            t2317 = t2316 ** 2
            t2319 = t2317 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.455e3) * t2321 ** 2 * (-12 * t2317 + 27 * t2319 + 1 + (10 * t2317 + 12 * t2319 - 6) * t2316) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t2316) ** (-0.1e1 / 0.2e1)) * ((1 - t2316) ** (-0.1e1 / 0.2e1))

        if Bindx == 450:
            t2324 = np.cos(phi)
            t2325 = t2324 ** 2
            t2327 = t2325 ** 2
            t2326 = t2324 * t2325
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.273e3) * (t2324 + 10 * t2325 - 1 + (-21 * t2324 - 20 + 5 * t2327) * t2327 + (5 + (15 * t2324 + 6) * t2326) * t2326) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 451:
            t2333 = np.cos(phi)
            t2334 = t2333 ** 2
            t2335 = t2333 * t2334
            t2338 = t2335 ** 2
            t2336 = t2334 ** 2
            t2332 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.21e2) * t2332 ** 2 * (-35 * t2334 - 80 * t2335 - 15 * t2336 + 75 * t2338 + 7 + (82 * t2336 + 20 * t2338 + 10) * t2333) * np.sin((6 * phi1 + 5 * phi2)) * ((1 - t2333) ** (-0.1e1 / 0.2e1)) * ((1 + t2333) ** (-0.1e1 / 0.2e1))

        if Bindx == 452:
            t2340 = np.cos(phi)
            t2341 = t2340 ** 2
            t2342 = t2340 * t2341
            t2345 = t2342 ** 2
            t2343 = t2341 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * (-175 * t2342 + 196 * t2345 + 16 + (-210 + 30 * t2343) * t2343 + (21 * t2343 + 135 * t2345 + 51) * t2340) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 453:
            t2349 = np.cos(phi)
            t2350 = t2349 ** 2
            t2351 = t2350 ** 2
            t2352 = t2349 * t2351
            t2353 = t2349 * t2352
            t2348 = np.sin(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2348 ** 2 * (-21 * t2350 + 35 * t2351 + 42 * t2352 + 21 * t2353 - 3 + (4 * t2353 - 14) * t2349) * np.sin((6 * phi1 + 7 * phi2)) * ((1 - t2349) ** (-0.1e1 / 0.2e1)) * ((1 + t2349) ** (-0.1e1 / 0.2e1))

        if Bindx == 454:
            t2355 = np.cos(phi)
            t2356 = t2355 ** 2
            t2357 = t2355 * t2356
            t2359 = t2357 ** 2
            t2360 = t2355 * t2359
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (-14 * t2357 + 14 * t2359 + 6 * t2360 - 1 + (14 * t2357 - 14) * t2356 + (t2360 - 6) * t2355) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 455:
            t2362 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * ((1 - t2362) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t2362)) * np.sin((7 * phi1 - 8 * phi2))

        if Bindx == 456:
            t2363 = np.cos(phi)
            t2364 = t2363 ** 2
            t2365 = t2363 * t2364
            t2368 = t2365 ** 2
            t2366 = t2364 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-91 * t2364 + 77 * t2365 + 119 * t2368 - 7 + (35 + 8 * t2366) * t2366 + (-133 * t2366 - 49 * t2368 + 41) * t2363) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 457:
            t2372 = np.cos(phi)
            t2373 = t2372 ** 2
            t2374 = t2373 ** 2
            t2375 = t2372 * t2374
            t2376 = t2372 * t2375
            t2371 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2371 ** 2 * (21 * t2373 - 35 * t2374 + 42 * t2375 - 21 * t2376 + 3 + (4 * t2376 - 14) * t2372) * np.sin((7 * phi1 - 6 * phi2)) * ((1 - t2372) ** (-0.1e1 / 0.2e1)) * ((1 + t2372) ** (-0.1e1 / 0.2e1))

        if Bindx == 458:
            t2378 = np.cos(phi)
            t2379 = t2378 ** 2
            t2380 = t2378 * t2379
            t2383 = t2380 ** 2
            t2381 = t2379 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2379 + 47 * t2380 + 47 * t2383 + 5 + (-65 + 8 * t2381) * t2381 + (5 * t2381 - 35 * t2383 - 17) * t2378) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 459:
            t2393 = np.sin(phi)
            t2391 = t2393 ** 2
            t2386 = np.cos(phi)
            t2387 = t2386 ** 2
            t2389 = t2387 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2391 ** 2 * (-2 * t2387 - 7 * t2389 + 1 + (8 * t2387 + 2 * t2389 - 2) * t2386) * np.sin((7 * phi1 - 4 * phi2)) * ((1 - t2386) ** (-0.1e1 / 0.2e1)) * ((1 + t2386) ** (-0.1e1 / 0.2e1))

        if Bindx == 460:
            t2394 = np.cos(phi)
            t2395 = t2394 ** 2
            t2396 = t2394 * t2395
            t2399 = t2396 ** 2
            t2397 = t2395 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-21 * t2394 * t2399 + t2394 + 21 * t2395 - 23 * t2396 - t2399 - 3 + (43 * t2394 - 25 + 8 * t2397) * t2397) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 461:
            t2408 = np.sin(phi)
            t2405 = t2408 ** 2
            t2406 = t2408 * t2405
            t2402 = np.cos(phi)
            t2403 = t2402 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t2406 ** 2 * (-7 * t2403 + 1 + (4 * t2403 + 2) * t2402) * np.sin((7 * phi1 - 2 * phi2)) * ((1 - t2402) ** (-0.1e1 / 0.2e1)) * ((1 + t2402) ** (-0.1e1 / 0.2e1))

        if Bindx == 462:
            t2409 = np.cos(phi)
            t2410 = t2409 ** 2
            t2411 = t2409 * t2410
            t2414 = t2411 ** 2
            t2412 = t2410 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t2410 - 21 * t2411 - 25 * t2414 + 1 + (27 + 8 * t2412) * t2412 + (21 * t2412 - 7 * t2414 + 7) * t2409) * np.cos((7 * phi1 - phi2))

        if Bindx == 463:
            t2421 = np.sin(phi)
            t2418 = t2421 ** 2
            t2419 = t2418 ** 2
            t2417 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t2417 * t2419 ** 2 * np.sin((7 * phi1)) * ((1 - t2417) ** (-0.1e1 / 0.2e1)) * ((1 + t2417) ** (-0.1e1 / 0.2e1))

        if Bindx == 464:
            t2422 = np.cos(phi)
            t2423 = t2422 ** 2
            t2424 = t2422 * t2423
            t2427 = t2424 ** 2
            t2425 = t2423 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * (-11 * t2423 + 21 * t2424 - 25 * t2427 + 1 + (27 + 8 * t2425) * t2425 + (-21 * t2425 + 7 * t2427 - 7) * t2422) * np.cos((7 * phi1 + phi2))

        if Bindx == 465:
            t2436 = np.sin(phi)
            t2433 = t2436 ** 2
            t2434 = t2436 * t2433
            t2430 = np.cos(phi)
            t2431 = t2430 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * t2434 ** 2 * (7 * t2431 - 1 + (4 * t2431 + 2) * t2430) * np.sin((7 * phi1 + 2 * phi2)) * ((1 - t2430) ** (-0.1e1 / 0.2e1)) * ((1 + t2430) ** (-0.1e1 / 0.2e1))

        if Bindx == 466:
            t2437 = np.cos(phi)
            t2438 = t2437 ** 2
            t2439 = t2437 * t2438
            t2442 = t2439 ** 2
            t2440 = t2438 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (21 * t2437 * t2442 - t2437 + 21 * t2438 + 23 * t2439 - t2442 - 3 + (-43 * t2437 - 25 + 8 * t2440) * t2440) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 467:
            t2452 = np.sin(phi)
            t2450 = t2452 ** 2
            t2445 = np.cos(phi)
            t2446 = t2445 ** 2
            t2448 = t2446 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * t2450 ** 2 * (2 * t2446 + 7 * t2448 - 1 + (8 * t2446 + 2 * t2448 - 2) * t2445) * np.sin((7 * phi1 + 4 * phi2)) * ((1 - t2445) ** (-0.1e1 / 0.2e1)) * ((1 + t2445) ** (-0.1e1 / 0.2e1))

        if Bindx == 468:
            t2453 = np.cos(phi)
            t2454 = t2453 ** 2
            t2455 = t2453 * t2454
            t2458 = t2455 ** 2
            t2456 = t2454 ** 2
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (5 * t2454 - 47 * t2455 + 47 * t2458 + 5 + (-65 + 8 * t2456) * t2456 + (-5 * t2456 + 35 * t2458 + 17) * t2453) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 469:
            t2462 = np.cos(phi)
            t2463 = t2462 ** 2
            t2464 = t2463 ** 2
            t2465 = t2462 * t2464
            t2466 = t2462 * t2465
            t2461 = np.sin(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * t2461 ** 2 * (-21 * t2463 + 35 * t2464 + 42 * t2465 + 21 * t2466 - 3 + (4 * t2466 - 14) * t2462) * np.sin((7 * phi1 + 6 * phi2)) * ((1 - t2462) ** (-0.1e1 / 0.2e1)) * ((1 + t2462) ** (-0.1e1 / 0.2e1))

        if Bindx == 470:
            t2468 = np.cos(phi)
            t2469 = t2468 ** 2
            t2470 = t2468 * t2469
            t2473 = t2470 ** 2
            t2471 = t2469 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * (-91 * t2469 - 77 * t2470 + 119 * t2473 - 7 + (35 + 8 * t2471) * t2471 + (133 * t2471 + 49 * t2473 - 41) * t2468) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 471:
            t2476 = np.cos(phi)
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt((1 - t2476)) * ((1 + t2476) ** (0.15e2 / 0.2e1)) * np.sin((7 * phi1 + 8 * phi2))

        if Bindx == 472:
            t2477 = np.cos(phi)
            t2485 = -8 * t2477
            t2478 = t2477 ** 2
            t2480 = t2478 ** 2
            t2479 = t2477 * t2478
            tfunc[..., c] = 0.17e2 / 0.256e3 * np.sqrt(0.2e1) * np.cos((8 * phi1 - 8 * phi2)) * (28 * t2478 + t2485 + 1 + (-56 * t2477 + 70 + t2480) * t2480 + (-56 + (t2485 + 28) * t2479) * t2479)

        if Bindx == 473:
            t2486 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * ((1 - t2486) ** (0.15e2 / 0.2e1)) * np.sqrt((1 + t2486)) * np.sin((8 * phi1 - 7 * phi2))

        if Bindx == 474:
            t2487 = np.cos(phi)
            t2488 = t2487 ** 2
            t2494 = -14 * t2488
            t2489 = t2487 * t2488
            t2491 = t2489 ** 2
            t2492 = t2487 * t2491
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (14 * t2491 - 6 * t2492 + t2494 - 1 + (t2494 + 14) * t2489 + (t2492 + 6) * t2487) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 475:
            t2495 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2495) ** (0.13e2 / 0.2e1)) * ((1 + t2495) ** (0.3e1 / 0.2e1)) * np.sin((8 * phi1 - 5 * phi2))

        if Bindx == 476:
            t2496 = np.cos(phi)
            t2504 = -4 * t2496
            t2497 = t2496 ** 2
            t2499 = t2497 ** 2
            t2498 = t2496 * t2497
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((8 * phi1 - 4 * phi2)) * (4 * t2497 + t2504 + 1 + (4 * t2496 - 10 + t2499) * t2499 + (4 + (t2504 + 4) * t2498) * t2498)

        if Bindx == 477:
            t2505 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t2505) ** (0.11e2 / 0.2e1)) * ((1 + t2505) ** (0.5e1 / 0.2e1)) * np.sin((8 * phi1 - 3 * phi2))

        if Bindx == 478:
            t2506 = np.cos(phi)
            t2507 = t2506 ** 2
            t2508 = t2506 * t2507
            t2510 = t2508 ** 2
            t2511 = t2506 * t2510
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((8 * phi1 - 2 * phi2)) * (-6 * t2508 - 2 * t2510 - 2 * t2511 - 1 + (6 * t2508 + 2) * t2507 + (t2511 + 2) * t2506)

        if Bindx == 479:
            t2513 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t2513) ** (0.9e1 / 0.2e1)) * ((1 + t2513) ** (0.7e1 / 0.2e1)) * np.sin((8 * phi1 - phi2))

        if Bindx == 480:
            t2514 = np.cos(phi)
            t2515 = t2514 ** 2
            t2519 = -4 * t2515
            t2516 = t2515 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t2519 + 1 + (t2519 + 6 + t2516) * t2516)

        if Bindx == 481:
            t2520 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((1 - t2520) ** (0.7e1 / 0.2e1)) * ((1 + t2520) ** (0.9e1 / 0.2e1)) * np.sin((8 * phi1 + phi2))

        if Bindx == 482:
            t2521 = np.cos(phi)
            t2522 = t2521 ** 2
            t2523 = t2521 * t2522
            t2525 = t2523 ** 2
            t2526 = t2521 * t2525
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.1001e4) * np.cos((8 * phi1 + 2 * phi2)) * (6 * t2523 - 2 * t2525 + 2 * t2526 - 1 + (-6 * t2523 + 2) * t2522 + (t2526 - 2) * t2521)

        if Bindx == 483:
            t2528 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * ((1 - t2528) ** (0.5e1 / 0.2e1)) * ((1 + t2528) ** (0.11e2 / 0.2e1)) * np.sin((8 * phi1 + 3 * phi2))

        if Bindx == 484:
            t2529 = np.cos(phi)
            t2530 = t2529 ** 2
            t2531 = t2529 * t2530
            t2537 = 4 * t2531 ** 2
            t2532 = t2530 ** 2
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.455e3) * np.cos((8 * phi1 + 4 * phi2)) * (4 * t2530 - 4 * t2531 + t2537 + 1 + (-10 + t2532) * t2532 + (-4 * t2532 + t2537 + 4) * t2529)

        if Bindx == 485:
            t2538 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 - t2538) ** (0.3e1 / 0.2e1)) * ((1 + t2538) ** (0.13e2 / 0.2e1)) * np.sin((8 * phi1 + 5 * phi2))

        if Bindx == 486:
            t2539 = np.cos(phi)
            t2540 = t2539 ** 2
            t2541 = t2539 * t2540
            t2543 = t2541 ** 2
            t2544 = t2539 * t2543
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.15e2) * (-14 * t2541 + 14 * t2543 + 6 * t2544 - 1 + (14 * t2541 - 14) * t2540 + (t2544 - 6) * t2539) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 487:
            t2546 = np.cos(phi)
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * ((1 + t2546) ** (0.15e2 / 0.2e1)) * np.sin((8 * phi1 + 7 * phi2)) * np.sqrt((1 - t2546))

        if Bindx == 488:
            t2547 = np.cos(phi)
            t2555 = 8 * t2547
            t2548 = t2547 ** 2
            t2550 = t2548 ** 2
            t2549 = t2547 * t2548
            tfunc[..., c] = 0.17e2 / 0.256e3 * np.sqrt(0.2e1) * np.cos((8 * phi1 + 8 * phi2)) * (28 * t2548 + t2555 + 1 + (56 * t2547 + 70 + t2550) * t2550 + (56 + (t2555 + 28) * t2549) * t2549)

        if Bindx == 489:
            t2556 = np.cos(phi)
            t2557 = t2556 ** 2
            t2558 = t2557 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * t2556 * (-4620 * t2557 + 315 + (-25740 * t2557 + 18018 + 12155 * t2558) * t2558)

        if Bindx == 490:
            t2562 = np.cos(phi)
            t2563 = t2562 ** 2
            t2564 = t2563 ** 2
            t2561 = np.sin(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.5e1) * t2561 ** 2 * (-308 * t2563 + 7 + (-4004 * t2563 + 2002 + 2431 * t2564) * t2564) * np.sin(phi2) * ((1 + t2562) ** (-0.1e1 / 0.2e1)) * ((1 - t2562) ** (-0.1e1 / 0.2e1))

        if Bindx == 491:
            t2567 = np.cos(phi)
            t2568 = t2567 ** 2
            t2569 = t2568 ** 2
            tfunc[..., c] = -0.57e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t2567 * (-98 * t2568 + 7 + (-494 * t2568 + 364 + 221 * t2569) * t2569) * np.cos((2 * phi2))

        if Bindx == 492:
            t2578 = np.sin(phi)
            t2576 = t2578 ** 2
            t2572 = np.cos(phi)
            t2573 = t2572 ** 2
            t2574 = t2573 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * t2576 ** 2 * (-195 * t2574 - 1 + (221 * t2574 + 39) * t2573) * np.sin((3 * phi2)) * ((1 + t2572) ** (-0.1e1 / 0.2e1)) * ((1 - t2572) ** (-0.1e1 / 0.2e1))

        if Bindx == 493:
            t2579 = np.cos(phi)
            t2580 = t2579 ** 2
            t2581 = t2580 ** 2
            tfunc[..., c] = 0.57e2 / 0.64e2 * t2579 * np.sqrt(0.5005e4) * (-12 * t2580 + 1 + (-44 * t2580 + 38 + 17 * t2581) * t2581) * np.cos((4 * phi2))

        if Bindx == 494:
            t2590 = np.sin(phi)
            t2587 = t2590 ** 2
            t2588 = t2590 * t2587
            t2584 = np.cos(phi)
            t2585 = t2584 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * t2588 ** 2 * (1 + (-30 + 85 * t2585) * t2585) * np.sin((5 * phi2)) * ((1 + t2584) ** (-0.1e1 / 0.2e1)) * ((1 - t2584) ** (-0.1e1 / 0.2e1))

        if Bindx == 495:
            t2591 = np.cos(phi)
            t2592 = t2591 ** 2
            t2593 = t2592 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t2591 * (-26 * t2592 + 3 + (-54 * t2592 + 60 + 17 * t2593) * t2593) * np.cos((6 * phi2))

        if Bindx == 496:
            t2600 = np.sin(phi)
            t2597 = t2600 ** 2
            t2598 = t2597 ** 2
            t2596 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * t2598 ** 2 * (17 * t2596 ** 2 - 1) * np.sin((7 * phi2)) * ((1 + t2596) ** (-0.1e1 / 0.2e1)) * ((1 - t2596) ** (-0.1e1 / 0.2e1))

        if Bindx == 497:
            t2601 = np.cos(phi)
            t2602 = t2601 ** 2
            t2606 = -4 * t2602
            t2603 = t2602 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.12155e5) * t2601 * np.cos((8 * phi2)) * (t2606 + 1 + (t2606 + 6 + t2603) * t2603)

        if Bindx == 498:
            t2607 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.12155e5) * ((1 - t2607) ** (0.9e1 / 0.2e1)) * ((1 + t2607) ** (0.9e1 / 0.2e1)) * np.sin((9 * phi2))

        if Bindx == 499:
            t2608 = np.cos(phi)
            t2609 = t2608 ** 2
            t2610 = t2608 * t2609
            t2611 = t2609 ** 2
            t2617 = -4 * t2610 ** 2 + 1 + (6 + t2611) * t2611
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((phi1 - 9 * phi2)) * (t2617 * t2608 + 4 * t2609 - 4 * t2610 - t2617)

        if Bindx == 500:
            t2622 = np.sin(phi)
            t2619 = t2622 ** 2
            t2620 = t2619 ** 2
            t2618 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t2620 ** 2 * (-1 + (-8 + 9 * t2618) * t2618) * np.sin((phi1 - 8 * phi2)) * ((1 + t2618) ** (-0.1e1 / 0.2e1)) * ((1 - t2618) ** (-0.1e1 / 0.2e1))

        if Bindx == 501:
            t2623 = np.cos(phi)
            t2624 = t2623 ** 2
            t2626 = t2624 ** 2
            t2630 = t2626 ** 2
            t2625 = t2623 * t2624
            t2628 = t2625 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (140 * t2624 - 276 * t2625 - 378 * t2626 + 364 * t2628 - 119 * t2630 - 7 + (582 * t2626 - 500 * t2628 + 153 * t2630 + 41) * t2623) * np.cos((phi1 - 7 * phi2))

        if Bindx == 502:
            t2639 = np.sin(phi)
            t2636 = t2639 ** 2
            t2637 = t2639 * t2636
            t2632 = np.cos(phi)
            t2633 = t2632 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t2637 ** 2 * (6 * t2632 + 1 + (-34 * t2632 - 24 + 51 * t2633) * t2633) * np.sin((phi1 - 6 * phi2)) * ((1 + t2632) ** (-0.1e1 / 0.2e1)) * ((1 - t2632) ** (-0.1e1 / 0.2e1))

        if Bindx == 503:
            t2640 = np.cos(phi)
            t2641 = t2640 ** 2
            t2643 = t2641 ** 2
            t2647 = t2643 ** 2
            t2642 = t2640 * t2641
            t2645 = t2642 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (32 * t2641 - 136 * t2642 - 146 * t2643 + 200 * t2645 - 85 * t2647 - 1 + (386 * t2643 - 416 * t2645 + 153 * t2647 + 13) * t2640) * np.cos((phi1 - 5 * phi2))

        if Bindx == 504:
            t2657 = np.sin(phi)
            t2655 = t2657 ** 2
            t2649 = np.cos(phi)
            t2650 = t2649 ** 2
            t2652 = t2650 ** 2
            t2651 = t2649 * t2650
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t2655 ** 2 * (35 * t2650 - 155 * t2652 - 1 + (40 + 153 * t2651) * t2651 + (-68 * t2652 - 4) * t2649) * np.sin((phi1 - 4 * phi2)) * ((1 + t2649) ** (-0.1e1 / 0.2e1)) * ((1 - t2649) ** (-0.1e1 / 0.2e1))

        if Bindx == 505:
            t2658 = np.cos(phi)
            t2659 = t2658 ** 2
            t2661 = t2659 ** 2
            t2665 = t2661 ** 2
            t2660 = t2658 * t2659
            t2663 = t2660 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (40 * t2659 - 352 * t2660 - 234 * t2661 + 416 * t2663 - 221 * t2665 - 1 + (1222 * t2661 - 1560 * t2663 + 663 * t2665 + 27) * t2658) * np.cos((phi1 - 3 * phi2))

        if Bindx == 506:
            t2668 = np.cos(phi)
            t2669 = t2668 ** 2
            t2670 = t2668 * t2669
            t2673 = t2670 ** 2
            t2671 = t2669 ** 2
            t2667 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t2667 ** 2 * (-294 * t2669 - 182 * t2670 - 3458 * t2673 + 7 + (1820 + 1989 * t2671) * t2671 + (546 * t2671 - 442 * t2673 + 14) * t2668) * np.sin((phi1 - 2 * phi2)) * ((1 + t2668) ** (-0.1e1 / 0.2e1)) * ((1 - t2668) ** (-0.1e1 / 0.2e1))

        if Bindx == 507:
            t2676 = np.cos(phi)
            t2677 = t2676 ** 2
            t2679 = t2677 ** 2
            t2683 = t2679 ** 2
            t2678 = t2676 * t2677
            t2681 = t2678 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (308 * t2677 - 8932 * t2678 - 2002 * t2679 + 4004 * t2681 - 2431 * t2683 - 7 + (34034 * t2679 - 47476 * t2681 + 21879 * t2683 + 623) * t2676) * np.cos(phi1 - phi2)

        if Bindx == 508:
            t2686 = np.cos(phi)
            t2687 = t2686 ** 2
            t2688 = t2687 ** 2
            t2685 = np.sin(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.5e1) * t2685 ** 2 * (-308 * t2687 + 7 + (-4004 * t2687 + 2002 + 2431 * t2688) * t2688) * np.sin(phi1) * ((1 + t2686) ** (-0.1e1 / 0.2e1)) * ((1 - t2686) ** (-0.1e1 / 0.2e1))

        if Bindx == 509:
            t2691 = np.cos(phi)
            t2692 = t2691 ** 2
            t2694 = t2692 ** 2
            t2698 = t2694 ** 2
            t2693 = t2691 * t2692
            t2696 = t2693 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (-308 * t2692 - 8932 * t2693 + 2002 * t2694 - 4004 * t2696 + 2431 * t2698 + 7 + (34034 * t2694 - 47476 * t2696 + 21879 * t2698 + 623) * t2691) * np.cos(phi1 + phi2)

        if Bindx == 510:
            t2701 = np.cos(phi)
            t2702 = t2701 ** 2
            t2703 = t2701 * t2702
            t2706 = t2703 ** 2
            t2704 = t2702 ** 2
            t2700 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t2700 ** 2 * (-294 * t2702 + 182 * t2703 - 3458 * t2706 + 7 + (1820 + 1989 * t2704) * t2704 + (-546 * t2704 + 442 * t2706 - 14) * t2701) * np.sin((phi1 + 2 * phi2)) * ((1 + t2701) ** (-0.1e1 / 0.2e1)) * ((1 - t2701) ** (-0.1e1 / 0.2e1))

        if Bindx == 511:
            t2709 = np.cos(phi)
            t2710 = t2709 ** 2
            t2712 = t2710 ** 2
            t2716 = t2712 ** 2
            t2711 = t2709 * t2710
            t2714 = t2711 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (-40 * t2710 - 352 * t2711 + 234 * t2712 - 416 * t2714 + 221 * t2716 + 1 + (1222 * t2712 - 1560 * t2714 + 663 * t2716 + 27) * t2709) * np.cos((phi1 + 3 * phi2))

        if Bindx == 512:
            t2726 = np.sin(phi)
            t2724 = t2726 ** 2
            t2718 = np.cos(phi)
            t2719 = t2718 ** 2
            t2721 = t2719 ** 2
            t2720 = t2718 * t2719
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t2724 ** 2 * (35 * t2719 - 155 * t2721 - 1 + (-40 + 153 * t2720) * t2720 + (68 * t2721 + 4) * t2718) * np.sin((phi1 + 4 * phi2)) * ((1 + t2718) ** (-0.1e1 / 0.2e1)) * ((1 - t2718) ** (-0.1e1 / 0.2e1))

        if Bindx == 513:
            t2727 = np.cos(phi)
            t2728 = t2727 ** 2
            t2730 = t2728 ** 2
            t2734 = t2730 ** 2
            t2729 = t2727 * t2728
            t2732 = t2729 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (-32 * t2728 - 136 * t2729 + 146 * t2730 - 200 * t2732 + 85 * t2734 + 1 + (386 * t2730 - 416 * t2732 + 153 * t2734 + 13) * t2727) * np.cos((phi1 + 5 * phi2))

        if Bindx == 514:
            t2743 = np.sin(phi)
            t2740 = t2743 ** 2
            t2741 = t2743 * t2740
            t2736 = np.cos(phi)
            t2737 = t2736 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t2741 ** 2 * (-6 * t2736 + 1 + (34 * t2736 - 24 + 51 * t2737) * t2737) * np.sin((phi1 + 6 * phi2)) * ((1 + t2736) ** (-0.1e1 / 0.2e1)) * ((1 - t2736) ** (-0.1e1 / 0.2e1))

        if Bindx == 515:
            t2744 = np.cos(phi)
            t2745 = t2744 ** 2
            t2747 = t2745 ** 2
            t2751 = t2747 ** 2
            t2746 = t2744 * t2745
            t2749 = t2746 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (-140 * t2745 - 276 * t2746 + 378 * t2747 - 364 * t2749 + 119 * t2751 + 7 + (582 * t2747 - 500 * t2749 + 153 * t2751 + 41) * t2744) * np.cos((phi1 + 7 * phi2))

        if Bindx == 516:
            t2757 = np.sin(phi)
            t2754 = t2757 ** 2
            t2755 = t2754 ** 2
            t2753 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t2755 ** 2 * (-1 + (8 + 9 * t2753) * t2753) * np.sin((phi1 + 8 * phi2)) * ((1 + t2753) ** (-0.1e1 / 0.2e1)) * ((1 - t2753) ** (-0.1e1 / 0.2e1))

        if Bindx == 517:
            t2758 = np.cos(phi)
            t2759 = t2758 ** 2
            t2760 = t2758 * t2759
            t2761 = t2759 ** 2
            t2769 = -4 * t2760 ** 2 + 1 + (6 + t2761) * t2761
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((phi1 + 9 * phi2)) * (t2769 * t2758 - 4 * t2759 - 4 * t2760 + t2769)

        if Bindx == 518:
            t2770 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t2770) ** (0.11e2 / 0.2e1)) * ((1 + t2770) ** (0.7e1 / 0.2e1)) * np.sin((2 * phi1 - 9 * phi2))

        if Bindx == 519:
            t2771 = np.cos(phi)
            t2772 = t2771 ** 2
            t2774 = t2772 ** 2
            t2778 = t2774 ** 2
            t2773 = t2771 * t2772
            t2776 = t2773 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (22 * t2772 + 6 * t2773 - 54 * t2774 + 50 * t2776 - 16 * t2778 - 2 + (12 * t2774 - 22 * t2776 + 9 * t2778 - 5) * t2771) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 520:
            t2787 = np.sin(phi)
            t2784 = t2787 ** 2
            t2785 = t2787 * t2784
            t2780 = np.cos(phi)
            t2781 = t2780 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2785 ** 2 * (70 * t2780 - 1 + (-238 * t2780 + 16 + 153 * t2781) * t2781) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t2780) ** (-0.1e1 / 0.2e1)) * ((1 - t2780) ** (-0.1e1 / 0.2e1))

        if Bindx == 521:
            t2788 = np.cos(phi)
            t2789 = t2788 ** 2
            t2791 = t2789 ** 2
            t2795 = t2791 ** 2
            t2790 = t2788 * t2789
            t2793 = t2790 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (75 * t2789 - 44 * t2790 - 277 * t2791 + 341 * t2793 - 136 * t2795 - 3 + (178 * t2791 - 240 * t2793 + 102 * t2795 + 4) * t2788) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 522:
            t2805 = np.sin(phi)
            t2803 = t2805 ** 2
            t2797 = np.cos(phi)
            t2798 = t2797 ** 2
            t2800 = t2798 ** 2
            t2799 = t2797 * t2798
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t2803 ** 2 * (29 * t2798 - 125 * t2800 - 1 + (130 + 153 * t2799) * t2799 + (-170 * t2800 - 16) * t2797) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t2797) ** (-0.1e1 / 0.2e1)) * ((1 - t2797) ** (-0.1e1 / 0.2e1))

        if Bindx == 523:
            t2806 = np.cos(phi)
            t2807 = t2806 ** 2
            t2809 = t2807 ** 2
            t2813 = t2809 ** 2
            t2808 = t2806 * t2807
            t2811 = t2808 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (35 * t2807 - 82 * t2808 - 179 * t2809 + 281 * t2811 - 136 * t2813 - 1 + (272 * t2809 - 350 * t2811 + 153 * t2813 + 7) * t2806) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 524:
            t2816 = np.cos(phi)
            t2817 = t2816 ** 2
            t2818 = t2816 * t2817
            t2821 = t2818 ** 2
            t2819 = t2817 ** 2
            t2815 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t2815 ** 2 * (-114 * t2817 - 234 * t2818 - 1170 * t2821 + 3 + (650 + 663 * t2819) * t2819 + (624 * t2819 - 442 * t2821 + 20) * t2816) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t2816) ** (-0.1e1 / 0.2e1)) * ((1 - t2816) ** (-0.1e1 / 0.2e1))

        if Bindx == 525:
            t2824 = np.cos(phi)
            t2825 = t2824 ** 2
            t2827 = t2825 ** 2
            t2831 = t2827 ** 2
            t2826 = t2824 * t2825
            t2829 = t2826 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (287 * t2825 - 1876 * t2826 - 1729 * t2827 + 3185 * t2829 - 1768 * t2831 - 7 + (6734 * t2827 - 8944 * t2829 + 3978 * t2831 + 140) * t2824) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 526:
            t2834 = np.cos(phi)
            t2835 = t2834 ** 2
            t2836 = t2834 * t2835
            t2839 = t2836 ** 2
            t2837 = t2835 ** 2
            t2833 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t2833 ** 2 * (-294 * t2835 - 182 * t2836 - 3458 * t2839 + 7 + (1820 + 1989 * t2837) * t2837 + (546 * t2837 - 442 * t2839 + 14) * t2834) * np.sin((2 * phi1 - phi2)) * ((1 + t2834) ** (-0.1e1 / 0.2e1)) * ((1 - t2834) ** (-0.1e1 / 0.2e1))

        if Bindx == 527:
            t2842 = np.cos(phi)
            t2843 = t2842 ** 2
            t2844 = t2843 ** 2
            tfunc[..., c] = -0.57e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.55e2) * t2842 * (-98 * t2843 + 7 + (-494 * t2843 + 364 + 221 * t2844) * t2844) * np.cos((2 * phi1))

        if Bindx == 528:
            t2848 = np.cos(phi)
            t2849 = t2848 ** 2
            t2850 = t2848 * t2849
            t2853 = t2850 ** 2
            t2851 = t2849 ** 2
            t2847 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.11e2) * t2847 ** 2 * (-294 * t2849 + 182 * t2850 - 3458 * t2853 + 7 + (1820 + 1989 * t2851) * t2851 + (-546 * t2851 + 442 * t2853 - 14) * t2848) * np.sin((2 * phi1 + phi2)) * ((1 + t2848) ** (-0.1e1 / 0.2e1)) * ((1 - t2848) ** (-0.1e1 / 0.2e1))

        if Bindx == 529:
            t2856 = np.cos(phi)
            t2857 = t2856 ** 2
            t2859 = t2857 ** 2
            t2863 = t2859 ** 2
            t2858 = t2856 * t2857
            t2861 = t2858 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (-287 * t2857 - 1876 * t2858 + 1729 * t2859 - 3185 * t2861 + 1768 * t2863 + 7 + (6734 * t2859 - 8944 * t2861 + 3978 * t2863 + 140) * t2856) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 530:
            t2866 = np.cos(phi)
            t2867 = t2866 ** 2
            t2868 = t2866 * t2867
            t2871 = t2868 ** 2
            t2869 = t2867 ** 2
            t2865 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t2865 ** 2 * (-114 * t2867 + 234 * t2868 - 1170 * t2871 + 3 + (650 + 663 * t2869) * t2869 + (-624 * t2869 + 442 * t2871 - 20) * t2866) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t2866) ** (-0.1e1 / 0.2e1)) * ((1 - t2866) ** (-0.1e1 / 0.2e1))

        if Bindx == 531:
            t2874 = np.cos(phi)
            t2875 = t2874 ** 2
            t2877 = t2875 ** 2
            t2881 = t2877 ** 2
            t2876 = t2874 * t2875
            t2879 = t2876 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (-35 * t2875 - 82 * t2876 + 179 * t2877 - 281 * t2879 + 136 * t2881 + 1 + (272 * t2877 - 350 * t2879 + 153 * t2881 + 7) * t2874) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 532:
            t2891 = np.sin(phi)
            t2889 = t2891 ** 2
            t2883 = np.cos(phi)
            t2884 = t2883 ** 2
            t2886 = t2884 ** 2
            t2885 = t2883 * t2884
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t2889 ** 2 * (29 * t2884 - 125 * t2886 - 1 + (-130 + 153 * t2885) * t2885 + (170 * t2886 + 16) * t2883) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t2883) ** (-0.1e1 / 0.2e1)) * ((1 - t2883) ** (-0.1e1 / 0.2e1))

        if Bindx == 533:
            t2892 = np.cos(phi)
            t2893 = t2892 ** 2
            t2895 = t2893 ** 2
            t2899 = t2895 ** 2
            t2894 = t2892 * t2893
            t2897 = t2894 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (-75 * t2893 - 44 * t2894 + 277 * t2895 - 341 * t2897 + 136 * t2899 + 3 + (178 * t2895 - 240 * t2897 + 102 * t2899 + 4) * t2892) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 534:
            t2908 = np.sin(phi)
            t2905 = t2908 ** 2
            t2906 = t2908 * t2905
            t2901 = np.cos(phi)
            t2902 = t2901 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t2906 ** 2 * (-70 * t2901 - 1 + (238 * t2901 + 16 + 153 * t2902) * t2902) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t2901) ** (-0.1e1 / 0.2e1)) * ((1 - t2901) ** (-0.1e1 / 0.2e1))

        if Bindx == 535:
            t2909 = np.cos(phi)
            t2910 = t2909 ** 2
            t2912 = t2910 ** 2
            t2916 = t2912 ** 2
            t2911 = t2909 * t2910
            t2914 = t2911 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (-22 * t2910 + 6 * t2911 + 54 * t2912 - 50 * t2914 + 16 * t2916 + 2 + (12 * t2912 - 22 * t2914 + 9 * t2916 - 5) * t2909) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 536:
            t2918 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t2918) ** (0.7e1 / 0.2e1)) * ((1 + t2918) ** (0.11e2 / 0.2e1)) * np.sin((2 * phi1 + 9 * phi2))

        if Bindx == 537:
            t2919 = np.cos(phi)
            t2920 = t2919 ** 2
            t2922 = t2920 ** 2
            t2927 = -6 * t2922
            t2925 = t2922 ** 2
            t2921 = t2919 * t2920
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((3 * phi1 - 9 * phi2)) * (-3 * t2925 + t2927 + 1 + (8 + 8 * t2921) * t2921 + (t2925 + t2927 - 3) * t2919)

        if Bindx == 538:
            t2935 = np.sin(phi)
            t2932 = t2935 ** 2
            t2933 = t2935 * t2932
            t2928 = np.cos(phi)
            t2929 = t2928 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t2933 ** 2 * (-1 + (-8 * t2928 + 6 + 3 * t2929) * t2929) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t2928) ** (-0.1e1 / 0.2e1)) * ((1 - t2928) ** (-0.1e1 / 0.2e1))

        if Bindx == 539:
            t2936 = np.cos(phi)
            t2937 = t2936 ** 2
            t2939 = t2937 ** 2
            t2943 = t2939 ** 2
            t2938 = t2936 * t2937
            t2941 = t2938 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (48 * t2937 + 104 * t2938 - 206 * t2939 + 280 * t2941 - 119 * t2943 - 3 + (-82 * t2939 - 48 * t2941 + 51 * t2943 - 25) * t2936) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 540:
            t2953 = np.sin(phi)
            t2951 = t2953 ** 2
            t2945 = np.cos(phi)
            t2946 = t2945 ** 2
            t2948 = t2946 ** 2
            t2947 = t2945 * t2946
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t2951 ** 2 * (-21 * t2946 + 9 * t2948 + 1 + (74 + 51 * t2947) * t2947 + (-102 * t2948 - 12) * t2945) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t2945) ** (-0.1e1 / 0.2e1)) * ((1 - t2945) ** (-0.1e1 / 0.2e1))

        if Bindx == 541:
            t2954 = np.cos(phi)
            t2955 = t2954 ** 2
            t2957 = t2955 ** 2
            t2961 = t2957 ** 2
            t2956 = t2954 * t2955
            t2959 = t2956 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (28 * t2955 + 4 * t2956 - 122 * t2957 + 180 * t2959 - 85 * t2961 - 1 + (30 * t2957 - 84 * t2959 + 51 * t2961 - 1) * t2954) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 542:
            t2964 = np.cos(phi)
            t2965 = t2964 ** 2
            t2966 = t2964 * t2965
            t2969 = t2966 ** 2
            t2967 = t2965 ** 2
            t2963 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t2963 ** 2 * (-32 * t2965 - 316 * t2966 - 504 * t2969 + 1 + (210 + 357 * t2967) * t2967 + (728 * t2967 - 476 * t2969 + 32) * t2964) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t2964) ** (-0.1e1 / 0.2e1)) * ((1 - t2964) ** (-0.1e1 / 0.2e1))

        if Bindx == 543:
            t2972 = np.cos(phi)
            t2973 = t2972 ** 2
            t2975 = t2973 ** 2
            t2979 = t2975 ** 2
            t2974 = t2972 * t2973
            t2977 = t2974 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (1044 * t2973 - 2012 * t2974 - 5538 * t2975 + 9100 * t2977 - 4641 * t2979 - 29 + (7098 * t2975 - 9828 * t2977 + 4641 * t2979 + 165) * t2972) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 544:
            t2982 = np.cos(phi)
            t2983 = t2982 ** 2
            t2984 = t2982 * t2983
            t2987 = t2984 ** 2
            t2985 = t2983 ** 2
            t2981 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t2981 ** 2 * (-114 * t2983 - 234 * t2984 - 1170 * t2987 + 3 + (650 + 663 * t2985) * t2985 + (624 * t2985 - 442 * t2987 + 20) * t2982) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t2982) ** (-0.1e1 / 0.2e1)) * ((1 - t2982) ** (-0.1e1 / 0.2e1))

        if Bindx == 545:
            t2990 = np.cos(phi)
            t2991 = t2990 ** 2
            t2993 = t2991 ** 2
            t2997 = t2993 ** 2
            t2992 = t2990 * t2991
            t2995 = t2992 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (40 * t2991 - 352 * t2992 - 234 * t2993 + 416 * t2995 - 221 * t2997 - 1 + (1222 * t2993 - 1560 * t2995 + 663 * t2997 + 27) * t2990) * np.cos((3 * phi1 - phi2))

        if Bindx == 546:
            t3005 = np.sin(phi)
            t3003 = t3005 ** 2
            t2999 = np.cos(phi)
            t3000 = t2999 ** 2
            t3001 = t3000 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1155e4) * t3003 ** 2 * (-195 * t3001 - 1 + (221 * t3001 + 39) * t3000) * np.sin((3 * phi1)) * ((1 + t2999) ** (-0.1e1 / 0.2e1)) * ((1 - t2999) ** (-0.1e1 / 0.2e1))

        if Bindx == 547:
            t3006 = np.cos(phi)
            t3007 = t3006 ** 2
            t3009 = t3007 ** 2
            t3013 = t3009 ** 2
            t3008 = t3006 * t3007
            t3011 = t3008 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.231e3) * (-40 * t3007 - 352 * t3008 + 234 * t3009 - 416 * t3011 + 221 * t3013 + 1 + (1222 * t3009 - 1560 * t3011 + 663 * t3013 + 27) * t3006) * np.cos((3 * phi1 + phi2))

        if Bindx == 548:
            t3016 = np.cos(phi)
            t3017 = t3016 ** 2
            t3018 = t3016 * t3017
            t3021 = t3018 ** 2
            t3019 = t3017 ** 2
            t3015 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.21e2) * t3015 ** 2 * (-114 * t3017 + 234 * t3018 - 1170 * t3021 + 3 + (650 + 663 * t3019) * t3019 + (-624 * t3019 + 442 * t3021 - 20) * t3016) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t3016) ** (-0.1e1 / 0.2e1)) * ((1 - t3016) ** (-0.1e1 / 0.2e1))

        if Bindx == 549:
            t3024 = np.cos(phi)
            t3025 = t3024 ** 2
            t3027 = t3025 ** 2
            t3033 = 4641 * t3027 ** 2
            t3026 = t3024 * t3025
            t3029 = t3026 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (-1044 * t3025 - 2012 * t3026 + 5538 * t3027 - 9100 * t3029 + t3033 + 29 + (7098 * t3027 - 9828 * t3029 + t3033 + 165) * t3024) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 550:
            t3035 = np.cos(phi)
            t3036 = t3035 ** 2
            t3037 = t3035 * t3036
            t3040 = t3037 ** 2
            t3038 = t3036 ** 2
            t3034 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3034 ** 2 * (-32 * t3036 + 316 * t3037 - 504 * t3040 + 1 + (210 + 357 * t3038) * t3038 + (-728 * t3038 + 476 * t3040 - 32) * t3035) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t3035) ** (-0.1e1 / 0.2e1)) * ((1 - t3035) ** (-0.1e1 / 0.2e1))

        if Bindx == 551:
            t3043 = np.cos(phi)
            t3044 = t3043 ** 2
            t3046 = t3044 ** 2
            t3050 = t3046 ** 2
            t3045 = t3043 * t3044
            t3048 = t3045 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (-28 * t3044 + 4 * t3045 + 122 * t3046 - 180 * t3048 + 85 * t3050 + 1 + (30 * t3046 - 84 * t3048 + 51 * t3050 - 1) * t3043) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 552:
            t3060 = np.sin(phi)
            t3058 = t3060 ** 2
            t3052 = np.cos(phi)
            t3053 = t3052 ** 2
            t3055 = t3053 ** 2
            t3054 = t3052 * t3053
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3058 ** 2 * (-21 * t3053 + 9 * t3055 + 1 + (-74 + 51 * t3054) * t3054 + (102 * t3055 + 12) * t3052) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t3052) ** (-0.1e1 / 0.2e1)) * ((1 - t3052) ** (-0.1e1 / 0.2e1))

        if Bindx == 553:
            t3061 = np.cos(phi)
            t3062 = t3061 ** 2
            t3064 = t3062 ** 2
            t3068 = t3064 ** 2
            t3063 = t3061 * t3062
            t3066 = t3063 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-48 * t3062 + 104 * t3063 + 206 * t3064 - 280 * t3066 + 119 * t3068 + 3 + (-82 * t3064 - 48 * t3066 + 51 * t3068 - 25) * t3061) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 554:
            t3077 = np.sin(phi)
            t3074 = t3077 ** 2
            t3075 = t3077 * t3074
            t3070 = np.cos(phi)
            t3071 = t3070 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3075 ** 2 * (-1 + (8 * t3070 + 6 + 3 * t3071) * t3071) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t3070) ** (-0.1e1 / 0.2e1)) * ((1 - t3070) ** (-0.1e1 / 0.2e1))

        if Bindx == 555:
            t3078 = np.cos(phi)
            t3079 = t3078 ** 2
            t3081 = t3079 ** 2
            t3084 = t3081 ** 2
            t3080 = t3078 * t3079
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((3 * phi1 + 9 * phi2)) * (6 * t3081 + 3 * t3084 - 1 + (8 - 8 * t3080) * t3080 + (-6 * t3081 + t3084 - 3) * t3078)

        if Bindx == 556:
            t3086 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t3086) ** (0.13e2 / 0.2e1)) * ((1 + t3086) ** (0.5e1 / 0.2e1)) * np.sin((4 * phi1 - 9 * phi2))

        if Bindx == 557:
            t3087 = np.cos(phi)
            t3088 = t3087 ** 2
            t3090 = t3088 ** 2
            t3094 = t3090 ** 2
            t3089 = t3087 * t3088
            t3092 = t3089 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (-20 * t3088 + 52 * t3089 - 4 * t3090 + 52 * t3092 - 32 * t3094 + 4 + (-74 * t3090 + 20 * t3092 + 9 * t3094 - 7) * t3087) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 558:
            t3104 = np.sin(phi)
            t3102 = t3104 ** 2
            t3096 = np.cos(phi)
            t3097 = t3096 ** 2
            t3099 = t3097 ** 2
            t3098 = t3096 * t3097
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3102 ** 2 * (-253 * t3097 + 397 * t3099 + 23 + (112 + 153 * t3098) * t3098 + (-476 * t3099 + 44) * t3096) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t3096) ** (-0.1e1 / 0.2e1)) * ((1 - t3096) ** (-0.1e1 / 0.2e1))

        if Bindx == 559:
            t3105 = np.cos(phi)
            t3106 = t3105 ** 2
            t3108 = t3106 ** 2
            t3112 = t3108 ** 2
            t3107 = t3105 * t3106
            t3110 = t3107 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (19 * t3106 + 106 * t3107 - 131 * t3108 + 249 * t3110 - 136 * t3112 - 1 + (-144 * t3108 + 6 * t3110 + 51 * t3112 - 19) * t3105) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 560:
            t3115 = np.cos(phi)
            t3116 = t3115 ** 2
            t3117 = t3115 * t3116
            t3120 = t3117 ** 2
            t3118 = t3116 ** 2
            t3114 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3114 ** 2 * (72 * t3116 - 196 * t3117 - 32 * t3120 - 3 + (-158 + 153 * t3118) * t3118 + (480 * t3118 - 340 * t3120 + 24) * t3115) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t3115) ** (-0.1e1 / 0.2e1)) * ((1 - t3115) ** (-0.1e1 / 0.2e1))

        if Bindx == 561:
            t3123 = np.cos(phi)
            t3124 = t3123 ** 2
            t3126 = t3124 ** 2
            t3130 = t3126 ** 2
            t3125 = t3123 * t3124
            t3128 = t3125 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (522 * t3124 + 212 * t3125 - 2398 * t3126 + 3766 * t3128 - 1904 * t3130 - 18 + (266 * t3126 - 1484 * t3128 + 1071 * t3130 - 33) * t3123) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 562:
            t3133 = np.cos(phi)
            t3134 = t3133 ** 2
            t3135 = t3133 * t3134
            t3138 = t3135 ** 2
            t3136 = t3134 ** 2
            t3132 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3132 ** 2 * (-32 * t3134 - 316 * t3135 - 504 * t3138 + 1 + (210 + 357 * t3136) * t3136 + (728 * t3136 - 476 * t3138 + 32) * t3133) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t3133) ** (-0.1e1 / 0.2e1)) * ((1 - t3133) ** (-0.1e1 / 0.2e1))

        if Bindx == 563:
            t3141 = np.cos(phi)
            t3142 = t3141 ** 2
            t3144 = t3142 ** 2
            t3148 = t3144 ** 2
            t3143 = t3141 * t3142
            t3146 = t3143 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (35 * t3142 - 82 * t3143 - 179 * t3144 + 281 * t3146 - 136 * t3148 - 1 + (272 * t3144 - 350 * t3146 + 153 * t3148 + 7) * t3141) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 564:
            t3158 = np.sin(phi)
            t3156 = t3158 ** 2
            t3150 = np.cos(phi)
            t3151 = t3150 ** 2
            t3153 = t3151 ** 2
            t3152 = t3150 * t3151
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t3156 ** 2 * (35 * t3151 - 155 * t3153 - 1 + (40 + 153 * t3152) * t3152 + (-68 * t3153 - 4) * t3150) * np.sin((4 * phi1 - phi2)) * ((1 + t3150) ** (-0.1e1 / 0.2e1)) * ((1 - t3150) ** (-0.1e1 / 0.2e1))

        if Bindx == 565:
            t3159 = np.cos(phi)
            t3160 = t3159 ** 2
            t3161 = t3160 ** 2
            tfunc[..., c] = 0.57e2 / 0.64e2 * np.sqrt(0.5005e4) * t3159 * (-12 * t3160 + 1 + (-44 * t3160 + 38 + 17 * t3161) * t3161) * np.cos((4 * phi1))

        if Bindx == 566:
            t3172 = np.sin(phi)
            t3170 = t3172 ** 2
            t3164 = np.cos(phi)
            t3165 = t3164 ** 2
            t3167 = t3165 ** 2
            t3166 = t3164 * t3165
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t3170 ** 2 * (35 * t3165 - 155 * t3167 - 1 + (-40 + 153 * t3166) * t3166 + (68 * t3167 + 4) * t3164) * np.sin((4 * phi1 + phi2)) * ((1 + t3164) ** (-0.1e1 / 0.2e1)) * ((1 - t3164) ** (-0.1e1 / 0.2e1))

        if Bindx == 567:
            t3173 = np.cos(phi)
            t3174 = t3173 ** 2
            t3176 = t3174 ** 2
            t3180 = t3176 ** 2
            t3175 = t3173 * t3174
            t3178 = t3175 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.91e2) * (-35 * t3174 - 82 * t3175 + 179 * t3176 - 281 * t3178 + 136 * t3180 + 1 + (272 * t3176 - 350 * t3178 + 153 * t3180 + 7) * t3173) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 568:
            t3183 = np.cos(phi)
            t3184 = t3183 ** 2
            t3185 = t3183 * t3184
            t3188 = t3185 ** 2
            t3186 = t3184 ** 2
            t3182 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.39e2) * t3182 ** 2 * (-32 * t3184 + 316 * t3185 - 504 * t3188 + 1 + (210 + 357 * t3186) * t3186 + (-728 * t3186 + 476 * t3188 - 32) * t3183) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t3183) ** (-0.1e1 / 0.2e1)) * ((1 - t3183) ** (-0.1e1 / 0.2e1))

        if Bindx == 569:
            t3191 = np.cos(phi)
            t3192 = t3191 ** 2
            t3194 = t3192 ** 2
            t3198 = t3194 ** 2
            t3193 = t3191 * t3192
            t3196 = t3193 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (-522 * t3192 + 212 * t3193 + 2398 * t3194 - 3766 * t3196 + 1904 * t3198 + 18 + (266 * t3194 - 1484 * t3196 + 1071 * t3198 - 33) * t3191) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 570:
            t3201 = np.cos(phi)
            t3202 = t3201 ** 2
            t3203 = t3201 * t3202
            t3206 = t3203 ** 2
            t3204 = t3202 ** 2
            t3200 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3200 ** 2 * (72 * t3202 + 196 * t3203 - 32 * t3206 - 3 + (-158 + 153 * t3204) * t3204 + (-480 * t3204 + 340 * t3206 - 24) * t3201) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t3201) ** (-0.1e1 / 0.2e1)) * ((1 - t3201) ** (-0.1e1 / 0.2e1))

        if Bindx == 571:
            t3209 = np.cos(phi)
            t3210 = t3209 ** 2
            t3212 = t3210 ** 2
            t3216 = t3212 ** 2
            t3211 = t3209 * t3210
            t3214 = t3211 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (-19 * t3210 + 106 * t3211 + 131 * t3212 - 249 * t3214 + 136 * t3216 + 1 + (-144 * t3212 + 6 * t3214 + 51 * t3216 - 19) * t3209) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 572:
            t3226 = np.sin(phi)
            t3224 = t3226 ** 2
            t3218 = np.cos(phi)
            t3219 = t3218 ** 2
            t3221 = t3219 ** 2
            t3220 = t3218 * t3219
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3224 ** 2 * (-253 * t3219 + 397 * t3221 + 23 + (-112 + 153 * t3220) * t3220 + (476 * t3221 - 44) * t3218) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t3218) ** (-0.1e1 / 0.2e1)) * ((1 - t3218) ** (-0.1e1 / 0.2e1))

        if Bindx == 573:
            t3227 = np.cos(phi)
            t3228 = t3227 ** 2
            t3230 = t3228 ** 2
            t3234 = t3230 ** 2
            t3229 = t3227 * t3228
            t3232 = t3229 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (20 * t3228 + 52 * t3229 + 4 * t3230 - 52 * t3232 + 32 * t3234 - 4 + (-74 * t3230 + 20 * t3232 + 9 * t3234 - 7) * t3227) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 574:
            t3236 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t3236) ** (0.5e1 / 0.2e1)) * ((1 + t3236) ** (0.13e2 / 0.2e1)) * np.sin((4 * phi1 + 9 * phi2))

        if Bindx == 575:
            t3237 = np.cos(phi)
            t3238 = t3237 ** 2
            t3239 = t3238 ** 2
            t3242 = t3239 ** 2
            t3240 = t3237 * t3239
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((5 * phi1 - 9 * phi2)) * (14 * t3239 - 14 * t3240 - 5 * t3242 - 1 + (8 * t3240 - 8) * t3238 + (t3242 + 5) * t3237)

        if Bindx == 576:
            t3252 = np.sin(phi)
            t3250 = t3252 ** 2
            t3244 = np.cos(phi)
            t3245 = t3244 ** 2
            t3247 = t3245 ** 2
            t3246 = t3244 * t3245
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3250 ** 2 * (-5 * t3245 + 65 * t3247 - 5 + (-40 + 9 * t3246) * t3246 + (-40 * t3247 + 16) * t3244) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t3244) ** (-0.1e1 / 0.2e1)) * ((1 - t3244) ** (-0.1e1 / 0.2e1))

        if Bindx == 577:
            t3253 = np.cos(phi)
            t3254 = t3253 ** 2
            t3256 = t3254 ** 2
            t3260 = t3256 ** 2
            t3255 = t3253 * t3254
            t3258 = t3255 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-328 * t3254 + 560 * t3255 + 322 * t3256 + 560 * t3258 - 595 * t3260 + 41 + (-1246 * t3256 + 568 * t3258 + 153 * t3260 - 35) * t3253) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 578:
            t3263 = np.cos(phi)
            t3264 = t3263 ** 2
            t3265 = t3263 * t3264
            t3268 = t3265 ** 2
            t3266 = t3264 ** 2
            t3262 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t3262 ** 2 * (70 * t3264 + 14 * t3265 + 126 * t3268 - 5 + (-210 + 51 * t3266) * t3266 + (140 * t3266 - 170 * t3268 - 16) * t3263) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t3263) ** (-0.1e1 / 0.2e1)) * ((1 - t3263) ** (-0.1e1 / 0.2e1))

        if Bindx == 579:
            t3271 = np.cos(phi)
            t3272 = t3271 ** 2
            t3274 = t3272 ** 2
            t3278 = t3274 ** 2
            t3273 = t3271 * t3272
            t3276 = t3273 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (180 * t3272 + 1540 * t3273 - 1610 * t3274 + 3500 * t3276 - 2125 * t3278 - 9 + (-2366 * t3274 + 380 * t3276 + 765 * t3278 - 255) * t3271) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 580:
            t3281 = np.cos(phi)
            t3282 = t3281 ** 2
            t3283 = t3281 * t3282
            t3286 = t3283 ** 2
            t3284 = t3282 ** 2
            t3280 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3280 ** 2 * (72 * t3282 - 196 * t3283 - 32 * t3286 - 3 + (-158 + 153 * t3284) * t3284 + (480 * t3284 - 340 * t3286 + 24) * t3281) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t3281) ** (-0.1e1 / 0.2e1)) * ((1 - t3281) ** (-0.1e1 / 0.2e1))

        if Bindx == 581:
            t3289 = np.cos(phi)
            t3290 = t3289 ** 2
            t3292 = t3290 ** 2
            t3296 = t3292 ** 2
            t3291 = t3289 * t3290
            t3294 = t3291 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (28 * t3290 + 4 * t3291 - 122 * t3292 + 180 * t3294 - 85 * t3296 - 1 + (30 * t3292 - 84 * t3294 + 51 * t3296 - 1) * t3289) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 582:
            t3306 = np.sin(phi)
            t3304 = t3306 ** 2
            t3298 = np.cos(phi)
            t3299 = t3298 ** 2
            t3301 = t3299 ** 2
            t3300 = t3298 * t3299
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t3304 ** 2 * (29 * t3299 - 125 * t3301 - 1 + (130 + 153 * t3300) * t3300 + (-170 * t3301 - 16) * t3298) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t3298) ** (-0.1e1 / 0.2e1)) * ((1 - t3298) ** (-0.1e1 / 0.2e1))

        if Bindx == 583:
            t3307 = np.cos(phi)
            t3308 = t3307 ** 2
            t3310 = t3308 ** 2
            t3314 = t3310 ** 2
            t3309 = t3307 * t3308
            t3312 = t3309 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (32 * t3308 - 136 * t3309 - 146 * t3310 + 200 * t3312 - 85 * t3314 - 1 + (386 * t3310 - 416 * t3312 + 153 * t3314 + 13) * t3307) * np.cos((5 * phi1 - phi2))

        if Bindx == 584:
            t3322 = np.sin(phi)
            t3319 = t3322 ** 2
            t3320 = t3322 * t3319
            t3316 = np.cos(phi)
            t3317 = t3316 ** 2
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.143e3) * t3320 ** 2 * (1 + (-30 + 85 * t3317) * t3317) * np.sin((5 * phi1)) * ((1 + t3316) ** (-0.1e1 / 0.2e1)) * ((1 - t3316) ** (-0.1e1 / 0.2e1))

        if Bindx == 585:
            t3323 = np.cos(phi)
            t3324 = t3323 ** 2
            t3326 = t3324 ** 2
            t3330 = t3326 ** 2
            t3325 = t3323 * t3324
            t3328 = t3325 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.715e3) * (-32 * t3324 - 136 * t3325 + 146 * t3326 - 200 * t3328 + 85 * t3330 + 1 + (386 * t3326 - 416 * t3328 + 153 * t3330 + 13) * t3323) * np.cos((5 * phi1 + phi2))

        if Bindx == 586:
            t3340 = np.sin(phi)
            t3338 = t3340 ** 2
            t3332 = np.cos(phi)
            t3333 = t3332 ** 2
            t3335 = t3333 ** 2
            t3334 = t3332 * t3333
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.65e2) * t3338 ** 2 * (29 * t3333 - 125 * t3335 - 1 + (-130 + 153 * t3334) * t3334 + (170 * t3335 + 16) * t3332) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t3332) ** (-0.1e1 / 0.2e1)) * ((1 - t3332) ** (-0.1e1 / 0.2e1))

        if Bindx == 587:
            t3341 = np.cos(phi)
            t3342 = t3341 ** 2
            t3344 = t3342 ** 2
            t3348 = t3344 ** 2
            t3343 = t3341 * t3342
            t3346 = t3343 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.1365e4) * (-28 * t3342 + 4 * t3343 + 122 * t3344 - 180 * t3346 + 85 * t3348 + 1 + (30 * t3344 - 84 * t3346 + 51 * t3348 - 1) * t3341) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 588:
            t3351 = np.cos(phi)
            t3352 = t3351 ** 2
            t3353 = t3351 * t3352
            t3356 = t3353 ** 2
            t3354 = t3352 ** 2
            t3350 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.35e2) * t3350 ** 2 * (72 * t3352 + 196 * t3353 - 32 * t3356 - 3 + (-158 + 153 * t3354) * t3354 + (-480 * t3354 + 340 * t3356 - 24) * t3351) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t3351) ** (-0.1e1 / 0.2e1)) * ((1 - t3351) ** (-0.1e1 / 0.2e1))

        if Bindx == 589:
            t3359 = np.cos(phi)
            t3360 = t3359 ** 2
            t3362 = t3360 ** 2
            t3366 = t3362 ** 2
            t3361 = t3359 * t3360
            t3364 = t3361 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * (-180 * t3360 + 1540 * t3361 + 1610 * t3362 - 3500 * t3364 + 2125 * t3366 + 9 + (-2366 * t3362 + 380 * t3364 + 765 * t3366 - 255) * t3359) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 590:
            t3369 = np.cos(phi)
            t3370 = t3369 ** 2
            t3371 = t3369 * t3370
            t3374 = t3371 ** 2
            t3372 = t3370 ** 2
            t3368 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t3368 ** 2 * (70 * t3370 - 14 * t3371 + 126 * t3374 - 5 + (-210 + 51 * t3372) * t3372 + (-140 * t3372 + 170 * t3374 + 16) * t3369) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t3369) ** (-0.1e1 / 0.2e1)) * ((1 - t3369) ** (-0.1e1 / 0.2e1))

        if Bindx == 591:
            t3377 = np.cos(phi)
            t3378 = t3377 ** 2
            t3380 = t3378 ** 2
            t3384 = t3380 ** 2
            t3379 = t3377 * t3378
            t3382 = t3379 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (328 * t3378 + 560 * t3379 - 322 * t3380 - 560 * t3382 + 595 * t3384 - 41 + (-1246 * t3380 + 568 * t3382 + 153 * t3384 - 35) * t3377) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 592:
            t3394 = np.sin(phi)
            t3392 = t3394 ** 2
            t3386 = np.cos(phi)
            t3387 = t3386 ** 2
            t3389 = t3387 ** 2
            t3388 = t3386 * t3387
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3392 ** 2 * (-5 * t3387 + 65 * t3389 - 5 + (40 + 9 * t3388) * t3388 + (40 * t3389 - 16) * t3386) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t3386) ** (-0.1e1 / 0.2e1)) * ((1 - t3386) ** (-0.1e1 / 0.2e1))

        if Bindx == 593:
            t3395 = np.cos(phi)
            t3396 = t3395 ** 2
            t3402 = 8 * t3396
            t3397 = t3396 ** 2
            t3400 = t3397 ** 2
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((5 * phi1 + 9 * phi2)) * (-14 * t3397 + 5 * t3400 + t3402 + 1 + ((t3402 - 14) * t3397 + t3400 + 5) * t3395)

        if Bindx == 594:
            t3403 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t3403) ** (0.15e2 / 0.2e1)) * ((1 + t3403) ** (0.3e1 / 0.2e1)) * np.sin((6 * phi1 - 9 * phi2))

        if Bindx == 595:
            t3404 = np.cos(phi)
            t3405 = t3404 ** 2
            t3407 = t3405 ** 2
            t3411 = t3407 ** 2
            t3406 = t3404 * t3405
            t3409 = t3406 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (-10 * t3405 - 14 * t3406 + 42 * t3407 - 14 * t3409 - 16 * t3411 - 2 + (-28 * t3407 + 30 * t3409 + 3 * t3411 + 9) * t3404) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 596:
            t3414 = np.cos(phi)
            t3415 = t3414 ** 2
            t3416 = t3414 * t3415
            t3419 = t3416 ** 2
            t3417 = t3415 ** 2
            t3413 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3413 ** 2 * (-42 * t3415 + 294 * t3416 + 378 * t3419 + 21 + (-280 + 51 * t3417) * t3417 + (-126 * t3417 - 238 * t3419 - 58) * t3414) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t3414) ** (-0.1e1 / 0.2e1)) * ((1 - t3414) ** (-0.1e1 / 0.2e1))

        if Bindx == 597:
            t3422 = np.cos(phi)
            t3423 = t3422 ** 2
            t3425 = t3423 ** 2
            t3429 = t3425 ** 2
            t3424 = t3422 * t3423
            t3427 = t3424 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (-207 * t3423 + 308 * t3424 + 273 * t3425 + 287 * t3427 - 408 * t3429 + 23 + (-798 * t3425 + 432 * t3427 + 102 * t3429 - 12) * t3422) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 598:
            t3432 = np.cos(phi)
            t3433 = t3432 ** 2
            t3434 = t3432 * t3433
            t3437 = t3434 ** 2
            t3435 = t3433 ** 2
            t3431 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t3431 ** 2 * (70 * t3433 + 14 * t3434 + 126 * t3437 - 5 + (-210 + 51 * t3435) * t3435 + (140 * t3435 - 170 * t3437 - 16) * t3432) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t3432) ** (-0.1e1 / 0.2e1)) * ((1 - t3432) ** (-0.1e1 / 0.2e1))

        if Bindx == 599:
            t3440 = np.cos(phi)
            t3441 = t3440 ** 2
            t3443 = t3441 ** 2
            t3447 = t3443 ** 2
            t3442 = t3440 * t3441
            t3445 = t3442 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (19 * t3441 + 106 * t3442 - 131 * t3443 + 249 * t3445 - 136 * t3447 - 1 + (-144 * t3443 + 6 * t3445 + 51 * t3447 - 19) * t3440) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 600:
            t3457 = np.sin(phi)
            t3455 = t3457 ** 2
            t3449 = np.cos(phi)
            t3450 = t3449 ** 2
            t3452 = t3450 ** 2
            t3451 = t3449 * t3450
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3455 ** 2 * (-21 * t3450 + 9 * t3452 + 1 + (74 + 51 * t3451) * t3451 + (-102 * t3452 - 12) * t3449) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t3449) ** (-0.1e1 / 0.2e1)) * ((1 - t3449) ** (-0.1e1 / 0.2e1))

        if Bindx == 601:
            t3458 = np.cos(phi)
            t3459 = t3458 ** 2
            t3461 = t3459 ** 2
            t3465 = t3461 ** 2
            t3460 = t3458 * t3459
            t3463 = t3460 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (75 * t3459 - 44 * t3460 - 277 * t3461 + 341 * t3463 - 136 * t3465 - 3 + (178 * t3461 - 240 * t3463 + 102 * t3465 + 4) * t3458) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 602:
            t3474 = np.sin(phi)
            t3471 = t3474 ** 2
            t3472 = t3474 * t3471
            t3467 = np.cos(phi)
            t3468 = t3467 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t3472 ** 2 * (6 * t3467 + 1 + (-34 * t3467 - 24 + 51 * t3468) * t3468) * np.sin((6 * phi1 - phi2)) * ((1 + t3467) ** (-0.1e1 / 0.2e1)) * ((1 - t3467) ** (-0.1e1 / 0.2e1))

        if Bindx == 603:
            t3475 = np.cos(phi)
            t3476 = t3475 ** 2
            t3477 = t3476 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t3475 * (-26 * t3476 + 3 + (-54 * t3476 + 60 + 17 * t3477) * t3477) * np.cos((6 * phi1))

        if Bindx == 604:
            t3487 = np.sin(phi)
            t3484 = t3487 ** 2
            t3485 = t3487 * t3484
            t3480 = np.cos(phi)
            t3481 = t3480 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.429e3) * t3485 ** 2 * (-6 * t3480 + 1 + (34 * t3480 - 24 + 51 * t3481) * t3481) * np.sin((6 * phi1 + phi2)) * ((1 + t3480) ** (-0.1e1 / 0.2e1)) * ((1 - t3480) ** (-0.1e1 / 0.2e1))

        if Bindx == 605:
            t3488 = np.cos(phi)
            t3489 = t3488 ** 2
            t3491 = t3489 ** 2
            t3495 = t3491 ** 2
            t3490 = t3488 * t3489
            t3493 = t3490 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * (-75 * t3489 - 44 * t3490 + 277 * t3491 - 341 * t3493 + 136 * t3495 + 3 + (178 * t3491 - 240 * t3493 + 102 * t3495 + 4) * t3488) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 606:
            t3505 = np.sin(phi)
            t3503 = t3505 ** 2
            t3497 = np.cos(phi)
            t3498 = t3497 ** 2
            t3500 = t3498 ** 2
            t3499 = t3497 * t3498
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.91e2) * t3503 ** 2 * (-21 * t3498 + 9 * t3500 + 1 + (-74 + 51 * t3499) * t3499 + (102 * t3500 + 12) * t3497) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t3497) ** (-0.1e1 / 0.2e1)) * ((1 - t3497) ** (-0.1e1 / 0.2e1))

        if Bindx == 607:
            t3506 = np.cos(phi)
            t3507 = t3506 ** 2
            t3509 = t3507 ** 2
            t3513 = t3509 ** 2
            t3508 = t3506 * t3507
            t3511 = t3508 ** 2
            tfunc[..., c] = -0.19e2 / 0.32e2 * np.sqrt(0.21e2) * (-19 * t3507 + 106 * t3508 + 131 * t3509 - 249 * t3511 + 136 * t3513 + 1 + (-144 * t3509 + 6 * t3511 + 51 * t3513 - 19) * t3506) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 608:
            t3516 = np.cos(phi)
            t3517 = t3516 ** 2
            t3518 = t3516 * t3517
            t3521 = t3518 ** 2
            t3519 = t3517 ** 2
            t3515 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.15e2) * t3515 ** 2 * (70 * t3517 - 14 * t3518 + 126 * t3521 - 5 + (-210 + 51 * t3519) * t3519 + (-140 * t3519 + 170 * t3521 + 16) * t3516) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t3516) ** (-0.1e1 / 0.2e1)) * ((1 - t3516) ** (-0.1e1 / 0.2e1))

        if Bindx == 609:
            t3524 = np.cos(phi)
            t3525 = t3524 ** 2
            t3527 = t3525 ** 2
            t3531 = t3527 ** 2
            t3526 = t3524 * t3525
            t3529 = t3526 ** 2
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.2e1) * (207 * t3525 + 308 * t3526 - 273 * t3527 - 287 * t3529 + 408 * t3531 - 23 + (-798 * t3527 + 432 * t3529 + 102 * t3531 - 12) * t3524) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 610:
            t3534 = np.cos(phi)
            t3535 = t3534 ** 2
            t3536 = t3534 * t3535
            t3539 = t3536 ** 2
            t3537 = t3535 ** 2
            t3533 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3533 ** 2 * (-42 * t3535 - 294 * t3536 + 378 * t3539 + 21 + (-280 + 51 * t3537) * t3537 + (126 * t3537 + 238 * t3539 + 58) * t3534) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t3534) ** (-0.1e1 / 0.2e1)) * ((1 - t3534) ** (-0.1e1 / 0.2e1))

        if Bindx == 611:
            t3542 = np.cos(phi)
            t3543 = t3542 ** 2
            t3545 = t3543 ** 2
            t3549 = t3545 ** 2
            t3544 = t3542 * t3543
            t3547 = t3544 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (10 * t3543 - 14 * t3544 - 42 * t3545 + 14 * t3547 + 16 * t3549 + 2 + (-28 * t3545 + 30 * t3547 + 3 * t3549 + 9) * t3542) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 612:
            t3551 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t3551) ** (0.3e1 / 0.2e1)) * ((1 + t3551) ** (0.15e2 / 0.2e1)) * np.sin((6 * phi1 + 9 * phi2))

        if Bindx == 613:
            t3552 = np.cos(phi)
            t3553 = t3552 ** 2
            t3555 = t3553 ** 2
            t3561 = 14 * t3555
            t3559 = t3555 ** 2
            t3554 = t3552 * t3553
            t3557 = t3554 ** 2
            tfunc[..., c] = 0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (20 * t3553 - 28 * t3554 - 28 * t3557 - 7 * t3559 + t3561 + 1 + (20 * t3557 + t3559 + t3561 - 7) * t3552) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 614:
            t3563 = np.cos(phi)
            t3564 = t3563 ** 2
            t3565 = t3563 * t3564
            t3568 = t3565 ** 2
            t3566 = t3564 ** 2
            t3562 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3562 ** 2 * (-84 * t3564 + 56 * t3565 + 140 * t3568 - 7 + (70 + 9 * t3566) * t3566 + (-168 * t3566 - 56 * t3568 + 40) * t3563) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t3563) ** (-0.1e1 / 0.2e1)) * ((1 - t3563) ** (-0.1e1 / 0.2e1))

        if Bindx == 615:
            t3571 = np.cos(phi)
            t3572 = t3571 ** 2
            t3574 = t3572 ** 2
            t3578 = t3574 ** 2
            t3573 = t3571 * t3572
            t3576 = t3573 ** 2
            tfunc[..., c] = -0.19e2 / 0.512e3 * np.sqrt(0.2e1) * (-356 * t3572 - 812 * t3573 + 2002 * t3574 - 980 * t3576 - 833 * t3578 - 89 + (-1106 * t3574 + 1636 * t3576 + 153 * t3578 + 385) * t3571) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 616:
            t3581 = np.cos(phi)
            t3582 = t3581 ** 2
            t3583 = t3581 * t3582
            t3586 = t3583 ** 2
            t3584 = t3582 ** 2
            t3580 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3580 ** 2 * (-42 * t3582 + 294 * t3583 + 378 * t3586 + 21 + (-280 + 51 * t3584) * t3584 + (-126 * t3584 - 238 * t3586 - 58) * t3581) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t3581) ** (-0.1e1 / 0.2e1)) * ((1 - t3581) ** (-0.1e1 / 0.2e1))

        if Bindx == 617:
            t3589 = np.cos(phi)
            t3590 = t3589 ** 2
            t3592 = t3590 ** 2
            t3596 = t3592 ** 2
            t3591 = t3589 * t3590
            t3594 = t3591 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (-328 * t3590 + 560 * t3591 + 322 * t3592 + 560 * t3594 - 595 * t3596 + 41 + (-1246 * t3592 + 568 * t3594 + 153 * t3596 - 35) * t3589) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 618:
            t3606 = np.sin(phi)
            t3604 = t3606 ** 2
            t3598 = np.cos(phi)
            t3599 = t3598 ** 2
            t3601 = t3599 ** 2
            t3600 = t3598 * t3599
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3604 ** 2 * (-253 * t3599 + 397 * t3601 + 23 + (112 + 153 * t3600) * t3600 + (-476 * t3601 + 44) * t3598) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t3598) ** (-0.1e1 / 0.2e1)) * ((1 - t3598) ** (-0.1e1 / 0.2e1))

        if Bindx == 619:
            t3607 = np.cos(phi)
            t3608 = t3607 ** 2
            t3610 = t3608 ** 2
            t3614 = t3610 ** 2
            t3609 = t3607 * t3608
            t3612 = t3609 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (48 * t3608 + 104 * t3609 - 206 * t3610 + 280 * t3612 - 119 * t3614 - 3 + (-82 * t3610 - 48 * t3612 + 51 * t3614 - 25) * t3607) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 620:
            t3623 = np.sin(phi)
            t3620 = t3623 ** 2
            t3621 = t3623 * t3620
            t3616 = np.cos(phi)
            t3617 = t3616 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t3621 ** 2 * (70 * t3616 - 1 + (-238 * t3616 + 16 + 153 * t3617) * t3617) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t3616) ** (-0.1e1 / 0.2e1)) * ((1 - t3616) ** (-0.1e1 / 0.2e1))

        if Bindx == 621:
            t3624 = np.cos(phi)
            t3625 = t3624 ** 2
            t3627 = t3625 ** 2
            t3631 = t3627 ** 2
            t3626 = t3624 * t3625
            t3629 = t3626 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (140 * t3625 - 276 * t3626 - 378 * t3627 + 364 * t3629 - 119 * t3631 - 7 + (582 * t3627 - 500 * t3629 + 153 * t3631 + 41) * t3624) * np.cos((7 * phi1 - phi2))

        if Bindx == 622:
            t3637 = np.sin(phi)
            t3634 = t3637 ** 2
            t3635 = t3634 ** 2
            t3633 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.715e3) * t3635 ** 2 * (17 * t3633 ** 2 - 1) * np.sin((7 * phi1)) * ((1 + t3633) ** (-0.1e1 / 0.2e1)) * ((1 - t3633) ** (-0.1e1 / 0.2e1))

        if Bindx == 623:
            t3638 = np.cos(phi)
            t3639 = t3638 ** 2
            t3641 = t3639 ** 2
            t3645 = t3641 ** 2
            t3640 = t3638 * t3639
            t3643 = t3640 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.143e3) * (-140 * t3639 - 276 * t3640 + 378 * t3641 - 364 * t3643 + 119 * t3645 + 7 + (582 * t3641 - 500 * t3643 + 153 * t3645 + 41) * t3638) * np.cos((7 * phi1 + phi2))

        if Bindx == 624:
            t3654 = np.sin(phi)
            t3651 = t3654 ** 2
            t3652 = t3654 * t3651
            t3647 = np.cos(phi)
            t3648 = t3647 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.13e2) * np.sqrt(0.2e1) * t3652 ** 2 * (-70 * t3647 - 1 + (238 * t3647 + 16 + 153 * t3648) * t3648) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t3647) ** (-0.1e1 / 0.2e1)) * ((1 - t3647) ** (-0.1e1 / 0.2e1))

        if Bindx == 625:
            t3655 = np.cos(phi)
            t3656 = t3655 ** 2
            t3658 = t3656 ** 2
            t3662 = t3658 ** 2
            t3657 = t3655 * t3656
            t3660 = t3657 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.273e3) * (-48 * t3656 + 104 * t3657 + 206 * t3658 - 280 * t3660 + 119 * t3662 + 3 + (-82 * t3658 - 48 * t3660 + 51 * t3662 - 25) * t3655) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 626:
            t3672 = np.sin(phi)
            t3670 = t3672 ** 2
            t3664 = np.cos(phi)
            t3665 = t3664 ** 2
            t3667 = t3665 ** 2
            t3666 = t3664 * t3665
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.7e1) * t3670 ** 2 * (-253 * t3665 + 397 * t3667 + 23 + (-112 + 153 * t3666) * t3666 + (476 * t3667 - 44) * t3664) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t3664) ** (-0.1e1 / 0.2e1)) * ((1 - t3664) ** (-0.1e1 / 0.2e1))

        if Bindx == 627:
            t3673 = np.cos(phi)
            t3674 = t3673 ** 2
            t3676 = t3674 ** 2
            t3680 = t3676 ** 2
            t3675 = t3673 * t3674
            t3678 = t3675 ** 2
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (328 * t3674 + 560 * t3675 - 322 * t3676 - 560 * t3678 + 595 * t3680 - 41 + (-1246 * t3676 + 568 * t3678 + 153 * t3680 - 35) * t3673) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 628:
            t3683 = np.cos(phi)
            t3684 = t3683 ** 2
            t3685 = t3683 * t3684
            t3688 = t3685 ** 2
            t3686 = t3684 ** 2
            t3682 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t3682 ** 2 * (-42 * t3684 - 294 * t3685 + 378 * t3688 + 21 + (-280 + 51 * t3686) * t3686 + (126 * t3686 + 238 * t3688 + 58) * t3683) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t3683) ** (-0.1e1 / 0.2e1)) * ((1 - t3683) ** (-0.1e1 / 0.2e1))

        if Bindx == 629:
            t3691 = np.cos(phi)
            t3692 = t3691 ** 2
            t3694 = t3692 ** 2
            t3698 = t3694 ** 2
            t3693 = t3691 * t3692
            t3696 = t3693 ** 2
            tfunc[..., c] = 0.19e2 / 0.512e3 * np.sqrt(0.2e1) * (356 * t3692 - 812 * t3693 - 2002 * t3694 + 980 * t3696 + 833 * t3698 + 89 + (-1106 * t3694 + 1636 * t3696 + 153 * t3698 + 385) * t3691) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 630:
            t3701 = np.cos(phi)
            t3702 = t3701 ** 2
            t3703 = t3701 * t3702
            t3706 = t3703 ** 2
            t3704 = t3702 ** 2
            t3700 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3700 ** 2 * (-84 * t3702 - 56 * t3703 + 140 * t3706 - 7 + (70 + 9 * t3704) * t3704 + (168 * t3704 + 56 * t3706 - 40) * t3701) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t3701) ** (-0.1e1 / 0.2e1)) * ((1 - t3701) ** (-0.1e1 / 0.2e1))

        if Bindx == 631:
            t3709 = np.cos(phi)
            t3710 = t3709 ** 2
            t3712 = t3710 ** 2
            t3716 = t3712 ** 2
            t3711 = t3709 * t3710
            t3714 = t3711 ** 2
            tfunc[..., c] = -0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-20 * t3710 - 28 * t3711 - 14 * t3712 + 28 * t3714 + 7 * t3716 - 1 + (14 * t3712 + 20 * t3714 + t3716 - 7) * t3709) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 632:
            t3718 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * ((1 - t3718) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t3718)) * np.sin((8 * phi1 - 9 * phi2))

        if Bindx == 633:
            t3719 = np.cos(phi)
            t3720 = t3719 ** 2
            t3722 = t3720 ** 2
            t3726 = t3722 ** 2
            t3721 = t3719 * t3720
            t3724 = t3721 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (152 * t3720 - 196 * t3721 + 56 * t3722 - 280 * t3724 - 64 * t3726 + 8 + (182 * t3722 + 188 * t3724 + 9 * t3726 - 55) * t3719) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 634:
            t3729 = np.cos(phi)
            t3730 = t3729 ** 2
            t3731 = t3729 * t3730
            t3734 = t3731 ** 2
            t3732 = t3730 ** 2
            t3728 = np.sin(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3728 ** 2 * (-84 * t3730 + 56 * t3731 + 140 * t3734 - 7 + (70 + 9 * t3732) * t3732 + (-168 * t3732 - 56 * t3734 + 40) * t3729) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t3729) ** (-0.1e1 / 0.2e1)) * ((1 - t3729) ** (-0.1e1 / 0.2e1))

        if Bindx == 635:
            t3737 = np.cos(phi)
            t3738 = t3737 ** 2
            t3740 = t3738 ** 2
            t3744 = t3740 ** 2
            t3739 = t3737 * t3738
            t3742 = t3739 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (-10 * t3738 - 14 * t3739 + 42 * t3740 - 14 * t3742 - 16 * t3744 - 2 + (-28 * t3740 + 30 * t3742 + 3 * t3744 + 9) * t3737) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 636:
            t3754 = np.sin(phi)
            t3752 = t3754 ** 2
            t3746 = np.cos(phi)
            t3747 = t3746 ** 2
            t3749 = t3747 ** 2
            t3748 = t3746 * t3747
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3752 ** 2 * (-5 * t3747 + 65 * t3749 - 5 + (-40 + 9 * t3748) * t3748 + (-40 * t3749 + 16) * t3746) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t3746) ** (-0.1e1 / 0.2e1)) * ((1 - t3746) ** (-0.1e1 / 0.2e1))

        if Bindx == 637:
            t3755 = np.cos(phi)
            t3756 = t3755 ** 2
            t3758 = t3756 ** 2
            t3762 = t3758 ** 2
            t3757 = t3755 * t3756
            t3760 = t3757 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (-20 * t3756 + 52 * t3757 - 4 * t3758 + 52 * t3760 - 32 * t3762 + 4 + (-74 * t3758 + 20 * t3760 + 9 * t3762 - 7) * t3755) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 638:
            t3771 = np.sin(phi)
            t3768 = t3771 ** 2
            t3769 = t3771 * t3768
            t3764 = np.cos(phi)
            t3765 = t3764 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3769 ** 2 * (-1 + (-8 * t3764 + 6 + 3 * t3765) * t3765) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t3764) ** (-0.1e1 / 0.2e1)) * ((1 - t3764) ** (-0.1e1 / 0.2e1))

        if Bindx == 639:
            t3772 = np.cos(phi)
            t3773 = t3772 ** 2
            t3775 = t3773 ** 2
            t3779 = t3775 ** 2
            t3774 = t3772 * t3773
            t3777 = t3774 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (22 * t3773 + 6 * t3774 - 54 * t3775 + 50 * t3777 - 16 * t3779 - 2 + (12 * t3775 - 22 * t3777 + 9 * t3779 - 5) * t3772) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 640:
            t3785 = np.sin(phi)
            t3782 = t3785 ** 2
            t3783 = t3782 ** 2
            t3781 = np.cos(phi)
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t3783 ** 2 * (-1 + (-8 + 9 * t3781) * t3781) * np.sin((8 * phi1 - phi2)) * ((1 + t3781) ** (-0.1e1 / 0.2e1)) * ((1 - t3781) ** (-0.1e1 / 0.2e1))

        if Bindx == 641:
            t3786 = np.cos(phi)
            t3787 = t3786 ** 2
            t3791 = -4 * t3787
            t3788 = t3787 ** 2
            tfunc[..., c] = 0.57e2 / 0.128e3 * np.sqrt(0.12155e5) * t3786 * np.cos((8 * phi1)) * (t3791 + 1 + (t3791 + 6 + t3788) * t3788)

        if Bindx == 642:
            t3796 = np.sin(phi)
            t3793 = t3796 ** 2
            t3794 = t3793 ** 2
            t3792 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * t3794 ** 2 * (-1 + (8 + 9 * t3792) * t3792) * np.sin((8 * phi1 + phi2)) * ((1 + t3792) ** (-0.1e1 / 0.2e1)) * ((1 - t3792) ** (-0.1e1 / 0.2e1))

        if Bindx == 643:
            t3797 = np.cos(phi)
            t3798 = t3797 ** 2
            t3800 = t3798 ** 2
            t3804 = t3800 ** 2
            t3799 = t3797 * t3798
            t3802 = t3799 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.221e3) * (-22 * t3798 + 6 * t3799 + 54 * t3800 - 50 * t3802 + 16 * t3804 + 2 + (12 * t3800 - 22 * t3802 + 9 * t3804 - 5) * t3797) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 644:
            t3813 = np.sin(phi)
            t3810 = t3813 ** 2
            t3811 = t3813 * t3810
            t3806 = np.cos(phi)
            t3807 = t3806 ** 2
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.4641e4) * t3811 ** 2 * (-1 + (8 * t3806 + 6 + 3 * t3807) * t3807) * np.sin((8 * phi1 + 3 * phi2)) * ((1 + t3806) ** (-0.1e1 / 0.2e1)) * ((1 - t3806) ** (-0.1e1 / 0.2e1))

        if Bindx == 645:
            t3814 = np.cos(phi)
            t3815 = t3814 ** 2
            t3817 = t3815 ** 2
            t3821 = t3817 ** 2
            t3816 = t3814 * t3815
            t3819 = t3816 ** 2
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.119e3) * (20 * t3815 + 52 * t3816 + 4 * t3817 - 52 * t3819 + 32 * t3821 - 4 + (-74 * t3817 + 20 * t3819 + 9 * t3821 - 7) * t3814) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 646:
            t3831 = np.sin(phi)
            t3829 = t3831 ** 2
            t3823 = np.cos(phi)
            t3824 = t3823 ** 2
            t3826 = t3824 ** 2
            t3825 = t3823 * t3824
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.85e2) * t3829 ** 2 * (-5 * t3824 + 65 * t3826 - 5 + (40 + 9 * t3825) * t3825 + (40 * t3826 - 16) * t3823) * np.sin((8 * phi1 + 5 * phi2)) * ((1 + t3823) ** (-0.1e1 / 0.2e1)) * ((1 - t3823) ** (-0.1e1 / 0.2e1))

        if Bindx == 647:
            t3832 = np.cos(phi)
            t3833 = t3832 ** 2
            t3835 = t3833 ** 2
            t3839 = t3835 ** 2
            t3834 = t3832 * t3833
            t3837 = t3834 ** 2
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.51e2) * (10 * t3833 - 14 * t3834 - 42 * t3835 + 14 * t3837 + 16 * t3839 + 2 + (-28 * t3835 + 30 * t3837 + 3 * t3839 + 9) * t3832) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 648:
            t3842 = np.cos(phi)
            t3843 = t3842 ** 2
            t3844 = t3842 * t3843
            t3847 = t3844 ** 2
            t3845 = t3843 ** 2
            t3841 = np.sin(phi)
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.17e2) * t3841 ** 2 * (-84 * t3843 - 56 * t3844 + 140 * t3847 - 7 + (70 + 9 * t3845) * t3845 + (168 * t3845 + 56 * t3847 - 40) * t3842) * np.sin((8 * phi1 + 7 * phi2)) * ((1 + t3842) ** (-0.1e1 / 0.2e1)) * ((1 - t3842) ** (-0.1e1 / 0.2e1))

        if Bindx == 649:
            t3850 = np.cos(phi)
            t3851 = t3850 ** 2
            t3853 = t3851 ** 2
            t3857 = t3853 ** 2
            t3852 = t3850 * t3851
            t3855 = t3852 ** 2
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * (-152 * t3851 - 196 * t3852 - 56 * t3853 + 280 * t3855 + 64 * t3857 - 8 + (182 * t3853 + 188 * t3855 + 9 * t3857 - 55) * t3850) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 650:
            t3859 = np.cos(phi)
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt((1 - t3859)) * ((1 + t3859) ** (0.17e2 / 0.2e1)) * np.sin((8 * phi1 + 9 * phi2))

        if Bindx == 651:
            t3860 = np.cos(phi)
            t3861 = t3860 ** 2
            t3863 = t3861 ** 2
            t3867 = t3863 ** 2
            t3862 = t3860 * t3861
            t3865 = t3862 ** 2
            tfunc[..., c] = -0.19e2 / 0.512e3 * np.sqrt(0.2e1) * np.cos((9 * phi1 - 9 * phi2)) * (-36 * t3861 + 84 * t3862 - 126 * t3863 - 84 * t3865 - 9 * t3867 - 1 + (126 * t3863 + 36 * t3865 + t3867 + 9) * t3860)

        if Bindx == 652:
            t3869 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * ((1 - t3869) ** (0.17e2 / 0.2e1)) * np.sqrt((1 + t3869)) * np.sin((9 * phi1 - 8 * phi2))

        if Bindx == 653:
            t3870 = np.cos(phi)
            t3871 = t3870 ** 2
            t3873 = t3871 ** 2
            t3879 = 14 * t3873
            t3877 = t3873 ** 2
            t3872 = t3870 * t3871
            t3875 = t3872 ** 2
            tfunc[..., c] = 0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (20 * t3871 - 28 * t3872 - 28 * t3875 - 7 * t3877 + t3879 + 1 + (20 * t3875 + t3877 + t3879 - 7) * t3870) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 654:
            t3880 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t3880) ** (0.15e2 / 0.2e1)) * ((1 + t3880) ** (0.3e1 / 0.2e1)) * np.sin((9 * phi1 - 6 * phi2))

        if Bindx == 655:
            t3881 = np.cos(phi)
            t3882 = t3881 ** 2
            t3883 = t3882 ** 2
            t3886 = t3883 ** 2
            t3884 = t3881 * t3883
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((9 * phi1 - 5 * phi2)) * (14 * t3883 - 14 * t3884 - 5 * t3886 - 1 + (8 * t3884 - 8) * t3882 + (t3886 + 5) * t3881)

        if Bindx == 656:
            t3888 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t3888) ** (0.13e2 / 0.2e1)) * ((1 + t3888) ** (0.5e1 / 0.2e1)) * np.sin((9 * phi1 - 4 * phi2))

        if Bindx == 657:
            t3889 = np.cos(phi)
            t3890 = t3889 ** 2
            t3892 = t3890 ** 2
            t3897 = -6 * t3892
            t3895 = t3892 ** 2
            t3891 = t3889 * t3890
            tfunc[..., c] = 0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((9 * phi1 - 3 * phi2)) * (-3 * t3895 + t3897 + 1 + (8 + 8 * t3891) * t3891 + (t3895 + t3897 - 3) * t3889)

        if Bindx == 658:
            t3898 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t3898) ** (0.11e2 / 0.2e1)) * ((1 + t3898) ** (0.7e1 / 0.2e1)) * np.sin((9 * phi1 - 2 * phi2))

        if Bindx == 659:
            t3899 = np.cos(phi)
            t3900 = t3899 ** 2
            t3901 = t3899 * t3900
            t3902 = t3900 ** 2
            t3908 = -4 * t3901 ** 2 + 1 + (6 + t3902) * t3902
            tfunc[..., c] = -0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((9 * phi1 - phi2)) * (t3908 * t3899 + 4 * t3900 - 4 * t3901 - t3908)

        if Bindx == 660:
            t3909 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.12155e5) * ((1 - t3909) ** (0.9e1 / 0.2e1)) * ((1 + t3909) ** (0.9e1 / 0.2e1)) * np.sin((9 * phi1))

        if Bindx == 661:
            t3910 = np.cos(phi)
            t3911 = t3910 ** 2
            t3912 = t3910 * t3911
            t3913 = t3911 ** 2
            t3921 = -4 * t3912 ** 2 + 1 + (6 + t3913) * t3913
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2431e4) * np.cos((9 * phi1 + phi2)) * (t3921 * t3910 - 4 * t3911 - 4 * t3912 + t3921)

        if Bindx == 662:
            t3922 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * ((1 - t3922) ** (0.7e1 / 0.2e1)) * ((1 + t3922) ** (0.11e2 / 0.2e1)) * np.sin((9 * phi1 + 2 * phi2))

        if Bindx == 663:
            t3923 = np.cos(phi)
            t3924 = t3923 ** 2
            t3926 = t3924 ** 2
            t3929 = t3926 ** 2
            t3925 = t3923 * t3924
            tfunc[..., c] = -0.19e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4641e4) * np.cos((9 * phi1 + 3 * phi2)) * (6 * t3926 + 3 * t3929 - 1 + (8 - 8 * t3925) * t3925 + (-6 * t3926 + t3929 - 3) * t3923)

        if Bindx == 664:
            t3931 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.128e3 * np.sqrt(0.119e3) * ((1 - t3931) ** (0.5e1 / 0.2e1)) * ((1 + t3931) ** (0.13e2 / 0.2e1)) * np.sin((9 * phi1 + 4 * phi2))

        if Bindx == 665:
            t3932 = np.cos(phi)
            t3933 = t3932 ** 2
            t3939 = 8 * t3933
            t3934 = t3933 ** 2
            t3937 = t3934 ** 2
            tfunc[..., c] = 0.57e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * np.cos((9 * phi1 + 5 * phi2)) * (-14 * t3934 + 5 * t3937 + t3939 + 1 + ((t3939 - 14) * t3934 + t3937 + 5) * t3932)

        if Bindx == 666:
            t3940 = np.cos(phi)
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * ((1 - t3940) ** (0.3e1 / 0.2e1)) * ((1 + t3940) ** (0.15e2 / 0.2e1)) * np.sin((9 * phi1 + 6 * phi2))

        if Bindx == 667:
            t3941 = np.cos(phi)
            t3942 = t3941 ** 2
            t3944 = t3942 ** 2
            t3948 = t3944 ** 2
            t3943 = t3941 * t3942
            t3946 = t3943 ** 2
            tfunc[..., c] = -0.57e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-20 * t3942 - 28 * t3943 - 14 * t3944 + 28 * t3946 + 7 * t3948 - 1 + (14 * t3944 + 20 * t3946 + t3948 - 7) * t3941) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 668:
            t3950 = np.cos(phi)
            tfunc[..., c] = -0.57e2 / 0.256e3 * ((1 + t3950) ** (0.17e2 / 0.2e1)) * np.sin((9 * phi1 + 8 * phi2)) * np.sqrt((1 - t3950))

        if Bindx == 669:
            t3951 = np.cos(phi)
            t3952 = t3951 ** 2
            t3954 = t3952 ** 2
            t3960 = 126 * t3954
            t3958 = t3954 ** 2
            t3953 = t3951 * t3952
            t3956 = t3953 ** 2
            tfunc[..., c] = 0.19e2 / 0.512e3 * np.sqrt(0.2e1) * np.cos((9 * phi1 + 9 * phi2)) * (36 * t3952 + 84 * t3953 + 84 * t3956 + 9 * t3958 + t3960 + 1 + (36 * t3956 + t3958 + t3960 + 9) * t3951)

        if Bindx == 670:
            t3961 = np.cos(phi)
            t3962 = t3961 ** 2
            t3963 = t3962 ** 2
            t3965 = t3963 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t3965 - 0.315315e6 / 0.128e3 * t3963 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t3965 + 0.945945e6 / 0.128e3 * t3963 + 0.72765e5 / 0.256e3) * t3962

        if Bindx == 671:
            t3968 = np.cos(phi)
            t3969 = t3968 ** 2
            t3970 = t3969 ** 2
            t3967 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t3968 * t3967 ** 2 * (-1092 * t3969 + 63 + (-7956 * t3969 + 4914 + 4199 * t3970) * t3970) * np.sin(phi2) * ((1 + t3968) ** (-0.1e1 / 0.2e1)) * ((1 - t3968) ** (-0.1e1 / 0.2e1))

        if Bindx == 672:
            t3973 = np.cos(phi)
            t3974 = t3973 ** 2
            t3975 = t3974 ** 2
            t3977 = t3975 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t3975 - 10387 * t3977 - 7 + (8918 * t3975 + 4199 * t3977 + 371) * t3974) * np.cos((2 * phi2))

        if Bindx == 673:
            t3985 = np.sin(phi)
            t3983 = t3985 ** 2
            t3979 = np.cos(phi)
            t3980 = t3979 ** 2
            t3981 = t3980 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t3979 * t3983 ** 2 * (-357 * t3981 - 7 + (323 * t3981 + 105) * t3980) * np.sin((3 * phi2)) * ((1 + t3979) ** (-0.1e1 / 0.2e1)) * ((1 - t3979) ** (-0.1e1 / 0.2e1))

        if Bindx == 674:
            t3986 = np.cos(phi)
            t3987 = t3986 ** 2
            t3988 = t3987 ** 2
            t3990 = t3988 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t3988 - 901 * t3990 - 1 + (878 * t3988 + 323 * t3990 + 47) * t3987) * np.cos((4 * phi2))

        if Bindx == 675:
            t3998 = np.sin(phi)
            t3995 = t3998 ** 2
            t3996 = t3998 * t3995
            t3992 = np.cos(phi)
            t3993 = t3992 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t3992 * t3996 ** 2 * (15 + (-170 + 323 * t3993) * t3993) * np.sin((5 * phi2)) * ((1 + t3992) ** (-0.1e1 / 0.2e1)) * ((1 - t3992) ** (-0.1e1 / 0.2e1))

        if Bindx == 676:
            t3999 = np.cos(phi)
            t4000 = t3999 ** 2
            t4001 = t4000 ** 2
            t4003 = t4001 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t4001 - 1071 * t4003 - 3 + (1278 * t4001 + 323 * t4003 + 111) * t4000) * np.cos((6 * phi2))

        if Bindx == 677:
            t4009 = np.sin(phi)
            t4006 = t4009 ** 2
            t4007 = t4006 ** 2
            t4005 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t4005 * t4007 ** 2 * (19 * t4005 ** 2 - 3) * np.sin((7 * phi2)) * ((1 + t4005) ** (-0.1e1 / 0.2e1)) * ((1 - t4005) ** (-0.1e1 / 0.2e1))

        if Bindx == 678:
            t4010 = np.cos(phi)
            t4011 = t4010 ** 2
            t4012 = t4011 ** 2
            t4014 = t4012 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t4012 - 77 * t4014 - 1 + (118 * t4012 + 19 * t4014 + 23) * t4011) * np.cos((8 * phi2))

        if Bindx == 679:
            t4021 = np.sin(phi)
            t4017 = t4021 ** 2
            t4019 = t4021 * t4017 ** 2
            t4016 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t4016 * t4019 ** 2 * np.sin((9 * phi2)) * ((1 + t4016) ** (-0.1e1 / 0.2e1)) * ((1 - t4016) ** (-0.1e1 / 0.2e1))

        if Bindx == 680:
            t4022 = np.cos(phi)
            t4023 = t4022 ** 2
            t4024 = t4023 ** 2
            t4026 = t4024 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi2)) * (-10 * t4024 - 5 * t4026 - 1 + (10 * t4024 + t4026 + 5) * t4023)

        if Bindx == 681:
            t4028 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t4028) ** (0.11e2 / 0.2e1)) * ((1 + t4028) ** (0.9e1 / 0.2e1)) * np.sin((phi1 - 10 * phi2))

        if Bindx == 682:
            t4029 = np.cos(phi)
            t4039 = -9 * t4029
            t4030 = t4029 ** 2
            t4032 = t4030 ** 2
            t4033 = t4029 * t4032
            t4031 = t4029 * t4030
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t4030 + t4039 - 1 + (-54 + 10 * t4033) * t4033 + (-46 + (t4039 - 41) * t4032) * t4032 + (36 + (36 * t4029 + 64) * t4031) * t4031) * np.cos((phi1 - 9 * phi2))

        if Bindx == 683:
            t4046 = np.sin(phi)
            t4043 = t4046 ** 2
            t4044 = t4043 ** 2
            t4040 = np.cos(phi)
            t4041 = t4040 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t4044 ** 2 * (-76 * t4041 + 4 + (95 * t4041 - 23) * t4040) * np.sin((phi1 - 8 * phi2)) * ((1 + t4040) ** (-0.1e1 / 0.2e1)) * ((1 - t4040) ** (-0.1e1 / 0.2e1))

        if Bindx == 684:
            t4047 = np.cos(phi)
            t4048 = t4047 ** 2
            t4050 = t4048 ** 2
            t4054 = t4050 ** 2
            t4049 = t4047 * t4048
            t4052 = t4049 ** 2
            t4051 = t4047 * t4050
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t4048 + 196 * t4049 - 442 * t4050 + 816 * t4052 - 651 * t4054 - 3 + (-462 + 190 * t4051) * t4051 + (420 * t4052 - 133 * t4054 - 21) * t4047) * np.cos((phi1 - 7 * phi2))

        if Bindx == 685:
            t4065 = np.sin(phi)
            t4062 = t4065 ** 2
            t4063 = t4065 * t4062
            t4057 = np.cos(phi)
            t4058 = t4057 ** 2
            t4060 = t4058 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t4063 ** 2 * (306 * t4058 - 969 * t4060 - 9 + (-1054 * t4058 + 1615 * t4060 + 111) * t4057) * np.sin((phi1 - 6 * phi2)) * ((1 + t4057) ** (-0.1e1 / 0.2e1)) * ((1 - t4057) ** (-0.1e1 / 0.2e1))

        if Bindx == 686:
            t4066 = np.cos(phi)
            t4067 = t4066 ** 2
            t4069 = t4067 ** 2
            t4073 = t4069 ** 2
            t4068 = t4066 * t4067
            t4071 = t4068 ** 2
            t4070 = t4066 * t4069
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t4067 + 200 * t4068 - 838 * t4069 + 1956 * t4071 - 1887 * t4073 - 3 + (-678 + 646 * t4070) * t4070 + (816 * t4071 - 323 * t4073 - 15) * t4066) * np.cos((phi1 - 5 * phi2))

        if Bindx == 687:
            t4085 = np.sin(phi)
            t4083 = t4085 ** 2
            t4076 = np.cos(phi)
            t4077 = t4076 ** 2
            t4078 = t4076 * t4077
            t4081 = t4078 ** 2
            t4079 = t4077 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4083 ** 2 * (-90 * t4077 + 645 * t4078 + 510 * t4079 - 646 * t4081 + 2 + (-1989 * t4079 + 1615 * t4081 - 47) * t4076) * np.sin((phi1 - 4 * phi2)) * ((1 + t4076) ** (-0.1e1 / 0.2e1)) * ((1 - t4076) ** (-0.1e1 / 0.2e1))

        if Bindx == 688:
            t4086 = np.cos(phi)
            t4087 = t4086 ** 2
            t4089 = t4087 ** 2
            t4093 = t4089 ** 2
            t4088 = t4086 * t4087
            t4091 = t4088 ** 2
            t4090 = t4086 * t4089
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4087 + 336 * t4088 - 2758 * t4089 + 7532 * t4091 - 8347 * t4093 - 7 + (-1386 + 3230 * t4090) * t4090 + (2040 * t4091 - 969 * t4093 - 21) * t4086) * np.cos((phi1 - 3 * phi2))

        if Bindx == 689:
            t4097 = np.cos(phi)
            t4098 = t4097 ** 2
            t4100 = t4098 ** 2
            t4104 = t4100 ** 2
            t4099 = t4097 * t4098
            t4102 = t4099 ** 2
            t4096 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4096 ** 2 * (364 * t4098 - 6188 * t4099 - 2730 * t4100 + 6188 * t4102 - 4199 * t4104 - 7 + (26754 * t4100 - 41548 * t4102 + 20995 * t4104 + 371) * t4097) * np.sin((phi1 - 2 * phi2)) * ((1 + t4097) ** (-0.1e1 / 0.2e1)) * ((1 - t4097) ** (-0.1e1 / 0.2e1))

        if Bindx == 690:
            t4106 = np.cos(phi)
            t4107 = t4106 ** 2
            t4109 = t4107 ** 2
            t4113 = t4109 ** 2
            t4108 = t4106 * t4107
            t4111 = t4108 ** 2
            t4110 = t4106 * t4109
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * (3402 * t4107 + 1092 * t4108 - 28938 * t4109 + 85176 * t4111 - 101439 * t4113 - 63 + (-4914 + 41990 * t4110) * t4110 + (7956 * t4111 - 4199 * t4113 - 63) * t4106) * np.cos(phi1 - phi2)

        if Bindx == 691:
            t4117 = np.cos(phi)
            t4118 = t4117 ** 2
            t4119 = t4118 ** 2
            t4116 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t4117 * t4116 ** 2 * (-1092 * t4118 + 63 + (-7956 * t4118 + 4914 + 4199 * t4119) * t4119) * np.sin(phi1) * ((1 + t4117) ** (-0.1e1 / 0.2e1)) * ((1 - t4117) ** (-0.1e1 / 0.2e1))

        if Bindx == 692:
            t4122 = np.cos(phi)
            t4123 = t4122 ** 2
            t4125 = t4123 ** 2
            t4129 = t4125 ** 2
            t4124 = t4122 * t4123
            t4127 = t4124 ** 2
            t4126 = t4122 * t4125
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * (3402 * t4123 - 1092 * t4124 - 28938 * t4125 + 85176 * t4127 - 101439 * t4129 - 63 + (4914 + 41990 * t4126) * t4126 + (-7956 * t4127 + 4199 * t4129 + 63) * t4122) * np.cos(phi1 + phi2)

        if Bindx == 693:
            t4133 = np.cos(phi)
            t4134 = t4133 ** 2
            t4136 = t4134 ** 2
            t4140 = t4136 ** 2
            t4135 = t4133 * t4134
            t4138 = t4135 ** 2
            t4132 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4132 ** 2 * (-364 * t4134 - 6188 * t4135 + 2730 * t4136 - 6188 * t4138 + 4199 * t4140 + 7 + (26754 * t4136 - 41548 * t4138 + 20995 * t4140 + 371) * t4133) * np.sin((phi1 + 2 * phi2)) * ((1 + t4133) ** (-0.1e1 / 0.2e1)) * ((1 - t4133) ** (-0.1e1 / 0.2e1))

        if Bindx == 694:
            t4142 = np.cos(phi)
            t4143 = t4142 ** 2
            t4145 = t4143 ** 2
            t4149 = t4145 ** 2
            t4144 = t4142 * t4143
            t4147 = t4144 ** 2
            t4146 = t4142 * t4145
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4143 - 336 * t4144 - 2758 * t4145 + 7532 * t4147 - 8347 * t4149 - 7 + (1386 + 3230 * t4146) * t4146 + (-2040 * t4147 + 969 * t4149 + 21) * t4142) * np.cos((phi1 + 3 * phi2))

        if Bindx == 695:
            t4161 = np.sin(phi)
            t4159 = t4161 ** 2
            t4152 = np.cos(phi)
            t4153 = t4152 ** 2
            t4154 = t4152 * t4153
            t4157 = t4154 ** 2
            t4155 = t4153 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4159 ** 2 * (90 * t4153 + 645 * t4154 - 510 * t4155 + 646 * t4157 - 2 + (-1989 * t4155 + 1615 * t4157 - 47) * t4152) * np.sin((phi1 + 4 * phi2)) * ((1 + t4152) ** (-0.1e1 / 0.2e1)) * ((1 - t4152) ** (-0.1e1 / 0.2e1))

        if Bindx == 696:
            t4162 = np.cos(phi)
            t4163 = t4162 ** 2
            t4165 = t4163 ** 2
            t4169 = t4165 ** 2
            t4164 = t4162 * t4163
            t4167 = t4164 ** 2
            t4166 = t4162 * t4165
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t4163 - 200 * t4164 - 838 * t4165 + 1956 * t4167 - 1887 * t4169 - 3 + (678 + 646 * t4166) * t4166 + (-816 * t4167 + 323 * t4169 + 15) * t4162) * np.cos((phi1 + 5 * phi2))

        if Bindx == 697:
            t4180 = np.sin(phi)
            t4177 = t4180 ** 2
            t4178 = t4180 * t4177
            t4172 = np.cos(phi)
            t4173 = t4172 ** 2
            t4175 = t4173 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t4178 ** 2 * (-306 * t4173 + 969 * t4175 + 9 + (-1054 * t4173 + 1615 * t4175 + 111) * t4172) * np.sin((phi1 + 6 * phi2)) * ((1 + t4172) ** (-0.1e1 / 0.2e1)) * ((1 - t4172) ** (-0.1e1 / 0.2e1))

        if Bindx == 698:
            t4181 = np.cos(phi)
            t4182 = t4181 ** 2
            t4184 = t4182 ** 2
            t4188 = t4184 ** 2
            t4183 = t4181 * t4182
            t4186 = t4183 ** 2
            t4185 = t4181 * t4184
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t4182 - 196 * t4183 - 442 * t4184 + 816 * t4186 - 651 * t4188 - 3 + (462 + 190 * t4185) * t4185 + (-420 * t4186 + 133 * t4188 + 21) * t4181) * np.cos((phi1 + 7 * phi2))

        if Bindx == 699:
            t4197 = np.sin(phi)
            t4194 = t4197 ** 2
            t4195 = t4194 ** 2
            t4191 = np.cos(phi)
            t4192 = t4191 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t4195 ** 2 * (76 * t4192 - 4 + (95 * t4192 - 23) * t4191) * np.sin((phi1 + 8 * phi2)) * ((1 + t4191) ** (-0.1e1 / 0.2e1)) * ((1 - t4191) ** (-0.1e1 / 0.2e1))

        if Bindx == 700:
            t4198 = np.cos(phi)
            t4208 = 9 * t4198
            t4199 = t4198 ** 2
            t4201 = t4199 ** 2
            t4202 = t4198 * t4201
            t4200 = t4198 * t4199
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t4199 + t4208 - 1 + (54 + 10 * t4202) * t4202 + (-46 + (t4208 - 41) * t4201) * t4201 + (-36 + (-36 * t4198 + 64) * t4200) * t4200) * np.cos((phi1 + 9 * phi2))

        if Bindx == 701:
            t4209 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t4209) ** (0.9e1 / 0.2e1)) * ((1 + t4209) ** (0.11e2 / 0.2e1)) * np.sin((phi1 + 10 * phi2))

        if Bindx == 702:
            t4210 = np.cos(phi)
            t4220 = -2 * t4210
            t4211 = t4210 ** 2
            t4213 = t4211 ** 2
            t4214 = t4210 * t4213
            t4212 = t4210 * t4211
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((2 * phi1 - 10 * phi2)) * (-3 * t4211 + t4220 + 1 + (-12 + t4214) * t4214 + (2 + (t4220 - 3) * t4213) * t4213 + (8 + (8 * t4210 + 2) * t4212) * t4212)

        if Bindx == 703:
            t4227 = np.sin(phi)
            t4224 = t4227 ** 2
            t4225 = t4224 ** 2
            t4221 = np.cos(phi)
            t4222 = t4221 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t4225 ** 2 * (-9 * t4222 + 1 + (5 * t4222 + 3) * t4221) * np.sin((2 * phi1 - 9 * phi2)) * ((1 + t4221) ** (-0.1e1 / 0.2e1)) * ((1 - t4221) ** (-0.1e1 / 0.2e1))

        if Bindx == 704:
            t4228 = np.cos(phi)
            t4229 = t4228 ** 2
            t4231 = t4229 ** 2
            t4235 = t4231 ** 2
            t4230 = t4228 * t4229
            t4233 = t4230 ** 2
            t4232 = t4228 * t4231
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t4229 + 272 * t4230 - 38 * t4231 + 230 * t4233 - 267 * t4235 + 1 + (-576 + 95 * t4232) * t4232 + (496 * t4233 - 152 * t4235 - 40) * t4228) * np.cos((2 * phi1 - 8 * phi2))

        if Bindx == 705:
            t4246 = np.sin(phi)
            t4243 = t4246 ** 2
            t4244 = t4246 * t4243
            t4238 = np.cos(phi)
            t4239 = t4238 ** 2
            t4241 = t4239 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t4244 ** 2 * (182 * t4239 - 399 * t4241 - 7 + (-66 * t4239 + 285 * t4241 + 5) * t4238) * np.sin((2 * phi1 - 7 * phi2)) * ((1 + t4238) ** (-0.1e1 / 0.2e1)) * ((1 - t4238) ** (-0.1e1 / 0.2e1))

        if Bindx == 706:
            t4247 = np.cos(phi)
            t4248 = t4247 ** 2
            t4250 = t4248 ** 2
            t4254 = t4250 ** 2
            t4249 = t4247 * t4248
            t4252 = t4249 ** 2
            t4251 = t4247 * t4250
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t4248 + 4888 * t4249 - 4486 * t4250 + 11898 * t4252 - 12903 * t4254 - 19 + (-14276 + 4845 * t4251) * t4251 + (15640 * t4252 - 5814 * t4254 - 438) * t4247) * np.cos((2 * phi1 - 6 * phi2))

        if Bindx == 707:
            t4266 = np.sin(phi)
            t4264 = t4266 ** 2
            t4257 = np.cos(phi)
            t4258 = t4257 ** 2
            t4259 = t4257 * t4258
            t4262 = t4259 ** 2
            t4260 = t4258 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t4264 ** 2 * (-195 * t4258 + 355 * t4259 + 935 * t4260 - 969 * t4262 + 5 + (-1071 * t4260 + 969 * t4262 - 29) * t4257) * np.sin((2 * phi1 - 5 * phi2)) * ((1 + t4257) ** (-0.1e1 / 0.2e1)) * ((1 - t4257) ** (-0.1e1 / 0.2e1))

        if Bindx == 708:
            t4267 = np.cos(phi)
            t4268 = t4267 ** 2
            t4270 = t4268 ** 2
            t4274 = t4270 ** 2
            t4269 = t4267 * t4268
            t4272 = t4269 ** 2
            t4271 = t4267 * t4270
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4268 + 1784 * t4269 - 4282 * t4270 + 11258 * t4272 - 12393 * t4274 - 13 + (-6624 + 4845 * t4271) * t4271 + (8840 * t4272 - 3876 * t4274 - 124) * t4267) * np.cos((2 * phi1 - 4 * phi2))

        if Bindx == 709:
            t4278 = np.cos(phi)
            t4279 = t4278 ** 2
            t4281 = t4279 ** 2
            t4285 = t4281 ** 2
            t4280 = t4278 * t4279
            t4283 = t4280 ** 2
            t4277 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4277 ** 2 * (336 * t4279 - 1624 * t4280 - 2310 * t4281 + 4760 * t4283 - 2907 * t4285 - 7 + (6594 * t4281 - 9792 * t4283 + 4845 * t4285 + 105) * t4278) * np.sin((2 * phi1 - 3 * phi2)) * ((1 + t4278) ** (-0.1e1 / 0.2e1)) * ((1 - t4278) ** (-0.1e1 / 0.2e1))

        if Bindx == 710:
            t4287 = np.cos(phi)
            t4288 = t4287 ** 2
            t4290 = t4288 ** 2
            t4294 = t4290 ** 2
            t4289 = t4287 * t4288
            t4292 = t4289 ** 2
            t4291 = t4287 * t4290
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (6069 * t4288 + 8008 * t4289 - 48958 * t4290 + 137410 * t4292 - 157131 * t4294 - 119 + (-33852 + 62985 * t4291) * t4291 + (51272 * t4292 - 25194 * t4294 - 490) * t4287) * np.cos((2 * phi1 - 2 * phi2))

        if Bindx == 711:
            t4298 = np.cos(phi)
            t4299 = t4298 ** 2
            t4301 = t4299 ** 2
            t4305 = t4301 ** 2
            t4300 = t4298 * t4299
            t4303 = t4300 ** 2
            t4297 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4297 ** 2 * (364 * t4299 - 6188 * t4300 - 2730 * t4301 + 6188 * t4303 - 4199 * t4305 - 7 + (26754 * t4301 - 41548 * t4303 + 20995 * t4305 + 371) * t4298) * np.sin((2 * phi1 - phi2)) * ((1 + t4298) ** (-0.1e1 / 0.2e1)) * ((1 - t4298) ** (-0.1e1 / 0.2e1))

        if Bindx == 712:
            t4307 = np.cos(phi)
            t4308 = t4307 ** 2
            t4309 = t4308 ** 2
            t4311 = t4309 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t4309 - 10387 * t4311 - 7 + (8918 * t4309 + 4199 * t4311 + 371) * t4308) * np.cos((2 * phi1))

        if Bindx == 713:
            t4314 = np.cos(phi)
            t4315 = t4314 ** 2
            t4317 = t4315 ** 2
            t4321 = t4317 ** 2
            t4316 = t4314 * t4315
            t4319 = t4316 ** 2
            t4313 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.3e1) * t4313 ** 2 * (-364 * t4315 - 6188 * t4316 + 2730 * t4317 - 6188 * t4319 + 4199 * t4321 + 7 + (26754 * t4317 - 41548 * t4319 + 20995 * t4321 + 371) * t4314) * np.sin((2 * phi1 + phi2)) * ((1 + t4314) ** (-0.1e1 / 0.2e1)) * ((1 - t4314) ** (-0.1e1 / 0.2e1))

        if Bindx == 714:
            t4323 = np.cos(phi)
            t4324 = t4323 ** 2
            t4326 = t4324 ** 2
            t4330 = t4326 ** 2
            t4325 = t4323 * t4324
            t4328 = t4325 ** 2
            t4327 = t4323 * t4326
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (6069 * t4324 - 8008 * t4325 - 48958 * t4326 + 137410 * t4328 - 157131 * t4330 - 119 + (33852 + 62985 * t4327) * t4327 + (-51272 * t4328 + 25194 * t4330 + 490) * t4323) * np.cos((2 * phi1 + 2 * phi2))

        if Bindx == 715:
            t4334 = np.cos(phi)
            t4335 = t4334 ** 2
            t4337 = t4335 ** 2
            t4341 = t4337 ** 2
            t4336 = t4334 * t4335
            t4339 = t4336 ** 2
            t4333 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4333 ** 2 * (-336 * t4335 - 1624 * t4336 + 2310 * t4337 - 4760 * t4339 + 2907 * t4341 + 7 + (6594 * t4337 - 9792 * t4339 + 4845 * t4341 + 105) * t4334) * np.sin((2 * phi1 + 3 * phi2)) * ((1 + t4334) ** (-0.1e1 / 0.2e1)) * ((1 - t4334) ** (-0.1e1 / 0.2e1))

        if Bindx == 716:
            t4343 = np.cos(phi)
            t4344 = t4343 ** 2
            t4346 = t4344 ** 2
            t4350 = t4346 ** 2
            t4345 = t4343 * t4344
            t4348 = t4345 ** 2
            t4347 = t4343 * t4346
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4344 - 1784 * t4345 - 4282 * t4346 + 11258 * t4348 - 12393 * t4350 - 13 + (6624 + 4845 * t4347) * t4347 + (-8840 * t4348 + 3876 * t4350 + 124) * t4343) * np.cos((2 * phi1 + 4 * phi2))

        if Bindx == 717:
            t4353 = np.cos(phi)
            t4354 = t4353 ** 2
            t4355 = t4353 * t4354
            t4363 = 969 * t4355 ** 2
            t4362 = np.sin(phi)
            t4360 = t4362 ** 2
            t4356 = t4354 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t4360 ** 2 * (195 * t4354 + 355 * t4355 - 935 * t4356 + t4363 - 5 + (-1071 * t4356 + t4363 - 29) * t4353) * np.sin((2 * phi1 + 5 * phi2)) * ((1 + t4353) ** (-0.1e1 / 0.2e1)) * ((1 - t4353) ** (-0.1e1 / 0.2e1))

        if Bindx == 718:
            t4364 = np.cos(phi)
            t4365 = t4364 ** 2
            t4367 = t4365 ** 2
            t4371 = t4367 ** 2
            t4366 = t4364 * t4365
            t4369 = t4366 ** 2
            t4368 = t4364 * t4367
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t4365 - 4888 * t4366 - 4486 * t4367 + 11898 * t4369 - 12903 * t4371 - 19 + (14276 + 4845 * t4368) * t4368 + (-15640 * t4369 + 5814 * t4371 + 438) * t4364) * np.cos((2 * phi1 + 6 * phi2))

        if Bindx == 719:
            t4382 = np.sin(phi)
            t4379 = t4382 ** 2
            t4380 = t4382 * t4379
            t4374 = np.cos(phi)
            t4375 = t4374 ** 2
            t4377 = t4375 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t4380 ** 2 * (-182 * t4375 + 399 * t4377 + 7 + (-66 * t4375 + 285 * t4377 + 5) * t4374) * np.sin((2 * phi1 + 7 * phi2)) * ((1 + t4374) ** (-0.1e1 / 0.2e1)) * ((1 - t4374) ** (-0.1e1 / 0.2e1))

        if Bindx == 720:
            t4383 = np.cos(phi)
            t4384 = t4383 ** 2
            t4386 = t4384 ** 2
            t4390 = t4386 ** 2
            t4385 = t4383 * t4384
            t4388 = t4385 ** 2
            t4387 = t4383 * t4386
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t4384 - 272 * t4385 - 38 * t4386 + 230 * t4388 - 267 * t4390 + 1 + (576 + 95 * t4387) * t4387 + (-496 * t4388 + 152 * t4390 + 40) * t4383) * np.cos((2 * phi1 + 8 * phi2))

        if Bindx == 721:
            t4399 = np.sin(phi)
            t4396 = t4399 ** 2
            t4397 = t4396 ** 2
            t4393 = np.cos(phi)
            t4394 = t4393 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t4397 ** 2 * (9 * t4394 - 1 + (5 * t4394 + 3) * t4393) * np.sin((2 * phi1 + 9 * phi2)) * ((1 + t4393) ** (-0.1e1 / 0.2e1)) * ((1 - t4393) ** (-0.1e1 / 0.2e1))

        if Bindx == 722:
            t4400 = np.cos(phi)
            t4410 = 2 * t4400
            t4401 = t4400 ** 2
            t4403 = t4401 ** 2
            t4404 = t4400 * t4403
            t4402 = t4400 * t4401
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((2 * phi1 + 10 * phi2)) * (-3 * t4401 + t4410 + 1 + (12 + t4404) * t4404 + (2 + (t4410 - 3) * t4403) * t4403 + (-8 + (-8 * t4400 + 2) * t4402) * t4402)

        if Bindx == 723:
            t4411 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t4411) ** (0.13e2 / 0.2e1)) * ((1 + t4411) ** (0.7e1 / 0.2e1)) * np.sin((3 * phi1 - 10 * phi2))

        if Bindx == 724:
            t4412 = np.cos(phi)
            t4413 = t4412 ** 2
            t4415 = t4413 ** 2
            t4419 = t4415 ** 2
            t4414 = t4412 * t4413
            t4417 = t4414 ** 2
            t4416 = t4412 * t4415
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t4413 + 24 * t4414 + 62 * t4415 - 36 * t4417 - 9 * t4419 + 3 + (-78 + 10 * t4416) * t4416 + (80 * t4417 - 27 * t4419 + 1) * t4412) * np.cos((3 * phi1 - 9 * phi2))

        if Bindx == 725:
            t4430 = np.sin(phi)
            t4427 = t4430 ** 2
            t4428 = t4430 * t4427
            t4422 = np.cos(phi)
            t4423 = t4422 ** 2
            t4425 = t4423 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t4428 ** 2 * (64 * t4423 - 228 * t4425 - 4 + (118 * t4423 + 95 * t4425 - 45) * t4422) * np.sin((3 * phi1 - 8 * phi2)) * ((1 + t4422) ** (-0.1e1 / 0.2e1)) * ((1 - t4422) ** (-0.1e1 / 0.2e1))

        if Bindx == 726:
            t4431 = np.cos(phi)
            t4432 = t4431 ** 2
            t4434 = t4432 ** 2
            t4438 = t4434 ** 2
            t4433 = t4431 * t4432
            t4436 = t4433 ** 2
            t4435 = t4431 * t4434
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t4432 + 952 * t4433 + 782 * t4434 - 180 * t4436 - 897 * t4438 + 11 + (-2786 + 570 * t4435) * t4435 + (3136 * t4436 - 1197 * t4438 - 105) * t4431) * np.cos((3 * phi1 - 7 * phi2))

        if Bindx == 727:
            t4450 = np.sin(phi)
            t4448 = t4450 ** 2
            t4441 = np.cos(phi)
            t4442 = t4441 ** 2
            t4443 = t4441 * t4442
            t4446 = t4443 ** 2
            t4444 = t4442 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t4448 ** 2 * (-2139 * t4442 - 1089 * t4443 + 8551 * t4444 - 8721 * t4446 + 69 + (-1683 * t4444 + 4845 * t4446 + 167) * t4441) * np.sin((3 * phi1 - 6 * phi2)) * ((1 + t4441) ** (-0.1e1 / 0.2e1)) * ((1 - t4441) ** (-0.1e1 / 0.2e1))

        if Bindx == 728:
            t4451 = np.cos(phi)
            t4452 = t4451 ** 2
            t4454 = t4452 ** 2
            t4458 = t4454 ** 2
            t4453 = t4451 * t4452
            t4456 = t4453 ** 2
            t4455 = t4451 * t4454
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t4452 + 1660 * t4453 - 562 * t4454 + 2616 * t4456 - 4029 * t4458 - 1 + (-5486 + 1938 * t4455) * t4455 + (6868 * t4456 - 2907 * t4458 - 135) * t4451) * np.cos((3 * phi1 - 5 * phi2))

        if Bindx == 729:
            t4462 = np.cos(phi)
            t4463 = t4462 ** 2
            t4465 = t4463 ** 2
            t4469 = t4465 ** 2
            t4464 = t4462 * t4463
            t4467 = t4464 ** 2
            t4461 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * t4461 ** 2 * (924 * t4463 - 1168 * t4464 - 5580 * t4465 + 10268 * t4467 - 5814 * t4469 - 22 + (5034 * t4465 - 8568 * t4467 + 4845 * t4469 + 81) * t4462) * np.sin((3 * phi1 - 4 * phi2)) * ((1 + t4462) ** (-0.1e1 / 0.2e1)) * ((1 - t4462) ** (-0.1e1 / 0.2e1))

        if Bindx == 730:
            t4471 = np.cos(phi)
            t4472 = t4471 ** 2
            t4474 = t4472 ** 2
            t4478 = t4474 ** 2
            t4473 = t4471 * t4472
            t4476 = t4473 ** 2
            t4475 = t4471 * t4474
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (966 * t4472 + 3612 * t4473 - 7322 * t4474 + 20160 * t4476 - 23409 * t4478 - 21 + (-13818 + 9690 * t4475) * t4475 + (19108 * t4476 - 8721 * t4478 - 245) * t4471) * np.cos((3 * phi1 - 3 * phi2))

        if Bindx == 731:
            t4482 = np.cos(phi)
            t4483 = t4482 ** 2
            t4485 = t4483 ** 2
            t4489 = t4485 ** 2
            t4484 = t4482 * t4483
            t4487 = t4484 ** 2
            t4481 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4481 ** 2 * (336 * t4483 - 1624 * t4484 - 2310 * t4485 + 4760 * t4487 - 2907 * t4489 - 7 + (6594 * t4485 - 9792 * t4487 + 4845 * t4489 + 105) * t4482) * np.sin((3 * phi1 - 2 * phi2)) * ((1 + t4482) ** (-0.1e1 / 0.2e1)) * ((1 - t4482) ** (-0.1e1 / 0.2e1))

        if Bindx == 732:
            t4491 = np.cos(phi)
            t4492 = t4491 ** 2
            t4494 = t4492 ** 2
            t4498 = t4494 ** 2
            t4493 = t4491 * t4492
            t4496 = t4493 ** 2
            t4495 = t4491 * t4494
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4492 + 336 * t4493 - 2758 * t4494 + 7532 * t4496 - 8347 * t4498 - 7 + (-1386 + 3230 * t4495) * t4495 + (2040 * t4496 - 969 * t4498 - 21) * t4491) * np.cos((3 * phi1 - phi2))

        if Bindx == 733:
            t4507 = np.sin(phi)
            t4505 = t4507 ** 2
            t4501 = np.cos(phi)
            t4502 = t4501 ** 2
            t4503 = t4502 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t4501 * t4505 ** 2 * (-357 * t4503 - 7 + (323 * t4503 + 105) * t4502) * np.sin((3 * phi1)) * ((1 + t4501) ** (-0.1e1 / 0.2e1)) * ((1 - t4501) ** (-0.1e1 / 0.2e1))

        if Bindx == 734:
            t4508 = np.cos(phi)
            t4509 = t4508 ** 2
            t4511 = t4509 ** 2
            t4515 = t4511 ** 2
            t4510 = t4508 * t4509
            t4513 = t4510 ** 2
            t4512 = t4508 * t4511
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.39e2) * (350 * t4509 - 336 * t4510 - 2758 * t4511 + 7532 * t4513 - 8347 * t4515 - 7 + (1386 + 3230 * t4512) * t4512 + (-2040 * t4513 + 969 * t4515 + 21) * t4508) * np.cos((3 * phi1 + phi2))

        if Bindx == 735:
            t4519 = np.cos(phi)
            t4520 = t4519 ** 2
            t4522 = t4520 ** 2
            t4526 = t4522 ** 2
            t4521 = t4519 * t4520
            t4524 = t4521 ** 2
            t4518 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.13e2) * t4518 ** 2 * (-336 * t4520 - 1624 * t4521 + 2310 * t4522 - 4760 * t4524 + 2907 * t4526 + 7 + (6594 * t4522 - 9792 * t4524 + 4845 * t4526 + 105) * t4519) * np.sin((3 * phi1 + 2 * phi2)) * ((1 + t4519) ** (-0.1e1 / 0.2e1)) * ((1 - t4519) ** (-0.1e1 / 0.2e1))

        if Bindx == 736:
            t4528 = np.cos(phi)
            t4529 = t4528 ** 2
            t4531 = t4529 ** 2
            t4535 = t4531 ** 2
            t4530 = t4528 * t4529
            t4533 = t4530 ** 2
            t4532 = t4528 * t4531
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (966 * t4529 - 3612 * t4530 - 7322 * t4531 + 20160 * t4533 - 23409 * t4535 - 21 + (13818 + 9690 * t4532) * t4532 + (-19108 * t4533 + 8721 * t4535 + 245) * t4528) * np.cos((3 * phi1 + 3 * phi2))

        if Bindx == 737:
            t4539 = np.cos(phi)
            t4540 = t4539 ** 2
            t4542 = t4540 ** 2
            t4546 = t4542 ** 2
            t4541 = t4539 * t4540
            t4544 = t4541 ** 2
            t4538 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * t4538 ** 2 * (-924 * t4540 - 1168 * t4541 + 5580 * t4542 - 10268 * t4544 + 5814 * t4546 + 22 + (5034 * t4542 - 8568 * t4544 + 4845 * t4546 + 81) * t4539) * np.sin((3 * phi1 + 4 * phi2)) * ((1 + t4539) ** (-0.1e1 / 0.2e1)) * ((1 - t4539) ** (-0.1e1 / 0.2e1))

        if Bindx == 738:
            t4548 = np.cos(phi)
            t4549 = t4548 ** 2
            t4551 = t4549 ** 2
            t4555 = t4551 ** 2
            t4550 = t4548 * t4549
            t4553 = t4550 ** 2
            t4552 = t4548 * t4551
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t4549 - 1660 * t4550 - 562 * t4551 + 2616 * t4553 - 4029 * t4555 - 1 + (5486 + 1938 * t4552) * t4552 + (-6868 * t4553 + 2907 * t4555 + 135) * t4548) * np.cos((3 * phi1 + 5 * phi2))

        if Bindx == 739:
            t4567 = np.sin(phi)
            t4565 = t4567 ** 2
            t4558 = np.cos(phi)
            t4559 = t4558 ** 2
            t4560 = t4558 * t4559
            t4563 = t4560 ** 2
            t4561 = t4559 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t4565 ** 2 * (2139 * t4559 - 1089 * t4560 - 8551 * t4561 + 8721 * t4563 - 69 + (-1683 * t4561 + 4845 * t4563 + 167) * t4558) * np.sin((3 * phi1 + 6 * phi2)) * ((1 + t4558) ** (-0.1e1 / 0.2e1)) * ((1 - t4558) ** (-0.1e1 / 0.2e1))

        if Bindx == 740:
            t4568 = np.cos(phi)
            t4569 = t4568 ** 2
            t4571 = t4569 ** 2
            t4575 = t4571 ** 2
            t4570 = t4568 * t4569
            t4573 = t4570 ** 2
            t4572 = t4568 * t4571
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t4569 - 952 * t4570 + 782 * t4571 - 180 * t4573 - 897 * t4575 + 11 + (2786 + 570 * t4572) * t4572 + (-3136 * t4573 + 1197 * t4575 + 105) * t4568) * np.cos((3 * phi1 + 7 * phi2))

        if Bindx == 741:
            t4586 = np.sin(phi)
            t4583 = t4586 ** 2
            t4584 = t4586 * t4583
            t4578 = np.cos(phi)
            t4579 = t4578 ** 2
            t4581 = t4579 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t4584 ** 2 * (-64 * t4579 + 228 * t4581 + 4 + (118 * t4579 + 95 * t4581 - 45) * t4578) * np.sin((3 * phi1 + 8 * phi2)) * ((1 + t4578) ** (-0.1e1 / 0.2e1)) * ((1 - t4578) ** (-0.1e1 / 0.2e1))

        if Bindx == 742:
            t4587 = np.cos(phi)
            t4588 = t4587 ** 2
            t4590 = t4588 ** 2
            t4594 = t4590 ** 2
            t4589 = t4587 * t4588
            t4592 = t4589 ** 2
            t4591 = t4587 * t4590
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t4588 - 24 * t4589 + 62 * t4590 - 36 * t4592 - 9 * t4594 + 3 + (78 + 10 * t4591) * t4591 + (-80 * t4592 + 27 * t4594 - 1) * t4587) * np.cos((3 * phi1 + 9 * phi2))

        if Bindx == 743:
            t4597 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t4597) ** (0.7e1 / 0.2e1)) * ((1 + t4597) ** (0.13e2 / 0.2e1)) * np.sin((3 * phi1 + 10 * phi2))

        if Bindx == 744:
            t4598 = np.cos(phi)
            t4599 = t4598 ** 2
            t4601 = t4599 ** 2
            t4604 = t4601 ** 2
            t4605 = t4598 * t4604
            t4600 = t4598 * t4599
            t4602 = t4600 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((4 * phi1 - 10 * phi2)) * (-3 * t4599 - 8 * t4600 + 14 * t4601 - 14 * t4602 + 3 * t4604 - 4 * t4605 - 1 + (8 * t4602 + t4605 + 4) * t4598)

        if Bindx == 745:
            t4615 = np.sin(phi)
            t4612 = t4615 ** 2
            t4613 = t4615 * t4612
            t4607 = np.cos(phi)
            t4608 = t4607 ** 2
            t4610 = t4608 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t4613 ** 2 * (-8 * t4608 - 18 * t4610 + 2 + (22 * t4608 + 5 * t4610 - 3) * t4607) * np.sin((4 * phi1 - 9 * phi2)) * ((1 + t4607) ** (-0.1e1 / 0.2e1)) * ((1 - t4607) ** (-0.1e1 / 0.2e1))

        if Bindx == 746:
            t4616 = np.cos(phi)
            t4617 = t4616 ** 2
            t4619 = t4617 ** 2
            t4623 = t4619 ** 2
            t4618 = t4616 * t4617
            t4621 = t4618 ** 2
            t4620 = t4616 * t4619
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t4617 - 32 * t4618 + 574 * t4619 - 602 * t4621 + 87 * t4623 + 11 + (-336 + 95 * t4620) * t4620 + (640 * t4621 - 304 * t4623 + 32) * t4616) * np.cos((4 * phi1 - 8 * phi2))

        if Bindx == 747:
            t4635 = np.sin(phi)
            t4633 = t4635 ** 2
            t4626 = np.cos(phi)
            t4627 = t4626 ** 2
            t4628 = t4626 * t4627
            t4631 = t4628 ** 2
            t4629 = t4627 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t4633 ** 2 * (-42 * t4627 - 497 * t4628 + 518 * t4629 - 798 * t4631 + 2 + (441 * t4629 + 285 * t4631 + 91) * t4626) * np.sin((4 * phi1 - 7 * phi2)) * ((1 + t4626) ** (-0.1e1 / 0.2e1)) * ((1 - t4626) ** (-0.1e1 / 0.2e1))

        if Bindx == 748:
            t4636 = np.cos(phi)
            t4637 = t4636 ** 2
            t4639 = t4637 ** 2
            t4643 = t4639 ** 2
            t4638 = t4636 * t4637
            t4641 = t4638 ** 2
            t4640 = t4636 * t4639
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t4637 + 5032 * t4638 + 8918 * t4639 - 8022 * t4641 - 3417 * t4643 + 83 + (-18368 + 4845 * t4640) * t4640 + (25432 * t4641 - 11628 * t4643 - 468) * t4636) * np.cos((4 * phi1 - 6 * phi2))

        if Bindx == 749:
            t4647 = np.cos(phi)
            t4648 = t4647 ** 2
            t4650 = t4648 ** 2
            t4654 = t4650 ** 2
            t4649 = t4647 * t4648
            t4652 = t4649 ** 2
            t4646 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t4646 ** 2 * (340 * t4648 + 392 * t4649 - 1820 * t4650 + 3332 * t4652 - 1938 * t4654 - 10 + (-406 * t4650 - 816 * t4652 + 969 * t4654 - 43) * t4647) * np.sin((4 * phi1 - 5 * phi2)) * ((1 + t4647) ** (-0.1e1 / 0.2e1)) * ((1 - t4647) ** (-0.1e1 / 0.2e1))

        if Bindx == 750:
            t4656 = np.cos(phi)
            t4657 = t4656 ** 2
            t4659 = t4657 ** 2
            t4663 = t4659 ** 2
            t4658 = t4656 * t4657
            t4661 = t4658 ** 2
            t4660 = t4656 * t4659
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-39 * t4657 + 3856 * t4658 - 574 * t4659 + 4858 * t4661 - 9027 * t4663 + 1 + (-13272 + 4845 * t4660) * t4660 + (17408 * t4661 - 7752 * t4663 - 304) * t4656) * np.cos((4 * phi1 - 4 * phi2))

        if Bindx == 751:
            t4667 = np.cos(phi)
            t4668 = t4667 ** 2
            t4670 = t4668 ** 2
            t4674 = t4670 ** 2
            t4669 = t4667 * t4668
            t4672 = t4669 ** 2
            t4666 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * t4666 ** 2 * (924 * t4668 - 1168 * t4669 - 5580 * t4670 + 10268 * t4672 - 5814 * t4674 - 22 + (5034 * t4670 - 8568 * t4672 + 4845 * t4674 + 81) * t4667) * np.sin((4 * phi1 - 3 * phi2)) * ((1 + t4667) ** (-0.1e1 / 0.2e1)) * ((1 - t4667) ** (-0.1e1 / 0.2e1))

        if Bindx == 752:
            t4676 = np.cos(phi)
            t4677 = t4676 ** 2
            t4679 = t4677 ** 2
            t4683 = t4679 ** 2
            t4678 = t4676 * t4677
            t4681 = t4678 ** 2
            t4680 = t4676 * t4679
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4677 + 1784 * t4678 - 4282 * t4679 + 11258 * t4681 - 12393 * t4683 - 13 + (-6624 + 4845 * t4680) * t4680 + (8840 * t4681 - 3876 * t4683 - 124) * t4676) * np.cos((4 * phi1 - 2 * phi2))

        if Bindx == 753:
            t4695 = np.sin(phi)
            t4693 = t4695 ** 2
            t4686 = np.cos(phi)
            t4687 = t4686 ** 2
            t4688 = t4686 * t4687
            t4691 = t4688 ** 2
            t4689 = t4687 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4693 ** 2 * (-90 * t4687 + 645 * t4688 + 510 * t4689 - 646 * t4691 + 2 + (-1989 * t4689 + 1615 * t4691 - 47) * t4686) * np.sin((4 * phi1 - phi2)) * ((1 + t4686) ** (-0.1e1 / 0.2e1)) * ((1 - t4686) ** (-0.1e1 / 0.2e1))

        if Bindx == 754:
            t4696 = np.cos(phi)
            t4697 = t4696 ** 2
            t4698 = t4697 ** 2
            t4700 = t4698 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t4698 - 901 * t4700 - 1 + (878 * t4698 + 323 * t4700 + 47) * t4697) * np.cos((4 * phi1))

        if Bindx == 755:
            t4711 = np.sin(phi)
            t4709 = t4711 ** 2
            t4702 = np.cos(phi)
            t4703 = t4702 ** 2
            t4704 = t4702 * t4703
            t4707 = t4704 ** 2
            t4705 = t4703 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t4709 ** 2 * (90 * t4703 + 645 * t4704 - 510 * t4705 + 646 * t4707 - 2 + (-1989 * t4705 + 1615 * t4707 - 47) * t4702) * np.sin((4 * phi1 + phi2)) * ((1 + t4702) ** (-0.1e1 / 0.2e1)) * ((1 - t4702) ** (-0.1e1 / 0.2e1))

        if Bindx == 756:
            t4712 = np.cos(phi)
            t4713 = t4712 ** 2
            t4715 = t4713 ** 2
            t4719 = t4715 ** 2
            t4714 = t4712 * t4713
            t4717 = t4714 ** 2
            t4716 = t4712 * t4715
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.13e2) * (585 * t4713 - 1784 * t4714 - 4282 * t4715 + 11258 * t4717 - 12393 * t4719 - 13 + (6624 + 4845 * t4716) * t4716 + (-8840 * t4717 + 3876 * t4719 + 124) * t4712) * np.cos((4 * phi1 + 2 * phi2))

        if Bindx == 757:
            t4723 = np.cos(phi)
            t4724 = t4723 ** 2
            t4726 = t4724 ** 2
            t4730 = t4726 ** 2
            t4725 = t4723 * t4724
            t4728 = t4725 ** 2
            t4722 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * t4722 ** 2 * (-924 * t4724 - 1168 * t4725 + 5580 * t4726 - 10268 * t4728 + 5814 * t4730 + 22 + (5034 * t4726 - 8568 * t4728 + 4845 * t4730 + 81) * t4723) * np.sin((4 * phi1 + 3 * phi2)) * ((1 + t4723) ** (-0.1e1 / 0.2e1)) * ((1 - t4723) ** (-0.1e1 / 0.2e1))

        if Bindx == 758:
            t4732 = np.cos(phi)
            t4733 = t4732 ** 2
            t4735 = t4733 ** 2
            t4739 = t4735 ** 2
            t4734 = t4732 * t4733
            t4737 = t4734 ** 2
            t4736 = t4732 * t4735
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-39 * t4733 - 3856 * t4734 - 574 * t4735 + 4858 * t4737 - 9027 * t4739 + 1 + (13272 + 4845 * t4736) * t4736 + (-17408 * t4737 + 7752 * t4739 + 304) * t4732) * np.cos((4 * phi1 + 4 * phi2))

        if Bindx == 759:
            t4743 = np.cos(phi)
            t4744 = t4743 ** 2
            t4746 = t4744 ** 2
            t4750 = t4746 ** 2
            t4745 = t4743 * t4744
            t4748 = t4745 ** 2
            t4742 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t4742 ** 2 * (-340 * t4744 + 392 * t4745 + 1820 * t4746 - 3332 * t4748 + 1938 * t4750 + 10 + (-406 * t4746 - 816 * t4748 + 969 * t4750 - 43) * t4743) * np.sin((4 * phi1 + 5 * phi2)) * ((1 + t4743) ** (-0.1e1 / 0.2e1)) * ((1 - t4743) ** (-0.1e1 / 0.2e1))

        if Bindx == 760:
            t4752 = np.cos(phi)
            t4753 = t4752 ** 2
            t4755 = t4753 ** 2
            t4759 = t4755 ** 2
            t4754 = t4752 * t4753
            t4757 = t4754 ** 2
            t4756 = t4752 * t4755
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t4753 - 5032 * t4754 + 8918 * t4755 - 8022 * t4757 - 3417 * t4759 + 83 + (18368 + 4845 * t4756) * t4756 + (-25432 * t4757 + 11628 * t4759 + 468) * t4752) * np.cos((4 * phi1 + 6 * phi2))

        if Bindx == 761:
            t4771 = np.sin(phi)
            t4769 = t4771 ** 2
            t4762 = np.cos(phi)
            t4763 = t4762 ** 2
            t4764 = t4762 * t4763
            t4767 = t4764 ** 2
            t4765 = t4763 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t4769 ** 2 * (42 * t4763 - 497 * t4764 - 518 * t4765 + 798 * t4767 - 2 + (441 * t4765 + 285 * t4767 + 91) * t4762) * np.sin((4 * phi1 + 7 * phi2)) * ((1 + t4762) ** (-0.1e1 / 0.2e1)) * ((1 - t4762) ** (-0.1e1 / 0.2e1))

        if Bindx == 762:
            t4772 = np.cos(phi)
            t4773 = t4772 ** 2
            t4775 = t4773 ** 2
            t4779 = t4775 ** 2
            t4774 = t4772 * t4773
            t4777 = t4774 ** 2
            t4776 = t4772 * t4775
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t4773 + 32 * t4774 + 574 * t4775 - 602 * t4777 + 87 * t4779 + 11 + (336 + 95 * t4776) * t4776 + (-640 * t4777 + 304 * t4779 - 32) * t4772) * np.cos((4 * phi1 + 8 * phi2))

        if Bindx == 763:
            t4790 = np.sin(phi)
            t4787 = t4790 ** 2
            t4788 = t4790 * t4787
            t4782 = np.cos(phi)
            t4783 = t4782 ** 2
            t4785 = t4783 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t4788 ** 2 * (8 * t4783 + 18 * t4785 - 2 + (22 * t4783 + 5 * t4785 - 3) * t4782) * np.sin((4 * phi1 + 9 * phi2)) * ((1 + t4782) ** (-0.1e1 / 0.2e1)) * ((1 - t4782) ** (-0.1e1 / 0.2e1))

        if Bindx == 764:
            t4791 = np.cos(phi)
            t4792 = t4791 ** 2
            t4794 = t4792 ** 2
            t4797 = t4794 ** 2
            t4798 = t4791 * t4797
            t4793 = t4791 * t4792
            t4795 = t4793 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((4 * phi1 + 10 * phi2)) * (-3 * t4792 + 8 * t4793 + 14 * t4794 - 14 * t4795 + 3 * t4797 + 4 * t4798 - 1 + (-8 * t4795 + t4798 - 4) * t4791)

        if Bindx == 765:
            t4800 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t4800) ** (0.15e2 / 0.2e1)) * ((1 + t4800) ** (0.5e1 / 0.2e1)) * np.sin((5 * phi1 - 10 * phi2))

        if Bindx == 766:
            t4801 = np.cos(phi)
            t4802 = t4801 ** 2
            t4804 = t4802 ** 2
            t4808 = t4804 ** 2
            t4803 = t4801 * t4802
            t4806 = t4803 ** 2
            t4805 = t4801 * t4804
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t4802 - 16 * t4803 + 14 * t4804 - 28 * t4806 + 11 * t4808 - 1 + (14 + 2 * t4805) * t4805 + (8 * t4806 - 9 * t4808 + 3) * t4801) * np.cos((5 * phi1 - 9 * phi2))

        if Bindx == 767:
            t4820 = np.sin(phi)
            t4818 = t4820 ** 2
            t4811 = np.cos(phi)
            t4812 = t4811 ** 2
            t4813 = t4811 * t4812
            t4816 = t4813 ** 2
            t4814 = t4812 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t4818 ** 2 * (36 * t4812 - 55 * t4813 - 20 * t4814 - 76 * t4816 - 4 + (99 * t4814 + 19 * t4816 + 1) * t4811) * np.sin((5 * phi1 - 8 * phi2)) * ((1 + t4811) ** (-0.1e1 / 0.2e1)) * ((1 - t4811) ** (-0.1e1 / 0.2e1))

        if Bindx == 768:
            t4821 = np.cos(phi)
            t4822 = t4821 ** 2
            t4824 = t4822 ** 2
            t4828 = t4824 ** 2
            t4823 = t4821 * t4822
            t4826 = t4823 ** 2
            t4825 = t4821 * t4824
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t4822 - 128 * t4823 + 574 * t4824 - 812 * t4826 + 243 * t4828 + 7 + (-126 + 114 * t4825) * t4825 + (616 * t4826 - 399 * t4828 + 37) * t4821) * np.cos((5 * phi1 - 7 * phi2))

        if Bindx == 769:
            t4832 = np.cos(phi)
            t4833 = t4832 ** 2
            t4835 = t4833 ** 2
            t4839 = t4835 ** 2
            t4834 = t4832 * t4833
            t4837 = t4834 ** 2
            t4831 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t4831 ** 2 * (-24 * t4833 + 1792 * t4834 - 1134 * t4835 + 3808 * t4837 - 2907 * t4839 + 1 + (-3486 * t4835 + 1224 * t4837 + 969 * t4839 - 243) * t4832) * np.sin((5 * phi1 - 6 * phi2)) * ((1 + t4832) ** (-0.1e1 / 0.2e1)) * ((1 - t4832) ** (-0.1e1 / 0.2e1))

        if Bindx == 770:
            t4841 = np.cos(phi)
            t4842 = t4841 ** 2
            t4844 = t4842 ** 2
            t4848 = t4844 ** 2
            t4843 = t4841 * t4842
            t4846 = t4843 ** 2
            t4845 = t4841 * t4844
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-930 * t4842 + 1660 * t4843 + 3710 * t4844 - 3920 * t4846 - 765 * t4848 + 31 + (-6594 + 1938 * t4845) * t4845 + (9860 * t4846 - 4845 * t4848 - 145) * t4841) * np.cos((5 * phi1 - 5 * phi2))

        if Bindx == 771:
            t4852 = np.cos(phi)
            t4853 = t4852 ** 2
            t4855 = t4853 ** 2
            t4859 = t4855 ** 2
            t4854 = t4852 * t4853
            t4857 = t4854 ** 2
            t4851 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t4851 ** 2 * (340 * t4853 + 392 * t4854 - 1820 * t4855 + 3332 * t4857 - 1938 * t4859 - 10 + (-406 * t4855 - 816 * t4857 + 969 * t4859 - 43) * t4852) * np.sin((5 * phi1 - 4 * phi2)) * ((1 + t4852) ** (-0.1e1 / 0.2e1)) * ((1 - t4852) ** (-0.1e1 / 0.2e1))

        if Bindx == 772:
            t4861 = np.cos(phi)
            t4862 = t4861 ** 2
            t4864 = t4862 ** 2
            t4868 = t4864 ** 2
            t4863 = t4861 * t4862
            t4866 = t4863 ** 2
            t4865 = t4861 * t4864
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t4862 + 1660 * t4863 - 562 * t4864 + 2616 * t4866 - 4029 * t4868 - 1 + (-5486 + 1938 * t4865) * t4865 + (6868 * t4866 - 2907 * t4868 - 135) * t4861) * np.cos((5 * phi1 - 3 * phi2))

        if Bindx == 773:
            t4880 = np.sin(phi)
            t4878 = t4880 ** 2
            t4871 = np.cos(phi)
            t4872 = t4871 ** 2
            t4873 = t4871 * t4872
            t4876 = t4873 ** 2
            t4874 = t4872 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t4878 ** 2 * (-195 * t4872 + 355 * t4873 + 935 * t4874 - 969 * t4876 + 5 + (-1071 * t4874 + 969 * t4876 - 29) * t4871) * np.sin((5 * phi1 - 2 * phi2)) * ((1 + t4871) ** (-0.1e1 / 0.2e1)) * ((1 - t4871) ** (-0.1e1 / 0.2e1))

        if Bindx == 774:
            t4881 = np.cos(phi)
            t4882 = t4881 ** 2
            t4884 = t4882 ** 2
            t4888 = t4884 ** 2
            t4883 = t4881 * t4882
            t4886 = t4883 ** 2
            t4885 = t4881 * t4884
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t4882 + 200 * t4883 - 838 * t4884 + 1956 * t4886 - 1887 * t4888 - 3 + (-678 + 646 * t4885) * t4885 + (816 * t4886 - 323 * t4888 - 15) * t4881) * np.cos((5 * phi1 - phi2))

        if Bindx == 775:
            t4897 = np.sin(phi)
            t4894 = t4897 ** 2
            t4895 = t4897 * t4894
            t4891 = np.cos(phi)
            t4892 = t4891 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t4891 * t4895 ** 2 * (15 + (-170 + 323 * t4892) * t4892) * np.sin((5 * phi1)) * ((1 + t4891) ** (-0.1e1 / 0.2e1)) * ((1 - t4891) ** (-0.1e1 / 0.2e1))

        if Bindx == 776:
            t4898 = np.cos(phi)
            t4899 = t4898 ** 2
            t4901 = t4899 ** 2
            t4905 = t4901 ** 2
            t4900 = t4898 * t4899
            t4903 = t4900 ** 2
            t4902 = t4898 * t4901
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.195e3) * (126 * t4899 - 200 * t4900 - 838 * t4901 + 1956 * t4903 - 1887 * t4905 - 3 + (678 + 646 * t4902) * t4902 + (-816 * t4903 + 323 * t4905 + 15) * t4898) * np.cos((5 * phi1 + phi2))

        if Bindx == 777:
            t4908 = np.cos(phi)
            t4909 = t4908 ** 2
            t4910 = t4908 * t4909
            t4918 = 969 * t4910 ** 2
            t4917 = np.sin(phi)
            t4915 = t4917 ** 2
            t4911 = t4909 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.65e2) * t4915 ** 2 * (195 * t4909 + 355 * t4910 - 935 * t4911 + t4918 - 5 + (-1071 * t4911 + t4918 - 29) * t4908) * np.sin((5 * phi1 + 2 * phi2)) * ((1 + t4908) ** (-0.1e1 / 0.2e1)) * ((1 - t4908) ** (-0.1e1 / 0.2e1))

        if Bindx == 778:
            t4919 = np.cos(phi)
            t4920 = t4919 ** 2
            t4922 = t4920 ** 2
            t4926 = t4922 ** 2
            t4921 = t4919 * t4920
            t4924 = t4921 ** 2
            t4923 = t4919 * t4922
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * (38 * t4920 - 1660 * t4921 - 562 * t4922 + 2616 * t4924 - 4029 * t4926 - 1 + (5486 + 1938 * t4923) * t4923 + (-6868 * t4924 + 2907 * t4926 + 135) * t4919) * np.cos((5 * phi1 + 3 * phi2))

        if Bindx == 779:
            t4930 = np.cos(phi)
            t4931 = t4930 ** 2
            t4933 = t4931 ** 2
            t4937 = t4933 ** 2
            t4932 = t4930 * t4931
            t4935 = t4932 ** 2
            t4929 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.64e2 * np.sqrt(0.5e1) * t4929 ** 2 * (-340 * t4931 + 392 * t4932 + 1820 * t4933 - 3332 * t4935 + 1938 * t4937 + 10 + (-406 * t4933 - 816 * t4935 + 969 * t4937 - 43) * t4930) * np.sin((5 * phi1 + 4 * phi2)) * ((1 + t4930) ** (-0.1e1 / 0.2e1)) * ((1 - t4930) ** (-0.1e1 / 0.2e1))

        if Bindx == 780:
            t4939 = np.cos(phi)
            t4940 = t4939 ** 2
            t4942 = t4940 ** 2
            t4946 = t4942 ** 2
            t4941 = t4939 * t4940
            t4944 = t4941 ** 2
            t4943 = t4939 * t4942
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2e1) * (-930 * t4940 - 1660 * t4941 + 3710 * t4942 - 3920 * t4944 - 765 * t4946 + 31 + (6594 + 1938 * t4943) * t4943 + (-9860 * t4944 + 4845 * t4946 + 145) * t4939) * np.cos((5 * phi1 + 5 * phi2))

        if Bindx == 781:
            t4950 = np.cos(phi)
            t4951 = t4950 ** 2
            t4953 = t4951 ** 2
            t4957 = t4953 ** 2
            t4952 = t4950 * t4951
            t4955 = t4952 ** 2
            t4949 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t4949 ** 2 * (24 * t4951 + 1792 * t4952 + 1134 * t4953 - 3808 * t4955 + 2907 * t4957 - 1 + (-3486 * t4953 + 1224 * t4955 + 969 * t4957 - 243) * t4950) * np.sin((5 * phi1 + 6 * phi2)) * ((1 + t4950) ** (-0.1e1 / 0.2e1)) * ((1 - t4950) ** (-0.1e1 / 0.2e1))

        if Bindx == 782:
            t4959 = np.cos(phi)
            t4960 = t4959 ** 2
            t4962 = t4960 ** 2
            t4966 = t4962 ** 2
            t4961 = t4959 * t4960
            t4964 = t4961 ** 2
            t4963 = t4959 * t4962
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t4960 + 128 * t4961 + 574 * t4962 - 812 * t4964 + 243 * t4966 + 7 + (126 + 114 * t4963) * t4963 + (-616 * t4964 + 399 * t4966 - 37) * t4959) * np.cos((5 * phi1 + 7 * phi2))

        if Bindx == 783:
            t4978 = np.sin(phi)
            t4976 = t4978 ** 2
            t4969 = np.cos(phi)
            t4970 = t4969 ** 2
            t4971 = t4969 * t4970
            t4974 = t4971 ** 2
            t4972 = t4970 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t4976 ** 2 * (-36 * t4970 - 55 * t4971 + 20 * t4972 + 76 * t4974 + 4 + (99 * t4972 + 19 * t4974 + 1) * t4969) * np.sin((5 * phi1 + 8 * phi2)) * ((1 + t4969) ** (-0.1e1 / 0.2e1)) * ((1 - t4969) ** (-0.1e1 / 0.2e1))

        if Bindx == 784:
            t4979 = np.cos(phi)
            t4980 = t4979 ** 2
            t4982 = t4980 ** 2
            t4986 = t4982 ** 2
            t4981 = t4979 * t4980
            t4984 = t4981 ** 2
            t4983 = t4979 * t4982
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t4980 + 16 * t4981 + 14 * t4982 - 28 * t4984 + 11 * t4986 - 1 + (-14 + 2 * t4983) * t4983 + (-8 * t4984 + 9 * t4986 - 3) * t4979) * np.cos((5 * phi1 + 9 * phi2))

        if Bindx == 785:
            t4989 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t4989) ** (0.5e1 / 0.2e1)) * ((1 + t4989) ** (0.15e2 / 0.2e1)) * np.sin((5 * phi1 + 10 * phi2))

        if Bindx == 786:
            t4990 = np.cos(phi)
            t5000 = -6 * t4990
            t4991 = t4990 ** 2
            t4993 = t4991 ** 2
            t4994 = t4990 * t4993
            t4992 = t4990 * t4991
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((6 * phi1 - 10 * phi2)) * (13 * t4991 + t5000 + 1 + (28 + t4994) * t4994 + (-14 + (t5000 + 13) * t4993) * t4993 + (-8 + (-8 * t4990 - 14) * t4992) * t4992)

        if Bindx == 787:
            t5010 = np.sin(phi)
            t5008 = t5010 ** 2
            t5001 = np.cos(phi)
            t5002 = t5001 ** 2
            t5003 = t5001 * t5002
            t5006 = t5003 ** 2
            t5004 = t5002 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5008 ** 2 * (15 * t5002 + 15 * t5003 - 55 * t5004 - 27 * t5006 + 3 + (57 * t5004 + 5 * t5006 - 13) * t5001) * np.sin((6 * phi1 - 9 * phi2)) * ((1 + t5001) ** (-0.1e1 / 0.2e1)) * ((1 - t5001) ** (-0.1e1 / 0.2e1))

        if Bindx == 788:
            t5011 = np.cos(phi)
            t5012 = t5011 ** 2
            t5014 = t5012 ** 2
            t5018 = t5014 ** 2
            t5013 = t5011 * t5012
            t5016 = t5013 ** 2
            t5015 = t5011 * t5014
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5012 - 592 * t5013 + 266 * t5014 - 1162 * t5016 + 677 * t5018 - 31 + (896 + 95 * t5015) * t5015 + (80 * t5016 - 456 * t5018 + 72) * t5011) * np.cos((6 * phi1 - 8 * phi2))

        if Bindx == 789:
            t5022 = np.cos(phi)
            t5023 = t5022 ** 2
            t5025 = t5023 ** 2
            t5029 = t5025 ** 2
            t5024 = t5022 * t5023
            t5027 = t5024 ** 2
            t5021 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5021 ** 2 * (-516 * t5023 + 532 * t5024 + 1050 * t5025 + 364 * t5027 - 1197 * t5029 + 43 + (-2058 * t5025 + 1476 * t5027 + 285 * t5029 + 21) * t5022) * np.sin((6 * phi1 - 7 * phi2)) * ((1 + t5022) ** (-0.1e1 / 0.2e1)) * ((1 - t5022) ** (-0.1e1 / 0.2e1))

        if Bindx == 790:
            t5031 = np.cos(phi)
            t5032 = t5031 ** 2
            t5034 = t5032 ** 2
            t5038 = t5034 ** 2
            t5033 = t5031 * t5032
            t5036 = t5033 ** 2
            t5035 = t5031 * t5034
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * (-4503 * t5032 - 6168 * t5033 + 22442 * t5034 - 34902 * t5036 + 12393 * t5038 + 237 + (-1932 + 4845 * t5035) * t5035 + (23528 * t5036 - 17442 * t5038 + 1502) * t5031) * np.cos((6 * phi1 - 6 * phi2))

        if Bindx == 791:
            t5042 = np.cos(phi)
            t5043 = t5042 ** 2
            t5045 = t5043 ** 2
            t5049 = t5045 ** 2
            t5044 = t5042 * t5043
            t5047 = t5044 ** 2
            t5041 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t5041 ** 2 * (-24 * t5043 + 1792 * t5044 - 1134 * t5045 + 3808 * t5047 - 2907 * t5049 + 1 + (-3486 * t5045 + 1224 * t5047 + 969 * t5049 - 243) * t5042) * np.sin((6 * phi1 - 5 * phi2)) * ((1 + t5042) ** (-0.1e1 / 0.2e1)) * ((1 - t5042) ** (-0.1e1 / 0.2e1))

        if Bindx == 792:
            t5051 = np.cos(phi)
            t5052 = t5051 ** 2
            t5054 = t5052 ** 2
            t5058 = t5054 ** 2
            t5053 = t5051 * t5052
            t5056 = t5053 ** 2
            t5055 = t5051 * t5054
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t5052 + 5032 * t5053 + 8918 * t5054 - 8022 * t5056 - 3417 * t5058 + 83 + (-18368 + 4845 * t5055) * t5055 + (25432 * t5056 - 11628 * t5058 - 468) * t5051) * np.cos((6 * phi1 - 4 * phi2))

        if Bindx == 793:
            t5070 = np.sin(phi)
            t5068 = t5070 ** 2
            t5061 = np.cos(phi)
            t5062 = t5061 ** 2
            t5063 = t5061 * t5062
            t5066 = t5063 ** 2
            t5064 = t5062 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t5068 ** 2 * (-2139 * t5062 - 1089 * t5063 + 8551 * t5064 - 8721 * t5066 + 69 + (-1683 * t5064 + 4845 * t5066 + 167) * t5061) * np.sin((6 * phi1 - 3 * phi2)) * ((1 + t5061) ** (-0.1e1 / 0.2e1)) * ((1 - t5061) ** (-0.1e1 / 0.2e1))

        if Bindx == 794:
            t5071 = np.cos(phi)
            t5072 = t5071 ** 2
            t5074 = t5072 ** 2
            t5078 = t5074 ** 2
            t5073 = t5071 * t5072
            t5076 = t5073 ** 2
            t5075 = t5071 * t5074
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t5072 + 4888 * t5073 - 4486 * t5074 + 11898 * t5076 - 12903 * t5078 - 19 + (-14276 + 4845 * t5075) * t5075 + (15640 * t5076 - 5814 * t5078 - 438) * t5071) * np.cos((6 * phi1 - 2 * phi2))

        if Bindx == 795:
            t5089 = np.sin(phi)
            t5086 = t5089 ** 2
            t5087 = t5089 * t5086
            t5081 = np.cos(phi)
            t5082 = t5081 ** 2
            t5084 = t5082 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t5087 ** 2 * (306 * t5082 - 969 * t5084 - 9 + (-1054 * t5082 + 1615 * t5084 + 111) * t5081) * np.sin((6 * phi1 - phi2)) * ((1 + t5081) ** (-0.1e1 / 0.2e1)) * ((1 - t5081) ** (-0.1e1 / 0.2e1))

        if Bindx == 796:
            t5090 = np.cos(phi)
            t5091 = t5090 ** 2
            t5092 = t5091 ** 2
            t5094 = t5092 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t5092 - 1071 * t5094 - 3 + (1278 * t5092 + 323 * t5094 + 111) * t5091) * np.cos((6 * phi1))

        if Bindx == 797:
            t5104 = np.sin(phi)
            t5101 = t5104 ** 2
            t5102 = t5104 * t5101
            t5096 = np.cos(phi)
            t5097 = t5096 ** 2
            t5099 = t5097 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.39e2) * t5102 ** 2 * (-306 * t5097 + 969 * t5099 + 9 + (-1054 * t5097 + 1615 * t5099 + 111) * t5096) * np.sin((6 * phi1 + phi2)) * ((1 + t5096) ** (-0.1e1 / 0.2e1)) * ((1 - t5096) ** (-0.1e1 / 0.2e1))

        if Bindx == 798:
            t5105 = np.cos(phi)
            t5106 = t5105 ** 2
            t5108 = t5106 ** 2
            t5112 = t5108 ** 2
            t5107 = t5105 * t5106
            t5110 = t5107 ** 2
            t5109 = t5105 * t5108
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.13e2) * (665 * t5106 - 4888 * t5107 - 4486 * t5108 + 11898 * t5110 - 12903 * t5112 - 19 + (14276 + 4845 * t5109) * t5109 + (-15640 * t5110 + 5814 * t5112 + 438) * t5105) * np.cos((6 * phi1 + 2 * phi2))

        if Bindx == 799:
            t5124 = np.sin(phi)
            t5122 = t5124 ** 2
            t5115 = np.cos(phi)
            t5116 = t5115 ** 2
            t5117 = t5115 * t5116
            t5120 = t5117 ** 2
            t5118 = t5116 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * t5122 ** 2 * (2139 * t5116 - 1089 * t5117 - 8551 * t5118 + 8721 * t5120 - 69 + (-1683 * t5118 + 4845 * t5120 + 167) * t5115) * np.sin((6 * phi1 + 3 * phi2)) * ((1 + t5115) ** (-0.1e1 / 0.2e1)) * ((1 - t5115) ** (-0.1e1 / 0.2e1))

        if Bindx == 800:
            t5125 = np.cos(phi)
            t5126 = t5125 ** 2
            t5128 = t5126 ** 2
            t5132 = t5128 ** 2
            t5127 = t5125 * t5126
            t5130 = t5127 ** 2
            t5129 = t5125 * t5128
            tfunc[..., c] = -0.21e2 / 0.256e3 * (-2407 * t5126 - 5032 * t5127 + 8918 * t5128 - 8022 * t5130 - 3417 * t5132 + 83 + (18368 + 4845 * t5129) * t5129 + (-25432 * t5130 + 11628 * t5132 + 468) * t5125) * np.cos((6 * phi1 + 4 * phi2))

        if Bindx == 801:
            t5136 = np.cos(phi)
            t5137 = t5136 ** 2
            t5139 = t5137 ** 2
            t5143 = t5139 ** 2
            t5138 = t5136 * t5137
            t5141 = t5138 ** 2
            t5135 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t5135 ** 2 * (24 * t5137 + 1792 * t5138 + 1134 * t5139 - 3808 * t5141 + 2907 * t5143 - 1 + (-3486 * t5139 + 1224 * t5141 + 969 * t5143 - 243) * t5136) * np.sin((6 * phi1 + 5 * phi2)) * ((1 + t5136) ** (-0.1e1 / 0.2e1)) * ((1 - t5136) ** (-0.1e1 / 0.2e1))

        if Bindx == 802:
            t5145 = np.cos(phi)
            t5146 = t5145 ** 2
            t5148 = t5146 ** 2
            t5152 = t5148 ** 2
            t5147 = t5145 * t5146
            t5150 = t5147 ** 2
            t5149 = t5145 * t5148
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * (-4503 * t5146 + 6168 * t5147 + 22442 * t5148 - 34902 * t5150 + 12393 * t5152 + 237 + (1932 + 4845 * t5149) * t5149 + (-23528 * t5150 + 17442 * t5152 - 1502) * t5145) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 803:
            t5156 = np.cos(phi)
            t5157 = t5156 ** 2
            t5159 = t5157 ** 2
            t5163 = t5159 ** 2
            t5158 = t5156 * t5157
            t5161 = t5158 ** 2
            t5155 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5155 ** 2 * (516 * t5157 + 532 * t5158 - 1050 * t5159 - 364 * t5161 + 1197 * t5163 - 43 + (-2058 * t5159 + 1476 * t5161 + 285 * t5163 + 21) * t5156) * np.sin((6 * phi1 + 7 * phi2)) * ((1 + t5156) ** (-0.1e1 / 0.2e1)) * ((1 - t5156) ** (-0.1e1 / 0.2e1))

        if Bindx == 804:
            t5165 = np.cos(phi)
            t5166 = t5165 ** 2
            t5168 = t5166 ** 2
            t5172 = t5168 ** 2
            t5167 = t5165 * t5166
            t5170 = t5167 ** 2
            t5169 = t5165 * t5168
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5166 + 592 * t5167 + 266 * t5168 - 1162 * t5170 + 677 * t5172 - 31 + (-896 + 95 * t5169) * t5169 + (-80 * t5170 + 456 * t5172 - 72) * t5165) * np.cos((6 * phi1 + 8 * phi2))

        if Bindx == 805:
            t5184 = np.sin(phi)
            t5182 = t5184 ** 2
            t5175 = np.cos(phi)
            t5176 = t5175 ** 2
            t5177 = t5175 * t5176
            t5180 = t5177 ** 2
            t5178 = t5176 ** 2
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5182 ** 2 * (-15 * t5176 + 15 * t5177 + 55 * t5178 + 27 * t5180 - 3 + (57 * t5178 + 5 * t5180 - 13) * t5175) * np.sin((6 * phi1 + 9 * phi2)) * ((1 + t5175) ** (-0.1e1 / 0.2e1)) * ((1 - t5175) ** (-0.1e1 / 0.2e1))

        if Bindx == 806:
            t5185 = np.cos(phi)
            t5195 = 6 * t5185
            t5186 = t5185 ** 2
            t5188 = t5186 ** 2
            t5189 = t5185 * t5188
            t5187 = t5185 * t5186
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((6 * phi1 + 10 * phi2)) * (13 * t5186 + t5195 + 1 + (-28 + t5189) * t5189 + (-14 + (t5195 + 13) * t5188) * t5188 + (8 + (8 * t5185 - 14) * t5187) * t5187)

        if Bindx == 807:
            t5196 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t5196) ** (0.17e2 / 0.2e1)) * ((1 + t5196) ** (0.3e1 / 0.2e1)) * np.sin((7 * phi1 - 10 * phi2))

        if Bindx == 808:
            t5197 = np.cos(phi)
            t5198 = t5197 ** 2
            t5200 = t5198 ** 2
            t5204 = t5200 ** 2
            t5199 = t5197 * t5198
            t5202 = t5199 ** 2
            t5201 = t5197 * t5200
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5198 + 4 * t5199 - 182 * t5200 - 56 * t5202 + 151 * t5204 + 7 + (238 + 10 * t5201) * t5201 + (-140 * t5202 - 63 * t5204 - 39) * t5197) * np.cos((7 * phi1 - 9 * phi2))

        if Bindx == 809:
            t5208 = np.cos(phi)
            t5209 = t5208 ** 2
            t5211 = t5209 ** 2
            t5215 = t5211 ** 2
            t5210 = t5208 * t5209
            t5213 = t5210 ** 2
            t5207 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5207 ** 2 * (-88 * t5209 - 588 * t5210 + 1120 * t5211 - 840 * t5213 - 532 * t5215 - 44 + (-406 * t5211 + 1108 * t5213 + 95 * t5215 + 175) * t5208) * np.sin((7 * phi1 - 8 * phi2)) * ((1 + t5208) ** (-0.1e1 / 0.2e1)) * ((1 - t5208) ** (-0.1e1 / 0.2e1))

        if Bindx == 810:
            t5217 = np.cos(phi)
            t5218 = t5217 ** 2
            t5220 = t5218 ** 2
            t5224 = t5220 ** 2
            t5219 = t5217 * t5218
            t5222 = t5219 ** 2
            t5221 = t5217 * t5220
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (966 * t5218 - 3188 * t5219 + 938 * t5220 - 6440 * t5222 + 4383 * t5224 - 161 + (5586 + 570 * t5221) * t5221 + (-196 * t5222 - 2793 * t5224 + 335) * t5217) * np.cos((7 * phi1 - 7 * phi2))

        if Bindx == 811:
            t5228 = np.cos(phi)
            t5229 = t5228 ** 2
            t5231 = t5229 ** 2
            t5235 = t5231 ** 2
            t5230 = t5228 * t5229
            t5233 = t5230 ** 2
            t5227 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5227 ** 2 * (-516 * t5229 + 532 * t5230 + 1050 * t5231 + 364 * t5233 - 1197 * t5235 + 43 + (-2058 * t5231 + 1476 * t5233 + 285 * t5235 + 21) * t5228) * np.sin((7 * phi1 - 6 * phi2)) * ((1 + t5228) ** (-0.1e1 / 0.2e1)) * ((1 - t5228) ** (-0.1e1 / 0.2e1))

        if Bindx == 812:
            t5237 = np.cos(phi)
            t5238 = t5237 ** 2
            t5240 = t5238 ** 2
            t5244 = t5240 ** 2
            t5239 = t5237 * t5238
            t5242 = t5239 ** 2
            t5241 = t5237 * t5240
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t5238 - 128 * t5239 + 574 * t5240 - 812 * t5242 + 243 * t5244 + 7 + (-126 + 114 * t5241) * t5241 + (616 * t5242 - 399 * t5244 + 37) * t5237) * np.cos((7 * phi1 - 5 * phi2))

        if Bindx == 813:
            t5256 = np.sin(phi)
            t5254 = t5256 ** 2
            t5247 = np.cos(phi)
            t5248 = t5247 ** 2
            t5249 = t5247 * t5248
            t5252 = t5249 ** 2
            t5250 = t5248 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t5254 ** 2 * (-42 * t5248 - 497 * t5249 + 518 * t5250 - 798 * t5252 + 2 + (441 * t5250 + 285 * t5252 + 91) * t5247) * np.sin((7 * phi1 - 4 * phi2)) * ((1 + t5247) ** (-0.1e1 / 0.2e1)) * ((1 - t5247) ** (-0.1e1 / 0.2e1))

        if Bindx == 814:
            t5257 = np.cos(phi)
            t5258 = t5257 ** 2
            t5260 = t5258 ** 2
            t5264 = t5260 ** 2
            t5259 = t5257 * t5258
            t5262 = t5259 ** 2
            t5261 = t5257 * t5260
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t5258 + 952 * t5259 + 782 * t5260 - 180 * t5262 - 897 * t5264 + 11 + (-2786 + 570 * t5261) * t5261 + (3136 * t5262 - 1197 * t5264 - 105) * t5257) * np.cos((7 * phi1 - 3 * phi2))

        if Bindx == 815:
            t5275 = np.sin(phi)
            t5272 = t5275 ** 2
            t5273 = t5275 * t5272
            t5267 = np.cos(phi)
            t5268 = t5267 ** 2
            t5270 = t5268 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t5273 ** 2 * (182 * t5268 - 399 * t5270 - 7 + (-66 * t5268 + 285 * t5270 + 5) * t5267) * np.sin((7 * phi1 - 2 * phi2)) * ((1 + t5267) ** (-0.1e1 / 0.2e1)) * ((1 - t5267) ** (-0.1e1 / 0.2e1))

        if Bindx == 816:
            t5276 = np.cos(phi)
            t5277 = t5276 ** 2
            t5279 = t5277 ** 2
            t5283 = t5279 ** 2
            t5278 = t5276 * t5277
            t5281 = t5278 ** 2
            t5280 = t5276 * t5279
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t5277 + 196 * t5278 - 442 * t5279 + 816 * t5281 - 651 * t5283 - 3 + (-462 + 190 * t5280) * t5280 + (420 * t5281 - 133 * t5283 - 21) * t5276) * np.cos((7 * phi1 - phi2))

        if Bindx == 817:
            t5290 = np.sin(phi)
            t5287 = t5290 ** 2
            t5288 = t5287 ** 2
            t5286 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t5286 * t5288 ** 2 * (19 * t5286 ** 2 - 3) * np.sin((7 * phi1)) * ((1 + t5286) ** (-0.1e1 / 0.2e1)) * ((1 - t5286) ** (-0.1e1 / 0.2e1))

        if Bindx == 818:
            t5291 = np.cos(phi)
            t5292 = t5291 ** 2
            t5294 = t5292 ** 2
            t5298 = t5294 ** 2
            t5293 = t5291 * t5292
            t5296 = t5293 ** 2
            t5295 = t5291 * t5294
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.663e3) * (90 * t5292 - 196 * t5293 - 442 * t5294 + 816 * t5296 - 651 * t5298 - 3 + (462 + 190 * t5295) * t5295 + (-420 * t5296 + 133 * t5298 + 21) * t5291) * np.cos((7 * phi1 + phi2))

        if Bindx == 819:
            t5309 = np.sin(phi)
            t5306 = t5309 ** 2
            t5307 = t5309 * t5306
            t5301 = np.cos(phi)
            t5302 = t5301 ** 2
            t5304 = t5302 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.221e3) * t5307 ** 2 * (-182 * t5302 + 399 * t5304 + 7 + (-66 * t5302 + 285 * t5304 + 5) * t5301) * np.sin((7 * phi1 + 2 * phi2)) * ((1 + t5301) ** (-0.1e1 / 0.2e1)) * ((1 - t5301) ** (-0.1e1 / 0.2e1))

        if Bindx == 820:
            t5310 = np.cos(phi)
            t5311 = t5310 ** 2
            t5313 = t5311 ** 2
            t5317 = t5313 ** 2
            t5312 = t5310 * t5311
            t5315 = t5312 ** 2
            t5314 = t5310 * t5313
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * (-286 * t5311 - 952 * t5312 + 782 * t5313 - 180 * t5315 - 897 * t5317 + 11 + (2786 + 570 * t5314) * t5314 + (-3136 * t5315 + 1197 * t5317 + 105) * t5310) * np.cos((7 * phi1 + 3 * phi2))

        if Bindx == 821:
            t5329 = np.sin(phi)
            t5327 = t5329 ** 2
            t5320 = np.cos(phi)
            t5321 = t5320 ** 2
            t5322 = t5320 * t5321
            t5325 = t5322 ** 2
            t5323 = t5321 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.17e2) * t5327 ** 2 * (42 * t5321 - 497 * t5322 - 518 * t5323 + 798 * t5325 - 2 + (441 * t5323 + 285 * t5325 + 91) * t5320) * np.sin((7 * phi1 + 4 * phi2)) * ((1 + t5320) ** (-0.1e1 / 0.2e1)) * ((1 - t5320) ** (-0.1e1 / 0.2e1))

        if Bindx == 822:
            t5330 = np.cos(phi)
            t5331 = t5330 ** 2
            t5333 = t5331 ** 2
            t5337 = t5333 ** 2
            t5332 = t5330 * t5331
            t5335 = t5332 ** 2
            t5334 = t5330 * t5333
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.85e2) * (-126 * t5331 + 128 * t5332 + 574 * t5333 - 812 * t5335 + 243 * t5337 + 7 + (126 + 114 * t5334) * t5334 + (-616 * t5335 + 399 * t5337 - 37) * t5330) * np.cos((7 * phi1 + 5 * phi2))

        if Bindx == 823:
            t5341 = np.cos(phi)
            t5342 = t5341 ** 2
            t5344 = t5342 ** 2
            t5348 = t5344 ** 2
            t5343 = t5341 * t5342
            t5346 = t5343 ** 2
            t5340 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.17e2) * np.sqrt(0.2e1) * t5340 ** 2 * (516 * t5342 + 532 * t5343 - 1050 * t5344 - 364 * t5346 + 1197 * t5348 - 43 + (-2058 * t5344 + 1476 * t5346 + 285 * t5348 + 21) * t5341) * np.sin((7 * phi1 + 6 * phi2)) * ((1 + t5341) ** (-0.1e1 / 0.2e1)) * ((1 - t5341) ** (-0.1e1 / 0.2e1))

        if Bindx == 824:
            t5350 = np.cos(phi)
            t5351 = t5350 ** 2
            t5353 = t5351 ** 2
            t5357 = t5353 ** 2
            t5352 = t5350 * t5351
            t5355 = t5352 ** 2
            t5354 = t5350 * t5353
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (966 * t5351 + 3188 * t5352 + 938 * t5353 - 6440 * t5355 + 4383 * t5357 - 161 + (-5586 + 570 * t5354) * t5354 + (196 * t5355 + 2793 * t5357 - 335) * t5350) * np.cos((7 * phi1 + 7 * phi2))

        if Bindx == 825:
            t5361 = np.cos(phi)
            t5362 = t5361 ** 2
            t5364 = t5362 ** 2
            t5368 = t5364 ** 2
            t5363 = t5361 * t5362
            t5366 = t5363 ** 2
            t5360 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5360 ** 2 * (88 * t5362 - 588 * t5363 - 1120 * t5364 + 840 * t5366 + 532 * t5368 + 44 + (-406 * t5364 + 1108 * t5366 + 95 * t5368 + 175) * t5361) * np.sin((7 * phi1 + 8 * phi2)) * ((1 + t5361) ** (-0.1e1 / 0.2e1)) * ((1 - t5361) ** (-0.1e1 / 0.2e1))

        if Bindx == 826:
            t5370 = np.cos(phi)
            t5371 = t5370 ** 2
            t5373 = t5371 ** 2
            t5377 = t5373 ** 2
            t5372 = t5370 * t5371
            t5375 = t5372 ** 2
            t5374 = t5370 * t5373
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5371 - 4 * t5372 - 182 * t5373 - 56 * t5375 + 151 * t5377 + 7 + (-238 + 10 * t5374) * t5374 + (140 * t5375 + 63 * t5377 + 39) * t5370) * np.cos((7 * phi1 + 9 * phi2))

        if Bindx == 827:
            t5380 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t5380) ** (0.3e1 / 0.2e1)) * ((1 + t5380) ** (0.17e2 / 0.2e1)) * np.sin((7 * phi1 + 10 * phi2))

        if Bindx == 828:
            t5381 = np.cos(phi)
            t5382 = t5381 ** 2
            t5384 = t5382 ** 2
            t5387 = t5384 ** 2
            t5388 = t5381 * t5387
            t5383 = t5381 * t5382
            t5385 = t5383 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t5382 + 48 * t5383 - 42 * t5384 + 42 * t5385 + 27 * t5387 - 8 * t5388 - 1 + (-48 * t5385 + t5388 + 8) * t5381) * np.cos((8 * phi1 - 10 * phi2))

        if Bindx == 829:
            t5391 = np.cos(phi)
            t5392 = t5391 ** 2
            t5393 = t5391 * t5392
            t5395 = t5393 ** 2
            t5396 = t5391 * t5395
            t5397 = t5391 * t5396
            t5390 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5390 ** 2 * (-84 * t5393 - 168 * t5395 + 108 * t5396 - 36 * t5397 + 4 + (126 * t5393 + 72) * t5392 + (5 * t5397 - 27) * t5391) * np.sin((8 * phi1 - 9 * phi2)) * ((1 + t5391) ** (-0.1e1 / 0.2e1)) * ((1 - t5391) ** (-0.1e1 / 0.2e1))

        if Bindx == 830:
            t5399 = np.cos(phi)
            t5400 = t5399 ** 2
            t5402 = t5400 ** 2
            t5406 = t5402 ** 2
            t5401 = t5399 * t5400
            t5404 = t5401 ** 2
            t5403 = t5399 * t5402
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (531 * t5400 + 192 * t5401 - 1722 * t5402 - 210 * t5404 + 1503 * t5406 + 59 + (2016 + 95 * t5403) * t5403 + (-1536 * t5404 - 608 * t5406 - 320) * t5399) * np.cos((8 * phi1 - 8 * phi2))

        if Bindx == 831:
            t5410 = np.cos(phi)
            t5411 = t5410 ** 2
            t5413 = t5411 ** 2
            t5417 = t5413 ** 2
            t5412 = t5410 * t5411
            t5415 = t5412 ** 2
            t5409 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5409 ** 2 * (-88 * t5411 - 588 * t5412 + 1120 * t5413 - 840 * t5415 - 532 * t5417 - 44 + (-406 * t5413 + 1108 * t5415 + 95 * t5417 + 175) * t5410) * np.sin((8 * phi1 - 7 * phi2)) * ((1 + t5410) ** (-0.1e1 / 0.2e1)) * ((1 - t5410) ** (-0.1e1 / 0.2e1))

        if Bindx == 832:
            t5419 = np.cos(phi)
            t5420 = t5419 ** 2
            t5422 = t5420 ** 2
            t5426 = t5422 ** 2
            t5421 = t5419 * t5420
            t5424 = t5421 ** 2
            t5423 = t5419 * t5422
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5420 - 592 * t5421 + 266 * t5422 - 1162 * t5424 + 677 * t5426 - 31 + (896 + 95 * t5423) * t5423 + (80 * t5424 - 456 * t5426 + 72) * t5419) * np.cos((8 * phi1 - 6 * phi2))

        if Bindx == 833:
            t5438 = np.sin(phi)
            t5436 = t5438 ** 2
            t5429 = np.cos(phi)
            t5430 = t5429 ** 2
            t5431 = t5429 * t5430
            t5434 = t5431 ** 2
            t5432 = t5430 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t5436 ** 2 * (36 * t5430 - 55 * t5431 - 20 * t5432 - 76 * t5434 - 4 + (99 * t5432 + 19 * t5434 + 1) * t5429) * np.sin((8 * phi1 - 5 * phi2)) * ((1 + t5429) ** (-0.1e1 / 0.2e1)) * ((1 - t5429) ** (-0.1e1 / 0.2e1))

        if Bindx == 834:
            t5439 = np.cos(phi)
            t5440 = t5439 ** 2
            t5442 = t5440 ** 2
            t5446 = t5442 ** 2
            t5441 = t5439 * t5440
            t5444 = t5441 ** 2
            t5443 = t5439 * t5442
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t5440 - 32 * t5441 + 574 * t5442 - 602 * t5444 + 87 * t5446 + 11 + (-336 + 95 * t5443) * t5443 + (640 * t5444 - 304 * t5446 + 32) * t5439) * np.cos((8 * phi1 - 4 * phi2))

        if Bindx == 835:
            t5457 = np.sin(phi)
            t5454 = t5457 ** 2
            t5455 = t5457 * t5454
            t5449 = np.cos(phi)
            t5450 = t5449 ** 2
            t5452 = t5450 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t5455 ** 2 * (64 * t5450 - 228 * t5452 - 4 + (118 * t5450 + 95 * t5452 - 45) * t5449) * np.sin((8 * phi1 - 3 * phi2)) * ((1 + t5449) ** (-0.1e1 / 0.2e1)) * ((1 - t5449) ** (-0.1e1 / 0.2e1))

        if Bindx == 836:
            t5458 = np.cos(phi)
            t5459 = t5458 ** 2
            t5461 = t5459 ** 2
            t5465 = t5461 ** 2
            t5460 = t5458 * t5459
            t5463 = t5460 ** 2
            t5462 = t5458 * t5461
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t5459 + 272 * t5460 - 38 * t5461 + 230 * t5463 - 267 * t5465 + 1 + (-576 + 95 * t5462) * t5462 + (496 * t5463 - 152 * t5465 - 40) * t5458) * np.cos((8 * phi1 - 2 * phi2))

        if Bindx == 837:
            t5474 = np.sin(phi)
            t5471 = t5474 ** 2
            t5472 = t5471 ** 2
            t5468 = np.cos(phi)
            t5469 = t5468 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t5472 ** 2 * (-76 * t5469 + 4 + (95 * t5469 - 23) * t5468) * np.sin((8 * phi1 - phi2)) * ((1 - t5468) ** (-0.1e1 / 0.2e1)) * ((1 + t5468) ** (-0.1e1 / 0.2e1))

        if Bindx == 838:
            t5475 = np.cos(phi)
            t5476 = t5475 ** 2
            t5477 = t5476 ** 2
            t5479 = t5477 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t5477 - 77 * t5479 - 1 + (118 * t5477 + 19 * t5479 + 23) * t5476) * np.cos((8 * phi1))

        if Bindx == 839:
            t5487 = np.sin(phi)
            t5484 = t5487 ** 2
            t5485 = t5484 ** 2
            t5481 = np.cos(phi)
            t5482 = t5481 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.221e3) * t5485 ** 2 * (76 * t5482 - 4 + (95 * t5482 - 23) * t5481) * np.sin((8 * phi1 + phi2)) * ((1 - t5481) ** (-0.1e1 / 0.2e1)) * ((1 + t5481) ** (-0.1e1 / 0.2e1))

        if Bindx == 840:
            t5488 = np.cos(phi)
            t5489 = t5488 ** 2
            t5491 = t5489 ** 2
            t5495 = t5491 ** 2
            t5490 = t5488 * t5489
            t5493 = t5490 ** 2
            t5492 = t5488 * t5491
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.663e3) * (-21 * t5489 - 272 * t5490 - 38 * t5491 + 230 * t5493 - 267 * t5495 + 1 + (576 + 95 * t5492) * t5492 + (-496 * t5493 + 152 * t5495 + 40) * t5488) * np.cos((8 * phi1 + 2 * phi2))

        if Bindx == 841:
            t5506 = np.sin(phi)
            t5503 = t5506 ** 2
            t5504 = t5506 * t5503
            t5498 = np.cos(phi)
            t5499 = t5498 ** 2
            t5501 = t5499 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.51e2) * t5504 ** 2 * (-64 * t5499 + 228 * t5501 + 4 + (118 * t5499 + 95 * t5501 - 45) * t5498) * np.sin((8 * phi1 + 3 * phi2)) * ((1 - t5498) ** (-0.1e1 / 0.2e1)) * ((1 + t5498) ** (-0.1e1 / 0.2e1))

        if Bindx == 842:
            t5507 = np.cos(phi)
            t5508 = t5507 ** 2
            t5510 = t5508 ** 2
            t5514 = t5510 ** 2
            t5509 = t5507 * t5508
            t5512 = t5509 ** 2
            t5511 = t5507 * t5510
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.51e2) * (-165 * t5508 + 32 * t5509 + 574 * t5510 - 602 * t5512 + 87 * t5514 + 11 + (336 + 95 * t5511) * t5511 + (-640 * t5512 + 304 * t5514 - 32) * t5507) * np.cos((8 * phi1 + 4 * phi2))

        if Bindx == 843:
            t5526 = np.sin(phi)
            t5524 = t5526 ** 2
            t5517 = np.cos(phi)
            t5518 = t5517 ** 2
            t5519 = t5517 * t5518
            t5522 = t5519 ** 2
            t5520 = t5518 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.255e3) * t5524 ** 2 * (-36 * t5518 - 55 * t5519 + 20 * t5520 + 76 * t5522 + 4 + (99 * t5520 + 19 * t5522 + 1) * t5517) * np.sin((8 * phi1 + 5 * phi2)) * ((1 - t5517) ** (-0.1e1 / 0.2e1)) * ((1 + t5517) ** (-0.1e1 / 0.2e1))

        if Bindx == 844:
            t5527 = np.cos(phi)
            t5528 = t5527 ** 2
            t5530 = t5528 ** 2
            t5534 = t5530 ** 2
            t5529 = t5527 * t5528
            t5532 = t5529 ** 2
            t5531 = t5527 * t5530
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.51e2) * (155 * t5528 + 592 * t5529 + 266 * t5530 - 1162 * t5532 + 677 * t5534 - 31 + (-896 + 95 * t5531) * t5531 + (-80 * t5532 + 456 * t5534 - 72) * t5527) * np.cos((8 * phi1 + 6 * phi2))

        if Bindx == 845:
            t5538 = np.cos(phi)
            t5539 = t5538 ** 2
            t5541 = t5539 ** 2
            t5545 = t5541 ** 2
            t5540 = t5538 * t5539
            t5543 = t5540 ** 2
            t5537 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.3e1) * t5537 ** 2 * (88 * t5539 - 588 * t5540 - 1120 * t5541 + 840 * t5543 + 532 * t5545 + 44 + (-406 * t5541 + 1108 * t5543 + 95 * t5545 + 175) * t5538) * np.sin((8 * phi1 + 7 * phi2)) * ((1 - t5538) ** (-0.1e1 / 0.2e1)) * ((1 + t5538) ** (-0.1e1 / 0.2e1))

        if Bindx == 846:
            t5547 = np.cos(phi)
            t5548 = t5547 ** 2
            t5550 = t5548 ** 2
            t5554 = t5550 ** 2
            t5549 = t5547 * t5548
            t5552 = t5549 ** 2
            t5551 = t5547 * t5550
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (531 * t5548 - 192 * t5549 - 1722 * t5550 - 210 * t5552 + 1503 * t5554 + 59 + (-2016 + 95 * t5551) * t5551 + (1536 * t5552 + 608 * t5554 + 320) * t5547) * np.cos((8 * phi1 + 8 * phi2))

        if Bindx == 847:
            t5558 = np.cos(phi)
            t5559 = t5558 ** 2
            t5560 = t5558 * t5559
            t5562 = t5560 ** 2
            t5563 = t5558 * t5562
            t5564 = t5558 * t5563
            t5557 = np.sin(phi)
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5557 ** 2 * (-84 * t5560 + 168 * t5562 + 108 * t5563 + 36 * t5564 - 4 + (126 * t5560 - 72) * t5559 + (5 * t5564 - 27) * t5558) * np.sin((8 * phi1 + 9 * phi2)) * ((1 - t5558) ** (-0.1e1 / 0.2e1)) * ((1 + t5558) ** (-0.1e1 / 0.2e1))

        if Bindx == 848:
            t5566 = np.cos(phi)
            t5567 = t5566 ** 2
            t5569 = t5567 ** 2
            t5572 = t5569 ** 2
            t5573 = t5566 * t5572
            t5568 = t5566 * t5567
            t5570 = t5568 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t5567 - 48 * t5568 - 42 * t5569 + 42 * t5570 + 27 * t5572 + 8 * t5573 - 1 + (48 * t5570 + t5573 - 8) * t5566) * np.cos((8 * phi1 + 10 * phi2))

        if Bindx == 849:
            t5575 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t5575) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t5575)) * np.sin((9 * phi1 - 10 * phi2))

        if Bindx == 850:
            t5576 = np.cos(phi)
            t5577 = t5576 ** 2
            t5579 = t5577 ** 2
            t5583 = t5579 ** 2
            t5578 = t5576 * t5577
            t5581 = t5578 ** 2
            t5580 = t5576 * t5579
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (-234 * t5577 + 396 * t5578 - 294 * t5579 + 504 * t5581 + 279 * t5583 - 9 + (-126 + 10 * t5580) * t5580 + (-516 * t5581 - 81 * t5583 + 71) * t5576) * np.cos((9 * phi1 - 9 * phi2))

        if Bindx == 851:
            t5587 = np.cos(phi)
            t5588 = t5587 ** 2
            t5589 = t5587 * t5588
            t5591 = t5589 ** 2
            t5592 = t5587 * t5591
            t5593 = t5587 * t5592
            t5586 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5586 ** 2 * (-84 * t5589 - 168 * t5591 + 108 * t5592 - 36 * t5593 + 4 + (126 * t5589 + 72) * t5588 + (5 * t5593 - 27) * t5587) * np.sin((9 * phi1 - 8 * phi2)) * ((1 - t5587) ** (-0.1e1 / 0.2e1)) * ((1 + t5587) ** (-0.1e1 / 0.2e1))

        if Bindx == 852:
            t5595 = np.cos(phi)
            t5596 = t5595 ** 2
            t5598 = t5596 ** 2
            t5602 = t5598 ** 2
            t5597 = t5595 * t5596
            t5600 = t5597 ** 2
            t5599 = t5595 * t5598
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5596 + 4 * t5597 - 182 * t5598 - 56 * t5600 + 151 * t5602 + 7 + (238 + 10 * t5599) * t5599 + (-140 * t5600 - 63 * t5602 - 39) * t5595) * np.cos((9 * phi1 - 7 * phi2))

        if Bindx == 853:
            t5614 = np.sin(phi)
            t5612 = t5614 ** 2
            t5605 = np.cos(phi)
            t5606 = t5605 ** 2
            t5607 = t5605 * t5606
            t5610 = t5607 ** 2
            t5608 = t5606 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5612 ** 2 * (15 * t5606 + 15 * t5607 - 55 * t5608 - 27 * t5610 + 3 + (57 * t5608 + 5 * t5610 - 13) * t5605) * np.sin((9 * phi1 - 6 * phi2)) * ((1 - t5605) ** (-0.1e1 / 0.2e1)) * ((1 + t5605) ** (-0.1e1 / 0.2e1))

        if Bindx == 854:
            t5615 = np.cos(phi)
            t5616 = t5615 ** 2
            t5618 = t5616 ** 2
            t5622 = t5618 ** 2
            t5617 = t5615 * t5616
            t5620 = t5617 ** 2
            t5619 = t5615 * t5618
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t5616 - 16 * t5617 + 14 * t5618 - 28 * t5620 + 11 * t5622 - 1 + (14 + 2 * t5619) * t5619 + (8 * t5620 - 9 * t5622 + 3) * t5615) * np.cos((9 * phi1 - 5 * phi2))

        if Bindx == 855:
            t5633 = np.sin(phi)
            t5630 = t5633 ** 2
            t5631 = t5633 * t5630
            t5625 = np.cos(phi)
            t5626 = t5625 ** 2
            t5628 = t5626 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t5631 ** 2 * (-8 * t5626 - 18 * t5628 + 2 + (22 * t5626 + 5 * t5628 - 3) * t5625) * np.sin((9 * phi1 - 4 * phi2)) * ((1 - t5625) ** (-0.1e1 / 0.2e1)) * ((1 + t5625) ** (-0.1e1 / 0.2e1))

        if Bindx == 856:
            t5634 = np.cos(phi)
            t5635 = t5634 ** 2
            t5637 = t5635 ** 2
            t5641 = t5637 ** 2
            t5636 = t5634 * t5635
            t5639 = t5636 ** 2
            t5638 = t5634 * t5637
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t5635 + 24 * t5636 + 62 * t5637 - 36 * t5639 - 9 * t5641 + 3 + (-78 + 10 * t5638) * t5638 + (80 * t5639 - 27 * t5641 + 1) * t5634) * np.cos((9 * phi1 - 3 * phi2))

        if Bindx == 857:
            t5650 = np.sin(phi)
            t5647 = t5650 ** 2
            t5648 = t5647 ** 2
            t5644 = np.cos(phi)
            t5645 = t5644 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t5648 ** 2 * (-9 * t5645 + 1 + (5 * t5645 + 3) * t5644) * np.sin((9 * phi1 - 2 * phi2)) * ((1 - t5644) ** (-0.1e1 / 0.2e1)) * ((1 + t5644) ** (-0.1e1 / 0.2e1))

        if Bindx == 858:
            t5651 = np.cos(phi)
            t5661 = -9 * t5651
            t5652 = t5651 ** 2
            t5654 = t5652 ** 2
            t5655 = t5651 * t5654
            t5653 = t5651 * t5652
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t5652 + t5661 - 1 + (-54 + 10 * t5655) * t5655 + (-46 + (t5661 - 41) * t5654) * t5654 + (36 + (36 * t5651 + 64) * t5653) * t5653) * np.cos((9 * phi1 - phi2))

        if Bindx == 859:
            t5667 = np.sin(phi)
            t5663 = t5667 ** 2
            t5665 = t5667 * t5663 ** 2
            t5662 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t5662 * t5665 ** 2 * np.sin((9 * phi1)) * ((1 - t5662) ** (-0.1e1 / 0.2e1)) * ((1 + t5662) ** (-0.1e1 / 0.2e1))

        if Bindx == 860:
            t5668 = np.cos(phi)
            t5678 = 9 * t5668
            t5669 = t5668 ** 2
            t5671 = t5669 ** 2
            t5672 = t5668 * t5671
            t5670 = t5668 * t5669
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.4199e4) * (14 * t5669 + t5678 - 1 + (54 + 10 * t5672) * t5672 + (-46 + (t5678 - 41) * t5671) * t5671 + (-36 + (-36 * t5668 + 64) * t5670) * t5670) * np.cos((9 * phi1 + phi2))

        if Bindx == 861:
            t5685 = np.sin(phi)
            t5682 = t5685 ** 2
            t5683 = t5682 ** 2
            t5679 = np.cos(phi)
            t5680 = t5679 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.12597e5) * t5683 ** 2 * (9 * t5680 - 1 + (5 * t5680 + 3) * t5679) * np.sin((9 * phi1 + 2 * phi2)) * ((1 - t5679) ** (-0.1e1 / 0.2e1)) * ((1 + t5679) ** (-0.1e1 / 0.2e1))

        if Bindx == 862:
            t5686 = np.cos(phi)
            t5687 = t5686 ** 2
            t5689 = t5687 ** 2
            t5693 = t5689 ** 2
            t5688 = t5686 * t5687
            t5691 = t5688 ** 2
            t5690 = t5686 * t5689
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * (-30 * t5687 - 24 * t5688 + 62 * t5689 - 36 * t5691 - 9 * t5693 + 3 + (78 + 10 * t5690) * t5690 + (-80 * t5691 + 27 * t5693 - 1) * t5686) * np.cos((9 * phi1 + 3 * phi2))

        if Bindx == 863:
            t5704 = np.sin(phi)
            t5701 = t5704 ** 2
            t5702 = t5704 * t5701
            t5696 = np.cos(phi)
            t5697 = t5696 ** 2
            t5699 = t5697 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.969e3) * t5702 ** 2 * (8 * t5697 + 18 * t5699 - 2 + (22 * t5697 + 5 * t5699 - 3) * t5696) * np.sin((9 * phi1 + 4 * phi2)) * ((1 - t5696) ** (-0.1e1 / 0.2e1)) * ((1 + t5696) ** (-0.1e1 / 0.2e1))

        if Bindx == 864:
            t5705 = np.cos(phi)
            t5706 = t5705 ** 2
            t5708 = t5706 ** 2
            t5712 = t5708 ** 2
            t5707 = t5705 * t5706
            t5710 = t5707 ** 2
            t5709 = t5705 * t5708
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * (2 * t5706 + 16 * t5707 + 14 * t5708 - 28 * t5710 + 11 * t5712 - 1 + (-14 + 2 * t5709) * t5709 + (-8 * t5710 + 9 * t5712 - 3) * t5705) * np.cos((9 * phi1 + 5 * phi2))

        if Bindx == 865:
            t5724 = np.sin(phi)
            t5722 = t5724 ** 2
            t5715 = np.cos(phi)
            t5716 = t5715 ** 2
            t5717 = t5715 * t5716
            t5720 = t5717 ** 2
            t5718 = t5716 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * t5722 ** 2 * (-15 * t5716 + 15 * t5717 + 55 * t5718 + 27 * t5720 - 3 + (57 * t5718 + 5 * t5720 - 13) * t5715) * np.sin((9 * phi1 + 6 * phi2)) * ((1 - t5715) ** (-0.1e1 / 0.2e1)) * ((1 + t5715) ** (-0.1e1 / 0.2e1))

        if Bindx == 866:
            t5725 = np.cos(phi)
            t5726 = t5725 ** 2
            t5728 = t5726 ** 2
            t5732 = t5728 ** 2
            t5727 = t5725 * t5726
            t5730 = t5727 ** 2
            t5729 = t5725 * t5728
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.57e2) * (70 * t5726 - 4 * t5727 - 182 * t5728 - 56 * t5730 + 151 * t5732 + 7 + (-238 + 10 * t5729) * t5729 + (140 * t5730 + 63 * t5732 + 39) * t5725) * np.cos((9 * phi1 + 7 * phi2))

        if Bindx == 867:
            t5736 = np.cos(phi)
            t5737 = t5736 ** 2
            t5738 = t5736 * t5737
            t5740 = t5738 ** 2
            t5741 = t5736 * t5740
            t5742 = t5736 * t5741
            t5735 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.19e2) * t5735 ** 2 * (-84 * t5738 + 168 * t5740 + 108 * t5741 + 36 * t5742 - 4 + (126 * t5738 - 72) * t5737 + (5 * t5742 - 27) * t5736) * np.sin((9 * phi1 + 8 * phi2)) * ((1 - t5736) ** (-0.1e1 / 0.2e1)) * ((1 + t5736) ** (-0.1e1 / 0.2e1))

        if Bindx == 868:
            t5744 = np.cos(phi)
            t5745 = t5744 ** 2
            t5747 = t5745 ** 2
            t5751 = t5747 ** 2
            t5746 = t5744 * t5745
            t5749 = t5746 ** 2
            t5748 = t5744 * t5747
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * (-234 * t5745 - 396 * t5746 - 294 * t5747 + 504 * t5749 + 279 * t5751 - 9 + (126 + 10 * t5748) * t5748 + (516 * t5749 + 81 * t5751 - 71) * t5744) * np.cos((9 * phi1 + 9 * phi2))

        if Bindx == 869:
            t5754 = np.cos(phi)
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * np.sqrt((1 - t5754)) * ((1 + t5754) ** (0.19e2 / 0.2e1)) * np.sin((9 * phi1 + 10 * phi2))

        if Bindx == 870:
            t5755 = np.cos(phi)
            t5765 = -10 * t5755
            t5756 = t5755 ** 2
            t5758 = t5756 ** 2
            t5759 = t5755 * t5758
            t5757 = t5755 * t5756
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.cos((10 * phi1 - 10 * phi2)) * (45 * t5756 + t5765 + 1 + (-252 + t5759) * t5759 + (210 + (t5765 + 45) * t5758) * t5758 + (-120 + (-120 * t5755 + 210) * t5757) * t5757)

        if Bindx == 871:
            t5766 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 - t5766) ** (0.19e2 / 0.2e1)) * np.sqrt((1 + t5766)) * np.sin((10 * phi1 - 9 * phi2))

        if Bindx == 872:
            t5767 = np.cos(phi)
            t5768 = t5767 ** 2
            t5770 = t5768 ** 2
            t5773 = t5770 ** 2
            t5774 = t5767 * t5773
            t5769 = t5767 * t5768
            t5771 = t5769 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t5768 + 48 * t5769 - 42 * t5770 + 42 * t5771 + 27 * t5773 - 8 * t5774 - 1 + (-48 * t5771 + t5774 + 8) * t5767) * np.cos((10 * phi1 - 8 * phi2))

        if Bindx == 873:
            t5776 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t5776) ** (0.17e2 / 0.2e1)) * ((1 + t5776) ** (0.3e1 / 0.2e1)) * np.sin((10 * phi1 - 7 * phi2))

        if Bindx == 874:
            t5777 = np.cos(phi)
            t5787 = -6 * t5777
            t5778 = t5777 ** 2
            t5780 = t5778 ** 2
            t5781 = t5777 * t5780
            t5779 = t5777 * t5778
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((10 * phi1 - 6 * phi2)) * (13 * t5778 + t5787 + 1 + (28 + t5781) * t5781 + (-14 + (t5787 + 13) * t5780) * t5780 + (-8 + (-8 * t5777 - 14) * t5779) * t5779)

        if Bindx == 875:
            t5788 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t5788) ** (0.15e2 / 0.2e1)) * ((1 + t5788) ** (0.5e1 / 0.2e1)) * np.sin((10 * phi1 - 5 * phi2))

        if Bindx == 876:
            t5789 = np.cos(phi)
            t5790 = t5789 ** 2
            t5792 = t5790 ** 2
            t5795 = t5792 ** 2
            t5796 = t5789 * t5795
            t5791 = t5789 * t5790
            t5793 = t5791 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((10 * phi1 - 4 * phi2)) * (-3 * t5790 - 8 * t5791 + 14 * t5792 - 14 * t5793 + 3 * t5795 - 4 * t5796 - 1 + (8 * t5793 + t5796 + 4) * t5789)

        if Bindx == 877:
            t5798 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t5798) ** (0.13e2 / 0.2e1)) * ((1 + t5798) ** (0.7e1 / 0.2e1)) * np.sin((10 * phi1 - 3 * phi2))

        if Bindx == 878:
            t5799 = np.cos(phi)
            t5809 = -2 * t5799
            t5800 = t5799 ** 2
            t5802 = t5800 ** 2
            t5803 = t5799 * t5802
            t5801 = t5799 * t5800
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((10 * phi1 - 2 * phi2)) * (-3 * t5800 + t5809 + 1 + (-12 + t5803) * t5803 + (2 + (t5809 - 3) * t5802) * t5802 + (8 + (8 * t5799 + 2) * t5801) * t5801)

        if Bindx == 879:
            t5810 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t5810) ** (0.11e2 / 0.2e1)) * ((1 + t5810) ** (0.9e1 / 0.2e1)) * np.sin((10 * phi1 - phi2))

        if Bindx == 880:
            t5811 = np.cos(phi)
            t5812 = t5811 ** 2
            t5813 = t5812 ** 2
            t5815 = t5813 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t5813 - 5 * t5815 - 1 + (10 * t5813 + t5815 + 5) * t5812)

        if Bindx == 881:
            t5817 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.20995e5) * ((1 - t5817) ** (0.9e1 / 0.2e1)) * ((1 + t5817) ** (0.11e2 / 0.2e1)) * np.sin((10 * phi1 + phi2))

        if Bindx == 882:
            t5818 = np.cos(phi)
            t5828 = 2 * t5818
            t5819 = t5818 ** 2
            t5821 = t5819 ** 2
            t5822 = t5818 * t5821
            t5820 = t5818 * t5819
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.62985e5) * np.cos((10 * phi1 + 2 * phi2)) * (-3 * t5819 + t5828 + 1 + (12 + t5822) * t5822 + (2 + (t5828 - 3) * t5821) * t5821 + (-8 + (-8 * t5818 + 2) * t5820) * t5820)

        if Bindx == 883:
            t5829 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((1 - t5829) ** (0.7e1 / 0.2e1)) * ((1 + t5829) ** (0.13e2 / 0.2e1)) * np.sin((10 * phi1 + 3 * phi2))

        if Bindx == 884:
            t5830 = np.cos(phi)
            t5831 = t5830 ** 2
            t5833 = t5831 ** 2
            t5836 = t5833 ** 2
            t5837 = t5830 * t5836
            t5832 = t5830 * t5831
            t5834 = t5832 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.4845e4) * np.cos((10 * phi1 + 4 * phi2)) * (-3 * t5831 + 8 * t5832 + 14 * t5833 - 14 * t5834 + 3 * t5836 + 4 * t5837 - 1 + (-8 * t5834 + t5837 - 4) * t5830)

        if Bindx == 885:
            t5839 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.969e3) * ((1 - t5839) ** (0.5e1 / 0.2e1)) * ((1 + t5839) ** (0.15e2 / 0.2e1)) * np.sin((10 * phi1 + 5 * phi2))

        if Bindx == 886:
            t5840 = np.cos(phi)
            t5850 = 6 * t5840
            t5841 = t5840 ** 2
            t5843 = t5841 ** 2
            t5844 = t5840 * t5843
            t5842 = t5840 * t5841
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * np.cos((10 * phi1 + 6 * phi2)) * (13 * t5841 + t5850 + 1 + (-28 + t5844) * t5844 + (-14 + (t5850 + 13) * t5843) * t5843 + (8 + (8 * t5840 - 14) * t5842) * t5842)

        if Bindx == 887:
            t5851 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.285e3) * ((1 - t5851) ** (0.3e1 / 0.2e1)) * ((1 + t5851) ** (0.17e2 / 0.2e1)) * np.sin((10 * phi1 + 7 * phi2))

        if Bindx == 888:
            t5852 = np.cos(phi)
            t5853 = t5852 ** 2
            t5855 = t5853 ** 2
            t5858 = t5855 ** 2
            t5859 = t5852 * t5858
            t5854 = t5852 * t5853
            t5856 = t5854 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.95e2) * (-27 * t5853 - 48 * t5854 - 42 * t5855 + 42 * t5856 + 27 * t5858 + 8 * t5859 - 1 + (48 * t5856 + t5859 - 8) * t5852) * np.cos((10 * phi1 + 8 * phi2))

        if Bindx == 889:
            t5861 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 + t5861) ** (0.19e2 / 0.2e1)) * np.sin((10 * phi1 + 9 * phi2)) * np.sqrt((1 - t5861))

        if Bindx == 890:
            t5862 = np.cos(phi)
            t5872 = 10 * t5862
            t5863 = t5862 ** 2
            t5865 = t5863 ** 2
            t5866 = t5862 * t5865
            t5864 = t5862 * t5863
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.2e1) * np.cos((10 * phi1 + 10 * phi2)) * (45 * t5863 + t5872 + 1 + (252 + t5866) * t5866 + (210 + (t5872 + 45) * t5865) * t5865 + (120 + (120 * t5862 + 210) * t5864) * t5864)

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

