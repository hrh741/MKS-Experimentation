import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 0, 1],
                        [1, 2, 0, 1],
                        [2, 2, 1, 1],
                        [3, 2, 2, 1],
                        [4, 4, 0, 1],
                        [5, 4, 1, 1],
                        [6, 4, 2, 1],
                        [7, 4, 3, 1],
                        [8, 4, 4, 1],
                        [9, 6, 0, 1],
                        [10, 6, 0, 2],
                        [11, 6, 1, 1],
                        [12, 6, 1, 2],
                        [13, 6, 2, 1],
                        [14, 6, 2, 2],
                        [15, 6, 3, 1],
                        [16, 6, 3, 2],
                        [17, 6, 4, 1],
                        [18, 6, 4, 2],
                        [19, 6, 5, 1],
                        [20, 6, 5, 2],
                        [21, 6, 6, 1],
                        [22, 6, 6, 2],
                        [23, 7, 0, 1],
                        [24, 7, 1, 1],
                        [25, 7, 2, 1],
                        [26, 7, 3, 1],
                        [27, 7, 4, 1],
                        [28, 7, 5, 1],
                        [29, 7, 6, 1],
                        [30, 7, 7, 1],
                        [31, 8, 0, 1],
                        [32, 8, 0, 2],
                        [33, 8, 1, 1],
                        [34, 8, 1, 2],
                        [35, 8, 2, 1],
                        [36, 8, 2, 2],
                        [37, 8, 3, 1],
                        [38, 8, 3, 2],
                        [39, 8, 4, 1],
                        [40, 8, 4, 2],
                        [41, 8, 5, 1],
                        [42, 8, 5, 2],
                        [43, 8, 6, 1],
                        [44, 8, 6, 2],
                        [45, 8, 7, 1],
                        [46, 8, 7, 2],
                        [47, 8, 8, 1],
                        [48, 8, 8, 2],
                        [49, 9, 0, 1],
                        [50, 9, 1, 1],
                        [51, 9, 2, 1],
                        [52, 9, 3, 1],
                        [53, 9, 4, 1],
                        [54, 9, 5, 1],
                        [55, 9, 6, 1],
                        [56, 9, 7, 1],
                        [57, 9, 8, 1],
                        [58, 9, 9, 1],
                        [59, 10, 0, 1],
                        [60, 10, 0, 2],
                        [61, 10, 1, 1],
                        [62, 10, 1, 2],
                        [63, 10, 2, 1],
                        [64, 10, 2, 2],
                        [65, 10, 3, 1],
                        [66, 10, 3, 2],
                        [67, 10, 4, 1],
                        [68, 10, 4, 2],
                        [69, 10, 5, 1],
                        [70, 10, 5, 2],
                        [71, 10, 6, 1],
                        [72, 10, 6, 2],
                        [73, 10, 7, 1],
                        [74, 10, 7, 2],
                        [75, 10, 8, 1],
                        [76, 10, 8, 2],
                        [77, 10, 9, 1],
                        [78, 10, 9, 2],
                        [79, 10, 10, 1],
                        [80, 10, 10, 2],
                        [81, 11, 0, 1],
                        [82, 11, 1, 1],
                        [83, 11, 2, 1],
                        [84, 11, 3, 1],
                        [85, 11, 4, 1],
                        [86, 11, 5, 1],
                        [87, 11, 6, 1],
                        [88, 11, 7, 1],
                        [89, 11, 8, 1],
                        [90, 11, 9, 1],
                        [91, 11, 10, 1],
                        [92, 11, 11, 1],
                        [93, 12, 0, 1],
                        [94, 12, 0, 2],
                        [95, 12, 0, 3],
                        [96, 12, 1, 1],
                        [97, 12, 1, 2],
                        [98, 12, 1, 3],
                        [99, 12, 2, 1],
                        [100, 12, 2, 2],
                        [101, 12, 2, 3],
                        [102, 12, 3, 1],
                        [103, 12, 3, 2],
                        [104, 12, 3, 3],
                        [105, 12, 4, 1],
                        [106, 12, 4, 2],
                        [107, 12, 4, 3],
                        [108, 12, 5, 1],
                        [109, 12, 5, 2],
                        [110, 12, 5, 3],
                        [111, 12, 6, 1],
                        [112, 12, 6, 2],
                        [113, 12, 6, 3],
                        [114, 12, 7, 1],
                        [115, 12, 7, 2],
                        [116, 12, 7, 3],
                        [117, 12, 8, 1],
                        [118, 12, 8, 2],
                        [119, 12, 8, 3],
                        [120, 12, 9, 1],
                        [121, 12, 9, 2],
                        [122, 12, 9, 3],
                        [123, 12, 10, 1],
                        [124, 12, 10, 2],
                        [125, 12, 10, 3],
                        [126, 12, 11, 1],
                        [127, 12, 11, 2],
                        [128, 12, 11, 3],
                        [129, 12, 12, 1],
                        [130, 12, 12, 2],
                        [131, 12, 12, 3],
                        [132, 13, 0, 1],
                        [133, 13, 0, 2],
                        [134, 13, 1, 1],
                        [135, 13, 1, 2],
                        [136, 13, 2, 1],
                        [137, 13, 2, 2],
                        [138, 13, 3, 1],
                        [139, 13, 3, 2],
                        [140, 13, 4, 1],
                        [141, 13, 4, 2],
                        [142, 13, 5, 1],
                        [143, 13, 5, 2],
                        [144, 13, 6, 1],
                        [145, 13, 6, 2],
                        [146, 13, 7, 1],
                        [147, 13, 7, 2],
                        [148, 13, 8, 1],
                        [149, 13, 8, 2],
                        [150, 13, 9, 1],
                        [151, 13, 9, 2],
                        [152, 13, 10, 1],
                        [153, 13, 10, 2],
                        [154, 13, 11, 1],
                        [155, 13, 11, 2],
                        [156, 13, 12, 1],
                        [157, 13, 12, 2],
                        [158, 13, 13, 1],
                        [159, 13, 13, 2],
                        [160, 14, 0, 1],
                        [161, 14, 0, 2],
                        [162, 14, 0, 3],
                        [163, 14, 1, 1],
                        [164, 14, 1, 2],
                        [165, 14, 1, 3],
                        [166, 14, 2, 1],
                        [167, 14, 2, 2],
                        [168, 14, 2, 3],
                        [169, 14, 3, 1],
                        [170, 14, 3, 2],
                        [171, 14, 3, 3],
                        [172, 14, 4, 1],
                        [173, 14, 4, 2],
                        [174, 14, 4, 3],
                        [175, 14, 5, 1],
                        [176, 14, 5, 2],
                        [177, 14, 5, 3],
                        [178, 14, 6, 1],
                        [179, 14, 6, 2],
                        [180, 14, 6, 3],
                        [181, 14, 7, 1],
                        [182, 14, 7, 2],
                        [183, 14, 7, 3],
                        [184, 14, 8, 1],
                        [185, 14, 8, 2],
                        [186, 14, 8, 3],
                        [187, 14, 9, 1],
                        [188, 14, 9, 2],
                        [189, 14, 9, 3],
                        [190, 14, 10, 1],
                        [191, 14, 10, 2],
                        [192, 14, 10, 3],
                        [193, 14, 11, 1],
                        [194, 14, 11, 2],
                        [195, 14, 11, 3],
                        [196, 14, 12, 1],
                        [197, 14, 12, 2],
                        [198, 14, 12, 3],
                        [199, 14, 13, 1],
                        [200, 14, 13, 2],
                        [201, 14, 13, 3],
                        [202, 14, 14, 1],
                        [203, 14, 14, 2],
                        [204, 14, 14, 3],
                        [205, 15, 0, 1],
                        [206, 15, 0, 2],
                        [207, 15, 1, 1],
                        [208, 15, 1, 2],
                        [209, 15, 2, 1],
                        [210, 15, 2, 2],
                        [211, 15, 3, 1],
                        [212, 15, 3, 2],
                        [213, 15, 4, 1],
                        [214, 15, 4, 2],
                        [215, 15, 5, 1],
                        [216, 15, 5, 2],
                        [217, 15, 6, 1],
                        [218, 15, 6, 2],
                        [219, 15, 7, 1],
                        [220, 15, 7, 2],
                        [221, 15, 8, 1],
                        [222, 15, 8, 2],
                        [223, 15, 9, 1],
                        [224, 15, 9, 2],
                        [225, 15, 10, 1],
                        [226, 15, 10, 2],
                        [227, 15, 11, 1],
                        [228, 15, 11, 2],
                        [229, 15, 12, 1],
                        [230, 15, 12, 2],
                        [231, 15, 13, 1],
                        [232, 15, 13, 2],
                        [233, 15, 14, 1],
                        [234, 15, 14, 2],
                        [235, 15, 15, 1],
                        [236, 15, 15, 2],
                        [237, 16, 0, 1],
                        [238, 16, 0, 2],
                        [239, 16, 0, 3],
                        [240, 16, 1, 1],
                        [241, 16, 1, 2],
                        [242, 16, 1, 3],
                        [243, 16, 2, 1],
                        [244, 16, 2, 2],
                        [245, 16, 2, 3],
                        [246, 16, 3, 1],
                        [247, 16, 3, 2],
                        [248, 16, 3, 3],
                        [249, 16, 4, 1],
                        [250, 16, 4, 2],
                        [251, 16, 4, 3],
                        [252, 16, 5, 1],
                        [253, 16, 5, 2],
                        [254, 16, 5, 3],
                        [255, 16, 6, 1],
                        [256, 16, 6, 2],
                        [257, 16, 6, 3],
                        [258, 16, 7, 1],
                        [259, 16, 7, 2],
                        [260, 16, 7, 3],
                        [261, 16, 8, 1],
                        [262, 16, 8, 2],
                        [263, 16, 8, 3],
                        [264, 16, 9, 1],
                        [265, 16, 9, 2],
                        [266, 16, 9, 3],
                        [267, 16, 10, 1],
                        [268, 16, 10, 2],
                        [269, 16, 10, 3],
                        [270, 16, 11, 1],
                        [271, 16, 11, 2],
                        [272, 16, 11, 3],
                        [273, 16, 12, 1],
                        [274, 16, 12, 2],
                        [275, 16, 12, 3],
                        [276, 16, 13, 1],
                        [277, 16, 13, 2],
                        [278, 16, 13, 3],
                        [279, 16, 14, 1],
                        [280, 16, 14, 2],
                        [281, 16, 14, 3],
                        [282, 16, 15, 1],
                        [283, 16, 15, 2],
                        [284, 16, 15, 3],
                        [285, 16, 16, 1],
                        [286, 16, 16, 2],
                        [287, 16, 16, 3]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t1 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 2:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t3 * t2 ** 2 * np.sin(phi1) * ((1 + t3) ** (-0.1e1 / 0.2e1)) * ((1 - t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t4 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t4 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 4:
            t5 = np.cos(phi)
            t6 = t5 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t6) * t6

        if Bindx == 5:
            t9 = np.cos(phi)
            t8 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t9 * t8 ** 2 * (7 * t9 ** 2 - 3) * np.sin(phi1) * ((1 + t9) ** (-0.1e1 / 0.2e1)) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            t10 = np.cos(phi)
            t11 = t10 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t11) * t11) * np.cos((2 * phi1))

        if Bindx == 7:
            t16 = np.sin(phi)
            t14 = t16 ** 2
            t13 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13 * t14 ** 2 * np.sin((3 * phi1)) * ((1 + t13) ** (-0.1e1 / 0.2e1)) * ((1 - t13) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t18) * t18)

        if Bindx == 9:
            t20 = np.cos(phi)
            t21 = t20 ** 2
            t22 = t21 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t22 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t22 + 0.1365e4 / 0.16e2) * t21

        if Bindx == 10:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            t26 = t25 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t26 - 1 + (t26 + 3) * t25)

        if Bindx == 11:
            t29 = np.cos(phi)
            t30 = t29 ** 2
            t28 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t29 * t28 ** 2 * (5 + (-30 + 33 * t30) * t30) * np.sin(phi1) * ((1 + t29) ** (-0.1e1 / 0.2e1)) * ((1 - t29) ** (-0.1e1 / 0.2e1))

        if Bindx == 12:
            t38 = np.cos(phi)
            t37 = t38 ** 2
            t44 = 1 + (-2 + t37) * t37
            t42 = t44 * t38
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.22e2) * np.sqrt((1 - t38)) * np.sqrt((1 + t38)) * ((t42 - t44) * np.sin((phi1 - 6 * phi2)) + (t42 + t44) * np.sin((phi1 + 6 * phi2)))

        if Bindx == 13:
            t45 = np.cos(phi)
            t46 = t45 ** 2
            t47 = t46 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t47 - 1 + (33 * t47 + 19) * t46) * np.cos((2 * phi1))

        if Bindx == 14:
            t56 = np.cos(phi)
            t55 = t56 ** 2
            t58 = t56 * t55
            t59 = t55 ** 2
            t63 = -2 * t56 * t59 - 2 * t56 + 4 * t58
            t62 = t58 ** 2 - t55 - t59 + 1
            t57 = 2 * phi1
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.55e2) * ((t62 + t63) * np.cos((-t57 + 6 * phi2)) + (t62 - t63) * np.cos((t57 + 6 * phi2)))

        if Bindx == 15:
            t67 = np.sin(phi)
            t65 = t67 ** 2
            t64 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t64 * t65 ** 2 * (11 * t64 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t64) ** (-0.1e1 / 0.2e1)) * ((1 - t64) ** (-0.1e1 / 0.2e1))

        if Bindx == 16:
            t74 = np.cos(phi)
            t73 = t74 ** 2
            t81 = 2 * t73
            t77 = t73 ** 2
            t80 = 1 + t81 - 3 * t77
            t79 = (t77 + t81 - 3) * t74
            t75 = 3 * phi1
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.55e2) * np.sqrt((1 - t74)) * np.sqrt((1 + t74)) * (-(t79 + t80) * np.sin((-t75 + 6 * phi2)) + (t79 - t80) * np.sin((t75 + 6 * phi2)))

        if Bindx == 17:
            t82 = np.cos(phi)
            t83 = t82 ** 2
            t84 = t83 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t84 - 1 + (11 * t84 + 13) * t83) * np.cos((4 * phi1))

        if Bindx == 18:
            t92 = np.cos(phi)
            t91 = t92 ** 2
            t94 = t91 ** 2
            t95 = t92 * t94
            t98 = 4 * t92 - 4 * t95
            t97 = t92 * t95 - 5 * t91 + 5 * t94 - 1
            t93 = 4 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.66e2) * ((t97 + t98) * np.cos((-t93 + 6 * phi2)) + (t97 - t98) * np.cos((t93 + 6 * phi2)))

        if Bindx == 19:
            t103 = np.sin(phi)
            t100 = t103 ** 2
            t101 = t103 * t100
            t99 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t99 * t101 ** 2 * np.sin((5 * phi1)) * ((1 + t99) ** (-0.1e1 / 0.2e1)) * ((1 - t99) ** (-0.1e1 / 0.2e1))

        if Bindx == 20:
            t110 = np.cos(phi)
            t109 = t110 ** 2
            t113 = t109 ** 2
            t116 = -1 - 10 * t109 - 5 * t113
            t115 = (10 * t109 + t113 + 5) * t110
            t111 = 5 * phi1
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.3e1) * np.sqrt((1 - t110)) * np.sqrt((1 + t110)) * (-(t115 + t116) * np.sin((-t111 + 6 * phi2)) + (t115 - t116) * np.sin((t111 + 6 * phi2)))

        if Bindx == 21:
            t117 = np.cos(phi)
            t118 = t117 ** 2
            t119 = t118 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t119 - 1 + (t119 + 3) * t118)

        if Bindx == 22:
            t128 = np.cos(phi)
            t135 = -0.39e2 / 0.32e2 * t128
            t127 = t128 ** 2
            t129 = t128 * t127
            t130 = t127 ** 2
            t134 = -0.65e2 / 0.16e2 * t129 + t130 * t135 + t135
            t133 = 0.13e2 / 0.64e2 * t129 ** 2 + 0.13e2 / 0.64e2 + 0.195e3 / 0.64e2 * t130 + 0.195e3 / 0.64e2 * t127
            tfunc[..., c] = (t133 + t134) * np.cos((6 * phi1 - 6 * phi2)) + (t133 - t134) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 23:
            tfunc[..., c] = 0

        if Bindx == 24:
            t145 = np.cos(phi)
            t144 = t145 ** 2
            t146 = t145 * t144
            t147 = t144 ** 2
            t149 = t146 ** 2
            t153 = 18 * t146 + 6 * (-3 * t147 + t149 - 1) * t145
            t152 = 10 * t144 + 22 * t149 - 1 + (-24 - 7 * t147) * t147
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.858e3) * ((t152 + t153) * np.sin((phi1 - 6 * phi2)) + (-t152 + t153) * np.sin((phi1 + 6 * phi2))) * ((1 + t145) ** (-0.1e1 / 0.2e1)) * ((1 - t145) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t162 = np.cos(phi)
            t161 = t162 ** 2
            t165 = t161 ** 2
            t164 = t162 * t161
            t167 = t164 ** 2
            t170 = -2 + 16 * t161 - 26 * t165 + 12 * t167
            t169 = -t164 + (11 * t165 - 7 * t167 - 3) * t162
            t163 = 2 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * ((t169 + t170) * np.cos((-t163 + 6 * phi2)) + (-t169 + t170) * np.cos((t163 + 6 * phi2)))

        if Bindx == 26:
            t180 = np.cos(phi)
            t179 = t180 ** 2
            t182 = t180 * t179
            t183 = t179 ** 2
            t185 = t182 ** 2
            t189 = -22 * t182 + (38 * t183 - 18 * t185 + 2) * t180
            t188 = -18 * t179 + 2 * t185 + 3 + (20 - 7 * t183) * t183
            t181 = 3 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.286e3) * (-(-t188 + t189) * np.sin((-t181 + 6 * phi2)) + (t188 + t189) * np.sin((t181 + 6 * phi2))) * ((1 + t180) ** (-0.1e1 / 0.2e1)) * ((1 - t180) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t198 = np.cos(phi)
            t197 = t198 ** 2
            t201 = t197 ** 2
            t200 = t198 * t197
            t203 = t200 ** 2
            t206 = -4 + 8 * t197 + 20 * t201 - 24 * t203
            t205 = 35 * t200 + (-19 * t201 - 7 * t203 - 9) * t198
            t199 = 4 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.26e2) * ((-t205 + t206) * np.cos((-t199 + 6 * phi2)) + (t205 + t206) * np.cos((t199 + 6 * phi2)))

        if Bindx == 28:
            t216 = np.cos(phi)
            t215 = t216 ** 2
            t218 = t216 * t215
            t219 = t215 ** 2
            t221 = t218 ** 2
            t225 = -38 * t218 + (-10 * t219 + 30 * t221 + 18) * t216
            t224 = -10 * t215 - 38 * t221 - 5 + (60 - 7 * t219) * t219
            t217 = 5 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.26e2) * (-(t224 + t225) * np.sin((-t217 + 6 * phi2)) + (-t224 + t225) * np.sin((t217 + 6 * phi2))) * ((1 + t216) ** (-0.1e1 / 0.2e1)) * ((1 - t216) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t234 = np.cos(phi)
            t233 = t234 ** 2
            t236 = t233 ** 2
            t235 = t234 * t233
            t238 = t235 ** 2
            t241 = 0.375e3 / 0.32e2 * t236 + 0.135e3 / 0.16e2 * t238 - 0.45e2 / 0.4e1 * t233 - 0.45e2 / 0.32e2
            t240 = 0.225e3 / 0.64e2 * t235 + (-0.1035e4 / 0.64e2 * t236 - 0.105e3 / 0.64e2 * t238 + 0.435e3 / 0.64e2) * t234
            tfunc[..., c] = (t240 + t241) * np.cos((6 * phi1 - 6 * phi2)) + (-t240 + t241) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 30:
            t250 = np.cos(phi)
            t249 = t250 ** 2
            t259 = 14 * t249
            t252 = t250 * t249
            t254 = t252 ** 2
            t255 = t250 * t254
            t258 = -t250 * t255 - 14 * t254 + t259 + 1
            t257 = -6 * t250 + 6 * t255 + (t259 - 14) * t252
            t251 = 7 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.14e2) * (-(t257 + t258) * np.sin((-t251 + 6 * phi2)) + (t257 - t258) * np.sin((t251 + 6 * phi2))) * ((1 + t250) ** (-0.1e1 / 0.2e1)) * ((1 - t250) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t260 = np.cos(phi)
            t261 = t260 ** 2
            t262 = t261 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t261 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t261 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t262) * t262

        if Bindx == 32:
            t265 = np.cos(phi)
            t266 = t265 ** 2
            t267 = t266 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.429e3) * (-18 * t266 + 1 + (-46 * t266 + 48 + 15 * t267) * t267) * np.cos((6 * phi2))

        if Bindx == 33:
            t271 = np.cos(phi)
            t272 = t271 ** 2
            t273 = t272 ** 2
            t270 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t271 * t270 ** 2 * (-1001 * t273 - 35 + (715 * t273 + 385) * t272) * np.sin(phi1) * ((1 + t271) ** (-0.1e1 / 0.2e1)) * ((1 - t271) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t285 = np.cos(phi)
            t284 = t285 ** 2
            t287 = t284 ** 2
            t286 = t285 * t284
            t289 = t286 ** 2
            t291 = t287 ** 2
            t294 = -1 + 18 * t284 - 48 * t287 + 46 * t289 - 15 * t291
            t293 = -38 * t286 + (78 * t287 - 66 * t289 + 20 * t291 + 6) * t285
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.858e3) * ((t293 + t294) * np.sin((phi1 - 6 * phi2)) + (t293 - t294) * np.sin((phi1 + 6 * phi2))) * ((1 + t285) ** (-0.1e1 / 0.2e1)) * ((1 - t285) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t295 = np.cos(phi)
            t296 = t295 ** 2
            t297 = t296 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t296 + 1 + (-286 * t296 + 176 + 143 * t297) * t297) * np.cos((2 * phi1))

        if Bindx == 36:
            t308 = np.cos(phi)
            t307 = t308 ** 2
            t310 = t308 * t307
            t311 = t307 ** 2
            t313 = t310 ** 2
            t316 = 2 * t310 + 2 * (-2 * t311 + t313) * t308
            t315 = 1 - 5 * t307 + 7 * t311 - 3 * t313
            t309 = 2 * phi1
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15015e5) * t308 * ((t315 + t316) * np.cos((-t309 + 6 * phi2)) + (-t315 + t316) * np.cos((t309 + 6 * phi2)))

        if Bindx == 37:
            t322 = np.sin(phi)
            t320 = t322 ** 2
            t317 = np.cos(phi)
            t318 = t317 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t317 * t320 ** 2 * (3 + (-26 + 39 * t318) * t318) * np.sin((3 * phi1)) * ((1 + t317) ** (-0.1e1 / 0.2e1)) * ((1 - t317) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t333 = np.cos(phi)
            t332 = t333 ** 2
            t336 = t332 ** 2
            t335 = t333 * t332
            t338 = t335 ** 2
            t340 = t336 ** 2
            t343 = -1 + 14 * t332 - 52 * t336 + 66 * t338 - 27 * t340
            t342 = 22 * t335 - 14 * (t336 + t338) * t333 + (12 * t340 - 6) * t333
            t334 = 3 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.910e3) * (-(t342 + t343) * np.sin((-t334 + 6 * phi2)) + (t342 - t343) * np.sin((t334 + 6 * phi2))) * ((1 + t333) ** (-0.1e1 / 0.2e1)) * ((1 - t333) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t345 = np.cos(phi)
            t346 = t345 ** 2
            t347 = t346 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t346 + 1 + (-156 * t346 + 118 + 65 * t347) * t347) * np.cos((4 * phi1))

        if Bindx == 40:
            t359 = np.cos(phi)
            t358 = t359 ** 2
            t361 = t359 * t358
            t362 = t358 ** 2
            t364 = t361 ** 2
            t368 = -5 * t361 + (21 * t362 - 15 * t364 - 1) * t359
            t367 = 10 * t358 + 6 * t364 - 1 + (-20 + 5 * t362) * t362
            t360 = 4 * phi1
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.546e3) * ((t367 + t368) * np.cos((-t360 + 6 * phi2)) + (t367 - t368) * np.cos((t360 + 6 * phi2)))

        if Bindx == 41:
            t373 = np.sin(phi)
            t370 = t373 ** 2
            t371 = t373 * t370
            t369 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t369 * t371 ** 2 * (5 * t369 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t369) ** (-0.1e1 / 0.2e1)) * ((1 - t369) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t384 = np.cos(phi)
            t383 = t384 ** 2
            t387 = t383 ** 2
            t386 = t384 * t383
            t389 = t386 ** 2
            t391 = t387 ** 2
            t394 = 7 - 42 * t383 + 20 * t387 + 90 * t389 - 75 * t391
            t393 = 90 * t386 + (-162 * t387 + 62 * t389 + 20 * t391 - 10) * t384
            t385 = 5 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.42e2) * (-(t393 + t394) * np.sin((-t385 + 6 * phi2)) + (t393 - t394) * np.sin((t385 + 6 * phi2))) * ((1 + t384) ** (-0.1e1 / 0.2e1)) * ((1 - t384) ** (-0.1e1 / 0.2e1))

        if Bindx == 43:
            t395 = np.cos(phi)
            t396 = t395 ** 2
            t397 = t396 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t396 + 1 + (-46 * t396 + 48 + 15 * t397) * t397) * np.cos((6 * phi1))

        if Bindx == 44:
            t408 = np.cos(phi)
            t409 = t408 ** 2
            t411 = t409 ** 2
            t410 = t408 * t409
            t413 = t410 ** 2
            t417 = 0.833e3 / 0.16e2 * t413 + 0.17e2 / 0.4e1 + (-0.1785e4 / 0.32e2 + 0.255e3 / 0.32e2 * t411) * t411
            t416 = 0.2975e4 / 0.64e2 * t410 + (-0.2295e4 / 0.64e2 * t413 - 0.357e3 / 0.64e2 * t411 - 0.867e3 / 0.64e2) * t408
            tfunc[..., c] = (t416 + t417) * np.cos((6 * phi1 - 6 * phi2)) + (-t416 + t417) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 45:
            t422 = np.sin(phi)
            t419 = t422 ** 2
            t420 = t419 ** 2
            t418 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t418 * t420 ** 2 * np.sin((7 * phi1)) * ((1 + t418) ** (-0.1e1 / 0.2e1)) * ((1 - t418) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t433 = np.cos(phi)
            t432 = t433 ** 2
            t436 = t432 ** 2
            t435 = t433 * t432
            t438 = t435 ** 2
            t440 = t436 ** 2
            t443 = -3 - 18 * t432 + 56 * t436 - 14 * t438 - 21 * t440
            t442 = -14 * t435 + (-42 * t436 + 38 * t438 + 4 * t440 + 14) * t433
            t434 = 7 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.30e2) * (-(t442 + t443) * np.sin((-t434 + 6 * phi2)) + (t442 - t443) * np.sin((t434 + 6 * phi2))) * ((1 - t433) ** (-0.1e1 / 0.2e1)) * ((1 + t433) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t444 = np.cos(phi)
            t445 = t444 ** 2
            t449 = -4 * t445
            t446 = t445 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t449 + 1 + (t449 + 6 + t446) * t446)

        if Bindx == 48:
            t458 = np.cos(phi)
            t457 = t458 ** 2
            t467 = -14 * t457
            t460 = t458 * t457
            t462 = t460 ** 2
            t463 = t458 * t462
            t466 = t458 * t463 + 14 * t462 + t467 - 1
            t465 = 6 * t458 - 6 * t463 + (t467 + 14) * t460
            t459 = 8 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.30e2) * ((t465 + t466) * np.cos((-t459 + 6 * phi2)) + (-t465 + t466) * np.cos((t459 + 6 * phi2)))

        if Bindx == 49:
            tfunc[..., c] = 0

        if Bindx == 50:
            t479 = np.cos(phi)
            t478 = t479 ** 2
            t480 = t479 * t478
            t481 = t478 ** 2
            t482 = t479 * t481
            t483 = t480 ** 2
            t485 = t481 ** 2
            t489 = -52 * t480 + 120 * t482 + (-108 * t483 + 34 * t485 + 6) * t479
            t488 = -51 * t482 ** 2 - 27 * t478 + 126 * t481 - 226 * t483 + 177 * t485 + 1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.858e3) * ((t488 + t489) * np.sin((phi1 - 6 * phi2)) + (-t488 + t489) * np.sin((phi1 + 6 * phi2))) * ((1 + t479) ** (-0.1e1 / 0.2e1)) * ((1 - t479) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t500 = np.cos(phi)
            t499 = t500 ** 2
            t503 = t499 ** 2
            t502 = t500 * t499
            t505 = t502 ** 2
            t507 = t503 ** 2
            t510 = -3 + 75 * t499 - 277 * t503 + 341 * t505 - 136 * t507
            t509 = 44 * t502 + (-178 * t503 + 240 * t505 - 102 * t507 - 4) * t500
            t501 = 2 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.39e2) * ((-t509 + t510) * np.cos((-t501 + 6 * phi2)) + (t509 + t510) * np.cos((t501 + 6 * phi2)))

        if Bindx == 52:
            t522 = np.cos(phi)
            t521 = t522 ** 2
            t524 = t522 * t521
            t525 = t521 ** 2
            t526 = t522 * t525
            t527 = t524 ** 2
            t529 = t525 ** 2
            t533 = 98 * t524 - 262 * t526 + (278 * t527 - 102 * t529 - 12) * t522
            t532 = -51 * t526 ** 2 + 23 * t521 - 52 * t525 - 12 * t527 + 93 * t529 - 1
            t523 = 3 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.91e2) * (-(-t532 + t533) * np.sin((-t523 + 6 * phi2)) + (t532 + t533) * np.sin((t523 + 6 * phi2))) * ((1 - t522) ** (-0.1e1 / 0.2e1)) * ((1 + t522) ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t544 = np.cos(phi)
            t543 = t544 ** 2
            t547 = t543 ** 2
            t546 = t544 * t543
            t549 = t546 ** 2
            t551 = t547 ** 2
            t554 = -1 + 19 * t543 - 131 * t547 + 249 * t549 - 136 * t551
            t553 = -106 * t546 + (144 * t547 - 6 * t549 - 51 * t551 + 19) * t544
            t545 = 4 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.42e2) * ((-t553 + t554) * np.cos((-t545 + 6 * phi2)) + (t553 + t554) * np.cos((t545 + 6 * phi2)))

        if Bindx == 54:
            t566 = np.cos(phi)
            t565 = t566 ** 2
            t568 = t566 * t565
            t569 = t565 ** 2
            t570 = t566 * t569
            t571 = t568 ** 2
            t573 = t569 ** 2
            t577 = 30 * t568 + 126 * t570 + (-310 * t571 + 170 * t573 - 16) * t566
            t576 = -51 * t570 ** 2 + 75 * t565 - 280 * t569 + 336 * t571 - 75 * t573 - 5
            t567 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * (-(t576 + t577) * np.sin((-t567 + 6 * phi2)) + (-t576 + t577) * np.sin((t567 + 6 * phi2))) * ((1 + t566) ** (-0.1e1 / 0.2e1)) * ((1 - t566) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t588 = np.cos(phi)
            t587 = t588 ** 2
            t590 = t587 ** 2
            t589 = t588 * t587
            t592 = t589 ** 2
            t594 = t590 ** 2
            t597 = 0.3933e4 / 0.64e2 * t587 - 0.5187e4 / 0.64e2 * t590 - 0.5453e4 / 0.64e2 * t592 + 0.969e3 / 0.8e1 * t594 - 0.437e3 / 0.64e2
            t596 = -0.1463e4 / 0.16e2 * t589 + (0.7581e4 / 0.32e2 * t590 - 0.513e3 / 0.4e1 * t592 - 0.969e3 / 0.32e2 * t594 + 0.57e2 / 0.16e2) * t588
            tfunc[..., c] = (t596 + t597) * np.cos((6 * phi1 - 6 * phi2)) + (-t596 + t597) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 56:
            t609 = np.cos(phi)
            t608 = t609 ** 2
            t611 = t609 * t608
            t612 = t608 ** 2
            t613 = t609 * t612
            t614 = t611 ** 2
            t616 = t612 ** 2
            t620 = 352 * t611 - 420 * t613 + (-112 * t614 + 238 * t616 - 58) * t609
            t619 = -51 * t613 ** 2 - 63 * t608 - 238 * t612 + 658 * t614 - 327 * t616 + 21
            t610 = 7 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.3e1) * (-(t619 + t620) * np.sin((-t610 + 6 * phi2)) + (-t619 + t620) * np.sin((t610 + 6 * phi2))) * ((1 - t609) ** (-0.1e1 / 0.2e1)) * ((1 + t609) ** (-0.1e1 / 0.2e1))

        if Bindx == 57:
            t631 = np.cos(phi)
            t630 = t631 ** 2
            t634 = t630 ** 2
            t633 = t631 * t630
            t636 = t633 ** 2
            t638 = t634 ** 2
            t641 = 2 + 10 * t630 - 42 * t634 + 14 * t636 + 16 * t638
            t640 = 14 * t633 + (28 * t634 - 30 * t636 - 3 * t638 - 9) * t631
            t632 = 8 * phi1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.102e3) * ((t640 + t641) * np.cos((-t632 + 6 * phi2)) + (-t640 + t641) * np.cos((t632 + 6 * phi2)))

        if Bindx == 58:
            t650 = np.cos(phi)
            t649 = t650 ** 2
            t659 = 14 * t649
            t652 = t650 * t649
            t654 = t652 ** 2
            t655 = t650 * t654
            t658 = -t650 * t655 - 14 * t654 + t659 + 1
            t657 = -6 * t650 + 6 * t655 + (t659 - 14) * t652
            t651 = 9 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.51e2) * np.sqrt((1 - t650)) * np.sqrt((1 + t650)) * (-(t657 + t658) * np.sin((-t651 + 6 * phi2)) + (t657 - t658) * np.sin((t651 + 6 * phi2)))

        if Bindx == 59:
            t660 = np.cos(phi)
            t661 = t660 ** 2
            t662 = t661 ** 2
            t664 = t662 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t664 - 0.315315e6 / 0.128e3 * t662 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t664 + 0.945945e6 / 0.128e3 * t662 + 0.72765e5 / 0.256e3) * t661

        if Bindx == 60:
            t666 = np.cos(phi)
            t667 = t666 ** 2
            t668 = t667 ** 2
            t670 = t668 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2145e4) * (-638 * t668 - 1071 * t670 - 3 + (1278 * t668 + 323 * t670 + 111) * t667) * np.cos((6 * phi2))

        if Bindx == 61:
            t673 = np.cos(phi)
            t674 = t673 ** 2
            t675 = t674 ** 2
            t672 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t673 * t672 ** 2 * (-1092 * t674 + 63 + (-7956 * t674 + 4914 + 4199 * t675) * t675) * np.sin(phi1) * ((1 - t673) ** (-0.1e1 / 0.2e1)) * ((1 + t673) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t690 = np.cos(phi)
            t689 = t690 ** 2
            t692 = t689 ** 2
            t691 = t690 * t689
            t694 = t691 ** 2
            t696 = t692 ** 2
            t693 = t690 * t692
            t698 = t693 ** 2
            t701 = 9 - 333 * t689 + 1914 * t692 - 3834 * t694 + 3213 * t696 - 969 * t698
            t700 = 1387 * t691 - 5110 * t693 + (8118 * t694 - 5899 * t696 + 1615 * t698 - 111) * t690
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.78e2) * ((t700 + t701) * np.sin((phi1 - 6 * phi2)) + (t700 - t701) * np.sin((phi1 + 6 * phi2))) * ((1 - t690) ** (-0.1e1 / 0.2e1)) * ((1 + t690) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t702 = np.cos(phi)
            t703 = t702 ** 2
            t704 = t703 ** 2
            t706 = t704 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t704 - 10387 * t706 - 7 + (8918 * t704 + 4199 * t706 + 371) * t703) * np.cos((2 * phi1))

        if Bindx == 64:
            t719 = np.cos(phi)
            t718 = t719 ** 2
            t721 = t719 * t718
            t722 = t718 ** 2
            t723 = t719 * t722
            t724 = t721 ** 2
            t726 = t722 ** 2
            t730 = 4888 * t721 - 14276 * t723 + (15640 * t724 - 5814 * t726 - 438) * t719
            t729 = 4845 * t723 ** 2 + 665 * t718 - 4486 * t722 + 11898 * t724 - 12903 * t726 - 19
            t720 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.26e2) * ((t729 + t730) * np.cos((-t720 + 6 * phi2)) + (t729 - t730) * np.cos((t720 + 6 * phi2)))

        if Bindx == 65:
            t737 = np.sin(phi)
            t735 = t737 ** 2
            t731 = np.cos(phi)
            t732 = t731 ** 2
            t733 = t732 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t731 * t735 ** 2 * (-357 * t733 - 7 + (323 * t733 + 105) * t732) * np.sin((3 * phi1)) * ((1 - t731) ** (-0.1e1 / 0.2e1)) * ((1 + t731) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t750 = np.cos(phi)
            t749 = t750 ** 2
            t753 = t749 ** 2
            t752 = t750 * t749
            t755 = t752 ** 2
            t757 = t753 ** 2
            t754 = t750 * t753
            t759 = t754 ** 2
            t762 = 69 - 2277 * t749 + 12898 * t753 - 27962 * t755 + 25993 * t757 - 8721 * t759
            t761 = -1423 * t752 + 662 * t754 + (7122 * t755 - 11373 * t757 + 4845 * t759 + 167) * t750
            t751 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.256e3 * (-(t761 + t762) * np.sin((-t751 + 6 * phi2)) + (t761 - t762) * np.sin((t751 + 6 * phi2))) * ((1 - t750) ** (-0.1e1 / 0.2e1)) * ((1 + t750) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t763 = np.cos(phi)
            t764 = t763 ** 2
            t765 = t764 ** 2
            t767 = t765 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t765 - 901 * t767 - 1 + (878 * t765 + 323 * t767 + 47) * t764) * np.cos((4 * phi1))

        if Bindx == 68:
            t780 = np.cos(phi)
            t779 = t780 ** 2
            t782 = t780 * t779
            t783 = t779 ** 2
            t784 = t780 * t783
            t785 = t782 ** 2
            t787 = t783 ** 2
            t791 = 5032 * t782 - 18368 * t784 + (25432 * t785 - 11628 * t787 - 468) * t780
            t790 = 4845 * t784 ** 2 - 2407 * t779 + 8918 * t783 - 8022 * t785 - 3417 * t787 + 83
            t781 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * ((t790 + t791) * np.cos((-t781 + 6 * phi2)) + (t790 - t791) * np.cos((t781 + 6 * phi2)))

        if Bindx == 69:
            t798 = np.sin(phi)
            t795 = t798 ** 2
            t796 = t798 * t795
            t792 = np.cos(phi)
            t793 = t792 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t792 * t796 ** 2 * (15 + (-170 + 323 * t793) * t793) * np.sin((5 * phi1)) * ((1 - t792) ** (-0.1e1 / 0.2e1)) * ((1 + t792) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t811 = np.cos(phi)
            t810 = t811 ** 2
            t814 = t810 ** 2
            t813 = t811 * t810
            t816 = t813 ** 2
            t818 = t814 ** 2
            t815 = t811 * t814
            t820 = t815 ** 2
            t823 = -1 + 25 * t810 + 1110 * t814 - 4942 * t816 + 6715 * t818 - 2907 * t820
            t822 = -2035 * t813 + 5278 * t815 + (-4710 * t816 + 255 * t818 + 969 * t820 + 243) * t811
            t812 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.5e1) * (-(t822 + t823) * np.sin((-t812 + 6 * phi2)) + (t822 - t823) * np.sin((t812 + 6 * phi2))) * ((1 - t811) ** (-0.1e1 / 0.2e1)) * ((1 + t811) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t824 = np.cos(phi)
            t825 = t824 ** 2
            t826 = t825 ** 2
            t828 = t826 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t826 - 1071 * t828 - 3 + (1278 * t826 + 323 * t828 + 111) * t825) * np.cos((6 * phi1))

        if Bindx == 72:
            t841 = np.cos(phi)
            t840 = t841 ** 2
            t842 = t841 * t840
            t843 = t840 ** 2
            t844 = t841 * t843
            t845 = t842 ** 2
            t847 = t843 ** 2
            t851 = -0.16191e5 / 0.128e3 * t842 - 0.10143e5 / 0.256e3 * t844 + (0.61761e5 / 0.128e3 * t845 - 0.183141e6 / 0.512e3 * t847 + 0.15771e5 / 0.512e3) * t841
            t850 = 0.101745e6 / 0.1024e4 * t844 ** 2 - 0.94563e5 / 0.1024e4 * t840 + 0.235641e6 / 0.512e3 * t843 - 0.366471e6 / 0.512e3 * t845 + 0.260253e6 / 0.1024e4 * t847 + 0.4977e4 / 0.1024e4
            tfunc[..., c] = (t850 + t851) * np.cos((6 * phi1 - 6 * phi2)) + (t850 - t851) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 73:
            t856 = np.sin(phi)
            t853 = t856 ** 2
            t854 = t853 ** 2
            t852 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t852 * t854 ** 2 * (19 * t852 ** 2 - 3) * np.sin((7 * phi1)) * ((1 - t852) ** (-0.1e1 / 0.2e1)) * ((1 + t852) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t869 = np.cos(phi)
            t868 = t869 ** 2
            t872 = t868 ** 2
            t871 = t869 * t868
            t874 = t871 ** 2
            t876 = t872 ** 2
            t873 = t869 * t872
            t878 = t873 ** 2
            t881 = -43 + 559 * t868 - 1566 * t872 + 686 * t874 + 1561 * t876 - 1197 * t878
            t880 = -511 * t871 + 2590 * t873 + (-3534 * t874 + 1191 * t876 + 285 * t878 - 21) * t869
            t870 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * (-(t880 + t881) * np.sin((-t870 + 6 * phi2)) + (t880 - t881) * np.sin((t870 + 6 * phi2))) * ((1 - t869) ** (-0.1e1 / 0.2e1)) * ((1 + t869) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t882 = np.cos(phi)
            t883 = t882 ** 2
            t884 = t883 ** 2
            t886 = t884 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t884 - 77 * t886 - 1 + (118 * t884 + 19 * t886 + 23) * t883) * np.cos((8 * phi1))

        if Bindx == 76:
            t899 = np.cos(phi)
            t898 = t899 ** 2
            t901 = t899 * t898
            t902 = t898 ** 2
            t903 = t899 * t902
            t904 = t901 ** 2
            t906 = t902 ** 2
            t910 = -592 * t901 + 896 * t903 + (80 * t904 - 456 * t906 + 72) * t899
            t909 = 95 * t903 ** 2 + 155 * t898 + 266 * t902 - 1162 * t904 + 677 * t906 - 31
            t900 = 8 * phi1
            tfunc[..., c] = -0.21e2 / 0.1024e4 * np.sqrt(0.102e3) * ((t909 + t910) * np.cos((-t900 + 6 * phi2)) + (t909 - t910) * np.cos((t900 + 6 * phi2)))

        if Bindx == 77:
            t916 = np.sin(phi)
            t912 = t916 ** 2
            t914 = t916 * t912 ** 2
            t911 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t911 * t914 ** 2 * np.sin((9 * phi1)) * ((1 - t911) ** (-0.1e1 / 0.2e1)) * ((1 + t911) ** (-0.1e1 / 0.2e1))

        if Bindx == 78:
            t929 = np.cos(phi)
            t928 = t929 ** 2
            t932 = t928 ** 2
            t931 = t929 * t928
            t934 = t931 ** 2
            t936 = t932 ** 2
            t933 = t929 * t932
            t938 = t933 ** 2
            t941 = 3 + 9 * t928 - 82 * t932 + 98 * t934 - t936 - 27 * t938
            t940 = 41 * t931 + 14 * t933 + (-94 * t934 + 47 * t936 + 5 * t938 - 13) * t929
            t930 = 9 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.969e3) * (-(t940 + t941) * np.sin((-t930 + 6 * phi2)) + (t940 - t941) * np.sin((t930 + 6 * phi2))) * ((1 - t929) ** (-0.1e1 / 0.2e1)) * ((1 + t929) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t942 = np.cos(phi)
            t943 = t942 ** 2
            t944 = t943 ** 2
            t946 = t944 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t944 - 5 * t946 - 1 + (10 * t944 + t946 + 5) * t943)

        if Bindx == 80:
            t959 = np.cos(phi)
            t971 = -6 * t959
            t958 = t959 ** 2
            t961 = t959 * t958
            t962 = t958 ** 2
            t963 = t959 * t962
            t964 = t961 ** 2
            t966 = t962 ** 2
            t970 = -8 * t959 * t964 + t966 * t971 - 8 * t961 + 28 * t963 + t971
            t969 = t963 ** 2 + 13 * t958 - 14 * t962 - 14 * t964 + 13 * t966 + 1
            t960 = 10 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.4845e4) * ((t969 + t970) * np.cos((-t960 + 6 * phi2)) + (t969 - t970) * np.cos((t960 + 6 * phi2)))

        if Bindx == 81:
            tfunc[..., c] = 0

        if Bindx == 82:
            t985 = np.cos(phi)
            t984 = t985 ** 2
            t986 = t985 * t984
            t987 = t984 ** 2
            t988 = t985 * t987
            t989 = t986 ** 2
            t991 = t987 ** 2
            t993 = t988 ** 2
            t997 = 470 * t986 - 2028 * t988 + (3564 * t989 - 2774 * t991 + 798 * t993 - 30) * t985
            t996 = 240 * t984 - 1925 * t987 - 8319 * t991 + 5624 * t993 - 5 + (5848 - 1463 * t989) * t989
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.221e3) * ((t996 + t997) * np.sin((phi1 - 6 * phi2)) + (-t996 + t997) * np.sin((phi1 + 6 * phi2))) * ((1 + t985) ** (-0.1e1 / 0.2e1)) * ((1 - t985) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t1010 = np.cos(phi)
            t1009 = t1010 ** 2
            t1013 = t1009 ** 2
            t1012 = t1010 * t1009
            t1015 = t1012 ** 2
            t1017 = t1013 ** 2
            t1014 = t1010 * t1013
            t1019 = t1014 ** 2
            t1022 = 6 - 276 * t1009 + 1940 * t1013 - 4672 * t1015 + 4598 * t1017 - 1596 * t1019
            t1021 = -459 * t1012 + 2218 * t1014 + (-4638 * t1015 + 4313 * t1017 - 1463 * t1019 + 29) * t1010
            t1011 = 2 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.170e3) * ((-t1021 + t1022) * np.cos((-t1011 + 6 * phi2)) + (t1021 + t1022) * np.cos((t1011 + 6 * phi2)))

        if Bindx == 84:
            t1036 = np.cos(phi)
            t1035 = t1036 ** 2
            t1038 = t1036 * t1035
            t1039 = t1035 ** 2
            t1040 = t1036 * t1039
            t1041 = t1038 ** 2
            t1043 = t1039 ** 2
            t1045 = t1040 ** 2
            t1049 = -1502 * t1038 + 6460 * t1040 + (-11900 * t1041 + 9918 * t1043 - 3078 * t1045 + 102) * t1036
            t1048 = -44 * t1035 + 13 * t1039 - 4917 * t1043 + 5244 * t1045 + 1 + (1584 - 1881 * t1041) * t1041
            t1037 = 3 * phi1
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.595e3) * (-(-t1048 + t1049) * np.sin((-t1037 + 6 * phi2)) + (t1048 + t1049) * np.sin((t1037 + 6 * phi2))) * ((1 - t1036) ** (-0.1e1 / 0.2e1)) * ((1 + t1036) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t1062 = np.cos(phi)
            t1061 = t1062 ** 2
            t1065 = t1061 ** 2
            t1064 = t1062 * t1061
            t1067 = t1064 ** 2
            t1069 = t1065 ** 2
            t1066 = t1062 * t1065
            t1071 = t1066 ** 2
            t1074 = -4 + 160 * t1061 - 1120 * t1065 + 3016 * t1067 - 3420 * t1069 + 1368 * t1071
            t1073 = 345 * t1064 - 874 * t1066 + (330 * t1067 + 855 * t1069 - 627 * t1071 - 29) * t1062
            t1063 = 4 * phi1
            tfunc[..., c] = -0.23e2 / 0.512e3 * np.sqrt(0.714e3) * ((t1073 + t1074) * np.cos((-t1063 + 6 * phi2)) + (-t1073 + t1074) * np.cos((t1063 + 6 * phi2)))

        if Bindx == 86:
            t1088 = np.cos(phi)
            t1087 = t1088 ** 2
            t1090 = t1088 * t1087
            t1091 = t1087 ** 2
            t1092 = t1088 * t1091
            t1093 = t1090 ** 2
            t1095 = t1091 ** 2
            t1097 = t1092 ** 2
            t1101 = 2090 * t1090 - 12852 * t1092 + (31412 * t1093 - 32490 * t1095 + 11970 * t1097 - 130) * t1088
            t1100 = -1908 * t1087 + 10745 * t1091 + 13815 * t1095 + 2964 * t1097 + 53 + (-21280 - 4389 * t1093) * t1093
            t1089 = 5 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.102e3) * (-(t1100 + t1101) * np.sin((-t1089 + 6 * phi2)) + (-t1100 + t1101) * np.sin((t1089 + 6 * phi2))) * ((1 - t1088) ** (-0.1e1 / 0.2e1)) * ((1 + t1088) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t1114 = np.cos(phi)
            t1113 = t1114 ** 2
            t1116 = t1113 ** 2
            t1115 = t1114 * t1113
            t1118 = t1115 ** 2
            t1120 = t1116 ** 2
            t1117 = t1114 * t1116
            t1122 = t1117 ** 2
            t1125 = -0.16215e5 / 0.256e3 * t1113 + 0.2415e4 / 0.256e3 * t1116 + 0.28819e5 / 0.32e2 * t1118 - 0.924255e6 / 0.512e3 * t1120 + 0.247779e6 / 0.256e3 * t1122 + 0.1081e4 / 0.512e3
            t1124 = 0.501515e6 / 0.1024e4 * t1115 - 0.803229e6 / 0.512e3 * t1117 + (0.915975e6 / 0.512e3 * t1118 - 0.386745e6 / 0.1024e4 * t1120 - 0.302841e6 / 0.1024e4 * t1122 - 0.49197e5 / 0.1024e4) * t1114
            tfunc[..., c] = (t1124 + t1125) * np.cos((6 * phi1 - 6 * phi2)) + (-t1124 + t1125) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 88:
            t1139 = np.cos(phi)
            t1138 = t1139 ** 2
            t1141 = t1139 * t1138
            t1142 = t1138 ** 2
            t1143 = t1139 * t1142
            t1144 = t1141 ** 2
            t1146 = t1142 ** 2
            t1148 = t1143 ** 2
            t1152 = -2694 * t1141 + 3948 * t1143 + (3668 * t1144 - 10906 * t1146 + 5586 * t1148 + 398) * t1139
            t1151 = -840 * t1138 + 6251 * t1142 + 15849 * t1146 - 3648 * t1148 + 35 + (-16184 - 1463 * t1144) * t1144
            t1140 = 7 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.10e2) * (-(t1151 + t1152) * np.sin((-t1140 + 6 * phi2)) + (-t1151 + t1152) * np.sin((t1140 + 6 * phi2))) * ((1 - t1139) ** (-0.1e1 / 0.2e1)) * ((1 + t1139) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t1165 = np.cos(phi)
            t1164 = t1165 ** 2
            t1168 = t1164 ** 2
            t1167 = t1165 * t1164
            t1170 = t1167 ** 2
            t1172 = t1168 ** 2
            t1169 = t1165 * t1168
            t1174 = t1169 ** 2
            t1177 = 8 - 128 * t1164 + 448 * t1168 - 336 * t1170 - 328 * t1172 + 336 * t1174
            t1176 = 63 * t1167 - 574 * t1169 + (958 * t1170 - 383 * t1172 - 77 * t1174 + 13) * t1165
            t1166 = 8 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.190e3) * ((t1176 + t1177) * np.cos((-t1166 + 6 * phi2)) + (-t1176 + t1177) * np.cos((t1166 + 6 * phi2)))

        if Bindx == 90:
            t1191 = np.cos(phi)
            t1190 = t1191 ** 2
            t1193 = t1191 * t1190
            t1194 = t1190 ** 2
            t1195 = t1191 * t1194
            t1196 = t1193 ** 2
            t1198 = t1194 ** 2
            t1200 = t1195 ** 2
            t1204 = 1402 * t1193 - 3668 * t1195 + (2452 * t1196 + 1062 * t1198 - 1134 * t1200 - 114) * t1191
            t1203 = 488 * t1190 - 133 * t1194 + 4457 * t1198 - 1552 * t1200 - 61 + (-2968 - 231 * t1196) * t1196
            t1192 = 9 * phi1
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(-t1203 + t1204) * np.sin((-t1192 + 6 * phi2)) + (t1203 + t1204) * np.sin((t1192 + 6 * phi2))) * ((1 - t1191) ** (-0.1e1 / 0.2e1)) * ((1 + t1191) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t1217 = np.cos(phi)
            t1216 = t1217 ** 2
            t1220 = t1216 ** 2
            t1219 = t1217 * t1216
            t1222 = t1219 ** 2
            t1224 = t1220 ** 2
            t1221 = t1217 * t1220
            t1226 = t1221 ** 2
            t1229 = 6 + 12 * t1216 - 172 * t1220 + 224 * t1222 - 10 * t1224 - 60 * t1226
            t1228 = -95 * t1219 - 14 * t1221 + (202 * t1222 - 107 * t1224 - 11 * t1226 + 25) * t1217
            t1218 = 10 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.133e3) * ((-t1228 + t1229) * np.cos((-t1218 + 6 * phi2)) + (t1228 + t1229) * np.cos((t1218 + 6 * phi2)))

        if Bindx == 92:
            t1241 = np.cos(phi)
            t1253 = -6 * t1241
            t1240 = t1241 ** 2
            t1243 = t1241 * t1240
            t1244 = t1240 ** 2
            t1245 = t1241 * t1244
            t1246 = t1243 ** 2
            t1248 = t1244 ** 2
            t1252 = -8 * t1241 * t1246 + t1248 * t1253 - 8 * t1243 + 28 * t1245 + t1253
            t1251 = -t1245 ** 2 - 13 * t1240 + 14 * t1244 + 14 * t1246 - 13 * t1248 - 1
            t1242 = 11 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.2926e4) * np.sqrt((1 - t1241)) * np.sqrt((1 + t1241)) * (-(-t1251 + t1252) * np.sin((-t1242 + 6 * phi2)) + (t1251 + t1252) * np.sin((t1242 + 6 * phi2)))

        if Bindx == 93:
            t1254 = np.cos(phi)
            t1255 = t1254 ** 2
            t1256 = t1255 ** 2
            t1258 = t1256 ** 2
            t1257 = t1255 * t1256
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t1258 + 0.5630625e7 / 0.1024e4 * t1256 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t1257) * t1257 + (-0.24249225e8 / 0.512e3 * t1258 - 0.225225e6 / 0.512e3) * t1255

        if Bindx == 94:
            t1261 = np.cos(phi)
            t1262 = t1261 ** 2
            t1263 = t1262 ** 2
            t1265 = t1263 ** 2
            t1264 = t1262 * t1263
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2431e4) * (2865 * t1263 + 15447 * t1265 + 5 + (-9904 + 3059 * t1264) * t1264 + (-11172 * t1265 - 300) * t1262) * np.cos((6 * phi2))

        if Bindx == 95:
            t1268 = np.cos(phi)
            t1269 = t1268 ** 2
            t1275 = -6 * t1269
            t1270 = t1269 ** 2
            t1271 = t1269 * t1270
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t1275 + 1 + (-20 + t1271) * t1271 + (15 + (t1275 + 15) * t1270) * t1270)

        if Bindx == 96:
            t1277 = np.cos(phi)
            t1278 = t1277 ** 2
            t1279 = t1278 ** 2
            t1281 = t1279 ** 2
            t1276 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t1277 * t1276 ** 2 * (-39270 * t1279 - 124355 * t1281 - 231 + (106590 * t1279 + 52003 * t1281 + 5775) * t1278) * np.sin(phi1) * ((1 - t1277) ** (-0.1e1 / 0.2e1)) * ((1 + t1277) ** (-0.1e1 / 0.2e1))

        if Bindx == 97:
            t1297 = np.cos(phi)
            t1296 = t1297 ** 2
            t1299 = t1296 ** 2
            t1298 = t1297 * t1296
            t1301 = t1298 ** 2
            t1303 = t1299 ** 2
            t1300 = t1297 * t1299
            t1305 = t1300 ** 2
            t1307 = t1301 ** 2
            t1310 = -5 + 300 * t1296 - 2865 * t1299 + 9904 * t1301 - 15447 * t1303 + 11172 * t1305 - 3059 * t1307
            t1309 = -2010 * t1298 + 11814 * t1300 + (-30500 * t1301 + 39216 * t1303 - 24738 * t1305 + 6118 * t1307 + 100) * t1297
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.561e3) * ((t1309 + t1310) * np.sin((phi1 - 6 * phi2)) + (t1309 - t1310) * np.sin((phi1 + 6 * phi2))) * ((1 - t1297) ** (-0.1e1 / 0.2e1)) * ((1 + t1297) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t1323 = np.cos(phi)
            t1322 = t1323 ** 2
            t1324 = t1323 * t1322
            t1325 = t1322 ** 2
            t1326 = t1323 * t1325
            t1335 = 10 * t1324 ** 2 - 5 * t1325 ** 2 + t1326 ** 2 - 1
            t1334 = -5 * t1322 + 10 * t1325 - t1335
            t1333 = t1335 * t1323 + 5 * t1324 - 10 * t1326
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.156009e6) * np.sqrt((1 - t1323)) * np.sqrt((1 + t1323)) * ((t1333 + t1334) * np.sin((phi1 - 12 * phi2)) + (t1333 - t1334) * np.sin((phi1 + 12 * phi2)))

        if Bindx == 99:
            t1336 = np.cos(phi)
            t1337 = t1336 ** 2
            t1338 = t1337 ** 2
            t1340 = t1338 ** 2
            t1339 = t1337 * t1338
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t1338 + 24225 * t1340 + 3 + (-12240 + 7429 * t1339) * t1339 + (-21964 * t1340 - 228) * t1337) * np.cos((2 * phi1))

        if Bindx == 100:
            t1356 = np.cos(phi)
            t1355 = t1356 ** 2
            t1358 = t1356 * t1355
            t1359 = t1355 ** 2
            t1360 = t1356 * t1359
            t1361 = t1358 ** 2
            t1363 = t1359 ** 2
            t1365 = t1360 ** 2
            t1369 = -1595 * t1358 + 8122 * t1360 + (-16606 * t1361 + 14801 * t1363 - 4807 * t1365 + 85) * t1356
            t1368 = -290 * t1355 + 2845 * t1359 + 18791 * t1363 - 15466 * t1365 + 5 + (-10692 + 4807 * t1361) * t1361
            t1357 = 2 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.714e3) * ((t1368 + t1369) * np.cos((-t1357 + 6 * phi2)) + (t1368 - t1369) * np.cos((t1357 + 6 * phi2)))

        if Bindx == 101:
            t1382 = np.cos(phi)
            t1381 = t1382 ** 2
            t1385 = t1381 ** 2
            t1395 = 5 * t1385 ** 2
            t1386 = t1382 * t1385
            t1390 = t1386 ** 2
            t1391 = t1382 * t1390
            t1394 = t1382 * t1391 + 4 * t1381 - 5 * t1385 - 4 * t1390 + t1395 - 1
            t1393 = 2 * t1382 * t1395 + 2 * t1382 + 20 * t1386 - 2 * t1391 + 2 * (-5 * t1382 - 10 * t1386) * t1381
            t1383 = 2 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.490314e6) * ((t1393 + t1394) * np.cos((-t1383 + 12 * phi2)) + (-t1393 + t1394) * np.cos((t1383 + 12 * phi2)))

        if Bindx == 102:
            t1403 = np.sin(phi)
            t1401 = t1403 ** 2
            t1396 = np.cos(phi)
            t1397 = t1396 ** 2
            t1398 = t1397 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t1396 * t1401 ** 2 * (-1020 * t1397 + 45 + (-11628 * t1397 + 5814 + 7429 * t1398) * t1398) * np.sin((3 * phi1)) * ((1 - t1396) ** (-0.1e1 / 0.2e1)) * ((1 + t1396) ** (-0.1e1 / 0.2e1))

        if Bindx == 103:
            t1418 = np.cos(phi)
            t1417 = t1418 ** 2
            t1421 = t1417 ** 2
            t1420 = t1418 * t1417
            t1423 = t1420 ** 2
            t1425 = t1421 ** 2
            t1422 = t1418 * t1421
            t1427 = t1422 ** 2
            t1429 = t1423 ** 2
            t1432 = -23 + 1288 * t1417 - 11855 * t1421 + 40952 * t1423 - 65797 * t1425 + 49856 * t1427 - 14421 * t1429
            t1431 = -362 * t1420 + 4222 * t1422 + (-18692 * t1423 + 35720 * t1425 - 30514 * t1427 + 9614 * t1429 + 12) * t1418
            t1419 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.119e3) * (-(t1431 + t1432) * np.sin((-t1419 + 6 * phi2)) + (t1431 - t1432) * np.sin((t1419 + 6 * phi2))) * ((1 - t1418) ** (-0.1e1 / 0.2e1)) * ((1 + t1418) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t1445 = np.cos(phi)
            t1444 = t1445 ** 2
            t1448 = t1444 ** 2
            t1447 = t1445 * t1444
            t1450 = t1447 ** 2
            t1452 = t1448 ** 2
            t1449 = t1445 * t1448
            t1454 = t1449 ** 2
            t1457 = -1 + t1444 + 6 * t1448 - 14 * t1450 + 11 * t1452 - 3 * t1454
            t1456 = -11 * t1447 + 14 * t1449 + (-6 * t1450 - t1452 + t1454 + 3) * t1445
            t1446 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.81719e5) * np.sqrt((1 - t1445)) * np.sqrt((1 + t1445)) * (-(t1456 + t1457) * np.sin((-t1446 + 12 * phi2)) + (t1456 - t1457) * np.sin((t1446 + 12 * phi2)))

        if Bindx == 105:
            t1458 = np.cos(phi)
            t1459 = t1458 ** 2
            t1460 = t1459 ** 2
            t1462 = t1460 ** 2
            t1461 = t1459 * t1460
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t1460 + 28747 * t1462 + 5 + (-15844 + 7429 * t1461) * t1461 + (-23902 * t1462 - 350) * t1459) * np.cos((4 * phi1))

        if Bindx == 106:
            t1478 = np.cos(phi)
            t1477 = t1478 ** 2
            t1480 = t1478 * t1477
            t1481 = t1477 ** 2
            t1482 = t1478 * t1481
            t1483 = t1480 ** 2
            t1485 = t1481 ** 2
            t1487 = t1482 ** 2
            t1491 = -2470 * t1480 + 12588 * t1482 + (-27436 * t1483 + 26790 * t1485 - 9614 * t1487 + 142) * t1478
            t1490 = 364 * t1477 - 2435 * t1481 + 2755 * t1485 - 9196 * t1487 - 7 + (3712 + 4807 * t1483) * t1483
            t1479 = 4 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.119e3) * ((t1490 + t1491) * np.cos((-t1479 + 6 * phi2)) + (t1490 - t1491) * np.cos((t1479 + 6 * phi2)))

        if Bindx == 107:
            t1505 = np.cos(phi)
            t1504 = t1505 ** 2
            t1507 = t1505 * t1504
            t1508 = t1504 ** 2
            t1509 = t1505 * t1508
            t1510 = t1507 ** 2
            t1512 = t1508 ** 2
            t1514 = t1509 ** 2
            t1518 = 12 * t1507 - 8 * t1509 + 4 * (-2 * t1510 + 3 * t1512 - t1514 - 1) * t1505
            t1517 = 2 * t1504 - 17 * t1508 - 17 * t1512 + 2 * t1514 + 1 + (28 + t1510) * t1510
            t1506 = 4 * phi1
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.81719e5) * ((t1517 + t1518) * np.cos((-t1506 + 12 * phi2)) + (t1517 - t1518) * np.cos((t1506 + 12 * phi2)))

        if Bindx == 108:
            t1526 = np.sin(phi)
            t1523 = t1526 ** 2
            t1524 = t1526 * t1523
            t1519 = np.cos(phi)
            t1520 = t1519 ** 2
            t1521 = t1520 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t1519 * t1524 ** 2 * (-399 * t1521 - 5 + (437 * t1521 + 95) * t1520) * np.sin((5 * phi1)) * ((1 - t1519) ** (-0.1e1 / 0.2e1)) * ((1 + t1519) ** (-0.1e1 / 0.2e1))

        if Bindx == 109:
            t1541 = np.cos(phi)
            t1540 = t1541 ** 2
            t1544 = t1540 ** 2
            t1543 = t1541 * t1540
            t1546 = t1543 ** 2
            t1548 = t1544 ** 2
            t1545 = t1541 * t1544
            t1550 = t1545 ** 2
            t1552 = t1546 ** 2
            t1555 = -25 + 1200 * t1540 - 11465 * t1544 + 45592 * t1546 - 84987 * t1548 + 73720 * t1550 - 24035 * t1552
            t1554 = 5958 * t1543 - 24450 * t1545 + (37500 * t1546 - 14440 * t1548 - 13794 * t1550 + 9614 * t1552 - 388) * t1541
            t1542 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.14e2) * (-(t1554 + t1555) * np.sin((-t1542 + 6 * phi2)) + (t1554 - t1555) * np.sin((t1542 + 6 * phi2))) * ((1 - t1541) ** (-0.1e1 / 0.2e1)) * ((1 + t1541) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t1568 = np.cos(phi)
            t1567 = t1568 ** 2
            t1571 = t1567 ** 2
            t1570 = t1568 * t1567
            t1573 = t1570 ** 2
            t1575 = t1571 ** 2
            t1572 = t1568 * t1571
            t1577 = t1572 ** 2
            t1580 = 1 + 7 * t1567 - 22 * t1571 + 14 * t1573 + 5 * t1575 - 5 * t1577
            t1579 = 5 * t1570 + 14 * t1572 + (-22 * t1573 + 7 * t1575 + t1577 - 5) * t1568
            t1569 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.9614e4) * np.sqrt((1 - t1568)) * np.sqrt((1 + t1568)) * (-(t1579 + t1580) * np.sin((-t1569 + 12 * phi2)) + (t1579 - t1580) * np.sin((t1569 + 12 * phi2)))

        if Bindx == 111:
            t1581 = np.cos(phi)
            t1582 = t1581 ** 2
            t1583 = t1582 ** 2
            t1585 = t1583 ** 2
            t1584 = t1582 * t1583
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1583 + 15447 * t1585 + 5 + (-9904 + 3059 * t1584) * t1584 + (-11172 * t1585 - 300) * t1582) * np.cos((6 * phi1))

        if Bindx == 112:
            t1601 = np.cos(phi)
            t1600 = t1601 ** 2
            t1602 = t1601 * t1600
            t1603 = t1600 ** 2
            t1604 = t1601 * t1603
            t1605 = t1602 ** 2
            t1607 = t1603 ** 2
            t1609 = t1604 ** 2
            t1613 = -0.67375e5 / 0.1024e4 * t1602 + 0.615825e6 / 0.512e3 * t1604 + (-0.2227275e7 / 0.512e3 * t1605 + 0.5802125e7 / 0.1024e4 * t1607 - 0.2523675e7 / 0.1024e4 * t1609 - 0.975e3 / 0.1024e4) * t1601
            t1612 = 0.141225e6 / 0.512e3 * t1600 - 0.1882125e7 / 0.1024e4 * t1603 - 0.3954375e7 / 0.1024e4 * t1607 + 0.109725e6 / 0.512e3 * t1609 - 0.6725e4 / 0.1024e4 + (0.1128225e7 / 0.256e3 + 0.841225e6 / 0.1024e4 * t1605) * t1605
            tfunc[..., c] = (t1612 + t1613) * np.cos((6 * phi1 - 6 * phi2)) + (t1612 - t1613) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 113:
            t1626 = np.cos(phi)
            t1625 = t1626 ** 2
            t1629 = t1625 ** 2
            t1632 = t1629 ** 2
            t1630 = t1626 * t1629
            t1634 = t1630 ** 2
            t1635 = t1626 * t1634
            t1638 = t1626 * t1635 - 12 * t1625 + 27 * t1629 - 27 * t1632 + 12 * t1634 - 1
            t1637 = -6 * t1635 + 2 * (18 * t1625 - 18) * t1630 + 2 * (t1625 - t1632 + 3) * t1626
            t1627 = 6 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1637 + t1638) * np.cos((-t1627 + 12 * phi2)) + (-t1637 + t1638) * np.cos((t1627 + 12 * phi2)))

        if Bindx == 114:
            t1645 = np.sin(phi)
            t1642 = t1645 ** 2
            t1643 = t1642 ** 2
            t1639 = np.cos(phi)
            t1640 = t1639 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t1639 * t1643 ** 2 * (5 + (-70 + 161 * t1640) * t1640) * np.sin((7 * phi1)) * ((1 - t1639) ** (-0.1e1 / 0.2e1)) * ((1 + t1639) ** (-0.1e1 / 0.2e1))

        if Bindx == 115:
            t1660 = np.cos(phi)
            t1659 = t1660 ** 2
            t1663 = t1659 ** 2
            t1662 = t1660 * t1659
            t1665 = t1662 ** 2
            t1667 = t1663 ** 2
            t1664 = t1660 * t1663
            t1669 = t1664 ** 2
            t1671 = t1665 ** 2
            t1674 = 29 - 1044 * t1659 + 3745 * t1663 + 2016 * t1665 - 23121 * t1667 + 30772 * t1669 - 12397 * t1671
            t1673 = 4774 * t1662 - 21546 * t1664 + (40956 * t1665 - 31520 * t1667 + 4158 * t1669 + 3542 * t1671 - 364) * t1660
            t1661 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1673 + t1674) * np.sin((-t1661 + 6 * phi2)) + (t1673 - t1674) * np.sin((t1661 + 6 * phi2))) * ((1 - t1660) ** (-0.1e1 / 0.2e1)) * ((1 + t1660) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t1687 = np.cos(phi)
            t1686 = t1687 ** 2
            t1690 = t1686 ** 2
            t1689 = t1687 * t1686
            t1692 = t1689 ** 2
            t1694 = t1690 ** 2
            t1691 = t1687 * t1690
            t1696 = t1691 ** 2
            t1699 = -1 - 19 * t1686 + 6 * t1690 + 42 * t1692 - 21 * t1694 - 7 * t1696
            t1698 = 21 * t1689 - 42 * t1691 + (-6 * t1692 + 19 * t1694 + t1696 + 7) * t1687
            t1688 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.10626e5) * np.sqrt((1 - t1687)) * np.sqrt((1 + t1687)) * (-(t1698 + t1699) * np.sin((-t1688 + 12 * phi2)) + (t1698 - t1699) * np.sin((t1688 + 12 * phi2)))

        if Bindx == 117:
            t1700 = np.cos(phi)
            t1701 = t1700 ** 2
            t1702 = t1701 ** 2
            t1704 = t1702 ** 2
            t1703 = t1701 * t1702
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t1702 + 1135 * t1704 + 1 + (-900 + 161 * t1703) * t1703 + (-686 * t1704 - 46) * t1701) * np.cos((8 * phi1))

        if Bindx == 118:
            t1720 = np.cos(phi)
            t1719 = t1720 ** 2
            t1722 = t1720 * t1719
            t1723 = t1719 ** 2
            t1724 = t1720 * t1723
            t1725 = t1722 ** 2
            t1727 = t1723 ** 2
            t1729 = t1724 ** 2
            t1733 = 3332 * t1722 - 6888 * t1724 + (-408 * t1725 + 11452 * t1727 - 7084 * t1729 - 404) * t1720
            t1732 = 532 * t1719 - 5607 * t1723 - 20337 * t1727 + 5852 * t1729 - 19 + (17808 + 1771 * t1725) * t1725
            t1721 = 8 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * ((t1732 + t1733) * np.cos((-t1721 + 6 * phi2)) + (t1732 - t1733) * np.cos((t1721 + 6 * phi2)))

        if Bindx == 119:
            t1747 = np.cos(phi)
            t1746 = t1747 ** 2
            t1749 = t1747 * t1746
            t1750 = t1746 ** 2
            t1751 = t1747 * t1750
            t1752 = t1749 ** 2
            t1754 = t1750 ** 2
            t1756 = t1751 ** 2
            t1760 = -40 * t1749 + 48 * t1751 + 8 * (6 * t1752 - 5 * t1754 - t1756 - 1) * t1747
            t1759 = 26 * t1746 + 15 * t1750 + 15 * t1754 + 26 * t1756 + 1 + (-84 + t1752) * t1752
            t1748 = 8 * phi1
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.10626e5) * ((t1759 + t1760) * np.cos((-t1748 + 12 * phi2)) + (t1759 - t1760) * np.cos((t1748 + 12 * phi2)))

        if Bindx == 120:
            t1766 = np.sin(phi)
            t1762 = t1766 ** 2
            t1764 = t1766 * t1762 ** 2
            t1761 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t1761 * t1764 ** 2 * (23 * t1761 ** 2 - 3) * np.sin((9 * phi1)) * ((1 - t1761) ** (-0.1e1 / 0.2e1)) * ((1 + t1761) ** (-0.1e1 / 0.2e1))

        if Bindx == 121:
            t1781 = np.cos(phi)
            t1780 = t1781 ** 2
            t1784 = t1780 ** 2
            t1783 = t1781 * t1780
            t1786 = t1783 ** 2
            t1788 = t1784 ** 2
            t1785 = t1781 * t1784
            t1790 = t1785 ** 2
            t1792 = t1786 ** 2
            t1795 = 37 - 740 * t1780 + 3673 * t1784 - 5952 * t1786 + 1383 * t1788 + 3876 * t1790 - 2277 * t1792
            t1794 = -54 * t1783 - 3078 * t1785 + (9252 * t1786 - 9088 * t1788 + 2354 * t1790 + 506 * t1792 + 108) * t1781
            t1782 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.266e3) * (-(t1794 + t1795) * np.sin((-t1782 + 6 * phi2)) + (t1794 - t1795) * np.sin((t1782 + 6 * phi2))) * ((1 - t1781) ** (-0.1e1 / 0.2e1)) * ((1 + t1781) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t1808 = np.cos(phi)
            t1807 = t1808 ** 2
            t1811 = t1807 ** 2
            t1810 = t1808 * t1807
            t1813 = t1810 ** 2
            t1815 = t1811 ** 2
            t1812 = t1808 * t1811
            t1817 = t1812 ** 2
            t1820 = 1 + 35 * t1807 + 90 * t1811 - 42 * t1813 - 75 * t1815 - 9 * t1817
            t1819 = -75 * t1810 - 42 * t1812 + (90 * t1813 + 35 * t1815 + t1817 - 9) * t1808
            t1809 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.506e3) * np.sqrt((1 - t1808)) * np.sqrt((1 + t1808)) * (-(t1819 + t1820) * np.sin((-t1809 + 12 * phi2)) + (t1819 - t1820) * np.sin((t1809 + 12 * phi2)))

        if Bindx == 123:
            t1821 = np.cos(phi)
            t1822 = t1821 ** 2
            t1823 = t1822 ** 2
            t1825 = t1823 ** 2
            t1824 = t1822 * t1823
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t1823 + 235 * t1825 + 1 + (-240 + 23 * t1824) * t1824 + (-116 * t1825 - 28) * t1822) * np.cos((10 * phi1))

        if Bindx == 124:
            t1841 = np.cos(phi)
            t1840 = t1841 ** 2
            t1843 = t1841 * t1840
            t1844 = t1840 ** 2
            t1845 = t1841 * t1844
            t1846 = t1843 ** 2
            t1848 = t1844 ** 2
            t1850 = t1845 ** 2
            t1854 = 121 * t1843 - 366 * t1845 + (282 * t1846 + 85 * t1848 - 115 * t1850 - 7) * t1841
            t1853 = -50 * t1840 + 45 * t1844 - 441 * t1848 + 166 * t1850 + 5 + (252 + 23 * t1846) * t1846
            t1842 = 10 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.4389e4) * ((t1853 + t1854) * np.cos((-t1842 + 6 * phi2)) + (t1853 - t1854) * np.cos((t1842 + 6 * phi2)))

        if Bindx == 125:
            t1867 = np.cos(phi)
            t1866 = t1867 ** 2
            t1870 = t1866 ** 2
            t1873 = t1870 ** 2
            t1871 = t1867 * t1870
            t1875 = t1871 ** 2
            t1876 = t1867 * t1875
            t1879 = t1867 * t1876 - 44 * t1866 - 165 * t1870 + 165 * t1873 + 44 * t1875 - 1
            t1878 = -10 * t1876 + (-132 * t1866 + 132) * t1871 + (110 * t1866 - 110 * t1873 + 10) * t1867
            t1868 = 10 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.69e2) * ((t1878 + t1879) * np.cos((-t1868 + 12 * phi2)) + (-t1878 + t1879) * np.cos((t1868 + 12 * phi2)))

        if Bindx == 126:
            t1885 = np.sin(phi)
            t1881 = t1885 ** 2
            t1882 = t1885 * t1881
            t1883 = t1882 ** 2
            t1880 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t1880 * t1883 ** 2 * np.sin((11 * phi1)) * ((1 - t1880) ** (-0.1e1 / 0.2e1)) * ((1 + t1880) ** (-0.1e1 / 0.2e1))

        if Bindx == 127:
            t1899 = np.cos(phi)
            t1901 = t1899 ** 2
            t1903 = t1901 ** 2
            t1902 = t1899 * t1901
            t1905 = t1902 ** 2
            t1907 = t1903 ** 2
            t1904 = t1899 * t1903
            t1909 = t1904 ** 2
            t1911 = t1905 ** 2
            t1914 = -1 + 31 * t1903 - 72 * t1905 + 45 * t1907 + 8 * t1909 - 11 * t1911
            t1913 = -22 * t1902 + 18 * t1904 + (36 * t1905 - 56 * t1907 + 18 * t1909 + 2 * t1911 + 4) * t1899
            t1900 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.201894e6) * (-(t1913 + t1914) * np.sin((-t1900 + 6 * phi2)) + (t1913 - t1914) * np.sin((t1900 + 6 * phi2))) * ((1 - t1899) ** (-0.1e1 / 0.2e1)) * ((1 + t1899) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1927 = np.cos(phi)
            t1926 = t1927 ** 2
            t1930 = t1926 ** 2
            t1929 = t1927 * t1926
            t1932 = t1929 ** 2
            t1934 = t1930 ** 2
            t1931 = t1927 * t1930
            t1936 = t1931 ** 2
            t1939 = -1 - 55 * t1926 - 330 * t1930 - 462 * t1932 - 165 * t1934 - 11 * t1936
            t1938 = 165 * t1929 + 462 * t1931 + (330 * t1932 + 55 * t1934 + t1936 + 11) * t1927
            t1928 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6e1) * np.sqrt((1 - t1927)) * np.sqrt((1 + t1927)) * (-(t1938 + t1939) * np.sin((-t1928 + 12 * phi2)) + (t1938 - t1939) * np.sin((t1928 + 12 * phi2)))

        if Bindx == 129:
            t1940 = np.cos(phi)
            t1941 = t1940 ** 2
            t1947 = -6 * t1941
            t1942 = t1941 ** 2
            t1943 = t1941 * t1942
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t1947 + 1 + (-20 + t1943) * t1943 + (15 + (t1947 + 15) * t1942) * t1942)

        if Bindx == 130:
            t1960 = np.cos(phi)
            t1959 = t1960 ** 2
            t1963 = t1959 ** 2
            t1966 = t1963 ** 2
            t1964 = t1960 * t1963
            t1968 = t1964 ** 2
            t1969 = t1960 * t1968
            t1972 = t1960 * t1969 - 12 * t1959 + 27 * t1963 - 27 * t1966 + 12 * t1968 - 1
            t1971 = -6 * t1969 + 2 * (18 * t1959 - 18) * t1964 + 2 * (t1959 - t1966 + 3) * t1960
            t1961 = 12 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1971 + t1972) * np.cos((-t1961 + 6 * phi2)) + (-t1971 + t1972) * np.cos((t1961 + 6 * phi2)))

        if Bindx == 131:
            t1986 = np.cos(phi)
            t1985 = t1986 ** 2
            t1987 = t1986 * t1985
            t1988 = t1985 ** 2
            t1989 = t1986 * t1988
            t1990 = t1987 ** 2
            t1992 = t1988 ** 2
            t1994 = t1989 ** 2
            t1998 = -0.75e2 / 0.1024e4 * (t1994 + 1) * t1986 - 0.2475e4 / 0.512e3 * t1986 * t1990 - 0.2475e4 / 0.512e3 * t1989 - 0.1375e4 / 0.1024e4 * t1986 * t1992 - 0.1375e4 / 0.1024e4 * t1987
            t1997 = 0.25e2 / 0.4096e4 + 0.12375e5 / 0.4096e4 * t1992 + 0.12375e5 / 0.4096e4 * t1988 + 0.825e3 / 0.2048e4 * t1994 + 0.825e3 / 0.2048e4 * t1985 + (0.5775e4 / 0.1024e4 + 0.25e2 / 0.4096e4 * t1990) * t1990
            tfunc[..., c] = (t1997 + t1998) * np.cos((12 * phi1 - 12 * phi2)) + (t1997 - t1998) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 132:
            tfunc[..., c] = 0

        if Bindx == 133:
            tfunc[..., c] = 0

        if Bindx == 134:
            t2015 = np.cos(phi)
            t2014 = t2015 ** 2
            t2016 = t2015 * t2014
            t2017 = t2014 ** 2
            t2018 = t2015 * t2017
            t2019 = t2016 ** 2
            t2020 = t2015 * t2019
            t2021 = t2017 ** 2
            t2023 = t2018 ** 2
            t2025 = t2019 ** 2
            t2029 = -720 * t2016 + 4878 * t2018 - 14064 * t2020 + (19674 * t2021 - 13248 * t2023 + 3450 * t2025 + 30) * t2015
            t2028 = -7475 * t2020 ** 2 - 365 * t2014 + 4425 * t2017 - 20473 * t2019 + 45919 * t2021 - 53799 * t2023 + 31763 * t2025 + 5
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.7106e4) * ((t2028 + t2029) * np.sin((phi1 - 6 * phi2)) + (-t2028 + t2029) * np.sin((phi1 + 6 * phi2))) * ((1 - t2015) ** (-0.1e1 / 0.2e1)) * ((1 + t2015) ** (-0.1e1 / 0.2e1))

        if Bindx == 135:
            t2045 = np.cos(phi)
            t2044 = t2045 ** 2
            t2046 = t2045 * t2044
            t2047 = t2044 ** 2
            t2048 = t2045 * t2047
            t2049 = t2046 ** 2
            t2050 = t2045 * t2049
            t2051 = t2047 ** 2
            t2053 = t2048 ** 2
            t2055 = t2049 ** 2
            t2059 = 72 * t2046 - 180 * t2048 + 240 * t2050 + 12 * (-15 * t2051 + 6 * t2053 - t2055 - 1) * t2045
            t2058 = -13 * t2050 ** 2 - 19 * t2044 + 93 * t2047 - 215 * t2049 + 275 * t2051 - 201 * t2053 + 79 * t2055 + 1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.14858e5) * ((-t2058 + t2059) * np.sin((phi1 - 12 * phi2)) + (t2058 + t2059) * np.sin((phi1 + 12 * phi2))) * ((1 - t2045) ** (-0.1e1 / 0.2e1)) * ((1 + t2045) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t2074 = np.cos(phi)
            t2073 = t2074 ** 2
            t2077 = t2073 ** 2
            t2076 = t2074 * t2073
            t2079 = t2076 ** 2
            t2081 = t2077 ** 2
            t2078 = t2074 * t2077
            t2083 = t2078 ** 2
            t2085 = t2079 ** 2
            t2088 = -1 + 71 * t2073 - 790 * t2077 + 3142 * t2079 - 5573 * t2081 + 4531 * t2083 - 1380 * t2085
            t2087 = 214 * t2076 - 1493 * t2078 + (4588 * t2079 - 7003 * t2081 + 5198 * t2083 - 1495 * t2085 - 9) * t2074
            t2075 = 2 * phi1
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.35530e5) * ((-t2087 + t2088) * np.cos((-t2075 + 6 * phi2)) + (t2087 + t2088) * np.cos((t2075 + 6 * phi2)))

        if Bindx == 137:
            t2103 = np.cos(phi)
            t2102 = t2103 ** 2
            t2106 = t2102 ** 2
            t2105 = t2103 * t2102
            t2108 = t2105 ** 2
            t2110 = t2106 ** 2
            t2107 = t2103 * t2106
            t2112 = t2107 ** 2
            t2114 = t2108 ** 2
            t2117 = -2 + 34 * t2102 - 140 * t2106 + 260 * t2108 - 250 * t2110 + 122 * t2112 - 24 * t2114
            t2116 = -32 * t2105 + 25 * t2107 + (40 * t2108 - 85 * t2110 + 56 * t2112 - 13 * t2114 + 9) * t2103
            t2104 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.74290e5) * ((-t2116 + t2117) * np.cos((-t2104 + 12 * phi2)) + (t2116 + t2117) * np.cos((t2104 + 12 * phi2)))

        if Bindx == 138:
            t2133 = np.cos(phi)
            t2132 = t2133 ** 2
            t2136 = t2132 ** 2
            t2135 = t2133 * t2132
            t2138 = t2135 ** 2
            t2139 = t2133 * t2138
            t2140 = t2136 ** 2
            t2137 = t2133 * t2136
            t2142 = t2137 ** 2
            t2144 = t2138 ** 2
            t2148 = -16445 * t2139 ** 2 - 207 * t2132 + 2939 * t2136 - 17743 * t2138 + 52529 * t2140 - 79013 * t2142 + 57937 * t2144 + 3
            t2147 = 4444 * t2135 - 29390 * t2137 + 84680 * t2139 + (-120766 * t2140 + 83996 * t2142 - 22770 * t2144 - 194) * t2133
            t2134 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.3230e4) * (-(t2147 - t2148) * np.sin((-t2134 + 6 * phi2)) + (t2147 + t2148) * np.sin((t2134 + 6 * phi2))) * ((1 + t2133) ** (-0.1e1 / 0.2e1)) * ((1 - t2133) ** (-0.1e1 / 0.2e1))

        if Bindx == 139:
            t2164 = np.cos(phi)
            t2163 = t2164 ** 2
            t2166 = t2164 * t2163
            t2167 = t2163 ** 2
            t2168 = t2164 * t2167
            t2169 = t2166 ** 2
            t2170 = t2164 * t2169
            t2171 = t2167 ** 2
            t2173 = t2168 ** 2
            t2175 = t2169 ** 2
            t2179 = -16 * t2166 + 140 * t2168 - 320 * t2170 + (340 * t2171 - 176 * t2173 + 36 * t2175 - 4) * t2164
            t2178 = -13 * t2170 ** 2 + 45 * t2163 - 167 * t2167 + 265 * t2169 - 185 * t2171 + 23 * t2173 + 35 * t2175 - 3
            t2165 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.817190e6) * (-(t2178 + t2179) * np.sin((-t2165 + 12 * phi2)) + (-t2178 + t2179) * np.sin((t2165 + 12 * phi2))) * ((1 + t2164) ** (-0.1e1 / 0.2e1)) * ((1 - t2164) ** (-0.1e1 / 0.2e1))

        if Bindx == 140:
            t2194 = np.cos(phi)
            t2193 = t2194 ** 2
            t2196 = t2194 * t2193
            t2197 = t2193 ** 2
            t2198 = t2194 * t2197
            t2199 = t2196 ** 2
            t2201 = t2197 ** 2
            t2203 = t2198 ** 2
            t2205 = t2199 ** 2
            t2208 = 7280 * t2196 - 27661 * t2198 + (-1480 * t2199 + 136345 * t2201 - 196328 * t2203 + 82225 * t2205 - 381) * t2194
            t2207 = 6890 * t2193 - 73180 * t2197 + 291124 * t2199 - 536930 * t2201 + 464002 * t2203 - 151800 * t2205 - 106
            t2195 = 4 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * ((t2207 + t2208) * np.cos((-t2195 + 6 * phi2)) + (t2207 - t2208) * np.cos((t2195 + 6 * phi2)))

        if Bindx == 141:
            t2223 = np.cos(phi)
            t2222 = t2223 ** 2
            t2226 = t2222 ** 2
            t2225 = t2223 * t2222
            t2228 = t2225 ** 2
            t2230 = t2226 ** 2
            t2227 = t2223 * t2226
            t2232 = t2227 ** 2
            t2234 = t2228 ** 2
            t2237 = 4 - 44 * t2222 + 88 * t2226 + 8 * t2228 - 172 * t2230 + 164 * t2232 - 48 * t2234
            t2236 = -74 * t2225 + 253 * t2227 + (-332 * t2228 + 173 * t2230 - 10 * t2232 - 13 * t2234 + 3) * t2223
            t2224 = 4 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * ((-t2236 + t2237) * np.cos((-t2224 + 12 * phi2)) + (t2236 + t2237) * np.cos((t2224 + 12 * phi2)))

        if Bindx == 142:
            t2253 = np.cos(phi)
            t2252 = t2253 ** 2
            t2256 = t2252 ** 2
            t2255 = t2253 * t2252
            t2258 = t2255 ** 2
            t2259 = t2253 * t2258
            t2260 = t2256 ** 2
            t2257 = t2253 * t2256
            t2262 = t2257 ** 2
            t2264 = t2258 ** 2
            t2268 = 82225 * t2259 ** 2 - 6893 * t2252 + 63345 * t2256 - 196005 * t2258 + 221115 * t2260 + 6369 * t2262 - 170269 * t2264 + 113
            t2267 = 26140 * t2255 - 175642 * t2257 + 542952 * t2259 + (-845090 * t2260 + 642620 * t2262 - 189750 * t2264 - 1230) * t2253
            t2254 = 5 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.38e2) * (-(t2267 + t2268) * np.sin((-t2254 + 6 * phi2)) + (t2267 - t2268) * np.sin((t2254 + 6 * phi2))) * ((1 + t2253) ** (-0.1e1 / 0.2e1)) * ((1 - t2253) ** (-0.1e1 / 0.2e1))

        if Bindx == 143:
            t2284 = np.cos(phi)
            t2283 = t2284 ** 2
            t2286 = t2284 * t2283
            t2287 = t2283 ** 2
            t2288 = t2284 * t2287
            t2289 = t2286 ** 2
            t2290 = t2284 * t2289
            t2291 = t2287 ** 2
            t2293 = t2288 ** 2
            t2295 = t2289 ** 2
            t2299 = -128 * t2286 + 332 * t2288 - 288 * t2290 + (-28 * t2291 + 160 * t2293 - 60 * t2295 + 12) * t2284
            t2298 = -13 * t2290 ** 2 - 35 * t2283 - 15 * t2287 + 297 * t2289 - 513 * t2291 + 327 * t2293 - 53 * t2295 + 5
            t2285 = 5 * phi1
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.9614e4) * (-(-t2298 + t2299) * np.sin((-t2285 + 12 * phi2)) + (t2298 + t2299) * np.sin((t2285 + 12 * phi2))) * ((1 + t2284) ** (-0.1e1 / 0.2e1)) * ((1 - t2284) ** (-0.1e1 / 0.2e1))

        if Bindx == 144:
            t2314 = np.cos(phi)
            t2313 = t2314 ** 2
            t2316 = t2313 ** 2
            t2315 = t2314 * t2313
            t2318 = t2315 ** 2
            t2320 = t2316 ** 2
            t2317 = t2314 * t2316
            t2322 = t2317 ** 2
            t2324 = t2318 ** 2
            t2327 = -0.102465e6 / 0.1024e4 * t2313 + 0.657045e6 / 0.512e3 * t2316 - 0.3475629e7 / 0.512e3 * t2318 + 0.16073235e8 / 0.1024e4 * t2320 - 0.16469541e8 / 0.1024e4 * t2322 + 0.1536975e7 / 0.256e3 * t2324 + 0.1863e4 / 0.1024e4
            t2326 = -0.611145e6 / 0.512e3 * t2315 + 0.5875983e7 / 0.1024e4 * t2317 + (-0.2772225e7 / 0.256e3 * t2318 + 0.7301745e7 / 0.1024e4 * t2320 + 0.635283e6 / 0.512e3 * t2322 - 0.2220075e7 / 0.1024e4 * t2324 + 0.69147e5 / 0.1024e4) * t2314
            tfunc[..., c] = (t2326 + t2327) * np.cos((6 * phi1 - 6 * phi2)) + (-t2326 + t2327) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 145:
            t2342 = np.cos(phi)
            t2341 = t2342 ** 2
            t2345 = t2341 ** 2
            t2344 = t2342 * t2341
            t2347 = t2344 ** 2
            t2349 = t2345 ** 2
            t2346 = t2342 * t2345
            t2351 = t2346 ** 2
            t2353 = t2347 ** 2
            t2356 = -6 + 6 * t2341 + 188 * t2345 - 468 * t2347 + 306 * t2349 + 46 * t2351 - 72 * t2353
            t2355 = 144 * t2344 - 135 * t2346 + (-216 * t2347 + 363 * t2349 - 120 * t2351 - 13 * t2353 - 23) * t2342
            t2343 = 6 * phi1
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((-t2355 + t2356) * np.cos((-t2343 + 12 * phi2)) + (t2355 + t2356) * np.cos((t2343 + 12 * phi2)))

        if Bindx == 146:
            t2372 = np.cos(phi)
            t2371 = t2372 ** 2
            t2374 = t2372 * t2371
            t2375 = t2371 ** 2
            t2376 = t2372 * t2375
            t2377 = t2374 ** 2
            t2378 = t2372 * t2377
            t2379 = t2375 ** 2
            t2381 = t2376 ** 2
            t2383 = t2377 ** 2
            t2387 = -2632 * t2374 - 4046 * t2376 + 65664 * t2378 + (-161938 * t2379 + 155848 * t2381 - 53130 * t2383 + 234) * t2372
            t2386 = 16445 * t2378 ** 2 - 4165 * t2371 + 35553 * t2375 - 120057 * t2377 + 183327 * t2379 - 112959 * t2381 + 1771 * t2383 + 85
            t2373 = 7 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.35e2) * (-(t2386 + t2387) * np.sin((-t2373 + 6 * phi2)) + (-t2386 + t2387) * np.sin((t2373 + 6 * phi2))) * ((1 + t2372) ** (-0.1e1 / 0.2e1)) * ((1 - t2372) ** (-0.1e1 / 0.2e1))

        if Bindx == 147:
            t2403 = np.cos(phi)
            t2402 = t2403 ** 2
            t2405 = t2403 * t2402
            t2406 = t2402 ** 2
            t2407 = t2403 * t2406
            t2408 = t2405 ** 2
            t2409 = t2403 * t2408
            t2410 = t2406 ** 2
            t2412 = t2407 ** 2
            t2414 = t2408 ** 2
            t2418 = -136 * t2405 - 116 * t2407 + 720 * t2409 + (-644 * t2410 + 56 * t2412 + 84 * t2414 + 36) * t2403
            t2417 = -13 * t2409 ** 2 - 35 * t2402 + 357 * t2406 - 567 * t2408 + 27 * t2410 + 423 * t2412 - 185 * t2414 - 7
            t2404 = 7 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-(t2417 + t2418) * np.sin((-t2404 + 12 * phi2)) + (-t2417 + t2418) * np.sin((t2404 + 12 * phi2))) * ((1 + t2403) ** (-0.1e1 / 0.2e1)) * ((1 - t2403) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t2433 = np.cos(phi)
            t2432 = t2433 ** 2
            t2436 = t2432 ** 2
            t2435 = t2433 * t2432
            t2438 = t2435 ** 2
            t2440 = t2436 ** 2
            t2437 = t2433 * t2436
            t2442 = t2437 ** 2
            t2444 = t2438 ** 2
            t2447 = 5084 * t2432 - 24904 * t2436 + 20568 * t2438 + 69204 * t2440 - 130548 * t2442 + 60720 * t2444 - 124
            t2446 = 15864 * t2435 - 84537 * t2437 + (185544 * t2438 - 164659 * t2440 + 32384 * t2442 + 16445 * t2444 - 1041) * t2433
            t2434 = 8 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.10e2) * ((-t2446 + t2447) * np.cos((-t2434 + 6 * phi2)) + (t2446 + t2447) * np.cos((t2434 + 6 * phi2)))

        if Bindx == 149:
            t2462 = np.cos(phi)
            t2461 = t2462 ** 2
            t2465 = t2461 ** 2
            t2464 = t2462 * t2461
            t2467 = t2464 ** 2
            t2469 = t2465 ** 2
            t2466 = t2462 * t2465
            t2471 = t2466 ** 2
            t2473 = t2467 ** 2
            t2476 = -8 - 104 * t2461 + 400 * t2465 + 48 * t2467 - 744 * t2469 + 312 * t2471 + 96 * t2473
            t2475 = -18 * t2464 - 579 * t2466 + (708 * t2467 + 125 * t2469 - 274 * t2471 - 13 * t2473 + 51) * t2462
            t2463 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.2530e4) * ((t2475 + t2476) * np.cos((-t2463 + 12 * phi2)) + (-t2475 + t2476) * np.cos((t2463 + 12 * phi2)))

        if Bindx == 150:
            t2492 = np.cos(phi)
            t2491 = t2492 ** 2
            t2494 = t2492 * t2491
            t2495 = t2491 ** 2
            t2496 = t2492 * t2495
            t2497 = t2494 ** 2
            t2498 = t2492 * t2497
            t2499 = t2495 ** 2
            t2501 = t2496 ** 2
            t2503 = t2497 ** 2
            t2507 = 14936 * t2494 - 48274 * t2496 + 47136 * t2498 + (28866 * t2499 - 72312 * t2501 + 31050 * t2503 - 1402) * t2492
            t2506 = -7475 * t2498 ** 2 + 891 * t2491 - 17631 * t2495 + 83799 * t2497 - 155601 * t2499 + 118561 * t2501 - 22517 * t2503 - 27
            t2493 = 9 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.11e2) * (-(t2506 + t2507) * np.sin((-t2493 + 6 * phi2)) + (-t2506 + t2507) * np.sin((t2493 + 6 * phi2))) * ((1 + t2492) ** (-0.1e1 / 0.2e1)) * ((1 - t2492) ** (-0.1e1 / 0.2e1))

        if Bindx == 151:
            t2523 = np.cos(phi)
            t2522 = t2523 ** 2
            t2525 = t2523 * t2522
            t2526 = t2522 ** 2
            t2527 = t2523 * t2526
            t2528 = t2525 ** 2
            t2529 = t2523 * t2528
            t2530 = t2526 ** 2
            t2532 = t2527 ** 2
            t2534 = t2528 ** 2
            t2538 = 152 * t2525 - 1012 * t2527 + 528 * t2529 + (924 * t2530 - 552 * t2532 - 108 * t2534 + 68) * t2523
            t2537 = -13 * t2529 ** 2 + 189 * t2522 - 363 * t2526 - 759 * t2528 + 1419 * t2530 - 121 * t2532 - 361 * t2534 + 9
            t2524 = 9 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.23e2) * (-(-t2537 + t2538) * np.sin((-t2524 + 12 * phi2)) + (t2537 + t2538) * np.sin((t2524 + 12 * phi2))) * ((1 - t2523) ** (-0.1e1 / 0.2e1)) * ((1 + t2523) ** (-0.1e1 / 0.2e1))

        if Bindx == 152:
            t2553 = np.cos(phi)
            t2552 = t2553 ** 2
            t2556 = t2552 ** 2
            t2555 = t2553 * t2552
            t2558 = t2555 ** 2
            t2560 = t2556 ** 2
            t2557 = t2553 * t2556
            t2562 = t2557 ** 2
            t2564 = t2558 ** 2
            t2567 = 17 - 391 * t2552 + 2246 * t2556 - 4182 * t2558 + 1605 * t2560 + 2205 * t2562 - 1500 * t2564
            t2566 = 210 * t2555 + 1377 * t2557 + (-5436 * t2558 + 5951 * t2560 - 1702 * t2562 - 325 * t2564 - 75) * t2553
            t2554 = 10 * phi1
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.253e3) * ((-t2566 + t2567) * np.cos((-t2554 + 6 * phi2)) + (t2566 + t2567) * np.cos((t2554 + 6 * phi2)))

        if Bindx == 153:
            t2582 = np.cos(phi)
            t2581 = t2582 ** 2
            t2585 = t2581 ** 2
            t2584 = t2582 * t2581
            t2587 = t2584 ** 2
            t2589 = t2585 ** 2
            t2586 = t2582 * t2585
            t2591 = t2586 ** 2
            t2593 = t2587 ** 2
            t2596 = -0.20925e5 / 0.1024e4 * t2581 - 0.7425e4 / 0.512e3 * t2585 + 0.57915e5 / 0.512e3 * t2587 - 0.4455e4 / 0.1024e4 * t2589 - 0.66825e5 / 0.1024e4 * t2591 - 0.2025e4 / 0.256e3 * t2593 - 0.675e3 / 0.1024e4
            t2595 = -0.4455e4 / 0.128e3 * t2584 + 0.111375e6 / 0.2048e4 * t2586 + (0.22275e5 / 0.256e3 * t2587 - 0.141075e6 / 0.2048e4 * t2589 - 0.7965e4 / 0.256e3 * t2591 - 0.1755e4 / 0.2048e4 * t2593 - 0.11745e5 / 0.2048e4) * t2582
            t2583 = 10 * phi1
            tfunc[..., c] = (-t2595 + t2596) * np.cos((-t2583 + 12 * phi2)) + (t2595 + t2596) * np.cos((t2583 + 12 * phi2))

        if Bindx == 154:
            t2612 = np.cos(phi)
            t2611 = t2612 ** 2
            t2614 = t2612 * t2611
            t2615 = t2611 ** 2
            t2616 = t2612 * t2615
            t2617 = t2614 ** 2
            t2618 = t2612 * t2617
            t2619 = t2615 ** 2
            t2621 = t2616 ** 2
            t2623 = t2617 ** 2
            t2627 = -1532 * t2614 + 6626 * t2616 - 9576 * t2618 + (3482 * t2619 + 2596 * t2621 - 1650 * t2623 + 54) * t2612
            t2626 = -325 * t2618 ** 2 - 767 * t2611 + 1707 * t2615 + 2025 * t2617 - 9207 * t2619 + 8667 * t2621 - 2159 * t2623 + 59
            t2613 = 11 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.506e3) * (-(-t2626 + t2627) * np.sin((-t2613 + 6 * phi2)) + (t2626 + t2627) * np.sin((t2613 + 6 * phi2))) * ((1 + t2612) ** (-0.1e1 / 0.2e1)) * ((1 - t2612) ** (-0.1e1 / 0.2e1))

        if Bindx == 155:
            t2643 = np.cos(phi)
            t2642 = t2643 ** 2
            t2645 = t2643 * t2642
            t2646 = t2642 ** 2
            t2647 = t2643 * t2646
            t2648 = t2645 ** 2
            t2649 = t2643 * t2648
            t2650 = t2646 ** 2
            t2652 = t2647 ** 2
            t2654 = t2648 ** 2
            t2658 = -992 * t2645 + 308 * t2647 + 3168 * t2649 + (-836 * t2650 - 1408 * t2652 - 132 * t2654 - 108) * t2643
            t2657 = -13 * t2649 ** 2 - 451 * t2642 - 1023 * t2646 + 2409 * t2648 + 1551 * t2650 - 1881 * t2652 - 581 * t2654 - 11
            t2644 = 11 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * (-(-t2657 + t2658) * np.sin((-t2644 + 12 * phi2)) + (t2657 + t2658) * np.sin((t2644 + 12 * phi2))) * ((1 - t2643) ** (-0.1e1 / 0.2e1)) * ((1 + t2643) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t2673 = np.cos(phi)
            t2672 = t2673 ** 2
            t2676 = t2672 ** 2
            t2675 = t2673 * t2672
            t2678 = t2675 ** 2
            t2680 = t2676 ** 2
            t2677 = t2673 * t2676
            t2682 = t2677 ** 2
            t2684 = t2678 ** 2
            t2687 = 6 - 6 * t2672 - 188 * t2676 + 468 * t2678 - 306 * t2680 - 46 * t2682 + 72 * t2684
            t2686 = 144 * t2675 - 135 * t2677 + (-216 * t2678 + 363 * t2680 - 120 * t2682 - 13 * t2684 - 23) * t2673
            t2674 = 12 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2686 + t2687) * np.cos((-t2674 + 6 * phi2)) + (-t2686 + t2687) * np.cos((t2674 + 6 * phi2)))

        if Bindx == 157:
            t2702 = np.cos(phi)
            t2701 = t2702 ** 2
            t2704 = t2701 ** 2
            t2703 = t2702 * t2701
            t2706 = t2703 ** 2
            t2708 = t2704 ** 2
            t2705 = t2702 * t2704
            t2710 = t2705 ** 2
            t2712 = t2706 ** 2
            t2715 = -0.4293e4 / 0.1024e4 * t2701 - 0.10395e5 / 0.512e3 * t2704 - 0.2673e4 / 0.512e3 * t2706 + 0.29403e5 / 0.1024e4 * t2708 + 0.13959e5 / 0.1024e4 * t2710 + 0.243e3 / 0.256e3 * t2712 - 0.81e2 / 0.1024e4
            t2714 = 0.24057e5 / 0.2048e4 * t2703 + 0.82863e5 / 0.4096e4 * t2705 + (-0.16929e5 / 0.1024e4 * t2706 - 0.102465e6 / 0.4096e4 * t2708 - 0.9639e4 / 0.2048e4 * t2710 - 0.351e3 / 0.4096e4 * t2712 + 0.3537e4 / 0.4096e4) * t2702
            tfunc[..., c] = (t2714 + t2715) * np.cos((12 * phi1 - 12 * phi2)) + (-t2714 + t2715) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 158:
            t2728 = np.cos(phi)
            t2727 = t2728 ** 2
            t2731 = t2727 ** 2
            t2734 = t2731 ** 2
            t2732 = t2728 * t2731
            t2736 = t2732 ** 2
            t2737 = t2728 * t2736
            t2740 = -t2728 * t2737 + 12 * t2727 - 27 * t2731 + 27 * t2734 - 12 * t2736 + 1
            t2739 = -6 * t2737 + 2 * (18 * t2727 - 18) * t2732 + 2 * (t2727 - t2734 + 3) * t2728
            t2729 = 13 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.6578e4) * np.sqrt((1 - t2728)) * np.sqrt((1 + t2728)) * (-(t2739 - t2740) * np.sin((-t2729 + 6 * phi2)) + (t2739 + t2740) * np.sin((t2729 + 6 * phi2)))

        if Bindx == 159:
            t2755 = np.cos(phi)
            t2754 = t2755 ** 2
            t2757 = t2755 * t2754
            t2758 = t2754 ** 2
            t2759 = t2755 * t2758
            t2761 = t2758 ** 2
            t2763 = t2759 ** 2
            t2760 = t2757 ** 2
            t2765 = t2760 ** 2
            t2766 = t2755 * t2765
            t2769 = 208 * t2757 + 572 * t2759 - 12 * t2766 + (-572 * t2761 - 208 * t2763 + 12) * t2755
            t2768 = -t2755 * t2766 + 65 * t2754 + 429 * t2758 + 429 * t2760 - 429 * t2761 - 429 * t2763 - 65 * t2765 + 1
            t2756 = 13 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.26e2) * (-(-t2768 + t2769) * np.sin((-t2756 + 12 * phi2)) + (t2768 + t2769) * np.sin((t2756 + 12 * phi2))) * ((1 + t2755) ** (-0.1e1 / 0.2e1)) * ((1 - t2755) ** (-0.1e1 / 0.2e1))

        if Bindx == 160:
            t2770 = np.cos(phi)
            t2771 = t2770 ** 2
            t2772 = t2771 ** 2
            t2773 = t2771 * t2772
            t2776 = t2773 ** 2
            t2774 = t2772 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t2776 - 0.421936515e9 / 0.2048e4 * t2774 + 0.140645505e9 / 0.2048e4 * t2773 - 0.22207185e8 / 0.2048e4 * t2772 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t2776 + 0.646969323e9 / 0.2048e4 * t2774 + 0.1306305e7 / 0.2048e4) * t2771

        if Bindx == 161:
            t2778 = np.cos(phi)
            t2779 = t2778 ** 2
            t2780 = t2779 ** 2
            t2781 = t2779 * t2780
            t2784 = t2781 ** 2
            t2782 = t2780 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.3233230e7) * (-1221 * t2780 + 6371 * t2781 - 15747 * t2782 - 12535 * t2784 - 1 + (19941 * t2782 + 3105 * t2784 + 87) * t2779) * np.cos((6 * phi2))

        if Bindx == 162:
            t2786 = np.cos(phi)
            t2787 = t2786 ** 2
            t2788 = t2787 ** 2
            t2789 = t2787 * t2788
            t2792 = t2789 ** 2
            t2790 = t2788 ** 2
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.52003e5) * (-177 * t2788 + 425 * t2789 - 555 * t2790 - 163 * t2792 - 1 + (411 * t2790 + 27 * t2792 + 33) * t2787) * np.cos((12 * phi2))

        if Bindx == 163:
            t2795 = np.cos(phi)
            t2796 = t2795 ** 2
            t2797 = t2796 ** 2
            t2799 = t2797 ** 2
            t2798 = t2796 * t2797
            t2794 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t2795 * t2794 ** 2 * (138567 * t2797 + 1062347 * t2799 + 429 + (-554268 + 334305 * t2798) * t2798 + (-965770 * t2799 - 14586) * t2796) * np.sin(phi1) * ((1 + t2795) ** (-0.1e1 / 0.2e1)) * ((1 - t2795) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t2818 = np.cos(phi)
            t2817 = t2818 ** 2
            t2820 = t2817 ** 2
            t2819 = t2818 * t2817
            t2822 = t2819 ** 2
            t2824 = t2820 ** 2
            t2821 = t2818 * t2820
            t2826 = t2821 ** 2
            t2828 = t2822 ** 2
            t2823 = t2818 * t2822
            t2830 = t2823 ** 2
            t2833 = 1 - 87 * t2817 + 1221 * t2820 - 6371 * t2822 + 15747 * t2824 - 19941 * t2826 + 12535 * t2828 - 3105 * t2830
            t2832 = 843 * t2819 - 7185 * t2821 + 27367 * t2823 + (-54231 * t2824 + 58305 * t2826 - 32315 * t2828 + 7245 * t2830 - 29) * t2818
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.138567e6) * ((t2832 + t2833) * np.sin((phi1 - 6 * phi2)) + (t2832 - t2833) * np.sin((phi1 + 6 * phi2))) * ((1 + t2818) ** (-0.1e1 / 0.2e1)) * ((1 - t2818) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t2850 = np.cos(phi)
            t2849 = t2850 ** 2
            t2852 = t2849 ** 2
            t2851 = t2850 * t2849
            t2854 = t2851 ** 2
            t2856 = t2852 ** 2
            t2853 = t2850 * t2852
            t2858 = t2853 ** 2
            t2860 = t2854 ** 2
            t2855 = t2850 * t2854
            t2862 = t2855 ** 2
            t2865 = 2 - 66 * t2849 + 354 * t2852 - 850 * t2854 + 1110 * t2856 - 822 * t2858 + 326 * t2860 - 54 * t2862
            t2864 = 129 * t2851 - 543 * t2853 + 1165 * t2855 + (-1425 * t2856 + 1011 * t2858 - 389 * t2860 + 63 * t2862 - 11) * t2850
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.222870e6) * ((t2864 + t2865) * np.sin((phi1 - 12 * phi2)) + (t2864 - t2865) * np.sin((phi1 + 12 * phi2))) * ((1 + t2850) ** (-0.1e1 / 0.2e1)) * ((1 - t2850) ** (-0.1e1 / 0.2e1))

        if Bindx == 166:
            t2866 = np.cos(phi)
            t2867 = t2866 ** 2
            t2868 = t2867 ** 2
            t2869 = t2867 * t2868
            t2872 = t2869 ** 2
            t2870 = t2868 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t2868 + 351747 * t2869 - 1033923 * t2870 - 1151495 * t2872 - 33 + (1552661 * t2870 + 334305 * t2872 + 3399) * t2867) * np.cos((2 * phi1))

        if Bindx == 167:
            t2889 = np.cos(phi)
            t2888 = t2889 ** 2
            t2891 = t2889 * t2888
            t2892 = t2888 ** 2
            t2893 = t2889 * t2892
            t2894 = t2891 ** 2
            t2895 = t2889 * t2894
            t2896 = t2892 ** 2
            t2898 = t2893 ** 2
            t2900 = t2894 ** 2
            t2904 = -9596 * t2891 + 74182 * t2893 - 241480 * t2895 + (377798 * t2896 - 281980 * t2898 + 80730 * t2900 + 346) * t2889
            t2903 = 94185 * t2895 ** 2 + 1955 * t2888 - 27487 * t2892 + 147411 * t2894 - 383021 * t2896 + 518305 * t2898 - 351325 * t2900 - 23
            t2890 = 2 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.10659e5) * ((t2903 - t2904) * np.cos((-t2890 + 6 * phi2)) + (t2903 + t2904) * np.cos((t2890 + 6 * phi2)))

        if Bindx == 168:
            t2920 = np.cos(phi)
            t2919 = t2920 ** 2
            t2923 = t2919 ** 2
            t2922 = t2920 * t2919
            t2925 = t2922 ** 2
            t2926 = t2920 * t2925
            t2927 = t2923 ** 2
            t2924 = t2920 * t2923
            t2929 = t2924 ** 2
            t2931 = t2925 ** 2
            t2935 = 63 * t2926 ** 2 - 31 * t2919 + 77 * t2923 + 45 * t2925 - 365 * t2927 + 499 * t2929 - 289 * t2931 + 1
            t2934 = 208 * t2922 - 740 * t2924 + 1280 * t2926 + (-1180 * t2927 + 560 * t2929 - 108 * t2931 - 20) * t2920
            t2921 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.2897310e7) * ((t2934 + t2935) * np.cos((-t2921 + 12 * phi2)) + (-t2934 + t2935) * np.cos((t2921 + 12 * phi2)))

        if Bindx == 169:
            t2944 = np.sin(phi)
            t2942 = t2944 ** 2
            t2936 = np.cos(phi)
            t2937 = t2936 ** 2
            t2938 = t2937 ** 2
            t2940 = t2938 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t2936 * t2942 ** 2 * (-26334 * t2938 - 120175 * t2940 - 99 + (86526 * t2938 + 58995 * t2940 + 3135) * t2937) * np.sin((3 * phi1)) * ((1 - t2936) ** (-0.1e1 / 0.2e1)) * ((1 + t2936) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t2961 = np.cos(phi)
            t2960 = t2961 ** 2
            t2964 = t2960 ** 2
            t2963 = t2961 * t2960
            t2966 = t2963 ** 2
            t2968 = t2964 ** 2
            t2965 = t2961 * t2964
            t2970 = t2965 ** 2
            t2972 = t2966 ** 2
            t2967 = t2961 * t2966
            t2974 = t2967 ** 2
            t2977 = 10043 * t2960 - 136357 * t2964 + 699343 * t2966 - 1726427 * t2968 + 2214049 * t2970 - 1423815 * t2972 + 363285 * t2974 - 121
            t2976 = 13093 * t2963 - 123587 * t2965 + 551233 * t2967 + (-1303597 * t2968 + 1667615 * t2970 - 1086865 * t2972 + 282555 * t2974 - 447) * t2961
            t2962 = 3 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.209e3) * (-(t2976 - t2977) * np.sin((-t2962 + 6 * phi2)) + (t2976 + t2977) * np.sin((t2962 + 6 * phi2))) * ((1 - t2961) ** (-0.1e1 / 0.2e1)) * ((1 + t2961) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t2994 = np.cos(phi)
            t2993 = t2994 ** 2
            t2997 = t2993 ** 2
            t2996 = t2994 * t2993
            t2999 = t2996 ** 2
            t3001 = t2997 ** 2
            t2998 = t2994 * t2997
            t3003 = t2998 ** 2
            t3005 = t2999 ** 2
            t3000 = t2994 * t2999
            t3007 = t3000 ** 2
            t3010 = 2 - 58 * t2993 + 746 * t2997 - 2930 * t2999 + 5350 * t3001 - 5102 * t3003 + 2478 * t3005 - 486 * t3007
            t3009 = -701 * t2996 + 2191 * t2998 - 3065 * t3000 + (1745 * t3001 + 185 * t3003 - 619 * t3005 + 189 * t3007 + 75) * t2994
            t2995 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.56810e5) * (-(t3009 + t3010) * np.sin((-t2995 + 12 * phi2)) + (t3009 - t3010) * np.sin((t2995 + 12 * phi2))) * ((1 - t2994) ** (-0.1e1 / 0.2e1)) * ((1 + t2994) ** (-0.1e1 / 0.2e1))

        if Bindx == 172:
            t3011 = np.cos(phi)
            t3012 = t3011 ** 2
            t3013 = t3012 ** 2
            t3014 = t3012 * t3013
            t3017 = t3014 ** 2
            t3015 = t3013 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t3013 + 8873 * t3014 - 24491 * t3015 - 24035 * t3017 - 1 + (34523 * t3015 + 6555 * t3017 + 97) * t3012) * np.cos((4 * phi1))

        if Bindx == 173:
            t3034 = np.cos(phi)
            t3033 = t3034 ** 2
            t3037 = t3033 ** 2
            t3036 = t3034 * t3033
            t3039 = t3036 ** 2
            t3040 = t3034 * t3039
            t3041 = t3037 ** 2
            t3038 = t3034 * t3037
            t3043 = t3038 ** 2
            t3045 = t3039 ** 2
            t3049 = 345345 * t3040 ** 2 - 2449 * t3033 + 21251 * t3037 - 2509 * t3039 - 338899 * t3041 + 947485 * t3043 - 970255 * t3045 + 31
            t3048 = 64624 * t3036 - 483996 * t3038 + 1573504 * t3040 + (-2522916 * t3041 + 1963280 * t3043 - 592020 * t3045 - 2476) * t3034
            t3035 = 4 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.38e2) * ((t3048 + t3049) * np.cos((-t3035 + 6 * phi2)) + (-t3048 + t3049) * np.cos((t3035 + 6 * phi2)))

        if Bindx == 174:
            t3065 = np.cos(phi)
            t3064 = t3065 ** 2
            t3067 = t3065 * t3064
            t3068 = t3064 ** 2
            t3069 = t3065 * t3068
            t3070 = t3067 ** 2
            t3071 = t3065 * t3070
            t3072 = t3068 ** 2
            t3074 = t3069 ** 2
            t3076 = t3070 ** 2
            t3080 = -48 * t3067 + 40 * t3069 + 160 * t3071 + (-360 * t3072 + 272 * t3074 - 72 * t3076 + 8) * t3065
            t3079 = 21 * t3071 ** 2 - 25 * t3064 + 169 * t3068 - 425 * t3070 + 475 * t3072 - 211 * t3074 - 5 * t3076 + 1
            t3066 = 4 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.312455e6) * ((t3079 + t3080) * np.cos((-t3066 + 12 * phi2)) + (t3079 - t3080) * np.cos((t3066 + 12 * phi2)))

        if Bindx == 175:
            t3089 = np.sin(phi)
            t3086 = t3089 ** 2
            t3087 = t3089 * t3086
            t3081 = np.cos(phi)
            t3082 = t3081 ** 2
            t3083 = t3082 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t3081 * t3087 ** 2 * (-140 * t3082 + 5 + (-2300 * t3082 + 966 + 1725 * t3083) * t3083) * np.sin((5 * phi1)) * ((1 - t3081) ** (-0.1e1 / 0.2e1)) * ((1 + t3081) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t3106 = np.cos(phi)
            t3105 = t3106 ** 2
            t3109 = t3105 ** 2
            t3108 = t3106 * t3105
            t3111 = t3108 ** 2
            t3113 = t3109 ** 2
            t3110 = t3106 * t3109
            t3115 = t3110 ** 2
            t3117 = t3111 ** 2
            t3112 = t3106 * t3111
            t3119 = t3112 ** 2
            t3122 = 17175 * t3105 - 222785 * t3109 + 1148347 * t3111 - 2946015 * t3113 + 3989557 * t3115 - 2726075 * t3117 + 740025 * t3119 - 229
            t3121 = -46785 * t3108 + 291903 * t3110 - 673485 * t3112 + (430705 * t3113 + 554829 * t3115 - 904475 * t3117 + 345345 * t3119 + 1963) * t3106
            t3107 = 5 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.5e1) * (-(t3121 - t3122) * np.sin((-t3107 + 6 * phi2)) + (t3121 + t3122) * np.sin((t3107 + 6 * phi2))) * ((1 - t3106) ** (-0.1e1 / 0.2e1)) * ((1 + t3106) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t3139 = np.cos(phi)
            t3138 = t3139 ** 2
            t3142 = t3138 ** 2
            t3141 = t3139 * t3138
            t3144 = t3141 ** 2
            t3146 = t3142 ** 2
            t3143 = t3139 * t3142
            t3148 = t3143 ** 2
            t3150 = t3144 ** 2
            t3145 = t3139 * t3144
            t3152 = t3145 ** 2
            t3155 = -2 + 42 * t3138 - 218 * t3142 + 402 * t3144 - 198 * t3146 - 226 * t3148 + 290 * t3150 - 90 * t3152
            t3154 = -5 * t3141 + 207 * t3143 - 657 * t3145 + (833 * t3146 - 447 * t3148 + 53 * t3150 + 21 * t3152 - 5) * t3139
            t3140 = 5 * phi1
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.6578e4) * (-(t3154 + t3155) * np.sin((-t3140 + 12 * phi2)) + (t3154 - t3155) * np.sin((t3140 + 12 * phi2))) * ((1 - t3139) ** (-0.1e1 / 0.2e1)) * ((1 + t3139) ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t3156 = np.cos(phi)
            t3157 = t3156 ** 2
            t3158 = t3157 ** 2
            t3159 = t3157 * t3158
            t3162 = t3159 ** 2
            t3160 = t3158 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t3158 + 6371 * t3159 - 15747 * t3160 - 12535 * t3162 - 1 + (19941 * t3160 + 3105 * t3162 + 87) * t3157) * np.cos((6 * phi1))

        if Bindx == 179:
            t3179 = np.cos(phi)
            t3178 = t3179 ** 2
            t3180 = t3179 * t3178
            t3181 = t3178 ** 2
            t3182 = t3179 * t3181
            t3183 = t3180 ** 2
            t3184 = t3179 * t3183
            t3185 = t3181 ** 2
            t3187 = t3182 ** 2
            t3189 = t3183 ** 2
            t3193 = 0.3773857e7 / 0.4096e4 * t3180 - 0.60502149e8 / 0.8192e4 * t3182 + 0.55660599e8 / 0.2048e4 * t3184 + (-0.403806469e9 / 0.8192e4 * t3185 + 0.175097505e9 / 0.4096e4 * t3187 - 0.115887915e9 / 0.8192e4 * t3189 - 0.307371e6 / 0.8192e4) * t3179
            t3192 = 0.90135045e8 / 0.16384e5 * t3184 ** 2 - 0.6677337e7 / 0.16384e5 * t3178 + 0.70342893e8 / 0.16384e5 * t3181 - 0.257721753e9 / 0.16384e5 * t3183 + 0.386829927e9 / 0.16384e5 * t3185 - 0.167833875e9 / 0.16384e5 * t3187 - 0.114934105e9 / 0.16384e5 * t3189 + 0.96773e5 / 0.16384e5
            tfunc[..., c] = (t3192 + t3193) * np.cos((6 * phi1 - 6 * phi2)) + (t3192 - t3193) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 180:
            t3209 = np.cos(phi)
            t3208 = t3209 ** 2
            t3211 = t3209 * t3208
            t3212 = t3208 ** 2
            t3213 = t3209 * t3212
            t3214 = t3211 ** 2
            t3215 = t3209 * t3214
            t3216 = t3212 ** 2
            t3218 = t3213 ** 2
            t3220 = t3214 ** 2
            t3224 = -752 * t3211 + 3708 * t3213 - 5760 * t3215 + (2372 * t3216 + 1392 * t3218 - 972 * t3220 + 12) * t3209
            t3223 = 189 * t3215 ** 2 + 435 * t3208 - 1161 * t3212 - 729 * t3214 + 5049 * t3216 - 5079 * t3218 + 1325 * t3220 - 29
            t3210 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3223 + t3224) * np.cos((-t3210 + 12 * phi2)) + (t3223 - t3224) * np.cos((t3210 + 12 * phi2)))

        if Bindx == 181:
            t3232 = np.sin(phi)
            t3229 = t3232 ** 2
            t3230 = t3229 ** 2
            t3225 = np.cos(phi)
            t3226 = t3225 ** 2
            t3227 = t3226 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t3225 * t3230 ** 2 * (-805 * t3227 - 7 + (1035 * t3227 + 161) * t3226) * np.sin((7 * phi1)) * ((1 - t3225) ** (-0.1e1 / 0.2e1)) * ((1 + t3225) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t3249 = np.cos(phi)
            t3248 = t3249 ** 2
            t3252 = t3248 ** 2
            t3251 = t3249 * t3248
            t3254 = t3251 ** 2
            t3256 = t3252 ** 2
            t3253 = t3249 * t3252
            t3258 = t3253 ** 2
            t3260 = t3254 ** 2
            t3255 = t3249 * t3254
            t3262 = t3255 ** 2
            t3265 = -441 * t3248 + 28259 * t3252 - 297549 * t3254 + 1106901 * t3256 - 1871947 * t3258 + 1478785 * t3260 - 444015 * t3262 + 7
            t3264 = -70861 * t3251 + 437535 * t3253 - 1183569 * t3255 + (1497881 * t3256 - 717255 * t3258 - 115115 * t3260 + 148005 * t3262 + 3379) * t3249
            t3250 = 7 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.42e2) * (-(t3264 + t3265) * np.sin((-t3250 + 6 * phi2)) + (t3264 - t3265) * np.sin((t3250 + 6 * phi2))) * ((1 - t3249) ** (-0.1e1 / 0.2e1)) * ((1 + t3249) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t3282 = np.cos(phi)
            t3281 = t3282 ** 2
            t3285 = t3281 ** 2
            t3284 = t3282 * t3281
            t3287 = t3284 ** 2
            t3289 = t3285 ** 2
            t3286 = t3282 * t3285
            t3291 = t3286 ** 2
            t3293 = t3287 ** 2
            t3288 = t3282 * t3287
            t3295 = t3288 ** 2
            t3298 = 2 - 18 * t3281 - 14 * t3285 + 270 * t3287 - 522 * t3289 + 314 * t3291 + 22 * t3293 - 54 * t3295
            t3297 = 71 * t3284 - 225 * t3286 + 171 * t3288 + (193 * t3289 - 315 * t3291 + 101 * t3293 + 9 * t3295 - 5) * t3282
            t3283 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.345345e6) * (-(t3297 + t3298) * np.sin((-t3283 + 12 * phi2)) + (t3297 - t3298) * np.sin((t3283 + 12 * phi2))) * ((1 - t3282) ** (-0.1e1 / 0.2e1)) * ((1 + t3282) ** (-0.1e1 / 0.2e1))

        if Bindx == 184:
            t3299 = np.cos(phi)
            t3300 = t3299 ** 2
            t3301 = t3300 ** 2
            t3302 = t3300 * t3301
            t3305 = t3302 ** 2
            t3303 = t3301 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t3301 + 3753 * t3302 - 7867 * t3303 - 4715 * t3305 - 1 + (8579 * t3303 + 1035 * t3305 + 73) * t3300) * np.cos((8 * phi1))

        if Bindx == 185:
            t3322 = np.cos(phi)
            t3321 = t3322 ** 2
            t3324 = t3322 * t3321
            t3325 = t3321 ** 2
            t3326 = t3322 * t3325
            t3327 = t3324 ** 2
            t3328 = t3322 * t3327
            t3329 = t3325 ** 2
            t3331 = t3326 ** 2
            t3333 = t3327 ** 2
            t3337 = -26848 * t3324 + 59784 * t3326 + 165120 * t3328 + (-719624 * t3329 + 842720 * t3331 - 322920 * t3333 + 1768) * t3322
            t3336 = 94185 * t3328 ** 2 - 17105 * t3321 + 164979 * t3325 - 631173 * t3327 + 1090533 * t3329 - 783955 * t3331 + 82225 * t3333 + 311
            t3323 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.33e2) * ((t3336 + t3337) * np.cos((-t3323 + 6 * phi2)) + (t3336 - t3337) * np.cos((t3323 + 6 * phi2)))

        if Bindx == 186:
            t3353 = np.cos(phi)
            t3352 = t3353 ** 2
            t3355 = t3353 * t3352
            t3356 = t3352 ** 2
            t3357 = t3353 * t3356
            t3358 = t3355 ** 2
            t3359 = t3353 * t3358
            t3360 = t3356 ** 2
            t3362 = t3357 ** 2
            t3364 = t3358 ** 2
            t3368 = 608 * t3355 - 528 * t3357 - 2112 * t3359 + (3344 * t3360 - 800 * t3362 - 432 * t3364 - 80) * t3353
            t3367 = 63 * t3359 ** 2 - 19 * t3352 - 957 * t3356 + 2805 * t3358 - 1551 * t3360 - 1441 * t3362 + 1081 * t3364 + 19
            t3354 = 8 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.8970e4) * ((t3367 + t3368) * np.cos((-t3354 + 12 * phi2)) + (t3367 - t3368) * np.cos((t3354 + 12 * phi2)))

        if Bindx == 187:
            t3376 = np.sin(phi)
            t3372 = t3376 ** 2
            t3374 = t3376 * t3372 ** 2
            t3369 = np.cos(phi)
            t3370 = t3369 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t3369 * t3374 ** 2 * (3 + (-50 + 135 * t3370) * t3370) * np.sin((9 * phi1)) * ((1 - t3369) ** (-0.1e1 / 0.2e1)) * ((1 + t3369) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t3393 = np.cos(phi)
            t3392 = t3393 ** 2
            t3396 = t3392 ** 2
            t3395 = t3393 * t3392
            t3398 = t3395 ** 2
            t3400 = t3396 ** 2
            t3397 = t3393 * t3396
            t3402 = t3397 ** 2
            t3404 = t3398 ** 2
            t3399 = t3393 * t3398
            t3406 = t3399 ** 2
            t3409 = 3713 * t3392 - 25099 * t3396 + 53301 * t3398 - 5037 * t3400 - 114909 * t3402 + 135495 * t3404 - 47385 * t3406 - 79
            t3408 = -8613 * t3395 + 60183 * t3397 - 183753 * t3399 + (264289 * t3400 - 165455 * t3402 + 20605 * t3404 + 12285 * t3406 + 459) * t3393
            t3394 = 9 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.506e3) * (-(t3408 + t3409) * np.sin((-t3394 + 6 * phi2)) + (t3408 - t3409) * np.sin((t3394 + 6 * phi2))) * ((1 - t3393) ** (-0.1e1 / 0.2e1)) * ((1 + t3393) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t3426 = np.cos(phi)
            t3425 = t3426 ** 2
            t3429 = t3425 ** 2
            t3428 = t3426 * t3425
            t3431 = t3428 ** 2
            t3433 = t3429 ** 2
            t3430 = t3426 * t3429
            t3435 = t3430 ** 2
            t3437 = t3431 ** 2
            t3432 = t3426 * t3431
            t3439 = t3432 ** 2
            t3442 = -74 - 518 * t3425 + 5542 * t3429 - 8646 * t3431 - 4686 * t3433 + 14718 * t3435 - 4878 * t3437 - 1458 * t3439
            t3441 = -1677 * t3428 - 3333 * t3430 + 16071 * t3432 + (-12859 * t3433 - 3127 * t3435 + 4313 * t3437 + 189 * t3439 + 423) * t3426
            t3427 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.65e2) * (-(t3441 + t3442) * np.sin((-t3427 + 12 * phi2)) + (t3441 - t3442) * np.sin((t3427 + 12 * phi2))) * ((1 - t3426) ** (-0.1e1 / 0.2e1)) * ((1 + t3426) ** (-0.1e1 / 0.2e1))

        if Bindx == 190:
            t3443 = np.cos(phi)
            t3444 = t3443 ** 2
            t3445 = t3444 ** 2
            t3446 = t3444 * t3445
            t3449 = t3446 ** 2
            t3447 = t3445 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t3445 + 1635 * t3446 - 2755 * t3447 - 1175 * t3449 - 1 + (2501 * t3447 + 225 * t3449 + 55) * t3444) * np.cos((10 * phi1))

        if Bindx == 191:
            t3466 = np.cos(phi)
            t3465 = t3466 ** 2
            t3468 = t3466 * t3465
            t3469 = t3465 ** 2
            t3470 = t3466 * t3469
            t3471 = t3468 ** 2
            t3472 = t3466 * t3471
            t3473 = t3469 ** 2
            t3475 = t3470 ** 2
            t3477 = t3471 ** 2
            t3481 = -7532 * t3468 + 27822 * t3470 - 34152 * t3472 + (-5714 * t3473 + 36500 * t3475 - 17550 * t3477 + 626) * t3466
            t3480 = 4095 * t3472 ** 2 + 37 * t3465 + 6039 * t3469 - 38331 * t3471 + 81477 * t3473 - 68201 * t3475 + 14885 * t3477 - 1
            t3467 = 10 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.3795e4) * ((t3480 + t3481) * np.cos((-t3467 + 6 * phi2)) + (t3480 - t3481) * np.cos((t3467 + 6 * phi2)))

        if Bindx == 192:
            t3497 = np.cos(phi)
            t3496 = t3497 ** 2
            t3499 = t3497 * t3496
            t3500 = t3496 ** 2
            t3501 = t3497 * t3500
            t3502 = t3499 ** 2
            t3503 = t3497 * t3502
            t3504 = t3500 ** 2
            t3506 = t3501 ** 2
            t3508 = t3502 ** 2
            t3512 = 80 * t3499 - 3828 * t3501 + 4224 * t3503 + (3124 * t3504 - 3280 * t3506 - 540 * t3508 + 220) * t3497
            t3511 = 63 * t3503 ** 2 - 527 * t3496 + 2013 * t3500 + 1485 * t3502 - 6765 * t3504 + 1859 * t3506 + 1903 * t3508 - 31
            t3498 = 10 * phi1
            tfunc[..., c] = -0.145e3 / 0.16384e5 * np.sqrt(0.78e2) * ((t3511 + t3512) * np.cos((-t3498 + 12 * phi2)) + (t3511 - t3512) * np.cos((t3498 + 12 * phi2)))

        if Bindx == 193:
            t3518 = np.sin(phi)
            t3514 = t3518 ** 2
            t3515 = t3518 * t3514
            t3516 = t3515 ** 2
            t3513 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t3513 * t3516 ** 2 * (9 * t3513 ** 2 - 1) * np.sin((11 * phi1)) * ((1 - t3513) ** (-0.1e1 / 0.2e1)) * ((1 + t3513) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t3535 = np.cos(phi)
            t3534 = t3535 ** 2
            t3538 = t3534 ** 2
            t3537 = t3535 * t3534
            t3540 = t3537 ** 2
            t3542 = t3538 ** 2
            t3539 = t3535 * t3538
            t3544 = t3539 ** 2
            t3546 = t3540 ** 2
            t3541 = t3535 * t3540
            t3548 = t3541 ** 2
            t3551 = -31 + 837 * t3534 - 6131 * t3538 + 16497 * t3540 - 16749 * t3542 + 671 * t3544 + 8767 * t3546 - 3861 * t3548
            t3550 = 1037 * t3537 + 1341 * t3539 - 14679 * t3541 + (27667 * t3542 - 19881 * t3544 + 3887 * t3546 + 819 * t3548 - 191) * t3535
            t3536 = 11 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.3795e4) * (-(t3550 + t3551) * np.sin((-t3536 + 6 * phi2)) + (t3550 - t3551) * np.sin((t3536 + 6 * phi2))) * ((1 - t3535) ** (-0.1e1 / 0.2e1)) * ((1 + t3535) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t3568 = np.cos(phi)
            t3567 = t3568 ** 2
            t3571 = t3567 ** 2
            t3570 = t3568 * t3567
            t3573 = t3570 ** 2
            t3575 = t3571 ** 2
            t3572 = t3568 * t3571
            t3577 = t3572 ** 2
            t3579 = t3573 ** 2
            t3574 = t3568 * t3573
            t3581 = t3574 ** 2
            t3584 = 38 + 1026 * t3567 - 1394 * t3571 - 7062 * t3573 + 10098 * t3575 + 2662 * t3577 - 4774 * t3579 - 594 * t3581
            t3583 = -1199 * t3570 + 6237 * t3572 - 627 * t3574 + (-10637 * t3575 + 4131 * t3577 + 2351 * t3579 + 63 * t3581 - 319) * t3568
            t3569 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.78e2) * (-(t3583 + t3584) * np.sin((-t3569 + 12 * phi2)) + (t3583 - t3584) * np.sin((t3569 + 12 * phi2))) * ((1 - t3568) ** (-0.1e1 / 0.2e1)) * ((1 + t3568) ** (-0.1e1 / 0.2e1))

        if Bindx == 196:
            t3585 = np.cos(phi)
            t3586 = t3585 ** 2
            t3587 = t3586 ** 2
            t3588 = t3586 * t3587
            t3591 = t3588 ** 2
            t3589 = t3587 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t3587 + 425 * t3588 - 555 * t3589 - 163 * t3591 - 1 + (411 * t3589 + 27 * t3591 + 33) * t3586) * np.cos((12 * phi1))

        if Bindx == 197:
            t3608 = np.cos(phi)
            t3607 = t3608 ** 2
            t3610 = t3608 * t3607
            t3611 = t3607 ** 2
            t3612 = t3608 * t3611
            t3613 = t3610 ** 2
            t3614 = t3608 * t3613
            t3615 = t3611 ** 2
            t3617 = t3612 ** 2
            t3619 = t3613 ** 2
            t3623 = -752 * t3610 + 3708 * t3612 - 5760 * t3614 + (2372 * t3615 + 1392 * t3617 - 972 * t3619 + 12) * t3608
            t3622 = 189 * t3614 ** 2 + 435 * t3607 - 1161 * t3611 - 729 * t3613 + 5049 * t3615 - 5079 * t3617 + 1325 * t3619 - 29
            t3609 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3622 + t3623) * np.cos((-t3609 + 6 * phi2)) + (t3622 - t3623) * np.cos((t3609 + 6 * phi2)))

        if Bindx == 198:
            t3639 = np.cos(phi)
            t3638 = t3639 ** 2
            t3640 = t3639 * t3638
            t3641 = t3638 ** 2
            t3642 = t3639 * t3641
            t3643 = t3640 ** 2
            t3644 = t3639 * t3643
            t3645 = t3641 ** 2
            t3647 = t3642 ** 2
            t3649 = t3643 ** 2
            t3653 = -0.19981e5 / 0.512e3 * t3640 + 0.37323e5 / 0.1024e4 * t3642 + 0.37323e5 / 0.256e3 * t3644 + (-0.70499e5 / 0.1024e4 * t3645 - 0.39585e5 / 0.512e3 * t3647 - 0.7047e4 / 0.1024e4 * t3649 - 0.4785e4 / 0.1024e4) * t3639
            t3652 = 0.5481e4 / 0.8192e4 * t3644 ** 2 + 0.154947e6 / 0.8192e4 * t3638 + 0.261261e6 / 0.8192e4 * t3641 - 0.1057485e7 / 0.8192e4 * t3643 - 0.410553e6 / 0.8192e4 * t3645 + 0.908193e6 / 0.8192e4 * t3647 + 0.252967e6 / 0.8192e4 * t3649 + 0.3973e4 / 0.8192e4
            tfunc[..., c] = (t3652 + t3653) * np.cos((12 * phi1 - 12 * phi2)) + (t3652 - t3653) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 199:
            t3660 = np.sin(phi)
            t3655 = t3660 ** 2
            t3656 = t3660 * t3655
            t3658 = t3660 * t3656 ** 2
            t3654 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t3654 * t3658 ** 2 * np.sin((13 * phi1)) * ((1 - t3654) ** (-0.1e1 / 0.2e1)) * ((1 + t3654) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t3677 = np.cos(phi)
            t3676 = t3677 ** 2
            t3680 = t3676 ** 2
            t3679 = t3677 * t3676
            t3682 = t3679 ** 2
            t3684 = t3680 ** 2
            t3681 = t3677 * t3680
            t3686 = t3681 ** 2
            t3688 = t3682 ** 2
            t3683 = t3677 * t3682
            t3690 = t3683 ** 2
            t3693 = 3 - 9 * t3676 - 89 * t3680 + 347 * t3682 - 423 * t3684 + 149 * t3686 + 61 * t3688 - 39 * t3690
            t3692 = 89 * t3679 - 159 * t3681 - 27 * t3683 + (303 * t3684 - 261 * t3686 + 59 * t3688 + 7 * t3690 - 11) * t3677
            t3678 = 13 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.49335e5) * (-(t3692 + t3693) * np.sin((-t3678 + 6 * phi2)) + (t3692 - t3693) * np.sin((t3678 + 6 * phi2))) * ((1 - t3677) ** (-0.1e1 / 0.2e1)) * ((1 + t3677) ** (-0.1e1 / 0.2e1))

        if Bindx == 201:
            t3710 = np.cos(phi)
            t3709 = t3710 ** 2
            t3713 = t3709 ** 2
            t3712 = t3710 * t3709
            t3715 = t3712 ** 2
            t3717 = t3713 ** 2
            t3714 = t3710 * t3713
            t3719 = t3714 ** 2
            t3721 = t3715 ** 2
            t3716 = t3710 * t3715
            t3723 = t3716 ** 2
            t3726 = -6 - 306 * t3709 - 1118 * t3713 + 1430 * t3715 + 2574 * t3717 - 1430 * t3719 - 1066 * t3721 - 78 * t3723
            t3725 = 793 * t3712 + 429 * t3714 - 3003 * t3716 + (-429 * t3717 + 1755 * t3719 + 383 * t3721 + 7 * t3723 + 65) * t3710
            t3711 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.6e1) * (-(t3725 + t3726) * np.sin((-t3711 + 12 * phi2)) + (t3725 - t3726) * np.sin((t3711 + 12 * phi2))) * ((1 - t3710) ** (-0.1e1 / 0.2e1)) * ((1 + t3710) ** (-0.1e1 / 0.2e1))

        if Bindx == 202:
            t3727 = np.cos(phi)
            t3728 = t3727 ** 2
            t3729 = t3728 ** 2
            t3730 = t3728 * t3729
            t3733 = t3730 ** 2
            t3731 = t3729 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t3729 + 35 * t3730 - 35 * t3731 - 7 * t3733 - 1 + (21 * t3731 + t3733 + 7) * t3728)

        if Bindx == 203:
            t3750 = np.cos(phi)
            t3766 = -6 * t3750
            t3749 = t3750 ** 2
            t3752 = t3750 * t3749
            t3753 = t3749 ** 2
            t3754 = t3750 * t3753
            t3755 = t3752 ** 2
            t3756 = t3750 * t3755
            t3757 = t3753 ** 2
            t3759 = t3754 ** 2
            t3761 = t3755 ** 2
            t3765 = t3761 * t3766 + 4 * t3752 + 38 * t3754 - 72 * t3756 + t3766 + (38 * t3757 + 4 * t3759) * t3750
            t3764 = t3756 ** 2 + 11 * t3749 - 39 * t3753 + 27 * t3755 + 27 * t3757 - 39 * t3759 + 11 * t3761 + 1
            t3751 = 14 * phi1
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.345345e6) * ((t3764 + t3765) * np.cos((-t3751 + 6 * phi2)) + (t3764 - t3765) * np.cos((t3751 + 6 * phi2)))

        if Bindx == 204:
            t3781 = np.cos(phi)
            t3780 = t3781 ** 2
            t3783 = t3781 * t3780
            t3784 = t3780 ** 2
            t3785 = t3781 * t3784
            t3787 = t3784 ** 2
            t3789 = t3785 ** 2
            t3786 = t3783 ** 2
            t3791 = t3786 ** 2
            t3792 = t3781 * t3791
            t3795 = 208 * t3783 + 572 * t3785 - 12 * t3792 + (-572 * t3787 - 208 * t3789 + 12) * t3781
            t3794 = t3781 * t3792 - 65 * t3780 - 429 * t3784 - 429 * t3786 + 429 * t3787 + 429 * t3789 + 65 * t3791 - 1
            t3782 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.42e2) * ((t3794 + t3795) * np.cos((-t3782 + 12 * phi2)) + (t3794 - t3795) * np.cos((t3782 + 12 * phi2)))

        if Bindx == 205:
            tfunc[..., c] = 0

        if Bindx == 206:
            tfunc[..., c] = 0

        if Bindx == 207:
            t3813 = np.cos(phi)
            t3812 = t3813 ** 2
            t3814 = t3813 * t3812
            t3815 = t3812 ** 2
            t3816 = t3813 * t3815
            t3817 = t3814 ** 2
            t3818 = t3813 * t3817
            t3819 = t3815 ** 2
            t3821 = t3816 ** 2
            t3823 = t3817 ** 2
            t3825 = t3818 ** 2
            t3829 = -1414 * t3814 + 13650 * t3816 - 57726 * t3818 + (124798 * t3819 - 144210 * t3821 + 84870 * t3823 - 20010 * t3825 + 42) * t3813
            t3828 = 714 * t3812 - 12082 * t3815 + 78722 * t3817 + 451582 * t3821 - 448270 * t3823 + 233910 * t3825 - 7 + (-254544 - 50025 * t3819) * t3819
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.92378e5) * ((-t3828 + t3829) * np.sin((phi1 - 6 * phi2)) + (t3828 + t3829) * np.sin((phi1 + 6 * phi2))) * ((1 - t3813) ** (-0.1e1 / 0.2e1)) * ((1 + t3813) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t3847 = np.cos(phi)
            t3846 = t3847 ** 2
            t3848 = t3847 * t3846
            t3849 = t3846 ** 2
            t3850 = t3847 * t3849
            t3851 = t3848 ** 2
            t3852 = t3847 * t3851
            t3853 = t3849 ** 2
            t3855 = t3850 ** 2
            t3857 = t3851 ** 2
            t3859 = t3852 ** 2
            t3863 = -188 * t3848 + 876 * t3850 - 1980 * t3852 + (2500 * t3853 - 1812 * t3855 + 708 * t3857 - 116 * t3859 + 12) * t3847
            t3862 = 48 * t3846 - 412 * t3849 + 1520 * t3851 + 3536 * t3855 - 2428 * t3857 + 912 * t3859 - 1 + (-3030 - 145 * t3853) * t3853
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.780045e6) * ((-t3862 + t3863) * np.sin((phi1 - 12 * phi2)) + (t3862 + t3863) * np.sin((phi1 + 12 * phi2))) * ((1 + t3847) ** (-0.1e1 / 0.2e1)) * ((1 - t3847) ** (-0.1e1 / 0.2e1))

        if Bindx == 209:
            t3880 = np.cos(phi)
            t3879 = t3880 ** 2
            t3883 = t3879 ** 2
            t3882 = t3880 * t3879
            t3885 = t3882 ** 2
            t3887 = t3883 ** 2
            t3884 = t3880 * t3883
            t3889 = t3884 ** 2
            t3891 = t3885 ** 2
            t3886 = t3880 * t3885
            t3893 = t3886 ** 2
            t3896 = -600 * t3879 + 9554 * t3883 - 55972 * t3885 + 153962 * t3887 - 215280 * t3889 + 148350 * t3891 - 40020 * t3893 + 6
            t3895 = 2763 * t3882 - 26851 * t3884 + 116355 * t3886 + (-261809 * t3887 + 318665 * t3889 - 199065 * t3891 + 50025 * t3893 - 83) * t3880
            t3881 = 2 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.19019e5) * ((t3895 + t3896) * np.cos((-t3881 + 6 * phi2)) + (-t3895 + t3896) * np.cos((t3881 + 6 * phi2)))

        if Bindx == 210:
            t3913 = np.cos(phi)
            t3912 = t3913 ** 2
            t3915 = t3913 * t3912
            t3916 = t3912 ** 2
            t3917 = t3913 * t3916
            t3918 = t3915 ** 2
            t3919 = t3913 * t3918
            t3920 = t3916 ** 2
            t3922 = t3917 ** 2
            t3924 = t3918 ** 2
            t3926 = t3919 ** 2
            t3929 = 279 * t3915 - 5 * t3917 - 3285 * t3919 + (8485 * t3920 - 9355 * t3922 + 4921 * t3924 - 1015 * t3926 - 25) * t3913
            t3928 = 12 - 552 * t3912 + 4204 * t3916 - 13160 * t3918 + 21220 * t3920 - 18712 * t3922 + 8612 * t3924 - 1624 * t3926
            t3914 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t3928 - t3929) * np.cos((-t3914 + 12 * phi2)) + (t3928 + t3929) * np.cos((t3914 + 12 * phi2)))

        if Bindx == 211:
            t3947 = np.cos(phi)
            t3946 = t3947 ** 2
            t3949 = t3947 * t3946
            t3950 = t3946 ** 2
            t3951 = t3947 * t3950
            t3952 = t3949 ** 2
            t3953 = t3947 * t3952
            t3954 = t3950 ** 2
            t3956 = t3951 ** 2
            t3958 = t3952 ** 2
            t3960 = t3953 ** 2
            t3964 = -54794 * t3949 + 516046 * t3951 - 2153714 * t3953 + (4647426 * t3954 - 5414430 * t3956 + 3238170 * t3958 - 780390 * t3960 + 1686) * t3947
            t3963 = 4606 * t3946 - 79694 * t3950 + 559206 * t3952 + 4046298 * t3956 - 4565730 * t3958 + 2699970 * t3960 - 47 + (-2014284 - 650325 * t3954) * t3954
            t3948 = 3 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2926e4) * (-(-t3963 + t3964) * np.sin((-t3948 + 6 * phi2)) + (t3963 + t3964) * np.sin((t3948 + 6 * phi2))) * ((1 - t3947) ** (-0.1e1 / 0.2e1)) * ((1 + t3947) ** (-0.1e1 / 0.2e1))

        if Bindx == 212:
            t3982 = np.cos(phi)
            t3981 = t3982 ** 2
            t3984 = t3982 * t3981
            t3985 = t3981 ** 2
            t3986 = t3982 * t3985
            t3987 = t3984 ** 2
            t3988 = t3982 * t3987
            t3989 = t3985 ** 2
            t3991 = t3986 ** 2
            t3993 = t3987 ** 2
            t3995 = t3988 ** 2
            t3999 = 1036 * t3984 - 6716 * t3986 + 20140 * t3988 + (-32020 * t3989 + 28100 * t3991 - 12916 * t3993 + 2436 * t3995 - 60) * t3982
            t3998 = -572 * t3981 + 3904 * t3985 - 10380 * t3987 - 4788 * t3991 - 3448 * t3993 + 3836 * t3995 + 13 + (12450 - 1015 * t3989) * t3989
            t3983 = 3 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.85215e5) * (-(t3998 + t3999) * np.sin((-t3983 + 12 * phi2)) + (-t3998 + t3999) * np.sin((t3983 + 12 * phi2))) * ((1 + t3982) ** (-0.1e1 / 0.2e1)) * ((1 - t3982) ** (-0.1e1 / 0.2e1))

        if Bindx == 213:
            t4016 = np.cos(phi)
            t4015 = t4016 ** 2
            t4018 = t4016 * t4015
            t4019 = t4015 ** 2
            t4020 = t4016 * t4019
            t4021 = t4018 ** 2
            t4022 = t4016 * t4021
            t4023 = t4019 ** 2
            t4025 = t4020 ** 2
            t4027 = t4021 ** 2
            t4029 = t4022 ** 2
            t4032 = 1509 * t4018 + 23089 * t4020 - 336111 * t4022 + (1383519 * t4023 - 2498145 * t4025 + 2076555 * t4027 - 650325 * t4029 - 91) * t4016
            t4031 = -15416 * t4015 + 234884 * t4019 - 1344056 * t4021 + 3687084 * t4023 - 5235720 * t4025 + 3713580 * t4027 - 1040520 * t4029 + 164
            t4017 = 4 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.462e3) * ((t4031 - t4032) * np.cos((-t4017 + 6 * phi2)) + (t4031 + t4032) * np.cos((t4017 + 6 * phi2)))

        if Bindx == 214:
            t4049 = np.cos(phi)
            t4048 = t4049 ** 2
            t4052 = t4048 ** 2
            t4051 = t4049 * t4048
            t4054 = t4051 ** 2
            t4056 = t4052 ** 2
            t4053 = t4049 * t4052
            t4058 = t4053 ** 2
            t4060 = t4054 ** 2
            t4055 = t4049 * t4054
            t4062 = t4055 ** 2
            t4065 = -8 + 320 * t4048 - 872 * t4052 - 2800 * t4054 + 13800 * t4056 - 20512 * t4058 + 13320 * t4060 - 3248 * t4062
            t4064 = 2091 * t4051 - 9815 * t4053 + 20355 * t4055 + (-19805 * t4056 + 7241 * t4058 + 1099 * t4060 - 1015 * t4062 - 151) * t4049
            t4050 = 4 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.1495e4) * ((-t4064 + t4065) * np.cos((-t4050 + 12 * phi2)) + (t4064 + t4065) * np.cos((t4050 + 12 * phi2)))

        if Bindx == 215:
            t4083 = np.cos(phi)
            t4082 = t4083 ** 2
            t4085 = t4083 * t4082
            t4086 = t4082 ** 2
            t4087 = t4083 * t4086
            t4088 = t4085 ** 2
            t4089 = t4083 * t4088
            t4090 = t4086 ** 2
            t4092 = t4087 ** 2
            t4094 = t4088 ** 2
            t4096 = t4089 ** 2
            t4100 = 179930 * t4085 - 1640574 * t4087 + 6840290 * t4089 + (-15081330 * t4090 + 18193230 * t4092 - 11347050 * t4094 + 2861430 * t4096 - 5926) * t4083
            t4099 = -19350 * t4082 + 258470 * t4086 - 1137694 * t4088 + 596574 * t4092 - 4440150 * t4094 + 4440150 * t4096 + 215 + (1732500 - 1430715 * t4090) * t4090
            t4084 = 5 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.210e3) * (-(t4099 + t4100) * np.sin((-t4084 + 6 * phi2)) + (-t4099 + t4100) * np.sin((t4084 + 6 * phi2))) * ((1 - t4083) ** (-0.1e1 / 0.2e1)) * ((1 + t4083) ** (-0.1e1 / 0.2e1))

        if Bindx == 216:
            t4118 = np.cos(phi)
            t4117 = t4118 ** 2
            t4120 = t4118 * t4117
            t4121 = t4117 ** 2
            t4122 = t4118 * t4121
            t4123 = t4120 ** 2
            t4124 = t4118 * t4123
            t4125 = t4121 ** 2
            t4127 = t4122 ** 2
            t4129 = t4123 ** 2
            t4131 = t4124 ** 2
            t4135 = 508 * t4120 - 1836 * t4122 + 2332 * t4124 + (412 * t4125 - 3564 * t4127 + 3004 * t4129 - 812 * t4131 - 44) * t4118
            t4134 = -36 * t4117 + 664 * t4121 - 3380 * t4123 - 7724 * t4127 + 3568 * t4129 - 252 * t4131 + 1 + (7362 - 203 * t4125) * t4125
            t4119 = 5 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.3289e4) * (-(-t4134 + t4135) * np.sin((-t4119 + 12 * phi2)) + (t4134 + t4135) * np.sin((t4119 + 12 * phi2))) * ((1 - t4118) ** (-0.1e1 / 0.2e1)) * ((1 + t4118) ** (-0.1e1 / 0.2e1))

        if Bindx == 217:
            t4152 = np.cos(phi)
            t4151 = t4152 ** 2
            t4154 = t4151 ** 2
            t4153 = t4152 * t4151
            t4156 = t4153 ** 2
            t4158 = t4154 ** 2
            t4155 = t4152 * t4154
            t4160 = t4155 ** 2
            t4162 = t4156 ** 2
            t4157 = t4152 * t4156
            t4164 = t4157 ** 2
            t4167 = 0.754509e6 / 0.2048e4 * t4151 - 0.44351979e8 / 0.8192e4 * t4154 + 0.130558267e9 / 0.4096e4 * t4156 - 0.763257231e9 / 0.8192e4 * t4158 + 0.145762155e9 / 0.1024e4 * t4160 - 0.888572685e9 / 0.8192e4 * t4162 + 0.133056495e9 / 0.4096e4 * t4164 - 0.35929e5 / 0.8192e4
            t4166 = 0.30427957e8 / 0.16384e5 * t4153 - 0.219938397e9 / 0.16384e5 * t4155 + 0.631038573e9 / 0.16384e5 * t4157 + (-0.732763647e9 / 0.16384e5 * t4158 + 0.96351255e8 / 0.16384e5 * t4160 + 0.417522105e9 / 0.16384e5 * t4162 - 0.221760825e9 / 0.16384e5 * t4164 - 0.1130973e7 / 0.16384e5) * t4152
            tfunc[..., c] = (t4166 + t4167) * np.cos((6 * phi1 - 6 * phi2)) + (-t4166 + t4167) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 218:
            t4184 = np.cos(phi)
            t4183 = t4184 ** 2
            t4187 = t4183 ** 2
            t4186 = t4184 * t4183
            t4189 = t4186 ** 2
            t4191 = t4187 ** 2
            t4188 = t4184 * t4187
            t4193 = t4188 ** 2
            t4195 = t4189 ** 2
            t4190 = t4184 * t4189
            t4197 = t4190 ** 2
            t4200 = -4 + 120 * t4183 - 996 * t4187 + 2936 * t4189 - 3276 * t4191 + 456 * t4193 + 1460 * t4195 - 696 * t4197
            t4199 = -223 * t4186 - 3 * t4188 + 2205 * t4190 + (-4717 * t4191 + 3603 * t4193 - 753 * t4195 - 145 * t4197 + 33) * t4184
            t4185 = 6 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4199 + t4200) * np.cos((-t4185 + 12 * phi2)) + (t4199 + t4200) * np.cos((t4185 + 12 * phi2)))

        if Bindx == 219:
            t4218 = np.cos(phi)
            t4217 = t4218 ** 2
            t4220 = t4218 * t4217
            t4221 = t4217 ** 2
            t4222 = t4218 * t4221
            t4223 = t4220 ** 2
            t4224 = t4218 * t4223
            t4225 = t4221 ** 2
            t4227 = t4222 ** 2
            t4229 = t4223 ** 2
            t4231 = t4224 ** 2
            t4235 = -48258 * t4220 + 533190 * t4222 - 2745482 * t4224 + (7161418 * t4225 - 9800070 * t4227 + 6718530 * t4229 - 1820910 * t4231 + 1582) * t4218
            t4234 = -39702 * t4217 + 501998 * t4221 - 2388638 * t4223 - 5621154 * t4227 + 1862770 * t4229 + 995670 * t4231 + 509 + (5338872 - 650325 * t4225) * t4225
            t4219 = 7 * phi1
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.22e2) * (-(-t4234 + t4235) * np.sin((-t4219 + 6 * phi2)) + (t4234 + t4235) * np.sin((t4219 + 6 * phi2))) * ((1 - t4218) ** (-0.1e1 / 0.2e1)) * ((1 + t4218) ** (-0.1e1 / 0.2e1))

        if Bindx == 220:
            t4253 = np.cos(phi)
            t4252 = t4253 ** 2
            t4255 = t4253 * t4252
            t4256 = t4252 ** 2
            t4257 = t4253 * t4256
            t4258 = t4255 ** 2
            t4259 = t4253 * t4258
            t4260 = t4256 ** 2
            t4262 = t4257 ** 2
            t4264 = t4258 ** 2
            t4266 = t4259 ** 2
            t4270 = -92 * t4255 + 1740 * t4257 - 5852 * t4259 + (7524 * t4260 - 3060 * t4262 - 1052 * t4264 + 812 * t4266 - 20) * t4253
            t4269 = 216 * t4252 - 1252 * t4256 + 2200 * t4258 - 5368 * t4262 + 5036 * t4264 - 1272 * t4266 - 9 + (594 - 145 * t4260) * t4260
            t4254 = 7 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.31395e5) * (-(t4269 + t4270) * np.sin((-t4254 + 12 * phi2)) + (-t4269 + t4270) * np.sin((t4254 + 12 * phi2))) * ((1 - t4253) ** (-0.1e1 / 0.2e1)) * ((1 + t4253) ** (-0.1e1 / 0.2e1))

        if Bindx == 221:
            t4287 = np.cos(phi)
            t4286 = t4287 ** 2
            t4290 = t4286 ** 2
            t4289 = t4287 * t4286
            t4292 = t4289 ** 2
            t4294 = t4290 ** 2
            t4291 = t4287 * t4290
            t4296 = t4291 ** 2
            t4298 = t4292 ** 2
            t4293 = t4287 * t4292
            t4300 = t4293 ** 2
            t4303 = 560 * t4286 - 2632 * t4290 - 20496 * t4292 + 140776 * t4294 - 300720 * t4296 + 273000 * t4298 - 90480 * t4300 - 8
            t4302 = -10731 * t4289 + 73633 * t4291 - 222055 * t4293 + (316967 * t4294 - 185185 * t4296 - 1365 * t4298 + 28275 * t4300 + 461) * t4287
            t4288 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.253e3) * ((t4302 + t4303) * np.cos((-t4288 + 6 * phi2)) + (-t4302 + t4303) * np.cos((t4288 + 6 * phi2)))

        if Bindx == 222:
            t4320 = np.cos(phi)
            t4319 = t4320 ** 2
            t4323 = t4319 ** 2
            t4322 = t4320 * t4319
            t4325 = t4322 ** 2
            t4327 = t4323 ** 2
            t4324 = t4320 * t4323
            t4329 = t4324 ** 2
            t4331 = t4325 ** 2
            t4326 = t4320 * t4325
            t4333 = t4326 ** 2
            t4336 = -16 + 256 * t4319 - 592 * t4323 - 1760 * t4325 + 6864 * t4327 - 6336 * t4329 + 656 * t4331 + 928 * t4333
            t4335 = -587 * t4322 + 3047 * t4324 - 4587 * t4326 + (-11 * t4327 + 4295 * t4329 - 2027 * t4331 - 145 * t4333 + 15) * t4320
            t4321 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.2730e4) * ((t4335 + t4336) * np.cos((-t4321 + 12 * phi2)) + (-t4335 + t4336) * np.cos((t4321 + 12 * phi2)))

        if Bindx == 223:
            t4354 = np.cos(phi)
            t4353 = t4354 ** 2
            t4356 = t4354 * t4353
            t4357 = t4353 ** 2
            t4358 = t4354 * t4357
            t4359 = t4356 ** 2
            t4360 = t4354 * t4359
            t4361 = t4357 ** 2
            t4363 = t4358 ** 2
            t4365 = t4359 ** 2
            t4367 = t4360 ** 2
            t4371 = 10222 * t4356 - 44042 * t4358 + 35302 * t4360 + (157914 * t4361 - 395190 * t4363 + 338130 * t4365 - 101790 * t4367 - 546) * t4354
            t4370 = -3658 * t4353 + 42674 * t4357 - 208066 * t4359 - 594046 * t4363 + 310830 * t4365 - 15990 * t4367 + 59 + (496472 - 28275 * t4361) * t4361
            t4355 = 9 * phi1
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.10626e5) * (-(-t4370 + t4371) * np.sin((-t4355 + 6 * phi2)) + (t4370 + t4371) * np.sin((t4355 + 6 * phi2))) * ((1 - t4354) ** (-0.1e1 / 0.2e1)) * ((1 + t4354) ** (-0.1e1 / 0.2e1))

        if Bindx == 224:
            t4389 = np.cos(phi)
            t4388 = t4389 ** 2
            t4391 = t4389 * t4388
            t4392 = t4388 ** 2
            t4393 = t4389 * t4392
            t4394 = t4391 ** 2
            t4395 = t4389 * t4394
            t4396 = t4392 ** 2
            t4398 = t4393 ** 2
            t4400 = t4394 ** 2
            t4402 = t4395 ** 2
            t4406 = 7876 * t4391 - 23636 * t4393 + 3652 * t4395 + (63492 * t4396 - 72084 * t4398 + 13956 * t4400 + 7308 * t4402 - 564) * t4389
            t4405 = -1416 * t4388 - 5196 * t4392 + 44088 * t4394 + 28776 * t4398 + 31364 * t4400 - 19096 * t4402 + 177 + (-77682 - 1015 * t4396) * t4396
            t4390 = 9 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t4405 + t4406) * np.sin((-t4390 + 12 * phi2)) + (-t4405 + t4406) * np.sin((t4390 + 12 * phi2))) * ((1 + t4389) ** (-0.1e1 / 0.2e1)) * ((1 - t4389) ** (-0.1e1 / 0.2e1))

        if Bindx == 225:
            t4423 = np.cos(phi)
            t4422 = t4423 ** 2
            t4426 = t4422 ** 2
            t4425 = t4423 * t4422
            t4428 = t4425 ** 2
            t4430 = t4426 ** 2
            t4427 = t4423 * t4426
            t4432 = t4427 ** 2
            t4434 = t4428 ** 2
            t4429 = t4423 * t4428
            t4436 = t4429 ** 2
            t4439 = -6 + 312 * t4422 - 2386 * t4426 + 6116 * t4428 - 3562 * t4430 - 7728 * t4432 + 11778 * t4434 - 4524 * t4436
            t4438 = 511 * t4425 - 4343 * t4427 + 15175 * t4429 + (-24125 * t4430 + 16549 * t4432 - 2613 * t4434 - 1131 * t4436 - 23) * t4423
            t4424 = 10 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.1771e4) * ((-t4438 + t4439) * np.cos((-t4424 + 6 * phi2)) + (t4438 + t4439) * np.cos((t4424 + 6 * phi2)))

        if Bindx == 226:
            t4456 = np.cos(phi)
            t4455 = t4456 ** 2
            t4459 = t4455 ** 2
            t4458 = t4456 * t4455
            t4461 = t4458 ** 2
            t4463 = t4459 ** 2
            t4460 = t4456 * t4459
            t4465 = t4460 ** 2
            t4467 = t4461 ** 2
            t4462 = t4456 * t4461
            t4469 = t4462 ** 2
            t4472 = -52 - 104 * t4455 + 4076 * t4459 - 10472 * t4461 + 1188 * t4463 + 13992 * t4465 - 7004 * t4467 - 1624 * t4469
            t4471 = 1819 * t4458 + 143 * t4460 - 13233 * t4462 + (16577 * t4463 + 289 * t4465 - 5131 * t4467 - 203 * t4469 - 261) * t4456
            t4457 = 10 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.390e3) * ((-t4471 + t4472) * np.cos((-t4457 + 12 * phi2)) + (t4471 + t4472) * np.cos((t4457 + 12 * phi2)))

        if Bindx == 227:
            t4490 = np.cos(phi)
            t4489 = t4490 ** 2
            t4492 = t4490 * t4489
            t4493 = t4489 ** 2
            t4494 = t4490 * t4493
            t4495 = t4492 ** 2
            t4496 = t4490 * t4495
            t4497 = t4493 ** 2
            t4499 = t4494 ** 2
            t4501 = t4495 ** 2
            t4503 = t4496 ** 2
            t4507 = 778 * t4492 - 3726 * t4494 + 7314 * t4496 + (-4642 * t4497 - 3234 * t4499 + 5478 * t4501 - 1914 * t4503 - 54) * t4490
            t4506 = 42 * t4489 + 294 * t4493 - 3678 * t4495 - 15714 * t4499 + 9322 * t4501 - 1386 * t4503 - 1 + (11556 - 435 * t4497) * t4497
            t4491 = 11 * phi1
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.230230e6) * (-(-t4506 + t4507) * np.sin((-t4491 + 6 * phi2)) + (t4506 + t4507) * np.sin((t4491 + 6 * phi2))) * ((1 - t4490) ** (-0.1e1 / 0.2e1)) * ((1 + t4490) ** (-0.1e1 / 0.2e1))

        if Bindx == 228:
            t4525 = np.cos(phi)
            t4524 = t4525 ** 2
            t4527 = t4525 * t4524
            t4528 = t4524 ** 2
            t4529 = t4525 * t4528
            t4530 = t4527 ** 2
            t4531 = t4525 * t4530
            t4532 = t4528 ** 2
            t4534 = t4529 ** 2
            t4536 = t4530 ** 2
            t4538 = t4531 ** 2
            t4542 = 6356 * t4527 + 40092 * t4529 - 126412 * t4531 + (56628 * t4532 + 87516 * t4534 - 52844 * t4536 - 8932 * t4538 - 2404) * t4525
            t4541 = 4356 * t4524 - 35464 * t4528 + 33748 * t4530 - 148148 * t4534 + 17056 * t4536 + 31836 * t4538 + 363 + (95238 + 1015 * t4532) * t4532
            t4526 = 11 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.3e1) * (-(t4541 + t4542) * np.sin((-t4526 + 12 * phi2)) + (-t4541 + t4542) * np.sin((t4526 + 12 * phi2))) * ((1 + t4525) ** (-0.1e1 / 0.2e1)) * ((1 - t4525) ** (-0.1e1 / 0.2e1))

        if Bindx == 229:
            t4559 = np.cos(phi)
            t4558 = t4559 ** 2
            t4562 = t4558 ** 2
            t4561 = t4559 * t4558
            t4564 = t4561 ** 2
            t4566 = t4562 ** 2
            t4563 = t4559 * t4562
            t4568 = t4563 ** 2
            t4570 = t4564 ** 2
            t4565 = t4559 * t4564
            t4572 = t4565 ** 2
            t4575 = -4 + 120 * t4558 - 996 * t4562 + 2936 * t4564 - 3276 * t4566 + 456 * t4568 + 1460 * t4570 - 696 * t4572
            t4574 = -223 * t4561 - 3 * t4563 + 2205 * t4565 + (-4717 * t4566 + 3603 * t4568 - 753 * t4570 - 145 * t4572 + 33) * t4559
            t4560 = 12 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4574 + t4575) * np.cos((-t4560 + 6 * phi2)) + (t4574 + t4575) * np.cos((t4560 + 6 * phi2)))

        if Bindx == 230:
            t4592 = np.cos(phi)
            t4591 = t4592 ** 2
            t4594 = t4591 ** 2
            t4593 = t4592 * t4591
            t4596 = t4593 ** 2
            t4598 = t4594 ** 2
            t4595 = t4592 * t4594
            t4600 = t4595 ** 2
            t4602 = t4596 ** 2
            t4597 = t4592 * t4596
            t4604 = t4597 ** 2
            t4607 = -0.5673e4 / 0.128e3 * t4591 + 0.117273e6 / 0.1024e4 * t4594 + 0.155155e6 / 0.512e3 * t4596 - 0.678249e6 / 0.1024e4 * t4598 - 0.13299e5 / 0.256e3 * t4600 + 0.329251e6 / 0.1024e4 * t4602 + 0.18879e5 / 0.512e3 * t4604 - 0.1891e4 / 0.1024e4
            t4606 = 0.292981e6 / 0.8192e4 * t4593 - 0.2806089e7 / 0.8192e4 * t4595 + 0.1476189e7 / 0.8192e4 * t4597 + (0.4738877e7 / 0.8192e4 * t4598 - 0.2690025e7 / 0.8192e4 * t4600 - 0.1229739e7 / 0.8192e4 * t4602 - 0.31465e5 / 0.8192e4 * t4604 + 0.122295e6 / 0.8192e4) * t4592
            tfunc[..., c] = (t4606 + t4607) * np.cos((12 * phi1 - 12 * phi2)) + (-t4606 + t4607) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 231:
            t4625 = np.cos(phi)
            t4624 = t4625 ** 2
            t4627 = t4625 * t4624
            t4628 = t4624 ** 2
            t4629 = t4625 * t4628
            t4630 = t4627 ** 2
            t4631 = t4625 * t4630
            t4632 = t4628 ** 2
            t4634 = t4629 ** 2
            t4636 = t4630 ** 2
            t4638 = t4631 ** 2
            t4642 = 482 * t4627 - 3222 * t4629 + 7274 * t4631 + (-6586 * t4632 + 1062 * t4634 + 1742 * t4636 - 754 * t4638 + 2) * t4625
            t4641 = 342 * t4624 - 1318 * t4628 + 734 * t4630 - 7582 * t4634 + 4982 * t4636 - 918 * t4638 - 19 + (3924 - 145 * t4632) * t4632
            t4626 = 13 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.32890e5) * (-(-t4641 + t4642) * np.sin((-t4626 + 6 * phi2)) + (t4641 + t4642) * np.sin((t4626 + 6 * phi2))) * ((1 + t4625) ** (-0.1e1 / 0.2e1)) * ((1 - t4625) ** (-0.1e1 / 0.2e1))

        if Bindx == 232:
            t4660 = np.cos(phi)
            t4659 = t4660 ** 2
            t4662 = t4660 * t4659
            t4663 = t4659 ** 2
            t4664 = t4660 * t4663
            t4665 = t4662 ** 2
            t4666 = t4660 * t4665
            t4667 = t4663 ** 2
            t4669 = t4664 ** 2
            t4671 = t4665 ** 2
            t4673 = t4666 ** 2
            t4677 = 5588 * t4662 - 17316 * t4664 - 16588 * t4666 + (47476 * t4667 - 2340 * t4669 - 16172 * t4671 - 1508 * t4673 + 860) * t4660
            t4676 = 3276 * t4659 + 208 * t4663 - 31460 * t4665 + 31460 * t4669 - 19864 * t4671 - 6732 * t4673 + 91 + (23166 - 145 * t4667) * t4667
            t4661 = 13 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.21e2) * (-(-t4676 + t4677) * np.sin((-t4661 + 12 * phi2)) + (t4676 + t4677) * np.sin((t4661 + 12 * phi2))) * ((1 + t4660) ** (-0.1e1 / 0.2e1)) * ((1 - t4660) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t4694 = np.cos(phi)
            t4693 = t4694 ** 2
            t4697 = t4693 ** 2
            t4696 = t4694 * t4693
            t4699 = t4696 ** 2
            t4701 = t4697 ** 2
            t4698 = t4694 * t4697
            t4703 = t4698 ** 2
            t4705 = t4699 ** 2
            t4700 = t4694 * t4699
            t4707 = t4700 ** 2
            t4710 = -2 + 8 * t4693 + 58 * t4697 - 244 * t4699 + 306 * t4701 - 112 * t4703 - 42 * t4705 + 28 * t4707
            t4709 = -63 * t4696 + 119 * t4698 + 9 * t4700 + (-211 * t4701 + 187 * t4703 - 43 * t4705 - 5 * t4707 + 7) * t4694
            t4695 = 14 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.476905e6) * ((t4709 + t4710) * np.cos((-t4695 + 6 * phi2)) + (-t4709 + t4710) * np.cos((t4695 + 6 * phi2)))

        if Bindx == 234:
            t4727 = np.cos(phi)
            t4726 = t4727 ** 2
            t4730 = t4726 ** 2
            t4729 = t4727 * t4726
            t4732 = t4729 ** 2
            t4734 = t4730 ** 2
            t4731 = t4727 * t4730
            t4736 = t4731 ** 2
            t4738 = t4732 ** 2
            t4733 = t4727 * t4732
            t4740 = t4733 ** 2
            t4743 = 4 + 200 * t4726 + 676 * t4730 - 1144 * t4732 - 1716 * t4734 + 1144 * t4736 + 780 * t4738 + 56 * t4740
            t4742 = -507 * t4729 - 143 * t4731 + 2145 * t4733 + (143 * t4734 - 1313 * t4736 - 277 * t4738 - 5 * t4740 - 43) * t4727
            t4728 = 14 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1218e4) * ((t4742 + t4743) * np.cos((-t4728 + 12 * phi2)) + (-t4742 + t4743) * np.cos((t4728 + 12 * phi2)))

        if Bindx == 235:
            t4759 = np.cos(phi)
            t4775 = -6 * t4759
            t4758 = t4759 ** 2
            t4761 = t4759 * t4758
            t4762 = t4758 ** 2
            t4763 = t4759 * t4762
            t4764 = t4761 ** 2
            t4765 = t4759 * t4764
            t4766 = t4762 ** 2
            t4768 = t4763 ** 2
            t4770 = t4764 ** 2
            t4774 = t4770 * t4775 + 4 * t4761 + 38 * t4763 - 72 * t4765 + t4775 + (38 * t4766 + 4 * t4768) * t4759
            t4773 = -t4765 ** 2 - 11 * t4758 + 39 * t4762 - 27 * t4764 - 27 * t4766 + 39 * t4768 - 11 * t4770 - 1
            t4760 = 15 * phi1
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.572286e6) * np.sqrt((1 - t4759)) * np.sqrt((1 + t4759)) * (-(-t4773 + t4774) * np.sin((-t4760 + 6 * phi2)) + (t4773 + t4774) * np.sin((t4760 + 6 * phi2)))

        if Bindx == 236:
            t4790 = np.cos(phi)
            t4789 = t4790 ** 2
            t4792 = t4790 * t4789
            t4793 = t4789 ** 2
            t4794 = t4790 * t4793
            t4796 = t4793 ** 2
            t4798 = t4794 ** 2
            t4795 = t4792 ** 2
            t4800 = t4795 ** 2
            t4801 = t4790 * t4800
            t4804 = 208 * t4792 + 572 * t4794 - 12 * t4801 + (-572 * t4796 - 208 * t4798 + 12) * t4790
            t4803 = -t4790 * t4801 + 65 * t4789 + 429 * t4793 + 429 * t4795 - 429 * t4796 - 429 * t4798 - 65 * t4800 + 1
            t4791 = 15 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1015e4) * np.sqrt((1 - t4790)) * np.sqrt((1 + t4790)) * (-(-t4803 + t4804) * np.sin((-t4791 + 12 * phi2)) + (t4803 + t4804) * np.sin((t4791 + 12 * phi2)))

        if Bindx == 237:
            t4805 = np.cos(phi)
            t4806 = t4805 ** 2
            t4807 = t4806 ** 2
            t4808 = t4806 * t4807
            t4811 = t4808 ** 2
            t4809 = t4807 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t4811 - 0.672188517e9 / 0.4096e4 * t4808 + 0.160044885e9 / 0.8192e4 * t4807 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t4809) * t4809 + (-0.4798948275e10 / 0.4096e4 * t4811 - 0.6135053925e10 / 0.4096e4 * t4809 - 0.3610035e7 / 0.4096e4) * t4806

        if Bindx == 238:
            t4814 = np.cos(phi)
            t4815 = t4814 ** 2
            t4816 = t4815 ** 2
            t4817 = t4815 * t4816
            t4820 = t4817 ** 2
            t4818 = t4816 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.25194e5) * (47558 * t4816 - 345366 * t4817 + 2498490 * t4820 + 21 + (1225440 + 310155 * t4818) * t4818 + (-2353130 * t4818 - 1380690 * t4820 - 2478) * t4815) * np.cos((6 * phi2))

        if Bindx == 239:
            t4823 = np.cos(phi)
            t4824 = t4823 ** 2
            t4825 = t4824 ** 2
            t4826 = t4824 * t4825
            t4829 = t4826 ** 2
            t4827 = t4825 ** 2
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.7429e4) * (1988 * t4825 - 8064 * t4826 + 14532 * t4829 + 3 + (17010 + 899 * t4827) * t4827 + (-20608 * t4827 - 5568 * t4829 - 192) * t4824) * np.cos((12 * phi2))

        if Bindx == 240:
            t4833 = np.cos(phi)
            t4834 = t4833 ** 2
            t4835 = t4834 ** 2
            t4836 = t4834 * t4835
            t4839 = t4836 ** 2
            t4837 = t4835 ** 2
            t4832 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * t4833 * t4832 ** 2 * (-3594591 * t4835 + 19684665 * t4836 - 54679625 * t4837 - 59879925 * t4839 - 6435 + (80528175 * t4837 + 17678835 * t4839 + 285285) * t4834) * np.sin(phi1) * ((1 + t4833) ** (-0.1e1 / 0.2e1)) * ((1 - t4833) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t4859 = np.cos(phi)
            t4858 = t4859 ** 2
            t4861 = t4858 ** 2
            t4860 = t4859 * t4858
            t4863 = t4860 ** 2
            t4865 = t4861 ** 2
            t4862 = t4859 * t4861
            t4867 = t4862 ** 2
            t4869 = t4863 ** 2
            t4864 = t4859 * t4863
            t4871 = t4864 ** 2
            t4873 = t4865 ** 2
            t4876 = 7434 * t4858 - 142674 * t4861 + 1036098 * t4863 - 3676320 * t4865 + 7059390 * t4867 - 7495470 * t4869 + 4142070 * t4871 - 930465 * t4873 - 63
            t4875 = -97594 * t4860 + 1131214 * t4862 - 5937858 * t4864 + (16667410 * t4865 - 26756590 * t4867 + 24655770 * t4869 - 12146070 * t4871 + 2481240 * t4873 + 2478) * t4859
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.1482e4) * ((t4875 + t4876) * np.sin((phi1 - 6 * phi2)) + (t4875 - t4876) * np.sin((phi1 + 6 * phi2))) * ((1 + t4859) ** (-0.1e1 / 0.2e1)) * ((1 - t4859) ** (-0.1e1 / 0.2e1))

        if Bindx == 242:
            t4895 = np.cos(phi)
            t4894 = t4895 ** 2
            t4897 = t4894 ** 2
            t4896 = t4895 * t4894
            t4899 = t4896 ** 2
            t4901 = t4897 ** 2
            t4898 = t4895 * t4897
            t4903 = t4898 ** 2
            t4905 = t4899 ** 2
            t4900 = t4895 * t4899
            t4907 = t4900 ** 2
            t4909 = t4901 ** 2
            t4912 = -9 + 576 * t4894 - 5964 * t4897 + 24192 * t4899 - 51030 * t4901 + 61824 * t4903 - 43596 * t4905 + 16704 * t4907 - 2697 * t4909
            t4911 = -2084 * t4896 + 14084 * t4898 - 46116 * t4900 + (85540 * t4901 - 95116 * t4903 + 63084 * t4905 - 23084 * t4907 + 3596 * t4909 + 96) * t4895
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.437e3) * ((t4911 + t4912) * np.sin((phi1 - 12 * phi2)) + (t4911 - t4912) * np.sin((phi1 + 12 * phi2))) * ((1 + t4895) ** (-0.1e1 / 0.2e1)) * ((1 - t4895) ** (-0.1e1 / 0.2e1))

        if Bindx == 243:
            t4913 = np.cos(phi)
            t4914 = t4913 ** 2
            t4915 = t4914 ** 2
            t4916 = t4914 * t4915
            t4919 = t4916 ** 2
            t4917 = t4915 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t4915 - 3461458 * t4916 + 36983310 * t4919 + 143 + (13997984 + 5892945 * t4917) * t4917 + (-30620590 * t4917 - 23191590 * t4919 - 19162) * t4914) * np.cos((2 * phi1))

        if Bindx == 244:
            t4939 = np.cos(phi)
            t4938 = t4939 ** 2
            t4941 = t4939 * t4938
            t4942 = t4938 ** 2
            t4943 = t4939 * t4942
            t4944 = t4941 ** 2
            t4945 = t4939 * t4944
            t4946 = t4942 ** 2
            t4948 = t4943 ** 2
            t4950 = t4944 ** 2
            t4952 = t4945 ** 2
            t4956 = -37555 * t4941 + 405419 * t4943 - 1900651 * t4945 + (4521225 * t4946 - 5710785 * t4948 + 3651825 * t4950 - 930465 * t4952 + 987) * t4939
            t4955 = -8120 * t4938 + 155134 * t4942 - 1136268 * t4944 - 8169600 * t4948 + 9042450 * t4950 - 5242620 * t4952 + 70 + (4118334 + 1240620 * t4946) * t4946
            t4940 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * ((t4955 + t4956) * np.cos((-t4940 + 6 * phi2)) + (t4955 - t4956) * np.cos((t4940 + 6 * phi2)))

        if Bindx == 245:
            t4974 = np.cos(phi)
            t4973 = t4974 ** 2
            t4977 = t4973 ** 2
            t4976 = t4974 * t4973
            t4979 = t4976 ** 2
            t4981 = t4977 ** 2
            t4978 = t4974 * t4977
            t4983 = t4978 ** 2
            t4985 = t4979 ** 2
            t4980 = t4974 * t4979
            t4987 = t4980 ** 2
            t4991 = 124 * t4973 + 280 * t4977 - 12180 * t4979 - 98028 * t4983 + 94136 * t4985 - 45820 * t4987 - 2 + (52500 + 8990 * t4981) * t4981
            t4990 = -7763 * t4976 + 46585 * t4978 - 129815 * t4980 + (195335 * t4981 - 164521 * t4983 + 73283 * t4985 - 13485 * t4987 + 381) * t4974
            t4975 = 2 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t4990 + t4991) * np.cos((-t4975 + 12 * phi2)) + (-t4990 + t4991) * np.cos((t4975 + 12 * phi2)))

        if Bindx == 246:
            t5001 = np.sin(phi)
            t4999 = t5001 ** 2
            t4992 = np.cos(phi)
            t4993 = t4992 ** 2
            t4994 = t4993 ** 2
            t4996 = t4994 ** 2
            t4995 = t4993 * t4994
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t4992 * t4999 ** 2 * (69069 * t4994 + 740025 * t4996 + 143 + (-328900 + 310155 * t4995) * t4995 + (-780390 * t4996 - 6006) * t4993) * np.sin((3 * phi1)) * ((1 - t4992) ** (-0.1e1 / 0.2e1)) * ((1 + t4992) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t5020 = np.cos(phi)
            t5019 = t5020 ** 2
            t5023 = t5019 ** 2
            t5022 = t5020 * t5019
            t5025 = t5022 ** 2
            t5027 = t5023 ** 2
            t5024 = t5020 * t5023
            t5029 = t5024 ** 2
            t5031 = t5025 ** 2
            t5026 = t5020 * t5025
            t5033 = t5026 ** 2
            t5035 = t5027 ** 2
            t5038 = 22914 * t5019 - 427922 * t5023 + 3048346 * t5025 - 10700612 * t5027 + 20497830 * t5029 - 21875070 * t5031 + 12226110 * t5033 - 2791395 * t5035 - 201
            t5037 = -56458 * t5022 + 670766 * t5024 - 3726834 * t5026 + (11325522 * t5027 - 19943070 * t5029 + 20272890 * t5031 - 11025510 * t5033 + 2481240 * t5035 + 1454) * t5020
            t5021 = 3 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.910e3) * (-(t5037 + t5038) * np.sin((-t5021 + 6 * phi2)) + (t5037 - t5038) * np.sin((t5021 + 6 * phi2))) * ((1 - t5020) ** (-0.1e1 / 0.2e1)) * ((1 + t5020) ** (-0.1e1 / 0.2e1))

        if Bindx == 248:
            t5057 = np.cos(phi)
            t5056 = t5057 ** 2
            t5059 = t5057 * t5056
            t5060 = t5056 ** 2
            t5061 = t5057 * t5060
            t5062 = t5059 ** 2
            t5063 = t5057 * t5062
            t5064 = t5060 ** 2
            t5066 = t5061 ** 2
            t5068 = t5062 ** 2
            t5070 = t5063 ** 2
            t5072 = t5064 ** 2
            t5075 = 13148 * t5059 - 69340 * t5061 + 155580 * t5063 + (-149820 * t5064 + 8628 * t5066 + 100492 * t5068 - 75980 * t5070 + 17980 * t5072 - 688) * t5057
            t5074 = -3060 * t5056 + 34864 * t5060 - 170660 * t5062 + 433870 * t5064 - 621916 * t5066 + 509000 * t5068 - 222604 * t5070 + 40455 * t5072 + 51
            t5058 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2415e4) * (-(-t5074 + t5075) * np.sin((-t5058 + 12 * phi2)) + (t5074 + t5075) * np.sin((t5058 + 12 * phi2))) * ((1 - t5057) ** (-0.1e1 / 0.2e1)) * ((1 + t5057) ** (-0.1e1 / 0.2e1))

        if Bindx == 249:
            t5076 = np.cos(phi)
            t5077 = t5076 ** 2
            t5078 = t5077 ** 2
            t5079 = t5077 * t5078
            t5082 = t5079 ** 2
            t5080 = t5078 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t5078 - 231616 * t5079 + 2143140 * t5082 + 11 + (893090 + 310155 * t5080) * t5080 + (-1862080 * t5080 - 1280640 * t5082 - 1408) * t5077) * np.cos((4 * phi1))

        if Bindx == 250:
            t5102 = np.cos(phi)
            t5101 = t5102 ** 2
            t5104 = t5102 * t5101
            t5105 = t5101 ** 2
            t5106 = t5102 * t5105
            t5107 = t5104 ** 2
            t5108 = t5102 * t5107
            t5109 = t5105 ** 2
            t5111 = t5106 ** 2
            t5113 = t5107 ** 2
            t5115 = t5108 ** 2
            t5119 = -487715 * t5104 + 5090953 * t5106 - 23424695 * t5108 + (55508775 * t5109 - 70777785 * t5111 + 46173075 * t5113 - 12096045 * t5115 + 13437) * t5102
            t5118 = -6820 * t5101 + 175640 * t5105 - 1941492 * t5107 - 27968460 * t5111 + 40006200 * t5113 - 28614300 * t5115 + 62 + (10285140 + 8064030 * t5109) * t5109
            t5103 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.14e2) * ((t5118 + t5119) * np.cos((-t5103 + 6 * phi2)) + (t5118 - t5119) * np.cos((t5103 + 6 * phi2)))

        if Bindx == 251:
            t5137 = np.cos(phi)
            t5136 = t5137 ** 2
            t5139 = t5137 * t5136
            t5140 = t5136 ** 2
            t5141 = t5137 * t5140
            t5142 = t5139 ** 2
            t5143 = t5137 * t5142
            t5144 = t5140 ** 2
            t5146 = t5141 ** 2
            t5148 = t5142 ** 2
            t5150 = t5143 ** 2
            t5154 = 85 * t5139 + 823 * t5141 - 6659 * t5143 + (17021 * t5144 - 20425 * t5146 + 11861 * t5148 - 2697 * t5150 - 9) * t5137
            t5153 = 280 * t5136 - 2612 * t5140 + 9720 * t5142 + 14664 * t5146 - 4036 * t5148 - 1624 * t5150 - 5 + (-17286 + 899 * t5144) * t5144
            t5138 = 4 * phi1
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.6279e4) * ((t5153 + t5154) * np.cos((-t5138 + 12 * phi2)) + (t5153 - t5154) * np.cos((t5138 + 12 * phi2)))

        if Bindx == 252:
            t5164 = np.sin(phi)
            t5161 = t5164 ** 2
            t5162 = t5164 * t5161
            t5155 = np.cos(phi)
            t5156 = t5155 ** 2
            t5157 = t5156 ** 2
            t5159 = t5157 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t5155 * t5162 ** 2 * (-88550 * t5157 - 550275 * t5159 - 231 + (341550 * t5157 + 310155 * t5159 + 8855) * t5156) * np.sin((5 * phi1)) * ((1 - t5155) ** (-0.1e1 / 0.2e1)) * ((1 + t5155) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t5183 = np.cos(phi)
            t5182 = t5183 ** 2
            t5186 = t5182 ** 2
            t5185 = t5183 * t5182
            t5188 = t5185 ** 2
            t5190 = t5186 ** 2
            t5187 = t5183 * t5186
            t5192 = t5187 ** 2
            t5194 = t5188 ** 2
            t5189 = t5183 * t5188
            t5196 = t5189 ** 2
            t5198 = t5190 ** 2
            t5201 = 487918 * t5182 - 8673630 * t5186 + 60237590 * t5188 - 210521300 * t5190 + 407970090 * t5192 - 445243890 * t5194 + 256228050 * t5196 - 60480225 * t5198 - 4603
            t5200 = 745790 * t5185 - 6298922 * t5187 + 18128022 * t5189 + (-4075830 * t5190 - 74406150 * t5192 + 147870450 * t5194 - 114197070 * t5196 + 32256120 * t5198 - 22410) * t5183
            t5184 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-(t5200 + t5201) * np.sin((-t5184 + 6 * phi2)) + (t5200 - t5201) * np.sin((t5184 + 6 * phi2))) * ((1 - t5183) ** (-0.1e1 / 0.2e1)) * ((1 + t5183) ** (-0.1e1 / 0.2e1))

        if Bindx == 254:
            t5220 = np.cos(phi)
            t5219 = t5220 ** 2
            t5223 = t5219 ** 2
            t5222 = t5220 * t5219
            t5225 = t5222 ** 2
            t5227 = t5223 ** 2
            t5224 = t5220 * t5223
            t5229 = t5224 ** 2
            t5231 = t5225 ** 2
            t5226 = t5220 * t5225
            t5233 = t5226 ** 2
            t5235 = t5227 ** 2
            t5238 = 23 - 1196 * t5219 + 9048 * t5223 - 23068 * t5225 + 11422 * t5227 + 44604 * t5229 - 82912 * t5231 + 55564 * t5233 - 13485 * t5235
            t5237 = 2956 * t5222 - 22732 * t5224 + 79212 * t5226 + (-140012 * t5227 + 127172 * t5229 - 50628 * t5231 + 580 * t5233 + 3596 * t5235 - 144) * t5220
            t5221 = 5 * phi1
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.897e3) * (-(t5237 + t5238) * np.sin((-t5221 + 12 * phi2)) + (t5237 - t5238) * np.sin((t5221 + 12 * phi2))) * ((1 - t5220) ** (-0.1e1 / 0.2e1)) * ((1 + t5220) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t5239 = np.cos(phi)
            t5240 = t5239 ** 2
            t5241 = t5240 ** 2
            t5242 = t5240 * t5241
            t5245 = t5242 ** 2
            t5243 = t5241 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t5241 - 345366 * t5242 + 2498490 * t5245 + 21 + (1225440 + 310155 * t5243) * t5243 + (-2353130 * t5243 - 1380690 * t5245 - 2478) * t5240) * np.cos((6 * phi1))

        if Bindx == 256:
            t5265 = np.cos(phi)
            t5264 = t5265 ** 2
            t5266 = t5265 * t5264
            t5267 = t5264 ** 2
            t5268 = t5265 * t5267
            t5269 = t5266 ** 2
            t5270 = t5265 * t5269
            t5271 = t5267 ** 2
            t5273 = t5268 ** 2
            t5275 = t5269 ** 2
            t5277 = t5270 ** 2
            t5281 = -0.41181525e8 / 0.16384e5 * t5266 + 0.418245597e9 / 0.16384e5 * t5268 - 0.1944857805e10 / 0.16384e5 * t5270 + (0.4769574975e10 / 0.16384e5 * t5271 - 0.6362290935e10 / 0.16384e5 * t5273 + 0.4356527175e10 / 0.16384e5 * t5275 - 0.1197508455e10 / 0.16384e5 * t5277 + 0.1220637e7 / 0.16384e5) * t5265
            t5280 = 0.938025e6 / 0.2048e4 * t5264 - 0.57222165e8 / 0.8192e4 * t5267 + 0.152147457e9 / 0.4096e4 * t5269 + 0.34189155e8 / 0.512e3 * t5273 + 0.264188925e9 / 0.8192e4 * t5275 - 0.321910875e9 / 0.4096e4 * t5277 - 0.37521e5 / 0.8192e4 + (-0.684158805e9 / 0.8192e4 + 0.133056495e9 / 0.4096e4 * t5271) * t5271
            tfunc[..., c] = (t5280 + t5281) * np.cos((6 * phi1 - 6 * phi2)) + (t5280 - t5281) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 257:
            t5299 = np.cos(phi)
            t5298 = t5299 ** 2
            t5301 = t5299 * t5298
            t5302 = t5298 ** 2
            t5303 = t5299 * t5302
            t5304 = t5301 ** 2
            t5305 = t5299 * t5304
            t5306 = t5302 ** 2
            t5308 = t5303 ** 2
            t5310 = t5304 ** 2
            t5312 = t5305 ** 2
            t5316 = 2859 * t5301 - 15009 * t5303 + 32351 * t5305 + (-24783 * t5306 - 8751 * t5308 + 21605 * t5310 - 8091 * t5312 - 181) * t5299
            t5315 = -276 * t5298 - 104 * t5302 + 11484 * t5304 + 63844 * t5308 - 40200 * t5310 + 6612 * t5312 + 6 + (-43164 + 1798 * t5306) * t5306
            t5300 = 6 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5315 + t5316) * np.cos((-t5300 + 12 * phi2)) + (t5315 - t5316) * np.cos((t5300 + 12 * phi2)))

        if Bindx == 258:
            t5325 = np.sin(phi)
            t5322 = t5325 ** 2
            t5323 = t5322 ** 2
            t5317 = np.cos(phi)
            t5318 = t5317 ** 2
            t5319 = t5318 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t5317 * t5323 ** 2 * (-700 * t5318 + 21 + (-15660 * t5318 + 5670 + 13485 * t5319) * t5319) * np.sin((7 * phi1)) * ((1 - t5317) ** (-0.1e1 / 0.2e1)) * ((1 + t5317) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t5344 = np.cos(phi)
            t5343 = t5344 ** 2
            t5347 = t5343 ** 2
            t5346 = t5344 * t5343
            t5349 = t5346 ** 2
            t5351 = t5347 ** 2
            t5348 = t5344 * t5347
            t5353 = t5348 ** 2
            t5355 = t5349 ** 2
            t5350 = t5344 * t5349
            t5357 = t5350 ** 2
            t5359 = t5351 ** 2
            t5362 = -19082 * t5343 + 337554 * t5347 - 2514946 * t5349 + 9660376 * t5351 - 20482110 * t5353 + 24141390 * t5355 - 14804790 * t5357 + 3681405 * t5359 + 203
            t5361 = 177826 * t5346 - 1563142 * t5348 + 5959338 * t5350 + (-11144826 * t5351 + 9541350 * t5353 - 1302210 * t5355 - 3065010 * t5357 + 1402440 * t5359 - 5766) * t5344
            t5345 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.230e3) * (-(t5361 - t5362) * np.sin((-t5345 + 6 * phi2)) + (t5361 + t5362) * np.sin((t5345 + 6 * phi2))) * ((1 - t5344) ** (-0.1e1 / 0.2e1)) * ((1 + t5344) ** (-0.1e1 / 0.2e1))

        if Bindx == 260:
            t5381 = np.cos(phi)
            t5380 = t5381 ** 2
            t5384 = t5380 ** 2
            t5383 = t5381 * t5380
            t5386 = t5383 ** 2
            t5388 = t5384 ** 2
            t5385 = t5381 * t5384
            t5390 = t5385 ** 2
            t5392 = t5386 ** 2
            t5387 = t5381 * t5386
            t5394 = t5387 ** 2
            t5396 = t5388 ** 2
            t5399 = -4360 * t5380 + 67716 * t5384 - 349256 * t5386 + 773366 * t5388 - 744216 * t5390 + 157780 * t5392 + 193256 * t5394 - 94395 * t5396 + 109
            t5398 = -32788 * t5383 + 111412 * t5385 - 42900 * t5387 + (-427372 * t5388 + 842788 * t5390 - 593028 * t5392 + 121220 * t5394 + 17980 * t5396 + 2688) * t5381
            t5382 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.195e3) * (-(t5398 + t5399) * np.sin((-t5382 + 12 * phi2)) + (t5398 - t5399) * np.sin((t5382 + 12 * phi2))) * ((1 - t5381) ** (-0.1e1 / 0.2e1)) * ((1 + t5381) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t5400 = np.cos(phi)
            t5401 = t5400 ** 2
            t5402 = t5401 ** 2
            t5403 = t5401 * t5402
            t5406 = t5403 ** 2
            t5404 = t5402 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t5402 - 78568 * t5403 + 398340 * t5406 + 7 + (246122 + 40455 * t5404) * t5404 + (-419560 * t5404 - 198360 * t5406 - 728) * t5401) * np.cos((8 * phi1))

        if Bindx == 262:
            t5426 = np.cos(phi)
            t5425 = t5426 ** 2
            t5428 = t5426 * t5425
            t5429 = t5425 ** 2
            t5430 = t5426 * t5429
            t5431 = t5428 ** 2
            t5432 = t5426 * t5431
            t5433 = t5429 ** 2
            t5435 = t5430 ** 2
            t5437 = t5431 ** 2
            t5439 = t5432 ** 2
            t5443 = -2317 * t5428 + 58247 * t5430 - 448657 * t5432 + (1467345 * t5433 - 2330055 * t5435 + 1781325 * t5437 - 525915 * t5439 + 27) * t5426
            t5442 = 8342 * t5425 - 115990 * t5429 + 607838 * t5431 + 1811810 * t5435 - 832650 * t5437 - 147030 * t5439 - 97 + (-1507528 + 175305 * t5433) * t5433
            t5427 = 8 * phi1
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * ((t5442 + t5443) * np.cos((-t5427 + 6 * phi2)) + (t5442 - t5443) * np.cos((t5427 + 6 * phi2)))

        if Bindx == 263:
            t5461 = np.cos(phi)
            t5460 = t5461 ** 2
            t5464 = t5460 ** 2
            t5463 = t5461 * t5460
            t5466 = t5463 ** 2
            t5468 = t5464 ** 2
            t5465 = t5461 * t5464
            t5470 = t5465 ** 2
            t5472 = t5466 ** 2
            t5467 = t5461 * t5466
            t5474 = t5467 ** 2
            t5478 = -3552 * t5460 + 29940 * t5464 - 85536 * t5466 + 85536 * t5470 - 146252 * t5472 + 51040 * t5474 + 111 + (64218 + 4495 * t5468) * t5468
            t5477 = 3454 * t5463 + 17002 * t5465 - 121154 * t5467 + (228030 * t5468 - 146838 * t5470 - 6786 * t5472 + 26970 * t5474 - 678) * t5461
            t5462 = 8 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.130e3) * ((-t5477 + t5478) * np.cos((-t5462 + 12 * phi2)) + (t5477 + t5478) * np.cos((t5462 + 12 * phi2)))

        if Bindx == 264:
            t5487 = np.sin(phi)
            t5483 = t5487 ** 2
            t5485 = t5487 * t5483 ** 2
            t5479 = np.cos(phi)
            t5480 = t5479 ** 2
            t5481 = t5480 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t5479 * t5485 ** 2 * (-5481 * t5481 - 35 + (8091 * t5481 + 945) * t5480) * np.sin((9 * phi1)) * ((1 - t5479) ** (-0.1e1 / 0.2e1)) * ((1 + t5479) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t5506 = np.cos(phi)
            t5505 = t5506 ** 2
            t5509 = t5505 ** 2
            t5508 = t5506 * t5505
            t5511 = t5508 ** 2
            t5513 = t5509 ** 2
            t5510 = t5506 * t5509
            t5515 = t5510 ** 2
            t5517 = t5511 ** 2
            t5512 = t5506 * t5511
            t5519 = t5512 ** 2
            t5521 = t5513 ** 2
            t5524 = -8658 * t5505 + 83258 * t5509 - 136234 * t5511 - 742456 * t5513 + 3245418 * t5515 - 5030298 * t5517 + 3535506 * t5519 - 946647 * t5521 + 111
            t5523 = 85562 * t5508 - 706510 * t5510 + 2707298 * t5512 + (-5384434 * t5513 + 5519150 * t5515 - 2392026 * t5517 - 106314 * t5519 + 280488 * t5521 - 3214) * t5506
            t5507 = 9 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.690e3) * (-(t5523 + t5524) * np.sin((-t5507 + 6 * phi2)) + (t5523 - t5524) * np.sin((t5507 + 6 * phi2))) * ((1 - t5506) ** (-0.1e1 / 0.2e1)) * ((1 + t5506) ** (-0.1e1 / 0.2e1))

        if Bindx == 266:
            t5543 = np.cos(phi)
            t5542 = t5543 ** 2
            t5546 = t5542 ** 2
            t5545 = t5543 * t5542
            t5548 = t5545 ** 2
            t5550 = t5546 ** 2
            t5547 = t5543 * t5546
            t5552 = t5547 ** 2
            t5554 = t5548 ** 2
            t5549 = t5543 * t5548
            t5556 = t5549 ** 2
            t5558 = t5550 ** 2
            t5561 = -4824 * t5542 + 25700 * t5546 - 22936 * t5548 - 116050 * t5550 + 286968 * t5552 - 210732 * t5554 + 17400 * t5556 + 24273 * t5558 + 201
            t5560 = -5700 * t5545 + 59748 * t5547 - 179652 * t5549 + (188100 * t5550 + 16404 * t5552 - 138100 * t5554 + 55796 * t5556 + 3596 * t5558 - 192) * t5543
            t5544 = 9 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t5560 - t5561) * np.sin((-t5544 + 12 * phi2)) + (t5560 + t5561) * np.sin((t5544 + 12 * phi2))) * ((1 + t5543) ** (-0.1e1 / 0.2e1)) * ((1 - t5543) ** (-0.1e1 / 0.2e1))

        if Bindx == 267:
            t5562 = np.cos(phi)
            t5563 = t5562 ** 2
            t5564 = t5563 ** 2
            t5565 = t5563 * t5564
            t5568 = t5565 ** 2
            t5566 = t5564 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t5564 - 31766 * t5565 + 100890 * t5568 + 5 + (83680 + 8091 * t5566) * t5566 + (-122090 * t5566 - 44370 * t5568 - 430) * t5563) * np.cos((10 * phi1))

        if Bindx == 268:
            t5588 = np.cos(phi)
            t5587 = t5588 ** 2
            t5590 = t5588 * t5587
            t5591 = t5587 ** 2
            t5592 = t5588 * t5591
            t5593 = t5590 ** 2
            t5594 = t5588 * t5593
            t5595 = t5591 ** 2
            t5597 = t5592 ** 2
            t5599 = t5593 ** 2
            t5601 = t5594 ** 2
            t5605 = -4075 * t5590 + 20963 * t5592 - 32659 * t5594 + (-25311 * t5595 + 124407 * t5597 - 123975 * t5599 + 40455 * t5601 + 195) * t5588
            t5604 = 952 * t5587 - 12422 * t5591 + 67804 * t5593 + 232672 * t5597 - 134346 * t5599 + 12876 * t5601 - 14 + (-178310 + 10788 * t5595) * t5595
            t5589 = 10 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * ((t5604 - t5605) * np.cos((-t5589 + 6 * phi2)) + (t5604 + t5605) * np.cos((t5589 + 6 * phi2)))

        if Bindx == 269:
            t5623 = np.cos(phi)
            t5622 = t5623 ** 2
            t5625 = t5623 * t5622
            t5626 = t5622 ** 2
            t5627 = t5623 * t5626
            t5628 = t5625 ** 2
            t5629 = t5623 * t5628
            t5630 = t5626 ** 2
            t5632 = t5627 ** 2
            t5634 = t5628 ** 2
            t5636 = t5629 ** 2
            t5640 = 9091 * t5625 - 40937 * t5627 + 40183 * t5629 + (67353 * t5630 - 127335 * t5632 + 38541 * t5634 + 13485 * t5636 - 381) * t5623
            t5639 = 2604 * t5622 - 936 * t5626 - 49764 * t5628 - 87516 * t5632 - 36296 * t5634 + 38164 * t5636 - 186 + (132132 + 1798 * t5630) * t5630
            t5624 = 10 * phi1
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.70e2) * ((t5639 - t5640) * np.cos((-t5624 + 12 * phi2)) + (t5639 + t5640) * np.cos((t5624 + 12 * phi2)))

        if Bindx == 270:
            t5648 = np.sin(phi)
            t5644 = t5648 ** 2
            t5645 = t5648 * t5644
            t5646 = t5645 ** 2
            t5641 = np.cos(phi)
            t5642 = t5641 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t5641 * t5646 ** 2 * (15 + (-290 + 899 * t5642) * t5642) * np.sin((11 * phi1)) * ((1 + t5641) ** (-0.1e1 / 0.2e1)) * ((1 - t5641) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t5667 = np.cos(phi)
            t5666 = t5667 ** 2
            t5670 = t5666 ** 2
            t5669 = t5667 * t5666
            t5672 = t5669 ** 2
            t5674 = t5670 ** 2
            t5671 = t5667 * t5670
            t5676 = t5671 ** 2
            t5678 = t5672 ** 2
            t5673 = t5667 * t5672
            t5680 = t5673 ** 2
            t5682 = t5674 ** 2
            t5685 = -1798 * t5666 + 16758 * t5670 - 58958 * t5672 + 82676 * t5674 - 5874 * t5676 - 103334 * t5678 + 100166 * t5680 - 29667 * t5682 + 31
            t5684 = 1958 * t5669 - 22946 * t5671 + 106590 * t5673 + (-235774 * t5674 + 262066 * t5676 - 132534 * t5678 + 13514 * t5680 + 7192 * t5682 - 66) * t5667
            t5668 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.62790e5) * (-(t5684 + t5685) * np.sin((-t5668 + 6 * phi2)) + (t5684 - t5685) * np.sin((t5668 + 6 * phi2))) * ((1 + t5667) ** (-0.1e1 / 0.2e1)) * ((1 - t5667) ** (-0.1e1 / 0.2e1))

        if Bindx == 272:
            t5704 = np.cos(phi)
            t5703 = t5704 ** 2
            t5706 = t5704 * t5703
            t5707 = t5703 ** 2
            t5708 = t5704 * t5707
            t5709 = t5706 ** 2
            t5710 = t5704 * t5709
            t5711 = t5707 ** 2
            t5713 = t5708 ** 2
            t5715 = t5709 ** 2
            t5717 = t5710 ** 2
            t5719 = t5711 ** 2
            t5722 = 30668 * t5706 - 62348 * t5708 - 125268 * t5710 + (473044 * t5711 - 364156 * t5713 - 48132 * t5715 + 95236 * t5717 + 3596 * t5719 - 2640) * t5704
            t5721 = 2468 * t5703 + 43272 * t5707 - 224588 * t5709 + 286286 * t5711 + 94380 * t5713 - 354640 * t5715 + 123772 * t5717 + 29667 * t5719 - 617
            t5705 = 11 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.35e2) * (-(-t5721 + t5722) * np.sin((-t5705 + 12 * phi2)) + (t5721 + t5722) * np.sin((t5705 + 12 * phi2))) * ((1 + t5704) ** (-0.1e1 / 0.2e1)) * ((1 - t5704) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t5723 = np.cos(phi)
            t5724 = t5723 ** 2
            t5725 = t5724 ** 2
            t5726 = t5724 * t5725
            t5729 = t5726 ** 2
            t5727 = t5725 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t5725 - 8064 * t5726 + 14532 * t5729 + 3 + (17010 + 899 * t5727) * t5727 + (-20608 * t5727 - 5568 * t5729 - 192) * t5724) * np.cos((12 * phi1))

        if Bindx == 274:
            t5749 = np.cos(phi)
            t5748 = t5749 ** 2
            t5751 = t5749 * t5748
            t5752 = t5748 ** 2
            t5753 = t5749 * t5752
            t5754 = t5751 ** 2
            t5755 = t5749 * t5754
            t5756 = t5752 ** 2
            t5758 = t5753 ** 2
            t5760 = t5754 ** 2
            t5762 = t5755 ** 2
            t5766 = 2859 * t5751 - 15009 * t5753 + 32351 * t5755 + (-24783 * t5756 - 8751 * t5758 + 21605 * t5760 - 8091 * t5762 - 181) * t5749
            t5765 = -276 * t5748 - 104 * t5752 + 11484 * t5754 + 63844 * t5758 - 40200 * t5760 + 6612 * t5762 + 6 + (-43164 + 1798 * t5756) * t5756
            t5750 = 12 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5765 + t5766) * np.cos((-t5750 + 6 * phi2)) + (t5765 - t5766) * np.cos((t5750 + 6 * phi2)))

        if Bindx == 275:
            t5784 = np.cos(phi)
            t5783 = t5784 ** 2
            t5785 = t5784 * t5783
            t5786 = t5783 ** 2
            t5787 = t5784 * t5786
            t5788 = t5785 ** 2
            t5789 = t5784 * t5788
            t5790 = t5786 ** 2
            t5792 = t5787 ** 2
            t5794 = t5788 ** 2
            t5796 = t5789 ** 2
            t5800 = 0.1163547e7 / 0.8192e4 * t5785 + 0.3252249e7 / 0.8192e4 * t5787 - 0.16927053e8 / 0.8192e4 * t5789 + (0.12670515e8 / 0.8192e4 * t5790 + 0.10171161e8 / 0.8192e4 * t5792 - 0.8889573e7 / 0.8192e4 * t5794 - 0.1335015e7 / 0.8192e4 * t5796 - 0.240999e6 / 0.8192e4) * t5784
            t5799 = -0.1066065e7 / 0.2048e4 * t5786 + 0.891891e6 / 0.1024e4 * t5788 - 0.2741739e7 / 0.1024e4 * t5792 + 0.1252251e7 / 0.2048e4 * t5794 + 0.617265e6 / 0.1024e4 * t5796 + 0.39303e5 / 0.1024e4 * t5783 + 0.39303e5 / 0.8192e4 + (0.4374513e7 / 0.4096e4 + 0.148335e6 / 0.8192e4 * t5790) * t5790
            tfunc[..., c] = (t5799 + t5800) * np.cos((12 * phi1 - 12 * phi2)) + (t5799 - t5800) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 276:
            t5807 = np.sin(phi)
            t5802 = t5807 ** 2
            t5803 = t5807 * t5802
            t5805 = t5807 * t5803 ** 2
            t5801 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t5801 * t5805 ** 2 * (31 * t5801 ** 2 - 3) * np.sin((13 * phi1)) * ((1 - t5801) ** (-0.1e1 / 0.2e1)) * ((1 + t5801) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t5826 = np.cos(phi)
            t5825 = t5826 ** 2
            t5829 = t5825 ** 2
            t5828 = t5826 * t5825
            t5831 = t5828 ** 2
            t5833 = t5829 ** 2
            t5830 = t5826 * t5829
            t5835 = t5830 ** 2
            t5837 = t5831 ** 2
            t5832 = t5826 * t5831
            t5839 = t5832 ** 2
            t5841 = t5833 ** 2
            t5844 = 5 - 170 * t5825 + 1722 * t5829 - 6562 * t5831 + 11044 * t5833 - 7326 * t5835 - 1066 * t5837 + 3562 * t5839 - 1209 * t5841
            t5843 = -482 * t5828 + 758 * t5830 + 2838 * t5832 + (-10934 * t5833 + 14042 * t5835 - 7662 * t5837 + 1138 * t5839 + 248 * t5841 + 54) * t5826
            t5827 = 13 * phi1
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.52026e5) * (-(t5843 + t5844) * np.sin((-t5827 + 6 * phi2)) + (t5843 - t5844) * np.sin((t5827 + 6 * phi2))) * ((1 - t5826) ** (-0.1e1 / 0.2e1)) * ((1 + t5826) ** (-0.1e1 / 0.2e1))

        if Bindx == 278:
            t5863 = np.cos(phi)
            t5862 = t5863 ** 2
            t5865 = t5863 * t5862
            t5866 = t5862 ** 2
            t5867 = t5863 * t5866
            t5868 = t5865 ** 2
            t5869 = t5863 * t5868
            t5870 = t5866 ** 2
            t5872 = t5867 ** 2
            t5874 = t5868 ** 2
            t5876 = t5869 ** 2
            t5878 = t5870 ** 2
            t5881 = -52 * t5865 - 49868 * t5867 + 94380 * t5869 + (33748 * t5870 - 144508 * t5872 + 39228 * t5874 + 24580 * t5876 + 620 * t5878 + 1872) * t5863
            t5880 = -4820 * t5862 + 25536 * t5866 + 10556 * t5868 - 140426 * t5870 + 118404 * t5872 + 47320 * t5874 - 50284 * t5876 - 6045 * t5878 - 241
            t5864 = 13 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * (-(t5880 + t5881) * np.sin((-t5864 + 12 * phi2)) + (-t5880 + t5881) * np.sin((t5864 + 12 * phi2))) * ((1 - t5863) ** (-0.1e1 / 0.2e1)) * ((1 + t5863) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t5882 = np.cos(phi)
            t5883 = t5882 ** 2
            t5884 = t5883 ** 2
            t5885 = t5883 * t5884
            t5888 = t5885 ** 2
            t5886 = t5884 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t5884 - 686 * t5885 + 658 * t5888 + 1 + (1120 + 31 * t5886) * t5886 + (-1106 * t5886 - 218 * t5888 - 38) * t5883) * np.cos((14 * phi1))

        if Bindx == 280:
            t5908 = np.cos(phi)
            t5907 = t5908 ** 2
            t5910 = t5908 * t5907
            t5911 = t5907 ** 2
            t5912 = t5908 * t5911
            t5913 = t5910 ** 2
            t5914 = t5908 * t5913
            t5915 = t5911 ** 2
            t5917 = t5912 ** 2
            t5919 = t5913 ** 2
            t5921 = t5914 ** 2
            t5925 = 335 * t5910 - 2599 * t5912 + 6215 * t5914 + (-5885 * t5915 + 1141 * t5917 + 1435 * t5919 - 651 * t5921 + 9) * t5908
            t5924 = -280 * t5907 + 1190 * t5911 - 924 * t5913 + 6336 * t5917 - 4310 * t5919 + 820 * t5921 + 14 + (-2970 + 124 * t5915) * t5915
            t5909 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * ((t5924 + t5925) * np.cos((-t5909 + 6 * phi2)) + (t5924 - t5925) * np.cos((t5909 + 6 * phi2)))

        if Bindx == 281:
            t5943 = np.cos(phi)
            t5942 = t5943 ** 2
            t5945 = t5943 * t5942
            t5946 = t5942 ** 2
            t5947 = t5943 * t5946
            t5948 = t5945 ** 2
            t5949 = t5943 * t5948
            t5950 = t5946 ** 2
            t5952 = t5947 ** 2
            t5954 = t5948 ** 2
            t5956 = t5949 ** 2
            t5960 = 1771 * t5945 - 7553 * t5947 - 4433 * t5949 + (20449 * t5950 - 2639 * t5952 - 7259 * t5954 - 651 * t5956 + 315) * t5943
            t5959 = -1156 * t5942 + 728 * t5946 + 12012 * t5948 - 12012 * t5952 + 9464 * t5954 + 2948 * t5956 - 34 + (-12012 + 62 * t5950) * t5950
            t5944 = 14 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.290e3) * ((t5959 + t5960) * np.cos((-t5944 + 12 * phi2)) + (t5959 - t5960) * np.cos((t5944 + 12 * phi2)))

        if Bindx == 282:
            t5966 = np.sin(phi)
            t5962 = t5966 ** 2
            t5963 = t5962 ** 2
            t5964 = t5963 ** 2
            t5961 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t5961 * t5964 ** 2 * np.sin((15 * phi1)) * ((1 - t5961) ** (-0.1e1 / 0.2e1)) * ((1 + t5961) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t5985 = np.cos(phi)
            t5984 = t5985 ** 2
            t5988 = t5984 ** 2
            t5987 = t5985 * t5984
            t5990 = t5987 ** 2
            t5992 = t5988 ** 2
            t5989 = t5985 * t5988
            t5994 = t5989 ** 2
            t5996 = t5990 ** 2
            t5991 = t5985 * t5990
            t5998 = t5991 ** 2
            t6000 = t5992 ** 2
            t6003 = -3 + 18 * t5984 + 70 * t5988 - 470 * t5990 + 880 * t5992 - 682 * t5994 + 122 * t5996 + 110 * t5998 - 45 * t6000
            t6002 = -110 * t5987 + 298 * t5989 - 198 * t5991 + (-330 * t5992 + 630 * t5994 - 370 * t5996 + 62 * t5998 + 8 * t6000 + 10) * t5985
            t5986 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8064030e7) * (-(t6002 + t6003) * np.sin((-t5986 + 6 * phi2)) + (t6002 - t6003) * np.sin((t5986 + 6 * phi2))) * ((1 - t5985) ** (-0.1e1 / 0.2e1)) * ((1 + t5985) ** (-0.1e1 / 0.2e1))

        if Bindx == 284:
            t6022 = np.cos(phi)
            t6021 = t6022 ** 2
            t6025 = t6021 ** 2
            t6024 = t6022 * t6021
            t6027 = t6024 ** 2
            t6029 = t6025 ** 2
            t6026 = t6022 * t6025
            t6031 = t6026 ** 2
            t6033 = t6027 ** 2
            t6028 = t6022 * t6027
            t6035 = t6028 ** 2
            t6037 = t6029 ** 2
            t6040 = 3 + 144 * t6021 + 308 * t6025 - 1456 * t6027 - 286 * t6029 + 2288 * t6031 - 364 * t6033 - 592 * t6035 - 45 * t6037
            t6039 = -332 * t6024 + 364 * t6026 + 1716 * t6028 + (-1716 * t6029 - 1092 * t6031 + 868 * t6033 + 220 * t6035 + 4 * t6037 - 32) * t6022
            t6023 = 15 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * (-(t6039 + t6040) * np.sin((-t6023 + 12 * phi2)) + (t6039 - t6040) * np.sin((t6023 + 12 * phi2))) * ((1 - t6022) ** (-0.1e1 / 0.2e1)) * ((1 + t6022) ** (-0.1e1 / 0.2e1))

        if Bindx == 285:
            t6041 = np.cos(phi)
            t6042 = t6041 ** 2
            t6050 = -8 * t6042
            t6043 = t6042 ** 2
            t6045 = t6043 ** 2
            t6044 = t6042 * t6043
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t6043 + t6050 + 1 + (-56 * t6042 + 70 + t6045) * t6045 + (-56 + (t6050 + 28) * t6044) * t6044)

        if Bindx == 286:
            t6067 = np.cos(phi)
            t6066 = t6067 ** 2
            t6070 = t6066 ** 2
            t6069 = t6067 * t6066
            t6072 = t6069 ** 2
            t6071 = t6067 * t6070
            t6075 = t6071 ** 2
            t6077 = t6072 ** 2
            t6073 = t6067 * t6072
            t6079 = t6073 ** 2
            t6080 = t6067 * t6079
            t6083 = t6067 * t6080 - 10 * t6066 + 50 * t6070 - 66 * t6072 + 66 * t6075 - 50 * t6077 + 10 * t6079 - 1
            t6082 = -10 * t6069 - 34 * t6071 - 6 * t6080 + (-110 * t6066 + 110) * t6073 + (34 * t6075 + 10 * t6077 + 6) * t6067
            t6068 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * ((t6082 + t6083) * np.cos((-t6068 + 6 * phi2)) + (-t6082 + t6083) * np.cos((t6068 + 6 * phi2)))

        if Bindx == 287:
            t6099 = np.cos(phi)
            t6116 = -12 * t6099
            t6098 = t6099 ** 2
            t6102 = t6098 ** 2
            t6105 = t6102 ** 2
            t6106 = t6099 * t6105
            t6107 = t6098 * t6106
            t6108 = t6099 * t6107
            t6103 = t6099 * t6102
            t6104 = t6098 * t6103
            t6110 = t6104 ** 2
            t6114 = 64 * t6098 + 364 * t6102 + 364 * t6108 + 64 * t6110 + 1 + (-858 + t6105) * t6105
            t6113 = t6110 * t6116 - 364 * t6103 + 572 * t6104 + 572 * t6106 - 364 * t6107 + t6116 - 196 * (t6098 + t6108) * t6099
            t6100 = 16 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8990e4) * ((t6113 + t6114) * np.cos((-t6100 + 12 * phi2)) + (-t6113 + t6114) * np.cos((t6100 + 12 * phi2)))
	
        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

