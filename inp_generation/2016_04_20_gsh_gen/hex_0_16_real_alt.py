import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [2, 0, 1],
                        [2, 1, 1],
                        [2, 2, 1],
                        [4, 0, 1],
                        [4, 1, 1],
                        [4, 2, 1],
                        [4, 3, 1],
                        [4, 4, 1],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 6, 1],
                        [6, 6, 2],
                        [7, 0, 1],
                        [7, 1, 1],
                        [7, 2, 1],
                        [7, 3, 1],
                        [7, 4, 1],
                        [7, 5, 1],
                        [7, 6, 1],
                        [7, 7, 1],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 8, 1],
                        [8, 8, 2],
                        [9, 0, 1],
                        [9, 1, 1],
                        [9, 2, 1],
                        [9, 3, 1],
                        [9, 4, 1],
                        [9, 5, 1],
                        [9, 6, 1],
                        [9, 7, 1],
                        [9, 8, 1],
                        [9, 9, 1],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 10, 1],
                        [10, 10, 2],
                        [11, 0, 1],
                        [11, 1, 1],
                        [11, 2, 1],
                        [11, 3, 1],
                        [11, 4, 1],
                        [11, 5, 1],
                        [11, 6, 1],
                        [11, 7, 1],
                        [11, 8, 1],
                        [11, 9, 1],
                        [11, 10, 1],
                        [11, 11, 1],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [13, 0, 2],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 13, 1],
                        [13, 13, 2],
                        [14, 0, 1],
                        [14, 0, 2],
                        [14, 0, 3],
                        [14, 1, 1],
                        [14, 1, 2],
                        [14, 1, 3],
                        [14, 2, 1],
                        [14, 2, 2],
                        [14, 2, 3],
                        [14, 3, 1],
                        [14, 3, 2],
                        [14, 3, 3],
                        [14, 4, 1],
                        [14, 4, 2],
                        [14, 4, 3],
                        [14, 5, 1],
                        [14, 5, 2],
                        [14, 5, 3],
                        [14, 6, 1],
                        [14, 6, 2],
                        [14, 6, 3],
                        [14, 7, 1],
                        [14, 7, 2],
                        [14, 7, 3],
                        [14, 8, 1],
                        [14, 8, 2],
                        [14, 8, 3],
                        [14, 9, 1],
                        [14, 9, 2],
                        [14, 9, 3],
                        [14, 10, 1],
                        [14, 10, 2],
                        [14, 10, 3],
                        [14, 11, 1],
                        [14, 11, 2],
                        [14, 11, 3],
                        [14, 12, 1],
                        [14, 12, 2],
                        [14, 12, 3],
                        [14, 13, 1],
                        [14, 13, 2],
                        [14, 13, 3],
                        [14, 14, 1],
                        [14, 14, 2],
                        [14, 14, 3],
                        [15, 0, 2],
                        [15, 1, 1],
                        [15, 1, 2],
                        [15, 2, 1],
                        [15, 2, 2],
                        [15, 3, 1],
                        [15, 3, 2],
                        [15, 4, 1],
                        [15, 4, 2],
                        [15, 5, 1],
                        [15, 5, 2],
                        [15, 6, 1],
                        [15, 6, 2],
                        [15, 7, 1],
                        [15, 7, 2],
                        [15, 8, 1],
                        [15, 8, 2],
                        [15, 9, 1],
                        [15, 9, 2],
                        [15, 10, 1],
                        [15, 10, 2],
                        [15, 11, 1],
                        [15, 11, 2],
                        [15, 12, 1],
                        [15, 12, 2],
                        [15, 13, 1],
                        [15, 13, 2],
                        [15, 14, 1],
                        [15, 14, 2],
                        [15, 15, 1],
                        [15, 15, 2],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 0, 3],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 1, 3],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 2, 3],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 3, 3],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 4, 3],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 5, 3],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 6, 3],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 7, 3],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 8, 3],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 9, 3],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 10, 3],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 11, 3],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 12, 3],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 13, 3],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 14, 3],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 15, 3],
                        [16, 16, 1],
                        [16, 16, 2],
                        [16, 16, 3]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t1 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 2:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t3 * t2 ** 2 * np.sin(phi1) * ((1 + t3) ** (-0.1e1 / 0.2e1)) * ((1 - t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t4 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t4 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 4:
            t5 = np.cos(phi)
            t6 = t5 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t6) * t6

        if Bindx == 5:
            t9 = np.cos(phi)
            t8 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t9 * t8 ** 2 * (7 * t9 ** 2 - 3) * np.sin(phi1) * ((1 + t9) ** (-0.1e1 / 0.2e1)) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            t10 = np.cos(phi)
            t11 = t10 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t11) * t11) * np.cos((2 * phi1))

        if Bindx == 7:
            t16 = np.sin(phi)
            t14 = t16 ** 2
            t13 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13 * t14 ** 2 * np.sin((3 * phi1)) * ((1 + t13) ** (-0.1e1 / 0.2e1)) * ((1 - t13) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t18) * t18)

        if Bindx == 9:
            t20 = np.cos(phi)
            t21 = t20 ** 2
            t22 = t21 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t22 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t22 + 0.1365e4 / 0.16e2) * t21

        if Bindx == 10:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            t26 = t25 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t26 - 1 + (t26 + 3) * t25)

        if Bindx == 11:
            t29 = np.cos(phi)
            t30 = t29 ** 2
            t28 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t29 * t28 ** 2 * (5 + (-30 + 33 * t30) * t30) * np.sin(phi1) * ((1 + t29) ** (-0.1e1 / 0.2e1)) * ((1 - t29) ** (-0.1e1 / 0.2e1))

        if Bindx == 12:
            t38 = np.cos(phi)
            t37 = t38 ** 2
            t44 = 1 + (-2 + t37) * t37
            t42 = t44 * t38
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.22e2) * np.sqrt((1 - t38)) * np.sqrt((1 + t38)) * ((t42 - t44) * np.sin((phi1 - 6 * phi2)) + (t42 + t44) * np.sin((phi1 + 6 * phi2)))

        if Bindx == 13:
            t45 = np.cos(phi)
            t46 = t45 ** 2
            t47 = t46 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t47 - 1 + (33 * t47 + 19) * t46) * np.cos((2 * phi1))

        if Bindx == 14:
            t56 = np.cos(phi)
            t55 = t56 ** 2
            t58 = t56 * t55
            t59 = t55 ** 2
            t63 = -2 * t56 * t59 - 2 * t56 + 4 * t58
            t62 = t58 ** 2 - t55 - t59 + 1
            t57 = 2 * phi1
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.55e2) * ((t62 + t63) * np.cos((-t57 + 6 * phi2)) + (t62 - t63) * np.cos((t57 + 6 * phi2)))

        if Bindx == 15:
            t67 = np.sin(phi)
            t65 = t67 ** 2
            t64 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t64 * t65 ** 2 * (11 * t64 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t64) ** (-0.1e1 / 0.2e1)) * ((1 - t64) ** (-0.1e1 / 0.2e1))

        if Bindx == 16:
            t74 = np.cos(phi)
            t73 = t74 ** 2
            t81 = 2 * t73
            t77 = t73 ** 2
            t80 = 1 + t81 - 3 * t77
            t79 = (t77 + t81 - 3) * t74
            t75 = 3 * phi1
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.55e2) * np.sqrt((1 - t74)) * np.sqrt((1 + t74)) * (-(t79 + t80) * np.sin((-t75 + 6 * phi2)) + (t79 - t80) * np.sin((t75 + 6 * phi2)))

        if Bindx == 17:
            t82 = np.cos(phi)
            t83 = t82 ** 2
            t84 = t83 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t84 - 1 + (11 * t84 + 13) * t83) * np.cos((4 * phi1))

        if Bindx == 18:
            t92 = np.cos(phi)
            t91 = t92 ** 2
            t94 = t91 ** 2
            t95 = t92 * t94
            t98 = 4 * t92 - 4 * t95
            t97 = t92 * t95 - 5 * t91 + 5 * t94 - 1
            t93 = 4 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.66e2) * ((t97 + t98) * np.cos((-t93 + 6 * phi2)) + (t97 - t98) * np.cos((t93 + 6 * phi2)))

        if Bindx == 19:
            t103 = np.sin(phi)
            t100 = t103 ** 2
            t101 = t103 * t100
            t99 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t99 * t101 ** 2 * np.sin((5 * phi1)) * ((1 + t99) ** (-0.1e1 / 0.2e1)) * ((1 - t99) ** (-0.1e1 / 0.2e1))

        if Bindx == 20:
            t110 = np.cos(phi)
            t109 = t110 ** 2
            t113 = t109 ** 2
            t116 = -1 - 10 * t109 - 5 * t113
            t115 = (10 * t109 + t113 + 5) * t110
            t111 = 5 * phi1
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.3e1) * np.sqrt((1 - t110)) * np.sqrt((1 + t110)) * (-(t115 + t116) * np.sin((-t111 + 6 * phi2)) + (t115 - t116) * np.sin((t111 + 6 * phi2)))

        if Bindx == 21:
            t117 = np.cos(phi)
            t118 = t117 ** 2
            t119 = t118 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t119 - 1 + (t119 + 3) * t118)

        if Bindx == 22:
            t128 = np.cos(phi)
            t135 = -0.39e2 / 0.32e2 * t128
            t127 = t128 ** 2
            t129 = t128 * t127
            t130 = t127 ** 2
            t134 = -0.65e2 / 0.16e2 * t129 + t130 * t135 + t135
            t133 = 0.13e2 / 0.64e2 * t129 ** 2 + 0.13e2 / 0.64e2 + 0.195e3 / 0.64e2 * t130 + 0.195e3 / 0.64e2 * t127
            tfunc[..., c] = (t133 + t134) * np.cos((6 * phi1 - 6 * phi2)) + (t133 - t134) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 23:
            tfunc[..., c] = 0

        if Bindx == 24:
            t145 = np.cos(phi)
            t144 = t145 ** 2
            t146 = t145 * t144
            t147 = t144 ** 2
            t149 = t146 ** 2
            t153 = 18 * t146 + 6 * (-3 * t147 + t149 - 1) * t145
            t152 = 10 * t144 + 22 * t149 - 1 + (-24 - 7 * t147) * t147
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.858e3) * ((t152 + t153) * np.sin((phi1 - 6 * phi2)) + (-t152 + t153) * np.sin((phi1 + 6 * phi2))) * ((1 + t145) ** (-0.1e1 / 0.2e1)) * ((1 - t145) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t162 = np.cos(phi)
            t161 = t162 ** 2
            t165 = t161 ** 2
            t164 = t162 * t161
            t167 = t164 ** 2
            t170 = 2 - 16 * t161 + 26 * t165 - 12 * t167
            t169 = -t164 + (11 * t165 - 7 * t167 - 3) * t162
            t163 = 2 * phi1
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.143e3) * ((-t169 + t170) * np.cos((-t163 + 6 * phi2)) + (t169 + t170) * np.cos((t163 + 6 * phi2)))

        if Bindx == 26:
            t180 = np.cos(phi)
            t179 = t180 ** 2
            t182 = t180 * t179
            t183 = t179 ** 2
            t185 = t182 ** 2
            t189 = -22 * t182 + (38 * t183 - 18 * t185 + 2) * t180
            t188 = -18 * t179 + 2 * t185 + 3 + (20 - 7 * t183) * t183
            t181 = 3 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.286e3) * (-(-t188 + t189) * np.sin((-t181 + 6 * phi2)) + (t188 + t189) * np.sin((t181 + 6 * phi2))) * ((1 + t180) ** (-0.1e1 / 0.2e1)) * ((1 - t180) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t198 = np.cos(phi)
            t197 = t198 ** 2
            t201 = t197 ** 2
            t200 = t198 * t197
            t203 = t200 ** 2
            t206 = -4 + 8 * t197 + 20 * t201 - 24 * t203
            t205 = 35 * t200 + (-19 * t201 - 7 * t203 - 9) * t198
            t199 = 4 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.26e2) * ((-t205 + t206) * np.cos((-t199 + 6 * phi2)) + (t205 + t206) * np.cos((t199 + 6 * phi2)))

        if Bindx == 28:
            t216 = np.cos(phi)
            t215 = t216 ** 2
            t218 = t216 * t215
            t219 = t215 ** 2
            t221 = t218 ** 2
            t225 = 38 * t218 + (10 * t219 - 30 * t221 - 18) * t216
            t224 = -10 * t215 - 38 * t221 - 5 + (60 - 7 * t219) * t219
            t217 = 5 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.26e2) * (-(-t224 + t225) * np.sin((-t217 + 6 * phi2)) + (t224 + t225) * np.sin((t217 + 6 * phi2))) * ((1 + t216) ** (-0.1e1 / 0.2e1)) * ((1 - t216) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t234 = np.cos(phi)
            t233 = t234 ** 2
            t236 = t233 ** 2
            t235 = t234 * t233
            t238 = t235 ** 2
            t241 = 0.375e3 / 0.32e2 * t236 + 0.135e3 / 0.16e2 * t238 - 0.45e2 / 0.4e1 * t233 - 0.45e2 / 0.32e2
            t240 = 0.225e3 / 0.64e2 * t235 + (-0.1035e4 / 0.64e2 * t236 - 0.105e3 / 0.64e2 * t238 + 0.435e3 / 0.64e2) * t234
            tfunc[..., c] = (t240 + t241) * np.cos((6 * phi1 - 6 * phi2)) + (-t240 + t241) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 30:
            t250 = np.cos(phi)
            t249 = t250 ** 2
            t252 = t250 * t249
            t254 = t252 ** 2
            t255 = t250 * t254
            t258 = -t250 * t255 + 14 * t249 - 14 * t254 + 1
            t257 = 6 * t250 - 6 * t255 + (-14 * t249 + 14) * t252
            t251 = 7 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.14e2) * (-(t257 - t258) * np.sin((-t251 + 6 * phi2)) + (t257 + t258) * np.sin((t251 + 6 * phi2))) * ((1 + t250) ** (-0.1e1 / 0.2e1)) * ((1 - t250) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t259 = np.cos(phi)
            t260 = t259 ** 2
            t261 = t260 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t260 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t260 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t261) * t261

        if Bindx == 32:
            t264 = np.cos(phi)
            t265 = t264 ** 2
            t266 = t265 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.429e3) * (-18 * t265 + 1 + (-46 * t265 + 48 + 15 * t266) * t266) * np.cos((6 * phi2))

        if Bindx == 33:
            t270 = np.cos(phi)
            t271 = t270 ** 2
            t272 = t271 ** 2
            t269 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t270 * t269 ** 2 * (-1001 * t272 - 35 + (715 * t272 + 385) * t271) * np.sin(phi1) * ((1 + t270) ** (-0.1e1 / 0.2e1)) * ((1 - t270) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t284 = np.cos(phi)
            t283 = t284 ** 2
            t286 = t283 ** 2
            t285 = t284 * t283
            t288 = t285 ** 2
            t290 = t286 ** 2
            t293 = -1 + 18 * t283 - 48 * t286 + 46 * t288 - 15 * t290
            t292 = -38 * t285 + (78 * t286 - 66 * t288 + 20 * t290 + 6) * t284
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.858e3) * ((t292 + t293) * np.sin((phi1 - 6 * phi2)) + (t292 - t293) * np.sin((phi1 + 6 * phi2))) * ((1 + t284) ** (-0.1e1 / 0.2e1)) * ((1 - t284) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t294 = np.cos(phi)
            t295 = t294 ** 2
            t296 = t295 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t295 + 1 + (-286 * t295 + 176 + 143 * t296) * t296) * np.cos((2 * phi1))

        if Bindx == 36:
            t307 = np.cos(phi)
            t306 = t307 ** 2
            t309 = t307 * t306
            t310 = t306 ** 2
            t312 = t309 ** 2
            t315 = 2 * t309 + 2 * (-2 * t310 + t312) * t307
            t314 = 1 - 5 * t306 + 7 * t310 - 3 * t312
            t308 = 2 * phi1
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15015e5) * t307 * ((t314 + t315) * np.cos((-t308 + 6 * phi2)) + (-t314 + t315) * np.cos((t308 + 6 * phi2)))

        if Bindx == 37:
            t321 = np.sin(phi)
            t319 = t321 ** 2
            t316 = np.cos(phi)
            t317 = t316 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t316 * t319 ** 2 * (3 + (-26 + 39 * t317) * t317) * np.sin((3 * phi1)) * ((1 + t316) ** (-0.1e1 / 0.2e1)) * ((1 - t316) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t332 = np.cos(phi)
            t331 = t332 ** 2
            t335 = t331 ** 2
            t334 = t332 * t331
            t337 = t334 ** 2
            t339 = t335 ** 2
            t342 = -1 + 14 * t331 - 52 * t335 + 66 * t337 - 27 * t339
            t341 = 22 * t334 - 14 * (t335 + t337) * t332 + (12 * t339 - 6) * t332
            t333 = 3 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.910e3) * (-(t341 + t342) * np.sin((-t333 + 6 * phi2)) + (t341 - t342) * np.sin((t333 + 6 * phi2))) * ((1 + t332) ** (-0.1e1 / 0.2e1)) * ((1 - t332) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t344 = np.cos(phi)
            t345 = t344 ** 2
            t346 = t345 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t345 + 1 + (-156 * t345 + 118 + 65 * t346) * t346) * np.cos((4 * phi1))

        if Bindx == 40:
            t358 = np.cos(phi)
            t357 = t358 ** 2
            t360 = t358 * t357
            t361 = t357 ** 2
            t363 = t360 ** 2
            t367 = -5 * t360 + (21 * t361 - 15 * t363 - 1) * t358
            t366 = 10 * t357 + 6 * t363 - 1 + (-20 + 5 * t361) * t361
            t359 = 4 * phi1
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.546e3) * ((t366 + t367) * np.cos((-t359 + 6 * phi2)) + (t366 - t367) * np.cos((t359 + 6 * phi2)))

        if Bindx == 41:
            t372 = np.sin(phi)
            t369 = t372 ** 2
            t370 = t372 * t369
            t368 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t368 * t370 ** 2 * (5 * t368 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t368) ** (-0.1e1 / 0.2e1)) * ((1 - t368) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t383 = np.cos(phi)
            t382 = t383 ** 2
            t386 = t382 ** 2
            t385 = t383 * t382
            t388 = t385 ** 2
            t390 = t386 ** 2
            t393 = 7 - 42 * t382 + 20 * t386 + 90 * t388 - 75 * t390
            t392 = 90 * t385 + (-162 * t386 + 62 * t388 + 20 * t390 - 10) * t383
            t384 = 5 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.42e2) * (-(t392 + t393) * np.sin((-t384 + 6 * phi2)) + (t392 - t393) * np.sin((t384 + 6 * phi2))) * ((1 + t383) ** (-0.1e1 / 0.2e1)) * ((1 - t383) ** (-0.1e1 / 0.2e1))

        if Bindx == 43:
            t394 = np.cos(phi)
            t395 = t394 ** 2
            t396 = t395 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t395 + 1 + (-46 * t395 + 48 + 15 * t396) * t396) * np.cos((6 * phi1))

        if Bindx == 44:
            t407 = np.cos(phi)
            t408 = t407 ** 2
            t410 = t408 ** 2
            t409 = t407 * t408
            t412 = t409 ** 2
            t416 = 0.833e3 / 0.16e2 * t412 + 0.17e2 / 0.4e1 + (-0.1785e4 / 0.32e2 + 0.255e3 / 0.32e2 * t410) * t410
            t415 = 0.2975e4 / 0.64e2 * t409 + (-0.2295e4 / 0.64e2 * t412 - 0.357e3 / 0.64e2 * t410 - 0.867e3 / 0.64e2) * t407
            tfunc[..., c] = (t415 + t416) * np.cos((6 * phi1 - 6 * phi2)) + (-t415 + t416) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 45:
            t421 = np.sin(phi)
            t418 = t421 ** 2
            t419 = t418 ** 2
            t417 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t417 * t419 ** 2 * np.sin((7 * phi1)) * ((1 + t417) ** (-0.1e1 / 0.2e1)) * ((1 - t417) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t432 = np.cos(phi)
            t431 = t432 ** 2
            t435 = t431 ** 2
            t434 = t432 * t431
            t437 = t434 ** 2
            t439 = t435 ** 2
            t442 = -3 - 18 * t431 + 56 * t435 - 14 * t437 - 21 * t439
            t441 = -14 * t434 + (-42 * t435 + 38 * t437 + 4 * t439 + 14) * t432
            t433 = 7 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.30e2) * (-(t441 + t442) * np.sin((-t433 + 6 * phi2)) + (t441 - t442) * np.sin((t433 + 6 * phi2))) * ((1 + t432) ** (-0.1e1 / 0.2e1)) * ((1 - t432) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t443 = np.cos(phi)
            t444 = t443 ** 2
            t448 = -4 * t444
            t445 = t444 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t448 + 1 + (t448 + 6 + t445) * t445)

        if Bindx == 48:
            t457 = np.cos(phi)
            t456 = t457 ** 2
            t466 = -14 * t456
            t459 = t457 * t456
            t461 = t459 ** 2
            t462 = t457 * t461
            t465 = t457 * t462 + 14 * t461 + t466 - 1
            t464 = 6 * t457 - 6 * t462 + (t466 + 14) * t459
            t458 = 8 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.30e2) * ((t464 + t465) * np.cos((-t458 + 6 * phi2)) + (-t464 + t465) * np.cos((t458 + 6 * phi2)))

        if Bindx == 49:
            tfunc[..., c] = 0

        if Bindx == 50:
            t478 = np.cos(phi)
            t477 = t478 ** 2
            t479 = t478 * t477
            t480 = t477 ** 2
            t481 = t478 * t480
            t482 = t479 ** 2
            t484 = t480 ** 2
            t488 = 52 * t479 - 120 * t481 + (108 * t482 - 34 * t484 - 6) * t478
            t487 = -51 * t481 ** 2 - 27 * t477 + 126 * t480 - 226 * t482 + 177 * t484 + 1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.858e3) * ((-t487 + t488) * np.sin((phi1 - 6 * phi2)) + (t487 + t488) * np.sin((phi1 + 6 * phi2))) * ((1 + t478) ** (-0.1e1 / 0.2e1)) * ((1 - t478) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t499 = np.cos(phi)
            t498 = t499 ** 2
            t502 = t498 ** 2
            t501 = t499 * t498
            t504 = t501 ** 2
            t506 = t502 ** 2
            t509 = 3 - 75 * t498 + 277 * t502 - 341 * t504 + 136 * t506
            t508 = 44 * t501 + (-178 * t502 + 240 * t504 - 102 * t506 - 4) * t499
            t500 = 2 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * ((t508 + t509) * np.cos((-t500 + 6 * phi2)) + (-t508 + t509) * np.cos((t500 + 6 * phi2)))

        if Bindx == 52:
            t521 = np.cos(phi)
            t520 = t521 ** 2
            t523 = t521 * t520
            t524 = t520 ** 2
            t525 = t521 * t524
            t526 = t523 ** 2
            t528 = t524 ** 2
            t532 = -98 * t523 + 262 * t525 + (-278 * t526 + 102 * t528 + 12) * t521
            t531 = -51 * t525 ** 2 + 23 * t520 - 52 * t524 - 12 * t526 + 93 * t528 - 1
            t522 = 3 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.91e2) * (-(t531 + t532) * np.sin((-t522 + 6 * phi2)) + (-t531 + t532) * np.sin((t522 + 6 * phi2))) * ((1 + t521) ** (-0.1e1 / 0.2e1)) * ((1 - t521) ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t543 = np.cos(phi)
            t542 = t543 ** 2
            t546 = t542 ** 2
            t545 = t543 * t542
            t548 = t545 ** 2
            t550 = t546 ** 2
            t553 = 1 - 19 * t542 + 131 * t546 - 249 * t548 + 136 * t550
            t552 = -106 * t545 + (144 * t546 - 6 * t548 - 51 * t550 + 19) * t543
            t544 = 4 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.42e2) * ((t552 + t553) * np.cos((-t544 + 6 * phi2)) + (-t552 + t553) * np.cos((t544 + 6 * phi2)))

        if Bindx == 54:
            t565 = np.cos(phi)
            t564 = t565 ** 2
            t567 = t565 * t564
            t568 = t564 ** 2
            t569 = t565 * t568
            t570 = t567 ** 2
            t572 = t568 ** 2
            t576 = 30 * t567 + 126 * t569 + (-310 * t570 + 170 * t572 - 16) * t565
            t575 = -51 * t569 ** 2 + 75 * t564 - 280 * t568 + 336 * t570 - 75 * t572 - 5
            t566 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * (-(t575 + t576) * np.sin((-t566 + 6 * phi2)) + (-t575 + t576) * np.sin((t566 + 6 * phi2))) * ((1 + t565) ** (-0.1e1 / 0.2e1)) * ((1 - t565) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t587 = np.cos(phi)
            t586 = t587 ** 2
            t589 = t586 ** 2
            t588 = t587 * t586
            t591 = t588 ** 2
            t593 = t589 ** 2
            t596 = 0.3933e4 / 0.64e2 * t586 - 0.5187e4 / 0.64e2 * t589 - 0.5453e4 / 0.64e2 * t591 + 0.969e3 / 0.8e1 * t593 - 0.437e3 / 0.64e2
            t595 = -0.1463e4 / 0.16e2 * t588 + (0.7581e4 / 0.32e2 * t589 - 0.513e3 / 0.4e1 * t591 - 0.969e3 / 0.32e2 * t593 + 0.57e2 / 0.16e2) * t587
            tfunc[..., c] = (t595 + t596) * np.cos((6 * phi1 - 6 * phi2)) + (-t595 + t596) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 56:
            t608 = np.cos(phi)
            t607 = t608 ** 2
            t610 = t608 * t607
            t611 = t607 ** 2
            t612 = t608 * t611
            t613 = t610 ** 2
            t615 = t611 ** 2
            t619 = -352 * t610 + 420 * t612 + (112 * t613 - 238 * t615 + 58) * t608
            t618 = -51 * t612 ** 2 - 63 * t607 - 238 * t611 + 658 * t613 - 327 * t615 + 21
            t609 = 7 * phi1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.3e1) * (-(-t618 + t619) * np.sin((-t609 + 6 * phi2)) + (t618 + t619) * np.sin((t609 + 6 * phi2))) * ((1 + t608) ** (-0.1e1 / 0.2e1)) * ((1 - t608) ** (-0.1e1 / 0.2e1))

        if Bindx == 57:
            t630 = np.cos(phi)
            t629 = t630 ** 2
            t633 = t629 ** 2
            t632 = t630 * t629
            t635 = t632 ** 2
            t637 = t633 ** 2
            t640 = -2 - 10 * t629 + 42 * t633 - 14 * t635 - 16 * t637
            t639 = 14 * t632 + (28 * t633 - 30 * t635 - 3 * t637 - 9) * t630
            t631 = 8 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.102e3) * ((-t639 + t640) * np.cos((-t631 + 6 * phi2)) + (t639 + t640) * np.cos((t631 + 6 * phi2)))

        if Bindx == 58:
            t649 = np.cos(phi)
            t648 = t649 ** 2
            t651 = t649 * t648
            t653 = t651 ** 2
            t654 = t649 * t653
            t657 = -t649 * t654 + 14 * t648 - 14 * t653 + 1
            t656 = 6 * t649 - 6 * t654 + (-14 * t648 + 14) * t651
            t650 = 9 * phi1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.51e2) * np.sqrt((1 - t649)) * np.sqrt((1 + t649)) * (-(t656 - t657) * np.sin((-t650 + 6 * phi2)) + (t656 + t657) * np.sin((t650 + 6 * phi2)))

        if Bindx == 59:
            t658 = np.cos(phi)
            t659 = t658 ** 2
            t660 = t659 ** 2
            t662 = t660 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t662 - 0.315315e6 / 0.128e3 * t660 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t662 + 0.945945e6 / 0.128e3 * t660 + 0.72765e5 / 0.256e3) * t659

        if Bindx == 60:
            t664 = np.cos(phi)
            t665 = t664 ** 2
            t666 = t665 ** 2
            t668 = t666 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2145e4) * (-638 * t666 - 1071 * t668 - 3 + (1278 * t666 + 323 * t668 + 111) * t665) * np.cos((6 * phi2))

        if Bindx == 61:
            t671 = np.cos(phi)
            t672 = t671 ** 2
            t673 = t672 ** 2
            t670 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t671 * t670 ** 2 * (-1092 * t672 + 63 + (-7956 * t672 + 4914 + 4199 * t673) * t673) * np.sin(phi1) * ((1 + t671) ** (-0.1e1 / 0.2e1)) * ((1 - t671) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t688 = np.cos(phi)
            t687 = t688 ** 2
            t690 = t687 ** 2
            t689 = t688 * t687
            t692 = t689 ** 2
            t694 = t690 ** 2
            t691 = t688 * t690
            t696 = t691 ** 2
            t699 = 9 - 333 * t687 + 1914 * t690 - 3834 * t692 + 3213 * t694 - 969 * t696
            t698 = 1387 * t689 - 5110 * t691 + (8118 * t692 - 5899 * t694 + 1615 * t696 - 111) * t688
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.78e2) * ((t698 + t699) * np.sin((phi1 - 6 * phi2)) + (t698 - t699) * np.sin((phi1 + 6 * phi2))) * ((1 + t688) ** (-0.1e1 / 0.2e1)) * ((1 - t688) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t700 = np.cos(phi)
            t701 = t700 ** 2
            t702 = t701 ** 2
            t704 = t702 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t702 - 10387 * t704 - 7 + (8918 * t702 + 4199 * t704 + 371) * t701) * np.cos((2 * phi1))

        if Bindx == 64:
            t717 = np.cos(phi)
            t716 = t717 ** 2
            t719 = t717 * t716
            t720 = t716 ** 2
            t721 = t717 * t720
            t722 = t719 ** 2
            t724 = t720 ** 2
            t728 = 4888 * t719 - 14276 * t721 + (15640 * t722 - 5814 * t724 - 438) * t717
            t727 = 4845 * t721 ** 2 + 665 * t716 - 4486 * t720 + 11898 * t722 - 12903 * t724 - 19
            t718 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.26e2) * ((t727 + t728) * np.cos((-t718 + 6 * phi2)) + (t727 - t728) * np.cos((t718 + 6 * phi2)))

        if Bindx == 65:
            t735 = np.sin(phi)
            t733 = t735 ** 2
            t729 = np.cos(phi)
            t730 = t729 ** 2
            t731 = t730 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t729 * t733 ** 2 * (-357 * t731 - 7 + (323 * t731 + 105) * t730) * np.sin((3 * phi1)) * ((1 + t729) ** (-0.1e1 / 0.2e1)) * ((1 - t729) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t748 = np.cos(phi)
            t747 = t748 ** 2
            t751 = t747 ** 2
            t750 = t748 * t747
            t753 = t750 ** 2
            t755 = t751 ** 2
            t752 = t748 * t751
            t757 = t752 ** 2
            t760 = 69 - 2277 * t747 + 12898 * t751 - 27962 * t753 + 25993 * t755 - 8721 * t757
            t759 = -1423 * t750 + 662 * t752 + (7122 * t753 - 11373 * t755 + 4845 * t757 + 167) * t748
            t749 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.256e3 * (-(t759 + t760) * np.sin((-t749 + 6 * phi2)) + (t759 - t760) * np.sin((t749 + 6 * phi2))) * ((1 + t748) ** (-0.1e1 / 0.2e1)) * ((1 - t748) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t761 = np.cos(phi)
            t762 = t761 ** 2
            t763 = t762 ** 2
            t765 = t763 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t763 - 901 * t765 - 1 + (878 * t763 + 323 * t765 + 47) * t762) * np.cos((4 * phi1))

        if Bindx == 68:
            t778 = np.cos(phi)
            t777 = t778 ** 2
            t780 = t778 * t777
            t781 = t777 ** 2
            t782 = t778 * t781
            t783 = t780 ** 2
            t785 = t781 ** 2
            t789 = 5032 * t780 - 18368 * t782 + (25432 * t783 - 11628 * t785 - 468) * t778
            t788 = 4845 * t782 ** 2 - 2407 * t777 + 8918 * t781 - 8022 * t783 - 3417 * t785 + 83
            t779 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * ((t788 + t789) * np.cos((-t779 + 6 * phi2)) + (t788 - t789) * np.cos((t779 + 6 * phi2)))

        if Bindx == 69:
            t796 = np.sin(phi)
            t793 = t796 ** 2
            t794 = t796 * t793
            t790 = np.cos(phi)
            t791 = t790 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t790 * t794 ** 2 * (15 + (-170 + 323 * t791) * t791) * np.sin((5 * phi1)) * ((1 + t790) ** (-0.1e1 / 0.2e1)) * ((1 - t790) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t809 = np.cos(phi)
            t808 = t809 ** 2
            t812 = t808 ** 2
            t811 = t809 * t808
            t814 = t811 ** 2
            t816 = t812 ** 2
            t813 = t809 * t812
            t818 = t813 ** 2
            t821 = -1 + 25 * t808 + 1110 * t812 - 4942 * t814 + 6715 * t816 - 2907 * t818
            t820 = -2035 * t811 + 5278 * t813 + (-4710 * t814 + 255 * t816 + 969 * t818 + 243) * t809
            t810 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.5e1) * (-(t820 + t821) * np.sin((-t810 + 6 * phi2)) + (t820 - t821) * np.sin((t810 + 6 * phi2))) * ((1 + t809) ** (-0.1e1 / 0.2e1)) * ((1 - t809) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t822 = np.cos(phi)
            t823 = t822 ** 2
            t824 = t823 ** 2
            t826 = t824 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t824 - 1071 * t826 - 3 + (1278 * t824 + 323 * t826 + 111) * t823) * np.cos((6 * phi1))

        if Bindx == 72:
            t839 = np.cos(phi)
            t838 = t839 ** 2
            t840 = t839 * t838
            t841 = t838 ** 2
            t842 = t839 * t841
            t843 = t840 ** 2
            t845 = t841 ** 2
            t849 = -0.16191e5 / 0.128e3 * t840 - 0.10143e5 / 0.256e3 * t842 + (0.61761e5 / 0.128e3 * t843 - 0.183141e6 / 0.512e3 * t845 + 0.15771e5 / 0.512e3) * t839
            t848 = 0.101745e6 / 0.1024e4 * t842 ** 2 - 0.94563e5 / 0.1024e4 * t838 + 0.235641e6 / 0.512e3 * t841 - 0.366471e6 / 0.512e3 * t843 + 0.260253e6 / 0.1024e4 * t845 + 0.4977e4 / 0.1024e4
            tfunc[..., c] = (t848 + t849) * np.cos((6 * phi1 - 6 * phi2)) + (t848 - t849) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 73:
            t854 = np.sin(phi)
            t851 = t854 ** 2
            t852 = t851 ** 2
            t850 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t850 * t852 ** 2 * (19 * t850 ** 2 - 3) * np.sin((7 * phi1)) * ((1 + t850) ** (-0.1e1 / 0.2e1)) * ((1 - t850) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t867 = np.cos(phi)
            t866 = t867 ** 2
            t870 = t866 ** 2
            t869 = t867 * t866
            t872 = t869 ** 2
            t874 = t870 ** 2
            t871 = t867 * t870
            t876 = t871 ** 2
            t879 = -43 + 559 * t866 - 1566 * t870 + 686 * t872 + 1561 * t874 - 1197 * t876
            t878 = -511 * t869 + 2590 * t871 + (-3534 * t872 + 1191 * t874 + 285 * t876 - 21) * t867
            t868 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * (-(t878 + t879) * np.sin((-t868 + 6 * phi2)) + (t878 - t879) * np.sin((t868 + 6 * phi2))) * ((1 + t867) ** (-0.1e1 / 0.2e1)) * ((1 - t867) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t880 = np.cos(phi)
            t881 = t880 ** 2
            t882 = t881 ** 2
            t884 = t882 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t882 - 77 * t884 - 1 + (118 * t882 + 19 * t884 + 23) * t881) * np.cos((8 * phi1))

        if Bindx == 76:
            t897 = np.cos(phi)
            t896 = t897 ** 2
            t899 = t897 * t896
            t900 = t896 ** 2
            t901 = t897 * t900
            t902 = t899 ** 2
            t904 = t900 ** 2
            t908 = -592 * t899 + 896 * t901 + (80 * t902 - 456 * t904 + 72) * t897
            t907 = 95 * t901 ** 2 + 155 * t896 + 266 * t900 - 1162 * t902 + 677 * t904 - 31
            t898 = 8 * phi1
            tfunc[..., c] = -0.21e2 / 0.1024e4 * np.sqrt(0.102e3) * ((t907 + t908) * np.cos((-t898 + 6 * phi2)) + (t907 - t908) * np.cos((t898 + 6 * phi2)))

        if Bindx == 77:
            t914 = np.sin(phi)
            t910 = t914 ** 2
            t912 = t914 * t910 ** 2
            t909 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t909 * t912 ** 2 * np.sin((9 * phi1)) * ((1 + t909) ** (-0.1e1 / 0.2e1)) * ((1 - t909) ** (-0.1e1 / 0.2e1))

        if Bindx == 78:
            t927 = np.cos(phi)
            t926 = t927 ** 2
            t930 = t926 ** 2
            t929 = t927 * t926
            t932 = t929 ** 2
            t934 = t930 ** 2
            t931 = t927 * t930
            t936 = t931 ** 2
            t939 = 3 + 9 * t926 - 82 * t930 + 98 * t932 - t934 - 27 * t936
            t938 = 41 * t929 + 14 * t931 + (-94 * t932 + 47 * t934 + 5 * t936 - 13) * t927
            t928 = 9 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.969e3) * (-(t938 + t939) * np.sin((-t928 + 6 * phi2)) + (t938 - t939) * np.sin((t928 + 6 * phi2))) * ((1 + t927) ** (-0.1e1 / 0.2e1)) * ((1 - t927) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t940 = np.cos(phi)
            t941 = t940 ** 2
            t942 = t941 ** 2
            t944 = t942 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t942 - 5 * t944 - 1 + (10 * t942 + t944 + 5) * t941)

        if Bindx == 80:
            t957 = np.cos(phi)
            t969 = -6 * t957
            t956 = t957 ** 2
            t959 = t957 * t956
            t960 = t956 ** 2
            t961 = t957 * t960
            t962 = t959 ** 2
            t964 = t960 ** 2
            t968 = -8 * t957 * t962 + t964 * t969 - 8 * t959 + 28 * t961 + t969
            t967 = t961 ** 2 + 13 * t956 - 14 * t960 - 14 * t962 + 13 * t964 + 1
            t958 = 10 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.4845e4) * ((t967 + t968) * np.cos((-t958 + 6 * phi2)) + (t967 - t968) * np.cos((t958 + 6 * phi2)))

        if Bindx == 81:
            tfunc[..., c] = 0

        if Bindx == 82:
            t983 = np.cos(phi)
            t982 = t983 ** 2
            t984 = t983 * t982
            t985 = t982 ** 2
            t986 = t983 * t985
            t987 = t984 ** 2
            t989 = t985 ** 2
            t991 = t986 ** 2
            t995 = -470 * t984 + 2028 * t986 + (-3564 * t987 + 2774 * t989 - 798 * t991 + 30) * t983
            t994 = 240 * t982 - 1925 * t985 - 8319 * t989 + 5624 * t991 - 5 + (5848 - 1463 * t987) * t987
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.221e3) * ((-t994 + t995) * np.sin((phi1 - 6 * phi2)) + (t994 + t995) * np.sin((phi1 + 6 * phi2))) * ((1 + t983) ** (-0.1e1 / 0.2e1)) * ((1 - t983) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t1008 = np.cos(phi)
            t1007 = t1008 ** 2
            t1011 = t1007 ** 2
            t1010 = t1008 * t1007
            t1013 = t1010 ** 2
            t1015 = t1011 ** 2
            t1012 = t1008 * t1011
            t1017 = t1012 ** 2
            t1020 = -6 + 276 * t1007 - 1940 * t1011 + 4672 * t1013 - 4598 * t1015 + 1596 * t1017
            t1019 = 459 * t1010 - 2218 * t1012 + (4638 * t1013 - 4313 * t1015 + 1463 * t1017 - 29) * t1008
            t1009 = 2 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.170e3) * ((-t1019 + t1020) * np.cos((-t1009 + 6 * phi2)) + (t1019 + t1020) * np.cos((t1009 + 6 * phi2)))

        if Bindx == 84:
            t1034 = np.cos(phi)
            t1033 = t1034 ** 2
            t1036 = t1034 * t1033
            t1037 = t1033 ** 2
            t1038 = t1034 * t1037
            t1039 = t1036 ** 2
            t1041 = t1037 ** 2
            t1043 = t1038 ** 2
            t1047 = 1502 * t1036 - 6460 * t1038 + (11900 * t1039 - 9918 * t1041 + 3078 * t1043 - 102) * t1034
            t1046 = -44 * t1033 + 13 * t1037 - 4917 * t1041 + 5244 * t1043 + 1 + (1584 - 1881 * t1039) * t1039
            t1035 = 3 * phi1
            tfunc[..., c] = 0.23e2 / 0.1024e4 * np.sqrt(0.595e3) * (-(t1046 + t1047) * np.sin((-t1035 + 6 * phi2)) + (-t1046 + t1047) * np.sin((t1035 + 6 * phi2))) * ((1 + t1034) ** (-0.1e1 / 0.2e1)) * ((1 - t1034) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t1060 = np.cos(phi)
            t1059 = t1060 ** 2
            t1063 = t1059 ** 2
            t1062 = t1060 * t1059
            t1065 = t1062 ** 2
            t1067 = t1063 ** 2
            t1064 = t1060 * t1063
            t1069 = t1064 ** 2
            t1072 = 4 - 160 * t1059 + 1120 * t1063 - 3016 * t1065 + 3420 * t1067 - 1368 * t1069
            t1071 = 345 * t1062 - 874 * t1064 + (330 * t1065 + 855 * t1067 - 627 * t1069 - 29) * t1060
            t1061 = 4 * phi1
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.714e3) * ((-t1071 + t1072) * np.cos((-t1061 + 6 * phi2)) + (t1071 + t1072) * np.cos((t1061 + 6 * phi2)))

        if Bindx == 86:
            t1086 = np.cos(phi)
            t1085 = t1086 ** 2
            t1088 = t1086 * t1085
            t1089 = t1085 ** 2
            t1090 = t1086 * t1089
            t1091 = t1088 ** 2
            t1093 = t1089 ** 2
            t1095 = t1090 ** 2
            t1099 = -2090 * t1088 + 12852 * t1090 + (-31412 * t1091 + 32490 * t1093 - 11970 * t1095 + 130) * t1086
            t1098 = -1908 * t1085 + 10745 * t1089 + 13815 * t1093 + 2964 * t1095 + 53 + (-21280 - 4389 * t1091) * t1091
            t1087 = 5 * phi1
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.102e3) * (-(-t1098 + t1099) * np.sin((-t1087 + 6 * phi2)) + (t1098 + t1099) * np.sin((t1087 + 6 * phi2))) * ((1 + t1086) ** (-0.1e1 / 0.2e1)) * ((1 - t1086) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t1112 = np.cos(phi)
            t1111 = t1112 ** 2
            t1114 = t1111 ** 2
            t1113 = t1112 * t1111
            t1116 = t1113 ** 2
            t1118 = t1114 ** 2
            t1115 = t1112 * t1114
            t1120 = t1115 ** 2
            t1123 = -0.16215e5 / 0.256e3 * t1111 + 0.2415e4 / 0.256e3 * t1114 + 0.28819e5 / 0.32e2 * t1116 - 0.924255e6 / 0.512e3 * t1118 + 0.247779e6 / 0.256e3 * t1120 + 0.1081e4 / 0.512e3
            t1122 = 0.501515e6 / 0.1024e4 * t1113 - 0.803229e6 / 0.512e3 * t1115 + (0.915975e6 / 0.512e3 * t1116 - 0.386745e6 / 0.1024e4 * t1118 - 0.302841e6 / 0.1024e4 * t1120 - 0.49197e5 / 0.1024e4) * t1112
            tfunc[..., c] = (t1122 + t1123) * np.cos((6 * phi1 - 6 * phi2)) + (-t1122 + t1123) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 88:
            t1137 = np.cos(phi)
            t1136 = t1137 ** 2
            t1139 = t1137 * t1136
            t1140 = t1136 ** 2
            t1141 = t1137 * t1140
            t1142 = t1139 ** 2
            t1144 = t1140 ** 2
            t1146 = t1141 ** 2
            t1150 = 2694 * t1139 - 3948 * t1141 + (-3668 * t1142 + 10906 * t1144 - 5586 * t1146 - 398) * t1137
            t1149 = -840 * t1136 + 6251 * t1140 + 15849 * t1144 - 3648 * t1146 + 35 + (-16184 - 1463 * t1142) * t1142
            t1138 = 7 * phi1
            tfunc[..., c] = -0.69e2 / 0.2048e4 * np.sqrt(0.10e2) * (-(-t1149 + t1150) * np.sin((-t1138 + 6 * phi2)) + (t1149 + t1150) * np.sin((t1138 + 6 * phi2))) * ((1 + t1137) ** (-0.1e1 / 0.2e1)) * ((1 - t1137) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t1163 = np.cos(phi)
            t1162 = t1163 ** 2
            t1166 = t1162 ** 2
            t1165 = t1163 * t1162
            t1168 = t1165 ** 2
            t1170 = t1166 ** 2
            t1167 = t1163 * t1166
            t1172 = t1167 ** 2
            t1175 = -8 + 128 * t1162 - 448 * t1166 + 336 * t1168 + 328 * t1170 - 336 * t1172
            t1174 = 63 * t1165 - 574 * t1167 + (958 * t1168 - 383 * t1170 - 77 * t1172 + 13) * t1163
            t1164 = 8 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.190e3) * ((-t1174 + t1175) * np.cos((-t1164 + 6 * phi2)) + (t1174 + t1175) * np.cos((t1164 + 6 * phi2)))

        if Bindx == 90:
            t1189 = np.cos(phi)
            t1188 = t1189 ** 2
            t1191 = t1189 * t1188
            t1192 = t1188 ** 2
            t1193 = t1189 * t1192
            t1194 = t1191 ** 2
            t1196 = t1192 ** 2
            t1198 = t1193 ** 2
            t1202 = 1402 * t1191 - 3668 * t1193 + (2452 * t1194 + 1062 * t1196 - 1134 * t1198 - 114) * t1189
            t1201 = 488 * t1188 - 133 * t1192 + 4457 * t1196 - 1552 * t1198 - 61 + (-2968 - 231 * t1194) * t1194
            t1190 = 9 * phi1
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(-t1201 + t1202) * np.sin((-t1190 + 6 * phi2)) + (t1201 + t1202) * np.sin((t1190 + 6 * phi2))) * ((1 + t1189) ** (-0.1e1 / 0.2e1)) * ((1 - t1189) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t1215 = np.cos(phi)
            t1214 = t1215 ** 2
            t1218 = t1214 ** 2
            t1217 = t1215 * t1214
            t1220 = t1217 ** 2
            t1222 = t1218 ** 2
            t1219 = t1215 * t1218
            t1224 = t1219 ** 2
            t1227 = -6 - 12 * t1214 + 172 * t1218 - 224 * t1220 + 10 * t1222 + 60 * t1224
            t1226 = -95 * t1217 - 14 * t1219 + (202 * t1220 - 107 * t1222 - 11 * t1224 + 25) * t1215
            t1216 = 10 * phi1
            tfunc[..., c] = 0.69e2 / 0.1024e4 * np.sqrt(0.133e3) * ((t1226 + t1227) * np.cos((-t1216 + 6 * phi2)) + (-t1226 + t1227) * np.cos((t1216 + 6 * phi2)))

        if Bindx == 92:
            t1239 = np.cos(phi)
            t1251 = -6 * t1239
            t1238 = t1239 ** 2
            t1241 = t1239 * t1238
            t1242 = t1238 ** 2
            t1243 = t1239 * t1242
            t1244 = t1241 ** 2
            t1246 = t1242 ** 2
            t1250 = -8 * t1239 * t1244 + t1246 * t1251 - 8 * t1241 + 28 * t1243 + t1251
            t1249 = -t1243 ** 2 - 13 * t1238 + 14 * t1242 + 14 * t1244 - 13 * t1246 - 1
            t1240 = 11 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.2926e4) * np.sqrt((1 - t1239)) * np.sqrt((1 + t1239)) * (-(-t1249 + t1250) * np.sin((-t1240 + 6 * phi2)) + (t1249 + t1250) * np.sin((t1240 + 6 * phi2)))

        if Bindx == 93:
            t1252 = np.cos(phi)
            t1253 = t1252 ** 2
            t1254 = t1253 ** 2
            t1256 = t1254 ** 2
            t1255 = t1253 * t1254
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t1256 + 0.5630625e7 / 0.1024e4 * t1254 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t1255) * t1255 + (-0.24249225e8 / 0.512e3 * t1256 - 0.225225e6 / 0.512e3) * t1253

        if Bindx == 94:
            t1259 = np.cos(phi)
            t1260 = t1259 ** 2
            t1261 = t1260 ** 2
            t1263 = t1261 ** 2
            t1262 = t1260 * t1261
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2431e4) * (2865 * t1261 + 15447 * t1263 + 5 + (-9904 + 3059 * t1262) * t1262 + (-11172 * t1263 - 300) * t1260) * np.cos((6 * phi2))

        if Bindx == 95:
            t1266 = np.cos(phi)
            t1267 = t1266 ** 2
            t1273 = -6 * t1267
            t1268 = t1267 ** 2
            t1269 = t1267 * t1268
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t1273 + 1 + (-20 + t1269) * t1269 + (15 + (t1273 + 15) * t1268) * t1268)

        if Bindx == 96:
            t1275 = np.cos(phi)
            t1276 = t1275 ** 2
            t1277 = t1276 ** 2
            t1279 = t1277 ** 2
            t1274 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t1275 * t1274 ** 2 * (-39270 * t1277 - 124355 * t1279 - 231 + (106590 * t1277 + 52003 * t1279 + 5775) * t1276) * np.sin(phi1) * ((1 + t1275) ** (-0.1e1 / 0.2e1)) * ((1 - t1275) ** (-0.1e1 / 0.2e1))

        if Bindx == 97:
            t1295 = np.cos(phi)
            t1294 = t1295 ** 2
            t1297 = t1294 ** 2
            t1296 = t1295 * t1294
            t1299 = t1296 ** 2
            t1301 = t1297 ** 2
            t1298 = t1295 * t1297
            t1303 = t1298 ** 2
            t1305 = t1299 ** 2
            t1308 = -5 + 300 * t1294 - 2865 * t1297 + 9904 * t1299 - 15447 * t1301 + 11172 * t1303 - 3059 * t1305
            t1307 = -2010 * t1296 + 11814 * t1298 + (-30500 * t1299 + 39216 * t1301 - 24738 * t1303 + 6118 * t1305 + 100) * t1295
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.561e3) * ((t1307 + t1308) * np.sin((phi1 - 6 * phi2)) + (t1307 - t1308) * np.sin((phi1 + 6 * phi2))) * ((1 + t1295) ** (-0.1e1 / 0.2e1)) * ((1 - t1295) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t1321 = np.cos(phi)
            t1320 = t1321 ** 2
            t1322 = t1321 * t1320
            t1323 = t1320 ** 2
            t1324 = t1321 * t1323
            t1333 = 10 * t1322 ** 2 - 5 * t1323 ** 2 + t1324 ** 2 - 1
            t1332 = -5 * t1320 + 10 * t1323 - t1333
            t1331 = t1321 * t1333 + 5 * t1322 - 10 * t1324
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.156009e6) * np.sqrt((1 - t1321)) * np.sqrt((1 + t1321)) * ((t1331 + t1332) * np.sin((phi1 - 12 * phi2)) + (t1331 - t1332) * np.sin((phi1 + 12 * phi2)))

        if Bindx == 99:
            t1334 = np.cos(phi)
            t1335 = t1334 ** 2
            t1336 = t1335 ** 2
            t1338 = t1336 ** 2
            t1337 = t1335 * t1336
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t1336 + 24225 * t1338 + 3 + (-12240 + 7429 * t1337) * t1337 + (-21964 * t1338 - 228) * t1335) * np.cos((2 * phi1))

        if Bindx == 100:
            t1354 = np.cos(phi)
            t1353 = t1354 ** 2
            t1356 = t1354 * t1353
            t1357 = t1353 ** 2
            t1358 = t1354 * t1357
            t1359 = t1356 ** 2
            t1361 = t1357 ** 2
            t1363 = t1358 ** 2
            t1367 = -1595 * t1356 + 8122 * t1358 + (-16606 * t1359 + 14801 * t1361 - 4807 * t1363 + 85) * t1354
            t1366 = -290 * t1353 + 2845 * t1357 + 18791 * t1361 - 15466 * t1363 + 5 + (-10692 + 4807 * t1359) * t1359
            t1355 = 2 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.714e3) * ((t1366 + t1367) * np.cos((-t1355 + 6 * phi2)) + (t1366 - t1367) * np.cos((t1355 + 6 * phi2)))

        if Bindx == 101:
            t1380 = np.cos(phi)
            t1379 = t1380 ** 2
            t1383 = t1379 ** 2
            t1393 = 5 * t1383 ** 2
            t1384 = t1380 * t1383
            t1388 = t1384 ** 2
            t1389 = t1380 * t1388
            t1392 = t1380 * t1389 + 4 * t1379 - 5 * t1383 - 4 * t1388 + t1393 - 1
            t1391 = 2 * t1380 * t1393 + 2 * t1380 + 20 * t1384 - 2 * t1389 + 2 * (-5 * t1380 - 10 * t1384) * t1379
            t1381 = 2 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.490314e6) * ((t1391 + t1392) * np.cos((-t1381 + 12 * phi2)) + (-t1391 + t1392) * np.cos((t1381 + 12 * phi2)))

        if Bindx == 102:
            t1401 = np.sin(phi)
            t1399 = t1401 ** 2
            t1394 = np.cos(phi)
            t1395 = t1394 ** 2
            t1396 = t1395 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t1394 * t1399 ** 2 * (-1020 * t1395 + 45 + (-11628 * t1395 + 5814 + 7429 * t1396) * t1396) * np.sin((3 * phi1)) * ((1 + t1394) ** (-0.1e1 / 0.2e1)) * ((1 - t1394) ** (-0.1e1 / 0.2e1))

        if Bindx == 103:
            t1416 = np.cos(phi)
            t1415 = t1416 ** 2
            t1419 = t1415 ** 2
            t1418 = t1416 * t1415
            t1421 = t1418 ** 2
            t1423 = t1419 ** 2
            t1420 = t1416 * t1419
            t1425 = t1420 ** 2
            t1427 = t1421 ** 2
            t1430 = -23 + 1288 * t1415 - 11855 * t1419 + 40952 * t1421 - 65797 * t1423 + 49856 * t1425 - 14421 * t1427
            t1429 = -362 * t1418 + 4222 * t1420 + (-18692 * t1421 + 35720 * t1423 - 30514 * t1425 + 9614 * t1427 + 12) * t1416
            t1417 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.119e3) * (-(t1429 + t1430) * np.sin((-t1417 + 6 * phi2)) + (t1429 - t1430) * np.sin((t1417 + 6 * phi2))) * ((1 + t1416) ** (-0.1e1 / 0.2e1)) * ((1 - t1416) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t1443 = np.cos(phi)
            t1442 = t1443 ** 2
            t1446 = t1442 ** 2
            t1445 = t1443 * t1442
            t1448 = t1445 ** 2
            t1450 = t1446 ** 2
            t1447 = t1443 * t1446
            t1452 = t1447 ** 2
            t1455 = -1 + t1442 + 6 * t1446 - 14 * t1448 + 11 * t1450 - 3 * t1452
            t1454 = -11 * t1445 + 14 * t1447 + (-6 * t1448 - t1450 + t1452 + 3) * t1443
            t1444 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.81719e5) * np.sqrt((1 - t1443)) * np.sqrt((1 + t1443)) * (-(t1454 + t1455) * np.sin((-t1444 + 12 * phi2)) + (t1454 - t1455) * np.sin((t1444 + 12 * phi2)))

        if Bindx == 105:
            t1456 = np.cos(phi)
            t1457 = t1456 ** 2
            t1458 = t1457 ** 2
            t1460 = t1458 ** 2
            t1459 = t1457 * t1458
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t1458 + 28747 * t1460 + 5 + (-15844 + 7429 * t1459) * t1459 + (-23902 * t1460 - 350) * t1457) * np.cos((4 * phi1))

        if Bindx == 106:
            t1476 = np.cos(phi)
            t1475 = t1476 ** 2
            t1478 = t1476 * t1475
            t1479 = t1475 ** 2
            t1480 = t1476 * t1479
            t1481 = t1478 ** 2
            t1483 = t1479 ** 2
            t1485 = t1480 ** 2
            t1489 = -2470 * t1478 + 12588 * t1480 + (-27436 * t1481 + 26790 * t1483 - 9614 * t1485 + 142) * t1476
            t1488 = 364 * t1475 - 2435 * t1479 + 2755 * t1483 - 9196 * t1485 - 7 + (3712 + 4807 * t1481) * t1481
            t1477 = 4 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.119e3) * ((t1488 + t1489) * np.cos((-t1477 + 6 * phi2)) + (t1488 - t1489) * np.cos((t1477 + 6 * phi2)))

        if Bindx == 107:
            t1503 = np.cos(phi)
            t1502 = t1503 ** 2
            t1505 = t1503 * t1502
            t1506 = t1502 ** 2
            t1507 = t1503 * t1506
            t1508 = t1505 ** 2
            t1510 = t1506 ** 2
            t1512 = t1507 ** 2
            t1516 = 12 * t1505 - 8 * t1507 + 4 * (-2 * t1508 + 3 * t1510 - t1512 - 1) * t1503
            t1515 = 2 * t1502 - 17 * t1506 - 17 * t1510 + 2 * t1512 + 1 + (28 + t1508) * t1508
            t1504 = 4 * phi1
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.81719e5) * ((t1515 + t1516) * np.cos((-t1504 + 12 * phi2)) + (t1515 - t1516) * np.cos((t1504 + 12 * phi2)))

        if Bindx == 108:
            t1524 = np.sin(phi)
            t1521 = t1524 ** 2
            t1522 = t1524 * t1521
            t1517 = np.cos(phi)
            t1518 = t1517 ** 2
            t1519 = t1518 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t1517 * t1522 ** 2 * (-399 * t1519 - 5 + (437 * t1519 + 95) * t1518) * np.sin((5 * phi1)) * ((1 + t1517) ** (-0.1e1 / 0.2e1)) * ((1 - t1517) ** (-0.1e1 / 0.2e1))

        if Bindx == 109:
            t1539 = np.cos(phi)
            t1538 = t1539 ** 2
            t1542 = t1538 ** 2
            t1541 = t1539 * t1538
            t1544 = t1541 ** 2
            t1546 = t1542 ** 2
            t1543 = t1539 * t1542
            t1548 = t1543 ** 2
            t1550 = t1544 ** 2
            t1553 = -25 + 1200 * t1538 - 11465 * t1542 + 45592 * t1544 - 84987 * t1546 + 73720 * t1548 - 24035 * t1550
            t1552 = 5958 * t1541 - 24450 * t1543 + (37500 * t1544 - 14440 * t1546 - 13794 * t1548 + 9614 * t1550 - 388) * t1539
            t1540 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.14e2) * (-(t1552 + t1553) * np.sin((-t1540 + 6 * phi2)) + (t1552 - t1553) * np.sin((t1540 + 6 * phi2))) * ((1 + t1539) ** (-0.1e1 / 0.2e1)) * ((1 - t1539) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t1566 = np.cos(phi)
            t1565 = t1566 ** 2
            t1569 = t1565 ** 2
            t1568 = t1566 * t1565
            t1571 = t1568 ** 2
            t1573 = t1569 ** 2
            t1570 = t1566 * t1569
            t1575 = t1570 ** 2
            t1578 = 1 + 7 * t1565 - 22 * t1569 + 14 * t1571 + 5 * t1573 - 5 * t1575
            t1577 = 5 * t1568 + 14 * t1570 + (-22 * t1571 + 7 * t1573 + t1575 - 5) * t1566
            t1567 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.9614e4) * np.sqrt((1 - t1566)) * np.sqrt((1 + t1566)) * (-(t1577 + t1578) * np.sin((-t1567 + 12 * phi2)) + (t1577 - t1578) * np.sin((t1567 + 12 * phi2)))

        if Bindx == 111:
            t1579 = np.cos(phi)
            t1580 = t1579 ** 2
            t1581 = t1580 ** 2
            t1583 = t1581 ** 2
            t1582 = t1580 * t1581
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1581 + 15447 * t1583 + 5 + (-9904 + 3059 * t1582) * t1582 + (-11172 * t1583 - 300) * t1580) * np.cos((6 * phi1))

        if Bindx == 112:
            t1599 = np.cos(phi)
            t1598 = t1599 ** 2
            t1600 = t1599 * t1598
            t1601 = t1598 ** 2
            t1602 = t1599 * t1601
            t1603 = t1600 ** 2
            t1605 = t1601 ** 2
            t1607 = t1602 ** 2
            t1611 = -0.67375e5 / 0.1024e4 * t1600 + 0.615825e6 / 0.512e3 * t1602 + (-0.2227275e7 / 0.512e3 * t1603 + 0.5802125e7 / 0.1024e4 * t1605 - 0.2523675e7 / 0.1024e4 * t1607 - 0.975e3 / 0.1024e4) * t1599
            t1610 = 0.141225e6 / 0.512e3 * t1598 - 0.1882125e7 / 0.1024e4 * t1601 - 0.3954375e7 / 0.1024e4 * t1605 + 0.109725e6 / 0.512e3 * t1607 - 0.6725e4 / 0.1024e4 + (0.1128225e7 / 0.256e3 + 0.841225e6 / 0.1024e4 * t1603) * t1603
            tfunc[..., c] = (t1610 + t1611) * np.cos((6 * phi1 - 6 * phi2)) + (t1610 - t1611) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 113:
            t1624 = np.cos(phi)
            t1623 = t1624 ** 2
            t1627 = t1623 ** 2
            t1630 = t1627 ** 2
            t1628 = t1624 * t1627
            t1632 = t1628 ** 2
            t1633 = t1624 * t1632
            t1636 = t1624 * t1633 - 12 * t1623 + 27 * t1627 - 27 * t1630 + 12 * t1632 - 1
            t1635 = -6 * t1633 + 2 * (18 * t1623 - 18) * t1628 + 2 * (t1623 - t1630 + 3) * t1624
            t1625 = 6 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1635 + t1636) * np.cos((-t1625 + 12 * phi2)) + (-t1635 + t1636) * np.cos((t1625 + 12 * phi2)))

        if Bindx == 114:
            t1643 = np.sin(phi)
            t1640 = t1643 ** 2
            t1641 = t1640 ** 2
            t1637 = np.cos(phi)
            t1638 = t1637 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t1637 * t1641 ** 2 * (5 + (-70 + 161 * t1638) * t1638) * np.sin((7 * phi1)) * ((1 + t1637) ** (-0.1e1 / 0.2e1)) * ((1 - t1637) ** (-0.1e1 / 0.2e1))

        if Bindx == 115:
            t1658 = np.cos(phi)
            t1657 = t1658 ** 2
            t1661 = t1657 ** 2
            t1660 = t1658 * t1657
            t1663 = t1660 ** 2
            t1665 = t1661 ** 2
            t1662 = t1658 * t1661
            t1667 = t1662 ** 2
            t1669 = t1663 ** 2
            t1672 = 29 - 1044 * t1657 + 3745 * t1661 + 2016 * t1663 - 23121 * t1665 + 30772 * t1667 - 12397 * t1669
            t1671 = 4774 * t1660 - 21546 * t1662 + (40956 * t1663 - 31520 * t1665 + 4158 * t1667 + 3542 * t1669 - 364) * t1658
            t1659 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1671 + t1672) * np.sin((-t1659 + 6 * phi2)) + (t1671 - t1672) * np.sin((t1659 + 6 * phi2))) * ((1 + t1658) ** (-0.1e1 / 0.2e1)) * ((1 - t1658) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t1685 = np.cos(phi)
            t1684 = t1685 ** 2
            t1688 = t1684 ** 2
            t1687 = t1685 * t1684
            t1690 = t1687 ** 2
            t1692 = t1688 ** 2
            t1689 = t1685 * t1688
            t1694 = t1689 ** 2
            t1697 = -1 - 19 * t1684 + 6 * t1688 + 42 * t1690 - 21 * t1692 - 7 * t1694
            t1696 = 21 * t1687 - 42 * t1689 + (-6 * t1690 + 19 * t1692 + t1694 + 7) * t1685
            t1686 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.10626e5) * np.sqrt((1 - t1685)) * np.sqrt((1 + t1685)) * (-(t1696 + t1697) * np.sin((-t1686 + 12 * phi2)) + (t1696 - t1697) * np.sin((t1686 + 12 * phi2)))

        if Bindx == 117:
            t1698 = np.cos(phi)
            t1699 = t1698 ** 2
            t1700 = t1699 ** 2
            t1702 = t1700 ** 2
            t1701 = t1699 * t1700
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t1700 + 1135 * t1702 + 1 + (-900 + 161 * t1701) * t1701 + (-686 * t1702 - 46) * t1699) * np.cos((8 * phi1))

        if Bindx == 118:
            t1718 = np.cos(phi)
            t1717 = t1718 ** 2
            t1720 = t1718 * t1717
            t1721 = t1717 ** 2
            t1722 = t1718 * t1721
            t1723 = t1720 ** 2
            t1725 = t1721 ** 2
            t1727 = t1722 ** 2
            t1731 = 3332 * t1720 - 6888 * t1722 + (-408 * t1723 + 11452 * t1725 - 7084 * t1727 - 404) * t1718
            t1730 = 532 * t1717 - 5607 * t1721 - 20337 * t1725 + 5852 * t1727 - 19 + (17808 + 1771 * t1723) * t1723
            t1719 = 8 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * ((t1730 + t1731) * np.cos((-t1719 + 6 * phi2)) + (t1730 - t1731) * np.cos((t1719 + 6 * phi2)))

        if Bindx == 119:
            t1745 = np.cos(phi)
            t1744 = t1745 ** 2
            t1747 = t1745 * t1744
            t1748 = t1744 ** 2
            t1749 = t1745 * t1748
            t1750 = t1747 ** 2
            t1752 = t1748 ** 2
            t1754 = t1749 ** 2
            t1758 = -40 * t1747 + 48 * t1749 + 8 * (6 * t1750 - 5 * t1752 - t1754 - 1) * t1745
            t1757 = 26 * t1744 + 15 * t1748 + 15 * t1752 + 26 * t1754 + 1 + (-84 + t1750) * t1750
            t1746 = 8 * phi1
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.10626e5) * ((t1757 + t1758) * np.cos((-t1746 + 12 * phi2)) + (t1757 - t1758) * np.cos((t1746 + 12 * phi2)))

        if Bindx == 120:
            t1764 = np.sin(phi)
            t1760 = t1764 ** 2
            t1762 = t1764 * t1760 ** 2
            t1759 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t1759 * t1762 ** 2 * (23 * t1759 ** 2 - 3) * np.sin((9 * phi1)) * ((1 + t1759) ** (-0.1e1 / 0.2e1)) * ((1 - t1759) ** (-0.1e1 / 0.2e1))

        if Bindx == 121:
            t1779 = np.cos(phi)
            t1778 = t1779 ** 2
            t1782 = t1778 ** 2
            t1781 = t1779 * t1778
            t1784 = t1781 ** 2
            t1786 = t1782 ** 2
            t1783 = t1779 * t1782
            t1788 = t1783 ** 2
            t1790 = t1784 ** 2
            t1793 = 37 - 740 * t1778 + 3673 * t1782 - 5952 * t1784 + 1383 * t1786 + 3876 * t1788 - 2277 * t1790
            t1792 = -54 * t1781 - 3078 * t1783 + (9252 * t1784 - 9088 * t1786 + 2354 * t1788 + 506 * t1790 + 108) * t1779
            t1780 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.266e3) * (-(t1792 + t1793) * np.sin((-t1780 + 6 * phi2)) + (t1792 - t1793) * np.sin((t1780 + 6 * phi2))) * ((1 + t1779) ** (-0.1e1 / 0.2e1)) * ((1 - t1779) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t1806 = np.cos(phi)
            t1805 = t1806 ** 2
            t1809 = t1805 ** 2
            t1808 = t1806 * t1805
            t1811 = t1808 ** 2
            t1813 = t1809 ** 2
            t1810 = t1806 * t1809
            t1815 = t1810 ** 2
            t1818 = 1 + 35 * t1805 + 90 * t1809 - 42 * t1811 - 75 * t1813 - 9 * t1815
            t1817 = -75 * t1808 - 42 * t1810 + (90 * t1811 + 35 * t1813 + t1815 - 9) * t1806
            t1807 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.506e3) * np.sqrt((1 - t1806)) * np.sqrt((1 + t1806)) * (-(t1817 + t1818) * np.sin((-t1807 + 12 * phi2)) + (t1817 - t1818) * np.sin((t1807 + 12 * phi2)))

        if Bindx == 123:
            t1819 = np.cos(phi)
            t1820 = t1819 ** 2
            t1821 = t1820 ** 2
            t1823 = t1821 ** 2
            t1822 = t1820 * t1821
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t1821 + 235 * t1823 + 1 + (-240 + 23 * t1822) * t1822 + (-116 * t1823 - 28) * t1820) * np.cos((10 * phi1))

        if Bindx == 124:
            t1839 = np.cos(phi)
            t1838 = t1839 ** 2
            t1841 = t1839 * t1838
            t1842 = t1838 ** 2
            t1843 = t1839 * t1842
            t1844 = t1841 ** 2
            t1846 = t1842 ** 2
            t1848 = t1843 ** 2
            t1852 = 121 * t1841 - 366 * t1843 + (282 * t1844 + 85 * t1846 - 115 * t1848 - 7) * t1839
            t1851 = -50 * t1838 + 45 * t1842 - 441 * t1846 + 166 * t1848 + 5 + (252 + 23 * t1844) * t1844
            t1840 = 10 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.4389e4) * ((t1851 + t1852) * np.cos((-t1840 + 6 * phi2)) + (t1851 - t1852) * np.cos((t1840 + 6 * phi2)))

        if Bindx == 125:
            t1865 = np.cos(phi)
            t1864 = t1865 ** 2
            t1868 = t1864 ** 2
            t1871 = t1868 ** 2
            t1869 = t1865 * t1868
            t1873 = t1869 ** 2
            t1874 = t1865 * t1873
            t1877 = t1865 * t1874 - 44 * t1864 - 165 * t1868 + 165 * t1871 + 44 * t1873 - 1
            t1876 = -10 * t1874 + (-132 * t1864 + 132) * t1869 + (110 * t1864 - 110 * t1871 + 10) * t1865
            t1866 = 10 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.69e2) * ((t1876 + t1877) * np.cos((-t1866 + 12 * phi2)) + (-t1876 + t1877) * np.cos((t1866 + 12 * phi2)))

        if Bindx == 126:
            t1883 = np.sin(phi)
            t1879 = t1883 ** 2
            t1880 = t1883 * t1879
            t1881 = t1880 ** 2
            t1878 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t1878 * t1881 ** 2 * np.sin((11 * phi1)) * ((1 + t1878) ** (-0.1e1 / 0.2e1)) * ((1 - t1878) ** (-0.1e1 / 0.2e1))

        if Bindx == 127:
            t1897 = np.cos(phi)
            t1899 = t1897 ** 2
            t1901 = t1899 ** 2
            t1900 = t1897 * t1899
            t1903 = t1900 ** 2
            t1905 = t1901 ** 2
            t1902 = t1897 * t1901
            t1907 = t1902 ** 2
            t1909 = t1903 ** 2
            t1912 = -1 + 31 * t1901 - 72 * t1903 + 45 * t1905 + 8 * t1907 - 11 * t1909
            t1911 = -22 * t1900 + 18 * t1902 + (36 * t1903 - 56 * t1905 + 18 * t1907 + 2 * t1909 + 4) * t1897
            t1898 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.201894e6) * (-(t1911 + t1912) * np.sin((-t1898 + 6 * phi2)) + (t1911 - t1912) * np.sin((t1898 + 6 * phi2))) * ((1 + t1897) ** (-0.1e1 / 0.2e1)) * ((1 - t1897) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1925 = np.cos(phi)
            t1924 = t1925 ** 2
            t1928 = t1924 ** 2
            t1927 = t1925 * t1924
            t1930 = t1927 ** 2
            t1932 = t1928 ** 2
            t1929 = t1925 * t1928
            t1934 = t1929 ** 2
            t1937 = -1 - 55 * t1924 - 330 * t1928 - 462 * t1930 - 165 * t1932 - 11 * t1934
            t1936 = 165 * t1927 + 462 * t1929 + (330 * t1930 + 55 * t1932 + t1934 + 11) * t1925
            t1926 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6e1) * np.sqrt((1 - t1925)) * np.sqrt((1 + t1925)) * (-(t1936 + t1937) * np.sin((-t1926 + 12 * phi2)) + (t1936 - t1937) * np.sin((t1926 + 12 * phi2)))

        if Bindx == 129:
            t1938 = np.cos(phi)
            t1939 = t1938 ** 2
            t1945 = -6 * t1939
            t1940 = t1939 ** 2
            t1941 = t1939 * t1940
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t1945 + 1 + (-20 + t1941) * t1941 + (15 + (t1945 + 15) * t1940) * t1940)

        if Bindx == 130:
            t1958 = np.cos(phi)
            t1957 = t1958 ** 2
            t1961 = t1957 ** 2
            t1964 = t1961 ** 2
            t1962 = t1958 * t1961
            t1966 = t1962 ** 2
            t1967 = t1958 * t1966
            t1970 = t1958 * t1967 - 12 * t1957 + 27 * t1961 - 27 * t1964 + 12 * t1966 - 1
            t1969 = -6 * t1967 + 2 * (18 * t1957 - 18) * t1962 + 2 * (t1957 - t1964 + 3) * t1958
            t1959 = 12 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1969 + t1970) * np.cos((-t1959 + 6 * phi2)) + (-t1969 + t1970) * np.cos((t1959 + 6 * phi2)))

        if Bindx == 131:
            t1984 = np.cos(phi)
            t1983 = t1984 ** 2
            t1985 = t1984 * t1983
            t1986 = t1983 ** 2
            t1987 = t1984 * t1986
            t1988 = t1985 ** 2
            t1990 = t1986 ** 2
            t1992 = t1987 ** 2
            t1996 = -0.75e2 / 0.1024e4 * (t1992 + 1) * t1984 - 0.2475e4 / 0.512e3 * t1984 * t1988 - 0.2475e4 / 0.512e3 * t1987 - 0.1375e4 / 0.1024e4 * t1984 * t1990 - 0.1375e4 / 0.1024e4 * t1985
            t1995 = 0.25e2 / 0.4096e4 + 0.12375e5 / 0.4096e4 * t1990 + 0.12375e5 / 0.4096e4 * t1986 + 0.825e3 / 0.2048e4 * t1992 + 0.825e3 / 0.2048e4 * t1983 + (0.5775e4 / 0.1024e4 + 0.25e2 / 0.4096e4 * t1988) * t1988
            tfunc[..., c] = (t1995 + t1996) * np.cos((12 * phi1 - 12 * phi2)) + (t1995 - t1996) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 132:
            tfunc[..., c] = 0

        if Bindx == 133:
            t2013 = np.cos(phi)
            t2012 = t2013 ** 2
            t2014 = t2013 * t2012
            t2015 = t2012 ** 2
            t2016 = t2013 * t2015
            t2017 = t2014 ** 2
            t2018 = t2013 * t2017
            t2019 = t2015 ** 2
            t2021 = t2016 ** 2
            t2023 = t2017 ** 2
            t2027 = 720 * t2014 - 4878 * t2016 + 14064 * t2018 + (-19674 * t2019 + 13248 * t2021 - 3450 * t2023 - 30) * t2013
            t2026 = -7475 * t2018 ** 2 - 365 * t2012 + 4425 * t2015 - 20473 * t2017 + 45919 * t2019 - 53799 * t2021 + 31763 * t2023 + 5
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.7106e4) * ((-t2026 + t2027) * np.sin((phi1 - 6 * phi2)) + (t2026 + t2027) * np.sin((phi1 + 6 * phi2))) * ((1 + t2013) ** (-0.1e1 / 0.2e1)) * ((1 - t2013) ** (-0.1e1 / 0.2e1))

        if Bindx == 134:
            t2043 = np.cos(phi)
            t2042 = t2043 ** 2
            t2044 = t2043 * t2042
            t2045 = t2042 ** 2
            t2046 = t2043 * t2045
            t2047 = t2044 ** 2
            t2048 = t2043 * t2047
            t2049 = t2045 ** 2
            t2051 = t2046 ** 2
            t2053 = t2047 ** 2
            t2057 = 72 * t2044 - 180 * t2046 + 240 * t2048 + 12 * (-15 * t2049 + 6 * t2051 - t2053 - 1) * t2043
            t2056 = -13 * t2048 ** 2 - 19 * t2042 + 93 * t2045 - 215 * t2047 + 275 * t2049 - 201 * t2051 + 79 * t2053 + 1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.14858e5) * ((-t2056 + t2057) * np.sin((phi1 - 12 * phi2)) + (t2056 + t2057) * np.sin((phi1 + 12 * phi2))) * ((1 + t2043) ** (-0.1e1 / 0.2e1)) * ((1 - t2043) ** (-0.1e1 / 0.2e1))

        if Bindx == 135:
            t2072 = np.cos(phi)
            t2071 = t2072 ** 2
            t2075 = t2071 ** 2
            t2074 = t2072 * t2071
            t2077 = t2074 ** 2
            t2079 = t2075 ** 2
            t2076 = t2072 * t2075
            t2081 = t2076 ** 2
            t2083 = t2077 ** 2
            t2086 = -1 + 71 * t2071 - 790 * t2075 + 3142 * t2077 - 5573 * t2079 + 4531 * t2081 - 1380 * t2083
            t2085 = 214 * t2074 - 1493 * t2076 + (4588 * t2077 - 7003 * t2079 + 5198 * t2081 - 1495 * t2083 - 9) * t2072
            t2073 = 2 * phi1
            tfunc[..., c] = -0.27e2 / 0.1024e4 * np.sqrt(0.35530e5) * ((-t2085 + t2086) * np.cos((-t2073 + 6 * phi2)) + (t2085 + t2086) * np.cos((t2073 + 6 * phi2)))

        if Bindx == 136:
            t2101 = np.cos(phi)
            t2100 = t2101 ** 2
            t2104 = t2100 ** 2
            t2103 = t2101 * t2100
            t2106 = t2103 ** 2
            t2108 = t2104 ** 2
            t2105 = t2101 * t2104
            t2110 = t2105 ** 2
            t2112 = t2106 ** 2
            t2115 = 2 - 34 * t2100 + 140 * t2104 - 260 * t2106 + 250 * t2108 - 122 * t2110 + 24 * t2112
            t2114 = -32 * t2103 + 25 * t2105 + (40 * t2106 - 85 * t2108 + 56 * t2110 - 13 * t2112 + 9) * t2101
            t2102 = 2 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.74290e5) * ((t2114 + t2115) * np.cos((-t2102 + 12 * phi2)) + (-t2114 + t2115) * np.cos((t2102 + 12 * phi2)))

        if Bindx == 137:
            t2131 = np.cos(phi)
            t2130 = t2131 ** 2
            t2134 = t2130 ** 2
            t2133 = t2131 * t2130
            t2136 = t2133 ** 2
            t2137 = t2131 * t2136
            t2138 = t2134 ** 2
            t2135 = t2131 * t2134
            t2140 = t2135 ** 2
            t2142 = t2136 ** 2
            t2146 = -16445 * t2137 ** 2 - 207 * t2130 + 2939 * t2134 - 17743 * t2136 + 52529 * t2138 - 79013 * t2140 + 57937 * t2142 + 3
            t2145 = 4444 * t2133 - 29390 * t2135 + 84680 * t2137 + (-120766 * t2138 + 83996 * t2140 - 22770 * t2142 - 194) * t2131
            t2132 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.3230e4) * (-(t2145 - t2146) * np.sin((-t2132 + 6 * phi2)) + (t2145 + t2146) * np.sin((t2132 + 6 * phi2))) * ((1 + t2131) ** (-0.1e1 / 0.2e1)) * ((1 - t2131) ** (-0.1e1 / 0.2e1))

        if Bindx == 138:
            t2162 = np.cos(phi)
            t2161 = t2162 ** 2
            t2164 = t2162 * t2161
            t2165 = t2161 ** 2
            t2166 = t2162 * t2165
            t2167 = t2164 ** 2
            t2168 = t2162 * t2167
            t2169 = t2165 ** 2
            t2171 = t2166 ** 2
            t2173 = t2167 ** 2
            t2177 = -16 * t2164 + 140 * t2166 - 320 * t2168 + (340 * t2169 - 176 * t2171 + 36 * t2173 - 4) * t2162
            t2176 = -13 * t2168 ** 2 + 45 * t2161 - 167 * t2165 + 265 * t2167 - 185 * t2169 + 23 * t2171 + 35 * t2173 - 3
            t2163 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.817190e6) * (-(t2176 + t2177) * np.sin((-t2163 + 12 * phi2)) + (-t2176 + t2177) * np.sin((t2163 + 12 * phi2))) * ((1 + t2162) ** (-0.1e1 / 0.2e1)) * ((1 - t2162) ** (-0.1e1 / 0.2e1))

        if Bindx == 139:
            t2192 = np.cos(phi)
            t2191 = t2192 ** 2
            t2194 = t2192 * t2191
            t2195 = t2191 ** 2
            t2196 = t2192 * t2195
            t2197 = t2194 ** 2
            t2199 = t2195 ** 2
            t2201 = t2196 ** 2
            t2203 = t2197 ** 2
            t2206 = 7280 * t2194 - 27661 * t2196 + (-1480 * t2197 + 136345 * t2199 - 196328 * t2201 + 82225 * t2203 - 381) * t2192
            t2205 = -6890 * t2191 + 73180 * t2195 - 291124 * t2197 + 536930 * t2199 - 464002 * t2201 + 151800 * t2203 + 106
            t2193 = 4 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * ((t2205 - t2206) * np.cos((-t2193 + 6 * phi2)) + (t2205 + t2206) * np.cos((t2193 + 6 * phi2)))

        if Bindx == 140:
            t2221 = np.cos(phi)
            t2220 = t2221 ** 2
            t2224 = t2220 ** 2
            t2223 = t2221 * t2220
            t2226 = t2223 ** 2
            t2228 = t2224 ** 2
            t2225 = t2221 * t2224
            t2230 = t2225 ** 2
            t2232 = t2226 ** 2
            t2235 = -4 + 44 * t2220 - 88 * t2224 - 8 * t2226 + 172 * t2228 - 164 * t2230 + 48 * t2232
            t2234 = -74 * t2223 + 253 * t2225 + (-332 * t2226 + 173 * t2228 - 10 * t2230 - 13 * t2232 + 3) * t2221
            t2222 = 4 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * ((t2234 + t2235) * np.cos((-t2222 + 12 * phi2)) + (-t2234 + t2235) * np.cos((t2222 + 12 * phi2)))

        if Bindx == 141:
            t2251 = np.cos(phi)
            t2250 = t2251 ** 2
            t2254 = t2250 ** 2
            t2253 = t2251 * t2250
            t2256 = t2253 ** 2
            t2257 = t2251 * t2256
            t2258 = t2254 ** 2
            t2255 = t2251 * t2254
            t2260 = t2255 ** 2
            t2262 = t2256 ** 2
            t2266 = 82225 * t2257 ** 2 - 6893 * t2250 + 63345 * t2254 - 196005 * t2256 + 221115 * t2258 + 6369 * t2260 - 170269 * t2262 + 113
            t2265 = -26140 * t2253 + 175642 * t2255 - 542952 * t2257 + (845090 * t2258 - 642620 * t2260 + 189750 * t2262 + 1230) * t2251
            t2252 = 5 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.38e2) * (-(t2265 - t2266) * np.sin((-t2252 + 6 * phi2)) + (t2265 + t2266) * np.sin((t2252 + 6 * phi2))) * ((1 + t2251) ** (-0.1e1 / 0.2e1)) * ((1 - t2251) ** (-0.1e1 / 0.2e1))

        if Bindx == 142:
            t2282 = np.cos(phi)
            t2281 = t2282 ** 2
            t2284 = t2282 * t2281
            t2285 = t2281 ** 2
            t2286 = t2282 * t2285
            t2287 = t2284 ** 2
            t2288 = t2282 * t2287
            t2289 = t2285 ** 2
            t2291 = t2286 ** 2
            t2293 = t2287 ** 2
            t2297 = 128 * t2284 - 332 * t2286 + 288 * t2288 + (28 * t2289 - 160 * t2291 + 60 * t2293 - 12) * t2282
            t2296 = -13 * t2288 ** 2 - 35 * t2281 - 15 * t2285 + 297 * t2287 - 513 * t2289 + 327 * t2291 - 53 * t2293 + 5
            t2283 = 5 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.9614e4) * (-(t2296 + t2297) * np.sin((-t2283 + 12 * phi2)) + (-t2296 + t2297) * np.sin((t2283 + 12 * phi2))) * ((1 + t2282) ** (-0.1e1 / 0.2e1)) * ((1 - t2282) ** (-0.1e1 / 0.2e1))

        if Bindx == 143:
            t2312 = np.cos(phi)
            t2311 = t2312 ** 2
            t2314 = t2311 ** 2
            t2313 = t2312 * t2311
            t2316 = t2313 ** 2
            t2318 = t2314 ** 2
            t2315 = t2312 * t2314
            t2320 = t2315 ** 2
            t2322 = t2316 ** 2
            t2325 = -0.102465e6 / 0.1024e4 * t2311 + 0.657045e6 / 0.512e3 * t2314 - 0.3475629e7 / 0.512e3 * t2316 + 0.16073235e8 / 0.1024e4 * t2318 - 0.16469541e8 / 0.1024e4 * t2320 + 0.1536975e7 / 0.256e3 * t2322 + 0.1863e4 / 0.1024e4
            t2324 = -0.611145e6 / 0.512e3 * t2313 + 0.5875983e7 / 0.1024e4 * t2315 + (-0.2772225e7 / 0.256e3 * t2316 + 0.7301745e7 / 0.1024e4 * t2318 + 0.635283e6 / 0.512e3 * t2320 - 0.2220075e7 / 0.1024e4 * t2322 + 0.69147e5 / 0.1024e4) * t2312
            tfunc[..., c] = (t2324 + t2325) * np.cos((6 * phi1 - 6 * phi2)) + (-t2324 + t2325) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 144:
            t2340 = np.cos(phi)
            t2339 = t2340 ** 2
            t2343 = t2339 ** 2
            t2342 = t2340 * t2339
            t2345 = t2342 ** 2
            t2347 = t2343 ** 2
            t2344 = t2340 * t2343
            t2349 = t2344 ** 2
            t2351 = t2345 ** 2
            t2354 = -6 + 6 * t2339 + 188 * t2343 - 468 * t2345 + 306 * t2347 + 46 * t2349 - 72 * t2351
            t2353 = 144 * t2342 - 135 * t2344 + (-216 * t2345 + 363 * t2347 - 120 * t2349 - 13 * t2351 - 23) * t2340
            t2341 = 6 * phi1
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((-t2353 + t2354) * np.cos((-t2341 + 12 * phi2)) + (t2353 + t2354) * np.cos((t2341 + 12 * phi2)))

        if Bindx == 145:
            t2370 = np.cos(phi)
            t2369 = t2370 ** 2
            t2372 = t2370 * t2369
            t2373 = t2369 ** 2
            t2374 = t2370 * t2373
            t2375 = t2372 ** 2
            t2376 = t2370 * t2375
            t2377 = t2373 ** 2
            t2379 = t2374 ** 2
            t2381 = t2375 ** 2
            t2385 = -2632 * t2372 - 4046 * t2374 + 65664 * t2376 + (-161938 * t2377 + 155848 * t2379 - 53130 * t2381 + 234) * t2370
            t2384 = 16445 * t2376 ** 2 - 4165 * t2369 + 35553 * t2373 - 120057 * t2375 + 183327 * t2377 - 112959 * t2379 + 1771 * t2381 + 85
            t2371 = 7 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.35e2) * (-(t2384 + t2385) * np.sin((-t2371 + 6 * phi2)) + (-t2384 + t2385) * np.sin((t2371 + 6 * phi2))) * ((1 - t2370) ** (-0.1e1 / 0.2e1)) * ((1 + t2370) ** (-0.1e1 / 0.2e1))

        if Bindx == 146:
            t2401 = np.cos(phi)
            t2400 = t2401 ** 2
            t2403 = t2401 * t2400
            t2404 = t2400 ** 2
            t2405 = t2401 * t2404
            t2406 = t2403 ** 2
            t2407 = t2401 * t2406
            t2408 = t2404 ** 2
            t2410 = t2405 ** 2
            t2412 = t2406 ** 2
            t2416 = 136 * t2403 + 116 * t2405 - 720 * t2407 + (644 * t2408 - 56 * t2410 - 84 * t2412 - 36) * t2401
            t2415 = -13 * t2407 ** 2 - 35 * t2400 + 357 * t2404 - 567 * t2406 + 27 * t2408 + 423 * t2410 - 185 * t2412 - 7
            t2402 = 7 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-(-t2415 + t2416) * np.sin((-t2402 + 12 * phi2)) + (t2415 + t2416) * np.sin((t2402 + 12 * phi2))) * ((1 + t2401) ** (-0.1e1 / 0.2e1)) * ((1 - t2401) ** (-0.1e1 / 0.2e1))

        if Bindx == 147:
            t2431 = np.cos(phi)
            t2430 = t2431 ** 2
            t2434 = t2430 ** 2
            t2433 = t2431 * t2430
            t2436 = t2433 ** 2
            t2438 = t2434 ** 2
            t2435 = t2431 * t2434
            t2440 = t2435 ** 2
            t2442 = t2436 ** 2
            t2445 = -5084 * t2430 + 24904 * t2434 - 20568 * t2436 - 69204 * t2438 + 130548 * t2440 - 60720 * t2442 + 124
            t2444 = 15864 * t2433 - 84537 * t2435 + (185544 * t2436 - 164659 * t2438 + 32384 * t2440 + 16445 * t2442 - 1041) * t2431
            t2432 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.10e2) * ((t2444 + t2445) * np.cos((-t2432 + 6 * phi2)) + (-t2444 + t2445) * np.cos((t2432 + 6 * phi2)))

        if Bindx == 148:
            t2460 = np.cos(phi)
            t2459 = t2460 ** 2
            t2463 = t2459 ** 2
            t2462 = t2460 * t2459
            t2465 = t2462 ** 2
            t2467 = t2463 ** 2
            t2464 = t2460 * t2463
            t2469 = t2464 ** 2
            t2471 = t2465 ** 2
            t2474 = 8 + 104 * t2459 - 400 * t2463 - 48 * t2465 + 744 * t2467 - 312 * t2469 - 96 * t2471
            t2473 = -18 * t2462 - 579 * t2464 + (708 * t2465 + 125 * t2467 - 274 * t2469 - 13 * t2471 + 51) * t2460
            t2461 = 8 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2530e4) * ((-t2473 + t2474) * np.cos((-t2461 + 12 * phi2)) + (t2473 + t2474) * np.cos((t2461 + 12 * phi2)))

        if Bindx == 149:
            t2490 = np.cos(phi)
            t2489 = t2490 ** 2
            t2492 = t2490 * t2489
            t2493 = t2489 ** 2
            t2494 = t2490 * t2493
            t2495 = t2492 ** 2
            t2496 = t2490 * t2495
            t2497 = t2493 ** 2
            t2499 = t2494 ** 2
            t2501 = t2495 ** 2
            t2505 = 14936 * t2492 - 48274 * t2494 + 47136 * t2496 + (28866 * t2497 - 72312 * t2499 + 31050 * t2501 - 1402) * t2490
            t2504 = -7475 * t2496 ** 2 + 891 * t2489 - 17631 * t2493 + 83799 * t2495 - 155601 * t2497 + 118561 * t2499 - 22517 * t2501 - 27
            t2491 = 9 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.11e2) * (-(t2504 + t2505) * np.sin((-t2491 + 6 * phi2)) + (-t2504 + t2505) * np.sin((t2491 + 6 * phi2))) * ((1 + t2490) ** (-0.1e1 / 0.2e1)) * ((1 - t2490) ** (-0.1e1 / 0.2e1))

        if Bindx == 150:
            t2521 = np.cos(phi)
            t2520 = t2521 ** 2
            t2523 = t2521 * t2520
            t2524 = t2520 ** 2
            t2525 = t2521 * t2524
            t2526 = t2523 ** 2
            t2527 = t2521 * t2526
            t2528 = t2524 ** 2
            t2530 = t2525 ** 2
            t2532 = t2526 ** 2
            t2536 = -152 * t2523 + 1012 * t2525 - 528 * t2527 + (-924 * t2528 + 552 * t2530 + 108 * t2532 - 68) * t2521
            t2535 = -13 * t2527 ** 2 + 189 * t2520 - 363 * t2524 - 759 * t2526 + 1419 * t2528 - 121 * t2530 - 361 * t2532 + 9
            t2522 = 9 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.23e2) * (-(t2535 + t2536) * np.sin((-t2522 + 12 * phi2)) + (-t2535 + t2536) * np.sin((t2522 + 12 * phi2))) * ((1 - t2521) ** (-0.1e1 / 0.2e1)) * ((1 + t2521) ** (-0.1e1 / 0.2e1))

        if Bindx == 151:
            t2551 = np.cos(phi)
            t2550 = t2551 ** 2
            t2554 = t2550 ** 2
            t2553 = t2551 * t2550
            t2556 = t2553 ** 2
            t2558 = t2554 ** 2
            t2555 = t2551 * t2554
            t2560 = t2555 ** 2
            t2562 = t2556 ** 2
            t2565 = -17 + 391 * t2550 - 2246 * t2554 + 4182 * t2556 - 1605 * t2558 - 2205 * t2560 + 1500 * t2562
            t2564 = 210 * t2553 + 1377 * t2555 + (-5436 * t2556 + 5951 * t2558 - 1702 * t2560 - 325 * t2562 - 75) * t2551
            t2552 = 10 * phi1
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.253e3) * ((t2564 + t2565) * np.cos((-t2552 + 6 * phi2)) + (-t2564 + t2565) * np.cos((t2552 + 6 * phi2)))

        if Bindx == 152:
            t2580 = np.cos(phi)
            t2579 = t2580 ** 2
            t2583 = t2579 ** 2
            t2582 = t2580 * t2579
            t2585 = t2582 ** 2
            t2587 = t2583 ** 2
            t2584 = t2580 * t2583
            t2589 = t2584 ** 2
            t2591 = t2585 ** 2
            t2594 = -0.20925e5 / 0.1024e4 * t2579 - 0.7425e4 / 0.512e3 * t2583 + 0.57915e5 / 0.512e3 * t2585 - 0.4455e4 / 0.1024e4 * t2587 - 0.66825e5 / 0.1024e4 * t2589 - 0.2025e4 / 0.256e3 * t2591 - 0.675e3 / 0.1024e4
            t2593 = -0.4455e4 / 0.128e3 * t2582 + 0.111375e6 / 0.2048e4 * t2584 + (0.22275e5 / 0.256e3 * t2585 - 0.141075e6 / 0.2048e4 * t2587 - 0.7965e4 / 0.256e3 * t2589 - 0.1755e4 / 0.2048e4 * t2591 - 0.11745e5 / 0.2048e4) * t2580
            t2581 = 10 * phi1
            tfunc[..., c] = (-t2593 + t2594) * np.cos((-t2581 + 12 * phi2)) + (t2593 + t2594) * np.cos((t2581 + 12 * phi2))

        if Bindx == 153:
            t2610 = np.cos(phi)
            t2609 = t2610 ** 2
            t2612 = t2610 * t2609
            t2613 = t2609 ** 2
            t2614 = t2610 * t2613
            t2615 = t2612 ** 2
            t2616 = t2610 * t2615
            t2617 = t2613 ** 2
            t2619 = t2614 ** 2
            t2621 = t2615 ** 2
            t2625 = 1532 * t2612 - 6626 * t2614 + 9576 * t2616 + (-3482 * t2617 - 2596 * t2619 + 1650 * t2621 - 54) * t2610
            t2624 = -325 * t2616 ** 2 - 767 * t2609 + 1707 * t2613 + 2025 * t2615 - 9207 * t2617 + 8667 * t2619 - 2159 * t2621 + 59
            t2611 = 11 * phi1
            tfunc[..., c] = 0.27e2 / 0.4096e4 * np.sqrt(0.506e3) * (-(t2624 + t2625) * np.sin((-t2611 + 6 * phi2)) + (-t2624 + t2625) * np.sin((t2611 + 6 * phi2))) * ((1 + t2610) ** (-0.1e1 / 0.2e1)) * ((1 - t2610) ** (-0.1e1 / 0.2e1))

        if Bindx == 154:
            t2641 = np.cos(phi)
            t2640 = t2641 ** 2
            t2643 = t2641 * t2640
            t2644 = t2640 ** 2
            t2645 = t2641 * t2644
            t2646 = t2643 ** 2
            t2647 = t2641 * t2646
            t2648 = t2644 ** 2
            t2650 = t2645 ** 2
            t2652 = t2646 ** 2
            t2656 = -992 * t2643 + 308 * t2645 + 3168 * t2647 + (-836 * t2648 - 1408 * t2650 - 132 * t2652 - 108) * t2641
            t2655 = -13 * t2647 ** 2 - 451 * t2640 - 1023 * t2644 + 2409 * t2646 + 1551 * t2648 - 1881 * t2650 - 581 * t2652 - 11
            t2642 = 11 * phi1
            tfunc[..., c] = 0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * (-(-t2655 + t2656) * np.sin((-t2642 + 12 * phi2)) + (t2655 + t2656) * np.sin((t2642 + 12 * phi2))) * ((1 + t2641) ** (-0.1e1 / 0.2e1)) * ((1 - t2641) ** (-0.1e1 / 0.2e1))

        if Bindx == 155:
            t2671 = np.cos(phi)
            t2670 = t2671 ** 2
            t2674 = t2670 ** 2
            t2673 = t2671 * t2670
            t2676 = t2673 ** 2
            t2678 = t2674 ** 2
            t2675 = t2671 * t2674
            t2680 = t2675 ** 2
            t2682 = t2676 ** 2
            t2685 = 6 - 6 * t2670 - 188 * t2674 + 468 * t2676 - 306 * t2678 - 46 * t2680 + 72 * t2682
            t2684 = 144 * t2673 - 135 * t2675 + (-216 * t2676 + 363 * t2678 - 120 * t2680 - 13 * t2682 - 23) * t2671
            t2672 = 12 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2684 + t2685) * np.cos((-t2672 + 6 * phi2)) + (-t2684 + t2685) * np.cos((t2672 + 6 * phi2)))

        if Bindx == 156:
            t2700 = np.cos(phi)
            t2699 = t2700 ** 2
            t2702 = t2699 ** 2
            t2701 = t2700 * t2699
            t2704 = t2701 ** 2
            t2706 = t2702 ** 2
            t2703 = t2700 * t2702
            t2708 = t2703 ** 2
            t2710 = t2704 ** 2
            t2713 = -0.4293e4 / 0.1024e4 * t2699 - 0.10395e5 / 0.512e3 * t2702 - 0.2673e4 / 0.512e3 * t2704 + 0.29403e5 / 0.1024e4 * t2706 + 0.13959e5 / 0.1024e4 * t2708 + 0.243e3 / 0.256e3 * t2710 - 0.81e2 / 0.1024e4
            t2712 = 0.24057e5 / 0.2048e4 * t2701 + 0.82863e5 / 0.4096e4 * t2703 + (-0.16929e5 / 0.1024e4 * t2704 - 0.102465e6 / 0.4096e4 * t2706 - 0.9639e4 / 0.2048e4 * t2708 - 0.351e3 / 0.4096e4 * t2710 + 0.3537e4 / 0.4096e4) * t2700
            tfunc[..., c] = (t2712 + t2713) * np.cos((12 * phi1 - 12 * phi2)) + (-t2712 + t2713) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 157:
            t2726 = np.cos(phi)
            t2725 = t2726 ** 2
            t2729 = t2725 ** 2
            t2732 = t2729 ** 2
            t2730 = t2726 * t2729
            t2734 = t2730 ** 2
            t2735 = t2726 * t2734
            t2738 = -t2726 * t2735 + 12 * t2725 - 27 * t2729 + 27 * t2732 - 12 * t2734 + 1
            t2737 = 6 * t2735 + 2 * (-18 * t2725 + 18) * t2730 + 2 * (-t2725 + t2732 - 3) * t2726
            t2727 = 13 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.6578e4) * np.sqrt((1 - t2726)) * np.sqrt((1 + t2726)) * (-(t2737 + t2738) * np.sin((-t2727 + 6 * phi2)) + (t2737 - t2738) * np.sin((t2727 + 6 * phi2)))

        if Bindx == 158:
            t2753 = np.cos(phi)
            t2752 = t2753 ** 2
            t2755 = t2753 * t2752
            t2756 = t2752 ** 2
            t2757 = t2753 * t2756
            t2759 = t2756 ** 2
            t2761 = t2757 ** 2
            t2758 = t2755 ** 2
            t2763 = t2758 ** 2
            t2764 = t2753 * t2763
            t2767 = 208 * t2755 + 572 * t2757 - 12 * t2764 + (-572 * t2759 - 208 * t2761 + 12) * t2753
            t2766 = -t2753 * t2764 + 65 * t2752 + 429 * t2756 + 429 * t2758 - 429 * t2759 - 429 * t2761 - 65 * t2763 + 1
            t2754 = 13 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.26e2) * (-(-t2766 + t2767) * np.sin((-t2754 + 12 * phi2)) + (t2766 + t2767) * np.sin((t2754 + 12 * phi2))) * ((1 + t2753) ** (-0.1e1 / 0.2e1)) * ((1 - t2753) ** (-0.1e1 / 0.2e1))

        if Bindx == 159:
            t2768 = np.cos(phi)
            t2769 = t2768 ** 2
            t2770 = t2769 ** 2
            t2771 = t2769 * t2770
            t2774 = t2771 ** 2
            t2772 = t2770 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t2774 - 0.421936515e9 / 0.2048e4 * t2772 + 0.140645505e9 / 0.2048e4 * t2771 - 0.22207185e8 / 0.2048e4 * t2770 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t2774 + 0.646969323e9 / 0.2048e4 * t2772 + 0.1306305e7 / 0.2048e4) * t2769

        if Bindx == 160:
            t2776 = np.cos(phi)
            t2777 = t2776 ** 2
            t2778 = t2777 ** 2
            t2779 = t2777 * t2778
            t2782 = t2779 ** 2
            t2780 = t2778 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.3233230e7) * (-1221 * t2778 + 6371 * t2779 - 15747 * t2780 - 12535 * t2782 - 1 + (19941 * t2780 + 3105 * t2782 + 87) * t2777) * np.cos((6 * phi2))

        if Bindx == 161:
            t2784 = np.cos(phi)
            t2785 = t2784 ** 2
            t2786 = t2785 ** 2
            t2787 = t2785 * t2786
            t2790 = t2787 ** 2
            t2788 = t2786 ** 2
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.52003e5) * (-177 * t2786 + 425 * t2787 - 555 * t2788 - 163 * t2790 - 1 + (411 * t2788 + 27 * t2790 + 33) * t2785) * np.cos((12 * phi2))

        if Bindx == 162:
            t2793 = np.cos(phi)
            t2794 = t2793 ** 2
            t2795 = t2794 ** 2
            t2797 = t2795 ** 2
            t2796 = t2794 * t2795
            t2792 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t2793 * t2792 ** 2 * (138567 * t2795 + 1062347 * t2797 + 429 + (-554268 + 334305 * t2796) * t2796 + (-965770 * t2797 - 14586) * t2794) * np.sin(phi1) * ((1 + t2793) ** (-0.1e1 / 0.2e1)) * ((1 - t2793) ** (-0.1e1 / 0.2e1))

        if Bindx == 163:
            t2816 = np.cos(phi)
            t2815 = t2816 ** 2
            t2818 = t2815 ** 2
            t2817 = t2816 * t2815
            t2820 = t2817 ** 2
            t2822 = t2818 ** 2
            t2819 = t2816 * t2818
            t2824 = t2819 ** 2
            t2826 = t2820 ** 2
            t2821 = t2816 * t2820
            t2828 = t2821 ** 2
            t2831 = 1 - 87 * t2815 + 1221 * t2818 - 6371 * t2820 + 15747 * t2822 - 19941 * t2824 + 12535 * t2826 - 3105 * t2828
            t2830 = 843 * t2817 - 7185 * t2819 + 27367 * t2821 + (-54231 * t2822 + 58305 * t2824 - 32315 * t2826 + 7245 * t2828 - 29) * t2816
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.138567e6) * ((t2830 + t2831) * np.sin((phi1 - 6 * phi2)) + (t2830 - t2831) * np.sin((phi1 + 6 * phi2))) * ((1 + t2816) ** (-0.1e1 / 0.2e1)) * ((1 - t2816) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t2848 = np.cos(phi)
            t2847 = t2848 ** 2
            t2850 = t2847 ** 2
            t2849 = t2848 * t2847
            t2852 = t2849 ** 2
            t2854 = t2850 ** 2
            t2851 = t2848 * t2850
            t2856 = t2851 ** 2
            t2858 = t2852 ** 2
            t2853 = t2848 * t2852
            t2860 = t2853 ** 2
            t2863 = 2 - 66 * t2847 + 354 * t2850 - 850 * t2852 + 1110 * t2854 - 822 * t2856 + 326 * t2858 - 54 * t2860
            t2862 = 129 * t2849 - 543 * t2851 + 1165 * t2853 + (-1425 * t2854 + 1011 * t2856 - 389 * t2858 + 63 * t2860 - 11) * t2848
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.222870e6) * ((t2862 + t2863) * np.sin((phi1 - 12 * phi2)) + (t2862 - t2863) * np.sin((phi1 + 12 * phi2))) * ((1 + t2848) ** (-0.1e1 / 0.2e1)) * ((1 - t2848) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t2864 = np.cos(phi)
            t2865 = t2864 ** 2
            t2866 = t2865 ** 2
            t2867 = t2865 * t2866
            t2870 = t2867 ** 2
            t2868 = t2866 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t2866 + 351747 * t2867 - 1033923 * t2868 - 1151495 * t2870 - 33 + (1552661 * t2868 + 334305 * t2870 + 3399) * t2865) * np.cos((2 * phi1))

        if Bindx == 166:
            t2887 = np.cos(phi)
            t2886 = t2887 ** 2
            t2889 = t2887 * t2886
            t2890 = t2886 ** 2
            t2891 = t2887 * t2890
            t2892 = t2889 ** 2
            t2893 = t2887 * t2892
            t2894 = t2890 ** 2
            t2896 = t2891 ** 2
            t2898 = t2892 ** 2
            t2902 = -9596 * t2889 + 74182 * t2891 - 241480 * t2893 + (377798 * t2894 - 281980 * t2896 + 80730 * t2898 + 346) * t2887
            t2901 = 94185 * t2893 ** 2 + 1955 * t2886 - 27487 * t2890 + 147411 * t2892 - 383021 * t2894 + 518305 * t2896 - 351325 * t2898 - 23
            t2888 = 2 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.10659e5) * ((t2901 - t2902) * np.cos((-t2888 + 6 * phi2)) + (t2901 + t2902) * np.cos((t2888 + 6 * phi2)))

        if Bindx == 167:
            t2918 = np.cos(phi)
            t2917 = t2918 ** 2
            t2921 = t2917 ** 2
            t2920 = t2918 * t2917
            t2923 = t2920 ** 2
            t2924 = t2918 * t2923
            t2925 = t2921 ** 2
            t2922 = t2918 * t2921
            t2927 = t2922 ** 2
            t2929 = t2923 ** 2
            t2933 = 63 * t2924 ** 2 - 31 * t2917 + 77 * t2921 + 45 * t2923 - 365 * t2925 + 499 * t2927 - 289 * t2929 + 1
            t2932 = 208 * t2920 - 740 * t2922 + 1280 * t2924 + (-1180 * t2925 + 560 * t2927 - 108 * t2929 - 20) * t2918
            t2919 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.2897310e7) * ((t2932 + t2933) * np.cos((-t2919 + 12 * phi2)) + (-t2932 + t2933) * np.cos((t2919 + 12 * phi2)))

        if Bindx == 168:
            t2942 = np.sin(phi)
            t2940 = t2942 ** 2
            t2934 = np.cos(phi)
            t2935 = t2934 ** 2
            t2936 = t2935 ** 2
            t2938 = t2936 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t2934 * t2940 ** 2 * (-26334 * t2936 - 120175 * t2938 - 99 + (86526 * t2936 + 58995 * t2938 + 3135) * t2935) * np.sin((3 * phi1)) * ((1 + t2934) ** (-0.1e1 / 0.2e1)) * ((1 - t2934) ** (-0.1e1 / 0.2e1))

        if Bindx == 169:
            t2959 = np.cos(phi)
            t2958 = t2959 ** 2
            t2962 = t2958 ** 2
            t2961 = t2959 * t2958
            t2964 = t2961 ** 2
            t2966 = t2962 ** 2
            t2963 = t2959 * t2962
            t2968 = t2963 ** 2
            t2970 = t2964 ** 2
            t2965 = t2959 * t2964
            t2972 = t2965 ** 2
            t2975 = 10043 * t2958 - 136357 * t2962 + 699343 * t2964 - 1726427 * t2966 + 2214049 * t2968 - 1423815 * t2970 + 363285 * t2972 - 121
            t2974 = 13093 * t2961 - 123587 * t2963 + 551233 * t2965 + (-1303597 * t2966 + 1667615 * t2968 - 1086865 * t2970 + 282555 * t2972 - 447) * t2959
            t2960 = 3 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.209e3) * (-(t2974 - t2975) * np.sin((-t2960 + 6 * phi2)) + (t2974 + t2975) * np.sin((t2960 + 6 * phi2))) * ((1 + t2959) ** (-0.1e1 / 0.2e1)) * ((1 - t2959) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t2992 = np.cos(phi)
            t2991 = t2992 ** 2
            t2995 = t2991 ** 2
            t2994 = t2992 * t2991
            t2997 = t2994 ** 2
            t2999 = t2995 ** 2
            t2996 = t2992 * t2995
            t3001 = t2996 ** 2
            t3003 = t2997 ** 2
            t2998 = t2992 * t2997
            t3005 = t2998 ** 2
            t3008 = 2 - 58 * t2991 + 746 * t2995 - 2930 * t2997 + 5350 * t2999 - 5102 * t3001 + 2478 * t3003 - 486 * t3005
            t3007 = -701 * t2994 + 2191 * t2996 - 3065 * t2998 + (1745 * t2999 + 185 * t3001 - 619 * t3003 + 189 * t3005 + 75) * t2992
            t2993 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.56810e5) * (-(t3007 + t3008) * np.sin((-t2993 + 12 * phi2)) + (t3007 - t3008) * np.sin((t2993 + 12 * phi2))) * ((1 + t2992) ** (-0.1e1 / 0.2e1)) * ((1 - t2992) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t3009 = np.cos(phi)
            t3010 = t3009 ** 2
            t3011 = t3010 ** 2
            t3012 = t3010 * t3011
            t3015 = t3012 ** 2
            t3013 = t3011 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t3011 + 8873 * t3012 - 24491 * t3013 - 24035 * t3015 - 1 + (34523 * t3013 + 6555 * t3015 + 97) * t3010) * np.cos((4 * phi1))

        if Bindx == 172:
            t3032 = np.cos(phi)
            t3031 = t3032 ** 2
            t3035 = t3031 ** 2
            t3034 = t3032 * t3031
            t3037 = t3034 ** 2
            t3038 = t3032 * t3037
            t3039 = t3035 ** 2
            t3036 = t3032 * t3035
            t3041 = t3036 ** 2
            t3043 = t3037 ** 2
            t3047 = 345345 * t3038 ** 2 - 2449 * t3031 + 21251 * t3035 - 2509 * t3037 - 338899 * t3039 + 947485 * t3041 - 970255 * t3043 + 31
            t3046 = 64624 * t3034 - 483996 * t3036 + 1573504 * t3038 + (-2522916 * t3039 + 1963280 * t3041 - 592020 * t3043 - 2476) * t3032
            t3033 = 4 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.38e2) * ((t3046 + t3047) * np.cos((-t3033 + 6 * phi2)) + (-t3046 + t3047) * np.cos((t3033 + 6 * phi2)))

        if Bindx == 173:
            t3063 = np.cos(phi)
            t3062 = t3063 ** 2
            t3065 = t3063 * t3062
            t3066 = t3062 ** 2
            t3067 = t3063 * t3066
            t3068 = t3065 ** 2
            t3069 = t3063 * t3068
            t3070 = t3066 ** 2
            t3072 = t3067 ** 2
            t3074 = t3068 ** 2
            t3078 = -48 * t3065 + 40 * t3067 + 160 * t3069 + (-360 * t3070 + 272 * t3072 - 72 * t3074 + 8) * t3063
            t3077 = 21 * t3069 ** 2 - 25 * t3062 + 169 * t3066 - 425 * t3068 + 475 * t3070 - 211 * t3072 - 5 * t3074 + 1
            t3064 = 4 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.312455e6) * ((t3077 + t3078) * np.cos((-t3064 + 12 * phi2)) + (t3077 - t3078) * np.cos((t3064 + 12 * phi2)))

        if Bindx == 174:
            t3087 = np.sin(phi)
            t3084 = t3087 ** 2
            t3085 = t3087 * t3084
            t3079 = np.cos(phi)
            t3080 = t3079 ** 2
            t3081 = t3080 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t3079 * t3085 ** 2 * (-140 * t3080 + 5 + (-2300 * t3080 + 966 + 1725 * t3081) * t3081) * np.sin((5 * phi1)) * ((1 + t3079) ** (-0.1e1 / 0.2e1)) * ((1 - t3079) ** (-0.1e1 / 0.2e1))

        if Bindx == 175:
            t3104 = np.cos(phi)
            t3103 = t3104 ** 2
            t3107 = t3103 ** 2
            t3106 = t3104 * t3103
            t3109 = t3106 ** 2
            t3111 = t3107 ** 2
            t3108 = t3104 * t3107
            t3113 = t3108 ** 2
            t3115 = t3109 ** 2
            t3110 = t3104 * t3109
            t3117 = t3110 ** 2
            t3120 = 17175 * t3103 - 222785 * t3107 + 1148347 * t3109 - 2946015 * t3111 + 3989557 * t3113 - 2726075 * t3115 + 740025 * t3117 - 229
            t3119 = -46785 * t3106 + 291903 * t3108 - 673485 * t3110 + (430705 * t3111 + 554829 * t3113 - 904475 * t3115 + 345345 * t3117 + 1963) * t3104
            t3105 = 5 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.5e1) * (-(t3119 - t3120) * np.sin((-t3105 + 6 * phi2)) + (t3119 + t3120) * np.sin((t3105 + 6 * phi2))) * ((1 + t3104) ** (-0.1e1 / 0.2e1)) * ((1 - t3104) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t3137 = np.cos(phi)
            t3136 = t3137 ** 2
            t3140 = t3136 ** 2
            t3139 = t3137 * t3136
            t3142 = t3139 ** 2
            t3144 = t3140 ** 2
            t3141 = t3137 * t3140
            t3146 = t3141 ** 2
            t3148 = t3142 ** 2
            t3143 = t3137 * t3142
            t3150 = t3143 ** 2
            t3153 = -2 + 42 * t3136 - 218 * t3140 + 402 * t3142 - 198 * t3144 - 226 * t3146 + 290 * t3148 - 90 * t3150
            t3152 = -5 * t3139 + 207 * t3141 - 657 * t3143 + (833 * t3144 - 447 * t3146 + 53 * t3148 + 21 * t3150 - 5) * t3137
            t3138 = 5 * phi1
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.6578e4) * (-(t3152 + t3153) * np.sin((-t3138 + 12 * phi2)) + (t3152 - t3153) * np.sin((t3138 + 12 * phi2))) * ((1 + t3137) ** (-0.1e1 / 0.2e1)) * ((1 - t3137) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t3154 = np.cos(phi)
            t3155 = t3154 ** 2
            t3156 = t3155 ** 2
            t3157 = t3155 * t3156
            t3160 = t3157 ** 2
            t3158 = t3156 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t3156 + 6371 * t3157 - 15747 * t3158 - 12535 * t3160 - 1 + (19941 * t3158 + 3105 * t3160 + 87) * t3155) * np.cos((6 * phi1))

        if Bindx == 178:
            t3177 = np.cos(phi)
            t3176 = t3177 ** 2
            t3178 = t3177 * t3176
            t3179 = t3176 ** 2
            t3180 = t3177 * t3179
            t3181 = t3178 ** 2
            t3182 = t3177 * t3181
            t3183 = t3179 ** 2
            t3185 = t3180 ** 2
            t3187 = t3181 ** 2
            t3191 = 0.3773857e7 / 0.4096e4 * t3178 - 0.60502149e8 / 0.8192e4 * t3180 + 0.55660599e8 / 0.2048e4 * t3182 + (-0.403806469e9 / 0.8192e4 * t3183 + 0.175097505e9 / 0.4096e4 * t3185 - 0.115887915e9 / 0.8192e4 * t3187 - 0.307371e6 / 0.8192e4) * t3177
            t3190 = 0.90135045e8 / 0.16384e5 * t3182 ** 2 - 0.6677337e7 / 0.16384e5 * t3176 + 0.70342893e8 / 0.16384e5 * t3179 - 0.257721753e9 / 0.16384e5 * t3181 + 0.386829927e9 / 0.16384e5 * t3183 - 0.167833875e9 / 0.16384e5 * t3185 - 0.114934105e9 / 0.16384e5 * t3187 + 0.96773e5 / 0.16384e5
            tfunc[..., c] = (t3190 + t3191) * np.cos((6 * phi1 - 6 * phi2)) + (t3190 - t3191) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 179:
            t3207 = np.cos(phi)
            t3206 = t3207 ** 2
            t3209 = t3207 * t3206
            t3210 = t3206 ** 2
            t3211 = t3207 * t3210
            t3212 = t3209 ** 2
            t3213 = t3207 * t3212
            t3214 = t3210 ** 2
            t3216 = t3211 ** 2
            t3218 = t3212 ** 2
            t3222 = -752 * t3209 + 3708 * t3211 - 5760 * t3213 + (2372 * t3214 + 1392 * t3216 - 972 * t3218 + 12) * t3207
            t3221 = 189 * t3213 ** 2 + 435 * t3206 - 1161 * t3210 - 729 * t3212 + 5049 * t3214 - 5079 * t3216 + 1325 * t3218 - 29
            t3208 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3221 + t3222) * np.cos((-t3208 + 12 * phi2)) + (t3221 - t3222) * np.cos((t3208 + 12 * phi2)))

        if Bindx == 180:
            t3230 = np.sin(phi)
            t3227 = t3230 ** 2
            t3228 = t3227 ** 2
            t3223 = np.cos(phi)
            t3224 = t3223 ** 2
            t3225 = t3224 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t3223 * t3228 ** 2 * (-805 * t3225 - 7 + (1035 * t3225 + 161) * t3224) * np.sin((7 * phi1)) * ((1 + t3223) ** (-0.1e1 / 0.2e1)) * ((1 - t3223) ** (-0.1e1 / 0.2e1))

        if Bindx == 181:
            t3247 = np.cos(phi)
            t3246 = t3247 ** 2
            t3250 = t3246 ** 2
            t3249 = t3247 * t3246
            t3252 = t3249 ** 2
            t3254 = t3250 ** 2
            t3251 = t3247 * t3250
            t3256 = t3251 ** 2
            t3258 = t3252 ** 2
            t3253 = t3247 * t3252
            t3260 = t3253 ** 2
            t3263 = -441 * t3246 + 28259 * t3250 - 297549 * t3252 + 1106901 * t3254 - 1871947 * t3256 + 1478785 * t3258 - 444015 * t3260 + 7
            t3262 = -70861 * t3249 + 437535 * t3251 - 1183569 * t3253 + (1497881 * t3254 - 717255 * t3256 - 115115 * t3258 + 148005 * t3260 + 3379) * t3247
            t3248 = 7 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.42e2) * (-(t3262 + t3263) * np.sin((-t3248 + 6 * phi2)) + (t3262 - t3263) * np.sin((t3248 + 6 * phi2))) * ((1 + t3247) ** (-0.1e1 / 0.2e1)) * ((1 - t3247) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t3280 = np.cos(phi)
            t3279 = t3280 ** 2
            t3283 = t3279 ** 2
            t3282 = t3280 * t3279
            t3285 = t3282 ** 2
            t3287 = t3283 ** 2
            t3284 = t3280 * t3283
            t3289 = t3284 ** 2
            t3291 = t3285 ** 2
            t3286 = t3280 * t3285
            t3293 = t3286 ** 2
            t3296 = 2 - 18 * t3279 - 14 * t3283 + 270 * t3285 - 522 * t3287 + 314 * t3289 + 22 * t3291 - 54 * t3293
            t3295 = 71 * t3282 - 225 * t3284 + 171 * t3286 + (193 * t3287 - 315 * t3289 + 101 * t3291 + 9 * t3293 - 5) * t3280
            t3281 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.345345e6) * (-(t3295 + t3296) * np.sin((-t3281 + 12 * phi2)) + (t3295 - t3296) * np.sin((t3281 + 12 * phi2))) * ((1 + t3280) ** (-0.1e1 / 0.2e1)) * ((1 - t3280) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t3297 = np.cos(phi)
            t3298 = t3297 ** 2
            t3299 = t3298 ** 2
            t3300 = t3298 * t3299
            t3303 = t3300 ** 2
            t3301 = t3299 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t3299 + 3753 * t3300 - 7867 * t3301 - 4715 * t3303 - 1 + (8579 * t3301 + 1035 * t3303 + 73) * t3298) * np.cos((8 * phi1))

        if Bindx == 184:
            t3320 = np.cos(phi)
            t3319 = t3320 ** 2
            t3322 = t3320 * t3319
            t3323 = t3319 ** 2
            t3324 = t3320 * t3323
            t3325 = t3322 ** 2
            t3326 = t3320 * t3325
            t3327 = t3323 ** 2
            t3329 = t3324 ** 2
            t3331 = t3325 ** 2
            t3335 = -26848 * t3322 + 59784 * t3324 + 165120 * t3326 + (-719624 * t3327 + 842720 * t3329 - 322920 * t3331 + 1768) * t3320
            t3334 = 94185 * t3326 ** 2 - 17105 * t3319 + 164979 * t3323 - 631173 * t3325 + 1090533 * t3327 - 783955 * t3329 + 82225 * t3331 + 311
            t3321 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.33e2) * ((t3334 + t3335) * np.cos((-t3321 + 6 * phi2)) + (t3334 - t3335) * np.cos((t3321 + 6 * phi2)))

        if Bindx == 185:
            t3351 = np.cos(phi)
            t3350 = t3351 ** 2
            t3353 = t3351 * t3350
            t3354 = t3350 ** 2
            t3355 = t3351 * t3354
            t3356 = t3353 ** 2
            t3357 = t3351 * t3356
            t3358 = t3354 ** 2
            t3360 = t3355 ** 2
            t3362 = t3356 ** 2
            t3366 = 608 * t3353 - 528 * t3355 - 2112 * t3357 + (3344 * t3358 - 800 * t3360 - 432 * t3362 - 80) * t3351
            t3365 = 63 * t3357 ** 2 - 19 * t3350 - 957 * t3354 + 2805 * t3356 - 1551 * t3358 - 1441 * t3360 + 1081 * t3362 + 19
            t3352 = 8 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.8970e4) * ((t3365 + t3366) * np.cos((-t3352 + 12 * phi2)) + (t3365 - t3366) * np.cos((t3352 + 12 * phi2)))

        if Bindx == 186:
            t3374 = np.sin(phi)
            t3370 = t3374 ** 2
            t3372 = t3374 * t3370 ** 2
            t3367 = np.cos(phi)
            t3368 = t3367 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t3367 * t3372 ** 2 * (3 + (-50 + 135 * t3368) * t3368) * np.sin((9 * phi1)) * ((1 + t3367) ** (-0.1e1 / 0.2e1)) * ((1 - t3367) ** (-0.1e1 / 0.2e1))

        if Bindx == 187:
            t3391 = np.cos(phi)
            t3390 = t3391 ** 2
            t3394 = t3390 ** 2
            t3393 = t3391 * t3390
            t3396 = t3393 ** 2
            t3398 = t3394 ** 2
            t3395 = t3391 * t3394
            t3400 = t3395 ** 2
            t3402 = t3396 ** 2
            t3397 = t3391 * t3396
            t3404 = t3397 ** 2
            t3407 = 3713 * t3390 - 25099 * t3394 + 53301 * t3396 - 5037 * t3398 - 114909 * t3400 + 135495 * t3402 - 47385 * t3404 - 79
            t3406 = -8613 * t3393 + 60183 * t3395 - 183753 * t3397 + (264289 * t3398 - 165455 * t3400 + 20605 * t3402 + 12285 * t3404 + 459) * t3391
            t3392 = 9 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.506e3) * (-(t3406 + t3407) * np.sin((-t3392 + 6 * phi2)) + (t3406 - t3407) * np.sin((t3392 + 6 * phi2))) * ((1 + t3391) ** (-0.1e1 / 0.2e1)) * ((1 - t3391) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t3424 = np.cos(phi)
            t3423 = t3424 ** 2
            t3427 = t3423 ** 2
            t3426 = t3424 * t3423
            t3429 = t3426 ** 2
            t3431 = t3427 ** 2
            t3428 = t3424 * t3427
            t3433 = t3428 ** 2
            t3435 = t3429 ** 2
            t3430 = t3424 * t3429
            t3437 = t3430 ** 2
            t3440 = -74 - 518 * t3423 + 5542 * t3427 - 8646 * t3429 - 4686 * t3431 + 14718 * t3433 - 4878 * t3435 - 1458 * t3437
            t3439 = -1677 * t3426 - 3333 * t3428 + 16071 * t3430 + (-12859 * t3431 - 3127 * t3433 + 4313 * t3435 + 189 * t3437 + 423) * t3424
            t3425 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.65e2) * (-(t3439 + t3440) * np.sin((-t3425 + 12 * phi2)) + (t3439 - t3440) * np.sin((t3425 + 12 * phi2))) * ((1 + t3424) ** (-0.1e1 / 0.2e1)) * ((1 - t3424) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t3441 = np.cos(phi)
            t3442 = t3441 ** 2
            t3443 = t3442 ** 2
            t3444 = t3442 * t3443
            t3447 = t3444 ** 2
            t3445 = t3443 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t3443 + 1635 * t3444 - 2755 * t3445 - 1175 * t3447 - 1 + (2501 * t3445 + 225 * t3447 + 55) * t3442) * np.cos((10 * phi1))

        if Bindx == 190:
            t3464 = np.cos(phi)
            t3463 = t3464 ** 2
            t3466 = t3464 * t3463
            t3467 = t3463 ** 2
            t3468 = t3464 * t3467
            t3469 = t3466 ** 2
            t3470 = t3464 * t3469
            t3471 = t3467 ** 2
            t3473 = t3468 ** 2
            t3475 = t3469 ** 2
            t3479 = -7532 * t3466 + 27822 * t3468 - 34152 * t3470 + (-5714 * t3471 + 36500 * t3473 - 17550 * t3475 + 626) * t3464
            t3478 = 4095 * t3470 ** 2 + 37 * t3463 + 6039 * t3467 - 38331 * t3469 + 81477 * t3471 - 68201 * t3473 + 14885 * t3475 - 1
            t3465 = 10 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.3795e4) * ((t3478 + t3479) * np.cos((-t3465 + 6 * phi2)) + (t3478 - t3479) * np.cos((t3465 + 6 * phi2)))

        if Bindx == 191:
            t3495 = np.cos(phi)
            t3494 = t3495 ** 2
            t3497 = t3495 * t3494
            t3498 = t3494 ** 2
            t3499 = t3495 * t3498
            t3500 = t3497 ** 2
            t3501 = t3495 * t3500
            t3502 = t3498 ** 2
            t3504 = t3499 ** 2
            t3506 = t3500 ** 2
            t3510 = 80 * t3497 - 3828 * t3499 + 4224 * t3501 + (3124 * t3502 - 3280 * t3504 - 540 * t3506 + 220) * t3495
            t3509 = 63 * t3501 ** 2 - 527 * t3494 + 2013 * t3498 + 1485 * t3500 - 6765 * t3502 + 1859 * t3504 + 1903 * t3506 - 31
            t3496 = 10 * phi1
            tfunc[..., c] = -0.145e3 / 0.16384e5 * np.sqrt(0.78e2) * ((t3509 + t3510) * np.cos((-t3496 + 12 * phi2)) + (t3509 - t3510) * np.cos((t3496 + 12 * phi2)))

        if Bindx == 192:
            t3516 = np.sin(phi)
            t3512 = t3516 ** 2
            t3513 = t3516 * t3512
            t3514 = t3513 ** 2
            t3511 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t3511 * t3514 ** 2 * (9 * t3511 ** 2 - 1) * np.sin((11 * phi1)) * ((1 + t3511) ** (-0.1e1 / 0.2e1)) * ((1 - t3511) ** (-0.1e1 / 0.2e1))

        if Bindx == 193:
            t3533 = np.cos(phi)
            t3532 = t3533 ** 2
            t3536 = t3532 ** 2
            t3535 = t3533 * t3532
            t3538 = t3535 ** 2
            t3540 = t3536 ** 2
            t3537 = t3533 * t3536
            t3542 = t3537 ** 2
            t3544 = t3538 ** 2
            t3539 = t3533 * t3538
            t3546 = t3539 ** 2
            t3549 = -31 + 837 * t3532 - 6131 * t3536 + 16497 * t3538 - 16749 * t3540 + 671 * t3542 + 8767 * t3544 - 3861 * t3546
            t3548 = 1037 * t3535 + 1341 * t3537 - 14679 * t3539 + (27667 * t3540 - 19881 * t3542 + 3887 * t3544 + 819 * t3546 - 191) * t3533
            t3534 = 11 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.3795e4) * (-(t3548 + t3549) * np.sin((-t3534 + 6 * phi2)) + (t3548 - t3549) * np.sin((t3534 + 6 * phi2))) * ((1 + t3533) ** (-0.1e1 / 0.2e1)) * ((1 - t3533) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t3566 = np.cos(phi)
            t3565 = t3566 ** 2
            t3569 = t3565 ** 2
            t3568 = t3566 * t3565
            t3571 = t3568 ** 2
            t3573 = t3569 ** 2
            t3570 = t3566 * t3569
            t3575 = t3570 ** 2
            t3577 = t3571 ** 2
            t3572 = t3566 * t3571
            t3579 = t3572 ** 2
            t3582 = 38 + 1026 * t3565 - 1394 * t3569 - 7062 * t3571 + 10098 * t3573 + 2662 * t3575 - 4774 * t3577 - 594 * t3579
            t3581 = -1199 * t3568 + 6237 * t3570 - 627 * t3572 + (-10637 * t3573 + 4131 * t3575 + 2351 * t3577 + 63 * t3579 - 319) * t3566
            t3567 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.78e2) * (-(t3581 + t3582) * np.sin((-t3567 + 12 * phi2)) + (t3581 - t3582) * np.sin((t3567 + 12 * phi2))) * ((1 + t3566) ** (-0.1e1 / 0.2e1)) * ((1 - t3566) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t3583 = np.cos(phi)
            t3584 = t3583 ** 2
            t3585 = t3584 ** 2
            t3586 = t3584 * t3585
            t3589 = t3586 ** 2
            t3587 = t3585 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t3585 + 425 * t3586 - 555 * t3587 - 163 * t3589 - 1 + (411 * t3587 + 27 * t3589 + 33) * t3584) * np.cos((12 * phi1))

        if Bindx == 196:
            t3606 = np.cos(phi)
            t3605 = t3606 ** 2
            t3608 = t3606 * t3605
            t3609 = t3605 ** 2
            t3610 = t3606 * t3609
            t3611 = t3608 ** 2
            t3612 = t3606 * t3611
            t3613 = t3609 ** 2
            t3615 = t3610 ** 2
            t3617 = t3611 ** 2
            t3621 = -752 * t3608 + 3708 * t3610 - 5760 * t3612 + (2372 * t3613 + 1392 * t3615 - 972 * t3617 + 12) * t3606
            t3620 = 189 * t3612 ** 2 + 435 * t3605 - 1161 * t3609 - 729 * t3611 + 5049 * t3613 - 5079 * t3615 + 1325 * t3617 - 29
            t3607 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3620 + t3621) * np.cos((-t3607 + 6 * phi2)) + (t3620 - t3621) * np.cos((t3607 + 6 * phi2)))

        if Bindx == 197:
            t3637 = np.cos(phi)
            t3636 = t3637 ** 2
            t3638 = t3637 * t3636
            t3639 = t3636 ** 2
            t3640 = t3637 * t3639
            t3641 = t3638 ** 2
            t3642 = t3637 * t3641
            t3643 = t3639 ** 2
            t3645 = t3640 ** 2
            t3647 = t3641 ** 2
            t3651 = -0.19981e5 / 0.512e3 * t3638 + 0.37323e5 / 0.1024e4 * t3640 + 0.37323e5 / 0.256e3 * t3642 + (-0.70499e5 / 0.1024e4 * t3643 - 0.39585e5 / 0.512e3 * t3645 - 0.7047e4 / 0.1024e4 * t3647 - 0.4785e4 / 0.1024e4) * t3637
            t3650 = 0.5481e4 / 0.8192e4 * t3642 ** 2 + 0.154947e6 / 0.8192e4 * t3636 + 0.261261e6 / 0.8192e4 * t3639 - 0.1057485e7 / 0.8192e4 * t3641 - 0.410553e6 / 0.8192e4 * t3643 + 0.908193e6 / 0.8192e4 * t3645 + 0.252967e6 / 0.8192e4 * t3647 + 0.3973e4 / 0.8192e4
            tfunc[..., c] = (t3650 + t3651) * np.cos((12 * phi1 - 12 * phi2)) + (t3650 - t3651) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 198:
            t3658 = np.sin(phi)
            t3653 = t3658 ** 2
            t3654 = t3658 * t3653
            t3656 = t3658 * t3654 ** 2
            t3652 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t3652 * t3656 ** 2 * np.sin((13 * phi1)) * ((1 + t3652) ** (-0.1e1 / 0.2e1)) * ((1 - t3652) ** (-0.1e1 / 0.2e1))

        if Bindx == 199:
            t3675 = np.cos(phi)
            t3674 = t3675 ** 2
            t3678 = t3674 ** 2
            t3677 = t3675 * t3674
            t3680 = t3677 ** 2
            t3682 = t3678 ** 2
            t3679 = t3675 * t3678
            t3684 = t3679 ** 2
            t3686 = t3680 ** 2
            t3681 = t3675 * t3680
            t3688 = t3681 ** 2
            t3691 = 3 - 9 * t3674 - 89 * t3678 + 347 * t3680 - 423 * t3682 + 149 * t3684 + 61 * t3686 - 39 * t3688
            t3690 = 89 * t3677 - 159 * t3679 - 27 * t3681 + (303 * t3682 - 261 * t3684 + 59 * t3686 + 7 * t3688 - 11) * t3675
            t3676 = 13 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.49335e5) * (-(t3690 + t3691) * np.sin((-t3676 + 6 * phi2)) + (t3690 - t3691) * np.sin((t3676 + 6 * phi2))) * ((1 + t3675) ** (-0.1e1 / 0.2e1)) * ((1 - t3675) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t3708 = np.cos(phi)
            t3707 = t3708 ** 2
            t3711 = t3707 ** 2
            t3710 = t3708 * t3707
            t3713 = t3710 ** 2
            t3715 = t3711 ** 2
            t3712 = t3708 * t3711
            t3717 = t3712 ** 2
            t3719 = t3713 ** 2
            t3714 = t3708 * t3713
            t3721 = t3714 ** 2
            t3724 = -6 - 306 * t3707 - 1118 * t3711 + 1430 * t3713 + 2574 * t3715 - 1430 * t3717 - 1066 * t3719 - 78 * t3721
            t3723 = 793 * t3710 + 429 * t3712 - 3003 * t3714 + (-429 * t3715 + 1755 * t3717 + 383 * t3719 + 7 * t3721 + 65) * t3708
            t3709 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.6e1) * (-(t3723 + t3724) * np.sin((-t3709 + 12 * phi2)) + (t3723 - t3724) * np.sin((t3709 + 12 * phi2))) * ((1 + t3708) ** (-0.1e1 / 0.2e1)) * ((1 - t3708) ** (-0.1e1 / 0.2e1))

        if Bindx == 201:
            t3725 = np.cos(phi)
            t3726 = t3725 ** 2
            t3727 = t3726 ** 2
            t3728 = t3726 * t3727
            t3731 = t3728 ** 2
            t3729 = t3727 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t3727 + 35 * t3728 - 35 * t3729 - 7 * t3731 - 1 + (21 * t3729 + t3731 + 7) * t3726)

        if Bindx == 202:
            t3748 = np.cos(phi)
            t3764 = -6 * t3748
            t3747 = t3748 ** 2
            t3750 = t3748 * t3747
            t3751 = t3747 ** 2
            t3752 = t3748 * t3751
            t3753 = t3750 ** 2
            t3754 = t3748 * t3753
            t3755 = t3751 ** 2
            t3757 = t3752 ** 2
            t3759 = t3753 ** 2
            t3763 = t3759 * t3764 + 4 * t3750 + 38 * t3752 - 72 * t3754 + t3764 + (38 * t3755 + 4 * t3757) * t3748
            t3762 = t3754 ** 2 + 11 * t3747 - 39 * t3751 + 27 * t3753 + 27 * t3755 - 39 * t3757 + 11 * t3759 + 1
            t3749 = 14 * phi1
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.345345e6) * ((t3762 + t3763) * np.cos((-t3749 + 6 * phi2)) + (t3762 - t3763) * np.cos((t3749 + 6 * phi2)))

        if Bindx == 203:
            t3779 = np.cos(phi)
            t3778 = t3779 ** 2
            t3781 = t3779 * t3778
            t3782 = t3778 ** 2
            t3783 = t3779 * t3782
            t3785 = t3782 ** 2
            t3787 = t3783 ** 2
            t3784 = t3781 ** 2
            t3789 = t3784 ** 2
            t3790 = t3779 * t3789
            t3793 = 208 * t3781 + 572 * t3783 - 12 * t3790 + (-572 * t3785 - 208 * t3787 + 12) * t3779
            t3792 = t3779 * t3790 - 65 * t3778 - 429 * t3782 - 429 * t3784 + 429 * t3785 + 429 * t3787 + 65 * t3789 - 1
            t3780 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.42e2) * ((t3792 + t3793) * np.cos((-t3780 + 12 * phi2)) + (t3792 - t3793) * np.cos((t3780 + 12 * phi2)))

        if Bindx == 204:
            tfunc[..., c] = 0

        if Bindx == 205:
            t3811 = np.cos(phi)
            t3810 = t3811 ** 2
            t3812 = t3811 * t3810
            t3813 = t3810 ** 2
            t3814 = t3811 * t3813
            t3815 = t3812 ** 2
            t3816 = t3811 * t3815
            t3817 = t3813 ** 2
            t3819 = t3814 ** 2
            t3821 = t3815 ** 2
            t3823 = t3816 ** 2
            t3827 = -1414 * t3812 + 13650 * t3814 - 57726 * t3816 + (124798 * t3817 - 144210 * t3819 + 84870 * t3821 - 20010 * t3823 + 42) * t3811
            t3826 = 714 * t3810 - 12082 * t3813 + 78722 * t3815 + 451582 * t3819 - 448270 * t3821 + 233910 * t3823 - 7 + (-254544 - 50025 * t3817) * t3817
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.92378e5) * ((-t3826 + t3827) * np.sin((phi1 - 6 * phi2)) + (t3826 + t3827) * np.sin((phi1 + 6 * phi2))) * ((1 + t3811) ** (-0.1e1 / 0.2e1)) * ((1 - t3811) ** (-0.1e1 / 0.2e1))

        if Bindx == 206:
            t3845 = np.cos(phi)
            t3844 = t3845 ** 2
            t3846 = t3845 * t3844
            t3847 = t3844 ** 2
            t3848 = t3845 * t3847
            t3849 = t3846 ** 2
            t3850 = t3845 * t3849
            t3851 = t3847 ** 2
            t3853 = t3848 ** 2
            t3855 = t3849 ** 2
            t3857 = t3850 ** 2
            t3861 = 188 * t3846 - 876 * t3848 + 1980 * t3850 + (-2500 * t3851 + 1812 * t3853 - 708 * t3855 + 116 * t3857 - 12) * t3845
            t3860 = 48 * t3844 - 412 * t3847 + 1520 * t3849 + 3536 * t3853 - 2428 * t3855 + 912 * t3857 - 1 + (-3030 - 145 * t3851) * t3851
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.780045e6) * ((t3860 + t3861) * np.sin((phi1 - 12 * phi2)) + (-t3860 + t3861) * np.sin((phi1 + 12 * phi2))) * ((1 + t3845) ** (-0.1e1 / 0.2e1)) * ((1 - t3845) ** (-0.1e1 / 0.2e1))

        if Bindx == 207:
            t3878 = np.cos(phi)
            t3877 = t3878 ** 2
            t3881 = t3877 ** 2
            t3880 = t3878 * t3877
            t3883 = t3880 ** 2
            t3885 = t3881 ** 2
            t3882 = t3878 * t3881
            t3887 = t3882 ** 2
            t3889 = t3883 ** 2
            t3884 = t3878 * t3883
            t3891 = t3884 ** 2
            t3894 = -600 * t3877 + 9554 * t3881 - 55972 * t3883 + 153962 * t3885 - 215280 * t3887 + 148350 * t3889 - 40020 * t3891 + 6
            t3893 = 2763 * t3880 - 26851 * t3882 + 116355 * t3884 + (-261809 * t3885 + 318665 * t3887 - 199065 * t3889 + 50025 * t3891 - 83) * t3878
            t3879 = 2 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.19019e5) * ((t3893 + t3894) * np.cos((-t3879 + 6 * phi2)) + (-t3893 + t3894) * np.cos((t3879 + 6 * phi2)))

        if Bindx == 208:
            t3911 = np.cos(phi)
            t3910 = t3911 ** 2
            t3913 = t3911 * t3910
            t3914 = t3910 ** 2
            t3915 = t3911 * t3914
            t3916 = t3913 ** 2
            t3917 = t3911 * t3916
            t3918 = t3914 ** 2
            t3920 = t3915 ** 2
            t3922 = t3916 ** 2
            t3924 = t3917 ** 2
            t3927 = 279 * t3913 - 5 * t3915 - 3285 * t3917 + (8485 * t3918 - 9355 * t3920 + 4921 * t3922 - 1015 * t3924 - 25) * t3911
            t3926 = 12 - 552 * t3910 + 4204 * t3914 - 13160 * t3916 + 21220 * t3918 - 18712 * t3920 + 8612 * t3922 - 1624 * t3924
            t3912 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t3926 - t3927) * np.cos((-t3912 + 12 * phi2)) + (t3926 + t3927) * np.cos((t3912 + 12 * phi2)))

        if Bindx == 209:
            t3945 = np.cos(phi)
            t3944 = t3945 ** 2
            t3947 = t3945 * t3944
            t3948 = t3944 ** 2
            t3949 = t3945 * t3948
            t3950 = t3947 ** 2
            t3951 = t3945 * t3950
            t3952 = t3948 ** 2
            t3954 = t3949 ** 2
            t3956 = t3950 ** 2
            t3958 = t3951 ** 2
            t3962 = 54794 * t3947 - 516046 * t3949 + 2153714 * t3951 + (-4647426 * t3952 + 5414430 * t3954 - 3238170 * t3956 + 780390 * t3958 - 1686) * t3945
            t3961 = 4606 * t3944 - 79694 * t3948 + 559206 * t3950 + 4046298 * t3954 - 4565730 * t3956 + 2699970 * t3958 - 47 + (-2014284 - 650325 * t3952) * t3952
            t3946 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.32768e5 * np.sqrt(0.2926e4) * (-(t3961 + t3962) * np.sin((-t3946 + 6 * phi2)) + (-t3961 + t3962) * np.sin((t3946 + 6 * phi2))) * ((1 + t3945) ** (-0.1e1 / 0.2e1)) * ((1 - t3945) ** (-0.1e1 / 0.2e1))

        if Bindx == 210:
            t3980 = np.cos(phi)
            t3979 = t3980 ** 2
            t3982 = t3980 * t3979
            t3983 = t3979 ** 2
            t3984 = t3980 * t3983
            t3985 = t3982 ** 2
            t3986 = t3980 * t3985
            t3987 = t3983 ** 2
            t3989 = t3984 ** 2
            t3991 = t3985 ** 2
            t3993 = t3986 ** 2
            t3997 = -1036 * t3982 + 6716 * t3984 - 20140 * t3986 + (32020 * t3987 - 28100 * t3989 + 12916 * t3991 - 2436 * t3993 + 60) * t3980
            t3996 = -572 * t3979 + 3904 * t3983 - 10380 * t3985 - 4788 * t3989 - 3448 * t3991 + 3836 * t3993 + 13 + (12450 - 1015 * t3987) * t3987
            t3981 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.85215e5) * (-(-t3996 + t3997) * np.sin((-t3981 + 12 * phi2)) + (t3996 + t3997) * np.sin((t3981 + 12 * phi2))) * ((1 + t3980) ** (-0.1e1 / 0.2e1)) * ((1 - t3980) ** (-0.1e1 / 0.2e1))

        if Bindx == 211:
            t4014 = np.cos(phi)
            t4013 = t4014 ** 2
            t4016 = t4014 * t4013
            t4017 = t4013 ** 2
            t4018 = t4014 * t4017
            t4019 = t4016 ** 2
            t4020 = t4014 * t4019
            t4021 = t4017 ** 2
            t4023 = t4018 ** 2
            t4025 = t4019 ** 2
            t4027 = t4020 ** 2
            t4030 = 1509 * t4016 + 23089 * t4018 - 336111 * t4020 + (1383519 * t4021 - 2498145 * t4023 + 2076555 * t4025 - 650325 * t4027 - 91) * t4014
            t4029 = 15416 * t4013 - 234884 * t4017 + 1344056 * t4019 - 3687084 * t4021 + 5235720 * t4023 - 3713580 * t4025 + 1040520 * t4027 - 164
            t4015 = 4 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.462e3) * ((t4029 + t4030) * np.cos((-t4015 + 6 * phi2)) + (t4029 - t4030) * np.cos((t4015 + 6 * phi2)))

        if Bindx == 212:
            t4047 = np.cos(phi)
            t4046 = t4047 ** 2
            t4050 = t4046 ** 2
            t4049 = t4047 * t4046
            t4052 = t4049 ** 2
            t4054 = t4050 ** 2
            t4051 = t4047 * t4050
            t4056 = t4051 ** 2
            t4058 = t4052 ** 2
            t4053 = t4047 * t4052
            t4060 = t4053 ** 2
            t4063 = 8 - 320 * t4046 + 872 * t4050 + 2800 * t4052 - 13800 * t4054 + 20512 * t4056 - 13320 * t4058 + 3248 * t4060
            t4062 = 2091 * t4049 - 9815 * t4051 + 20355 * t4053 + (-19805 * t4054 + 7241 * t4056 + 1099 * t4058 - 1015 * t4060 - 151) * t4047
            t4048 = 4 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.1495e4) * ((t4062 + t4063) * np.cos((-t4048 + 12 * phi2)) + (-t4062 + t4063) * np.cos((t4048 + 12 * phi2)))

        if Bindx == 213:
            t4081 = np.cos(phi)
            t4080 = t4081 ** 2
            t4083 = t4081 * t4080
            t4084 = t4080 ** 2
            t4085 = t4081 * t4084
            t4086 = t4083 ** 2
            t4087 = t4081 * t4086
            t4088 = t4084 ** 2
            t4090 = t4085 ** 2
            t4092 = t4086 ** 2
            t4094 = t4087 ** 2
            t4098 = 179930 * t4083 - 1640574 * t4085 + 6840290 * t4087 + (-15081330 * t4088 + 18193230 * t4090 - 11347050 * t4092 + 2861430 * t4094 - 5926) * t4081
            t4097 = -19350 * t4080 + 258470 * t4084 - 1137694 * t4086 + 596574 * t4090 - 4440150 * t4092 + 4440150 * t4094 + 215 + (1732500 - 1430715 * t4088) * t4088
            t4082 = 5 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.210e3) * (-(t4097 + t4098) * np.sin((-t4082 + 6 * phi2)) + (-t4097 + t4098) * np.sin((t4082 + 6 * phi2))) * ((1 + t4081) ** (-0.1e1 / 0.2e1)) * ((1 - t4081) ** (-0.1e1 / 0.2e1))

        if Bindx == 214:
            t4116 = np.cos(phi)
            t4115 = t4116 ** 2
            t4118 = t4116 * t4115
            t4119 = t4115 ** 2
            t4120 = t4116 * t4119
            t4121 = t4118 ** 2
            t4122 = t4116 * t4121
            t4123 = t4119 ** 2
            t4125 = t4120 ** 2
            t4127 = t4121 ** 2
            t4129 = t4122 ** 2
            t4133 = -508 * t4118 + 1836 * t4120 - 2332 * t4122 + (-412 * t4123 + 3564 * t4125 - 3004 * t4127 + 812 * t4129 + 44) * t4116
            t4132 = -36 * t4115 + 664 * t4119 - 3380 * t4121 - 7724 * t4125 + 3568 * t4127 - 252 * t4129 + 1 + (7362 - 203 * t4123) * t4123
            t4117 = 5 * phi1
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.3289e4) * (-(t4132 + t4133) * np.sin((-t4117 + 12 * phi2)) + (-t4132 + t4133) * np.sin((t4117 + 12 * phi2))) * ((1 + t4116) ** (-0.1e1 / 0.2e1)) * ((1 - t4116) ** (-0.1e1 / 0.2e1))

        if Bindx == 215:
            t4150 = np.cos(phi)
            t4149 = t4150 ** 2
            t4152 = t4149 ** 2
            t4151 = t4150 * t4149
            t4154 = t4151 ** 2
            t4156 = t4152 ** 2
            t4153 = t4150 * t4152
            t4158 = t4153 ** 2
            t4160 = t4154 ** 2
            t4155 = t4150 * t4154
            t4162 = t4155 ** 2
            t4165 = 0.754509e6 / 0.2048e4 * t4149 - 0.44351979e8 / 0.8192e4 * t4152 + 0.130558267e9 / 0.4096e4 * t4154 - 0.763257231e9 / 0.8192e4 * t4156 + 0.145762155e9 / 0.1024e4 * t4158 - 0.888572685e9 / 0.8192e4 * t4160 + 0.133056495e9 / 0.4096e4 * t4162 - 0.35929e5 / 0.8192e4
            t4164 = 0.30427957e8 / 0.16384e5 * t4151 - 0.219938397e9 / 0.16384e5 * t4153 + 0.631038573e9 / 0.16384e5 * t4155 + (-0.732763647e9 / 0.16384e5 * t4156 + 0.96351255e8 / 0.16384e5 * t4158 + 0.417522105e9 / 0.16384e5 * t4160 - 0.221760825e9 / 0.16384e5 * t4162 - 0.1130973e7 / 0.16384e5) * t4150
            tfunc[..., c] = (t4164 + t4165) * np.cos((6 * phi1 - 6 * phi2)) + (-t4164 + t4165) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 216:
            t4182 = np.cos(phi)
            t4181 = t4182 ** 2
            t4185 = t4181 ** 2
            t4184 = t4182 * t4181
            t4187 = t4184 ** 2
            t4189 = t4185 ** 2
            t4186 = t4182 * t4185
            t4191 = t4186 ** 2
            t4193 = t4187 ** 2
            t4188 = t4182 * t4187
            t4195 = t4188 ** 2
            t4198 = -4 + 120 * t4181 - 996 * t4185 + 2936 * t4187 - 3276 * t4189 + 456 * t4191 + 1460 * t4193 - 696 * t4195
            t4197 = -223 * t4184 - 3 * t4186 + 2205 * t4188 + (-4717 * t4189 + 3603 * t4191 - 753 * t4193 - 145 * t4195 + 33) * t4182
            t4183 = 6 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4197 + t4198) * np.cos((-t4183 + 12 * phi2)) + (t4197 + t4198) * np.cos((t4183 + 12 * phi2)))

        if Bindx == 217:
            t4216 = np.cos(phi)
            t4215 = t4216 ** 2
            t4218 = t4216 * t4215
            t4219 = t4215 ** 2
            t4220 = t4216 * t4219
            t4221 = t4218 ** 2
            t4222 = t4216 * t4221
            t4223 = t4219 ** 2
            t4225 = t4220 ** 2
            t4227 = t4221 ** 2
            t4229 = t4222 ** 2
            t4233 = 48258 * t4218 - 533190 * t4220 + 2745482 * t4222 + (-7161418 * t4223 + 9800070 * t4225 - 6718530 * t4227 + 1820910 * t4229 - 1582) * t4216
            t4232 = -39702 * t4215 + 501998 * t4219 - 2388638 * t4221 - 5621154 * t4225 + 1862770 * t4227 + 995670 * t4229 + 509 + (5338872 - 650325 * t4223) * t4223
            t4217 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.22e2) * (-(t4232 + t4233) * np.sin((-t4217 + 6 * phi2)) + (-t4232 + t4233) * np.sin((t4217 + 6 * phi2))) * ((1 + t4216) ** (-0.1e1 / 0.2e1)) * ((1 - t4216) ** (-0.1e1 / 0.2e1))

        if Bindx == 218:
            t4251 = np.cos(phi)
            t4250 = t4251 ** 2
            t4253 = t4251 * t4250
            t4254 = t4250 ** 2
            t4255 = t4251 * t4254
            t4256 = t4253 ** 2
            t4257 = t4251 * t4256
            t4258 = t4254 ** 2
            t4260 = t4255 ** 2
            t4262 = t4256 ** 2
            t4264 = t4257 ** 2
            t4268 = 92 * t4253 - 1740 * t4255 + 5852 * t4257 + (-7524 * t4258 + 3060 * t4260 + 1052 * t4262 - 812 * t4264 + 20) * t4251
            t4267 = 216 * t4250 - 1252 * t4254 + 2200 * t4256 - 5368 * t4260 + 5036 * t4262 - 1272 * t4264 - 9 + (594 - 145 * t4258) * t4258
            t4252 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.31395e5) * (-(-t4267 + t4268) * np.sin((-t4252 + 12 * phi2)) + (t4267 + t4268) * np.sin((t4252 + 12 * phi2))) * ((1 + t4251) ** (-0.1e1 / 0.2e1)) * ((1 - t4251) ** (-0.1e1 / 0.2e1))

        if Bindx == 219:
            t4285 = np.cos(phi)
            t4284 = t4285 ** 2
            t4288 = t4284 ** 2
            t4287 = t4285 * t4284
            t4290 = t4287 ** 2
            t4292 = t4288 ** 2
            t4289 = t4285 * t4288
            t4294 = t4289 ** 2
            t4296 = t4290 ** 2
            t4291 = t4285 * t4290
            t4298 = t4291 ** 2
            t4301 = -560 * t4284 + 2632 * t4288 + 20496 * t4290 - 140776 * t4292 + 300720 * t4294 - 273000 * t4296 + 90480 * t4298 + 8
            t4300 = -10731 * t4287 + 73633 * t4289 - 222055 * t4291 + (316967 * t4292 - 185185 * t4294 - 1365 * t4296 + 28275 * t4298 + 461) * t4285
            t4286 = 8 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.253e3) * ((-t4300 + t4301) * np.cos((-t4286 + 6 * phi2)) + (t4300 + t4301) * np.cos((t4286 + 6 * phi2)))

        if Bindx == 220:
            t4318 = np.cos(phi)
            t4317 = t4318 ** 2
            t4321 = t4317 ** 2
            t4320 = t4318 * t4317
            t4323 = t4320 ** 2
            t4325 = t4321 ** 2
            t4322 = t4318 * t4321
            t4327 = t4322 ** 2
            t4329 = t4323 ** 2
            t4324 = t4318 * t4323
            t4331 = t4324 ** 2
            t4334 = 16 - 256 * t4317 + 592 * t4321 + 1760 * t4323 - 6864 * t4325 + 6336 * t4327 - 656 * t4329 - 928 * t4331
            t4333 = -587 * t4320 + 3047 * t4322 - 4587 * t4324 + (-11 * t4325 + 4295 * t4327 - 2027 * t4329 - 145 * t4331 + 15) * t4318
            t4319 = 8 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2730e4) * ((-t4333 + t4334) * np.cos((-t4319 + 12 * phi2)) + (t4333 + t4334) * np.cos((t4319 + 12 * phi2)))

        if Bindx == 221:
            t4352 = np.cos(phi)
            t4351 = t4352 ** 2
            t4354 = t4352 * t4351
            t4355 = t4351 ** 2
            t4356 = t4352 * t4355
            t4357 = t4354 ** 2
            t4358 = t4352 * t4357
            t4359 = t4355 ** 2
            t4361 = t4356 ** 2
            t4363 = t4357 ** 2
            t4365 = t4358 ** 2
            t4369 = -10222 * t4354 + 44042 * t4356 - 35302 * t4358 + (-157914 * t4359 + 395190 * t4361 - 338130 * t4363 + 101790 * t4365 + 546) * t4352
            t4368 = -3658 * t4351 + 42674 * t4355 - 208066 * t4357 - 594046 * t4361 + 310830 * t4363 - 15990 * t4365 + 59 + (496472 - 28275 * t4359) * t4359
            t4353 = 9 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.10626e5) * (-(t4368 + t4369) * np.sin((-t4353 + 6 * phi2)) + (-t4368 + t4369) * np.sin((t4353 + 6 * phi2))) * ((1 - t4352) ** (-0.1e1 / 0.2e1)) * ((1 + t4352) ** (-0.1e1 / 0.2e1))

        if Bindx == 222:
            t4387 = np.cos(phi)
            t4386 = t4387 ** 2
            t4389 = t4387 * t4386
            t4390 = t4386 ** 2
            t4391 = t4387 * t4390
            t4392 = t4389 ** 2
            t4393 = t4387 * t4392
            t4394 = t4390 ** 2
            t4396 = t4391 ** 2
            t4398 = t4392 ** 2
            t4400 = t4393 ** 2
            t4404 = -7876 * t4389 + 23636 * t4391 - 3652 * t4393 + (-63492 * t4394 + 72084 * t4396 - 13956 * t4398 - 7308 * t4400 + 564) * t4387
            t4403 = -1416 * t4386 - 5196 * t4390 + 44088 * t4392 + 28776 * t4396 + 31364 * t4398 - 19096 * t4400 + 177 + (-77682 - 1015 * t4394) * t4394
            t4388 = 9 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(-t4403 + t4404) * np.sin((-t4388 + 12 * phi2)) + (t4403 + t4404) * np.sin((t4388 + 12 * phi2))) * ((1 + t4387) ** (-0.1e1 / 0.2e1)) * ((1 - t4387) ** (-0.1e1 / 0.2e1))

        if Bindx == 223:
            t4421 = np.cos(phi)
            t4420 = t4421 ** 2
            t4424 = t4420 ** 2
            t4423 = t4421 * t4420
            t4426 = t4423 ** 2
            t4428 = t4424 ** 2
            t4425 = t4421 * t4424
            t4430 = t4425 ** 2
            t4432 = t4426 ** 2
            t4427 = t4421 * t4426
            t4434 = t4427 ** 2
            t4437 = -6 + 312 * t4420 - 2386 * t4424 + 6116 * t4426 - 3562 * t4428 - 7728 * t4430 + 11778 * t4432 - 4524 * t4434
            t4436 = 511 * t4423 - 4343 * t4425 + 15175 * t4427 + (-24125 * t4428 + 16549 * t4430 - 2613 * t4432 - 1131 * t4434 - 23) * t4421
            t4422 = 10 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.1771e4) * ((-t4436 + t4437) * np.cos((-t4422 + 6 * phi2)) + (t4436 + t4437) * np.cos((t4422 + 6 * phi2)))

        if Bindx == 224:
            t4454 = np.cos(phi)
            t4453 = t4454 ** 2
            t4457 = t4453 ** 2
            t4456 = t4454 * t4453
            t4459 = t4456 ** 2
            t4461 = t4457 ** 2
            t4458 = t4454 * t4457
            t4463 = t4458 ** 2
            t4465 = t4459 ** 2
            t4460 = t4454 * t4459
            t4467 = t4460 ** 2
            t4470 = 52 + 104 * t4453 - 4076 * t4457 + 10472 * t4459 - 1188 * t4461 - 13992 * t4463 + 7004 * t4465 + 1624 * t4467
            t4469 = 1819 * t4456 + 143 * t4458 - 13233 * t4460 + (16577 * t4461 + 289 * t4463 - 5131 * t4465 - 203 * t4467 - 261) * t4454
            t4455 = 10 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.390e3) * ((t4469 + t4470) * np.cos((-t4455 + 12 * phi2)) + (-t4469 + t4470) * np.cos((t4455 + 12 * phi2)))

        if Bindx == 225:
            t4488 = np.cos(phi)
            t4487 = t4488 ** 2
            t4490 = t4488 * t4487
            t4491 = t4487 ** 2
            t4492 = t4488 * t4491
            t4493 = t4490 ** 2
            t4494 = t4488 * t4493
            t4495 = t4491 ** 2
            t4497 = t4492 ** 2
            t4499 = t4493 ** 2
            t4501 = t4494 ** 2
            t4505 = 778 * t4490 - 3726 * t4492 + 7314 * t4494 + (-4642 * t4495 - 3234 * t4497 + 5478 * t4499 - 1914 * t4501 - 54) * t4488
            t4504 = 42 * t4487 + 294 * t4491 - 3678 * t4493 - 15714 * t4497 + 9322 * t4499 - 1386 * t4501 - 1 + (11556 - 435 * t4495) * t4495
            t4489 = 11 * phi1
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.230230e6) * (-(-t4504 + t4505) * np.sin((-t4489 + 6 * phi2)) + (t4504 + t4505) * np.sin((t4489 + 6 * phi2))) * ((1 - t4488) ** (-0.1e1 / 0.2e1)) * ((1 + t4488) ** (-0.1e1 / 0.2e1))

        if Bindx == 226:
            t4523 = np.cos(phi)
            t4522 = t4523 ** 2
            t4525 = t4523 * t4522
            t4526 = t4522 ** 2
            t4527 = t4523 * t4526
            t4528 = t4525 ** 2
            t4529 = t4523 * t4528
            t4530 = t4526 ** 2
            t4532 = t4527 ** 2
            t4534 = t4528 ** 2
            t4536 = t4529 ** 2
            t4540 = -6356 * t4525 - 40092 * t4527 + 126412 * t4529 + (-56628 * t4530 - 87516 * t4532 + 52844 * t4534 + 8932 * t4536 + 2404) * t4523
            t4539 = 4356 * t4522 - 35464 * t4526 + 33748 * t4528 - 148148 * t4532 + 17056 * t4534 + 31836 * t4536 + 363 + (95238 + 1015 * t4530) * t4530
            t4524 = 11 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.3e1) * (-(-t4539 + t4540) * np.sin((-t4524 + 12 * phi2)) + (t4539 + t4540) * np.sin((t4524 + 12 * phi2))) * ((1 - t4523) ** (-0.1e1 / 0.2e1)) * ((1 + t4523) ** (-0.1e1 / 0.2e1))

        if Bindx == 227:
            t4557 = np.cos(phi)
            t4556 = t4557 ** 2
            t4560 = t4556 ** 2
            t4559 = t4557 * t4556
            t4562 = t4559 ** 2
            t4564 = t4560 ** 2
            t4561 = t4557 * t4560
            t4566 = t4561 ** 2
            t4568 = t4562 ** 2
            t4563 = t4557 * t4562
            t4570 = t4563 ** 2
            t4573 = 4 - 120 * t4556 + 996 * t4560 - 2936 * t4562 + 3276 * t4564 - 456 * t4566 - 1460 * t4568 + 696 * t4570
            t4572 = -223 * t4559 - 3 * t4561 + 2205 * t4563 + (-4717 * t4564 + 3603 * t4566 - 753 * t4568 - 145 * t4570 + 33) * t4557
            t4558 = 12 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((t4572 + t4573) * np.cos((-t4558 + 6 * phi2)) + (-t4572 + t4573) * np.cos((t4558 + 6 * phi2)))

        if Bindx == 228:
            t4590 = np.cos(phi)
            t4589 = t4590 ** 2
            t4592 = t4589 ** 2
            t4591 = t4590 * t4589
            t4594 = t4591 ** 2
            t4596 = t4592 ** 2
            t4593 = t4590 * t4592
            t4598 = t4593 ** 2
            t4600 = t4594 ** 2
            t4595 = t4590 * t4594
            t4602 = t4595 ** 2
            t4605 = -0.5673e4 / 0.128e3 * t4589 + 0.117273e6 / 0.1024e4 * t4592 + 0.155155e6 / 0.512e3 * t4594 - 0.678249e6 / 0.1024e4 * t4596 - 0.13299e5 / 0.256e3 * t4598 + 0.329251e6 / 0.1024e4 * t4600 + 0.18879e5 / 0.512e3 * t4602 - 0.1891e4 / 0.1024e4
            t4604 = 0.292981e6 / 0.8192e4 * t4591 - 0.2806089e7 / 0.8192e4 * t4593 + 0.1476189e7 / 0.8192e4 * t4595 + (0.4738877e7 / 0.8192e4 * t4596 - 0.2690025e7 / 0.8192e4 * t4598 - 0.1229739e7 / 0.8192e4 * t4600 - 0.31465e5 / 0.8192e4 * t4602 + 0.122295e6 / 0.8192e4) * t4590
            tfunc[..., c] = (t4604 + t4605) * np.cos((12 * phi1 - 12 * phi2)) + (-t4604 + t4605) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 229:
            t4623 = np.cos(phi)
            t4622 = t4623 ** 2
            t4625 = t4623 * t4622
            t4626 = t4622 ** 2
            t4627 = t4623 * t4626
            t4628 = t4625 ** 2
            t4629 = t4623 * t4628
            t4630 = t4626 ** 2
            t4632 = t4627 ** 2
            t4634 = t4628 ** 2
            t4636 = t4629 ** 2
            t4640 = 482 * t4625 - 3222 * t4627 + 7274 * t4629 + (-6586 * t4630 + 1062 * t4632 + 1742 * t4634 - 754 * t4636 + 2) * t4623
            t4639 = 342 * t4622 - 1318 * t4626 + 734 * t4628 - 7582 * t4632 + 4982 * t4634 - 918 * t4636 - 19 + (3924 - 145 * t4630) * t4630
            t4624 = 13 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.32890e5) * (-(-t4639 + t4640) * np.sin((-t4624 + 6 * phi2)) + (t4639 + t4640) * np.sin((t4624 + 6 * phi2))) * ((1 - t4623) ** (-0.1e1 / 0.2e1)) * ((1 + t4623) ** (-0.1e1 / 0.2e1))

        if Bindx == 230:
            t4658 = np.cos(phi)
            t4657 = t4658 ** 2
            t4660 = t4658 * t4657
            t4661 = t4657 ** 2
            t4662 = t4658 * t4661
            t4663 = t4660 ** 2
            t4664 = t4658 * t4663
            t4665 = t4661 ** 2
            t4667 = t4662 ** 2
            t4669 = t4663 ** 2
            t4671 = t4664 ** 2
            t4675 = -5588 * t4660 + 17316 * t4662 + 16588 * t4664 + (-47476 * t4665 + 2340 * t4667 + 16172 * t4669 + 1508 * t4671 - 860) * t4658
            t4674 = 3276 * t4657 + 208 * t4661 - 31460 * t4663 + 31460 * t4667 - 19864 * t4669 - 6732 * t4671 + 91 + (23166 - 145 * t4665) * t4665
            t4659 = 13 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.21e2) * (-(t4674 + t4675) * np.sin((-t4659 + 12 * phi2)) + (-t4674 + t4675) * np.sin((t4659 + 12 * phi2))) * ((1 - t4658) ** (-0.1e1 / 0.2e1)) * ((1 + t4658) ** (-0.1e1 / 0.2e1))

        if Bindx == 231:
            t4692 = np.cos(phi)
            t4691 = t4692 ** 2
            t4695 = t4691 ** 2
            t4694 = t4692 * t4691
            t4697 = t4694 ** 2
            t4699 = t4695 ** 2
            t4696 = t4692 * t4695
            t4701 = t4696 ** 2
            t4703 = t4697 ** 2
            t4698 = t4692 * t4697
            t4705 = t4698 ** 2
            t4708 = 2 - 8 * t4691 - 58 * t4695 + 244 * t4697 - 306 * t4699 + 112 * t4701 + 42 * t4703 - 28 * t4705
            t4707 = -63 * t4694 + 119 * t4696 + 9 * t4698 + (-211 * t4699 + 187 * t4701 - 43 * t4703 - 5 * t4705 + 7) * t4692
            t4693 = 14 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.476905e6) * ((-t4707 + t4708) * np.cos((-t4693 + 6 * phi2)) + (t4707 + t4708) * np.cos((t4693 + 6 * phi2)))

        if Bindx == 232:
            t4725 = np.cos(phi)
            t4724 = t4725 ** 2
            t4728 = t4724 ** 2
            t4727 = t4725 * t4724
            t4730 = t4727 ** 2
            t4732 = t4728 ** 2
            t4729 = t4725 * t4728
            t4734 = t4729 ** 2
            t4736 = t4730 ** 2
            t4731 = t4725 * t4730
            t4738 = t4731 ** 2
            t4741 = 4 + 200 * t4724 + 676 * t4728 - 1144 * t4730 - 1716 * t4732 + 1144 * t4734 + 780 * t4736 + 56 * t4738
            t4740 = -507 * t4727 - 143 * t4729 + 2145 * t4731 + (143 * t4732 - 1313 * t4734 - 277 * t4736 - 5 * t4738 - 43) * t4725
            t4726 = 14 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1218e4) * ((t4740 + t4741) * np.cos((-t4726 + 12 * phi2)) + (-t4740 + t4741) * np.cos((t4726 + 12 * phi2)))

        if Bindx == 233:
            t4757 = np.cos(phi)
            t4773 = 6 * t4757
            t4756 = t4757 ** 2
            t4759 = t4757 * t4756
            t4760 = t4756 ** 2
            t4761 = t4757 * t4760
            t4762 = t4759 ** 2
            t4763 = t4757 * t4762
            t4764 = t4760 ** 2
            t4766 = t4761 ** 2
            t4768 = t4762 ** 2
            t4772 = t4768 * t4773 - 4 * t4759 - 38 * t4761 + 72 * t4763 + t4773 + (-38 * t4764 - 4 * t4766) * t4757
            t4771 = -t4763 ** 2 - 11 * t4756 + 39 * t4760 - 27 * t4762 - 27 * t4764 + 39 * t4766 - 11 * t4768 - 1
            t4758 = 15 * phi1
            tfunc[..., c] = -0.155e3 / 0.32768e5 * np.sqrt(0.572286e6) * np.sqrt((1 - t4757)) * np.sqrt((1 + t4757)) * (-(t4771 + t4772) * np.sin((-t4758 + 6 * phi2)) + (-t4771 + t4772) * np.sin((t4758 + 6 * phi2)))

        if Bindx == 234:
            t4788 = np.cos(phi)
            t4787 = t4788 ** 2
            t4790 = t4788 * t4787
            t4791 = t4787 ** 2
            t4792 = t4788 * t4791
            t4794 = t4791 ** 2
            t4796 = t4792 ** 2
            t4793 = t4790 ** 2
            t4798 = t4793 ** 2
            t4799 = t4788 * t4798
            t4802 = -208 * t4790 - 572 * t4792 + 12 * t4799 + (572 * t4794 + 208 * t4796 - 12) * t4788
            t4801 = -t4788 * t4799 + 65 * t4787 + 429 * t4791 + 429 * t4793 - 429 * t4794 - 429 * t4796 - 65 * t4798 + 1
            t4789 = 15 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1015e4) * np.sqrt((1 - t4788)) * np.sqrt((1 + t4788)) * (-(t4801 + t4802) * np.sin((-t4789 + 12 * phi2)) + (-t4801 + t4802) * np.sin((t4789 + 12 * phi2)))

        if Bindx == 235:
            t4803 = np.cos(phi)
            t4804 = t4803 ** 2
            t4805 = t4804 ** 2
            t4806 = t4804 * t4805
            t4809 = t4806 ** 2
            t4807 = t4805 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t4809 - 0.672188517e9 / 0.4096e4 * t4806 + 0.160044885e9 / 0.8192e4 * t4805 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t4807) * t4807 + (-0.4798948275e10 / 0.4096e4 * t4809 - 0.6135053925e10 / 0.4096e4 * t4807 - 0.3610035e7 / 0.4096e4) * t4804

        if Bindx == 236:
            t4812 = np.cos(phi)
            t4813 = t4812 ** 2
            t4814 = t4813 ** 2
            t4815 = t4813 * t4814
            t4818 = t4815 ** 2
            t4816 = t4814 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.25194e5) * (47558 * t4814 - 345366 * t4815 + 2498490 * t4818 + 21 + (1225440 + 310155 * t4816) * t4816 + (-2353130 * t4816 - 1380690 * t4818 - 2478) * t4813) * np.cos((6 * phi2))

        if Bindx == 237:
            t4821 = np.cos(phi)
            t4822 = t4821 ** 2
            t4823 = t4822 ** 2
            t4824 = t4822 * t4823
            t4827 = t4824 ** 2
            t4825 = t4823 ** 2
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.7429e4) * (1988 * t4823 - 8064 * t4824 + 14532 * t4827 + 3 + (17010 + 899 * t4825) * t4825 + (-20608 * t4825 - 5568 * t4827 - 192) * t4822) * np.cos((12 * phi2))

        if Bindx == 238:
            t4831 = np.cos(phi)
            t4832 = t4831 ** 2
            t4833 = t4832 ** 2
            t4834 = t4832 * t4833
            t4837 = t4834 ** 2
            t4835 = t4833 ** 2
            t4830 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * t4831 * t4830 ** 2 * (-3594591 * t4833 + 19684665 * t4834 - 54679625 * t4835 - 59879925 * t4837 - 6435 + (80528175 * t4835 + 17678835 * t4837 + 285285) * t4832) * np.sin(phi1) * ((1 + t4831) ** (-0.1e1 / 0.2e1)) * ((1 - t4831) ** (-0.1e1 / 0.2e1))

        if Bindx == 239:
            t4857 = np.cos(phi)
            t4856 = t4857 ** 2
            t4859 = t4856 ** 2
            t4858 = t4857 * t4856
            t4861 = t4858 ** 2
            t4863 = t4859 ** 2
            t4860 = t4857 * t4859
            t4865 = t4860 ** 2
            t4867 = t4861 ** 2
            t4862 = t4857 * t4861
            t4869 = t4862 ** 2
            t4871 = t4863 ** 2
            t4874 = 7434 * t4856 - 142674 * t4859 + 1036098 * t4861 - 3676320 * t4863 + 7059390 * t4865 - 7495470 * t4867 + 4142070 * t4869 - 930465 * t4871 - 63
            t4873 = -97594 * t4858 + 1131214 * t4860 - 5937858 * t4862 + (16667410 * t4863 - 26756590 * t4865 + 24655770 * t4867 - 12146070 * t4869 + 2481240 * t4871 + 2478) * t4857
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.1482e4) * ((t4873 + t4874) * np.sin((phi1 - 6 * phi2)) + (t4873 - t4874) * np.sin((phi1 + 6 * phi2))) * ((1 + t4857) ** (-0.1e1 / 0.2e1)) * ((1 - t4857) ** (-0.1e1 / 0.2e1))

        if Bindx == 240:
            t4893 = np.cos(phi)
            t4892 = t4893 ** 2
            t4895 = t4892 ** 2
            t4894 = t4893 * t4892
            t4897 = t4894 ** 2
            t4899 = t4895 ** 2
            t4896 = t4893 * t4895
            t4901 = t4896 ** 2
            t4903 = t4897 ** 2
            t4898 = t4893 * t4897
            t4905 = t4898 ** 2
            t4907 = t4899 ** 2
            t4910 = -9 + 576 * t4892 - 5964 * t4895 + 24192 * t4897 - 51030 * t4899 + 61824 * t4901 - 43596 * t4903 + 16704 * t4905 - 2697 * t4907
            t4909 = -2084 * t4894 + 14084 * t4896 - 46116 * t4898 + (85540 * t4899 - 95116 * t4901 + 63084 * t4903 - 23084 * t4905 + 3596 * t4907 + 96) * t4893
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.437e3) * ((t4909 + t4910) * np.sin((phi1 - 12 * phi2)) + (t4909 - t4910) * np.sin((phi1 + 12 * phi2))) * ((1 + t4893) ** (-0.1e1 / 0.2e1)) * ((1 - t4893) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t4911 = np.cos(phi)
            t4912 = t4911 ** 2
            t4913 = t4912 ** 2
            t4914 = t4912 * t4913
            t4917 = t4914 ** 2
            t4915 = t4913 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t4913 - 3461458 * t4914 + 36983310 * t4917 + 143 + (13997984 + 5892945 * t4915) * t4915 + (-30620590 * t4915 - 23191590 * t4917 - 19162) * t4912) * np.cos((2 * phi1))

        if Bindx == 242:
            t4937 = np.cos(phi)
            t4936 = t4937 ** 2
            t4939 = t4937 * t4936
            t4940 = t4936 ** 2
            t4941 = t4937 * t4940
            t4942 = t4939 ** 2
            t4943 = t4937 * t4942
            t4944 = t4940 ** 2
            t4946 = t4941 ** 2
            t4948 = t4942 ** 2
            t4950 = t4943 ** 2
            t4954 = -37555 * t4939 + 405419 * t4941 - 1900651 * t4943 + (4521225 * t4944 - 5710785 * t4946 + 3651825 * t4948 - 930465 * t4950 + 987) * t4937
            t4953 = -8120 * t4936 + 155134 * t4940 - 1136268 * t4942 - 8169600 * t4946 + 9042450 * t4948 - 5242620 * t4950 + 70 + (4118334 + 1240620 * t4944) * t4944
            t4938 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * ((t4953 + t4954) * np.cos((-t4938 + 6 * phi2)) + (t4953 - t4954) * np.cos((t4938 + 6 * phi2)))

        if Bindx == 243:
            t4972 = np.cos(phi)
            t4971 = t4972 ** 2
            t4975 = t4971 ** 2
            t4974 = t4972 * t4971
            t4977 = t4974 ** 2
            t4979 = t4975 ** 2
            t4976 = t4972 * t4975
            t4981 = t4976 ** 2
            t4983 = t4977 ** 2
            t4978 = t4972 * t4977
            t4985 = t4978 ** 2
            t4989 = 124 * t4971 + 280 * t4975 - 12180 * t4977 - 98028 * t4981 + 94136 * t4983 - 45820 * t4985 - 2 + (52500 + 8990 * t4979) * t4979
            t4988 = -7763 * t4974 + 46585 * t4976 - 129815 * t4978 + (195335 * t4979 - 164521 * t4981 + 73283 * t4983 - 13485 * t4985 + 381) * t4972
            t4973 = 2 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t4988 + t4989) * np.cos((-t4973 + 12 * phi2)) + (-t4988 + t4989) * np.cos((t4973 + 12 * phi2)))

        if Bindx == 244:
            t4999 = np.sin(phi)
            t4997 = t4999 ** 2
            t4990 = np.cos(phi)
            t4991 = t4990 ** 2
            t4992 = t4991 ** 2
            t4994 = t4992 ** 2
            t4993 = t4991 * t4992
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t4990 * t4997 ** 2 * (69069 * t4992 + 740025 * t4994 + 143 + (-328900 + 310155 * t4993) * t4993 + (-780390 * t4994 - 6006) * t4991) * np.sin((3 * phi1)) * ((1 + t4990) ** (-0.1e1 / 0.2e1)) * ((1 - t4990) ** (-0.1e1 / 0.2e1))

        if Bindx == 245:
            t5018 = np.cos(phi)
            t5017 = t5018 ** 2
            t5021 = t5017 ** 2
            t5020 = t5018 * t5017
            t5023 = t5020 ** 2
            t5025 = t5021 ** 2
            t5022 = t5018 * t5021
            t5027 = t5022 ** 2
            t5029 = t5023 ** 2
            t5024 = t5018 * t5023
            t5031 = t5024 ** 2
            t5033 = t5025 ** 2
            t5036 = 22914 * t5017 - 427922 * t5021 + 3048346 * t5023 - 10700612 * t5025 + 20497830 * t5027 - 21875070 * t5029 + 12226110 * t5031 - 2791395 * t5033 - 201
            t5035 = -56458 * t5020 + 670766 * t5022 - 3726834 * t5024 + (11325522 * t5025 - 19943070 * t5027 + 20272890 * t5029 - 11025510 * t5031 + 2481240 * t5033 + 1454) * t5018
            t5019 = 3 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.910e3) * (-(t5035 + t5036) * np.sin((-t5019 + 6 * phi2)) + (t5035 - t5036) * np.sin((t5019 + 6 * phi2))) * ((1 + t5018) ** (-0.1e1 / 0.2e1)) * ((1 - t5018) ** (-0.1e1 / 0.2e1))

        if Bindx == 246:
            t5055 = np.cos(phi)
            t5054 = t5055 ** 2
            t5057 = t5055 * t5054
            t5058 = t5054 ** 2
            t5059 = t5055 * t5058
            t5060 = t5057 ** 2
            t5061 = t5055 * t5060
            t5062 = t5058 ** 2
            t5064 = t5059 ** 2
            t5066 = t5060 ** 2
            t5068 = t5061 ** 2
            t5070 = t5062 ** 2
            t5073 = 13148 * t5057 - 69340 * t5059 + 155580 * t5061 + (-149820 * t5062 + 8628 * t5064 + 100492 * t5066 - 75980 * t5068 + 17980 * t5070 - 688) * t5055
            t5072 = -3060 * t5054 + 34864 * t5058 - 170660 * t5060 + 433870 * t5062 - 621916 * t5064 + 509000 * t5066 - 222604 * t5068 + 40455 * t5070 + 51
            t5056 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2415e4) * (-(-t5072 + t5073) * np.sin((-t5056 + 12 * phi2)) + (t5072 + t5073) * np.sin((t5056 + 12 * phi2))) * ((1 + t5055) ** (-0.1e1 / 0.2e1)) * ((1 - t5055) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t5074 = np.cos(phi)
            t5075 = t5074 ** 2
            t5076 = t5075 ** 2
            t5077 = t5075 * t5076
            t5080 = t5077 ** 2
            t5078 = t5076 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t5076 - 231616 * t5077 + 2143140 * t5080 + 11 + (893090 + 310155 * t5078) * t5078 + (-1862080 * t5078 - 1280640 * t5080 - 1408) * t5075) * np.cos((4 * phi1))

        if Bindx == 248:
            t5100 = np.cos(phi)
            t5099 = t5100 ** 2
            t5102 = t5100 * t5099
            t5103 = t5099 ** 2
            t5104 = t5100 * t5103
            t5105 = t5102 ** 2
            t5106 = t5100 * t5105
            t5107 = t5103 ** 2
            t5109 = t5104 ** 2
            t5111 = t5105 ** 2
            t5113 = t5106 ** 2
            t5117 = -487715 * t5102 + 5090953 * t5104 - 23424695 * t5106 + (55508775 * t5107 - 70777785 * t5109 + 46173075 * t5111 - 12096045 * t5113 + 13437) * t5100
            t5116 = -6820 * t5099 + 175640 * t5103 - 1941492 * t5105 - 27968460 * t5109 + 40006200 * t5111 - 28614300 * t5113 + 62 + (10285140 + 8064030 * t5107) * t5107
            t5101 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.14e2) * ((t5116 + t5117) * np.cos((-t5101 + 6 * phi2)) + (t5116 - t5117) * np.cos((t5101 + 6 * phi2)))

        if Bindx == 249:
            t5135 = np.cos(phi)
            t5134 = t5135 ** 2
            t5137 = t5135 * t5134
            t5138 = t5134 ** 2
            t5139 = t5135 * t5138
            t5140 = t5137 ** 2
            t5141 = t5135 * t5140
            t5142 = t5138 ** 2
            t5144 = t5139 ** 2
            t5146 = t5140 ** 2
            t5148 = t5141 ** 2
            t5152 = 85 * t5137 + 823 * t5139 - 6659 * t5141 + (17021 * t5142 - 20425 * t5144 + 11861 * t5146 - 2697 * t5148 - 9) * t5135
            t5151 = 280 * t5134 - 2612 * t5138 + 9720 * t5140 + 14664 * t5144 - 4036 * t5146 - 1624 * t5148 - 5 + (-17286 + 899 * t5142) * t5142
            t5136 = 4 * phi1
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.6279e4) * ((t5151 + t5152) * np.cos((-t5136 + 12 * phi2)) + (t5151 - t5152) * np.cos((t5136 + 12 * phi2)))

        if Bindx == 250:
            t5162 = np.sin(phi)
            t5159 = t5162 ** 2
            t5160 = t5162 * t5159
            t5153 = np.cos(phi)
            t5154 = t5153 ** 2
            t5155 = t5154 ** 2
            t5157 = t5155 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t5153 * t5160 ** 2 * (-88550 * t5155 - 550275 * t5157 - 231 + (341550 * t5155 + 310155 * t5157 + 8855) * t5154) * np.sin((5 * phi1)) * ((1 + t5153) ** (-0.1e1 / 0.2e1)) * ((1 - t5153) ** (-0.1e1 / 0.2e1))

        if Bindx == 251:
            t5181 = np.cos(phi)
            t5180 = t5181 ** 2
            t5184 = t5180 ** 2
            t5183 = t5181 * t5180
            t5186 = t5183 ** 2
            t5188 = t5184 ** 2
            t5185 = t5181 * t5184
            t5190 = t5185 ** 2
            t5192 = t5186 ** 2
            t5187 = t5181 * t5186
            t5194 = t5187 ** 2
            t5196 = t5188 ** 2
            t5199 = 487918 * t5180 - 8673630 * t5184 + 60237590 * t5186 - 210521300 * t5188 + 407970090 * t5190 - 445243890 * t5192 + 256228050 * t5194 - 60480225 * t5196 - 4603
            t5198 = 745790 * t5183 - 6298922 * t5185 + 18128022 * t5187 + (-4075830 * t5188 - 74406150 * t5190 + 147870450 * t5192 - 114197070 * t5194 + 32256120 * t5196 - 22410) * t5181
            t5182 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-(t5198 + t5199) * np.sin((-t5182 + 6 * phi2)) + (t5198 - t5199) * np.sin((t5182 + 6 * phi2))) * ((1 + t5181) ** (-0.1e1 / 0.2e1)) * ((1 - t5181) ** (-0.1e1 / 0.2e1))

        if Bindx == 252:
            t5218 = np.cos(phi)
            t5217 = t5218 ** 2
            t5221 = t5217 ** 2
            t5220 = t5218 * t5217
            t5223 = t5220 ** 2
            t5225 = t5221 ** 2
            t5222 = t5218 * t5221
            t5227 = t5222 ** 2
            t5229 = t5223 ** 2
            t5224 = t5218 * t5223
            t5231 = t5224 ** 2
            t5233 = t5225 ** 2
            t5236 = 23 - 1196 * t5217 + 9048 * t5221 - 23068 * t5223 + 11422 * t5225 + 44604 * t5227 - 82912 * t5229 + 55564 * t5231 - 13485 * t5233
            t5235 = 2956 * t5220 - 22732 * t5222 + 79212 * t5224 + (-140012 * t5225 + 127172 * t5227 - 50628 * t5229 + 580 * t5231 + 3596 * t5233 - 144) * t5218
            t5219 = 5 * phi1
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.897e3) * (-(t5235 + t5236) * np.sin((-t5219 + 12 * phi2)) + (t5235 - t5236) * np.sin((t5219 + 12 * phi2))) * ((1 + t5218) ** (-0.1e1 / 0.2e1)) * ((1 - t5218) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t5237 = np.cos(phi)
            t5238 = t5237 ** 2
            t5239 = t5238 ** 2
            t5240 = t5238 * t5239
            t5243 = t5240 ** 2
            t5241 = t5239 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t5239 - 345366 * t5240 + 2498490 * t5243 + 21 + (1225440 + 310155 * t5241) * t5241 + (-2353130 * t5241 - 1380690 * t5243 - 2478) * t5238) * np.cos((6 * phi1))

        if Bindx == 254:
            t5263 = np.cos(phi)
            t5262 = t5263 ** 2
            t5264 = t5263 * t5262
            t5265 = t5262 ** 2
            t5266 = t5263 * t5265
            t5267 = t5264 ** 2
            t5268 = t5263 * t5267
            t5269 = t5265 ** 2
            t5271 = t5266 ** 2
            t5273 = t5267 ** 2
            t5275 = t5268 ** 2
            t5279 = 0.41181525e8 / 0.16384e5 * t5264 - 0.418245597e9 / 0.16384e5 * t5266 + 0.1944857805e10 / 0.16384e5 * t5268 + (-0.4769574975e10 / 0.16384e5 * t5269 + 0.6362290935e10 / 0.16384e5 * t5271 - 0.4356527175e10 / 0.16384e5 * t5273 + 0.1197508455e10 / 0.16384e5 * t5275 - 0.1220637e7 / 0.16384e5) * t5263
            t5278 = 0.938025e6 / 0.2048e4 * t5262 - 0.57222165e8 / 0.8192e4 * t5265 + 0.152147457e9 / 0.4096e4 * t5267 + 0.34189155e8 / 0.512e3 * t5271 + 0.264188925e9 / 0.8192e4 * t5273 - 0.321910875e9 / 0.4096e4 * t5275 - 0.37521e5 / 0.8192e4 + (-0.684158805e9 / 0.8192e4 + 0.133056495e9 / 0.4096e4 * t5269) * t5269
            tfunc[..., c] = (t5278 - t5279) * np.cos((6 * phi1 - 6 * phi2)) + (t5278 + t5279) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 255:
            t5297 = np.cos(phi)
            t5296 = t5297 ** 2
            t5299 = t5297 * t5296
            t5300 = t5296 ** 2
            t5301 = t5297 * t5300
            t5302 = t5299 ** 2
            t5303 = t5297 * t5302
            t5304 = t5300 ** 2
            t5306 = t5301 ** 2
            t5308 = t5302 ** 2
            t5310 = t5303 ** 2
            t5314 = 2859 * t5299 - 15009 * t5301 + 32351 * t5303 + (-24783 * t5304 - 8751 * t5306 + 21605 * t5308 - 8091 * t5310 - 181) * t5297
            t5313 = -276 * t5296 - 104 * t5300 + 11484 * t5302 + 63844 * t5306 - 40200 * t5308 + 6612 * t5310 + 6 + (-43164 + 1798 * t5304) * t5304
            t5298 = 6 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5313 + t5314) * np.cos((-t5298 + 12 * phi2)) + (t5313 - t5314) * np.cos((t5298 + 12 * phi2)))

        if Bindx == 256:
            t5323 = np.sin(phi)
            t5320 = t5323 ** 2
            t5321 = t5320 ** 2
            t5315 = np.cos(phi)
            t5316 = t5315 ** 2
            t5317 = t5316 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t5315 * t5321 ** 2 * (-700 * t5316 + 21 + (-15660 * t5316 + 5670 + 13485 * t5317) * t5317) * np.sin((7 * phi1)) * ((1 + t5315) ** (-0.1e1 / 0.2e1)) * ((1 - t5315) ** (-0.1e1 / 0.2e1))

        if Bindx == 257:
            t5342 = np.cos(phi)
            t5341 = t5342 ** 2
            t5345 = t5341 ** 2
            t5344 = t5342 * t5341
            t5347 = t5344 ** 2
            t5349 = t5345 ** 2
            t5346 = t5342 * t5345
            t5351 = t5346 ** 2
            t5353 = t5347 ** 2
            t5348 = t5342 * t5347
            t5355 = t5348 ** 2
            t5357 = t5349 ** 2
            t5360 = 19082 * t5341 - 337554 * t5345 + 2514946 * t5347 - 9660376 * t5349 + 20482110 * t5351 - 24141390 * t5353 + 14804790 * t5355 - 3681405 * t5357 - 203
            t5359 = 177826 * t5344 - 1563142 * t5346 + 5959338 * t5348 + (-11144826 * t5349 + 9541350 * t5351 - 1302210 * t5353 - 3065010 * t5355 + 1402440 * t5357 - 5766) * t5342
            t5343 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.230e3) * (-(t5359 + t5360) * np.sin((-t5343 + 6 * phi2)) + (t5359 - t5360) * np.sin((t5343 + 6 * phi2))) * ((1 + t5342) ** (-0.1e1 / 0.2e1)) * ((1 - t5342) ** (-0.1e1 / 0.2e1))

        if Bindx == 258:
            t5379 = np.cos(phi)
            t5378 = t5379 ** 2
            t5382 = t5378 ** 2
            t5381 = t5379 * t5378
            t5384 = t5381 ** 2
            t5386 = t5382 ** 2
            t5383 = t5379 * t5382
            t5388 = t5383 ** 2
            t5390 = t5384 ** 2
            t5385 = t5379 * t5384
            t5392 = t5385 ** 2
            t5394 = t5386 ** 2
            t5397 = -4360 * t5378 + 67716 * t5382 - 349256 * t5384 + 773366 * t5386 - 744216 * t5388 + 157780 * t5390 + 193256 * t5392 - 94395 * t5394 + 109
            t5396 = -32788 * t5381 + 111412 * t5383 - 42900 * t5385 + (-427372 * t5386 + 842788 * t5388 - 593028 * t5390 + 121220 * t5392 + 17980 * t5394 + 2688) * t5379
            t5380 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.195e3) * (-(t5396 + t5397) * np.sin((-t5380 + 12 * phi2)) + (t5396 - t5397) * np.sin((t5380 + 12 * phi2))) * ((1 + t5379) ** (-0.1e1 / 0.2e1)) * ((1 - t5379) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t5398 = np.cos(phi)
            t5399 = t5398 ** 2
            t5400 = t5399 ** 2
            t5401 = t5399 * t5400
            t5404 = t5401 ** 2
            t5402 = t5400 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t5400 - 78568 * t5401 + 398340 * t5404 + 7 + (246122 + 40455 * t5402) * t5402 + (-419560 * t5402 - 198360 * t5404 - 728) * t5399) * np.cos((8 * phi1))

        if Bindx == 260:
            t5424 = np.cos(phi)
            t5423 = t5424 ** 2
            t5426 = t5424 * t5423
            t5427 = t5423 ** 2
            t5428 = t5424 * t5427
            t5429 = t5426 ** 2
            t5430 = t5424 * t5429
            t5431 = t5427 ** 2
            t5433 = t5428 ** 2
            t5435 = t5429 ** 2
            t5437 = t5430 ** 2
            t5441 = -2317 * t5426 + 58247 * t5428 - 448657 * t5430 + (1467345 * t5431 - 2330055 * t5433 + 1781325 * t5435 - 525915 * t5437 + 27) * t5424
            t5440 = 8342 * t5423 - 115990 * t5427 + 607838 * t5429 + 1811810 * t5433 - 832650 * t5435 - 147030 * t5437 - 97 + (-1507528 + 175305 * t5431) * t5431
            t5425 = 8 * phi1
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * ((t5440 + t5441) * np.cos((-t5425 + 6 * phi2)) + (t5440 - t5441) * np.cos((t5425 + 6 * phi2)))

        if Bindx == 261:
            t5459 = np.cos(phi)
            t5458 = t5459 ** 2
            t5462 = t5458 ** 2
            t5461 = t5459 * t5458
            t5464 = t5461 ** 2
            t5466 = t5462 ** 2
            t5463 = t5459 * t5462
            t5468 = t5463 ** 2
            t5470 = t5464 ** 2
            t5465 = t5459 * t5464
            t5472 = t5465 ** 2
            t5476 = -3552 * t5458 + 29940 * t5462 - 85536 * t5464 + 85536 * t5468 - 146252 * t5470 + 51040 * t5472 + 111 + (64218 + 4495 * t5466) * t5466
            t5475 = 3454 * t5461 + 17002 * t5463 - 121154 * t5465 + (228030 * t5466 - 146838 * t5468 - 6786 * t5470 + 26970 * t5472 - 678) * t5459
            t5460 = 8 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.130e3) * ((-t5475 + t5476) * np.cos((-t5460 + 12 * phi2)) + (t5475 + t5476) * np.cos((t5460 + 12 * phi2)))

        if Bindx == 262:
            t5485 = np.sin(phi)
            t5481 = t5485 ** 2
            t5483 = t5485 * t5481 ** 2
            t5477 = np.cos(phi)
            t5478 = t5477 ** 2
            t5479 = t5478 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t5477 * t5483 ** 2 * (-5481 * t5479 - 35 + (8091 * t5479 + 945) * t5478) * np.sin((9 * phi1)) * ((1 + t5477) ** (-0.1e1 / 0.2e1)) * ((1 - t5477) ** (-0.1e1 / 0.2e1))

        if Bindx == 263:
            t5504 = np.cos(phi)
            t5503 = t5504 ** 2
            t5507 = t5503 ** 2
            t5506 = t5504 * t5503
            t5509 = t5506 ** 2
            t5511 = t5507 ** 2
            t5508 = t5504 * t5507
            t5513 = t5508 ** 2
            t5515 = t5509 ** 2
            t5510 = t5504 * t5509
            t5517 = t5510 ** 2
            t5519 = t5511 ** 2
            t5522 = -8658 * t5503 + 83258 * t5507 - 136234 * t5509 - 742456 * t5511 + 3245418 * t5513 - 5030298 * t5515 + 3535506 * t5517 - 946647 * t5519 + 111
            t5521 = 85562 * t5506 - 706510 * t5508 + 2707298 * t5510 + (-5384434 * t5511 + 5519150 * t5513 - 2392026 * t5515 - 106314 * t5517 + 280488 * t5519 - 3214) * t5504
            t5505 = 9 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.690e3) * (-(t5521 + t5522) * np.sin((-t5505 + 6 * phi2)) + (t5521 - t5522) * np.sin((t5505 + 6 * phi2))) * ((1 + t5504) ** (-0.1e1 / 0.2e1)) * ((1 - t5504) ** (-0.1e1 / 0.2e1))

        if Bindx == 264:
            t5541 = np.cos(phi)
            t5540 = t5541 ** 2
            t5544 = t5540 ** 2
            t5543 = t5541 * t5540
            t5546 = t5543 ** 2
            t5548 = t5544 ** 2
            t5545 = t5541 * t5544
            t5550 = t5545 ** 2
            t5552 = t5546 ** 2
            t5547 = t5541 * t5546
            t5554 = t5547 ** 2
            t5556 = t5548 ** 2
            t5559 = -4824 * t5540 + 25700 * t5544 - 22936 * t5546 - 116050 * t5548 + 286968 * t5550 - 210732 * t5552 + 17400 * t5554 + 24273 * t5556 + 201
            t5558 = -5700 * t5543 + 59748 * t5545 - 179652 * t5547 + (188100 * t5548 + 16404 * t5550 - 138100 * t5552 + 55796 * t5554 + 3596 * t5556 - 192) * t5541
            t5542 = 9 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t5558 - t5559) * np.sin((-t5542 + 12 * phi2)) + (t5558 + t5559) * np.sin((t5542 + 12 * phi2))) * ((1 + t5541) ** (-0.1e1 / 0.2e1)) * ((1 - t5541) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t5560 = np.cos(phi)
            t5561 = t5560 ** 2
            t5562 = t5561 ** 2
            t5563 = t5561 * t5562
            t5566 = t5563 ** 2
            t5564 = t5562 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t5562 - 31766 * t5563 + 100890 * t5566 + 5 + (83680 + 8091 * t5564) * t5564 + (-122090 * t5564 - 44370 * t5566 - 430) * t5561) * np.cos((10 * phi1))

        if Bindx == 266:
            t5586 = np.cos(phi)
            t5585 = t5586 ** 2
            t5588 = t5586 * t5585
            t5589 = t5585 ** 2
            t5590 = t5586 * t5589
            t5591 = t5588 ** 2
            t5592 = t5586 * t5591
            t5593 = t5589 ** 2
            t5595 = t5590 ** 2
            t5597 = t5591 ** 2
            t5599 = t5592 ** 2
            t5603 = -4075 * t5588 + 20963 * t5590 - 32659 * t5592 + (-25311 * t5593 + 124407 * t5595 - 123975 * t5597 + 40455 * t5599 + 195) * t5586
            t5602 = 952 * t5585 - 12422 * t5589 + 67804 * t5591 + 232672 * t5595 - 134346 * t5597 + 12876 * t5599 - 14 + (-178310 + 10788 * t5593) * t5593
            t5587 = 10 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * ((t5602 - t5603) * np.cos((-t5587 + 6 * phi2)) + (t5602 + t5603) * np.cos((t5587 + 6 * phi2)))

        if Bindx == 267:
            t5621 = np.cos(phi)
            t5620 = t5621 ** 2
            t5623 = t5621 * t5620
            t5624 = t5620 ** 2
            t5625 = t5621 * t5624
            t5626 = t5623 ** 2
            t5627 = t5621 * t5626
            t5628 = t5624 ** 2
            t5630 = t5625 ** 2
            t5632 = t5626 ** 2
            t5634 = t5627 ** 2
            t5638 = 9091 * t5623 - 40937 * t5625 + 40183 * t5627 + (67353 * t5628 - 127335 * t5630 + 38541 * t5632 + 13485 * t5634 - 381) * t5621
            t5637 = 2604 * t5620 - 936 * t5624 - 49764 * t5626 - 87516 * t5630 - 36296 * t5632 + 38164 * t5634 - 186 + (132132 + 1798 * t5628) * t5628
            t5622 = 10 * phi1
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.70e2) * ((t5637 - t5638) * np.cos((-t5622 + 12 * phi2)) + (t5637 + t5638) * np.cos((t5622 + 12 * phi2)))

        if Bindx == 268:
            t5646 = np.sin(phi)
            t5642 = t5646 ** 2
            t5643 = t5646 * t5642
            t5644 = t5643 ** 2
            t5639 = np.cos(phi)
            t5640 = t5639 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t5639 * t5644 ** 2 * (15 + (-290 + 899 * t5640) * t5640) * np.sin((11 * phi1)) * ((1 + t5639) ** (-0.1e1 / 0.2e1)) * ((1 - t5639) ** (-0.1e1 / 0.2e1))

        if Bindx == 269:
            t5665 = np.cos(phi)
            t5664 = t5665 ** 2
            t5668 = t5664 ** 2
            t5667 = t5665 * t5664
            t5670 = t5667 ** 2
            t5672 = t5668 ** 2
            t5669 = t5665 * t5668
            t5674 = t5669 ** 2
            t5676 = t5670 ** 2
            t5671 = t5665 * t5670
            t5678 = t5671 ** 2
            t5680 = t5672 ** 2
            t5683 = -1798 * t5664 + 16758 * t5668 - 58958 * t5670 + 82676 * t5672 - 5874 * t5674 - 103334 * t5676 + 100166 * t5678 - 29667 * t5680 + 31
            t5682 = 1958 * t5667 - 22946 * t5669 + 106590 * t5671 + (-235774 * t5672 + 262066 * t5674 - 132534 * t5676 + 13514 * t5678 + 7192 * t5680 - 66) * t5665
            t5666 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.62790e5) * (-(t5682 + t5683) * np.sin((-t5666 + 6 * phi2)) + (t5682 - t5683) * np.sin((t5666 + 6 * phi2))) * ((1 + t5665) ** (-0.1e1 / 0.2e1)) * ((1 - t5665) ** (-0.1e1 / 0.2e1))

        if Bindx == 270:
            t5702 = np.cos(phi)
            t5701 = t5702 ** 2
            t5704 = t5702 * t5701
            t5705 = t5701 ** 2
            t5706 = t5702 * t5705
            t5707 = t5704 ** 2
            t5708 = t5702 * t5707
            t5709 = t5705 ** 2
            t5711 = t5706 ** 2
            t5713 = t5707 ** 2
            t5715 = t5708 ** 2
            t5717 = t5709 ** 2
            t5720 = 30668 * t5704 - 62348 * t5706 - 125268 * t5708 + (473044 * t5709 - 364156 * t5711 - 48132 * t5713 + 95236 * t5715 + 3596 * t5717 - 2640) * t5702
            t5719 = 2468 * t5701 + 43272 * t5705 - 224588 * t5707 + 286286 * t5709 + 94380 * t5711 - 354640 * t5713 + 123772 * t5715 + 29667 * t5717 - 617
            t5703 = 11 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.35e2) * (-(-t5719 + t5720) * np.sin((-t5703 + 12 * phi2)) + (t5719 + t5720) * np.sin((t5703 + 12 * phi2))) * ((1 + t5702) ** (-0.1e1 / 0.2e1)) * ((1 - t5702) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t5721 = np.cos(phi)
            t5722 = t5721 ** 2
            t5723 = t5722 ** 2
            t5724 = t5722 * t5723
            t5727 = t5724 ** 2
            t5725 = t5723 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t5723 - 8064 * t5724 + 14532 * t5727 + 3 + (17010 + 899 * t5725) * t5725 + (-20608 * t5725 - 5568 * t5727 - 192) * t5722) * np.cos((12 * phi1))

        if Bindx == 272:
            t5747 = np.cos(phi)
            t5746 = t5747 ** 2
            t5749 = t5747 * t5746
            t5750 = t5746 ** 2
            t5751 = t5747 * t5750
            t5752 = t5749 ** 2
            t5753 = t5747 * t5752
            t5754 = t5750 ** 2
            t5756 = t5751 ** 2
            t5758 = t5752 ** 2
            t5760 = t5753 ** 2
            t5764 = 2859 * t5749 - 15009 * t5751 + 32351 * t5753 + (-24783 * t5754 - 8751 * t5756 + 21605 * t5758 - 8091 * t5760 - 181) * t5747
            t5763 = -276 * t5746 - 104 * t5750 + 11484 * t5752 + 63844 * t5756 - 40200 * t5758 + 6612 * t5760 + 6 + (-43164 + 1798 * t5754) * t5754
            t5748 = 12 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5763 + t5764) * np.cos((-t5748 + 6 * phi2)) + (t5763 - t5764) * np.cos((t5748 + 6 * phi2)))

        if Bindx == 273:
            t5782 = np.cos(phi)
            t5781 = t5782 ** 2
            t5783 = t5782 * t5781
            t5784 = t5781 ** 2
            t5785 = t5782 * t5784
            t5786 = t5783 ** 2
            t5787 = t5782 * t5786
            t5788 = t5784 ** 2
            t5790 = t5785 ** 2
            t5792 = t5786 ** 2
            t5794 = t5787 ** 2
            t5798 = 0.1163547e7 / 0.8192e4 * t5783 + 0.3252249e7 / 0.8192e4 * t5785 - 0.16927053e8 / 0.8192e4 * t5787 + (0.12670515e8 / 0.8192e4 * t5788 + 0.10171161e8 / 0.8192e4 * t5790 - 0.8889573e7 / 0.8192e4 * t5792 - 0.1335015e7 / 0.8192e4 * t5794 - 0.240999e6 / 0.8192e4) * t5782
            t5797 = -0.1066065e7 / 0.2048e4 * t5784 + 0.891891e6 / 0.1024e4 * t5786 - 0.2741739e7 / 0.1024e4 * t5790 + 0.1252251e7 / 0.2048e4 * t5792 + 0.617265e6 / 0.1024e4 * t5794 + 0.39303e5 / 0.1024e4 * t5781 + 0.39303e5 / 0.8192e4 + (0.4374513e7 / 0.4096e4 + 0.148335e6 / 0.8192e4 * t5788) * t5788
            tfunc[..., c] = (t5797 + t5798) * np.cos((12 * phi1 - 12 * phi2)) + (t5797 - t5798) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 274:
            t5805 = np.sin(phi)
            t5800 = t5805 ** 2
            t5801 = t5805 * t5800
            t5803 = t5805 * t5801 ** 2
            t5799 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t5799 * t5803 ** 2 * (31 * t5799 ** 2 - 3) * np.sin((13 * phi1)) * ((1 + t5799) ** (-0.1e1 / 0.2e1)) * ((1 - t5799) ** (-0.1e1 / 0.2e1))

        if Bindx == 275:
            t5824 = np.cos(phi)
            t5823 = t5824 ** 2
            t5827 = t5823 ** 2
            t5826 = t5824 * t5823
            t5829 = t5826 ** 2
            t5831 = t5827 ** 2
            t5828 = t5824 * t5827
            t5833 = t5828 ** 2
            t5835 = t5829 ** 2
            t5830 = t5824 * t5829
            t5837 = t5830 ** 2
            t5839 = t5831 ** 2
            t5842 = 5 - 170 * t5823 + 1722 * t5827 - 6562 * t5829 + 11044 * t5831 - 7326 * t5833 - 1066 * t5835 + 3562 * t5837 - 1209 * t5839
            t5841 = -482 * t5826 + 758 * t5828 + 2838 * t5830 + (-10934 * t5831 + 14042 * t5833 - 7662 * t5835 + 1138 * t5837 + 248 * t5839 + 54) * t5824
            t5825 = 13 * phi1
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.52026e5) * (-(t5841 + t5842) * np.sin((-t5825 + 6 * phi2)) + (t5841 - t5842) * np.sin((t5825 + 6 * phi2))) * ((1 + t5824) ** (-0.1e1 / 0.2e1)) * ((1 - t5824) ** (-0.1e1 / 0.2e1))

        if Bindx == 276:
            t5861 = np.cos(phi)
            t5860 = t5861 ** 2
            t5863 = t5861 * t5860
            t5864 = t5860 ** 2
            t5865 = t5861 * t5864
            t5866 = t5863 ** 2
            t5867 = t5861 * t5866
            t5868 = t5864 ** 2
            t5870 = t5865 ** 2
            t5872 = t5866 ** 2
            t5874 = t5867 ** 2
            t5876 = t5868 ** 2
            t5879 = -52 * t5863 - 49868 * t5865 + 94380 * t5867 + (33748 * t5868 - 144508 * t5870 + 39228 * t5872 + 24580 * t5874 + 620 * t5876 + 1872) * t5861
            t5878 = -4820 * t5860 + 25536 * t5864 + 10556 * t5866 - 140426 * t5868 + 118404 * t5870 + 47320 * t5872 - 50284 * t5874 - 6045 * t5876 - 241
            t5862 = 13 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * (-(t5878 + t5879) * np.sin((-t5862 + 12 * phi2)) + (-t5878 + t5879) * np.sin((t5862 + 12 * phi2))) * ((1 + t5861) ** (-0.1e1 / 0.2e1)) * ((1 - t5861) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t5880 = np.cos(phi)
            t5881 = t5880 ** 2
            t5882 = t5881 ** 2
            t5883 = t5881 * t5882
            t5886 = t5883 ** 2
            t5884 = t5882 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t5882 - 686 * t5883 + 658 * t5886 + 1 + (1120 + 31 * t5884) * t5884 + (-1106 * t5884 - 218 * t5886 - 38) * t5881) * np.cos((14 * phi1))

        if Bindx == 278:
            t5906 = np.cos(phi)
            t5905 = t5906 ** 2
            t5908 = t5906 * t5905
            t5909 = t5905 ** 2
            t5910 = t5906 * t5909
            t5911 = t5908 ** 2
            t5912 = t5906 * t5911
            t5913 = t5909 ** 2
            t5915 = t5910 ** 2
            t5917 = t5911 ** 2
            t5919 = t5912 ** 2
            t5923 = 335 * t5908 - 2599 * t5910 + 6215 * t5912 + (-5885 * t5913 + 1141 * t5915 + 1435 * t5917 - 651 * t5919 + 9) * t5906
            t5922 = -280 * t5905 + 1190 * t5909 - 924 * t5911 + 6336 * t5915 - 4310 * t5917 + 820 * t5919 + 14 + (-2970 + 124 * t5913) * t5913
            t5907 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * ((t5922 + t5923) * np.cos((-t5907 + 6 * phi2)) + (t5922 - t5923) * np.cos((t5907 + 6 * phi2)))

        if Bindx == 279:
            t5941 = np.cos(phi)
            t5940 = t5941 ** 2
            t5943 = t5941 * t5940
            t5944 = t5940 ** 2
            t5945 = t5941 * t5944
            t5946 = t5943 ** 2
            t5947 = t5941 * t5946
            t5948 = t5944 ** 2
            t5950 = t5945 ** 2
            t5952 = t5946 ** 2
            t5954 = t5947 ** 2
            t5958 = 1771 * t5943 - 7553 * t5945 - 4433 * t5947 + (20449 * t5948 - 2639 * t5950 - 7259 * t5952 - 651 * t5954 + 315) * t5941
            t5957 = -1156 * t5940 + 728 * t5944 + 12012 * t5946 - 12012 * t5950 + 9464 * t5952 + 2948 * t5954 - 34 + (-12012 + 62 * t5948) * t5948
            t5942 = 14 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.290e3) * ((t5957 + t5958) * np.cos((-t5942 + 12 * phi2)) + (t5957 - t5958) * np.cos((t5942 + 12 * phi2)))

        if Bindx == 280:
            t5964 = np.sin(phi)
            t5960 = t5964 ** 2
            t5961 = t5960 ** 2
            t5962 = t5961 ** 2
            t5959 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t5959 * t5962 ** 2 * np.sin((15 * phi1)) * ((1 + t5959) ** (-0.1e1 / 0.2e1)) * ((1 - t5959) ** (-0.1e1 / 0.2e1))

        if Bindx == 281:
            t5983 = np.cos(phi)
            t5982 = t5983 ** 2
            t5986 = t5982 ** 2
            t5985 = t5983 * t5982
            t5988 = t5985 ** 2
            t5990 = t5986 ** 2
            t5987 = t5983 * t5986
            t5992 = t5987 ** 2
            t5994 = t5988 ** 2
            t5989 = t5983 * t5988
            t5996 = t5989 ** 2
            t5998 = t5990 ** 2
            t6001 = -3 + 18 * t5982 + 70 * t5986 - 470 * t5988 + 880 * t5990 - 682 * t5992 + 122 * t5994 + 110 * t5996 - 45 * t5998
            t6000 = -110 * t5985 + 298 * t5987 - 198 * t5989 + (-330 * t5990 + 630 * t5992 - 370 * t5994 + 62 * t5996 + 8 * t5998 + 10) * t5983
            t5984 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8064030e7) * (-(t6000 + t6001) * np.sin((-t5984 + 6 * phi2)) + (t6000 - t6001) * np.sin((t5984 + 6 * phi2))) * ((1 + t5983) ** (-0.1e1 / 0.2e1)) * ((1 - t5983) ** (-0.1e1 / 0.2e1))

        if Bindx == 282:
            t6020 = np.cos(phi)
            t6019 = t6020 ** 2
            t6023 = t6019 ** 2
            t6022 = t6020 * t6019
            t6025 = t6022 ** 2
            t6027 = t6023 ** 2
            t6024 = t6020 * t6023
            t6029 = t6024 ** 2
            t6031 = t6025 ** 2
            t6026 = t6020 * t6025
            t6033 = t6026 ** 2
            t6035 = t6027 ** 2
            t6038 = 3 + 144 * t6019 + 308 * t6023 - 1456 * t6025 - 286 * t6027 + 2288 * t6029 - 364 * t6031 - 592 * t6033 - 45 * t6035
            t6037 = -332 * t6022 + 364 * t6024 + 1716 * t6026 + (-1716 * t6027 - 1092 * t6029 + 868 * t6031 + 220 * t6033 + 4 * t6035 - 32) * t6020
            t6021 = 15 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * (-(t6037 + t6038) * np.sin((-t6021 + 12 * phi2)) + (t6037 - t6038) * np.sin((t6021 + 12 * phi2))) * ((1 + t6020) ** (-0.1e1 / 0.2e1)) * ((1 - t6020) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t6039 = np.cos(phi)
            t6040 = t6039 ** 2
            t6048 = -8 * t6040
            t6041 = t6040 ** 2
            t6043 = t6041 ** 2
            t6042 = t6040 * t6041
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t6041 + t6048 + 1 + (-56 * t6040 + 70 + t6043) * t6043 + (-56 + (t6048 + 28) * t6042) * t6042)

        if Bindx == 284:
            t6065 = np.cos(phi)
            t6064 = t6065 ** 2
            t6068 = t6064 ** 2
            t6067 = t6065 * t6064
            t6070 = t6067 ** 2
            t6069 = t6065 * t6068
            t6073 = t6069 ** 2
            t6075 = t6070 ** 2
            t6071 = t6065 * t6070
            t6077 = t6071 ** 2
            t6078 = t6065 * t6077
            t6081 = t6065 * t6078 - 10 * t6064 + 50 * t6068 - 66 * t6070 + 66 * t6073 - 50 * t6075 + 10 * t6077 - 1
            t6080 = -10 * t6067 - 34 * t6069 - 6 * t6078 + (-110 * t6064 + 110) * t6071 + (34 * t6073 + 10 * t6075 + 6) * t6065
            t6066 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * ((t6080 + t6081) * np.cos((-t6066 + 6 * phi2)) + (-t6080 + t6081) * np.cos((t6066 + 6 * phi2)))

        if Bindx == 285:
            t6097 = np.cos(phi)
            t6114 = -12 * t6097
            t6096 = t6097 ** 2
            t6100 = t6096 ** 2
            t6103 = t6100 ** 2
            t6104 = t6097 * t6103
            t6105 = t6096 * t6104
            t6106 = t6097 * t6105
            t6101 = t6097 * t6100
            t6102 = t6096 * t6101
            t6108 = t6102 ** 2
            t6112 = 64 * t6096 + 364 * t6100 + 364 * t6106 + 64 * t6108 + 1 + (-858 + t6103) * t6103
            t6111 = t6108 * t6114 - 364 * t6101 + 572 * t6102 + 572 * t6104 - 364 * t6105 + t6114 - 196 * (t6096 + t6106) * t6097
            t6098 = 16 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8990e4) * ((t6111 + t6112) * np.cos((-t6098 + 12 * phi2)) + (-t6111 + t6112) * np.cos((t6098 + 12 * phi2)))

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

