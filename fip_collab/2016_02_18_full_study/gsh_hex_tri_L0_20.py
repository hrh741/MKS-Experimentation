import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [2, -2, 1],
                        [2, -1, 1],
                        [2, 0, 1],
                        [2, 1, 1],
                        [2, 2, 1],
                        [4, -4, 1],
                        [4, -3, 1],
                        [4, -2, 1],
                        [4, -1, 1],
                        [4, 0, 1],
                        [4, 1, 1],
                        [4, 2, 1],
                        [4, 3, 1],
                        [4, 4, 1],
                        [6, -6, 1],
                        [6, -6, 2],
                        [6, -5, 1],
                        [6, -5, 2],
                        [6, -4, 1],
                        [6, -4, 2],
                        [6, -3, 1],
                        [6, -3, 2],
                        [6, -2, 1],
                        [6, -2, 2],
                        [6, -1, 1],
                        [6, -1, 2],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 6, 1],
                        [6, 6, 2],
                        [7, -7, 1],
                        [7, -6, 1],
                        [7, -5, 1],
                        [7, -4, 1],
                        [7, -3, 1],
                        [7, -2, 1],
                        [7, -1, 1],
                        [7, 0, 1],
                        [7, 1, 1],
                        [7, 2, 1],
                        [7, 3, 1],
                        [7, 4, 1],
                        [7, 5, 1],
                        [7, 6, 1],
                        [7, 7, 1],
                        [8, -8, 1],
                        [8, -8, 2],
                        [8, -7, 1],
                        [8, -7, 2],
                        [8, -6, 1],
                        [8, -6, 2],
                        [8, -5, 1],
                        [8, -5, 2],
                        [8, -4, 1],
                        [8, -4, 2],
                        [8, -3, 1],
                        [8, -3, 2],
                        [8, -2, 1],
                        [8, -2, 2],
                        [8, -1, 1],
                        [8, -1, 2],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 8, 1],
                        [8, 8, 2],
                        [9, -9, 1],
                        [9, -8, 1],
                        [9, -7, 1],
                        [9, -6, 1],
                        [9, -5, 1],
                        [9, -4, 1],
                        [9, -3, 1],
                        [9, -2, 1],
                        [9, -1, 1],
                        [9, 0, 1],
                        [9, 1, 1],
                        [9, 2, 1],
                        [9, 3, 1],
                        [9, 4, 1],
                        [9, 5, 1],
                        [9, 6, 1],
                        [9, 7, 1],
                        [9, 8, 1],
                        [9, 9, 1],
                        [10, -10, 1],
                        [10, -10, 2],
                        [10, -9, 1],
                        [10, -9, 2],
                        [10, -8, 1],
                        [10, -8, 2],
                        [10, -7, 1],
                        [10, -7, 2],
                        [10, -6, 1],
                        [10, -6, 2],
                        [10, -5, 1],
                        [10, -5, 2],
                        [10, -4, 1],
                        [10, -4, 2],
                        [10, -3, 1],
                        [10, -3, 2],
                        [10, -2, 1],
                        [10, -2, 2],
                        [10, -1, 1],
                        [10, -1, 2],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 10, 1],
                        [10, 10, 2],
                        [11, -11, 1],
                        [11, -10, 1],
                        [11, -9, 1],
                        [11, -8, 1],
                        [11, -7, 1],
                        [11, -6, 1],
                        [11, -5, 1],
                        [11, -4, 1],
                        [11, -3, 1],
                        [11, -2, 1],
                        [11, -1, 1],
                        [11, 0, 1],
                        [11, 1, 1],
                        [11, 2, 1],
                        [11, 3, 1],
                        [11, 4, 1],
                        [11, 5, 1],
                        [11, 6, 1],
                        [11, 7, 1],
                        [11, 8, 1],
                        [11, 9, 1],
                        [11, 10, 1],
                        [11, 11, 1],
                        [12, -12, 1],
                        [12, -12, 2],
                        [12, -12, 3],
                        [12, -11, 1],
                        [12, -11, 2],
                        [12, -11, 3],
                        [12, -10, 1],
                        [12, -10, 2],
                        [12, -10, 3],
                        [12, -9, 1],
                        [12, -9, 2],
                        [12, -9, 3],
                        [12, -8, 1],
                        [12, -8, 2],
                        [12, -8, 3],
                        [12, -7, 1],
                        [12, -7, 2],
                        [12, -7, 3],
                        [12, -6, 1],
                        [12, -6, 2],
                        [12, -6, 3],
                        [12, -5, 1],
                        [12, -5, 2],
                        [12, -5, 3],
                        [12, -4, 1],
                        [12, -4, 2],
                        [12, -4, 3],
                        [12, -3, 1],
                        [12, -3, 2],
                        [12, -3, 3],
                        [12, -2, 1],
                        [12, -2, 2],
                        [12, -2, 3],
                        [12, -1, 1],
                        [12, -1, 2],
                        [12, -1, 3],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [13, -13, 1],
                        [13, -13, 2],
                        [13, -12, 1],
                        [13, -12, 2],
                        [13, -11, 1],
                        [13, -11, 2],
                        [13, -10, 1],
                        [13, -10, 2],
                        [13, -9, 1],
                        [13, -9, 2],
                        [13, -8, 1],
                        [13, -8, 2],
                        [13, -7, 1],
                        [13, -7, 2],
                        [13, -6, 1],
                        [13, -6, 2],
                        [13, -5, 1],
                        [13, -5, 2],
                        [13, -4, 1],
                        [13, -4, 2],
                        [13, -3, 1],
                        [13, -3, 2],
                        [13, -2, 1],
                        [13, -2, 2],
                        [13, -1, 1],
                        [13, -1, 2],
                        [13, 0, 1],
                        [13, 0, 2],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 13, 1],
                        [13, 13, 2],
                        [14, -14, 1],
                        [14, -14, 2],
                        [14, -14, 3],
                        [14, -13, 1],
                        [14, -13, 2],
                        [14, -13, 3],
                        [14, -12, 1],
                        [14, -12, 2],
                        [14, -12, 3],
                        [14, -11, 1],
                        [14, -11, 2],
                        [14, -11, 3],
                        [14, -10, 1],
                        [14, -10, 2],
                        [14, -10, 3],
                        [14, -9, 1],
                        [14, -9, 2],
                        [14, -9, 3],
                        [14, -8, 1],
                        [14, -8, 2],
                        [14, -8, 3],
                        [14, -7, 1],
                        [14, -7, 2],
                        [14, -7, 3],
                        [14, -6, 1],
                        [14, -6, 2],
                        [14, -6, 3],
                        [14, -5, 1],
                        [14, -5, 2],
                        [14, -5, 3],
                        [14, -4, 1],
                        [14, -4, 2],
                        [14, -4, 3],
                        [14, -3, 1],
                        [14, -3, 2],
                        [14, -3, 3],
                        [14, -2, 1],
                        [14, -2, 2],
                        [14, -2, 3],
                        [14, -1, 1],
                        [14, -1, 2],
                        [14, -1, 3],
                        [14, 0, 1],
                        [14, 0, 2],
                        [14, 0, 3],
                        [14, 1, 1],
                        [14, 1, 2],
                        [14, 1, 3],
                        [14, 2, 1],
                        [14, 2, 2],
                        [14, 2, 3],
                        [14, 3, 1],
                        [14, 3, 2],
                        [14, 3, 3],
                        [14, 4, 1],
                        [14, 4, 2],
                        [14, 4, 3],
                        [14, 5, 1],
                        [14, 5, 2],
                        [14, 5, 3],
                        [14, 6, 1],
                        [14, 6, 2],
                        [14, 6, 3],
                        [14, 7, 1],
                        [14, 7, 2],
                        [14, 7, 3],
                        [14, 8, 1],
                        [14, 8, 2],
                        [14, 8, 3],
                        [14, 9, 1],
                        [14, 9, 2],
                        [14, 9, 3],
                        [14, 10, 1],
                        [14, 10, 2],
                        [14, 10, 3],
                        [14, 11, 1],
                        [14, 11, 2],
                        [14, 11, 3],
                        [14, 12, 1],
                        [14, 12, 2],
                        [14, 12, 3],
                        [14, 13, 1],
                        [14, 13, 2],
                        [14, 13, 3],
                        [14, 14, 1],
                        [14, 14, 2],
                        [14, 14, 3],
                        [15, -15, 1],
                        [15, -15, 2],
                        [15, -14, 1],
                        [15, -14, 2],
                        [15, -13, 1],
                        [15, -13, 2],
                        [15, -12, 1],
                        [15, -12, 2],
                        [15, -11, 1],
                        [15, -11, 2],
                        [15, -10, 1],
                        [15, -10, 2],
                        [15, -9, 1],
                        [15, -9, 2],
                        [15, -8, 1],
                        [15, -8, 2],
                        [15, -7, 1],
                        [15, -7, 2],
                        [15, -6, 1],
                        [15, -6, 2],
                        [15, -5, 1],
                        [15, -5, 2],
                        [15, -4, 1],
                        [15, -4, 2],
                        [15, -3, 1],
                        [15, -3, 2],
                        [15, -2, 1],
                        [15, -2, 2],
                        [15, -1, 1],
                        [15, -1, 2],
                        [15, 0, 1],
                        [15, 0, 2],
                        [15, 1, 1],
                        [15, 1, 2],
                        [15, 2, 1],
                        [15, 2, 2],
                        [15, 3, 1],
                        [15, 3, 2],
                        [15, 4, 1],
                        [15, 4, 2],
                        [15, 5, 1],
                        [15, 5, 2],
                        [15, 6, 1],
                        [15, 6, 2],
                        [15, 7, 1],
                        [15, 7, 2],
                        [15, 8, 1],
                        [15, 8, 2],
                        [15, 9, 1],
                        [15, 9, 2],
                        [15, 10, 1],
                        [15, 10, 2],
                        [15, 11, 1],
                        [15, 11, 2],
                        [15, 12, 1],
                        [15, 12, 2],
                        [15, 13, 1],
                        [15, 13, 2],
                        [15, 14, 1],
                        [15, 14, 2],
                        [15, 15, 1],
                        [15, 15, 2],
                        [16, -16, 1],
                        [16, -16, 2],
                        [16, -16, 3],
                        [16, -15, 1],
                        [16, -15, 2],
                        [16, -15, 3],
                        [16, -14, 1],
                        [16, -14, 2],
                        [16, -14, 3],
                        [16, -13, 1],
                        [16, -13, 2],
                        [16, -13, 3],
                        [16, -12, 1],
                        [16, -12, 2],
                        [16, -12, 3],
                        [16, -11, 1],
                        [16, -11, 2],
                        [16, -11, 3],
                        [16, -10, 1],
                        [16, -10, 2],
                        [16, -10, 3],
                        [16, -9, 1],
                        [16, -9, 2],
                        [16, -9, 3],
                        [16, -8, 1],
                        [16, -8, 2],
                        [16, -8, 3],
                        [16, -7, 1],
                        [16, -7, 2],
                        [16, -7, 3],
                        [16, -6, 1],
                        [16, -6, 2],
                        [16, -6, 3],
                        [16, -5, 1],
                        [16, -5, 2],
                        [16, -5, 3],
                        [16, -4, 1],
                        [16, -4, 2],
                        [16, -4, 3],
                        [16, -3, 1],
                        [16, -3, 2],
                        [16, -3, 3],
                        [16, -2, 1],
                        [16, -2, 2],
                        [16, -2, 3],
                        [16, -1, 1],
                        [16, -1, 2],
                        [16, -1, 3],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 0, 3],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 1, 3],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 2, 3],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 3, 3],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 4, 3],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 5, 3],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 6, 3],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 7, 3],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 8, 3],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 9, 3],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 10, 3],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 11, 3],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 12, 3],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 13, 3],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 14, 3],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 15, 3],
                        [16, 16, 1],
                        [16, 16, 2],
                        [16, 16, 3],
                        [17, -17, 1],
                        [17, -17, 2],
                        [17, -16, 1],
                        [17, -16, 2],
                        [17, -15, 1],
                        [17, -15, 2],
                        [17, -14, 1],
                        [17, -14, 2],
                        [17, -13, 1],
                        [17, -13, 2],
                        [17, -12, 1],
                        [17, -12, 2],
                        [17, -11, 1],
                        [17, -11, 2],
                        [17, -10, 1],
                        [17, -10, 2],
                        [17, -9, 1],
                        [17, -9, 2],
                        [17, -8, 1],
                        [17, -8, 2],
                        [17, -7, 1],
                        [17, -7, 2],
                        [17, -6, 1],
                        [17, -6, 2],
                        [17, -5, 1],
                        [17, -5, 2],
                        [17, -4, 1],
                        [17, -4, 2],
                        [17, -3, 1],
                        [17, -3, 2],
                        [17, -2, 1],
                        [17, -2, 2],
                        [17, -1, 1],
                        [17, -1, 2],
                        [17, 0, 1],
                        [17, 0, 2],
                        [17, 1, 1],
                        [17, 1, 2],
                        [17, 2, 1],
                        [17, 2, 2],
                        [17, 3, 1],
                        [17, 3, 2],
                        [17, 4, 1],
                        [17, 4, 2],
                        [17, 5, 1],
                        [17, 5, 2],
                        [17, 6, 1],
                        [17, 6, 2],
                        [17, 7, 1],
                        [17, 7, 2],
                        [17, 8, 1],
                        [17, 8, 2],
                        [17, 9, 1],
                        [17, 9, 2],
                        [17, 10, 1],
                        [17, 10, 2],
                        [17, 11, 1],
                        [17, 11, 2],
                        [17, 12, 1],
                        [17, 12, 2],
                        [17, 13, 1],
                        [17, 13, 2],
                        [17, 14, 1],
                        [17, 14, 2],
                        [17, 15, 1],
                        [17, 15, 2],
                        [17, 16, 1],
                        [17, 16, 2],
                        [17, 17, 1],
                        [17, 17, 2],
                        [18, -18, 1],
                        [18, -18, 2],
                        [18, -18, 3],
                        [18, -18, 4],
                        [18, -17, 1],
                        [18, -17, 2],
                        [18, -17, 3],
                        [18, -17, 4],
                        [18, -16, 1],
                        [18, -16, 2],
                        [18, -16, 3],
                        [18, -16, 4],
                        [18, -15, 1],
                        [18, -15, 2],
                        [18, -15, 3],
                        [18, -15, 4],
                        [18, -14, 1],
                        [18, -14, 2],
                        [18, -14, 3],
                        [18, -14, 4],
                        [18, -13, 1],
                        [18, -13, 2],
                        [18, -13, 3],
                        [18, -13, 4],
                        [18, -12, 1],
                        [18, -12, 2],
                        [18, -12, 3],
                        [18, -12, 4],
                        [18, -11, 1],
                        [18, -11, 2],
                        [18, -11, 3],
                        [18, -11, 4],
                        [18, -10, 1],
                        [18, -10, 2],
                        [18, -10, 3],
                        [18, -10, 4],
                        [18, -9, 1],
                        [18, -9, 2],
                        [18, -9, 3],
                        [18, -9, 4],
                        [18, -8, 1],
                        [18, -8, 2],
                        [18, -8, 3],
                        [18, -8, 4],
                        [18, -7, 1],
                        [18, -7, 2],
                        [18, -7, 3],
                        [18, -7, 4],
                        [18, -6, 1],
                        [18, -6, 2],
                        [18, -6, 3],
                        [18, -6, 4],
                        [18, -5, 1],
                        [18, -5, 2],
                        [18, -5, 3],
                        [18, -5, 4],
                        [18, -4, 1],
                        [18, -4, 2],
                        [18, -4, 3],
                        [18, -4, 4],
                        [18, -3, 1],
                        [18, -3, 2],
                        [18, -3, 3],
                        [18, -3, 4],
                        [18, -2, 1],
                        [18, -2, 2],
                        [18, -2, 3],
                        [18, -2, 4],
                        [18, -1, 1],
                        [18, -1, 2],
                        [18, -1, 3],
                        [18, -1, 4],
                        [18, 0, 1],
                        [18, 0, 2],
                        [18, 0, 3],
                        [18, 0, 4],
                        [18, 1, 1],
                        [18, 1, 2],
                        [18, 1, 3],
                        [18, 1, 4],
                        [18, 2, 1],
                        [18, 2, 2],
                        [18, 2, 3],
                        [18, 2, 4],
                        [18, 3, 1],
                        [18, 3, 2],
                        [18, 3, 3],
                        [18, 3, 4],
                        [18, 4, 1],
                        [18, 4, 2],
                        [18, 4, 3],
                        [18, 4, 4],
                        [18, 5, 1],
                        [18, 5, 2],
                        [18, 5, 3],
                        [18, 5, 4],
                        [18, 6, 1],
                        [18, 6, 2],
                        [18, 6, 3],
                        [18, 6, 4],
                        [18, 7, 1],
                        [18, 7, 2],
                        [18, 7, 3],
                        [18, 7, 4],
                        [18, 8, 1],
                        [18, 8, 2],
                        [18, 8, 3],
                        [18, 8, 4],
                        [18, 9, 1],
                        [18, 9, 2],
                        [18, 9, 3],
                        [18, 9, 4],
                        [18, 10, 1],
                        [18, 10, 2],
                        [18, 10, 3],
                        [18, 10, 4],
                        [18, 11, 1],
                        [18, 11, 2],
                        [18, 11, 3],
                        [18, 11, 4],
                        [18, 12, 1],
                        [18, 12, 2],
                        [18, 12, 3],
                        [18, 12, 4],
                        [18, 13, 1],
                        [18, 13, 2],
                        [18, 13, 3],
                        [18, 13, 4],
                        [18, 14, 1],
                        [18, 14, 2],
                        [18, 14, 3],
                        [18, 14, 4],
                        [18, 15, 1],
                        [18, 15, 2],
                        [18, 15, 3],
                        [18, 15, 4],
                        [18, 16, 1],
                        [18, 16, 2],
                        [18, 16, 3],
                        [18, 16, 4],
                        [18, 17, 1],
                        [18, 17, 2],
                        [18, 17, 3],
                        [18, 17, 4],
                        [18, 18, 1],
                        [18, 18, 2],
                        [18, 18, 3],
                        [18, 18, 4],
                        [19, -19, 1],
                        [19, -19, 2],
                        [19, -19, 3],
                        [19, -18, 1],
                        [19, -18, 2],
                        [19, -18, 3],
                        [19, -17, 1],
                        [19, -17, 2],
                        [19, -17, 3],
                        [19, -16, 1],
                        [19, -16, 2],
                        [19, -16, 3],
                        [19, -15, 1],
                        [19, -15, 2],
                        [19, -15, 3],
                        [19, -14, 1],
                        [19, -14, 2],
                        [19, -14, 3],
                        [19, -13, 1],
                        [19, -13, 2],
                        [19, -13, 3],
                        [19, -12, 1],
                        [19, -12, 2],
                        [19, -12, 3],
                        [19, -11, 1],
                        [19, -11, 2],
                        [19, -11, 3],
                        [19, -10, 1],
                        [19, -10, 2],
                        [19, -10, 3],
                        [19, -9, 1],
                        [19, -9, 2],
                        [19, -9, 3],
                        [19, -8, 1],
                        [19, -8, 2],
                        [19, -8, 3],
                        [19, -7, 1],
                        [19, -7, 2],
                        [19, -7, 3],
                        [19, -6, 1],
                        [19, -6, 2],
                        [19, -6, 3],
                        [19, -5, 1],
                        [19, -5, 2],
                        [19, -5, 3],
                        [19, -4, 1],
                        [19, -4, 2],
                        [19, -4, 3],
                        [19, -3, 1],
                        [19, -3, 2],
                        [19, -3, 3],
                        [19, -2, 1],
                        [19, -2, 2],
                        [19, -2, 3],
                        [19, -1, 1],
                        [19, -1, 2],
                        [19, -1, 3],
                        [19, 0, 1],
                        [19, 0, 2],
                        [19, 0, 3],
                        [19, 1, 1],
                        [19, 1, 2],
                        [19, 1, 3],
                        [19, 2, 1],
                        [19, 2, 2],
                        [19, 2, 3],
                        [19, 3, 1],
                        [19, 3, 2],
                        [19, 3, 3],
                        [19, 4, 1],
                        [19, 4, 2],
                        [19, 4, 3],
                        [19, 5, 1],
                        [19, 5, 2],
                        [19, 5, 3],
                        [19, 6, 1],
                        [19, 6, 2],
                        [19, 6, 3],
                        [19, 7, 1],
                        [19, 7, 2],
                        [19, 7, 3],
                        [19, 8, 1],
                        [19, 8, 2],
                        [19, 8, 3],
                        [19, 9, 1],
                        [19, 9, 2],
                        [19, 9, 3],
                        [19, 10, 1],
                        [19, 10, 2],
                        [19, 10, 3],
                        [19, 11, 1],
                        [19, 11, 2],
                        [19, 11, 3],
                        [19, 12, 1],
                        [19, 12, 2],
                        [19, 12, 3],
                        [19, 13, 1],
                        [19, 13, 2],
                        [19, 13, 3],
                        [19, 14, 1],
                        [19, 14, 2],
                        [19, 14, 3],
                        [19, 15, 1],
                        [19, 15, 2],
                        [19, 15, 3],
                        [19, 16, 1],
                        [19, 16, 2],
                        [19, 16, 3],
                        [19, 17, 1],
                        [19, 17, 2],
                        [19, 17, 3],
                        [19, 18, 1],
                        [19, 18, 2],
                        [19, 18, 3],
                        [19, 19, 1],
                        [19, 19, 2],
                        [19, 19, 3],
                        [20, -20, 1],
                        [20, -20, 2],
                        [20, -20, 3],
                        [20, -20, 4],
                        [20, -19, 1],
                        [20, -19, 2],
                        [20, -19, 3],
                        [20, -19, 4],
                        [20, -18, 1],
                        [20, -18, 2],
                        [20, -18, 3],
                        [20, -18, 4],
                        [20, -17, 1],
                        [20, -17, 2],
                        [20, -17, 3],
                        [20, -17, 4],
                        [20, -16, 1],
                        [20, -16, 2],
                        [20, -16, 3],
                        [20, -16, 4],
                        [20, -15, 1],
                        [20, -15, 2],
                        [20, -15, 3],
                        [20, -15, 4],
                        [20, -14, 1],
                        [20, -14, 2],
                        [20, -14, 3],
                        [20, -14, 4],
                        [20, -13, 1],
                        [20, -13, 2],
                        [20, -13, 3],
                        [20, -13, 4],
                        [20, -12, 1],
                        [20, -12, 2],
                        [20, -12, 3],
                        [20, -12, 4],
                        [20, -11, 1],
                        [20, -11, 2],
                        [20, -11, 3],
                        [20, -11, 4],
                        [20, -10, 1],
                        [20, -10, 2],
                        [20, -10, 3],
                        [20, -10, 4],
                        [20, -9, 1],
                        [20, -9, 2],
                        [20, -9, 3],
                        [20, -9, 4],
                        [20, -8, 1],
                        [20, -8, 2],
                        [20, -8, 3],
                        [20, -8, 4],
                        [20, -7, 1],
                        [20, -7, 2],
                        [20, -7, 3],
                        [20, -7, 4],
                        [20, -6, 1],
                        [20, -6, 2],
                        [20, -6, 3],
                        [20, -6, 4],
                        [20, -5, 1],
                        [20, -5, 2],
                        [20, -5, 3],
                        [20, -5, 4],
                        [20, -4, 1],
                        [20, -4, 2],
                        [20, -4, 3],
                        [20, -4, 4],
                        [20, -3, 1],
                        [20, -3, 2],
                        [20, -3, 3],
                        [20, -3, 4],
                        [20, -2, 1],
                        [20, -2, 2],
                        [20, -2, 3],
                        [20, -2, 4],
                        [20, -1, 1],
                        [20, -1, 2],
                        [20, -1, 3],
                        [20, -1, 4],
                        [20, 0, 1],
                        [20, 0, 2],
                        [20, 0, 3],
                        [20, 0, 4],
                        [20, 1, 1],
                        [20, 1, 2],
                        [20, 1, 3],
                        [20, 1, 4],
                        [20, 2, 1],
                        [20, 2, 2],
                        [20, 2, 3],
                        [20, 2, 4],
                        [20, 3, 1],
                        [20, 3, 2],
                        [20, 3, 3],
                        [20, 3, 4],
                        [20, 4, 1],
                        [20, 4, 2],
                        [20, 4, 3],
                        [20, 4, 4],
                        [20, 5, 1],
                        [20, 5, 2],
                        [20, 5, 3],
                        [20, 5, 4],
                        [20, 6, 1],
                        [20, 6, 2],
                        [20, 6, 3],
                        [20, 6, 4],
                        [20, 7, 1],
                        [20, 7, 2],
                        [20, 7, 3],
                        [20, 7, 4],
                        [20, 8, 1],
                        [20, 8, 2],
                        [20, 8, 3],
                        [20, 8, 4],
                        [20, 9, 1],
                        [20, 9, 2],
                        [20, 9, 3],
                        [20, 9, 4],
                        [20, 10, 1],
                        [20, 10, 2],
                        [20, 10, 3],
                        [20, 10, 4],
                        [20, 11, 1],
                        [20, 11, 2],
                        [20, 11, 3],
                        [20, 11, 4],
                        [20, 12, 1],
                        [20, 12, 2],
                        [20, 12, 3],
                        [20, 12, 4],
                        [20, 13, 1],
                        [20, 13, 2],
                        [20, 13, 3],
                        [20, 13, 4],
                        [20, 14, 1],
                        [20, 14, 2],
                        [20, 14, 3],
                        [20, 14, 4],
                        [20, 15, 1],
                        [20, 15, 2],
                        [20, 15, 3],
                        [20, 15, 4],
                        [20, 16, 1],
                        [20, 16, 2],
                        [20, 16, 3],
                        [20, 16, 4],
                        [20, 17, 1],
                        [20, 17, 2],
                        [20, 17, 3],
                        [20, 17, 4],
                        [20, 18, 1],
                        [20, 18, 2],
                        [20, 18, 3],
                        [20, 18, 4],
                        [20, 19, 1],
                        [20, 19, 2],
                        [20, 19, 3],
                        [20, 19, 4],
                        [20, 20, 1],
                        [20, 20, 2],
                        [20, 20, 3],
                        [20, 20, 4]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='complex128')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.6e1) * t1 ** 2

        if Bindx == 2:
            t2 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.6e1) * np.sqrt((1 + t2)) * t2 * np.sqrt((1 - t2))

        if Bindx == 3:
            t3 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t3 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 4:
            t4 = np.cos(phi)
            tfunc[..., c] = (-0.5e1 / 0.2e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.6e1) * np.sqrt((1 - t4)) * np.sqrt((1 + t4)) * t4

        if Bindx == 5:
            t5 = np.sin(phi)
            tfunc[..., c] = -(0.5e1 / 0.4e1) * np.exp((2*1j) * phi1) * np.sqrt(0.6e1) * t5 ** 2

        if Bindx == 6:
            t8 = np.sin(phi)
            t6 = t8 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.70e2) * t6 ** 2

        if Bindx == 7:
            t9 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * t9 * (1 + (-2 + t9) * t9) * ((1 + t9) ** (0.3e1 / 0.2e1)) * np.sqrt(0.35e2) * np.exp((-3*1j) * phi1) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t11 = np.cos(phi)
            t10 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((-2*1j) * phi1) * np.sqrt(0.10e2) * t10 ** 2 * (7 * t11 ** 2 - 1)

        if Bindx == 9:
            t12 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.5e1) * t12 * np.sqrt((1 + t12)) * np.sqrt((1 - t12)) * (7 * t12 ** 2 - 3)

        if Bindx == 10:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t18) * t18

        if Bindx == 11:
            t20 = np.cos(phi)
            tfunc[..., c] = (-0.9e1 / 0.4e1*1j) * np.exp((1j) * phi1) * np.sqrt(0.5e1) * np.sqrt((1 - t20)) * np.sqrt((1 + t20)) * t20 * (7 * t20 ** 2 - 3)

        if Bindx == 12:
            t22 = np.cos(phi)
            t21 = np.sin(phi)
            tfunc[..., c] = -(0.9e1 / 0.8e1) * np.exp((2*1j) * phi1) * np.sqrt(0.10e2) * t21 ** 2 * (7 * t22 ** 2 - 1)

        if Bindx == 13:
            t23 = np.cos(phi)
            tfunc[..., c] = (0.9e1 / 0.4e1*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.35e2) * ((1 - t23) ** (0.3e1 / 0.2e1)) * ((1 + t23) ** (0.3e1 / 0.2e1)) * t23

        if Bindx == 14:
            t26 = np.sin(phi)
            t24 = t26 ** 2
            tfunc[..., c] = (0.9e1 / 0.16e2) * np.exp((4*1j) * phi1) * np.sqrt(0.70e2) * t24 ** 2

        if Bindx == 15:
            t30 = np.sin(phi)
            t27 = t30 ** 2
            t28 = t30 * t27
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.231e3) * t28 ** 2

        if Bindx == 16:
            t38 = np.cos(phi)
            t45 = -6 * t38
            t37 = t38 ** 2
            t39 = t38 * t37
            t40 = t37 ** 2
            t44 = t40 * t45 - 20 * t39 + t45
            t43 = t39 ** 2 + 15 * t37 + 15 * t40 + 1
            tfunc[..., c] = (0.13e2 / 0.128e3) * np.sqrt(0.2e1) * ((t43 + t44) * np.exp((-6*1j) * (phi1 - phi2)) + (t43 - t44) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 17:
            t46 = np.cos(phi)
            t47 = t46 ** 2
            tfunc[..., c] = (0.39e2 / 0.16e2*1j) * t46 * (-3 * t47 - 1 + (t47 + 3) * t46) * ((1 + t46) ** (0.5e1 / 0.2e1)) * np.sqrt(0.77e2) * np.exp((-5*1j) * phi1) * ((1 - t46) ** (-0.1e1 / 0.2e1))

        if Bindx == 18:
            t55 = np.cos(phi)
            t54 = t55 ** 2
            t58 = t54 ** 2
            t61 = -1 - 10 * t54 - 5 * t58
            t60 = (10 * t54 + t58 + 5) * t55
            t56 = 5 * phi1
            tfunc[..., c] = (-0.13e2 / 0.64e2*1j) * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt((1 - t55)) * np.sqrt((1 + t55)) * ((t60 + t61) * np.exp((-1*1j) * (t56 - 6 * phi2)) + (t60 - t61) * np.exp((-1*1j) * (t56 + 6 * phi2)))

        if Bindx == 19:
            t65 = np.sin(phi)
            t63 = t65 ** 2
            t62 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((-4*1j) * phi1) * np.sqrt(0.14e2) * t63 ** 2 * (11 * t62 ** 2 - 1)

        if Bindx == 20:
            t72 = np.cos(phi)
            t71 = t72 ** 2
            t74 = t71 ** 2
            t75 = t72 * t74
            t78 = 4 * t72 - 4 * t75
            t77 = t72 * t75 - 5 * t71 + 5 * t74 - 1
            t73 = 2 * phi1
            tfunc[..., c] = (0.13e2 / 0.64e2) * ((t77 + t78) * np.exp((-2*1j) * (t73 - 3 * phi2)) + (t77 - t78) * np.exp((-2*1j) * (t73 + 3 * phi2))) * np.sqrt(0.33e2)

        if Bindx == 21:
            t79 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * (11 * t79 ** 2 - 3) * t79 * ((1 + t79) ** (0.3e1 / 0.2e1)) * np.sqrt(0.105e3) * np.exp((-3*1j) * phi1) * ((1 - t79) ** (0.3e1 / 0.2e1))

        if Bindx == 22:
            t86 = np.cos(phi)
            t85 = t86 ** 2
            t92 = 2 * t85
            t88 = t85 ** 2
            t91 = 1 + t92 - 3 * t88
            t90 = (t88 + t92 - 3) * t86
            tfunc[..., c] = (-0.13e2 / 0.64e2*1j) * np.sqrt(0.55e2) * np.sqrt(0.2e1) * np.sqrt((1 - t86)) * np.sqrt((1 + t86)) * ((t90 + t91) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t90 - t91) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 23:
            t94 = np.cos(phi)
            t95 = t94 ** 2
            t93 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.105e3) * t93 ** 2 * (1 + (-18 + 33 * t95) * t95)

        if Bindx == 24:
            t104 = np.cos(phi)
            t103 = t104 ** 2
            t105 = t104 * t103
            t106 = t103 ** 2
            t110 = -2 * t104 * t106 - 2 * t104 + 4 * t105
            t109 = t105 ** 2 - t103 - t106 + 1
            tfunc[..., c] = (0.39e2 / 0.128e3) * np.sqrt(0.55e2) * np.sqrt(0.2e1) * ((t109 + t110) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t109 - t110) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 25:
            t111 = np.cos(phi)
            t112 = t111 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.42e2) * np.sqrt((1 + t111)) * t111 * np.sqrt((1 - t111)) * (5 + (-30 + 33 * t112) * t112)

        if Bindx == 26:
            t124 = np.cos(phi)
            t123 = t124 ** 2
            t130 = 1 + (-2 + t123) * t123
            t128 = t130 * t124
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.sqrt(0.11e2) * np.sqrt((1 - t124)) * np.sqrt((1 + t124)) * ((t128 - t130) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t128 + t130) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 27:
            t131 = np.cos(phi)
            t132 = t131 ** 2
            t133 = t132 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t133 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t133 + 0.1365e4 / 0.16e2) * t132

        if Bindx == 28:
            t135 = np.cos(phi)
            t136 = t135 ** 2
            t137 = t136 ** 2
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.231e3) * np.sqrt(0.2e1) * np.cos((6 * phi2)) * (-3 * t137 - 1 + (t137 + 3) * t136)

        if Bindx == 29:
            t139 = np.cos(phi)
            t140 = t139 ** 2
            tfunc[..., c] = (-0.13e2 / 0.16e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.42e2) * np.sqrt((1 - t139)) * np.sqrt((1 + t139)) * t139 * (5 + (-30 + 33 * t140) * t140)

        if Bindx == 30:
            t148 = np.cos(phi)
            t147 = t148 ** 2
            t154 = 1 + (-2 + t147) * t147
            t152 = t154 * t148
            tfunc[..., c] = (-0.39e2 / 0.32e2*1j) * np.sqrt(0.11e2) * np.sqrt((1 - t148)) * np.sqrt((1 + t148)) * ((t152 - t154) * np.exp((1j) * (phi1 - 6 * phi2)) + (t152 + t154) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 31:
            t156 = np.cos(phi)
            t157 = t156 ** 2
            t155 = np.sin(phi)
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((2*1j) * phi1) * np.sqrt(0.105e3) * t155 ** 2 * (1 + (-18 + 33 * t157) * t157)

        if Bindx == 32:
            t166 = np.cos(phi)
            t165 = t166 ** 2
            t167 = t166 * t165
            t168 = t165 ** 2
            t172 = -2 * t166 * t168 - 2 * t166 + 4 * t167
            t171 = t167 ** 2 - t165 - t168 + 1
            tfunc[..., c] = (0.39e2 / 0.128e3) * np.sqrt(0.55e2) * np.sqrt(0.2e1) * ((t171 + t172) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t171 - t172) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 33:
            t173 = np.cos(phi)
            tfunc[..., c] = (0.13e2 / 0.16e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.105e3) * ((1 - t173) ** (0.3e1 / 0.2e1)) * ((1 + t173) ** (0.3e1 / 0.2e1)) * t173 * (11 * t173 ** 2 - 3)

        if Bindx == 34:
            t180 = np.cos(phi)
            t179 = t180 ** 2
            t186 = 2 * t179
            t182 = t179 ** 2
            t185 = 1 + t186 - 3 * t182
            t184 = (t182 + t186 - 3) * t180
            tfunc[..., c] = (-0.13e2 / 0.64e2*1j) * np.sqrt(0.55e2) * np.sqrt(0.2e1) * np.sqrt((1 - t180)) * np.sqrt((1 + t180)) * ((t184 + t185) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t184 - t185) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 35:
            t190 = np.sin(phi)
            t188 = t190 ** 2
            t187 = np.cos(phi)
            tfunc[..., c] = (0.39e2 / 0.32e2) * np.exp((4*1j) * phi1) * np.sqrt(0.14e2) * t188 ** 2 * (11 * t187 ** 2 - 1)

        if Bindx == 36:
            t197 = np.cos(phi)
            t196 = t197 ** 2
            t199 = t196 ** 2
            t200 = t197 * t199
            t203 = 4 * t197 - 4 * t200
            t202 = t197 * t200 - 5 * t196 + 5 * t199 - 1
            t198 = 2 * phi1
            tfunc[..., c] = (0.13e2 / 0.64e2) * ((t202 + t203) * np.exp((2*1j) * (t198 - 3 * phi2)) + (t202 - t203) * np.exp((2*1j) * (t198 + 3 * phi2))) * np.sqrt(0.33e2)

        if Bindx == 37:
            t204 = np.cos(phi)
            tfunc[..., c] = (-0.39e2 / 0.16e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.77e2) * ((1 - t204) ** (0.5e1 / 0.2e1)) * ((1 + t204) ** (0.5e1 / 0.2e1)) * t204

        if Bindx == 38:
            t211 = np.cos(phi)
            t210 = t211 ** 2
            t214 = t210 ** 2
            t217 = -1 - 10 * t210 - 5 * t214
            t216 = (10 * t210 + t214 + 5) * t211
            t212 = 5 * phi1
            tfunc[..., c] = (-0.13e2 / 0.64e2*1j) * np.sqrt(0.2e1) * np.sqrt(0.3e1) * np.sqrt((1 - t211)) * np.sqrt((1 + t211)) * ((t216 + t217) * np.exp((1j) * (t212 - 6 * phi2)) + (t216 - t217) * np.exp((1j) * (t212 + 6 * phi2)))

        if Bindx == 39:
            t221 = np.sin(phi)
            t218 = t221 ** 2
            t219 = t221 * t218
            tfunc[..., c] = -(0.13e2 / 0.32e2) * np.exp((6*1j) * phi1) * np.sqrt(0.231e3) * t219 ** 2

        if Bindx == 40:
            t229 = np.cos(phi)
            t236 = -6 * t229
            t228 = t229 ** 2
            t230 = t229 * t228
            t231 = t228 ** 2
            t235 = t231 * t236 - 20 * t230 + t236
            t234 = t230 ** 2 + 15 * t228 + 15 * t231 + 1
            tfunc[..., c] = (0.13e2 / 0.128e3) * np.sqrt(0.2e1) * ((t234 + t235) * np.exp((6*1j) * (phi1 - phi2)) + (t234 - t235) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 41:
            t245 = np.cos(phi)
            t244 = t245 ** 2
            t247 = t245 * t244
            t250 = t247 ** 2
            t252 = -t245 * t250 + 1
            t248 = t244 ** 2
            t246 = 7 * phi1
            t241 = t245 * t248
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.sqrt(0.7e1) * np.sqrt((1 + t245)) * ((1 - t245) ** (-0.1e1 / 0.2e1)) * ((7 * t250 - 21 * t241 + 35 * t248 - 35 * t247 + 21 * t244 - 7 * t245 + t252) * np.exp((-1*1j) * (t246 - 6 * phi2)) + (5 * t250 + 9 * t241 + 5 * t248 - 5 * t247 - 9 * t244 - 5 * t245 - t252) * np.exp((-1*1j) * (t246 + 6 * phi2)))

        if Bindx == 42:
            t261 = np.cos(phi)
            t260 = t261 ** 2
            t263 = t260 ** 2
            t262 = t261 * t260
            t265 = t262 ** 2
            t268 = 6 + 48 * t260 - 50 * t263 - 36 * t265
            t267 = 15 * t262 + (-69 * t263 - 7 * t265 + 29) * t261
            tfunc[..., c] = (0.15e2 / 0.128e3) * np.sqrt(0.2e1) * ((-t267 + t268) * np.exp((-6*1j) * (phi1 - phi2)) + (t267 + t268) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 43:
            t278 = np.cos(phi)
            t277 = t278 ** 2
            t280 = t278 * t277
            t281 = t277 ** 2
            t283 = t280 ** 2
            t287 = 38 * t280 + (10 * t281 - 30 * t283 - 18) * t278
            t286 = -10 * t277 - 38 * t283 - 5 + (60 - 7 * t281) * t281
            t279 = 5 * phi1
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.sqrt(0.13e2) * ((-t286 + t287) * np.exp((-1*1j) * (t279 - 6 * phi2)) + (t286 + t287) * np.exp((-1*1j) * (t279 + 6 * phi2))) * ((1 + t278) ** (-0.1e1 / 0.2e1)) * ((1 - t278) ** (-0.1e1 / 0.2e1))

        if Bindx == 44:
            t296 = np.cos(phi)
            t295 = t296 ** 2
            t299 = t295 ** 2
            t298 = t296 * t295
            t301 = t298 ** 2
            t304 = -4 + 8 * t295 + 20 * t299 - 24 * t301
            t303 = 35 * t298 + (-19 * t299 - 7 * t301 - 9) * t296
            t297 = 2 * phi1
            tfunc[..., c] = (0.15e2 / 0.64e2) * ((-t303 + t304) * np.exp((-2*1j) * (t297 - 3 * phi2)) + (t303 + t304) * np.exp((-2*1j) * (t297 + 3 * phi2))) * np.sqrt(0.13e2)

        if Bindx == 45:
            t314 = np.cos(phi)
            t313 = t314 ** 2
            t315 = t314 * t313
            t316 = t313 ** 2
            t318 = t315 ** 2
            t322 = 22 * t315 + (-38 * t316 + 18 * t318 - 2) * t314
            t321 = -18 * t313 + 2 * t318 + 3 + (20 - 7 * t316) * t316
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.sqrt(0.143e3) * ((1 - t314) ** (-0.1e1 / 0.2e1)) * ((1 + t314) ** (-0.1e1 / 0.2e1)) * ((t321 + t322) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (-t321 + t322) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 46:
            t331 = np.cos(phi)
            t330 = t331 ** 2
            t333 = t330 ** 2
            t332 = t331 * t330
            t335 = t332 ** 2
            t338 = -2 + 16 * t330 - 26 * t333 + 12 * t335
            t337 = -t332 + (11 * t333 - 7 * t335 - 3) * t331
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.sqrt(0.2e1) * np.sqrt(0.143e3) * ((t337 + t338) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (-t337 + t338) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 47:
            t348 = np.cos(phi)
            t347 = t348 ** 2
            t349 = t348 * t347
            t350 = t347 ** 2
            t352 = t349 ** 2
            t356 = 18 * t349 + 6 * (-3 * t350 + t352 - 1) * t348
            t355 = 10 * t347 + 22 * t352 - 1 + (-24 - 7 * t350) * t350
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.sqrt(0.429e3) * ((1 + t348) ** (-0.1e1 / 0.2e1)) * ((1 - t348) ** (-0.1e1 / 0.2e1)) * ((t355 + t356) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t355 + t356) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 48:
            t360 = np.sin(phi)
            t357 = t360 ** 2
            t358 = t360 * t357
            tfunc[..., c] = (-0.15e2 / 0.32e2*1j) * np.sqrt(0.3003e4) * np.sqrt(0.2e1) * np.cos(phi) * np.sin((6 * phi2)) * t358 ** 2

        if Bindx == 49:
            t370 = np.cos(phi)
            t369 = t370 ** 2
            t371 = t370 * t369
            t372 = t369 ** 2
            t374 = t371 ** 2
            t378 = -18 * t371 + 6 * (3 * t372 - t374 + 1) * t370
            t377 = 10 * t369 + 22 * t374 - 1 + (-24 - 7 * t372) * t372
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.sqrt(0.429e3) * ((1 + t370) ** (-0.1e1 / 0.2e1)) * ((1 - t370) ** (-0.1e1 / 0.2e1)) * ((-t377 + t378) * np.exp((1j) * (phi1 - 6 * phi2)) + (t377 + t378) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 50:
            t387 = np.cos(phi)
            t386 = t387 ** 2
            t389 = t386 ** 2
            t388 = t387 * t386
            t391 = t388 ** 2
            t394 = 2 - 16 * t386 + 26 * t389 - 12 * t391
            t393 = -t388 + (11 * t389 - 7 * t391 - 3) * t387
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.sqrt(0.2e1) * np.sqrt(0.143e3) * ((-t393 + t394) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t393 + t394) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 51:
            t404 = np.cos(phi)
            t403 = t404 ** 2
            t405 = t404 * t403
            t406 = t403 ** 2
            t408 = t405 ** 2
            t412 = -22 * t405 + (38 * t406 - 18 * t408 + 2) * t404
            t411 = -18 * t403 + 2 * t408 + 3 + (20 - 7 * t406) * t406
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.sqrt(0.143e3) * ((-t411 + t412) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t411 + t412) * np.exp((3*1j) * (phi1 + 2 * phi2))) * ((1 + t404) ** (-0.1e1 / 0.2e1)) * ((1 - t404) ** (-0.1e1 / 0.2e1))

        if Bindx == 52:
            t421 = np.cos(phi)
            t420 = t421 ** 2
            t424 = t420 ** 2
            t423 = t421 * t420
            t426 = t423 ** 2
            t429 = -4 + 8 * t420 + 20 * t424 - 24 * t426
            t428 = 35 * t423 + (-19 * t424 - 7 * t426 - 9) * t421
            t422 = 2 * phi1
            tfunc[..., c] = -(0.15e2 / 0.64e2) * ((-t428 + t429) * np.exp((2*1j) * (t422 - 3 * phi2)) + (t428 + t429) * np.exp((2*1j) * (t422 + 3 * phi2))) * np.sqrt(0.13e2)

        if Bindx == 53:
            t439 = np.cos(phi)
            t438 = t439 ** 2
            t441 = t439 * t438
            t442 = t438 ** 2
            t444 = t441 ** 2
            t448 = 38 * t441 + (10 * t442 - 30 * t444 - 18) * t439
            t447 = -10 * t438 - 38 * t444 - 5 + (60 - 7 * t442) * t442
            t440 = 5 * phi1
            tfunc[..., c] = (-0.15e2 / 0.128e3*1j) * np.sqrt(0.13e2) * ((-t447 + t448) * np.exp((1j) * (t440 - 6 * phi2)) + (t447 + t448) * np.exp((1j) * (t440 + 6 * phi2))) * ((1 + t439) ** (-0.1e1 / 0.2e1)) * ((1 - t439) ** (-0.1e1 / 0.2e1))

        if Bindx == 54:
            t457 = np.cos(phi)
            t456 = t457 ** 2
            t459 = t456 ** 2
            t458 = t457 * t456
            t461 = t458 ** 2
            t464 = 6 + 48 * t456 - 50 * t459 - 36 * t461
            t463 = 15 * t458 + (-69 * t459 - 7 * t461 + 29) * t457
            tfunc[..., c] = -(0.15e2 / 0.128e3) * np.sqrt(0.2e1) * ((-t463 + t464) * np.exp((6*1j) * (phi1 - phi2)) + (t463 + t464) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 55:
            t473 = np.cos(phi)
            t472 = t473 ** 2
            t475 = t473 * t472
            t478 = t475 ** 2
            t480 = -t473 * t478 - 1
            t476 = t472 ** 2
            t474 = 7 * phi1
            t469 = t473 * t476
            tfunc[..., c] = (0.15e2 / 0.128e3*1j) * np.sqrt(0.7e1) * np.sqrt((1 - t473)) * ((1 + t473) ** (-0.1e1 / 0.2e1)) * ((-5 * t478 + 9 * t469 - 5 * t476 - 5 * t475 + 9 * t472 - 5 * t473 - t480) * np.exp((1j) * (t474 - 6 * phi2)) + (-7 * t478 - 21 * t469 - 35 * t476 - 35 * t475 - 21 * t472 - 7 * t473 + t480) * np.exp((1j) * (t474 + 6 * phi2)))

        if Bindx == 56:
            t484 = np.sin(phi)
            t481 = t484 ** 2
            t482 = t481 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.1430e4) * t482 ** 2

        if Bindx == 57:
            t493 = np.cos(phi)
            t492 = t493 ** 2
            t502 = -14 * t492
            t495 = t493 * t492
            t497 = t495 ** 2
            t498 = t493 * t497
            t501 = t493 * t498 + 14 * t497 + t502 - 1
            t500 = 6 * t493 - 6 * t498 + (t502 + 14) * t495
            t494 = 4 * phi1
            tfunc[..., c] = (0.17e2 / 0.128e3) * ((t500 + t501) * np.exp((-2*1j) * (t494 - 3 * phi2)) + (-t500 + t501) * np.exp((-2*1j) * (t494 + 3 * phi2))) * np.sqrt(0.15e2)

        if Bindx == 58:
            t503 = np.cos(phi)
            t507 = -4 * t503
            t504 = t503 ** 2
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * t503 * (t507 + 1 + (t507 + 6 + t504) * t504) * ((1 + t503) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1430e4) * np.exp((-7*1j) * phi1) * ((1 - t503) ** (-0.1e1 / 0.2e1))

        if Bindx == 59:
            t517 = np.cos(phi)
            t516 = t517 ** 2
            t520 = t516 ** 2
            t526 = 4 * t520 ** 2
            t519 = t517 * t516
            t525 = -3 + 21 * t519 + 35 * t520
            t522 = t519 ** 2
            t518 = 7 * phi1
            t513 = t517 * t520
            t511 = t517 * t522
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt((1 + t517)) * np.sqrt(0.15e2) * ((1 - t517) ** (-0.1e1 / 0.2e1)) * ((t526 - 25 * t511 + 63 * t522 - 77 * t513 - 35 * t516 + 17 * t517 + t525) * np.exp((-1*1j) * (t518 - 6 * phi2)) + (t526 + 17 * t511 + 21 * t522 - 7 * t513 + 7 * t516 + 11 * t517 - t525) * np.exp((-1*1j) * (t518 + 6 * phi2)))

        if Bindx == 60:
            t531 = np.sin(phi)
            t528 = t531 ** 2
            t529 = t531 * t528
            t527 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((-6*1j) * phi1) * np.sqrt(0.429e3) * t529 ** 2 * (15 * t527 ** 2 - 1)

        if Bindx == 61:
            t540 = np.cos(phi)
            t541 = t540 ** 2
            t543 = t541 ** 2
            t542 = t540 * t541
            t545 = t542 ** 2
            t549 = 196 * t545 + 16 + (-210 + 30 * t543) * t543
            t548 = 175 * t542 + (-21 * t543 - 135 * t545 - 51) * t540
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.sqrt(0.2e1) * ((t548 + t549) * np.exp((-6*1j) * (phi1 - phi2)) + (-t548 + t549) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 62:
            t550 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * (5 * t550 ** 2 - 1) * t550 * ((1 + t550) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2002e4) * np.exp((-5*1j) * phi1) * ((1 - t550) ** (0.5e1 / 0.2e1))

        if Bindx == 63:
            t561 = np.cos(phi)
            t560 = t561 ** 2
            t564 = t560 ** 2
            t563 = t561 * t560
            t566 = t563 ** 2
            t568 = t564 ** 2
            t571 = 7 - 42 * t560 + 20 * t564 + 90 * t566 - 75 * t568
            t570 = 90 * t563 + (-162 * t564 + 62 * t566 + 20 * t568 - 10) * t561
            t562 = 5 * phi1
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt(0.21e2) * ((1 + t561) ** (-0.1e1 / 0.2e1)) * ((1 - t561) ** (-0.1e1 / 0.2e1)) * ((t570 + t571) * np.exp((-1*1j) * (t562 - 6 * phi2)) + (t570 - t571) * np.exp((-1*1j) * (t562 + 6 * phi2)))

        if Bindx == 64:
            t577 = np.sin(phi)
            t575 = t577 ** 2
            t572 = np.cos(phi)
            t573 = t572 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.154e3) * t575 ** 2 * (1 + (-26 + 65 * t573) * t573)

        if Bindx == 65:
            t587 = np.cos(phi)
            t586 = t587 ** 2
            t589 = t587 * t586
            t590 = t586 ** 2
            t592 = t589 ** 2
            t596 = -5 * t589 + (21 * t590 - 15 * t592 - 1) * t587
            t595 = 10 * t586 + 6 * t592 - 1 + (-20 + 5 * t590) * t590
            t588 = 2 * phi1
            tfunc[..., c] = (0.17e2 / 0.64e2) * ((t595 + t596) * np.exp((-2*1j) * (t588 - 3 * phi2)) + (t595 - t596) * np.exp((-2*1j) * (t588 + 3 * phi2))) * np.sqrt(0.273e3)

        if Bindx == 66:
            t597 = np.cos(phi)
            t598 = t597 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * (3 + (-26 + 39 * t598) * t598) * t597 * ((1 + t597) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2310e4) * np.exp((-3*1j) * phi1) * ((1 - t597) ** (0.3e1 / 0.2e1))

        if Bindx == 67:
            t610 = np.cos(phi)
            t609 = t610 ** 2
            t612 = t609 ** 2
            t611 = t610 * t609
            t614 = t611 ** 2
            t616 = t612 ** 2
            t619 = -1 + 14 * t609 - 52 * t612 + 66 * t614 - 27 * t616
            t618 = 22 * t611 - 14 * (t612 + t614) * t610 + (12 * t616 - 6) * t610
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt(0.455e3) * ((1 + t610) ** (-0.1e1 / 0.2e1)) * ((1 - t610) ** (-0.1e1 / 0.2e1)) * ((t618 + t619) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t618 - t619) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 68:
            t622 = np.cos(phi)
            t623 = t622 ** 2
            t624 = t623 ** 2
            t621 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((-2*1j) * phi1) * np.sqrt(0.35e2) * t621 ** 2 * (-143 * t624 - 1 + (143 * t624 + 33) * t623)

        if Bindx == 69:
            t634 = np.cos(phi)
            t633 = t634 ** 2
            t635 = t634 * t633
            t636 = t633 ** 2
            t638 = t635 ** 2
            t641 = 2 * t635 + 2 * (-2 * t636 + t638) * t634
            t640 = 1 - 5 * t633 + 7 * t636 - 3 * t638
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.sqrt(0.2e1) * t634 * np.sqrt(0.15015e5) * ((t640 + t641) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (-t640 + t641) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 70:
            t642 = np.cos(phi)
            t643 = t642 ** 2
            t644 = t642 * t643
            t649 = -1001 * t643 ** 2 + 715 * t644 ** 2 - 35
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 + t642)) * t642 * (t649 * t642 - 385 * t643 + 385 * t644 - t649) * ((1 - t642) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t660 = np.cos(phi)
            t659 = t660 ** 2
            t662 = t659 ** 2
            t661 = t660 * t659
            t664 = t661 ** 2
            t666 = t662 ** 2
            t669 = -1 + 18 * t659 - 48 * t662 + 46 * t664 - 15 * t666
            t668 = -38 * t661 + (78 * t662 - 66 * t664 + 20 * t666 + 6) * t660
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt(0.429e3) * ((1 + t660) ** (-0.1e1 / 0.2e1)) * ((1 - t660) ** (-0.1e1 / 0.2e1)) * ((t668 + t669) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t668 - t669) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 72:
            t670 = np.cos(phi)
            t671 = t670 ** 2
            t672 = t671 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t671 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t671 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t672) * t672

        if Bindx == 73:
            t675 = np.cos(phi)
            t676 = t675 ** 2
            t677 = t676 ** 2
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.429e3) * np.sqrt(0.2e1) * (-18 * t676 + 1 + (-46 * t676 + 48 + 15 * t677) * t677) * np.cos((6 * phi2))

        if Bindx == 74:
            t680 = np.cos(phi)
            t681 = t680 ** 2
            t682 = t681 ** 2
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.2e1) * np.sqrt((1 - t680)) * np.sqrt((1 + t680)) * t680 * (-1001 * t682 - 35 + (715 * t682 + 385) * t681)

        if Bindx == 75:
            t694 = np.cos(phi)
            t693 = t694 ** 2
            t696 = t693 ** 2
            t695 = t694 * t693
            t698 = t695 ** 2
            t700 = t696 ** 2
            t703 = -1 + 18 * t693 - 48 * t696 + 46 * t698 - 15 * t700
            t702 = -38 * t695 + (78 * t696 - 66 * t698 + 20 * t700 + 6) * t694
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt(0.429e3) * ((1 + t694) ** (-0.1e1 / 0.2e1)) * ((1 - t694) ** (-0.1e1 / 0.2e1)) * ((t702 + t703) * np.exp((1j) * (phi1 - 6 * phi2)) + (t702 - t703) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 76:
            t705 = np.cos(phi)
            t706 = t705 ** 2
            t707 = t706 ** 2
            t704 = np.sin(phi)
            tfunc[..., c] = -(0.51e2 / 0.64e2) * np.exp((2*1j) * phi1) * np.sqrt(0.35e2) * t704 ** 2 * (-143 * t707 - 1 + (143 * t707 + 33) * t706)

        if Bindx == 77:
            t717 = np.cos(phi)
            t716 = t717 ** 2
            t718 = t717 * t716
            t719 = t716 ** 2
            t721 = t718 ** 2
            t724 = 2 * t718 + 2 * (-2 * t719 + t721) * t717
            t723 = 1 - 5 * t716 + 7 * t719 - 3 * t721
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.sqrt(0.2e1) * t717 * np.sqrt(0.15015e5) * ((t723 + t724) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (-t723 + t724) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 78:
            t725 = np.cos(phi)
            t726 = t725 ** 2
            tfunc[..., c] = (0.17e2 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.2310e4) * ((1 - t725) ** (0.3e1 / 0.2e1)) * ((1 + t725) ** (0.3e1 / 0.2e1)) * t725 * (3 + (-26 + 39 * t726) * t726)

        if Bindx == 79:
            t738 = np.cos(phi)
            t737 = t738 ** 2
            t740 = t737 ** 2
            t739 = t738 * t737
            t742 = t739 ** 2
            t744 = t740 ** 2
            t747 = -1 + 14 * t737 - 52 * t740 + 66 * t742 - 27 * t744
            t746 = 22 * t739 - 14 * (t740 + t742) * t738 + (12 * t744 - 6) * t738
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt(0.455e3) * ((1 + t738) ** (-0.1e1 / 0.2e1)) * ((1 - t738) ** (-0.1e1 / 0.2e1)) * ((t746 + t747) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t746 - t747) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 80:
            t754 = np.sin(phi)
            t752 = t754 ** 2
            t749 = np.cos(phi)
            t750 = t749 ** 2
            tfunc[..., c] = (0.51e2 / 0.128e3) * np.exp((4*1j) * phi1) * np.sqrt(0.154e3) * t752 ** 2 * (1 + (-26 + 65 * t750) * t750)

        if Bindx == 81:
            t764 = np.cos(phi)
            t763 = t764 ** 2
            t766 = t764 * t763
            t767 = t763 ** 2
            t769 = t766 ** 2
            t773 = -5 * t766 + (21 * t767 - 15 * t769 - 1) * t764
            t772 = 10 * t763 + 6 * t769 - 1 + (-20 + 5 * t767) * t767
            t765 = 2 * phi1
            tfunc[..., c] = (0.17e2 / 0.64e2) * ((t772 + t773) * np.exp((2*1j) * (t765 - 3 * phi2)) + (t772 - t773) * np.exp((2*1j) * (t765 + 3 * phi2))) * np.sqrt(0.273e3)

        if Bindx == 82:
            t774 = np.cos(phi)
            tfunc[..., c] = (-0.51e2 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.2002e4) * ((1 - t774) ** (0.5e1 / 0.2e1)) * ((1 + t774) ** (0.5e1 / 0.2e1)) * t774 * (5 * t774 ** 2 - 1)

        if Bindx == 83:
            t785 = np.cos(phi)
            t784 = t785 ** 2
            t788 = t784 ** 2
            t787 = t785 * t784
            t790 = t787 ** 2
            t792 = t788 ** 2
            t795 = 7 - 42 * t784 + 20 * t788 + 90 * t790 - 75 * t792
            t794 = 90 * t787 + (-162 * t788 + 62 * t790 + 20 * t792 - 10) * t785
            t786 = 5 * phi1
            tfunc[..., c] = (0.17e2 / 0.128e3*1j) * np.sqrt(0.21e2) * ((1 + t785) ** (-0.1e1 / 0.2e1)) * ((1 - t785) ** (-0.1e1 / 0.2e1)) * ((t794 + t795) * np.exp((1j) * (t786 - 6 * phi2)) + (t794 - t795) * np.exp((1j) * (t786 + 6 * phi2)))

        if Bindx == 84:
            t800 = np.sin(phi)
            t797 = t800 ** 2
            t798 = t800 * t797
            t796 = np.cos(phi)
            tfunc[..., c] = -(0.17e2 / 0.64e2) * np.exp((6*1j) * phi1) * np.sqrt(0.429e3) * t798 ** 2 * (15 * t796 ** 2 - 1)

        if Bindx == 85:
            t809 = np.cos(phi)
            t810 = t809 ** 2
            t812 = t810 ** 2
            t811 = t809 * t810
            t814 = t811 ** 2
            t818 = 196 * t814 + 16 + (-210 + 30 * t812) * t812
            t817 = 175 * t811 + (-21 * t812 - 135 * t814 - 51) * t809
            tfunc[..., c] = (0.17e2 / 0.128e3) * np.sqrt(0.2e1) * ((t817 + t818) * np.exp((6*1j) * (phi1 - phi2)) + (-t817 + t818) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 86:
            t819 = np.cos(phi)
            tfunc[..., c] = (0.51e2 / 0.64e2*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.1430e4) * ((1 - t819) ** (0.7e1 / 0.2e1)) * ((1 + t819) ** (0.7e1 / 0.2e1)) * t819

        if Bindx == 87:
            t829 = np.cos(phi)
            t828 = t829 ** 2
            t832 = t828 ** 2
            t838 = 4 * t832 ** 2
            t831 = t829 * t828
            t837 = 3 + 21 * t831 - 35 * t832
            t834 = t831 ** 2
            t830 = 7 * phi1
            t825 = t829 * t832
            t823 = t829 * t834
            tfunc[..., c] = (-0.17e2 / 0.128e3*1j) * np.sqrt((1 - t829)) * np.sqrt(0.15e2) * ((1 + t829) ** (-0.1e1 / 0.2e1)) * ((t838 - 17 * t823 + 21 * t834 + 7 * t825 + 7 * t828 - 11 * t829 + t837) * np.exp((1j) * (t830 - 6 * phi2)) + (t838 + 25 * t823 + 63 * t834 + 77 * t825 - 35 * t828 - 17 * t829 - t837) * np.exp((1j) * (t830 + 6 * phi2)))

        if Bindx == 88:
            t842 = np.sin(phi)
            t839 = t842 ** 2
            t840 = t839 ** 2
            tfunc[..., c] = (0.51e2 / 0.256e3) * np.exp((8*1j) * phi1) * np.sqrt(0.1430e4) * t840 ** 2

        if Bindx == 89:
            t851 = np.cos(phi)
            t850 = t851 ** 2
            t860 = -14 * t850
            t853 = t851 * t850
            t855 = t853 ** 2
            t856 = t851 * t855
            t859 = t851 * t856 + 14 * t855 + t860 - 1
            t858 = 6 * t851 - 6 * t856 + (t860 + 14) * t853
            t852 = 4 * phi1
            tfunc[..., c] = (0.17e2 / 0.128e3) * ((t858 + t859) * np.exp((2*1j) * (t852 - 3 * phi2)) + (-t858 + t859) * np.exp((2*1j) * (t852 + 3 * phi2))) * np.sqrt(0.15e2)

        if Bindx == 90:
            t869 = np.cos(phi)
            t868 = t869 ** 2
            t878 = 14 * t868
            t871 = t869 * t868
            t873 = t871 ** 2
            t874 = t869 * t873
            t877 = -t869 * t874 - 14 * t873 + t878 + 1
            t876 = -6 * t869 + 6 * t874 + (t878 - 14) * t871
            t870 = 3 * phi1
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.sqrt(0.2e1) * np.sqrt(0.51e2) * np.sqrt((1 - t869)) * np.sqrt((1 + t869)) * ((t876 + t877) * np.exp((-3*1j) * (t870 - 2 * phi2)) + (t876 - t877) * np.exp((-3*1j) * (t870 + 2 * phi2)))

        if Bindx == 91:
            t889 = np.cos(phi)
            t888 = t889 ** 2
            t892 = t888 ** 2
            t891 = t889 * t888
            t894 = t891 ** 2
            t896 = t892 ** 2
            t899 = 2 + 10 * t888 - 42 * t892 + 14 * t894 + 16 * t896
            t898 = 14 * t891 + (28 * t892 - 30 * t894 - 3 * t896 - 9) * t889
            t890 = 4 * phi1
            tfunc[..., c] = -(0.19e2 / 0.128e3) * ((t898 + t899) * np.exp((-2*1j) * (t890 - 3 * phi2)) + (-t898 + t899) * np.exp((-2*1j) * (t890 + 3 * phi2))) * np.sqrt(0.51e2)

        if Bindx == 92:
            t910 = np.cos(phi)
            t909 = t910 ** 2
            t913 = t909 ** 2
            t917 = t913 ** 2
            t919 = -51 * t910 * t917 + 21
            t912 = t910 * t909
            t915 = t912 ** 2
            t911 = 7 * phi1
            t906 = t910 * t913
            t904 = t910 * t915
            tfunc[..., c] = (-0.19e2 / 0.256e3*1j) * np.sqrt(0.2e1) * np.sqrt((1 + t910)) * np.sqrt(0.3e1) * ((1 - t910) ** (-0.1e1 / 0.2e1)) * ((289 * t917 - 616 * t904 + 504 * t915 + 154 * t906 - 574 * t913 + 336 * t912 + 16 * t909 - 79 * t910 + t919) * np.exp((-1*1j) * (t911 - 6 * phi2)) + (187 * t917 + 140 * t904 - 252 * t915 - 406 * t906 - 14 * t913 + 252 * t912 + 100 * t909 - 37 * t910 - t919) * np.exp((-1*1j) * (t911 + 6 * phi2)))

        if Bindx == 93:
            t930 = np.cos(phi)
            t929 = t930 ** 2
            t932 = t929 ** 2
            t931 = t930 * t929
            t934 = t931 ** 2
            t936 = t932 ** 2
            t939 = -23 + 207 * t929 - 273 * t932 - 287 * t934 + 408 * t936
            t938 = -308 * t931 + (798 * t932 - 432 * t934 - 102 * t936 + 12) * t930
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.sqrt(0.2e1) * ((t938 + t939) * np.exp((-6*1j) * (phi1 - phi2)) + (-t938 + t939) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 94:
            t951 = np.cos(phi)
            t950 = t951 ** 2
            t953 = t951 * t950
            t954 = t950 ** 2
            t955 = t951 * t954
            t956 = t953 ** 2
            t958 = t954 ** 2
            t962 = -30 * t953 - 126 * t955 + (310 * t956 - 170 * t958 + 16) * t951
            t961 = -51 * t955 ** 2 + 75 * t950 - 280 * t954 + 336 * t956 - 75 * t958 - 5
            t952 = 5 * phi1
            tfunc[..., c] = (0.19e2 / 0.128e3*1j) * np.sqrt(0.2e1) * np.sqrt(0.15e2) * ((-t961 + t962) * np.exp((-1*1j) * (t952 - 6 * phi2)) + (t961 + t962) * np.exp((-1*1j) * (t952 + 6 * phi2))) * ((1 + t951) ** (-0.1e1 / 0.2e1)) * ((1 - t951) ** (-0.1e1 / 0.2e1))

        if Bindx == 95:
            t973 = np.cos(phi)
            t972 = t973 ** 2
            t976 = t972 ** 2
            t975 = t973 * t972
            t978 = t975 ** 2
            t980 = t976 ** 2
            t983 = 1 - 19 * t972 + 131 * t976 - 249 * t978 + 136 * t980
            t982 = -106 * t975 + (144 * t976 - 6 * t978 - 51 * t980 + 19) * t973
            t974 = 2 * phi1
            tfunc[..., c] = -(0.19e2 / 0.64e2) * ((t982 + t983) * np.exp((-2*1j) * (t974 - 3 * phi2)) + (-t982 + t983) * np.exp((-2*1j) * (t974 + 3 * phi2))) * np.sqrt(0.21e2)

        if Bindx == 96:
            t995 = np.cos(phi)
            t994 = t995 ** 2
            t997 = t994 ** 2
            t1001 = t997 ** 2
            t996 = t995 * t994
            t998 = t995 * t997
            t999 = t996 ** 2
            t1005 = -98 * t996 + 262 * t998 + (102 * t1001 - 278 * t999 + 12) * t995
            t1004 = -51 * t998 ** 2 + 93 * t1001 + 23 * t994 - 52 * t997 - 12 * t999 - 1
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.sqrt(0.91e2) * np.sqrt(0.2e1) * ((1 + t995) ** (-0.1e1 / 0.2e1)) * ((1 - t995) ** (-0.1e1 / 0.2e1)) * ((t1004 + t1005) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (-t1004 + t1005) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 97:
            t1016 = np.cos(phi)
            t1015 = t1016 ** 2
            t1018 = t1015 ** 2
            t1017 = t1016 * t1015
            t1020 = t1017 ** 2
            t1022 = t1018 ** 2
            t1025 = -3 + 75 * t1015 - 277 * t1018 + 341 * t1020 - 136 * t1022
            t1024 = 44 * t1017 + (-178 * t1018 + 240 * t1020 - 102 * t1022 - 4) * t1016
            tfunc[..., c] = (0.19e2 / 0.128e3) * np.sqrt(0.2e1) * np.sqrt(0.39e2) * ((-t1024 + t1025) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t1024 + t1025) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 98:
            t1037 = np.cos(phi)
            t1036 = t1037 ** 2
            t1038 = t1037 * t1036
            t1039 = t1036 ** 2
            t1040 = t1037 * t1039
            t1041 = t1038 ** 2
            t1043 = t1039 ** 2
            t1047 = -52 * t1038 + 120 * t1040 + (-108 * t1041 + 34 * t1043 + 6) * t1037
            t1046 = -51 * t1040 ** 2 - 27 * t1036 + 126 * t1039 - 226 * t1041 + 177 * t1043 + 1
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.sqrt(0.429e3) * ((1 + t1037) ** (-0.1e1 / 0.2e1)) * ((1 - t1037) ** (-0.1e1 / 0.2e1)) * ((t1046 + t1047) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t1046 + t1047) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 99:
            t1052 = np.sin(phi)
            t1049 = t1052 ** 2
            t1050 = t1052 * t1049
            t1048 = np.cos(phi)
            tfunc[..., c] = (-0.19e2 / 0.64e2*1j) * t1048 * t1050 ** 2 * (17 * t1048 ** 2 - 3) * np.sin((6 * phi2)) * np.sqrt(0.2145e4) * np.sqrt(0.2e1)

        if Bindx == 100:
            t1064 = np.cos(phi)
            t1063 = t1064 ** 2
            t1065 = t1064 * t1063
            t1066 = t1063 ** 2
            t1067 = t1064 * t1066
            t1068 = t1065 ** 2
            t1070 = t1066 ** 2
            t1074 = 52 * t1065 - 120 * t1067 + (108 * t1068 - 34 * t1070 - 6) * t1064
            t1073 = -51 * t1067 ** 2 - 27 * t1063 + 126 * t1066 - 226 * t1068 + 177 * t1070 + 1
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.sqrt(0.429e3) * ((-t1073 + t1074) * np.exp((1j) * (phi1 - 6 * phi2)) + (t1073 + t1074) * np.exp((1j) * (phi1 + 6 * phi2))) * ((1 + t1064) ** (-0.1e1 / 0.2e1)) * ((1 - t1064) ** (-0.1e1 / 0.2e1))

        if Bindx == 101:
            t1085 = np.cos(phi)
            t1084 = t1085 ** 2
            t1087 = t1084 ** 2
            t1086 = t1085 * t1084
            t1089 = t1086 ** 2
            t1091 = t1087 ** 2
            t1094 = -3 + 75 * t1084 - 277 * t1087 + 341 * t1089 - 136 * t1091
            t1093 = 44 * t1086 + (-178 * t1087 + 240 * t1089 - 102 * t1091 - 4) * t1085
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.sqrt(0.2e1) * np.sqrt(0.39e2) * ((-t1093 + t1094) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t1093 + t1094) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 102:
            t1106 = np.cos(phi)
            t1105 = t1106 ** 2
            t1107 = t1106 * t1105
            t1108 = t1105 ** 2
            t1109 = t1106 * t1108
            t1110 = t1107 ** 2
            t1112 = t1108 ** 2
            t1116 = 98 * t1107 - 262 * t1109 + (278 * t1110 - 102 * t1112 - 12) * t1106
            t1115 = -51 * t1109 ** 2 + 23 * t1105 - 52 * t1108 - 12 * t1110 + 93 * t1112 - 1
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.sqrt(0.91e2) * np.sqrt(0.2e1) * ((1 + t1106) ** (-0.1e1 / 0.2e1)) * ((1 - t1106) ** (-0.1e1 / 0.2e1)) * ((-t1115 + t1116) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t1115 + t1116) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 103:
            t1127 = np.cos(phi)
            t1126 = t1127 ** 2
            t1130 = t1126 ** 2
            t1129 = t1127 * t1126
            t1132 = t1129 ** 2
            t1134 = t1130 ** 2
            t1137 = -1 + 19 * t1126 - 131 * t1130 + 249 * t1132 - 136 * t1134
            t1136 = -106 * t1129 + (144 * t1130 - 6 * t1132 - 51 * t1134 + 19) * t1127
            t1128 = 2 * phi1
            tfunc[..., c] = -(0.19e2 / 0.64e2) * ((-t1136 + t1137) * np.exp((2*1j) * (t1128 - 3 * phi2)) + (t1136 + t1137) * np.exp((2*1j) * (t1128 + 3 * phi2))) * np.sqrt(0.21e2)

        if Bindx == 104:
            t1149 = np.cos(phi)
            t1148 = t1149 ** 2
            t1151 = t1149 * t1148
            t1152 = t1148 ** 2
            t1153 = t1149 * t1152
            t1154 = t1151 ** 2
            t1156 = t1152 ** 2
            t1160 = -30 * t1151 - 126 * t1153 + (310 * t1154 - 170 * t1156 + 16) * t1149
            t1159 = -51 * t1153 ** 2 + 75 * t1148 - 280 * t1152 + 336 * t1154 - 75 * t1156 - 5
            t1150 = 5 * phi1
            tfunc[..., c] = (-0.19e2 / 0.128e3*1j) * np.sqrt(0.2e1) * np.sqrt(0.15e2) * ((1 + t1149) ** (-0.1e1 / 0.2e1)) * ((1 - t1149) ** (-0.1e1 / 0.2e1)) * ((-t1159 + t1160) * np.exp((1j) * (t1150 - 6 * phi2)) + (t1159 + t1160) * np.exp((1j) * (t1150 + 6 * phi2)))

        if Bindx == 105:
            t1171 = np.cos(phi)
            t1170 = t1171 ** 2
            t1173 = t1170 ** 2
            t1172 = t1171 * t1170
            t1175 = t1172 ** 2
            t1177 = t1173 ** 2
            t1180 = 23 - 207 * t1170 + 273 * t1173 + 287 * t1175 - 408 * t1177
            t1179 = -308 * t1172 + (798 * t1173 - 432 * t1175 - 102 * t1177 + 12) * t1171
            tfunc[..., c] = -(0.19e2 / 0.128e3) * np.sqrt(0.2e1) * ((-t1179 + t1180) * np.exp((6*1j) * (phi1 - phi2)) + (t1179 + t1180) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 106:
            t1191 = np.cos(phi)
            t1190 = t1191 ** 2
            t1194 = t1190 ** 2
            t1198 = t1194 ** 2
            t1200 = -51 * t1191 * t1198 - 21
            t1193 = t1191 * t1190
            t1196 = t1193 ** 2
            t1192 = 7 * phi1
            t1187 = t1191 * t1194
            t1185 = t1191 * t1196
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t1191)) * np.sqrt(0.3e1) * ((1 + t1191) ** (-0.1e1 / 0.2e1)) * ((-187 * t1198 + 140 * t1185 + 252 * t1196 - 406 * t1187 + 14 * t1194 + 252 * t1193 - 100 * t1190 - 37 * t1191 - t1200) * np.exp((1j) * (t1192 - 6 * phi2)) + (-289 * t1198 - 616 * t1185 - 504 * t1196 + 154 * t1187 + 574 * t1194 + 336 * t1193 - 16 * t1190 - 79 * t1191 + t1200) * np.exp((1j) * (t1192 + 6 * phi2)))

        if Bindx == 107:
            t1211 = np.cos(phi)
            t1210 = t1211 ** 2
            t1214 = t1210 ** 2
            t1213 = t1211 * t1210
            t1216 = t1213 ** 2
            t1218 = t1214 ** 2
            t1221 = -2 - 10 * t1210 + 42 * t1214 - 14 * t1216 - 16 * t1218
            t1220 = 14 * t1213 + (28 * t1214 - 30 * t1216 - 3 * t1218 - 9) * t1211
            t1212 = 4 * phi1
            tfunc[..., c] = -(0.19e2 / 0.128e3) * ((-t1220 + t1221) * np.exp((2*1j) * (t1212 - 3 * phi2)) + (t1220 + t1221) * np.exp((2*1j) * (t1212 + 3 * phi2))) * np.sqrt(0.51e2)

        if Bindx == 108:
            t1230 = np.cos(phi)
            t1229 = t1230 ** 2
            t1232 = t1230 * t1229
            t1234 = t1232 ** 2
            t1235 = t1230 * t1234
            t1238 = -t1230 * t1235 + 14 * t1229 - 14 * t1234 + 1
            t1237 = 6 * t1230 - 6 * t1235 + (-14 * t1229 + 14) * t1232
            t1231 = 3 * phi1
            tfunc[..., c] = (0.19e2 / 0.256e3*1j) * np.sqrt(0.2e1) * np.sqrt(0.51e2) * np.sqrt((1 - t1230)) * np.sqrt((1 + t1230)) * ((t1237 - t1238) * np.exp((3*1j) * (t1231 - 2 * phi2)) + (t1237 + t1238) * np.exp((3*1j) * (t1231 + 2 * phi2)))

        if Bindx == 109:
            t1243 = np.sin(phi)
            t1239 = t1243 ** 2
            t1241 = t1243 * t1239 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-10*1j) * phi1) * np.sqrt(0.46189e5) * t1241 ** 2

        if Bindx == 110:
            t1255 = np.cos(phi)
            t1267 = -6 * t1255
            t1254 = t1255 ** 2
            t1257 = t1255 * t1254
            t1258 = t1254 ** 2
            t1259 = t1255 * t1258
            t1260 = t1257 ** 2
            t1262 = t1258 ** 2
            t1266 = -8 * t1255 * t1260 + t1262 * t1267 - 8 * t1257 + 28 * t1259 + t1267
            t1265 = t1259 ** 2 + 13 * t1254 - 14 * t1258 - 14 * t1260 + 13 * t1262 + 1
            t1256 = 5 * phi1
            tfunc[..., c] = (0.21e2 / 0.2048e4) * np.sqrt(0.2e1) * np.sqrt(0.4845e4) * ((t1265 + t1266) * np.exp((-2*1j) * (t1256 - 3 * phi2)) + (t1265 - t1266) * np.exp((-2*1j) * (t1256 + 3 * phi2)))

        if Bindx == 111:
            t1268 = np.cos(phi)
            t1269 = t1268 ** 2
            t1271 = t1269 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * t1268 * (-10 * t1269 - 5 * t1271 - 1 + (10 * t1269 + t1271 + 5) * t1268) * ((1 + t1268) ** (0.9e1 / 0.2e1)) * np.sqrt(0.230945e6) * np.exp((-9*1j) * phi1) * ((1 - t1268) ** (-0.1e1 / 0.2e1))

        if Bindx == 112:
            t1283 = np.cos(phi)
            t1282 = t1283 ** 2
            t1286 = t1282 ** 2
            t1290 = t1286 ** 2
            t1292 = 5 * t1283 * t1290
            t1285 = t1283 * t1282
            t1288 = t1285 ** 2
            t1284 = 3 * phi1
            t1279 = t1283 * t1286
            t1277 = t1283 * t1288
            tfunc[..., c] = (0.21e2 / 0.1024e4*1j) * np.sqrt(0.2e1) * ((1 + t1283) ** (0.3e1 / 0.2e1)) * np.sqrt(0.969e3) * ((1 - t1283) ** (-0.1e1 / 0.2e1)) * ((t1292 - 37 * t1290 + 116 * t1277 - 196 * t1288 + 182 * t1279 - 70 * t1286 - 28 * t1285 + 44 * t1282 - 19 * t1283 + 3) * np.exp((-3*1j) * (t1284 - 2 * phi2)) + (t1292 + 17 * t1290 + 8 * t1277 - 32 * t1288 - 38 * t1279 + 10 * t1286 + 32 * t1285 + 8 * t1282 - 7 * t1283 - 3) * np.exp((-3*1j) * (t1284 + 2 * phi2)))

        if Bindx == 113:
            t1297 = np.sin(phi)
            t1294 = t1297 ** 2
            t1295 = t1294 ** 2
            t1293 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((-8*1j) * phi1) * np.sqrt(0.24310e5) * t1295 ** 2 * (19 * t1293 ** 2 - 1)

        if Bindx == 114:
            t1309 = np.cos(phi)
            t1308 = t1309 ** 2
            t1311 = t1309 * t1308
            t1312 = t1308 ** 2
            t1313 = t1309 * t1312
            t1314 = t1311 ** 2
            t1316 = t1312 ** 2
            t1320 = -592 * t1311 + 896 * t1313 + (80 * t1314 - 456 * t1316 + 72) * t1309
            t1319 = 95 * t1313 ** 2 + 155 * t1308 + 266 * t1312 - 1162 * t1314 + 677 * t1316 - 31
            t1310 = 4 * phi1
            tfunc[..., c] = (0.21e2 / 0.1024e4) * ((t1319 + t1320) * np.exp((-2*1j) * (t1310 - 3 * phi2)) + (t1319 - t1320) * np.exp((-2*1j) * (t1310 + 3 * phi2))) * np.sqrt(0.51e2)

        if Bindx == 115:
            t1321 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * (19 * t1321 ** 2 - 3) * t1321 * ((1 + t1321) ** (0.7e1 / 0.2e1)) * np.sqrt(0.36465e5) * np.exp((-7*1j) * phi1) * ((1 - t1321) ** (0.7e1 / 0.2e1))

        if Bindx == 116:
            t1333 = np.cos(phi)
            t1332 = t1333 ** 2
            t1336 = t1332 ** 2
            t1337 = t1333 * t1336
            t1343 = 285 * t1337 ** 2
            t1340 = t1336 ** 2
            t1335 = t1333 * t1332
            t1338 = t1335 ** 2
            t1334 = 7 * phi1
            t1327 = t1333 * t1338
            t1325 = t1333 * t1340
            tfunc[..., c] = (0.21e2 / 0.1024e4*1j) * np.sqrt(0.2e1) * np.sqrt((1 + t1333)) * np.sqrt(0.17e2) * ((1 - t1333) ** (-0.1e1 / 0.2e1)) * ((t1343 - 1482 * t1325 + 2673 * t1340 - 1112 * t1327 - 2422 * t1338 + 3108 * t1337 - 518 * t1336 - 1048 * t1335 + 537 * t1332 + 22 * t1333 - 43) * np.exp((-1*1j) * (t1334 - 6 * phi2)) + (t1343 + 912 * t1325 + 279 * t1340 - 1840 * t1327 - 1694 * t1338 + 1008 * t1337 + 1582 * t1336 - 16 * t1335 - 495 * t1332 - 64 * t1333 + 43) * np.exp((-1*1j) * (t1334 + 6 * phi2)))

        if Bindx == 117:
            t1350 = np.sin(phi)
            t1347 = t1350 ** 2
            t1348 = t1350 * t1347
            t1344 = np.cos(phi)
            t1345 = t1344 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-6*1j) * phi1) * np.sqrt(0.2145e4) * t1348 ** 2 * (3 + (-102 + 323 * t1345) * t1345)

        if Bindx == 118:
            t1362 = np.cos(phi)
            t1361 = t1362 ** 2
            t1363 = t1362 * t1361
            t1364 = t1361 ** 2
            t1365 = t1362 * t1364
            t1366 = t1363 ** 2
            t1368 = t1364 ** 2
            t1372 = -6168 * t1363 - 1932 * t1365 + (23528 * t1366 - 17442 * t1368 + 1502) * t1362
            t1371 = 4845 * t1365 ** 2 - 4503 * t1361 + 22442 * t1364 - 34902 * t1366 + 12393 * t1368 + 237
            tfunc[..., c] = (0.21e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t1371 + t1372) * np.exp((-6*1j) * (phi1 - phi2)) + (t1371 - t1372) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 119:
            t1373 = np.cos(phi)
            t1374 = t1373 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * (15 + (-170 + 323 * t1374) * t1374) * t1373 * ((1 + t1373) ** (0.5e1 / 0.2e1)) * np.sqrt(0.429e3) * np.exp((-5*1j) * phi1) * ((1 - t1373) ** (0.5e1 / 0.2e1))

        if Bindx == 120:
            t1388 = np.cos(phi)
            t1387 = t1388 ** 2
            t1391 = t1387 ** 2
            t1390 = t1388 * t1387
            t1393 = t1390 ** 2
            t1395 = t1391 ** 2
            t1392 = t1388 * t1391
            t1397 = t1392 ** 2
            t1400 = -1 + 25 * t1387 + 1110 * t1391 - 4942 * t1393 + 6715 * t1395 - 2907 * t1397
            t1399 = -2035 * t1390 + 5278 * t1392 + (-4710 * t1393 + 255 * t1395 + 969 * t1397 + 243) * t1388
            t1389 = 5 * phi1
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 + t1388) ** (-0.1e1 / 0.2e1)) * ((1 - t1388) ** (-0.1e1 / 0.2e1)) * ((t1399 + t1400) * np.exp((-1*1j) * (t1389 - 6 * phi2)) + (t1399 - t1400) * np.exp((-1*1j) * (t1389 + 6 * phi2)))

        if Bindx == 121:
            t1407 = np.sin(phi)
            t1405 = t1407 ** 2
            t1401 = np.cos(phi)
            t1402 = t1401 ** 2
            t1403 = t1402 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((-4*1j) * phi1) * np.sqrt(0.4290e4) * t1405 ** 2 * (-255 * t1403 - 1 + (323 * t1403 + 45) * t1402)

        if Bindx == 122:
            t1419 = np.cos(phi)
            t1418 = t1419 ** 2
            t1421 = t1419 * t1418
            t1422 = t1418 ** 2
            t1423 = t1419 * t1422
            t1424 = t1421 ** 2
            t1426 = t1422 ** 2
            t1430 = 0.13209e5 / 0.64e2 * t1421 - 0.6027e4 / 0.8e1 * t1423 + (0.66759e5 / 0.64e2 * t1424 - 0.61047e5 / 0.128e3 * t1426 - 0.2457e4 / 0.128e3) * t1419
            t1429 = 0.101745e6 / 0.512e3 * t1423 ** 2 - 0.50547e5 / 0.512e3 * t1418 + 0.93639e5 / 0.256e3 * t1422 - 0.84231e5 / 0.256e3 * t1424 - 0.71757e5 / 0.512e3 * t1426 + 0.1743e4 / 0.512e3
            t1420 = 2 * phi1
            tfunc[..., c] = (t1429 + t1430) * np.exp((-2*1j) * (t1420 - 3 * phi2)) + (t1429 - t1430) * np.exp((-2*1j) * (t1420 + 3 * phi2))

        if Bindx == 123:
            t1431 = np.cos(phi)
            t1432 = t1431 ** 2
            t1433 = t1432 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * (-357 * t1433 - 7 + (323 * t1433 + 105) * t1432) * t1431 * ((1 + t1431) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2145e4) * np.exp((-3*1j) * phi1) * ((1 - t1431) ** (0.3e1 / 0.2e1))

        if Bindx == 124:
            t1447 = np.cos(phi)
            t1446 = t1447 ** 2
            t1449 = t1446 ** 2
            t1448 = t1447 * t1446
            t1451 = t1448 ** 2
            t1453 = t1449 ** 2
            t1450 = t1447 * t1449
            t1455 = t1450 ** 2
            t1458 = 69 - 2277 * t1446 + 12898 * t1449 - 27962 * t1451 + 25993 * t1453 - 8721 * t1455
            t1457 = -1423 * t1448 + 662 * t1450 + (7122 * t1451 - 11373 * t1453 + 4845 * t1455 + 167) * t1447
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.sqrt(0.2e1) * ((1 + t1447) ** (-0.1e1 / 0.2e1)) * ((1 - t1447) ** (-0.1e1 / 0.2e1)) * ((t1457 + t1458) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t1457 - t1458) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 125:
            t1460 = np.cos(phi)
            t1461 = t1460 ** 2
            t1462 = t1461 ** 2
            t1459 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((-2*1j) * phi1) * np.sqrt(0.330e3) * t1459 ** 2 * (-364 * t1461 + 7 + (-6188 * t1461 + 2730 + 4199 * t1462) * t1462)

        if Bindx == 126:
            t1476 = np.cos(phi)
            t1475 = t1476 ** 2
            t1477 = t1476 * t1475
            t1478 = t1475 ** 2
            t1479 = t1476 * t1478
            t1480 = t1477 ** 2
            t1482 = t1478 ** 2
            t1486 = 4888 * t1477 - 14276 * t1479 + (15640 * t1480 - 5814 * t1482 - 438) * t1476
            t1485 = 4845 * t1479 ** 2 + 665 * t1475 - 4486 * t1478 + 11898 * t1480 - 12903 * t1482 - 19
            tfunc[..., c] = (0.21e2 / 0.1024e4) * ((t1485 + t1486) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t1485 - t1486) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.13e2)

        if Bindx == 127:
            t1487 = np.cos(phi)
            t1488 = t1487 ** 2
            t1489 = t1487 * t1488
            t1490 = t1488 ** 2
            t1496 = -7956 * t1489 ** 2 + 63 + (4914 + 4199 * t1490) * t1490
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.110e3) * np.sqrt((1 + t1487)) * t1487 * (t1496 * t1487 + 1092 * t1488 - 1092 * t1489 - t1496) * ((1 - t1487) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1509 = np.cos(phi)
            t1508 = t1509 ** 2
            t1511 = t1508 ** 2
            t1510 = t1509 * t1508
            t1513 = t1510 ** 2
            t1515 = t1511 ** 2
            t1512 = t1509 * t1511
            t1517 = t1512 ** 2
            t1520 = 9 - 333 * t1508 + 1914 * t1511 - 3834 * t1513 + 3213 * t1515 - 969 * t1517
            t1519 = 1387 * t1510 - 5110 * t1512 + (8118 * t1513 - 5899 * t1515 + 1615 * t1517 - 111) * t1509
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.sqrt(0.39e2) * ((1 + t1509) ** (-0.1e1 / 0.2e1)) * ((1 - t1509) ** (-0.1e1 / 0.2e1)) * ((t1519 + t1520) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t1519 - t1520) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 129:
            t1521 = np.cos(phi)
            t1522 = t1521 ** 2
            t1523 = t1522 ** 2
            t1525 = t1523 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t1525 - 0.315315e6 / 0.128e3 * t1523 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t1525 + 0.945945e6 / 0.128e3 * t1523 + 0.72765e5 / 0.256e3) * t1522

        if Bindx == 130:
            t1527 = np.cos(phi)
            t1528 = t1527 ** 2
            t1529 = t1528 ** 2
            t1531 = t1529 ** 2
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.2145e4) * np.sqrt(0.2e1) * (-638 * t1529 - 1071 * t1531 - 3 + (1278 * t1529 + 323 * t1531 + 111) * t1528) * np.cos((6 * phi2))

        if Bindx == 131:
            t1533 = np.cos(phi)
            t1534 = t1533 ** 2
            t1535 = t1534 ** 2
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.110e3) * np.sqrt((1 - t1533)) * np.sqrt((1 + t1533)) * t1533 * (-1092 * t1534 + 63 + (-7956 * t1534 + 4914 + 4199 * t1535) * t1535)

        if Bindx == 132:
            t1550 = np.cos(phi)
            t1549 = t1550 ** 2
            t1552 = t1549 ** 2
            t1551 = t1550 * t1549
            t1554 = t1551 ** 2
            t1556 = t1552 ** 2
            t1553 = t1550 * t1552
            t1558 = t1553 ** 2
            t1561 = 9 - 333 * t1549 + 1914 * t1552 - 3834 * t1554 + 3213 * t1556 - 969 * t1558
            t1560 = 1387 * t1551 - 5110 * t1553 + (8118 * t1554 - 5899 * t1556 + 1615 * t1558 - 111) * t1550
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.sqrt(0.39e2) * ((1 + t1550) ** (-0.1e1 / 0.2e1)) * ((1 - t1550) ** (-0.1e1 / 0.2e1)) * ((t1560 + t1561) * np.exp((1j) * (phi1 - 6 * phi2)) + (t1560 - t1561) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 133:
            t1563 = np.cos(phi)
            t1564 = t1563 ** 2
            t1565 = t1564 ** 2
            t1562 = np.sin(phi)
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((2*1j) * phi1) * np.sqrt(0.330e3) * t1562 ** 2 * (-364 * t1564 + 7 + (-6188 * t1564 + 2730 + 4199 * t1565) * t1565)

        if Bindx == 134:
            t1579 = np.cos(phi)
            t1578 = t1579 ** 2
            t1580 = t1579 * t1578
            t1581 = t1578 ** 2
            t1582 = t1579 * t1581
            t1583 = t1580 ** 2
            t1585 = t1581 ** 2
            t1589 = 4888 * t1580 - 14276 * t1582 + (15640 * t1583 - 5814 * t1585 - 438) * t1579
            t1588 = 4845 * t1582 ** 2 + 665 * t1578 - 4486 * t1581 + 11898 * t1583 - 12903 * t1585 - 19
            tfunc[..., c] = (0.21e2 / 0.1024e4) * ((t1588 + t1589) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t1588 - t1589) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.13e2)

        if Bindx == 135:
            t1590 = np.cos(phi)
            t1591 = t1590 ** 2
            t1592 = t1591 ** 2
            tfunc[..., c] = (0.21e2 / 0.128e3*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.2145e4) * ((1 - t1590) ** (0.3e1 / 0.2e1)) * ((1 + t1590) ** (0.3e1 / 0.2e1)) * t1590 * (-357 * t1592 - 7 + (323 * t1592 + 105) * t1591)

        if Bindx == 136:
            t1606 = np.cos(phi)
            t1605 = t1606 ** 2
            t1608 = t1605 ** 2
            t1607 = t1606 * t1605
            t1610 = t1607 ** 2
            t1612 = t1608 ** 2
            t1609 = t1606 * t1608
            t1614 = t1609 ** 2
            t1617 = 69 - 2277 * t1605 + 12898 * t1608 - 27962 * t1610 + 25993 * t1612 - 8721 * t1614
            t1616 = -1423 * t1607 + 662 * t1609 + (7122 * t1610 - 11373 * t1612 + 4845 * t1614 + 167) * t1606
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.sqrt(0.2e1) * ((1 + t1606) ** (-0.1e1 / 0.2e1)) * ((1 - t1606) ** (-0.1e1 / 0.2e1)) * ((t1616 + t1617) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t1616 - t1617) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 137:
            t1624 = np.sin(phi)
            t1622 = t1624 ** 2
            t1618 = np.cos(phi)
            t1619 = t1618 ** 2
            t1620 = t1619 ** 2
            tfunc[..., c] = (0.21e2 / 0.256e3) * np.exp((4*1j) * phi1) * np.sqrt(0.4290e4) * t1622 ** 2 * (-255 * t1620 - 1 + (323 * t1620 + 45) * t1619)

        if Bindx == 138:
            t1636 = np.cos(phi)
            t1635 = t1636 ** 2
            t1638 = t1636 * t1635
            t1639 = t1635 ** 2
            t1640 = t1636 * t1639
            t1641 = t1638 ** 2
            t1643 = t1639 ** 2
            t1647 = 0.13209e5 / 0.64e2 * t1638 - 0.6027e4 / 0.8e1 * t1640 + (0.66759e5 / 0.64e2 * t1641 - 0.61047e5 / 0.128e3 * t1643 - 0.2457e4 / 0.128e3) * t1636
            t1646 = 0.101745e6 / 0.512e3 * t1640 ** 2 - 0.50547e5 / 0.512e3 * t1635 + 0.93639e5 / 0.256e3 * t1639 - 0.84231e5 / 0.256e3 * t1641 - 0.71757e5 / 0.512e3 * t1643 + 0.1743e4 / 0.512e3
            t1637 = 2 * phi1
            tfunc[..., c] = (t1646 + t1647) * np.exp((2*1j) * (t1637 - 3 * phi2)) + (t1646 - t1647) * np.exp((2*1j) * (t1637 + 3 * phi2))

        if Bindx == 139:
            t1648 = np.cos(phi)
            t1649 = t1648 ** 2
            tfunc[..., c] = (-0.21e2 / 0.128e3*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.429e3) * ((1 - t1648) ** (0.5e1 / 0.2e1)) * ((1 + t1648) ** (0.5e1 / 0.2e1)) * t1648 * (15 + (-170 + 323 * t1649) * t1649)

        if Bindx == 140:
            t1663 = np.cos(phi)
            t1662 = t1663 ** 2
            t1666 = t1662 ** 2
            t1665 = t1663 * t1662
            t1668 = t1665 ** 2
            t1670 = t1666 ** 2
            t1667 = t1663 * t1666
            t1672 = t1667 ** 2
            t1675 = -1 + 25 * t1662 + 1110 * t1666 - 4942 * t1668 + 6715 * t1670 - 2907 * t1672
            t1674 = -2035 * t1665 + 5278 * t1667 + (-4710 * t1668 + 255 * t1670 + 969 * t1672 + 243) * t1663
            t1664 = 5 * phi1
            tfunc[..., c] = (0.21e2 / 0.512e3*1j) * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 + t1663) ** (-0.1e1 / 0.2e1)) * ((1 - t1663) ** (-0.1e1 / 0.2e1)) * ((t1674 + t1675) * np.exp((1j) * (t1664 - 6 * phi2)) + (t1674 - t1675) * np.exp((1j) * (t1664 + 6 * phi2)))

        if Bindx == 141:
            t1682 = np.sin(phi)
            t1679 = t1682 ** 2
            t1680 = t1682 * t1679
            t1676 = np.cos(phi)
            t1677 = t1676 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((6*1j) * phi1) * np.sqrt(0.2145e4) * t1680 ** 2 * (3 + (-102 + 323 * t1677) * t1677)

        if Bindx == 142:
            t1694 = np.cos(phi)
            t1693 = t1694 ** 2
            t1695 = t1694 * t1693
            t1696 = t1693 ** 2
            t1697 = t1694 * t1696
            t1698 = t1695 ** 2
            t1700 = t1696 ** 2
            t1704 = -6168 * t1695 - 1932 * t1697 + (23528 * t1698 - 17442 * t1700 + 1502) * t1694
            t1703 = 4845 * t1697 ** 2 - 4503 * t1693 + 22442 * t1696 - 34902 * t1698 + 12393 * t1700 + 237
            tfunc[..., c] = (0.21e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t1703 + t1704) * np.exp((6*1j) * (phi1 - phi2)) + (t1703 - t1704) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 143:
            t1705 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.256e3*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.36465e5) * ((1 - t1705) ** (0.7e1 / 0.2e1)) * ((1 + t1705) ** (0.7e1 / 0.2e1)) * t1705 * (19 * t1705 ** 2 - 3)

        if Bindx == 144:
            t1717 = np.cos(phi)
            t1716 = t1717 ** 2
            t1720 = t1716 ** 2
            t1721 = t1717 * t1720
            t1727 = 285 * t1721 ** 2
            t1724 = t1720 ** 2
            t1719 = t1717 * t1716
            t1722 = t1719 ** 2
            t1718 = 7 * phi1
            t1711 = t1717 * t1722
            t1709 = t1717 * t1724
            tfunc[..., c] = (-0.21e2 / 0.1024e4*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t1717)) * np.sqrt(0.17e2) * ((1 + t1717) ** (-0.1e1 / 0.2e1)) * ((t1727 - 912 * t1709 + 279 * t1724 + 1840 * t1711 - 1694 * t1722 - 1008 * t1721 + 1582 * t1720 + 16 * t1719 - 495 * t1716 + 64 * t1717 + 43) * np.exp((1j) * (t1718 - 6 * phi2)) + (t1727 + 1482 * t1709 + 2673 * t1724 + 1112 * t1711 - 2422 * t1722 - 3108 * t1721 - 518 * t1720 + 1048 * t1719 + 537 * t1716 - 22 * t1717 - 43) * np.exp((1j) * (t1718 + 6 * phi2)))

        if Bindx == 145:
            t1732 = np.sin(phi)
            t1729 = t1732 ** 2
            t1730 = t1729 ** 2
            t1728 = np.cos(phi)
            tfunc[..., c] = (0.21e2 / 0.512e3) * np.exp((8*1j) * phi1) * np.sqrt(0.24310e5) * t1730 ** 2 * (19 * t1728 ** 2 - 1)

        if Bindx == 146:
            t1744 = np.cos(phi)
            t1743 = t1744 ** 2
            t1746 = t1744 * t1743
            t1747 = t1743 ** 2
            t1748 = t1744 * t1747
            t1749 = t1746 ** 2
            t1751 = t1747 ** 2
            t1755 = -592 * t1746 + 896 * t1748 + (80 * t1749 - 456 * t1751 + 72) * t1744
            t1754 = 95 * t1748 ** 2 + 155 * t1743 + 266 * t1747 - 1162 * t1749 + 677 * t1751 - 31
            t1745 = 4 * phi1
            tfunc[..., c] = (0.21e2 / 0.1024e4) * ((t1754 + t1755) * np.exp((2*1j) * (t1745 - 3 * phi2)) + (t1754 - t1755) * np.exp((2*1j) * (t1745 + 3 * phi2))) * np.sqrt(0.51e2)

        if Bindx == 147:
            t1756 = np.cos(phi)
            tfunc[..., c] = (-0.21e2 / 0.256e3*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.230945e6) * ((1 - t1756) ** (0.9e1 / 0.2e1)) * ((1 + t1756) ** (0.9e1 / 0.2e1)) * t1756

        if Bindx == 148:
            t1767 = np.cos(phi)
            t1766 = t1767 ** 2
            t1770 = t1766 ** 2
            t1774 = t1770 ** 2
            t1776 = 5 * t1767 * t1774
            t1769 = t1767 * t1766
            t1772 = t1769 ** 2
            t1768 = 3 * phi1
            t1763 = t1767 * t1770
            t1761 = t1767 * t1772
            tfunc[..., c] = (0.21e2 / 0.1024e4*1j) * np.sqrt(0.2e1) * ((1 - t1767) ** (0.3e1 / 0.2e1)) * np.sqrt(0.969e3) * ((1 + t1767) ** (-0.1e1 / 0.2e1)) * ((t1776 - 17 * t1774 + 8 * t1761 + 32 * t1772 - 38 * t1763 - 10 * t1770 + 32 * t1769 - 8 * t1766 - 7 * t1767 + 3) * np.exp((3*1j) * (t1768 - 2 * phi2)) + (t1776 + 37 * t1774 + 116 * t1761 + 196 * t1772 + 182 * t1763 + 70 * t1770 - 28 * t1769 - 44 * t1766 - 19 * t1767 - 3) * np.exp((3*1j) * (t1768 + 2 * phi2)))

        if Bindx == 149:
            t1781 = np.sin(phi)
            t1777 = t1781 ** 2
            t1779 = t1781 * t1777 ** 2
            tfunc[..., c] = -(0.21e2 / 0.512e3) * np.exp((10*1j) * phi1) * np.sqrt(0.46189e5) * t1779 ** 2

        if Bindx == 150:
            t1793 = np.cos(phi)
            t1805 = -6 * t1793
            t1792 = t1793 ** 2
            t1795 = t1793 * t1792
            t1796 = t1792 ** 2
            t1797 = t1793 * t1796
            t1798 = t1795 ** 2
            t1800 = t1796 ** 2
            t1804 = -8 * t1793 * t1798 + t1800 * t1805 - 8 * t1795 + 28 * t1797 + t1805
            t1803 = t1797 ** 2 + 13 * t1792 - 14 * t1796 - 14 * t1798 + 13 * t1800 + 1
            t1794 = 5 * phi1
            tfunc[..., c] = (0.21e2 / 0.2048e4) * np.sqrt(0.4845e4) * np.sqrt(0.2e1) * ((t1803 + t1804) * np.exp((2*1j) * (t1794 - 3 * phi2)) + (t1803 - t1804) * np.exp((2*1j) * (t1794 + 3 * phi2)))

        if Bindx == 151:
            t1817 = np.cos(phi)
            t1829 = -6 * t1817
            t1816 = t1817 ** 2
            t1819 = t1817 * t1816
            t1820 = t1816 ** 2
            t1821 = t1817 * t1820
            t1822 = t1819 ** 2
            t1824 = t1820 ** 2
            t1828 = -8 * t1817 * t1822 + t1824 * t1829 - 8 * t1819 + 28 * t1821 + t1829
            t1827 = -t1821 ** 2 - 13 * t1816 + 14 * t1820 + 14 * t1822 - 13 * t1824 - 1
            t1818 = 11 * phi1
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.sqrt(0.1463e4) * np.sqrt((1 - t1817)) * np.sqrt((1 + t1817)) * ((-t1827 + t1828) * np.exp((-1*1j) * (t1818 - 6 * phi2)) + (t1827 + t1828) * np.exp((-1*1j) * (t1818 + 6 * phi2)))

        if Bindx == 152:
            t1842 = np.cos(phi)
            t1841 = t1842 ** 2
            t1845 = t1841 ** 2
            t1844 = t1842 * t1841
            t1847 = t1844 ** 2
            t1849 = t1845 ** 2
            t1846 = t1842 * t1845
            t1851 = t1846 ** 2
            t1854 = -6 - 12 * t1841 + 172 * t1845 - 224 * t1847 + 10 * t1849 + 60 * t1851
            t1853 = -95 * t1844 - 14 * t1846 + (202 * t1847 - 107 * t1849 - 11 * t1851 + 25) * t1842
            t1843 = 5 * phi1
            tfunc[..., c] = -(0.69e2 / 0.2048e4) * np.sqrt(0.2e1) * np.sqrt(0.133e3) * ((t1853 + t1854) * np.exp((-2*1j) * (t1843 - 3 * phi2)) + (-t1853 + t1854) * np.exp((-2*1j) * (t1843 + 3 * phi2)))

        if Bindx == 153:
            t1866 = np.cos(phi)
            t1865 = t1866 ** 2
            t1869 = t1865 ** 2
            t1870 = t1866 * t1869
            t1876 = -231 * t1870 ** 2 - 61
            t1873 = t1869 ** 2
            t1868 = t1866 * t1865
            t1871 = t1868 ** 2
            t1867 = 3 * phi1
            t1860 = t1866 * t1871
            t1858 = t1866 * t1873
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.sqrt(0.57e2) * ((1 + t1866) ** (0.3e1 / 0.2e1)) * ((-1596 * t1858 + 4513 * t1873 - 6368 * t1860 + 3766 * t1871 + 1288 * t1870 - 3374 * t1869 + 1792 * t1868 - 77 * t1865 - 236 * t1866 - t1876) * np.exp((-3*1j) * (t1867 - 2 * phi2)) + (-672 * t1858 + 23 * t1873 + 1688 * t1860 + 1058 * t1871 - 1352 * t1870 - 1322 * t1869 + 328 * t1868 + 533 * t1865 + 8 * t1866 + t1876) * np.exp((-3*1j) * (t1867 + 2 * phi2))) * ((1 - t1866) ** (-0.1e1 / 0.2e1))

        if Bindx == 154:
            t1889 = np.cos(phi)
            t1888 = t1889 ** 2
            t1892 = t1888 ** 2
            t1891 = t1889 * t1888
            t1894 = t1891 ** 2
            t1896 = t1892 ** 2
            t1893 = t1889 * t1892
            t1898 = t1893 ** 2
            t1901 = 8 - 128 * t1888 + 448 * t1892 - 336 * t1894 - 328 * t1896 + 336 * t1898
            t1900 = 63 * t1891 - 574 * t1893 + (958 * t1894 - 383 * t1896 - 77 * t1898 + 13) * t1889
            t1890 = 4 * phi1
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * ((t1900 + t1901) * np.exp((-2*1j) * (t1890 - 3 * phi2)) + (-t1900 + t1901) * np.exp((-2*1j) * (t1890 + 3 * phi2))) * np.sqrt(0.95e2)

        if Bindx == 155:
            t1914 = np.cos(phi)
            t1913 = t1914 ** 2
            t1917 = t1913 ** 2
            t1918 = t1914 * t1917
            t1923 = t1918 ** 2
            t1925 = -1463 * t1914 * t1923 + 35
            t1921 = t1917 ** 2
            t1916 = t1914 * t1913
            t1919 = t1916 ** 2
            t1915 = 7 * phi1
            t1908 = t1914 * t1919
            t1906 = t1914 * t1921
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.sqrt(0.5e1) * np.sqrt((1 + t1914)) * ((7049 * t1923 - 10697 * t1906 - 209 * t1921 + 16058 * t1908 - 12390 * t1919 - 3794 * t1918 + 7742 * t1917 - 1491 * t1916 - 1203 * t1913 + 363 * t1914 + t1925) * np.exp((-1*1j) * (t1915 - 6 * phi2)) + (4123 * t1923 - 475 * t1906 - 10431 * t1921 - 5418 * t1908 + 9086 * t1919 + 7098 * t1918 - 3150 * t1917 - 3101 * t1916 + 407 * t1913 + 433 * t1914 - t1925) * np.exp((-1*1j) * (t1915 + 6 * phi2))) * ((1 - t1914) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t1938 = np.cos(phi)
            t1937 = t1938 ** 2
            t1940 = t1937 ** 2
            t1939 = t1938 * t1937
            t1942 = t1939 ** 2
            t1944 = t1940 ** 2
            t1941 = t1938 * t1940
            t1946 = t1941 ** 2
            t1949 = -94 + 2820 * t1937 - 420 * t1940 - 40096 * t1942 + 80370 * t1944 - 43092 * t1946
            t1948 = 21805 * t1939 - 69846 * t1941 + (79650 * t1942 - 16815 * t1944 - 13167 * t1946 - 2139) * t1938
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.sqrt(0.2e1) * ((-t1948 + t1949) * np.exp((-6*1j) * (phi1 - phi2)) + (t1948 + t1949) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 157:
            t1963 = np.cos(phi)
            t1962 = t1963 ** 2
            t1965 = t1963 * t1962
            t1966 = t1962 ** 2
            t1967 = t1963 * t1966
            t1968 = t1965 ** 2
            t1970 = t1966 ** 2
            t1972 = t1967 ** 2
            t1976 = 2090 * t1965 - 12852 * t1967 + (31412 * t1968 - 32490 * t1970 + 11970 * t1972 - 130) * t1963
            t1975 = -1908 * t1962 + 10745 * t1966 + 13815 * t1970 + 2964 * t1972 + 53 + (-21280 - 4389 * t1968) * t1968
            t1964 = 5 * phi1
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.sqrt(0.51e2) * ((t1975 + t1976) * np.exp((-1*1j) * (t1964 - 6 * phi2)) + (-t1975 + t1976) * np.exp((-1*1j) * (t1964 + 6 * phi2))) * ((1 + t1963) ** (-0.1e1 / 0.2e1)) * ((1 - t1963) ** (-0.1e1 / 0.2e1))

        if Bindx == 158:
            t1989 = np.cos(phi)
            t1988 = t1989 ** 2
            t1992 = t1988 ** 2
            t1991 = t1989 * t1988
            t1994 = t1991 ** 2
            t1996 = t1992 ** 2
            t1993 = t1989 * t1992
            t1998 = t1993 ** 2
            t2001 = -4 + 160 * t1988 - 1120 * t1992 + 3016 * t1994 - 3420 * t1996 + 1368 * t1998
            t2000 = 345 * t1991 - 874 * t1993 + (330 * t1994 + 855 * t1996 - 627 * t1998 - 29) * t1989
            t1990 = 2 * phi1
            tfunc[..., c] = -(0.23e2 / 0.512e3) * ((t2000 + t2001) * np.exp((-2*1j) * (t1990 - 3 * phi2)) + (-t2000 + t2001) * np.exp((-2*1j) * (t1990 + 3 * phi2))) * np.sqrt(0.357e3)

        if Bindx == 159:
            t2015 = np.cos(phi)
            t2014 = t2015 ** 2
            t2016 = t2015 * t2014
            t2017 = t2014 ** 2
            t2018 = t2015 * t2017
            t2019 = t2016 ** 2
            t2021 = t2017 ** 2
            t2023 = t2018 ** 2
            t2027 = 1502 * t2016 - 6460 * t2018 + (11900 * t2019 - 9918 * t2021 + 3078 * t2023 - 102) * t2015
            t2026 = -44 * t2014 + 13 * t2017 - 4917 * t2021 + 5244 * t2023 + 1 + (1584 - 1881 * t2019) * t2019
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.sqrt(0.595e3) * np.sqrt(0.2e1) * ((1 + t2015) ** (-0.1e1 / 0.2e1)) * ((1 - t2015) ** (-0.1e1 / 0.2e1)) * ((t2026 + t2027) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (-t2026 + t2027) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 160:
            t2040 = np.cos(phi)
            t2039 = t2040 ** 2
            t2042 = t2039 ** 2
            t2041 = t2040 * t2039
            t2044 = t2041 ** 2
            t2046 = t2042 ** 2
            t2043 = t2040 * t2042
            t2048 = t2043 ** 2
            t2051 = -6 + 276 * t2039 - 1940 * t2042 + 4672 * t2044 - 4598 * t2046 + 1596 * t2048
            t2050 = -459 * t2041 + 2218 * t2043 + (-4638 * t2044 + 4313 * t2046 - 1463 * t2048 + 29) * t2040
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * ((t2050 + t2051) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (-t2050 + t2051) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.85e2)

        if Bindx == 161:
            t2065 = np.cos(phi)
            t2064 = t2065 ** 2
            t2066 = t2065 * t2064
            t2067 = t2064 ** 2
            t2068 = t2065 * t2067
            t2069 = t2066 ** 2
            t2071 = t2067 ** 2
            t2073 = t2068 ** 2
            t2077 = 470 * t2066 - 2028 * t2068 + (3564 * t2069 - 2774 * t2071 + 798 * t2073 - 30) * t2065
            t2076 = 240 * t2064 - 1925 * t2067 - 8319 * t2071 + 5624 * t2073 - 5 + (5848 - 1463 * t2069) * t2069
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.sqrt(0.221e3) * np.sqrt(0.2e1) * ((1 + t2065) ** (-0.1e1 / 0.2e1)) * ((1 - t2065) ** (-0.1e1 / 0.2e1)) * ((t2076 + t2077) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t2076 + t2077) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 162:
            t2084 = np.sin(phi)
            t2081 = t2084 ** 2
            t2082 = t2084 * t2081
            t2078 = np.cos(phi)
            t2079 = t2078 ** 2
            tfunc[..., c] = (-0.23e2 / 0.512e3*1j) * t2078 * t2082 ** 2 * (15 + (-190 + 399 * t2079) * t2079) * np.sin((6 * phi2)) * np.sqrt(0.7293e4) * np.sqrt(0.2e1)

        if Bindx == 163:
            t2098 = np.cos(phi)
            t2097 = t2098 ** 2
            t2099 = t2098 * t2097
            t2100 = t2097 ** 2
            t2101 = t2098 * t2100
            t2102 = t2099 ** 2
            t2104 = t2100 ** 2
            t2106 = t2101 ** 2
            t2110 = -470 * t2099 + 2028 * t2101 + (-3564 * t2102 + 2774 * t2104 - 798 * t2106 + 30) * t2098
            t2109 = 240 * t2097 - 1925 * t2100 - 8319 * t2104 + 5624 * t2106 - 5 + (5848 - 1463 * t2102) * t2102
            tfunc[..., c] = (-0.69e2 / 0.2048e4*1j) * np.sqrt(0.221e3) * np.sqrt(0.2e1) * ((1 + t2098) ** (-0.1e1 / 0.2e1)) * ((1 - t2098) ** (-0.1e1 / 0.2e1)) * ((-t2109 + t2110) * np.exp((1j) * (phi1 - 6 * phi2)) + (t2109 + t2110) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 164:
            t2123 = np.cos(phi)
            t2122 = t2123 ** 2
            t2125 = t2122 ** 2
            t2124 = t2123 * t2122
            t2127 = t2124 ** 2
            t2129 = t2125 ** 2
            t2126 = t2123 * t2125
            t2131 = t2126 ** 2
            t2134 = 6 - 276 * t2122 + 1940 * t2125 - 4672 * t2127 + 4598 * t2129 - 1596 * t2131
            t2133 = -459 * t2124 + 2218 * t2126 + (-4638 * t2127 + 4313 * t2129 - 1463 * t2131 + 29) * t2123
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * ((-t2133 + t2134) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t2133 + t2134) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.85e2)

        if Bindx == 165:
            t2148 = np.cos(phi)
            t2147 = t2148 ** 2
            t2149 = t2148 * t2147
            t2150 = t2147 ** 2
            t2151 = t2148 * t2150
            t2152 = t2149 ** 2
            t2154 = t2150 ** 2
            t2156 = t2151 ** 2
            t2160 = -1502 * t2149 + 6460 * t2151 + (-11900 * t2152 + 9918 * t2154 - 3078 * t2156 + 102) * t2148
            t2159 = -44 * t2147 + 13 * t2150 - 4917 * t2154 + 5244 * t2156 + 1 + (1584 - 1881 * t2152) * t2152
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * np.sqrt(0.595e3) * np.sqrt(0.2e1) * ((1 + t2148) ** (-0.1e1 / 0.2e1)) * ((1 - t2148) ** (-0.1e1 / 0.2e1)) * ((-t2159 + t2160) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t2159 + t2160) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 166:
            t2173 = np.cos(phi)
            t2172 = t2173 ** 2
            t2176 = t2172 ** 2
            t2175 = t2173 * t2172
            t2178 = t2175 ** 2
            t2180 = t2176 ** 2
            t2177 = t2173 * t2176
            t2182 = t2177 ** 2
            t2185 = 4 - 160 * t2172 + 1120 * t2176 - 3016 * t2178 + 3420 * t2180 - 1368 * t2182
            t2184 = 345 * t2175 - 874 * t2177 + (330 * t2178 + 855 * t2180 - 627 * t2182 - 29) * t2173
            t2174 = 2 * phi1
            tfunc[..., c] = -(0.23e2 / 0.512e3) * ((-t2184 + t2185) * np.exp((2*1j) * (t2174 - 3 * phi2)) + (t2184 + t2185) * np.exp((2*1j) * (t2174 + 3 * phi2))) * np.sqrt(0.357e3)

        if Bindx == 167:
            t2199 = np.cos(phi)
            t2198 = t2199 ** 2
            t2201 = t2199 * t2198
            t2202 = t2198 ** 2
            t2203 = t2199 * t2202
            t2204 = t2201 ** 2
            t2206 = t2202 ** 2
            t2208 = t2203 ** 2
            t2212 = 2090 * t2201 - 12852 * t2203 + (31412 * t2204 - 32490 * t2206 + 11970 * t2208 - 130) * t2199
            t2211 = -1908 * t2198 + 10745 * t2202 + 13815 * t2206 + 2964 * t2208 + 53 + (-21280 - 4389 * t2204) * t2204
            t2200 = 5 * phi1
            tfunc[..., c] = (0.23e2 / 0.2048e4*1j) * np.sqrt(0.51e2) * ((t2211 + t2212) * np.exp((1j) * (t2200 - 6 * phi2)) + (-t2211 + t2212) * np.exp((1j) * (t2200 + 6 * phi2))) * ((1 + t2199) ** (-0.1e1 / 0.2e1)) * ((1 - t2199) ** (-0.1e1 / 0.2e1))

        if Bindx == 168:
            t2225 = np.cos(phi)
            t2224 = t2225 ** 2
            t2227 = t2224 ** 2
            t2226 = t2225 * t2224
            t2229 = t2226 ** 2
            t2231 = t2227 ** 2
            t2228 = t2225 * t2227
            t2233 = t2228 ** 2
            t2236 = 94 - 2820 * t2224 + 420 * t2227 + 40096 * t2229 - 80370 * t2231 + 43092 * t2233
            t2235 = 21805 * t2226 - 69846 * t2228 + (79650 * t2229 - 16815 * t2231 - 13167 * t2233 - 2139) * t2225
            tfunc[..., c] = (0.23e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t2235 + t2236) * np.exp((6*1j) * (phi1 - phi2)) + (-t2235 + t2236) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 169:
            t2249 = np.cos(phi)
            t2248 = t2249 ** 2
            t2252 = t2248 ** 2
            t2253 = t2249 * t2252
            t2258 = t2253 ** 2
            t2260 = -1463 * t2249 * t2258 - 35
            t2256 = t2252 ** 2
            t2251 = t2249 * t2248
            t2254 = t2251 ** 2
            t2250 = 7 * phi1
            t2243 = t2249 * t2254
            t2241 = t2249 * t2256
            tfunc[..., c] = (0.69e2 / 0.2048e4*1j) * np.sqrt((1 - t2249)) * np.sqrt(0.5e1) * ((1 + t2249) ** (-0.1e1 / 0.2e1)) * ((-4123 * t2258 - 475 * t2241 + 10431 * t2256 - 5418 * t2243 - 9086 * t2254 + 7098 * t2253 + 3150 * t2252 - 3101 * t2251 - 407 * t2248 + 433 * t2249 - t2260) * np.exp((1j) * (t2250 - 6 * phi2)) + (-7049 * t2258 - 10697 * t2241 + 209 * t2256 + 16058 * t2243 + 12390 * t2254 - 3794 * t2253 - 7742 * t2252 - 1491 * t2251 + 1203 * t2248 + 363 * t2249 + t2260) * np.exp((1j) * (t2250 + 6 * phi2)))

        if Bindx == 170:
            t2273 = np.cos(phi)
            t2272 = t2273 ** 2
            t2276 = t2272 ** 2
            t2275 = t2273 * t2272
            t2278 = t2275 ** 2
            t2280 = t2276 ** 2
            t2277 = t2273 * t2276
            t2282 = t2277 ** 2
            t2285 = -8 + 128 * t2272 - 448 * t2276 + 336 * t2278 + 328 * t2280 - 336 * t2282
            t2284 = 63 * t2275 - 574 * t2277 + (958 * t2278 - 383 * t2280 - 77 * t2282 + 13) * t2273
            t2274 = 4 * phi1
            tfunc[..., c] = -(0.69e2 / 0.1024e4) * ((-t2284 + t2285) * np.exp((2*1j) * (t2274 - 3 * phi2)) + (t2284 + t2285) * np.exp((2*1j) * (t2274 + 3 * phi2))) * np.sqrt(0.95e2)

        if Bindx == 171:
            t2297 = np.cos(phi)
            t2296 = t2297 ** 2
            t2300 = t2296 ** 2
            t2301 = t2297 * t2300
            t2307 = -231 * t2301 ** 2 - 61
            t2304 = t2300 ** 2
            t2299 = t2297 * t2296
            t2302 = t2299 ** 2
            t2298 = 3 * phi1
            t2291 = t2297 * t2302
            t2289 = t2297 * t2304
            tfunc[..., c] = (-0.23e2 / 0.2048e4*1j) * ((1 - t2297) ** (0.3e1 / 0.2e1)) * np.sqrt(0.57e2) * ((1 + t2297) ** (-0.1e1 / 0.2e1)) * ((-672 * t2289 - 23 * t2304 + 1688 * t2291 - 1058 * t2302 - 1352 * t2301 + 1322 * t2300 + 328 * t2299 - 533 * t2296 + 8 * t2297 - t2307) * np.exp((3*1j) * (t2298 - 2 * phi2)) + (-1596 * t2289 - 4513 * t2304 - 6368 * t2291 - 3766 * t2302 + 1288 * t2301 + 3374 * t2300 + 1792 * t2299 + 77 * t2296 - 236 * t2297 + t2307) * np.exp((3*1j) * (t2298 + 2 * phi2)))

        if Bindx == 172:
            t2320 = np.cos(phi)
            t2319 = t2320 ** 2
            t2323 = t2319 ** 2
            t2322 = t2320 * t2319
            t2325 = t2322 ** 2
            t2327 = t2323 ** 2
            t2324 = t2320 * t2323
            t2329 = t2324 ** 2
            t2332 = 6 + 12 * t2319 - 172 * t2323 + 224 * t2325 - 10 * t2327 - 60 * t2329
            t2331 = -95 * t2322 - 14 * t2324 + (202 * t2325 - 107 * t2327 - 11 * t2329 + 25) * t2320
            t2321 = 5 * phi1
            tfunc[..., c] = -(0.69e2 / 0.2048e4) * np.sqrt(0.133e3) * np.sqrt(0.2e1) * ((-t2331 + t2332) * np.exp((2*1j) * (t2321 - 3 * phi2)) + (t2331 + t2332) * np.exp((2*1j) * (t2321 + 3 * phi2)))

        if Bindx == 173:
            t2344 = np.cos(phi)
            t2356 = -6 * t2344
            t2343 = t2344 ** 2
            t2346 = t2344 * t2343
            t2347 = t2343 ** 2
            t2348 = t2344 * t2347
            t2349 = t2346 ** 2
            t2351 = t2347 ** 2
            t2355 = -8 * t2344 * t2349 + t2351 * t2356 - 8 * t2346 + 28 * t2348 + t2356
            t2354 = -t2348 ** 2 - 13 * t2343 + 14 * t2347 + 14 * t2349 - 13 * t2351 - 1
            t2345 = 11 * phi1
            tfunc[..., c] = (0.69e2 / 0.2048e4*1j) * np.sqrt(0.1463e4) * np.sqrt((1 - t2344)) * np.sqrt((1 + t2344)) * ((-t2354 + t2355) * np.exp((1j) * (t2345 - 6 * phi2)) + (t2354 + t2355) * np.exp((1j) * (t2345 + 6 * phi2)))

        if Bindx == 174:
            t2361 = np.sin(phi)
            t2357 = t2361 ** 2
            t2358 = t2361 * t2357
            t2359 = t2358 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-12*1j) * phi1) * np.sqrt(0.676039e6) * t2359 ** 2

        if Bindx == 175:
            t2374 = np.cos(phi)
            t2373 = t2374 ** 2
            t2377 = t2373 ** 2
            t2380 = t2377 ** 2
            t2378 = t2374 * t2377
            t2382 = t2378 ** 2
            t2383 = t2374 * t2382
            t2386 = t2374 * t2383 - 12 * t2373 + 27 * t2377 - 27 * t2380 + 12 * t2382 - 1
            t2385 = -6 * t2383 + 2 * (18 * t2373 - 18) * t2378 + 2 * (t2373 - t2380 + 3) * t2374
            t2375 = 2 * phi1
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.sqrt(0.33649e5) * np.sqrt(0.2e1) * ((t2385 + t2386) * np.exp((-6*1j) * (t2375 - phi2)) + (-t2385 + t2386) * np.exp((-6*1j) * (t2375 + phi2)))

        if Bindx == 176:
            t2400 = np.cos(phi)
            t2413 = -12 * t2400
            t2399 = t2400 ** 2
            t2401 = t2400 * t2399
            t2402 = t2399 ** 2
            t2403 = t2400 * t2402
            t2404 = t2401 ** 2
            t2406 = t2402 ** 2
            t2408 = t2403 ** 2
            t2412 = t2408 * t2413 - 220 * t2401 - 792 * t2403 + t2413 + (-792 * t2404 - 220 * t2406) * t2400
            t2411 = 66 * t2399 + 495 * t2402 + 495 * t2406 + 66 * t2408 + 1 + (924 + t2404) * t2404
            tfunc[..., c] = (0.25e2 / 0.8192e4) * np.sqrt(0.2e1) * ((t2411 + t2412) * np.exp((-12*1j) * (phi1 - phi2)) + (t2411 - t2412) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 177:
            t2414 = np.cos(phi)
            t2420 = -6 * t2414
            t2415 = t2414 ** 2
            t2416 = t2414 * t2415
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * t2414 * (t2420 + 1 + (-20 + t2416) * t2416 + (15 + (t2420 + 15) * t2415) * t2415) * ((1 + t2414) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4056234e7) * np.exp((-11*1j) * phi1) * ((1 - t2414) ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t2432 = np.cos(phi)
            t2431 = t2432 ** 2
            t2435 = t2431 ** 2
            t2436 = t2432 * t2435
            t2443 = 2 * t2436 ** 2
            t2442 = 1 + t2432
            t2439 = t2435 ** 2
            t2434 = t2432 * t2431
            t2437 = t2434 ** 2
            t2433 = 11 * phi1
            t2426 = t2432 * t2437
            t2424 = t2432 * t2439
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * (t2442 ** (0.5e1 / 0.2e1)) * np.sqrt(0.100947e6) * ((1 - t2432) ** (-0.1e1 / 0.2e1)) * ((t2443 - 17 * t2424 + 63 * t2439 - 132 * t2426 + 168 * t2437 - 126 * t2436 + 42 * t2435 + 12 * t2434 - 18 * t2431 + 7 * t2432 - 1) * np.exp((-1*1j) * (t2433 - 6 * phi2)) + (t2443 + 5 * t2424 - 3 * t2439 - 16 * t2426 - 4 * t2437 + 18 * t2436 + 10 * t2435 - 8 * t2434 - 6 * t2431 + t2442) * np.exp((-1*1j) * (t2433 + 6 * phi2)))

        if Bindx == 179:
            t2456 = np.cos(phi)
            t2455 = t2456 ** 2
            t2459 = t2455 ** 2
            t2458 = t2456 * t2455
            t2461 = t2458 ** 2
            t2463 = t2459 ** 2
            t2460 = t2456 * t2459
            t2465 = t2460 ** 2
            t2468 = -1 - 55 * t2455 - 330 * t2459 - 462 * t2461 - 165 * t2463 - 11 * t2465
            t2467 = 165 * t2458 + 462 * t2460 + (330 * t2461 + 55 * t2463 + t2465 + 11) * t2456
            t2457 = 11 * phi1
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.3e1) * np.sqrt((1 - t2456)) * np.sqrt((1 + t2456)) * ((t2467 + t2468) * np.exp((-1*1j) * (t2457 - 12 * phi2)) + (t2467 - t2468) * np.exp((-1*1j) * (t2457 + 12 * phi2)))

        if Bindx == 180:
            t2474 = np.sin(phi)
            t2470 = t2474 ** 2
            t2472 = t2474 * t2470 ** 2
            t2469 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-10*1j) * phi1) * np.sqrt(0.88179e5) * t2472 ** 2 * (23 * t2469 ** 2 - 1)

        if Bindx == 181:
            t2488 = np.cos(phi)
            t2487 = t2488 ** 2
            t2490 = t2488 * t2487
            t2491 = t2487 ** 2
            t2492 = t2488 * t2491
            t2493 = t2490 ** 2
            t2495 = t2491 ** 2
            t2497 = t2492 ** 2
            t2501 = 121 * t2490 - 366 * t2492 + (282 * t2493 + 85 * t2495 - 115 * t2497 - 7) * t2488
            t2500 = -50 * t2487 + 45 * t2491 - 441 * t2495 + 166 * t2497 + 5 + (252 + 23 * t2493) * t2493
            t2489 = 5 * phi1
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.sqrt(0.2e1) * np.sqrt(0.4389e4) * ((t2500 + t2501) * np.exp((-2*1j) * (t2489 - 3 * phi2)) + (t2500 - t2501) * np.exp((-2*1j) * (t2489 + 3 * phi2)))

        if Bindx == 182:
            t2514 = np.cos(phi)
            t2513 = t2514 ** 2
            t2517 = t2513 ** 2
            t2520 = t2517 ** 2
            t2518 = t2514 * t2517
            t2522 = t2518 ** 2
            t2523 = t2514 * t2522
            t2526 = t2514 * t2523 - 44 * t2513 - 165 * t2517 + 165 * t2520 + 44 * t2522 - 1
            t2525 = -10 * t2523 + (-132 * t2513 + 132) * t2518 + (110 * t2513 - 110 * t2520 + 10) * t2514
            t2515 = 5 * phi1
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.69e2) * ((t2525 + t2526) * np.exp((-2*1j) * (t2515 - 6 * phi2)) + (-t2525 + t2526) * np.exp((-2*1j) * (t2515 + 6 * phi2)))

        if Bindx == 183:
            t2527 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * (23 * t2527 ** 2 - 3) * t2527 * ((1 + t2527) ** (0.9e1 / 0.2e1)) * np.sqrt(0.646646e6) * np.exp((-9*1j) * phi1) * ((1 - t2527) ** (0.9e1 / 0.2e1))

        if Bindx == 184:
            t2540 = np.cos(phi)
            t2539 = t2540 ** 2
            t2543 = t2539 ** 2
            t2544 = t2540 * t2543
            t2549 = t2544 ** 2
            t2551 = 506 * t2540 * t2549
            t2547 = t2543 ** 2
            t2542 = t2540 * t2539
            t2545 = t2542 ** 2
            t2541 = 3 * phi1
            t2534 = t2540 * t2545
            t2532 = t2540 * t2547
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * ((1 + t2540) ** (0.3e1 / 0.2e1)) * np.sqrt(0.133e3) * ((1 - t2540) ** (-0.1e1 / 0.2e1)) * ((t2551 - 3289 * t2549 + 8426 * t2532 - 9687 * t2547 + 1860 * t2534 + 7350 * t2545 - 7308 * t2544 + 1314 * t2543 + 1602 * t2542 - 845 * t2539 + 34 * t2540 + 37) * np.exp((-3*1j) * (t2541 - 2 * phi2)) + (t2551 + 1265 * t2549 - 682 * t2532 - 3777 * t2547 - 852 * t2534 + 4098 * t2545 + 1908 * t2544 - 1962 * t2543 - 1062 * t2542 + 413 * t2539 + 182 * t2540 - 37) * np.exp((-3*1j) * (t2541 + 2 * phi2)))

        if Bindx == 185:
            t2564 = np.cos(phi)
            t2563 = t2564 ** 2
            t2567 = t2563 ** 2
            t2566 = t2564 * t2563
            t2569 = t2566 ** 2
            t2571 = t2567 ** 2
            t2568 = t2564 * t2567
            t2573 = t2568 ** 2
            t2576 = 1 + 35 * t2563 + 90 * t2567 - 42 * t2569 - 75 * t2571 - 9 * t2573
            t2575 = -75 * t2566 - 42 * t2568 + (90 * t2569 + 35 * t2571 + t2573 - 9) * t2564
            t2565 = 3 * phi1
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.253e3) * np.sqrt((1 - t2564)) * np.sqrt((1 + t2564)) * ((t2575 + t2576) * np.exp((-3*1j) * (t2565 - 4 * phi2)) + (t2575 - t2576) * np.exp((-3*1j) * (t2565 + 4 * phi2)))

        if Bindx == 186:
            t2583 = np.sin(phi)
            t2580 = t2583 ** 2
            t2581 = t2580 ** 2
            t2577 = np.cos(phi)
            t2578 = t2577 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((-8*1j) * phi1) * np.sqrt(0.277134e6) * t2581 ** 2 * (1 + (-42 + 161 * t2578) * t2578)

        if Bindx == 187:
            t2597 = np.cos(phi)
            t2596 = t2597 ** 2
            t2599 = t2597 * t2596
            t2600 = t2596 ** 2
            t2601 = t2597 * t2600
            t2602 = t2599 ** 2
            t2604 = t2600 ** 2
            t2606 = t2601 ** 2
            t2610 = 3332 * t2599 - 6888 * t2601 + (-408 * t2602 + 11452 * t2604 - 7084 * t2606 - 404) * t2597
            t2609 = 532 * t2596 - 5607 * t2600 - 20337 * t2604 + 5852 * t2606 - 19 + (17808 + 1771 * t2602) * t2602
            t2598 = 4 * phi1
            tfunc[..., c] = (0.25e2 / 0.2048e4) * ((t2609 + t2610) * np.exp((-2*1j) * (t2598 - 3 * phi2)) + (t2609 - t2610) * np.exp((-2*1j) * (t2598 + 3 * phi2))) * np.sqrt(0.57e2)

        if Bindx == 188:
            t2624 = np.cos(phi)
            t2623 = t2624 ** 2
            t2626 = t2624 * t2623
            t2627 = t2623 ** 2
            t2628 = t2624 * t2627
            t2629 = t2626 ** 2
            t2631 = t2627 ** 2
            t2633 = t2628 ** 2
            t2637 = -40 * t2626 + 48 * t2628 + 8 * (6 * t2629 - 5 * t2631 - t2633 - 1) * t2624
            t2636 = 26 * t2623 + 15 * t2627 + 15 * t2631 + 26 * t2633 + 1 + (-84 + t2629) * t2629
            t2625 = 2 * phi1
            tfunc[..., c] = (0.25e2 / 0.4096e4) * ((t2636 + t2637) * np.exp((-4*1j) * (t2625 - 3 * phi2)) + (t2636 - t2637) * np.exp((-4*1j) * (t2625 + 3 * phi2))) * np.sqrt(0.5313e4)

        if Bindx == 189:
            t2638 = np.cos(phi)
            t2639 = t2638 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * (5 + (-70 + 161 * t2639) * t2639) * t2638 * ((1 + t2638) ** (0.7e1 / 0.2e1)) * np.sqrt(0.277134e6) * np.exp((-7*1j) * phi1) * ((1 - t2638) ** (0.7e1 / 0.2e1))

        if Bindx == 190:
            t2654 = np.cos(phi)
            t2653 = t2654 ** 2
            t2656 = t2654 * t2653
            t2659 = t2656 ** 2
            t2666 = 3542 * t2659 ** 2
            t2657 = t2653 ** 2
            t2658 = t2654 * t2657
            t2663 = t2658 ** 2
            t2661 = t2657 ** 2
            t2655 = 7 * phi1
            t2648 = t2654 * t2659
            t2646 = t2654 * t2661
            t2644 = t2654 * t2663
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.sqrt((1 + t2654)) * np.sqrt(0.57e2) * ((1 - t2654) ** (-0.1e1 / 0.2e1)) * ((t2666 - 15939 * t2644 + 20097 * t2663 + 10675 * t2646 - 42195 * t2661 + 19074 * t2648 + 21882 * t2659 - 19866 * t2658 - 1680 * t2657 + 5425 * t2656 - 651 * t2653 - 393 * t2654 + 29) * np.exp((-1*1j) * (t2655 - 6 * phi2)) + (t2666 + 8855 * t2644 - 4697 * t2663 - 26075 * t2646 - 5445 * t2661 + 28566 * t2648 + 12390 * t2659 - 14406 * t2658 - 7140 * t2657 + 3395 * t2656 + 1379 * t2653 - 335 * t2654 - 29) * np.exp((-1*1j) * (t2655 + 6 * phi2)))

        if Bindx == 191:
            t2679 = np.cos(phi)
            t2678 = t2679 ** 2
            t2682 = t2678 ** 2
            t2681 = t2679 * t2678
            t2684 = t2681 ** 2
            t2686 = t2682 ** 2
            t2683 = t2679 * t2682
            t2688 = t2683 ** 2
            t2691 = -1 - 19 * t2678 + 6 * t2682 + 42 * t2684 - 21 * t2686 - 7 * t2688
            t2690 = 21 * t2681 - 42 * t2683 + (-6 * t2684 + 19 * t2686 + t2688 + 7) * t2679
            t2680 = 7 * phi1
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.5313e4) * np.sqrt((1 - t2679)) * np.sqrt((1 + t2679)) * ((t2690 + t2691) * np.exp((-1*1j) * (t2680 - 12 * phi2)) + (t2690 - t2691) * np.exp((-1*1j) * (t2680 + 12 * phi2)))

        if Bindx == 192:
            t2699 = np.sin(phi)
            t2696 = t2699 ** 2
            t2697 = t2699 * t2696
            t2692 = np.cos(phi)
            t2693 = t2692 ** 2
            t2694 = t2693 ** 2
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-6*1j) * phi1) * np.sqrt(0.2431e4) * t2697 ** 2 * (-1995 * t2694 - 5 + (3059 * t2694 + 285) * t2693)

        if Bindx == 193:
            t2713 = np.cos(phi)
            t2712 = t2713 ** 2
            t2715 = t2712 ** 2
            t2714 = t2713 * t2712
            t2717 = t2714 ** 2
            t2719 = t2715 ** 2
            t2716 = t2713 * t2715
            t2721 = t2716 ** 2
            t2725 = 11298 * t2712 - 75285 * t2715 - 158175 * t2719 + 8778 * t2721 - 269 + (180516 + 33649 * t2717) * t2717
            t2724 = -2695 * t2714 + 49266 * t2716 + (-178182 * t2717 + 232085 * t2719 - 100947 * t2721 - 39) * t2713
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t2724 + t2725) * np.exp((-6*1j) * (phi1 - phi2)) + (-t2724 + t2725) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 194:
            t2738 = np.cos(phi)
            t2737 = t2738 ** 2
            t2740 = t2737 ** 2
            t2743 = t2740 ** 2
            t2741 = t2738 * t2740
            t2745 = t2741 ** 2
            t2746 = t2738 * t2745
            t2749 = t2738 * t2746 - 12 * t2737 + 27 * t2740 - 27 * t2743 + 12 * t2745 - 1
            t2748 = -6 * t2746 + 2 * (18 * t2737 - 18) * t2741 + 2 * (t2737 - t2743 + 3) * t2738
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.sqrt(0.33649e5) * np.sqrt(0.2e1) * ((t2748 + t2749) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (-t2748 + t2749) * np.exp((-6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 195:
            t2750 = np.cos(phi)
            t2751 = t2750 ** 2
            t2752 = t2751 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * (-399 * t2752 - 5 + (437 * t2752 + 95) * t2751) * t2750 * ((1 + t2750) ** (0.5e1 / 0.2e1)) * np.sqrt(0.34034e5) * np.exp((-5*1j) * phi1) * ((1 - t2750) ** (0.5e1 / 0.2e1))

        if Bindx == 196:
            t2768 = np.cos(phi)
            t2767 = t2768 ** 2
            t2771 = t2767 ** 2
            t2770 = t2768 * t2767
            t2773 = t2770 ** 2
            t2775 = t2771 ** 2
            t2772 = t2768 * t2771
            t2777 = t2772 ** 2
            t2779 = t2773 ** 2
            t2782 = -25 + 1200 * t2767 - 11465 * t2771 + 45592 * t2773 - 84987 * t2775 + 73720 * t2777 - 24035 * t2779
            t2781 = 5958 * t2770 - 24450 * t2772 + (37500 * t2773 - 14440 * t2775 - 13794 * t2777 + 9614 * t2779 - 388) * t2768
            t2769 = 5 * phi1
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.sqrt(0.7e1) * ((1 + t2768) ** (-0.1e1 / 0.2e1)) * ((1 - t2768) ** (-0.1e1 / 0.2e1)) * ((t2781 + t2782) * np.exp((-1*1j) * (t2769 - 6 * phi2)) + (t2781 - t2782) * np.exp((-1*1j) * (t2769 + 6 * phi2)))

        if Bindx == 197:
            t2795 = np.cos(phi)
            t2794 = t2795 ** 2
            t2798 = t2794 ** 2
            t2797 = t2795 * t2794
            t2800 = t2797 ** 2
            t2802 = t2798 ** 2
            t2799 = t2795 * t2798
            t2804 = t2799 ** 2
            t2807 = 1 + 7 * t2794 - 22 * t2798 + 14 * t2800 + 5 * t2802 - 5 * t2804
            t2806 = 5 * t2797 + 14 * t2799 + (-22 * t2800 + 7 * t2802 + t2804 - 5) * t2795
            t2796 = 5 * phi1
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.sqrt(0.4807e4) * np.sqrt((1 - t2795)) * np.sqrt((1 + t2795)) * ((t2806 + t2807) * np.exp((-1*1j) * (t2796 - 12 * phi2)) + (t2806 - t2807) * np.exp((-1*1j) * (t2796 + 12 * phi2)))

        if Bindx == 198:
            t2815 = np.sin(phi)
            t2813 = t2815 ** 2
            t2808 = np.cos(phi)
            t2809 = t2808 ** 2
            t2810 = t2809 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((-4*1j) * phi1) * np.sqrt(0.1001e4) * t2813 ** 2 * (-340 * t2809 + 5 + (-9044 * t2809 + 3230 + 7429 * t2810) * t2810)

        if Bindx == 199:
            t2829 = np.cos(phi)
            t2828 = t2829 ** 2
            t2831 = t2829 * t2828
            t2832 = t2828 ** 2
            t2833 = t2829 * t2832
            t2834 = t2831 ** 2
            t2836 = t2832 ** 2
            t2838 = t2833 ** 2
            t2842 = -2470 * t2831 + 12588 * t2833 + (-27436 * t2834 + 26790 * t2836 - 9614 * t2838 + 142) * t2829
            t2841 = 364 * t2828 - 2435 * t2832 + 2755 * t2836 - 9196 * t2838 - 7 + (3712 + 4807 * t2834) * t2834
            t2830 = 2 * phi1
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.sqrt(0.119e3) * np.sqrt(0.2e1) * ((t2841 + t2842) * np.exp((-2*1j) * (t2830 - 3 * phi2)) + (t2841 - t2842) * np.exp((-2*1j) * (t2830 + 3 * phi2)))

        if Bindx == 200:
            t2856 = np.cos(phi)
            t2855 = t2856 ** 2
            t2857 = t2856 * t2855
            t2858 = t2855 ** 2
            t2859 = t2856 * t2858
            t2860 = t2857 ** 2
            t2862 = t2858 ** 2
            t2864 = t2859 ** 2
            t2868 = 12 * t2857 - 8 * t2859 + 4 * (-2 * t2860 + 3 * t2862 - t2864 - 1) * t2856
            t2867 = 2 * t2855 - 17 * t2858 - 17 * t2862 + 2 * t2864 + 1 + (28 + t2860) * t2860
            tfunc[..., c] = (0.75e2 / 0.8192e4) * np.sqrt(0.81719e5) * np.sqrt(0.2e1) * ((t2867 + t2868) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t2867 - t2868) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 201:
            t2869 = np.cos(phi)
            t2870 = t2869 ** 2
            t2871 = t2870 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * (-1020 * t2870 + 45 + (-11628 * t2870 + 5814 + 7429 * t2871) * t2871) * t2869 * ((1 + t2869) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1001e4) * np.exp((-3*1j) * phi1) * ((1 - t2869) ** (0.3e1 / 0.2e1))

        if Bindx == 202:
            t2888 = np.cos(phi)
            t2887 = t2888 ** 2
            t2890 = t2887 ** 2
            t2889 = t2888 * t2887
            t2892 = t2889 ** 2
            t2894 = t2890 ** 2
            t2891 = t2888 * t2890
            t2896 = t2891 ** 2
            t2898 = t2892 ** 2
            t2901 = -23 + 1288 * t2887 - 11855 * t2890 + 40952 * t2892 - 65797 * t2894 + 49856 * t2896 - 14421 * t2898
            t2900 = -362 * t2889 + 4222 * t2891 + (-18692 * t2892 + 35720 * t2894 - 30514 * t2896 + 9614 * t2898 + 12) * t2888
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.sqrt(0.119e3) * np.sqrt(0.2e1) * ((1 + t2888) ** (-0.1e1 / 0.2e1)) * ((1 - t2888) ** (-0.1e1 / 0.2e1)) * ((t2900 + t2901) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t2900 - t2901) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 203:
            t2914 = np.cos(phi)
            t2913 = t2914 ** 2
            t2916 = t2913 ** 2
            t2915 = t2914 * t2913
            t2918 = t2915 ** 2
            t2920 = t2916 ** 2
            t2917 = t2914 * t2916
            t2922 = t2917 ** 2
            t2925 = -1 + t2913 + 6 * t2916 - 14 * t2918 + 11 * t2920 - 3 * t2922
            t2924 = -11 * t2915 + 14 * t2917 + (-6 * t2918 - t2920 + t2922 + 3) * t2914
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * np.sqrt((1 - t2914)) * np.sqrt((1 + t2914)) * ((t2924 + t2925) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t2924 - t2925) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 204:
            t2927 = np.cos(phi)
            t2928 = t2927 ** 2
            t2929 = t2928 ** 2
            t2931 = t2929 ** 2
            t2926 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((-2*1j) * phi1) * np.sqrt(0.6006e4) * t2926 ** 2 * (-2550 * t2929 - 14535 * t2931 - 3 + (9690 * t2929 + 7429 * t2931 + 225) * t2928)

        if Bindx == 205:
            t2946 = np.cos(phi)
            t2945 = t2946 ** 2
            t2947 = t2946 * t2945
            t2948 = t2945 ** 2
            t2949 = t2946 * t2948
            t2950 = t2947 ** 2
            t2952 = t2948 ** 2
            t2954 = t2949 ** 2
            t2958 = -1595 * t2947 + 8122 * t2949 + (-16606 * t2950 + 14801 * t2952 - 4807 * t2954 + 85) * t2946
            t2957 = -290 * t2945 + 2845 * t2948 + 18791 * t2952 - 15466 * t2954 + 5 + (-10692 + 4807 * t2950) * t2950
            tfunc[..., c] = (0.25e2 / 0.1024e4) * ((t2957 + t2958) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t2957 - t2958) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.357e3)

        if Bindx == 206:
            t2971 = np.cos(phi)
            t2970 = t2971 ** 2
            t2973 = t2970 ** 2
            t2983 = 5 * t2973 ** 2
            t2974 = t2971 * t2973
            t2978 = t2974 ** 2
            t2979 = t2971 * t2978
            t2982 = t2971 * t2979 + 4 * t2970 - 5 * t2973 - 4 * t2978 + t2983 - 1
            t2981 = 2 * t2971 * t2983 + 2 * t2971 + 20 * t2974 - 2 * t2979 + 2 * (-5 * t2971 - 10 * t2974) * t2970
            tfunc[..., c] = (0.25e2 / 0.2048e4) * ((t2981 + t2982) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (-t2981 + t2982) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.245157e6)

        if Bindx == 207:
            t2984 = np.cos(phi)
            t2985 = t2984 ** 2
            t2986 = t2984 * t2985
            t2987 = t2985 ** 2
            t2988 = t2984 * t2987
            t2995 = 106590 * t2986 ** 2 - 124355 * t2987 ** 2 + 52003 * t2988 ** 2 - 231
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.39e2) * np.sqrt((1 + t2984)) * t2984 * (t2995 * t2984 - 5775 * t2985 + 5775 * t2986 + 39270 * t2987 - 39270 * t2988 - t2995) * ((1 - t2984) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t3010 = np.cos(phi)
            t3009 = t3010 ** 2
            t3012 = t3009 ** 2
            t3011 = t3010 * t3009
            t3014 = t3011 ** 2
            t3016 = t3012 ** 2
            t3013 = t3010 * t3012
            t3018 = t3013 ** 2
            t3020 = t3014 ** 2
            t3023 = -5 + 300 * t3009 - 2865 * t3012 + 9904 * t3014 - 15447 * t3016 + 11172 * t3018 - 3059 * t3020
            t3022 = -2010 * t3011 + 11814 * t3013 + (-30500 * t3014 + 39216 * t3016 - 24738 * t3018 + 6118 * t3020 + 100) * t3010
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.sqrt(0.561e3) * np.sqrt(0.2e1) * ((1 + t3010) ** (-0.1e1 / 0.2e1)) * ((1 - t3010) ** (-0.1e1 / 0.2e1)) * ((t3022 + t3023) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t3022 - t3023) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 209:
            t3036 = np.cos(phi)
            t3035 = t3036 ** 2
            t3037 = t3036 * t3035
            t3038 = t3035 ** 2
            t3039 = t3036 * t3038
            t3048 = 10 * t3037 ** 2 - 5 * t3038 ** 2 + t3039 ** 2 - 1
            t3047 = -5 * t3035 + 10 * t3038 - t3048
            t3046 = t3036 * t3048 + 5 * t3037 - 10 * t3039
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.156009e6) * np.sqrt(0.2e1) * np.sqrt((1 - t3036)) * np.sqrt((1 + t3036)) * ((t3046 + t3047) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (t3046 - t3047) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 210:
            t3049 = np.cos(phi)
            t3050 = t3049 ** 2
            t3051 = t3050 ** 2
            t3053 = t3051 ** 2
            t3052 = t3050 * t3051
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t3053 + 0.5630625e7 / 0.1024e4 * t3051 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t3052) * t3052 + (-0.24249225e8 / 0.512e3 * t3053 - 0.225225e6 / 0.512e3) * t3050

        if Bindx == 211:
            t3056 = np.cos(phi)
            t3057 = t3056 ** 2
            t3058 = t3057 ** 2
            t3060 = t3058 ** 2
            t3059 = t3057 * t3058
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.2431e4) * np.sqrt(0.2e1) * (2865 * t3058 + 15447 * t3060 + 5 + (-9904 + 3059 * t3059) * t3059 + (-11172 * t3060 - 300) * t3057) * np.cos((6 * phi2))

        if Bindx == 212:
            t3063 = np.cos(phi)
            t3064 = t3063 ** 2
            t3070 = -6 * t3064
            t3065 = t3064 ** 2
            t3066 = t3064 * t3065
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.676039e6) * np.sqrt(0.2e1) * np.cos((12 * phi2)) * (t3070 + 1 + (-20 + t3066) * t3066 + (15 + (t3070 + 15) * t3065) * t3065)

        if Bindx == 213:
            t3071 = np.cos(phi)
            t3072 = t3071 ** 2
            t3073 = t3072 ** 2
            t3075 = t3073 ** 2
            tfunc[..., c] = (-0.25e2 / 0.512e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.39e2) * np.sqrt((1 - t3071)) * np.sqrt((1 + t3071)) * t3071 * (-39270 * t3073 - 124355 * t3075 - 231 + (106590 * t3073 + 52003 * t3075 + 5775) * t3072)

        if Bindx == 214:
            t3091 = np.cos(phi)
            t3090 = t3091 ** 2
            t3093 = t3090 ** 2
            t3092 = t3091 * t3090
            t3095 = t3092 ** 2
            t3097 = t3093 ** 2
            t3094 = t3091 * t3093
            t3099 = t3094 ** 2
            t3101 = t3095 ** 2
            t3104 = -5 + 300 * t3090 - 2865 * t3093 + 9904 * t3095 - 15447 * t3097 + 11172 * t3099 - 3059 * t3101
            t3103 = -2010 * t3092 + 11814 * t3094 + (-30500 * t3095 + 39216 * t3097 - 24738 * t3099 + 6118 * t3101 + 100) * t3091
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.sqrt(0.561e3) * np.sqrt(0.2e1) * ((1 + t3091) ** (-0.1e1 / 0.2e1)) * ((1 - t3091) ** (-0.1e1 / 0.2e1)) * ((t3103 + t3104) * np.exp((1j) * (phi1 - 6 * phi2)) + (t3103 - t3104) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 215:
            t3117 = np.cos(phi)
            t3116 = t3117 ** 2
            t3118 = t3117 * t3116
            t3119 = t3116 ** 2
            t3120 = t3117 * t3119
            t3129 = 10 * t3118 ** 2 - 5 * t3119 ** 2 + t3120 ** 2 - 1
            t3128 = -5 * t3116 + 10 * t3119 - t3129
            t3127 = t3129 * t3117 + 5 * t3118 - 10 * t3120
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.156009e6) * np.sqrt(0.2e1) * np.sqrt((1 - t3117)) * np.sqrt((1 + t3117)) * ((t3127 + t3128) * np.exp((1j) * (phi1 - 12 * phi2)) + (t3127 - t3128) * np.exp((1j) * (phi1 + 12 * phi2)))

        if Bindx == 216:
            t3131 = np.cos(phi)
            t3132 = t3131 ** 2
            t3133 = t3132 ** 2
            t3135 = t3133 ** 2
            t3130 = np.sin(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((2*1j) * phi1) * np.sqrt(0.6006e4) * t3130 ** 2 * (-2550 * t3133 - 14535 * t3135 - 3 + (9690 * t3133 + 7429 * t3135 + 225) * t3132)

        if Bindx == 217:
            t3150 = np.cos(phi)
            t3149 = t3150 ** 2
            t3151 = t3150 * t3149
            t3152 = t3149 ** 2
            t3153 = t3150 * t3152
            t3154 = t3151 ** 2
            t3156 = t3152 ** 2
            t3158 = t3153 ** 2
            t3162 = -1595 * t3151 + 8122 * t3153 + (-16606 * t3154 + 14801 * t3156 - 4807 * t3158 + 85) * t3150
            t3161 = -290 * t3149 + 2845 * t3152 + 18791 * t3156 - 15466 * t3158 + 5 + (-10692 + 4807 * t3154) * t3154
            tfunc[..., c] = (0.25e2 / 0.1024e4) * ((t3161 + t3162) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t3161 - t3162) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.357e3)

        if Bindx == 218:
            t3175 = np.cos(phi)
            t3174 = t3175 ** 2
            t3177 = t3174 ** 2
            t3187 = 5 * t3177 ** 2
            t3178 = t3175 * t3177
            t3182 = t3178 ** 2
            t3183 = t3175 * t3182
            t3186 = t3175 * t3183 + 4 * t3174 - 5 * t3177 - 4 * t3182 + t3187 - 1
            t3185 = 2 * t3175 * t3187 + 2 * t3175 + 20 * t3178 - 2 * t3183 + 2 * (-5 * t3175 - 10 * t3178) * t3174
            tfunc[..., c] = (0.25e2 / 0.2048e4) * ((t3185 + t3186) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (-t3185 + t3186) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.245157e6)

        if Bindx == 219:
            t3188 = np.cos(phi)
            t3189 = t3188 ** 2
            t3190 = t3189 ** 2
            tfunc[..., c] = (0.25e2 / 0.512e3*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.1001e4) * ((1 - t3188) ** (0.3e1 / 0.2e1)) * ((1 + t3188) ** (0.3e1 / 0.2e1)) * t3188 * (-1020 * t3189 + 45 + (-11628 * t3189 + 5814 + 7429 * t3190) * t3190)

        if Bindx == 220:
            t3207 = np.cos(phi)
            t3206 = t3207 ** 2
            t3209 = t3206 ** 2
            t3208 = t3207 * t3206
            t3211 = t3208 ** 2
            t3213 = t3209 ** 2
            t3210 = t3207 * t3209
            t3215 = t3210 ** 2
            t3217 = t3211 ** 2
            t3220 = -23 + 1288 * t3206 - 11855 * t3209 + 40952 * t3211 - 65797 * t3213 + 49856 * t3215 - 14421 * t3217
            t3219 = -362 * t3208 + 4222 * t3210 + (-18692 * t3211 + 35720 * t3213 - 30514 * t3215 + 9614 * t3217 + 12) * t3207
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * np.sqrt(0.119e3) * np.sqrt(0.2e1) * ((1 + t3207) ** (-0.1e1 / 0.2e1)) * ((1 - t3207) ** (-0.1e1 / 0.2e1)) * ((t3219 + t3220) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t3219 - t3220) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 221:
            t3233 = np.cos(phi)
            t3232 = t3233 ** 2
            t3235 = t3232 ** 2
            t3234 = t3233 * t3232
            t3237 = t3234 ** 2
            t3239 = t3235 ** 2
            t3236 = t3233 * t3235
            t3241 = t3236 ** 2
            t3244 = -1 + t3232 + 6 * t3235 - 14 * t3237 + 11 * t3239 - 3 * t3241
            t3243 = -11 * t3234 + 14 * t3236 + (-6 * t3237 - t3239 + t3241 + 3) * t3233
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.2e1) * np.sqrt(0.81719e5) * np.sqrt((1 - t3233)) * np.sqrt((1 + t3233)) * ((t3243 + t3244) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t3243 - t3244) * np.exp((3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 222:
            t3252 = np.sin(phi)
            t3250 = t3252 ** 2
            t3245 = np.cos(phi)
            t3246 = t3245 ** 2
            t3247 = t3246 ** 2
            tfunc[..., c] = (0.75e2 / 0.2048e4) * np.exp((4*1j) * phi1) * np.sqrt(0.1001e4) * t3250 ** 2 * (-340 * t3246 + 5 + (-9044 * t3246 + 3230 + 7429 * t3247) * t3247)

        if Bindx == 223:
            t3266 = np.cos(phi)
            t3265 = t3266 ** 2
            t3268 = t3266 * t3265
            t3269 = t3265 ** 2
            t3270 = t3266 * t3269
            t3271 = t3268 ** 2
            t3273 = t3269 ** 2
            t3275 = t3270 ** 2
            t3279 = -2470 * t3268 + 12588 * t3270 + (-27436 * t3271 + 26790 * t3273 - 9614 * t3275 + 142) * t3266
            t3278 = 364 * t3265 - 2435 * t3269 + 2755 * t3273 - 9196 * t3275 - 7 + (3712 + 4807 * t3271) * t3271
            t3267 = 2 * phi1
            tfunc[..., c] = (0.75e2 / 0.4096e4) * np.sqrt(0.119e3) * np.sqrt(0.2e1) * ((t3278 + t3279) * np.exp((2*1j) * (t3267 - 3 * phi2)) + (t3278 - t3279) * np.exp((2*1j) * (t3267 + 3 * phi2)))

        if Bindx == 224:
            t3293 = np.cos(phi)
            t3292 = t3293 ** 2
            t3294 = t3293 * t3292
            t3295 = t3292 ** 2
            t3296 = t3293 * t3295
            t3297 = t3294 ** 2
            t3299 = t3295 ** 2
            t3301 = t3296 ** 2
            t3305 = 12 * t3294 - 8 * t3296 + 4 * (-2 * t3297 + 3 * t3299 - t3301 - 1) * t3293
            t3304 = 2 * t3292 - 17 * t3295 - 17 * t3299 + 2 * t3301 + 1 + (28 + t3297) * t3297
            tfunc[..., c] = (0.75e2 / 0.8192e4) * np.sqrt(0.81719e5) * np.sqrt(0.2e1) * ((t3304 + t3305) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t3304 - t3305) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 225:
            t3306 = np.cos(phi)
            t3307 = t3306 ** 2
            t3308 = t3307 ** 2
            tfunc[..., c] = (-0.75e2 / 0.1024e4*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.34034e5) * ((1 - t3306) ** (0.5e1 / 0.2e1)) * ((1 + t3306) ** (0.5e1 / 0.2e1)) * t3306 * (-399 * t3308 - 5 + (437 * t3308 + 95) * t3307)

        if Bindx == 226:
            t3324 = np.cos(phi)
            t3323 = t3324 ** 2
            t3327 = t3323 ** 2
            t3326 = t3324 * t3323
            t3329 = t3326 ** 2
            t3331 = t3327 ** 2
            t3328 = t3324 * t3327
            t3333 = t3328 ** 2
            t3335 = t3329 ** 2
            t3338 = -25 + 1200 * t3323 - 11465 * t3327 + 45592 * t3329 - 84987 * t3331 + 73720 * t3333 - 24035 * t3335
            t3337 = 5958 * t3326 - 24450 * t3328 + (37500 * t3329 - 14440 * t3331 - 13794 * t3333 + 9614 * t3335 - 388) * t3324
            t3325 = 5 * phi1
            tfunc[..., c] = (0.75e2 / 0.2048e4*1j) * np.sqrt(0.7e1) * ((1 + t3324) ** (-0.1e1 / 0.2e1)) * ((1 - t3324) ** (-0.1e1 / 0.2e1)) * ((t3337 + t3338) * np.exp((1j) * (t3325 - 6 * phi2)) + (t3337 - t3338) * np.exp((1j) * (t3325 + 6 * phi2)))

        if Bindx == 227:
            t3351 = np.cos(phi)
            t3350 = t3351 ** 2
            t3354 = t3350 ** 2
            t3353 = t3351 * t3350
            t3356 = t3353 ** 2
            t3358 = t3354 ** 2
            t3355 = t3351 * t3354
            t3360 = t3355 ** 2
            t3363 = 1 + 7 * t3350 - 22 * t3354 + 14 * t3356 + 5 * t3358 - 5 * t3360
            t3362 = 5 * t3353 + 14 * t3355 + (-22 * t3356 + 7 * t3358 + t3360 - 5) * t3351
            t3352 = 5 * phi1
            tfunc[..., c] = (-0.75e2 / 0.2048e4*1j) * np.sqrt(0.4807e4) * np.sqrt((1 - t3351)) * np.sqrt((1 + t3351)) * ((t3362 + t3363) * np.exp((1j) * (t3352 - 12 * phi2)) + (t3362 - t3363) * np.exp((1j) * (t3352 + 12 * phi2)))

        if Bindx == 228:
            t3371 = np.sin(phi)
            t3368 = t3371 ** 2
            t3369 = t3371 * t3368
            t3364 = np.cos(phi)
            t3365 = t3364 ** 2
            t3366 = t3365 ** 2
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((6*1j) * phi1) * np.sqrt(0.2431e4) * t3369 ** 2 * (-1995 * t3366 - 5 + (3059 * t3366 + 285) * t3365)

        if Bindx == 229:
            t3385 = np.cos(phi)
            t3384 = t3385 ** 2
            t3387 = t3384 ** 2
            t3386 = t3385 * t3384
            t3389 = t3386 ** 2
            t3391 = t3387 ** 2
            t3388 = t3385 * t3387
            t3393 = t3388 ** 2
            t3397 = 11298 * t3384 - 75285 * t3387 - 158175 * t3391 + 8778 * t3393 - 269 + (180516 + 33649 * t3389) * t3389
            t3396 = -2695 * t3386 + 49266 * t3388 + (-178182 * t3389 + 232085 * t3391 - 100947 * t3393 - 39) * t3385
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t3396 + t3397) * np.exp((6*1j) * (phi1 - phi2)) + (-t3396 + t3397) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 230:
            t3410 = np.cos(phi)
            t3409 = t3410 ** 2
            t3412 = t3409 ** 2
            t3415 = t3412 ** 2
            t3413 = t3410 * t3412
            t3417 = t3413 ** 2
            t3418 = t3410 * t3417
            t3421 = t3410 * t3418 - 12 * t3409 + 27 * t3412 - 27 * t3415 + 12 * t3417 - 1
            t3420 = -6 * t3418 + 2 * (18 * t3409 - 18) * t3413 + 2 * (t3409 - t3415 + 3) * t3410
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.sqrt(0.33649e5) * np.sqrt(0.2e1) * ((t3420 + t3421) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (-t3420 + t3421) * np.exp((6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 231:
            t3422 = np.cos(phi)
            t3423 = t3422 ** 2
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.277134e6) * ((1 - t3422) ** (0.7e1 / 0.2e1)) * ((1 + t3422) ** (0.7e1 / 0.2e1)) * t3422 * (5 + (-70 + 161 * t3423) * t3423)

        if Bindx == 232:
            t3438 = np.cos(phi)
            t3437 = t3438 ** 2
            t3440 = t3438 * t3437
            t3443 = t3440 ** 2
            t3450 = 3542 * t3443 ** 2
            t3441 = t3437 ** 2
            t3442 = t3438 * t3441
            t3447 = t3442 ** 2
            t3445 = t3441 ** 2
            t3439 = 7 * phi1
            t3432 = t3438 * t3443
            t3430 = t3438 * t3445
            t3428 = t3438 * t3447
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt((1 - t3438)) * np.sqrt(0.57e2) * ((1 + t3438) ** (-0.1e1 / 0.2e1)) * ((t3450 - 8855 * t3428 - 4697 * t3447 + 26075 * t3430 - 5445 * t3445 - 28566 * t3432 + 12390 * t3443 + 14406 * t3442 - 7140 * t3441 - 3395 * t3440 + 1379 * t3437 + 335 * t3438 - 29) * np.exp((1j) * (t3439 - 6 * phi2)) + (t3450 + 15939 * t3428 + 20097 * t3447 - 10675 * t3430 - 42195 * t3445 - 19074 * t3432 + 21882 * t3443 + 19866 * t3442 - 1680 * t3441 - 5425 * t3440 - 651 * t3437 + 393 * t3438 + 29) * np.exp((1j) * (t3439 + 6 * phi2)))

        if Bindx == 233:
            t3463 = np.cos(phi)
            t3462 = t3463 ** 2
            t3466 = t3462 ** 2
            t3465 = t3463 * t3462
            t3468 = t3465 ** 2
            t3470 = t3466 ** 2
            t3467 = t3463 * t3466
            t3472 = t3467 ** 2
            t3475 = -1 - 19 * t3462 + 6 * t3466 + 42 * t3468 - 21 * t3470 - 7 * t3472
            t3474 = 21 * t3465 - 42 * t3467 + (-6 * t3468 + 19 * t3470 + t3472 + 7) * t3463
            t3464 = 7 * phi1
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.5313e4) * np.sqrt((1 - t3463)) * np.sqrt((1 + t3463)) * ((t3474 + t3475) * np.exp((1j) * (t3464 - 12 * phi2)) + (t3474 - t3475) * np.exp((1j) * (t3464 + 12 * phi2)))

        if Bindx == 234:
            t3482 = np.sin(phi)
            t3479 = t3482 ** 2
            t3480 = t3479 ** 2
            t3476 = np.cos(phi)
            t3477 = t3476 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((8*1j) * phi1) * np.sqrt(0.277134e6) * t3480 ** 2 * (1 + (-42 + 161 * t3477) * t3477)

        if Bindx == 235:
            t3496 = np.cos(phi)
            t3495 = t3496 ** 2
            t3498 = t3496 * t3495
            t3499 = t3495 ** 2
            t3500 = t3496 * t3499
            t3501 = t3498 ** 2
            t3503 = t3499 ** 2
            t3505 = t3500 ** 2
            t3509 = 3332 * t3498 - 6888 * t3500 + (-408 * t3501 + 11452 * t3503 - 7084 * t3505 - 404) * t3496
            t3508 = 532 * t3495 - 5607 * t3499 - 20337 * t3503 + 5852 * t3505 - 19 + (17808 + 1771 * t3501) * t3501
            t3497 = 4 * phi1
            tfunc[..., c] = (0.25e2 / 0.2048e4) * ((t3508 + t3509) * np.exp((2*1j) * (t3497 - 3 * phi2)) + (t3508 - t3509) * np.exp((2*1j) * (t3497 + 3 * phi2))) * np.sqrt(0.57e2)

        if Bindx == 236:
            t3523 = np.cos(phi)
            t3522 = t3523 ** 2
            t3525 = t3523 * t3522
            t3526 = t3522 ** 2
            t3527 = t3523 * t3526
            t3528 = t3525 ** 2
            t3530 = t3526 ** 2
            t3532 = t3527 ** 2
            t3536 = -40 * t3525 + 48 * t3527 + 8 * (6 * t3528 - 5 * t3530 - t3532 - 1) * t3523
            t3535 = 26 * t3522 + 15 * t3526 + 15 * t3530 + 26 * t3532 + 1 + (-84 + t3528) * t3528
            t3524 = 2 * phi1
            tfunc[..., c] = (0.25e2 / 0.4096e4) * ((t3535 + t3536) * np.exp((4*1j) * (t3524 - 3 * phi2)) + (t3535 - t3536) * np.exp((4*1j) * (t3524 + 3 * phi2))) * np.sqrt(0.5313e4)

        if Bindx == 237:
            t3537 = np.cos(phi)
            tfunc[..., c] = (-0.25e2 / 0.1024e4*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.646646e6) * ((1 - t3537) ** (0.9e1 / 0.2e1)) * ((1 + t3537) ** (0.9e1 / 0.2e1)) * t3537 * (23 * t3537 ** 2 - 3)

        if Bindx == 238:
            t3550 = np.cos(phi)
            t3549 = t3550 ** 2
            t3553 = t3549 ** 2
            t3554 = t3550 * t3553
            t3559 = t3554 ** 2
            t3561 = 506 * t3550 * t3559
            t3557 = t3553 ** 2
            t3552 = t3550 * t3549
            t3555 = t3552 ** 2
            t3551 = 3 * phi1
            t3544 = t3550 * t3555
            t3542 = t3550 * t3557
            tfunc[..., c] = (0.25e2 / 0.2048e4*1j) * ((1 - t3550) ** (0.3e1 / 0.2e1)) * np.sqrt(0.133e3) * ((1 + t3550) ** (-0.1e1 / 0.2e1)) * ((t3561 - 1265 * t3559 - 682 * t3542 + 3777 * t3557 - 852 * t3544 - 4098 * t3555 + 1908 * t3554 + 1962 * t3553 - 1062 * t3552 - 413 * t3549 + 182 * t3550 + 37) * np.exp((3*1j) * (t3551 - 2 * phi2)) + (t3561 + 3289 * t3559 + 8426 * t3542 + 9687 * t3557 + 1860 * t3544 - 7350 * t3555 - 7308 * t3554 - 1314 * t3553 + 1602 * t3552 + 845 * t3549 + 34 * t3550 - 37) * np.exp((3*1j) * (t3551 + 2 * phi2)))

        if Bindx == 239:
            t3574 = np.cos(phi)
            t3573 = t3574 ** 2
            t3577 = t3573 ** 2
            t3576 = t3574 * t3573
            t3579 = t3576 ** 2
            t3581 = t3577 ** 2
            t3578 = t3574 * t3577
            t3583 = t3578 ** 2
            t3586 = 1 + 35 * t3573 + 90 * t3577 - 42 * t3579 - 75 * t3581 - 9 * t3583
            t3585 = -75 * t3576 - 42 * t3578 + (90 * t3579 + 35 * t3581 + t3583 - 9) * t3574
            t3575 = 3 * phi1
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.253e3) * np.sqrt((1 - t3574)) * np.sqrt((1 + t3574)) * ((t3585 + t3586) * np.exp((3*1j) * (t3575 - 4 * phi2)) + (t3585 - t3586) * np.exp((3*1j) * (t3575 + 4 * phi2)))

        if Bindx == 240:
            t3592 = np.sin(phi)
            t3588 = t3592 ** 2
            t3590 = t3592 * t3588 ** 2
            t3587 = np.cos(phi)
            tfunc[..., c] = -(0.25e2 / 0.1024e4) * np.exp((10*1j) * phi1) * np.sqrt(0.88179e5) * t3590 ** 2 * (23 * t3587 ** 2 - 1)

        if Bindx == 241:
            t3606 = np.cos(phi)
            t3605 = t3606 ** 2
            t3608 = t3606 * t3605
            t3609 = t3605 ** 2
            t3610 = t3606 * t3609
            t3611 = t3608 ** 2
            t3613 = t3609 ** 2
            t3615 = t3610 ** 2
            t3619 = 121 * t3608 - 366 * t3610 + (282 * t3611 + 85 * t3613 - 115 * t3615 - 7) * t3606
            t3618 = -50 * t3605 + 45 * t3609 - 441 * t3613 + 166 * t3615 + 5 + (252 + 23 * t3611) * t3611
            t3607 = 5 * phi1
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.sqrt(0.4389e4) * np.sqrt(0.2e1) * ((t3618 + t3619) * np.exp((2*1j) * (t3607 - 3 * phi2)) + (t3618 - t3619) * np.exp((2*1j) * (t3607 + 3 * phi2)))

        if Bindx == 242:
            t3632 = np.cos(phi)
            t3631 = t3632 ** 2
            t3635 = t3631 ** 2
            t3638 = t3635 ** 2
            t3636 = t3632 * t3635
            t3640 = t3636 ** 2
            t3641 = t3632 * t3640
            t3644 = t3632 * t3641 - 44 * t3631 - 165 * t3635 + 165 * t3638 + 44 * t3640 - 1
            t3643 = -10 * t3641 + (-132 * t3631 + 132) * t3636 + (110 * t3631 - 110 * t3638 + 10) * t3632
            t3633 = 5 * phi1
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.69e2) * ((t3643 + t3644) * np.exp((2*1j) * (t3633 - 6 * phi2)) + (-t3643 + t3644) * np.exp((2*1j) * (t3633 + 6 * phi2)))

        if Bindx == 243:
            t3645 = np.cos(phi)
            tfunc[..., c] = (0.25e2 / 0.1024e4*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.4056234e7) * ((1 - t3645) ** (0.11e2 / 0.2e1)) * ((1 + t3645) ** (0.11e2 / 0.2e1)) * t3645

        if Bindx == 244:
            t3657 = np.cos(phi)
            t3656 = t3657 ** 2
            t3660 = t3656 ** 2
            t3661 = t3657 * t3660
            t3668 = 2 * t3661 ** 2
            t3667 = 1 - t3657
            t3664 = t3660 ** 2
            t3659 = t3657 * t3656
            t3662 = t3659 ** 2
            t3658 = 11 * phi1
            t3651 = t3657 * t3662
            t3649 = t3657 * t3664
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * (t3667 ** (0.5e1 / 0.2e1)) * np.sqrt(0.100947e6) * ((1 + t3657) ** (-0.1e1 / 0.2e1)) * ((t3668 - 5 * t3649 - 3 * t3664 + 16 * t3651 - 4 * t3662 - 18 * t3661 + 10 * t3660 + 8 * t3659 - 6 * t3656 + t3667) * np.exp((1j) * (t3658 - 6 * phi2)) + (t3668 + 17 * t3649 + 63 * t3664 + 132 * t3651 + 168 * t3662 + 126 * t3661 + 42 * t3660 - 12 * t3659 - 18 * t3656 - 7 * t3657 - 1) * np.exp((1j) * (t3658 + 6 * phi2)))

        if Bindx == 245:
            t3681 = np.cos(phi)
            t3680 = t3681 ** 2
            t3684 = t3680 ** 2
            t3683 = t3681 * t3680
            t3686 = t3683 ** 2
            t3688 = t3684 ** 2
            t3685 = t3681 * t3684
            t3690 = t3685 ** 2
            t3693 = -1 - 55 * t3680 - 330 * t3684 - 462 * t3686 - 165 * t3688 - 11 * t3690
            t3692 = 165 * t3683 + 462 * t3685 + (330 * t3686 + 55 * t3688 + t3690 + 11) * t3681
            t3682 = 11 * phi1
            tfunc[..., c] = (-0.25e2 / 0.2048e4*1j) * np.sqrt(0.3e1) * np.sqrt((1 - t3681)) * np.sqrt((1 + t3681)) * ((t3692 + t3693) * np.exp((1j) * (t3682 - 12 * phi2)) + (t3692 - t3693) * np.exp((1j) * (t3682 + 12 * phi2)))

        if Bindx == 246:
            t3698 = np.sin(phi)
            t3694 = t3698 ** 2
            t3695 = t3698 * t3694
            t3696 = t3695 ** 2
            tfunc[..., c] = (0.25e2 / 0.2048e4) * np.exp((12*1j) * phi1) * np.sqrt(0.676039e6) * t3696 ** 2

        if Bindx == 247:
            t3711 = np.cos(phi)
            t3710 = t3711 ** 2
            t3714 = t3710 ** 2
            t3717 = t3714 ** 2
            t3715 = t3711 * t3714
            t3719 = t3715 ** 2
            t3720 = t3711 * t3719
            t3723 = t3711 * t3720 - 12 * t3710 + 27 * t3714 - 27 * t3717 + 12 * t3719 - 1
            t3722 = -6 * t3720 + 2 * (18 * t3710 - 18) * t3715 + 2 * (t3710 - t3717 + 3) * t3711
            t3712 = 2 * phi1
            tfunc[..., c] = (0.25e2 / 0.4096e4) * np.sqrt(0.33649e5) * np.sqrt(0.2e1) * ((t3722 + t3723) * np.exp((6*1j) * (t3712 - phi2)) + (-t3722 + t3723) * np.exp((6*1j) * (t3712 + phi2)))

        if Bindx == 248:
            t3737 = np.cos(phi)
            t3750 = -12 * t3737
            t3736 = t3737 ** 2
            t3738 = t3737 * t3736
            t3739 = t3736 ** 2
            t3740 = t3737 * t3739
            t3741 = t3738 ** 2
            t3743 = t3739 ** 2
            t3745 = t3740 ** 2
            t3749 = t3745 * t3750 - 220 * t3738 - 792 * t3740 + t3750 + (-792 * t3741 - 220 * t3743) * t3737
            t3748 = 66 * t3736 + 495 * t3739 + 495 * t3743 + 66 * t3745 + 1 + (924 + t3741) * t3741
            tfunc[..., c] = (0.25e2 / 0.8192e4) * np.sqrt(0.2e1) * ((t3748 + t3749) * np.exp((12*1j) * (phi1 - phi2)) + (t3748 - t3749) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 249:
            t3763 = np.cos(phi)
            t3762 = t3763 ** 2
            t3766 = t3762 ** 2
            t3769 = t3766 ** 2
            t3767 = t3763 * t3766
            t3771 = t3767 ** 2
            t3772 = t3763 * t3771
            t3775 = -t3763 * t3772 + 12 * t3762 - 27 * t3766 + 27 * t3769 - 12 * t3771 + 1
            t3774 = -6 * t3772 + 2 * (18 * t3762 - 18) * t3767 + 2 * (t3762 - t3769 + 3) * t3763
            t3764 = 13 * phi1
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.sqrt(0.3289e4) * np.sqrt((1 - t3763)) * np.sqrt((1 + t3763)) * ((t3774 - t3775) * np.exp((-1*1j) * (t3764 - 6 * phi2)) + (t3774 + t3775) * np.exp((-1*1j) * (t3764 + 6 * phi2)))

        if Bindx == 250:
            t3790 = np.cos(phi)
            t3789 = t3790 ** 2
            t3792 = t3790 * t3789
            t3795 = t3792 ** 2
            t3801 = t3795 ** 2
            t3803 = -t3790 * t3801 + 1
            t3793 = t3789 ** 2
            t3794 = t3790 * t3793
            t3799 = t3794 ** 2
            t3797 = t3793 ** 2
            t3791 = 13 * phi1
            t3784 = t3790 * t3795
            t3782 = t3790 * t3797
            t3780 = t3790 * t3799
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.sqrt(0.13e2) * np.sqrt((1 + t3790)) * ((-13 * t3801 + 78 * t3780 - 286 * t3799 + 715 * t3782 - 1287 * t3797 + 1716 * t3784 - 1716 * t3795 + 1287 * t3794 - 715 * t3793 + 286 * t3792 - 78 * t3789 + 13 * t3790 - t3803) * np.exp((-1*1j) * (t3791 - 12 * phi2)) + (-11 * t3801 - 54 * t3780 - 154 * t3799 - 275 * t3782 - 297 * t3797 - 132 * t3784 + 132 * t3795 + 297 * t3794 + 275 * t3793 + 154 * t3792 + 54 * t3789 + 11 * t3790 + t3803) * np.exp((-1*1j) * (t3791 + 12 * phi2))) * ((1 - t3790) ** (-0.1e1 / 0.2e1))

        if Bindx == 251:
            t3818 = np.cos(phi)
            t3817 = t3818 ** 2
            t3821 = t3817 ** 2
            t3820 = t3818 * t3817
            t3823 = t3820 ** 2
            t3825 = t3821 ** 2
            t3822 = t3818 * t3821
            t3827 = t3822 ** 2
            t3829 = t3823 ** 2
            t3832 = 6 - 6 * t3817 - 188 * t3821 + 468 * t3823 - 306 * t3825 - 46 * t3827 + 72 * t3829
            t3831 = 144 * t3820 - 135 * t3822 + (-216 * t3823 + 363 * t3825 - 120 * t3827 - 13 * t3829 - 23) * t3818
            t3819 = 2 * phi1
            tfunc[..., c] = -(0.135e3 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((t3831 + t3832) * np.exp((-6*1j) * (t3819 - phi2)) + (-t3831 + t3832) * np.exp((-6*1j) * (t3819 + phi2)))

        if Bindx == 252:
            t3847 = np.cos(phi)
            t3846 = t3847 ** 2
            t3849 = t3846 ** 2
            t3848 = t3847 * t3846
            t3851 = t3848 ** 2
            t3853 = t3849 ** 2
            t3850 = t3847 * t3849
            t3855 = t3850 ** 2
            t3857 = t3851 ** 2
            t3860 = -12 - 636 * t3846 - 3080 * t3849 - 792 * t3851 + 4356 * t3853 + 2068 * t3855 + 144 * t3857
            t3859 = 1782 * t3848 + 3069 * t3850 + (-2508 * t3851 - 3795 * t3853 - 714 * t3855 - 13 * t3857 + 131) * t3847
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.sqrt(0.2e1) * ((t3859 + t3860) * np.exp((-12*1j) * (phi1 - phi2)) + (-t3859 + t3860) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 253:
            t3873 = np.cos(phi)
            t3872 = t3873 ** 2
            t3876 = t3872 ** 2
            t3877 = t3873 * t3876
            t3882 = t3877 ** 2
            t3884 = -325 * t3873 * t3882 + 59
            t3880 = t3876 ** 2
            t3875 = t3873 * t3872
            t3878 = t3875 ** 2
            t3874 = 11 * phi1
            t3867 = t3873 * t3878
            t3865 = t3873 * t3880
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.sqrt(0.253e3) * ((1 + t3873) ** (0.5e1 / 0.2e1)) * ((-2625 * t3882 + 9059 * t3865 - 17031 * t3880 + 17874 * t3867 - 8106 * t3878 - 3066 * t3877 + 6066 * t3876 - 2919 * t3875 + 251 * t3872 + 231 * t3873 - t3884) * np.exp((-1*1j) * (t3874 - 6 * phi2)) + (-675 * t3882 + 841 * t3865 + 2423 * t3880 - 450 * t3867 - 3278 * t3878 - 446 * t3877 + 2046 * t3876 + 503 * t3875 - 575 * t3872 - 123 * t3873 + t3884) * np.exp((-1*1j) * (t3874 + 6 * phi2))) * ((1 - t3873) ** (-0.1e1 / 0.2e1))

        if Bindx == 254:
            t3900 = np.cos(phi)
            t3899 = t3900 ** 2
            t3902 = t3900 * t3899
            t3903 = t3899 ** 2
            t3904 = t3900 * t3903
            t3905 = t3902 ** 2
            t3906 = t3900 * t3905
            t3907 = t3903 ** 2
            t3909 = t3904 ** 2
            t3911 = t3905 ** 2
            t3915 = -992 * t3902 + 308 * t3904 + 3168 * t3906 + (-836 * t3907 - 1408 * t3909 - 132 * t3911 - 108) * t3900
            t3914 = -13 * t3906 ** 2 - 451 * t3899 - 1023 * t3903 + 2409 * t3905 + 1551 * t3907 - 1881 * t3909 - 581 * t3911 - 11
            t3901 = 11 * phi1
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * ((-t3914 + t3915) * np.exp((-1*1j) * (t3901 - 12 * phi2)) + (t3914 + t3915) * np.exp((-1*1j) * (t3901 + 12 * phi2))) * ((1 - t3900) ** (-0.1e1 / 0.2e1)) * ((1 + t3900) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t3930 = np.cos(phi)
            t3929 = t3930 ** 2
            t3933 = t3929 ** 2
            t3932 = t3930 * t3929
            t3935 = t3932 ** 2
            t3937 = t3933 ** 2
            t3934 = t3930 * t3933
            t3939 = t3934 ** 2
            t3941 = t3935 ** 2
            t3944 = 17 - 391 * t3929 + 2246 * t3933 - 4182 * t3935 + 1605 * t3937 + 2205 * t3939 - 1500 * t3941
            t3943 = 210 * t3932 + 1377 * t3934 + (-5436 * t3935 + 5951 * t3937 - 1702 * t3939 - 325 * t3941 - 75) * t3930
            t3931 = 5 * phi1
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((-t3943 + t3944) * np.exp((-2*1j) * (t3931 - 3 * phi2)) + (t3943 + t3944) * np.exp((-2*1j) * (t3931 + 3 * phi2)))

        if Bindx == 256:
            t3959 = np.cos(phi)
            t3958 = t3959 ** 2
            t3962 = t3958 ** 2
            t3961 = t3959 * t3958
            t3964 = t3961 ** 2
            t3966 = t3962 ** 2
            t3963 = t3959 * t3962
            t3968 = t3963 ** 2
            t3970 = t3964 ** 2
            t3973 = 10 + 310 * t3958 + 220 * t3962 - 1716 * t3964 + 66 * t3966 + 990 * t3968 + 120 * t3970
            t3972 = -528 * t3961 + 825 * t3963 + (1320 * t3964 - 1045 * t3966 - 472 * t3968 - 13 * t3970 - 87) * t3959
            t3960 = 5 * phi1
            tfunc[..., c] = -(0.135e3 / 0.4096e4) * ((t3972 + t3973) * np.exp((-2*1j) * (t3960 - 6 * phi2)) + (-t3972 + t3973) * np.exp((-2*1j) * (t3960 + 6 * phi2))) * np.sqrt(0.2e1)

        if Bindx == 257:
            t3987 = np.cos(phi)
            t3986 = t3987 ** 2
            t3989 = t3987 * t3986
            t3992 = t3989 ** 2
            t3999 = -7475 * t3992 ** 2 - 27
            t3990 = t3986 ** 2
            t3991 = t3987 * t3990
            t3996 = t3991 ** 2
            t3994 = t3990 ** 2
            t3988 = 3 * phi1
            t3981 = t3987 * t3992
            t3979 = t3987 * t3994
            t3977 = t3987 * t3996
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.2e1) * ((1 + t3987) ** (0.3e1 / 0.2e1)) * np.sqrt(0.11e2) * ((1 - t3987) ** (-0.1e1 / 0.2e1)) * ((46000 * t3977 - 107042 * t3996 + 95772 * t3979 + 34059 * t3994 - 135024 * t3981 + 80388 * t3992 + 21384 * t3991 - 39357 * t3990 + 9056 * t3989 + 3614 * t3986 - 1348 * t3987 + t3999) * np.exp((-3*1j) * (t3988 - 2 * phi2)) + (16100 * t3977 - 17158 * t3996 - 54096 * t3979 + 6789 * t3994 + 69384 * t3981 + 10044 * t3992 - 42336 * t3991 - 9171 * t3990 + 12404 * t3989 + 1994 * t3986 - 1456 * t3987 - t3999) * np.exp((-3*1j) * (t3988 + 2 * phi2)))

        if Bindx == 258:
            t4015 = np.cos(phi)
            t4014 = t4015 ** 2
            t4017 = t4015 * t4014
            t4018 = t4014 ** 2
            t4019 = t4015 * t4018
            t4020 = t4017 ** 2
            t4021 = t4015 * t4020
            t4022 = t4018 ** 2
            t4024 = t4019 ** 2
            t4026 = t4020 ** 2
            t4030 = 152 * t4017 - 1012 * t4019 + 528 * t4021 + (924 * t4022 - 552 * t4024 - 108 * t4026 + 68) * t4015
            t4029 = -13 * t4021 ** 2 + 189 * t4014 - 363 * t4018 - 759 * t4020 + 1419 * t4022 - 121 * t4024 - 361 * t4026 + 9
            t4016 = 3 * phi1
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.sqrt(0.23e2) * np.sqrt(0.2e1) * ((-t4029 + t4030) * np.exp((-3*1j) * (t4016 - 4 * phi2)) + (t4029 + t4030) * np.exp((-3*1j) * (t4016 + 4 * phi2))) * ((1 + t4015) ** (-0.1e1 / 0.2e1)) * ((1 - t4015) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t4045 = np.cos(phi)
            t4044 = t4045 ** 2
            t4048 = t4044 ** 2
            t4047 = t4045 * t4044
            t4050 = t4047 ** 2
            t4052 = t4048 ** 2
            t4049 = t4045 * t4048
            t4054 = t4049 ** 2
            t4056 = t4050 ** 2
            t4059 = -5084 * t4044 + 24904 * t4048 - 20568 * t4050 - 69204 * t4052 + 130548 * t4054 - 60720 * t4056 + 124
            t4058 = 15864 * t4047 - 84537 * t4049 + (185544 * t4050 - 164659 * t4052 + 32384 * t4054 + 16445 * t4056 - 1041) * t4045
            t4046 = 4 * phi1
            tfunc[..., c] = (0.27e2 / 0.2048e4) * ((t4058 + t4059) * np.exp((-2*1j) * (t4046 - 3 * phi2)) + (-t4058 + t4059) * np.exp((-2*1j) * (t4046 + 3 * phi2))) * np.sqrt(0.5e1)

        if Bindx == 260:
            t4074 = np.cos(phi)
            t4073 = t4074 ** 2
            t4077 = t4073 ** 2
            t4076 = t4074 * t4073
            t4079 = t4076 ** 2
            t4081 = t4077 ** 2
            t4078 = t4074 * t4077
            t4083 = t4078 ** 2
            t4085 = t4079 ** 2
            t4088 = -8 - 104 * t4073 + 400 * t4077 + 48 * t4079 - 744 * t4081 + 312 * t4083 + 96 * t4085
            t4087 = -18 * t4076 - 579 * t4078 + (708 * t4079 + 125 * t4081 - 274 * t4083 - 13 * t4085 + 51) * t4074
            t4075 = 2 * phi1
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * ((t4087 + t4088) * np.exp((-4*1j) * (t4075 - 3 * phi2)) + (-t4087 + t4088) * np.exp((-4*1j) * (t4075 + 3 * phi2))) * np.sqrt(0.1265e4)

        if Bindx == 261:
            t4103 = np.cos(phi)
            t4102 = t4103 ** 2
            t4105 = t4103 * t4102
            t4108 = t4105 ** 2
            t4114 = t4108 ** 2
            t4116 = -16445 * t4103 * t4114 - 85
            t4106 = t4102 ** 2
            t4107 = t4103 * t4106
            t4112 = t4107 ** 2
            t4110 = t4106 ** 2
            t4104 = 7 * phi1
            t4097 = t4103 * t4108
            t4095 = t4103 * t4110
            t4093 = t4103 * t4112
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.2e1) * np.sqrt((1 + t4103)) * np.sqrt(0.35e2) * ((1 - t4103) ** (-0.1e1 / 0.2e1)) * ((69575 * t4114 - 71346 * t4093 - 84502 * t4112 + 197461 * t4095 - 35523 * t4110 - 147804 * t4097 + 82140 * t4108 + 37917 * t4107 - 33871 * t4106 - 1682 * t4105 + 4314 * t4102 - 149 * t4103 + t4116) * np.exp((-1*1j) * (t4104 - 6 * phi2)) + (36685 * t4114 - 34914 * t4093 - 120934 * t4112 + 7975 * t4095 + 153963 * t4110 + 29364 * t4097 - 95028 * t4108 - 25029 * t4107 + 29075 * t4106 + 6478 * t4105 - 3846 * t4102 - 319 * t4103 - t4116) * np.exp((-1*1j) * (t4104 + 6 * phi2)))

        if Bindx == 262:
            t4132 = np.cos(phi)
            t4131 = t4132 ** 2
            t4134 = t4132 * t4131
            t4135 = t4131 ** 2
            t4136 = t4132 * t4135
            t4137 = t4134 ** 2
            t4138 = t4132 * t4137
            t4139 = t4135 ** 2
            t4141 = t4136 ** 2
            t4143 = t4137 ** 2
            t4147 = -136 * t4134 - 116 * t4136 + 720 * t4138 + (-644 * t4139 + 56 * t4141 + 84 * t4143 + 36) * t4132
            t4146 = -13 * t4138 ** 2 - 35 * t4131 + 357 * t4135 - 567 * t4137 + 27 * t4139 + 423 * t4141 - 185 * t4143 - 7
            t4133 = 7 * phi1
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.sqrt(0.8855e4) * np.sqrt(0.2e1) * ((t4146 + t4147) * np.exp((-1*1j) * (t4133 - 12 * phi2)) + (-t4146 + t4147) * np.exp((-1*1j) * (t4133 + 12 * phi2))) * ((1 + t4132) ** (-0.1e1 / 0.2e1)) * ((1 - t4132) ** (-0.1e1 / 0.2e1))

        if Bindx == 263:
            t4162 = np.cos(phi)
            t4161 = t4162 ** 2
            t4163 = t4162 * t4161
            t4164 = t4161 ** 2
            t4165 = t4162 * t4164
            t4166 = t4163 ** 2
            t4168 = t4164 ** 2
            t4170 = t4165 ** 2
            t4172 = t4166 ** 2
            t4175 = 45270 * t4163 - 217629 * t4165 + (410700 * t4166 - 270435 * t4168 - 47058 * t4170 + 82225 * t4172 - 2561) * t4162
            t4174 = -3795 * t4161 + 48670 * t4164 - 257454 * t4166 + 595305 * t4168 - 609983 * t4170 + 227700 * t4172 + 69
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t4174 - t4175) * np.exp((-6*1j) * (phi1 - phi2)) + (t4174 + t4175) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 264:
            t4190 = np.cos(phi)
            t4189 = t4190 ** 2
            t4192 = t4189 ** 2
            t4191 = t4190 * t4189
            t4194 = t4191 ** 2
            t4196 = t4192 ** 2
            t4193 = t4190 * t4192
            t4198 = t4193 ** 2
            t4200 = t4194 ** 2
            t4203 = 6 - 6 * t4189 - 188 * t4192 + 468 * t4194 - 306 * t4196 - 46 * t4198 + 72 * t4200
            t4202 = 144 * t4191 - 135 * t4193 + (-216 * t4194 + 363 * t4196 - 120 * t4198 - 13 * t4200 - 23) * t4190
            tfunc[..., c] = -(0.135e3 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((t4202 + t4203) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (-t4202 + t4203) * np.exp((-6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 265:
            t4219 = np.cos(phi)
            t4218 = t4219 ** 2
            t4222 = t4218 ** 2
            t4221 = t4219 * t4218
            t4224 = t4221 ** 2
            t4225 = t4219 * t4224
            t4226 = t4222 ** 2
            t4223 = t4219 * t4222
            t4228 = t4223 ** 2
            t4230 = t4224 ** 2
            t4234 = 82225 * t4225 ** 2 - 6893 * t4218 + 63345 * t4222 - 196005 * t4224 + 221115 * t4226 + 6369 * t4228 - 170269 * t4230 + 113
            t4233 = -26140 * t4221 + 175642 * t4223 - 542952 * t4225 + (845090 * t4226 - 642620 * t4228 + 189750 * t4230 + 1230) * t4219
            t4220 = 5 * phi1
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.19e2) * ((1 + t4219) ** (-0.1e1 / 0.2e1)) * ((1 - t4219) ** (-0.1e1 / 0.2e1)) * ((t4233 - t4234) * np.exp((-1*1j) * (t4220 - 6 * phi2)) + (t4233 + t4234) * np.exp((-1*1j) * (t4220 + 6 * phi2)))

        if Bindx == 266:
            t4250 = np.cos(phi)
            t4249 = t4250 ** 2
            t4252 = t4250 * t4249
            t4253 = t4249 ** 2
            t4254 = t4250 * t4253
            t4255 = t4252 ** 2
            t4256 = t4250 * t4255
            t4257 = t4253 ** 2
            t4259 = t4254 ** 2
            t4261 = t4255 ** 2
            t4265 = 128 * t4252 - 332 * t4254 + 288 * t4256 + (28 * t4257 - 160 * t4259 + 60 * t4261 - 12) * t4250
            t4264 = -13 * t4256 ** 2 - 35 * t4249 - 15 * t4253 + 297 * t4255 - 513 * t4257 + 327 * t4259 - 53 * t4261 + 5
            t4251 = 5 * phi1
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.sqrt(0.4807e4) * ((1 + t4250) ** (-0.1e1 / 0.2e1)) * ((1 - t4250) ** (-0.1e1 / 0.2e1)) * ((t4264 + t4265) * np.exp((-1*1j) * (t4251 - 12 * phi2)) + (-t4264 + t4265) * np.exp((-1*1j) * (t4251 + 12 * phi2)))

        if Bindx == 267:
            t4280 = np.cos(phi)
            t4279 = t4280 ** 2
            t4282 = t4280 * t4279
            t4283 = t4279 ** 2
            t4284 = t4280 * t4283
            t4285 = t4282 ** 2
            t4287 = t4283 ** 2
            t4289 = t4284 ** 2
            t4291 = t4285 ** 2
            t4294 = 7280 * t4282 - 27661 * t4284 + (-1480 * t4285 + 136345 * t4287 - 196328 * t4289 + 82225 * t4291 - 381) * t4280
            t4293 = 6890 * t4279 - 73180 * t4283 + 291124 * t4285 - 536930 * t4287 + 464002 * t4289 - 151800 * t4291 - 106
            t4281 = 2 * phi1
            tfunc[..., c] = (0.27e2 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.19e2) * ((t4293 + t4294) * np.exp((-2*1j) * (t4281 - 3 * phi2)) + (t4293 - t4294) * np.exp((-2*1j) * (t4281 + 3 * phi2)))

        if Bindx == 268:
            t4309 = np.cos(phi)
            t4308 = t4309 ** 2
            t4311 = t4308 ** 2
            t4310 = t4309 * t4308
            t4313 = t4310 ** 2
            t4315 = t4311 ** 2
            t4312 = t4309 * t4311
            t4317 = t4312 ** 2
            t4319 = t4313 ** 2
            t4322 = -4 + 44 * t4308 - 88 * t4311 - 8 * t4313 + 172 * t4315 - 164 * t4317 + 48 * t4319
            t4321 = -74 * t4310 + 253 * t4312 + (-332 * t4313 + 173 * t4315 - 10 * t4317 - 13 * t4319 + 3) * t4309
            tfunc[..., c] = -(0.135e3 / 0.8192e4) * np.sqrt(0.4807e4) * np.sqrt(0.2e1) * ((t4321 + t4322) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (-t4321 + t4322) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 269:
            t4338 = np.cos(phi)
            t4337 = t4338 ** 2
            t4340 = t4337 ** 2
            t4339 = t4338 * t4337
            t4342 = t4339 ** 2
            t4343 = t4338 * t4342
            t4344 = t4340 ** 2
            t4341 = t4338 * t4340
            t4346 = t4341 ** 2
            t4348 = t4342 ** 2
            t4352 = -16445 * t4343 ** 2 - 207 * t4337 + 2939 * t4340 - 17743 * t4342 + 52529 * t4344 - 79013 * t4346 + 57937 * t4348 + 3
            t4351 = -4444 * t4339 + 29390 * t4341 - 84680 * t4343 + (120766 * t4344 - 83996 * t4346 + 22770 * t4348 + 194) * t4338
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.1615e4) * ((t4351 + t4352) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t4351 - t4352) * np.exp((-3*1j) * (phi1 + 2 * phi2))) * ((1 + t4338) ** (-0.1e1 / 0.2e1)) * ((1 - t4338) ** (-0.1e1 / 0.2e1))

        if Bindx == 270:
            t4368 = np.cos(phi)
            t4367 = t4368 ** 2
            t4369 = t4368 * t4367
            t4370 = t4367 ** 2
            t4371 = t4368 * t4370
            t4372 = t4369 ** 2
            t4373 = t4368 * t4372
            t4374 = t4370 ** 2
            t4376 = t4371 ** 2
            t4378 = t4372 ** 2
            t4382 = -16 * t4369 + 140 * t4371 - 320 * t4373 + (340 * t4374 - 176 * t4376 + 36 * t4378 - 4) * t4368
            t4381 = -13 * t4373 ** 2 + 45 * t4367 - 167 * t4370 + 265 * t4372 - 185 * t4374 + 23 * t4376 + 35 * t4378 - 3
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.sqrt(0.408595e6) * ((1 + t4368) ** (-0.1e1 / 0.2e1)) * ((1 - t4368) ** (-0.1e1 / 0.2e1)) * ((t4381 + t4382) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (-t4381 + t4382) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 271:
            t4397 = np.cos(phi)
            t4396 = t4397 ** 2
            t4399 = t4396 ** 2
            t4398 = t4397 * t4396
            t4401 = t4398 ** 2
            t4403 = t4399 ** 2
            t4400 = t4397 * t4399
            t4405 = t4400 ** 2
            t4407 = t4401 ** 2
            t4410 = -1 + 71 * t4396 - 790 * t4399 + 3142 * t4401 - 5573 * t4403 + 4531 * t4405 - 1380 * t4407
            t4409 = 214 * t4398 - 1493 * t4400 + (4588 * t4401 - 7003 * t4403 + 5198 * t4405 - 1495 * t4407 - 9) * t4397
            tfunc[..., c] = (0.27e2 / 0.1024e4) * ((-t4409 + t4410) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t4409 + t4410) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.17765e5)

        if Bindx == 272:
            t4425 = np.cos(phi)
            t4424 = t4425 ** 2
            t4427 = t4424 ** 2
            t4426 = t4425 * t4424
            t4429 = t4426 ** 2
            t4431 = t4427 ** 2
            t4428 = t4425 * t4427
            t4433 = t4428 ** 2
            t4435 = t4429 ** 2
            t4438 = 2 - 34 * t4424 + 140 * t4427 - 260 * t4429 + 250 * t4431 - 122 * t4433 + 24 * t4435
            t4437 = -32 * t4426 + 25 * t4428 + (40 * t4429 - 85 * t4431 + 56 * t4433 - 13 * t4435 + 9) * t4425
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * ((t4437 + t4438) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (-t4437 + t4438) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.37145e5)

        if Bindx == 273:
            t4454 = np.cos(phi)
            t4453 = t4454 ** 2
            t4455 = t4454 * t4453
            t4456 = t4453 ** 2
            t4457 = t4454 * t4456
            t4458 = t4455 ** 2
            t4459 = t4454 * t4458
            t4460 = t4456 ** 2
            t4462 = t4457 ** 2
            t4464 = t4458 ** 2
            t4468 = -720 * t4455 + 4878 * t4457 - 14064 * t4459 + (19674 * t4460 - 13248 * t4462 + 3450 * t4464 + 30) * t4454
            t4467 = -7475 * t4459 ** 2 - 365 * t4453 + 4425 * t4456 - 20473 * t4458 + 45919 * t4460 - 53799 * t4462 + 31763 * t4464 + 5
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.sqrt(0.3553e4) * ((1 + t4454) ** (-0.1e1 / 0.2e1)) * ((1 - t4454) ** (-0.1e1 / 0.2e1)) * ((t4467 + t4468) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t4467 + t4468) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 274:
            t4484 = np.cos(phi)
            t4483 = t4484 ** 2
            t4485 = t4484 * t4483
            t4486 = t4483 ** 2
            t4487 = t4484 * t4486
            t4488 = t4485 ** 2
            t4489 = t4484 * t4488
            t4490 = t4486 ** 2
            t4492 = t4487 ** 2
            t4494 = t4488 ** 2
            t4498 = -72 * t4485 + 180 * t4487 - 240 * t4489 + 12 * (15 * t4490 - 6 * t4492 + t4494 + 1) * t4484
            t4497 = -13 * t4489 ** 2 - 19 * t4483 + 93 * t4486 - 215 * t4488 + 275 * t4490 - 201 * t4492 + 79 * t4494 + 1
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.sqrt(0.7429e4) * ((1 + t4484) ** (-0.1e1 / 0.2e1)) * ((1 - t4484) ** (-0.1e1 / 0.2e1)) * ((t4497 + t4498) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (-t4497 + t4498) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 275:
            t4506 = np.sin(phi)
            t4503 = t4506 ** 2
            t4504 = t4506 * t4503
            t4499 = np.cos(phi)
            t4500 = t4499 ** 2
            t4501 = t4500 ** 2
            tfunc[..., c] = (-0.27e2 / 0.1024e4*1j) * t4499 * t4504 ** 2 * (-483 * t4501 - 5 + (575 * t4501 + 105) * t4500) * np.sin((6 * phi2)) * np.sqrt(0.323323e6) * np.sqrt(0.2e1)

        if Bindx == 276:
            t4511 = np.sin(phi)
            t4507 = t4511 ** 2
            t4508 = t4511 * t4507
            t4509 = t4508 ** 2
            tfunc[..., c] = (0.135e3 / 0.2048e4*1j) * np.sqrt(0.676039e6) * np.sqrt(0.2e1) * np.cos(phi) * np.sin((12 * phi2)) * t4509 ** 2

        if Bindx == 277:
            t4527 = np.cos(phi)
            t4526 = t4527 ** 2
            t4528 = t4527 * t4526
            t4529 = t4526 ** 2
            t4530 = t4527 * t4529
            t4531 = t4528 ** 2
            t4532 = t4527 * t4531
            t4533 = t4529 ** 2
            t4535 = t4530 ** 2
            t4537 = t4531 ** 2
            t4541 = 720 * t4528 - 4878 * t4530 + 14064 * t4532 + (-19674 * t4533 + 13248 * t4535 - 3450 * t4537 - 30) * t4527
            t4540 = -7475 * t4532 ** 2 - 365 * t4526 + 4425 * t4529 - 20473 * t4531 + 45919 * t4533 - 53799 * t4535 + 31763 * t4537 + 5
            tfunc[..., c] = (-0.27e2 / 0.2048e4*1j) * np.sqrt(0.3553e4) * ((1 + t4527) ** (-0.1e1 / 0.2e1)) * ((1 - t4527) ** (-0.1e1 / 0.2e1)) * ((-t4540 + t4541) * np.exp((1j) * (phi1 - 6 * phi2)) + (t4540 + t4541) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 278:
            t4557 = np.cos(phi)
            t4556 = t4557 ** 2
            t4558 = t4557 * t4556
            t4559 = t4556 ** 2
            t4560 = t4557 * t4559
            t4561 = t4558 ** 2
            t4562 = t4557 * t4561
            t4563 = t4559 ** 2
            t4565 = t4560 ** 2
            t4567 = t4561 ** 2
            t4571 = 72 * t4558 - 180 * t4560 + 240 * t4562 + 12 * (-15 * t4563 + 6 * t4565 - t4567 - 1) * t4557
            t4570 = -13 * t4562 ** 2 - 19 * t4556 + 93 * t4559 - 215 * t4561 + 275 * t4563 - 201 * t4565 + 79 * t4567 + 1
            tfunc[..., c] = (-0.135e3 / 0.4096e4*1j) * np.sqrt(0.7429e4) * ((-t4570 + t4571) * np.exp((1j) * (phi1 - 12 * phi2)) + (t4570 + t4571) * np.exp((1j) * (phi1 + 12 * phi2))) * ((1 + t4557) ** (-0.1e1 / 0.2e1)) * ((1 - t4557) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t4586 = np.cos(phi)
            t4585 = t4586 ** 2
            t4588 = t4585 ** 2
            t4587 = t4586 * t4585
            t4590 = t4587 ** 2
            t4592 = t4588 ** 2
            t4589 = t4586 * t4588
            t4594 = t4589 ** 2
            t4596 = t4590 ** 2
            t4599 = -1 + 71 * t4585 - 790 * t4588 + 3142 * t4590 - 5573 * t4592 + 4531 * t4594 - 1380 * t4596
            t4598 = 214 * t4587 - 1493 * t4589 + (4588 * t4590 - 7003 * t4592 + 5198 * t4594 - 1495 * t4596 - 9) * t4586
            tfunc[..., c] = -(0.27e2 / 0.1024e4) * ((-t4598 + t4599) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t4598 + t4599) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.17765e5)

        if Bindx == 280:
            t4614 = np.cos(phi)
            t4613 = t4614 ** 2
            t4616 = t4613 ** 2
            t4615 = t4614 * t4613
            t4618 = t4615 ** 2
            t4620 = t4616 ** 2
            t4617 = t4614 * t4616
            t4622 = t4617 ** 2
            t4624 = t4618 ** 2
            t4627 = -2 + 34 * t4613 - 140 * t4616 + 260 * t4618 - 250 * t4620 + 122 * t4622 - 24 * t4624
            t4626 = -32 * t4615 + 25 * t4617 + (40 * t4618 - 85 * t4620 + 56 * t4622 - 13 * t4624 + 9) * t4614
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * ((-t4626 + t4627) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (t4626 + t4627) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.37145e5)

        if Bindx == 281:
            t4643 = np.cos(phi)
            t4642 = t4643 ** 2
            t4645 = t4642 ** 2
            t4644 = t4643 * t4642
            t4647 = t4644 ** 2
            t4648 = t4643 * t4647
            t4649 = t4645 ** 2
            t4646 = t4643 * t4645
            t4651 = t4646 ** 2
            t4653 = t4647 ** 2
            t4657 = -16445 * t4648 ** 2 - 207 * t4642 + 2939 * t4645 - 17743 * t4647 + 52529 * t4649 - 79013 * t4651 + 57937 * t4653 + 3
            t4656 = 4444 * t4644 - 29390 * t4646 + 84680 * t4648 + (-120766 * t4649 + 83996 * t4651 - 22770 * t4653 - 194) * t4643
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.1615e4) * ((1 + t4643) ** (-0.1e1 / 0.2e1)) * ((1 - t4643) ** (-0.1e1 / 0.2e1)) * ((t4656 - t4657) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t4656 + t4657) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 282:
            t4673 = np.cos(phi)
            t4672 = t4673 ** 2
            t4674 = t4673 * t4672
            t4675 = t4672 ** 2
            t4676 = t4673 * t4675
            t4677 = t4674 ** 2
            t4678 = t4673 * t4677
            t4679 = t4675 ** 2
            t4681 = t4676 ** 2
            t4683 = t4677 ** 2
            t4687 = -16 * t4674 + 140 * t4676 - 320 * t4678 + (340 * t4679 - 176 * t4681 + 36 * t4683 - 4) * t4673
            t4686 = -13 * t4678 ** 2 + 45 * t4672 - 167 * t4675 + 265 * t4677 - 185 * t4679 + 23 * t4681 + 35 * t4683 - 3
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.sqrt(0.408595e6) * ((t4686 + t4687) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (-t4686 + t4687) * np.exp((3*1j) * (phi1 + 4 * phi2))) * ((1 + t4673) ** (-0.1e1 / 0.2e1)) * ((1 - t4673) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t4702 = np.cos(phi)
            t4701 = t4702 ** 2
            t4704 = t4702 * t4701
            t4705 = t4701 ** 2
            t4706 = t4702 * t4705
            t4707 = t4704 ** 2
            t4709 = t4705 ** 2
            t4711 = t4706 ** 2
            t4713 = t4707 ** 2
            t4716 = 7280 * t4704 - 27661 * t4706 + (-1480 * t4707 + 136345 * t4709 - 196328 * t4711 + 82225 * t4713 - 381) * t4702
            t4715 = 6890 * t4701 - 73180 * t4705 + 291124 * t4707 - 536930 * t4709 + 464002 * t4711 - 151800 * t4713 - 106
            t4703 = 2 * phi1
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.19e2) * ((t4715 + t4716) * np.exp((2*1j) * (t4703 - 3 * phi2)) + (t4715 - t4716) * np.exp((2*1j) * (t4703 + 3 * phi2)))

        if Bindx == 284:
            t4731 = np.cos(phi)
            t4730 = t4731 ** 2
            t4733 = t4730 ** 2
            t4732 = t4731 * t4730
            t4735 = t4732 ** 2
            t4737 = t4733 ** 2
            t4734 = t4731 * t4733
            t4739 = t4734 ** 2
            t4741 = t4735 ** 2
            t4744 = -4 + 44 * t4730 - 88 * t4733 - 8 * t4735 + 172 * t4737 - 164 * t4739 + 48 * t4741
            t4743 = -74 * t4732 + 253 * t4734 + (-332 * t4735 + 173 * t4737 - 10 * t4739 - 13 * t4741 + 3) * t4731
            tfunc[..., c] = (0.135e3 / 0.8192e4) * np.sqrt(0.4807e4) * np.sqrt(0.2e1) * ((t4743 + t4744) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (-t4743 + t4744) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 285:
            t4760 = np.cos(phi)
            t4759 = t4760 ** 2
            t4763 = t4759 ** 2
            t4762 = t4760 * t4759
            t4765 = t4762 ** 2
            t4766 = t4760 * t4765
            t4767 = t4763 ** 2
            t4764 = t4760 * t4763
            t4769 = t4764 ** 2
            t4771 = t4765 ** 2
            t4775 = 82225 * t4766 ** 2 - 6893 * t4759 + 63345 * t4763 - 196005 * t4765 + 221115 * t4767 + 6369 * t4769 - 170269 * t4771 + 113
            t4774 = -26140 * t4762 + 175642 * t4764 - 542952 * t4766 + (845090 * t4767 - 642620 * t4769 + 189750 * t4771 + 1230) * t4760
            t4761 = 5 * phi1
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.sqrt(0.19e2) * ((t4774 - t4775) * np.exp((1j) * (t4761 - 6 * phi2)) + (t4774 + t4775) * np.exp((1j) * (t4761 + 6 * phi2))) * ((1 + t4760) ** (-0.1e1 / 0.2e1)) * ((1 - t4760) ** (-0.1e1 / 0.2e1))

        if Bindx == 286:
            t4791 = np.cos(phi)
            t4790 = t4791 ** 2
            t4793 = t4791 * t4790
            t4794 = t4790 ** 2
            t4795 = t4791 * t4794
            t4796 = t4793 ** 2
            t4797 = t4791 * t4796
            t4798 = t4794 ** 2
            t4800 = t4795 ** 2
            t4802 = t4796 ** 2
            t4806 = 128 * t4793 - 332 * t4795 + 288 * t4797 + (28 * t4798 - 160 * t4800 + 60 * t4802 - 12) * t4791
            t4805 = -13 * t4797 ** 2 - 35 * t4790 - 15 * t4794 + 297 * t4796 - 513 * t4798 + 327 * t4800 - 53 * t4802 + 5
            t4792 = 5 * phi1
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * np.sqrt(0.4807e4) * ((t4805 + t4806) * np.exp((1j) * (t4792 - 12 * phi2)) + (-t4805 + t4806) * np.exp((1j) * (t4792 + 12 * phi2))) * ((1 + t4791) ** (-0.1e1 / 0.2e1)) * ((1 - t4791) ** (-0.1e1 / 0.2e1))

        if Bindx == 287:
            t4821 = np.cos(phi)
            t4820 = t4821 ** 2
            t4822 = t4821 * t4820
            t4823 = t4820 ** 2
            t4824 = t4821 * t4823
            t4825 = t4822 ** 2
            t4827 = t4823 ** 2
            t4829 = t4824 ** 2
            t4831 = t4825 ** 2
            t4834 = 45270 * t4822 - 217629 * t4824 + (410700 * t4825 - 270435 * t4827 - 47058 * t4829 + 82225 * t4831 - 2561) * t4821
            t4833 = 3795 * t4820 - 48670 * t4823 + 257454 * t4825 - 595305 * t4827 + 609983 * t4829 - 227700 * t4831 - 69
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * np.sqrt(0.2e1) * ((t4833 + t4834) * np.exp((6*1j) * (phi1 - phi2)) + (t4833 - t4834) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 288:
            t4849 = np.cos(phi)
            t4848 = t4849 ** 2
            t4851 = t4848 ** 2
            t4850 = t4849 * t4848
            t4853 = t4850 ** 2
            t4855 = t4851 ** 2
            t4852 = t4849 * t4851
            t4857 = t4852 ** 2
            t4859 = t4853 ** 2
            t4862 = -6 + 6 * t4848 + 188 * t4851 - 468 * t4853 + 306 * t4855 + 46 * t4857 - 72 * t4859
            t4861 = 144 * t4850 - 135 * t4852 + (-216 * t4853 + 363 * t4855 - 120 * t4857 - 13 * t4859 - 23) * t4849
            tfunc[..., c] = -(0.135e3 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((-t4861 + t4862) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (t4861 + t4862) * np.exp((6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 289:
            t4877 = np.cos(phi)
            t4876 = t4877 ** 2
            t4879 = t4877 * t4876
            t4882 = t4879 ** 2
            t4888 = t4882 ** 2
            t4890 = -16445 * t4877 * t4888 + 85
            t4880 = t4876 ** 2
            t4881 = t4877 * t4880
            t4886 = t4881 ** 2
            t4884 = t4880 ** 2
            t4878 = 7 * phi1
            t4871 = t4877 * t4882
            t4869 = t4877 * t4884
            t4867 = t4877 * t4886
            tfunc[..., c] = (0.27e2 / 0.4096e4*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t4877)) * np.sqrt(0.35e2) * ((1 + t4877) ** (-0.1e1 / 0.2e1)) * ((-36685 * t4888 - 34914 * t4867 + 120934 * t4886 + 7975 * t4869 - 153963 * t4884 + 29364 * t4871 + 95028 * t4882 - 25029 * t4881 - 29075 * t4880 + 6478 * t4879 + 3846 * t4876 - 319 * t4877 - t4890) * np.exp((1j) * (t4878 - 6 * phi2)) + (-69575 * t4888 - 71346 * t4867 + 84502 * t4886 + 197461 * t4869 + 35523 * t4884 - 147804 * t4871 - 82140 * t4882 + 37917 * t4881 + 33871 * t4880 - 1682 * t4879 - 4314 * t4876 - 149 * t4877 + t4890) * np.exp((1j) * (t4878 + 6 * phi2)))

        if Bindx == 290:
            t4906 = np.cos(phi)
            t4905 = t4906 ** 2
            t4908 = t4906 * t4905
            t4909 = t4905 ** 2
            t4910 = t4906 * t4909
            t4911 = t4908 ** 2
            t4912 = t4906 * t4911
            t4913 = t4909 ** 2
            t4915 = t4910 ** 2
            t4917 = t4911 ** 2
            t4921 = -136 * t4908 - 116 * t4910 + 720 * t4912 + (-644 * t4913 + 56 * t4915 + 84 * t4917 + 36) * t4906
            t4920 = -13 * t4912 ** 2 - 35 * t4905 + 357 * t4909 - 567 * t4911 + 27 * t4913 + 423 * t4915 - 185 * t4917 - 7
            t4907 = 7 * phi1
            tfunc[..., c] = (0.27e2 / 0.8192e4*1j) * np.sqrt(0.8855e4) * np.sqrt(0.2e1) * ((t4920 + t4921) * np.exp((1j) * (t4907 - 12 * phi2)) + (-t4920 + t4921) * np.exp((1j) * (t4907 + 12 * phi2))) * ((1 + t4906) ** (-0.1e1 / 0.2e1)) * ((1 - t4906) ** (-0.1e1 / 0.2e1))

        if Bindx == 291:
            t4936 = np.cos(phi)
            t4935 = t4936 ** 2
            t4939 = t4935 ** 2
            t4938 = t4936 * t4935
            t4941 = t4938 ** 2
            t4943 = t4939 ** 2
            t4940 = t4936 * t4939
            t4945 = t4940 ** 2
            t4947 = t4941 ** 2
            t4950 = -5084 * t4935 + 24904 * t4939 - 20568 * t4941 - 69204 * t4943 + 130548 * t4945 - 60720 * t4947 + 124
            t4949 = 15864 * t4938 - 84537 * t4940 + (185544 * t4941 - 164659 * t4943 + 32384 * t4945 + 16445 * t4947 - 1041) * t4936
            t4937 = 4 * phi1
            tfunc[..., c] = -(0.27e2 / 0.2048e4) * ((t4949 + t4950) * np.exp((2*1j) * (t4937 - 3 * phi2)) + (-t4949 + t4950) * np.exp((2*1j) * (t4937 + 3 * phi2))) * np.sqrt(0.5e1)

        if Bindx == 292:
            t4965 = np.cos(phi)
            t4964 = t4965 ** 2
            t4968 = t4964 ** 2
            t4967 = t4965 * t4964
            t4970 = t4967 ** 2
            t4972 = t4968 ** 2
            t4969 = t4965 * t4968
            t4974 = t4969 ** 2
            t4976 = t4970 ** 2
            t4979 = 8 + 104 * t4964 - 400 * t4968 - 48 * t4970 + 744 * t4972 - 312 * t4974 - 96 * t4976
            t4978 = -18 * t4967 - 579 * t4969 + (708 * t4970 + 125 * t4972 - 274 * t4974 - 13 * t4976 + 51) * t4965
            t4966 = 2 * phi1
            tfunc[..., c] = -(0.27e2 / 0.4096e4) * ((-t4978 + t4979) * np.exp((4*1j) * (t4966 - 3 * phi2)) + (t4978 + t4979) * np.exp((4*1j) * (t4966 + 3 * phi2))) * np.sqrt(0.1265e4)

        if Bindx == 293:
            t4993 = np.cos(phi)
            t4992 = t4993 ** 2
            t4995 = t4993 * t4992
            t4998 = t4995 ** 2
            t5005 = -7475 * t4998 ** 2 - 27
            t4996 = t4992 ** 2
            t4997 = t4993 * t4996
            t5002 = t4997 ** 2
            t5000 = t4996 ** 2
            t4994 = 3 * phi1
            t4987 = t4993 * t4998
            t4985 = t4993 * t5000
            t4983 = t4993 * t5002
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.2e1) * ((1 - t4993) ** (0.3e1 / 0.2e1)) * np.sqrt(0.11e2) * ((1 + t4993) ** (-0.1e1 / 0.2e1)) * ((-16100 * t4983 - 17158 * t5002 + 54096 * t4985 + 6789 * t5000 - 69384 * t4987 + 10044 * t4998 + 42336 * t4997 - 9171 * t4996 - 12404 * t4995 + 1994 * t4992 + 1456 * t4993 - t5005) * np.exp((3*1j) * (t4994 - 2 * phi2)) + (-46000 * t4983 - 107042 * t5002 - 95772 * t4985 + 34059 * t5000 + 135024 * t4987 + 80388 * t4998 - 21384 * t4997 - 39357 * t4996 - 9056 * t4995 + 3614 * t4992 + 1348 * t4993 + t5005) * np.exp((3*1j) * (t4994 + 2 * phi2)))

        if Bindx == 294:
            t5021 = np.cos(phi)
            t5020 = t5021 ** 2
            t5023 = t5021 * t5020
            t5024 = t5020 ** 2
            t5025 = t5021 * t5024
            t5026 = t5023 ** 2
            t5027 = t5021 * t5026
            t5028 = t5024 ** 2
            t5030 = t5025 ** 2
            t5032 = t5026 ** 2
            t5036 = 152 * t5023 - 1012 * t5025 + 528 * t5027 + (924 * t5028 - 552 * t5030 - 108 * t5032 + 68) * t5021
            t5035 = -13 * t5027 ** 2 + 189 * t5020 - 363 * t5024 - 759 * t5026 + 1419 * t5028 - 121 * t5030 - 361 * t5032 + 9
            t5022 = 3 * phi1
            tfunc[..., c] = (-0.135e3 / 0.8192e4*1j) * np.sqrt(0.23e2) * np.sqrt(0.2e1) * ((1 + t5021) ** (-0.1e1 / 0.2e1)) * ((1 - t5021) ** (-0.1e1 / 0.2e1)) * ((-t5035 + t5036) * np.exp((3*1j) * (t5022 - 4 * phi2)) + (t5035 + t5036) * np.exp((3*1j) * (t5022 + 4 * phi2)))

        if Bindx == 295:
            t5051 = np.cos(phi)
            t5050 = t5051 ** 2
            t5054 = t5050 ** 2
            t5053 = t5051 * t5050
            t5056 = t5053 ** 2
            t5058 = t5054 ** 2
            t5055 = t5051 * t5054
            t5060 = t5055 ** 2
            t5062 = t5056 ** 2
            t5065 = -17 + 391 * t5050 - 2246 * t5054 + 4182 * t5056 - 1605 * t5058 - 2205 * t5060 + 1500 * t5062
            t5064 = 210 * t5053 + 1377 * t5055 + (-5436 * t5056 + 5951 * t5058 - 1702 * t5060 - 325 * t5062 - 75) * t5051
            t5052 = 5 * phi1
            tfunc[..., c] = (0.27e2 / 0.2048e4) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((t5064 + t5065) * np.exp((2*1j) * (t5052 - 3 * phi2)) + (-t5064 + t5065) * np.exp((2*1j) * (t5052 + 3 * phi2)))

        if Bindx == 296:
            t5080 = np.cos(phi)
            t5079 = t5080 ** 2
            t5083 = t5079 ** 2
            t5082 = t5080 * t5079
            t5085 = t5082 ** 2
            t5087 = t5083 ** 2
            t5084 = t5080 * t5083
            t5089 = t5084 ** 2
            t5091 = t5085 ** 2
            t5094 = 10 + 310 * t5079 + 220 * t5083 - 1716 * t5085 + 66 * t5087 + 990 * t5089 + 120 * t5091
            t5093 = -528 * t5082 + 825 * t5084 + (1320 * t5085 - 1045 * t5087 - 472 * t5089 - 13 * t5091 - 87) * t5080
            t5081 = 5 * phi1
            tfunc[..., c] = (0.135e3 / 0.4096e4) * ((t5093 + t5094) * np.exp((2*1j) * (t5081 - 6 * phi2)) + (-t5093 + t5094) * np.exp((2*1j) * (t5081 + 6 * phi2))) * np.sqrt(0.2e1)

        if Bindx == 297:
            t5107 = np.cos(phi)
            t5106 = t5107 ** 2
            t5110 = t5106 ** 2
            t5111 = t5107 * t5110
            t5116 = t5111 ** 2
            t5118 = -325 * t5107 * t5116 - 59
            t5114 = t5110 ** 2
            t5109 = t5107 * t5106
            t5112 = t5109 ** 2
            t5108 = 11 * phi1
            t5101 = t5107 * t5112
            t5099 = t5107 * t5114
            tfunc[..., c] = (-0.27e2 / 0.4096e4*1j) * np.sqrt(0.253e3) * ((1 - t5107) ** (0.5e1 / 0.2e1)) * ((675 * t5116 + 841 * t5099 - 2423 * t5114 - 450 * t5101 + 3278 * t5112 - 446 * t5111 - 2046 * t5110 + 503 * t5109 + 575 * t5106 - 123 * t5107 + t5118) * np.exp((1j) * (t5108 - 6 * phi2)) + (2625 * t5116 + 9059 * t5099 + 17031 * t5114 + 17874 * t5101 + 8106 * t5112 - 3066 * t5111 - 6066 * t5110 - 2919 * t5109 - 251 * t5106 + 231 * t5107 - t5118) * np.exp((1j) * (t5108 + 6 * phi2))) * ((1 + t5107) ** (-0.1e1 / 0.2e1))

        if Bindx == 298:
            t5134 = np.cos(phi)
            t5133 = t5134 ** 2
            t5136 = t5134 * t5133
            t5137 = t5133 ** 2
            t5138 = t5134 * t5137
            t5139 = t5136 ** 2
            t5140 = t5134 * t5139
            t5141 = t5137 ** 2
            t5143 = t5138 ** 2
            t5145 = t5139 ** 2
            t5149 = 992 * t5136 - 308 * t5138 - 3168 * t5140 + (836 * t5141 + 1408 * t5143 + 132 * t5145 + 108) * t5134
            t5148 = -13 * t5140 ** 2 - 451 * t5133 - 1023 * t5137 + 2409 * t5139 + 1551 * t5141 - 1881 * t5143 - 581 * t5145 - 11
            t5135 = 11 * phi1
            tfunc[..., c] = (0.135e3 / 0.8192e4*1j) * ((t5148 + t5149) * np.exp((1j) * (t5135 - 12 * phi2)) + (-t5148 + t5149) * np.exp((1j) * (t5135 + 12 * phi2))) * ((1 + t5134) ** (-0.1e1 / 0.2e1)) * ((1 - t5134) ** (-0.1e1 / 0.2e1))

        if Bindx == 299:
            t5164 = np.cos(phi)
            t5163 = t5164 ** 2
            t5167 = t5163 ** 2
            t5166 = t5164 * t5163
            t5169 = t5166 ** 2
            t5171 = t5167 ** 2
            t5168 = t5164 * t5167
            t5173 = t5168 ** 2
            t5175 = t5169 ** 2
            t5178 = -6 + 6 * t5163 + 188 * t5167 - 468 * t5169 + 306 * t5171 + 46 * t5173 - 72 * t5175
            t5177 = 144 * t5166 - 135 * t5168 + (-216 * t5169 + 363 * t5171 - 120 * t5173 - 13 * t5175 - 23) * t5164
            t5165 = 2 * phi1
            tfunc[..., c] = -(0.135e3 / 0.4096e4) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((-t5177 + t5178) * np.exp((6*1j) * (t5165 - phi2)) + (t5177 + t5178) * np.exp((6*1j) * (t5165 + phi2)))

        if Bindx == 300:
            t5193 = np.cos(phi)
            t5192 = t5193 ** 2
            t5195 = t5192 ** 2
            t5194 = t5193 * t5192
            t5197 = t5194 ** 2
            t5199 = t5195 ** 2
            t5196 = t5193 * t5195
            t5201 = t5196 ** 2
            t5203 = t5197 ** 2
            t5206 = 12 + 636 * t5192 + 3080 * t5195 + 792 * t5197 - 4356 * t5199 - 2068 * t5201 - 144 * t5203
            t5205 = 1782 * t5194 + 3069 * t5196 + (-2508 * t5197 - 3795 * t5199 - 714 * t5201 - 13 * t5203 + 131) * t5193
            tfunc[..., c] = -(0.27e2 / 0.8192e4) * np.sqrt(0.2e1) * ((-t5205 + t5206) * np.exp((12*1j) * (phi1 - phi2)) + (t5205 + t5206) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 301:
            t5219 = np.cos(phi)
            t5218 = t5219 ** 2
            t5222 = t5218 ** 2
            t5225 = t5222 ** 2
            t5223 = t5219 * t5222
            t5227 = t5223 ** 2
            t5228 = t5219 * t5227
            t5231 = -t5219 * t5228 + 12 * t5218 - 27 * t5222 + 27 * t5225 - 12 * t5227 + 1
            t5230 = -6 * t5228 + 2 * (18 * t5218 - 18) * t5223 + 2 * (t5218 - t5225 + 3) * t5219
            t5220 = 13 * phi1
            tfunc[..., c] = (0.135e3 / 0.4096e4*1j) * np.sqrt(0.3289e4) * np.sqrt((1 - t5219)) * np.sqrt((1 + t5219)) * ((t5230 - t5231) * np.exp((1j) * (t5220 - 6 * phi2)) + (t5230 + t5231) * np.exp((1j) * (t5220 + 6 * phi2)))

        if Bindx == 302:
            t5246 = np.cos(phi)
            t5245 = t5246 ** 2
            t5248 = t5246 * t5245
            t5251 = t5248 ** 2
            t5257 = t5251 ** 2
            t5259 = -t5246 * t5257 - 1
            t5249 = t5245 ** 2
            t5250 = t5246 * t5249
            t5255 = t5250 ** 2
            t5253 = t5249 ** 2
            t5247 = 13 * phi1
            t5240 = t5246 * t5251
            t5238 = t5246 * t5253
            t5236 = t5246 * t5255
            tfunc[..., c] = (-0.27e2 / 0.8192e4*1j) * np.sqrt(0.13e2) * np.sqrt((1 - t5246)) * ((11 * t5257 - 54 * t5236 + 154 * t5255 - 275 * t5238 + 297 * t5253 - 132 * t5240 - 132 * t5251 + 297 * t5250 - 275 * t5249 + 154 * t5248 - 54 * t5245 + 11 * t5246 + t5259) * np.exp((1j) * (t5247 - 12 * phi2)) + (13 * t5257 + 78 * t5236 + 286 * t5255 + 715 * t5238 + 1287 * t5253 + 1716 * t5240 + 1716 * t5251 + 1287 * t5250 + 715 * t5249 + 286 * t5248 + 78 * t5245 + 13 * t5246 - t5259) * np.exp((1j) * (t5247 + 12 * phi2))) * ((1 + t5246) ** (-0.1e1 / 0.2e1))

        if Bindx == 303:
            t5265 = np.sin(phi)
            t5260 = t5265 ** 2
            t5261 = t5265 * t5260
            t5263 = t5265 * t5261 ** 2
            tfunc[..., c] = -(0.435e3 / 0.8192e4) * np.exp((-14*1j) * phi1) * np.sqrt(0.44574e5) * t5263 ** 2

        if Bindx == 304:
            t5281 = np.cos(phi)
            t5297 = -6 * t5281
            t5280 = t5281 ** 2
            t5283 = t5281 * t5280
            t5284 = t5280 ** 2
            t5285 = t5281 * t5284
            t5286 = t5283 ** 2
            t5287 = t5281 * t5286
            t5288 = t5284 ** 2
            t5290 = t5285 ** 2
            t5292 = t5286 ** 2
            t5296 = t5292 * t5297 + 4 * t5283 + 38 * t5285 - 72 * t5287 + t5297 + (38 * t5288 + 4 * t5290) * t5281
            t5295 = t5287 ** 2 + 11 * t5280 - 39 * t5284 + 27 * t5286 + 27 * t5288 - 39 * t5290 + 11 * t5292 + 1
            t5282 = 7 * phi1
            tfunc[..., c] = (0.87e2 / 0.32768e5) * np.sqrt(0.345345e6) * np.sqrt(0.2e1) * ((t5295 + t5296) * np.exp((-2*1j) * (t5282 - 3 * phi2)) + (t5295 - t5296) * np.exp((-2*1j) * (t5282 + 3 * phi2)))

        if Bindx == 305:
            t5312 = np.cos(phi)
            t5311 = t5312 ** 2
            t5314 = t5312 * t5311
            t5315 = t5311 ** 2
            t5316 = t5312 * t5315
            t5318 = t5315 ** 2
            t5320 = t5316 ** 2
            t5317 = t5314 ** 2
            t5322 = t5317 ** 2
            t5323 = t5312 * t5322
            t5326 = 208 * t5314 + 572 * t5316 - 12 * t5323 + (-572 * t5318 - 208 * t5320 + 12) * t5312
            t5325 = t5312 * t5323 - 65 * t5311 - 429 * t5315 - 429 * t5317 + 429 * t5318 + 429 * t5320 + 65 * t5322 - 1
            t5313 = 7 * phi1
            tfunc[..., c] = (0.87e2 / 0.16384e5) * ((t5325 + t5326) * np.exp((-2*1j) * (t5313 - 6 * phi2)) + (t5325 - t5326) * np.exp((-2*1j) * (t5313 + 6 * phi2))) * np.sqrt(0.21e2)

        if Bindx == 306:
            t5327 = np.cos(phi)
            t5328 = t5327 ** 2
            t5329 = t5327 * t5328
            t5332 = t5329 ** 2
            t5330 = t5328 ** 2
            tfunc[..., c] = (0.435e3 / 0.4096e4*1j) * t5327 * (-21 * t5328 + 35 * t5329 - 35 * t5330 - 7 * t5332 - 1 + (21 * t5330 + t5332 + 7) * t5327) * ((1 + t5327) ** (0.13e2 / 0.2e1)) * np.sqrt(0.312018e6) * np.exp((-13*1j) * phi1) * ((1 - t5327) ** (-0.1e1 / 0.2e1))

        if Bindx == 307:
            t5346 = np.cos(phi)
            t5345 = t5346 ** 2
            t5349 = t5345 ** 2
            t5350 = t5346 * t5349
            t5355 = t5350 ** 2
            t5357 = 7 * t5346 * t5355
            t5353 = t5349 ** 2
            t5348 = t5346 * t5345
            t5351 = t5348 ** 2
            t5347 = 13 * phi1
            t5340 = t5346 * t5351
            t5338 = t5346 * t5353
            tfunc[..., c] = (0.87e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 + t5346) ** (0.7e1 / 0.2e1)) * np.sqrt(0.49335e5) * ((1 - t5346) ** (-0.1e1 / 0.2e1)) * ((t5357 - 67 * t5355 + 285 * t5338 - 705 * t5353 + 1110 * t5340 - 1134 * t5351 + 714 * t5350 - 210 * t5349 - 45 * t5348 + 65 * t5345 - 23 * t5346 + 3) * np.exp((-1*1j) * (t5347 - 6 * phi2)) + (t5357 + 11 * t5355 - 27 * t5338 - 47 * t5353 + 38 * t5340 + 78 * t5351 - 22 * t5350 - 62 * t5349 + 3 * t5348 + 23 * t5345 + t5346 - 3) * np.exp((-1*1j) * (t5347 + 6 * phi2)))

        if Bindx == 308:
            t5373 = np.cos(phi)
            t5372 = t5373 ** 2
            t5375 = t5373 * t5372
            t5378 = t5375 ** 2
            t5379 = t5373 * t5378
            t5387 = -1287 * t5378 + (-1716 + 7 * t5379) * t5379
            t5384 = t5378 ** 2
            t5376 = t5372 ** 2
            t5377 = t5373 * t5376
            t5382 = t5377 ** 2
            t5380 = t5376 ** 2
            t5374 = 13 * phi1
            t5365 = t5373 * t5380
            t5363 = t5373 * t5382
            t5361 = t5373 * t5384
            tfunc[..., c] = (0.87e2 / 0.8192e4*1j) * np.sqrt((1 + t5373)) * np.sqrt(0.3e1) * ((1 - t5373) ** (-0.1e1 / 0.2e1)) * ((-85 * t5361 + 468 * t5384 - 1534 * t5363 + 3289 * t5382 - 4719 * t5365 + 4290 * t5380 + 2717 * t5377 - 2288 * t5376 + 1170 * t5375 - 377 * t5372 + 71 * t5373 - 6 + t5387) * np.exp((-1*1j) * (t5374 - 12 * phi2)) + (71 * t5361 + 312 * t5384 + 754 * t5363 + 1001 * t5382 + 429 * t5365 - 858 * t5380 - 143 * t5377 + 572 * t5376 + 546 * t5375 + 247 * t5372 + 59 * t5373 + 6 + t5387) * np.exp((-1*1j) * (t5374 + 12 * phi2)))

        if Bindx == 309:
            t5393 = np.sin(phi)
            t5389 = t5393 ** 2
            t5390 = t5393 * t5389
            t5391 = t5390 ** 2
            t5388 = np.cos(phi)
            tfunc[..., c] = (0.145e3 / 0.4096e4) * np.exp((-12*1j) * phi1) * np.sqrt(0.52003e5) * t5391 ** 2 * (27 * t5388 ** 2 - 1)

        if Bindx == 310:
            t5409 = np.cos(phi)
            t5408 = t5409 ** 2
            t5411 = t5409 * t5408
            t5412 = t5408 ** 2
            t5413 = t5409 * t5412
            t5414 = t5411 ** 2
            t5415 = t5409 * t5414
            t5416 = t5412 ** 2
            t5418 = t5413 ** 2
            t5420 = t5414 ** 2
            t5424 = -752 * t5411 + 3708 * t5413 - 5760 * t5415 + (2372 * t5416 + 1392 * t5418 - 972 * t5420 + 12) * t5409
            t5423 = 189 * t5415 ** 2 + 435 * t5408 - 1161 * t5412 - 729 * t5414 + 5049 * t5416 - 5079 * t5418 + 1325 * t5420 - 29
            t5410 = 2 * phi1
            tfunc[..., c] = (0.29e2 / 0.16384e5) * ((t5423 + t5424) * np.exp((-6*1j) * (t5410 - phi2)) + (t5423 - t5424) * np.exp((-6*1j) * (t5410 + phi2))) * np.sqrt(0.16445e5)

        if Bindx == 311:
            t5440 = np.cos(phi)
            t5439 = t5440 ** 2
            t5441 = t5440 * t5439
            t5442 = t5439 ** 2
            t5443 = t5440 * t5442
            t5444 = t5441 ** 2
            t5445 = t5440 * t5444
            t5446 = t5442 ** 2
            t5448 = t5443 ** 2
            t5450 = t5444 ** 2
            t5454 = -11024 * t5441 + 10296 * t5443 + 41184 * t5445 + (-19448 * t5446 - 21840 * t5448 - 1944 * t5450 - 1320) * t5440
            t5453 = 189 * t5445 ** 2 + 5343 * t5439 + 9009 * t5442 - 36465 * t5444 - 14157 * t5446 + 31317 * t5448 + 8723 * t5450 + 137
            tfunc[..., c] = (0.29e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t5453 + t5454) * np.exp((-12*1j) * (phi1 - phi2)) + (t5453 - t5454) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 312:
            t5455 = np.cos(phi)
            tfunc[..., c] = (0.145e3 / 0.4096e4*1j) * (9 * t5455 ** 2 - 1) * t5455 * ((1 + t5455) ** (0.11e2 / 0.2e1)) * np.sqrt(0.4056234e7) * np.exp((-11*1j) * phi1) * ((1 - t5455) ** (0.11e2 / 0.2e1))

        if Bindx == 313:
            t5469 = np.cos(phi)
            t5468 = t5469 ** 2
            t5471 = t5469 * t5468
            t5474 = t5471 ** 2
            t5481 = 819 * t5474 ** 2
            t5472 = t5468 ** 2
            t5473 = t5469 * t5472
            t5478 = t5473 ** 2
            t5476 = t5472 ** 2
            t5470 = 11 * phi1
            t5463 = t5469 * t5474
            t5461 = t5469 * t5476
            t5459 = t5469 * t5478
            tfunc[..., c] = (0.29e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 + t5469) ** (0.5e1 / 0.2e1)) * np.sqrt(0.3795e4) * ((1 - t5469) ** (-0.1e1 / 0.2e1)) * ((t5481 - 6318 * t5459 + 20384 * t5478 - 34250 * t5461 + 28035 * t5476 - 1068 * t5463 - 18984 * t5474 + 15372 * t5473 - 2775 * t5472 - 2310 * t5471 + 1224 * t5468 - 98 * t5469 - 31) * np.exp((-1*1j) * (t5470 - 6 * phi2)) + (t5481 + 1404 * t5459 - 2782 * t5478 - 5452 * t5461 + 3417 * t5476 + 8216 * t5463 - 1780 * t5474 - 5976 * t5473 + 373 * t5472 + 2092 * t5471 - 78 * t5468 - 284 * t5469 + 31) * np.exp((-1*1j) * (t5470 + 6 * phi2)))

        if Bindx == 314:
            t5498 = np.cos(phi)
            t5497 = t5498 ** 2
            t5501 = t5497 ** 2
            t5500 = t5498 * t5497
            t5503 = t5500 ** 2
            t5505 = t5501 ** 2
            t5502 = t5498 * t5501
            t5507 = t5502 ** 2
            t5509 = t5503 ** 2
            t5504 = t5498 * t5503
            t5511 = t5504 ** 2
            t5514 = 38 + 1026 * t5497 - 1394 * t5501 - 7062 * t5503 + 10098 * t5505 + 2662 * t5507 - 4774 * t5509 - 594 * t5511
            t5513 = -1199 * t5500 + 6237 * t5502 - 627 * t5504 + (-10637 * t5505 + 4131 * t5507 + 2351 * t5509 + 63 * t5511 - 319) * t5498
            t5499 = 11 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.39e2) * ((1 + t5498) ** (-0.1e1 / 0.2e1)) * ((1 - t5498) ** (-0.1e1 / 0.2e1)) * ((t5513 + t5514) * np.exp((-1*1j) * (t5499 - 12 * phi2)) + (t5513 - t5514) * np.exp((-1*1j) * (t5499 + 12 * phi2)))

        if Bindx == 315:
            t5522 = np.sin(phi)
            t5518 = t5522 ** 2
            t5520 = t5522 * t5518 ** 2
            t5515 = np.cos(phi)
            t5516 = t5515 ** 2
            tfunc[..., c] = -(0.29e2 / 0.8192e4) * np.exp((-10*1j) * phi1) * np.sqrt(0.4056234e7) * t5520 ** 2 * (1 + (-50 + 225 * t5516) * t5516)

        if Bindx == 316:
            t5538 = np.cos(phi)
            t5537 = t5538 ** 2
            t5540 = t5538 * t5537
            t5541 = t5537 ** 2
            t5542 = t5538 * t5541
            t5543 = t5540 ** 2
            t5544 = t5538 * t5543
            t5545 = t5541 ** 2
            t5547 = t5542 ** 2
            t5549 = t5543 ** 2
            t5553 = -7532 * t5540 + 27822 * t5542 - 34152 * t5544 + (-5714 * t5545 + 36500 * t5547 - 17550 * t5549 + 626) * t5538
            t5552 = 4095 * t5544 ** 2 + 37 * t5537 + 6039 * t5541 - 38331 * t5543 + 81477 * t5545 - 68201 * t5547 + 14885 * t5549 - 1
            t5539 = 5 * phi1
            tfunc[..., c] = (0.29e2 / 0.32768e5) * np.sqrt(0.3795e4) * np.sqrt(0.2e1) * ((t5552 + t5553) * np.exp((-2*1j) * (t5539 - 3 * phi2)) + (t5552 - t5553) * np.exp((-2*1j) * (t5539 + 3 * phi2)))

        if Bindx == 317:
            t5569 = np.cos(phi)
            t5568 = t5569 ** 2
            t5571 = t5569 * t5568
            t5572 = t5568 ** 2
            t5573 = t5569 * t5572
            t5574 = t5571 ** 2
            t5575 = t5569 * t5574
            t5576 = t5572 ** 2
            t5578 = t5573 ** 2
            t5580 = t5574 ** 2
            t5584 = 80 * t5571 - 3828 * t5573 + 4224 * t5575 + (3124 * t5576 - 3280 * t5578 - 540 * t5580 + 220) * t5569
            t5583 = 63 * t5575 ** 2 - 527 * t5568 + 2013 * t5572 + 1485 * t5574 - 6765 * t5576 + 1859 * t5578 + 1903 * t5580 - 31
            t5570 = 5 * phi1
            tfunc[..., c] = (0.145e3 / 0.16384e5) * ((t5583 + t5584) * np.exp((-2*1j) * (t5570 - 6 * phi2)) + (t5583 - t5584) * np.exp((-2*1j) * (t5570 + 6 * phi2))) * np.sqrt(0.39e2)

        if Bindx == 318:
            t5585 = np.cos(phi)
            t5586 = t5585 ** 2
            tfunc[..., c] = (-0.29e2 / 0.2048e4*1j) * (3 + (-50 + 135 * t5586) * t5586) * t5585 * ((1 + t5585) ** (0.9e1 / 0.2e1)) * np.sqrt(0.3380195e7) * np.exp((-9*1j) * phi1) * ((1 - t5585) ** (0.9e1 / 0.2e1))

        if Bindx == 319:
            t5602 = np.cos(phi)
            t5601 = t5602 ** 2
            t5604 = t5602 * t5601
            t5607 = t5604 ** 2
            t5613 = t5607 ** 2
            t5615 = 12285 * t5602 * t5613
            t5605 = t5601 ** 2
            t5606 = t5602 * t5605
            t5611 = t5606 ** 2
            t5609 = t5605 ** 2
            t5603 = 3 * phi1
            t5596 = t5602 * t5607
            t5594 = t5602 * t5609
            t5592 = t5602 * t5611
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * ((1 + t5602) ** (0.3e1 / 0.2e1)) * np.sqrt(0.253e3) * ((1 - t5602) ** (-0.1e1 / 0.2e1)) * ((t5615 - 71955 * t5613 + 152230 * t5592 - 97010 * t5611 - 123665 * t5594 + 229431 * t5609 - 70908 * t5596 - 92652 * t5607 + 72459 * t5606 + 1035 * t5605 - 14346 * t5604 + 2558 * t5601 + 617 * t5602 - 79) * np.exp((-3*1j) * (t5603 - 2 * phi2)) + (t5615 + 22815 * t5613 - 37310 * t5592 - 83690 * t5611 + 39235 * t5594 + 120129 * t5609 - 15204 * t5596 - 84684 * t5607 + 819 * t5606 + 29745 * t5605 - 126 * t5604 - 4394 * t5601 + 301 * t5602 + 79) * np.exp((-3*1j) * (t5603 + 2 * phi2)))

        if Bindx == 320:
            t5632 = np.cos(phi)
            t5631 = t5632 ** 2
            t5635 = t5631 ** 2
            t5634 = t5632 * t5631
            t5637 = t5634 ** 2
            t5639 = t5635 ** 2
            t5636 = t5632 * t5635
            t5641 = t5636 ** 2
            t5643 = t5637 ** 2
            t5638 = t5632 * t5637
            t5645 = t5638 ** 2
            t5648 = -74 - 518 * t5631 + 5542 * t5635 - 8646 * t5637 - 4686 * t5639 + 14718 * t5641 - 4878 * t5643 - 1458 * t5645
            t5647 = -1677 * t5634 - 3333 * t5636 + 16071 * t5638 + (-12859 * t5639 - 3127 * t5641 + 4313 * t5643 + 189 * t5645 + 423) * t5632
            t5633 = 3 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.65e2) * np.sqrt(0.2e1) * ((1 + t5632) ** (-0.1e1 / 0.2e1)) * ((1 - t5632) ** (-0.1e1 / 0.2e1)) * ((t5647 + t5648) * np.exp((-3*1j) * (t5633 - 4 * phi2)) + (t5647 - t5648) * np.exp((-3*1j) * (t5633 + 4 * phi2)))

        if Bindx == 321:
            t5656 = np.sin(phi)
            t5653 = t5656 ** 2
            t5654 = t5653 ** 2
            t5649 = np.cos(phi)
            t5650 = t5649 ** 2
            t5651 = t5650 ** 2
            tfunc[..., c] = (0.29e2 / 0.4096e4) * np.exp((-8*1j) * phi1) * np.sqrt(0.881790e6) * t5654 ** 2 * (-575 * t5651 - 1 + (1035 * t5651 + 69) * t5650)

        if Bindx == 322:
            t5672 = np.cos(phi)
            t5671 = t5672 ** 2
            t5674 = t5672 * t5671
            t5675 = t5671 ** 2
            t5676 = t5672 * t5675
            t5677 = t5674 ** 2
            t5678 = t5672 * t5677
            t5679 = t5675 ** 2
            t5681 = t5676 ** 2
            t5683 = t5677 ** 2
            t5687 = -26848 * t5674 + 59784 * t5676 + 165120 * t5678 + (-719624 * t5679 + 842720 * t5681 - 322920 * t5683 + 1768) * t5672
            t5686 = 94185 * t5678 ** 2 - 17105 * t5671 + 164979 * t5675 - 631173 * t5677 + 1090533 * t5679 - 783955 * t5681 + 82225 * t5683 + 311
            t5673 = 4 * phi1
            tfunc[..., c] = (0.29e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.33e2) * ((t5686 + t5687) * np.exp((-2*1j) * (t5673 - 3 * phi2)) + (t5686 - t5687) * np.exp((-2*1j) * (t5673 + 3 * phi2)))

        if Bindx == 323:
            t5703 = np.cos(phi)
            t5702 = t5703 ** 2
            t5705 = t5703 * t5702
            t5706 = t5702 ** 2
            t5707 = t5703 * t5706
            t5708 = t5705 ** 2
            t5709 = t5703 * t5708
            t5710 = t5706 ** 2
            t5712 = t5707 ** 2
            t5714 = t5708 ** 2
            t5718 = 608 * t5705 - 528 * t5707 - 2112 * t5709 + (3344 * t5710 - 800 * t5712 - 432 * t5714 - 80) * t5703
            t5717 = 63 * t5709 ** 2 - 19 * t5702 - 957 * t5706 + 2805 * t5708 - 1551 * t5710 - 1441 * t5712 + 1081 * t5714 + 19
            t5704 = 2 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4) * ((t5717 + t5718) * np.exp((-4*1j) * (t5704 - 3 * phi2)) + (t5717 - t5718) * np.exp((-4*1j) * (t5704 + 3 * phi2))) * np.sqrt(0.4485e4)

        if Bindx == 324:
            t5719 = np.cos(phi)
            t5720 = t5719 ** 2
            t5721 = t5720 ** 2
            tfunc[..., c] = (0.29e2 / 0.2048e4*1j) * (-805 * t5721 - 7 + (1035 * t5721 + 161) * t5720) * t5719 * ((1 + t5719) ** (0.7e1 / 0.2e1)) * np.sqrt(0.692835e6) * np.exp((-7*1j) * phi1) * ((1 - t5719) ** (0.7e1 / 0.2e1))

        if Bindx == 325:
            t5738 = np.cos(phi)
            t5737 = t5738 ** 2
            t5740 = t5738 * t5737
            t5743 = t5740 ** 2
            t5744 = t5738 * t5743
            t5752 = 148005 * t5744 ** 2
            t5749 = t5743 ** 2
            t5741 = t5737 ** 2
            t5742 = t5738 * t5741
            t5747 = t5742 ** 2
            t5745 = t5741 ** 2
            t5739 = 7 * phi1
            t5730 = t5738 * t5745
            t5728 = t5738 * t5747
            t5726 = t5738 * t5749
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt((1 + t5738)) * np.sqrt(0.21e2) * ((1 - t5738) ** (-0.1e1 / 0.2e1)) * ((-592020 * t5726 + 1001880 * t5728 - 152812 * t5730 - 3813 * t5737 + 3372 * t5738 - 67048 * t5740 + 95307 * t5741 + 342228 * t5742 - 639777 * t5743 - 543792 * t5744 + 1650693 * t5745 - 1719135 * t5747 + 476905 * t5749 + 7 + t5752) * np.exp((-1*1j) * (t5739 - 6 * phi2)) + (296010 * t5726 - 1067660 * t5728 + 1521542 * t5730 - 2945 * t5737 + 3386 * t5738 - 67916 * t5740 + 39657 * t5741 + 397878 * t5742 - 100329 * t5743 - 1083240 * t5744 - 23661 * t5745 + 350405 * t5747 - 411125 * t5749 - 7 + t5752) * np.exp((-1*1j) * (t5739 + 6 * phi2)))

        if Bindx == 326:
            t5769 = np.cos(phi)
            t5768 = t5769 ** 2
            t5772 = t5768 ** 2
            t5771 = t5769 * t5768
            t5774 = t5771 ** 2
            t5776 = t5772 ** 2
            t5773 = t5769 * t5772
            t5778 = t5773 ** 2
            t5780 = t5774 ** 2
            t5775 = t5769 * t5774
            t5782 = t5775 ** 2
            t5785 = 2 - 18 * t5768 - 14 * t5772 + 270 * t5774 - 522 * t5776 + 314 * t5778 + 22 * t5780 - 54 * t5782
            t5784 = 71 * t5771 - 225 * t5773 + 171 * t5775 + (193 * t5776 - 315 * t5778 + 101 * t5780 + 9 * t5782 - 5) * t5769
            t5770 = 7 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.345345e6) * np.sqrt(0.2e1) * ((1 + t5769) ** (-0.1e1 / 0.2e1)) * ((1 - t5769) ** (-0.1e1 / 0.2e1)) * ((t5784 + t5785) * np.exp((-1*1j) * (t5770 - 12 * phi2)) + (t5784 - t5785) * np.exp((-1*1j) * (t5770 + 12 * phi2)))

        if Bindx == 327:
            t5794 = np.sin(phi)
            t5791 = t5794 ** 2
            t5792 = t5794 * t5791
            t5786 = np.cos(phi)
            t5787 = t5786 ** 2
            t5788 = t5787 ** 2
            tfunc[..., c] = -(0.29e2 / 0.8192e4) * np.exp((-6*1j) * phi1) * np.sqrt(0.3233230e7) * t5792 ** 2 * (-84 * t5787 + 1 + (-3220 * t5787 + 966 + 3105 * t5788) * t5788)

        if Bindx == 328:
            t5810 = np.cos(phi)
            t5809 = t5810 ** 2
            t5811 = t5810 * t5809
            t5812 = t5809 ** 2
            t5813 = t5810 * t5812
            t5814 = t5811 ** 2
            t5815 = t5810 * t5814
            t5816 = t5812 ** 2
            t5818 = t5813 ** 2
            t5820 = t5814 ** 2
            t5824 = 520532 * t5811 - 4172562 * t5813 + 15354648 * t5815 + (-27848722 * t5816 + 24151380 * t5818 - 7992270 * t5820 - 21198) * t5810
            t5823 = 3108105 * t5815 ** 2 - 230253 * t5809 + 2425617 * t5812 - 8886957 * t5814 + 13338963 * t5816 - 5787375 * t5818 - 3963245 * t5820 + 3337
            tfunc[..., c] = (0.29e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t5823 + t5824) * np.exp((-6*1j) * (phi1 - phi2)) + (t5823 - t5824) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 329:
            t5840 = np.cos(phi)
            t5839 = t5840 ** 2
            t5841 = t5840 * t5839
            t5842 = t5839 ** 2
            t5843 = t5840 * t5842
            t5844 = t5841 ** 2
            t5845 = t5840 * t5844
            t5846 = t5842 ** 2
            t5848 = t5843 ** 2
            t5850 = t5844 ** 2
            t5854 = -752 * t5841 + 3708 * t5843 - 5760 * t5845 + (2372 * t5846 + 1392 * t5848 - 972 * t5850 + 12) * t5840
            t5853 = 189 * t5845 ** 2 + 435 * t5839 - 1161 * t5842 - 729 * t5844 + 5049 * t5846 - 5079 * t5848 + 1325 * t5850 - 29
            tfunc[..., c] = (0.29e2 / 0.16384e5) * ((t5853 + t5854) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (t5853 - t5854) * np.exp((-6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.16445e5)

        if Bindx == 330:
            t5855 = np.cos(phi)
            t5856 = t5855 ** 2
            t5857 = t5856 ** 2
            tfunc[..., c] = (-0.87e2 / 0.4096e4*1j) * (-140 * t5856 + 5 + (-2300 * t5856 + 966 + 1725 * t5857) * t5857) * t5855 * ((1 + t5855) ** (0.5e1 / 0.2e1)) * np.sqrt(0.646646e6) * np.exp((-5*1j) * phi1) * ((1 - t5855) ** (0.5e1 / 0.2e1))

        if Bindx == 331:
            t5876 = np.cos(phi)
            t5875 = t5876 ** 2
            t5879 = t5875 ** 2
            t5878 = t5876 * t5875
            t5881 = t5878 ** 2
            t5883 = t5879 ** 2
            t5880 = t5876 * t5879
            t5885 = t5880 ** 2
            t5887 = t5881 ** 2
            t5882 = t5876 * t5881
            t5889 = t5882 ** 2
            t5892 = 17175 * t5875 - 222785 * t5879 + 1148347 * t5881 - 2946015 * t5883 + 3989557 * t5885 - 2726075 * t5887 + 740025 * t5889 - 229
            t5891 = -46785 * t5878 + 291903 * t5880 - 673485 * t5882 + (430705 * t5883 + 554829 * t5885 - 904475 * t5887 + 345345 * t5889 + 1963) * t5876
            t5877 = 5 * phi1
            tfunc[..., c] = (0.87e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 + t5876) ** (-0.1e1 / 0.2e1)) * ((1 - t5876) ** (-0.1e1 / 0.2e1)) * ((t5891 - t5892) * np.exp((-1*1j) * (t5877 - 6 * phi2)) + (t5891 + t5892) * np.exp((-1*1j) * (t5877 + 6 * phi2)))

        if Bindx == 332:
            t5909 = np.cos(phi)
            t5908 = t5909 ** 2
            t5912 = t5908 ** 2
            t5911 = t5909 * t5908
            t5914 = t5911 ** 2
            t5916 = t5912 ** 2
            t5913 = t5909 * t5912
            t5918 = t5913 ** 2
            t5920 = t5914 ** 2
            t5915 = t5909 * t5914
            t5922 = t5915 ** 2
            t5925 = -2 + 42 * t5908 - 218 * t5912 + 402 * t5914 - 198 * t5916 - 226 * t5918 + 290 * t5920 - 90 * t5922
            t5924 = -5 * t5911 + 207 * t5913 - 657 * t5915 + (833 * t5916 - 447 * t5918 + 53 * t5920 + 21 * t5922 - 5) * t5909
            t5910 = 5 * phi1
            tfunc[..., c] = (0.435e3 / 0.8192e4*1j) * np.sqrt(0.3289e4) * ((1 + t5909) ** (-0.1e1 / 0.2e1)) * ((1 - t5909) ** (-0.1e1 / 0.2e1)) * ((t5924 + t5925) * np.exp((-1*1j) * (t5910 - 12 * phi2)) + (t5924 - t5925) * np.exp((-1*1j) * (t5910 + 12 * phi2)))

        if Bindx == 333:
            t5934 = np.sin(phi)
            t5932 = t5934 ** 2
            t5926 = np.cos(phi)
            t5927 = t5926 ** 2
            t5928 = t5927 ** 2
            t5930 = t5928 ** 2
            tfunc[..., c] = (0.87e2 / 0.4096e4) * np.exp((-4*1j) * phi1) * np.sqrt(0.85085e5) * t5932 ** 2 * (-1330 * t5928 - 10925 * t5930 - 1 + (6118 * t5928 + 6555 * t5930 + 95) * t5927)

        if Bindx == 334:
            t5950 = np.cos(phi)
            t5949 = t5950 ** 2
            t5953 = t5949 ** 2
            t5952 = t5950 * t5949
            t5955 = t5952 ** 2
            t5956 = t5950 * t5955
            t5957 = t5953 ** 2
            t5954 = t5950 * t5953
            t5959 = t5954 ** 2
            t5961 = t5955 ** 2
            t5965 = 345345 * t5956 ** 2 - 2449 * t5949 + 21251 * t5953 - 2509 * t5955 - 338899 * t5957 + 947485 * t5959 - 970255 * t5961 + 31
            t5964 = 64624 * t5952 - 483996 * t5954 + 1573504 * t5956 + (-2522916 * t5957 + 1963280 * t5959 - 592020 * t5961 - 2476) * t5950
            t5951 = 2 * phi1
            tfunc[..., c] = (0.87e2 / 0.16384e5) * ((t5964 + t5965) * np.exp((-2*1j) * (t5951 - 3 * phi2)) + (-t5964 + t5965) * np.exp((-2*1j) * (t5951 + 3 * phi2))) * np.sqrt(0.19e2)

        if Bindx == 335:
            t5981 = np.cos(phi)
            t5980 = t5981 ** 2
            t5982 = t5981 * t5980
            t5983 = t5980 ** 2
            t5984 = t5981 * t5983
            t5985 = t5982 ** 2
            t5986 = t5981 * t5985
            t5987 = t5983 ** 2
            t5989 = t5984 ** 2
            t5991 = t5985 ** 2
            t5995 = -48 * t5982 + 40 * t5984 + 160 * t5986 + (-360 * t5987 + 272 * t5989 - 72 * t5991 + 8) * t5981
            t5994 = 21 * t5986 ** 2 - 25 * t5980 + 169 * t5983 - 425 * t5985 + 475 * t5987 - 211 * t5989 - 5 * t5991 + 1
            tfunc[..., c] = (0.87e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.312455e6) * ((t5994 + t5995) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t5994 - t5995) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 336:
            t5996 = np.cos(phi)
            t5997 = t5996 ** 2
            t5998 = t5997 ** 2
            t6000 = t5998 ** 2
            tfunc[..., c] = (0.29e2 / 0.4096e4*1j) * (-26334 * t5998 - 120175 * t6000 - 99 + (86526 * t5998 + 58995 * t6000 + 3135) * t5997) * t5996 * ((1 + t5996) ** (0.3e1 / 0.2e1)) * np.sqrt(0.15470e5) * np.exp((-3*1j) * phi1) * ((1 - t5996) ** (0.3e1 / 0.2e1))

        if Bindx == 337:
            t6018 = np.cos(phi)
            t6017 = t6018 ** 2
            t6020 = t6017 ** 2
            t6019 = t6018 * t6017
            t6022 = t6019 ** 2
            t6024 = t6020 ** 2
            t6021 = t6018 * t6020
            t6026 = t6021 ** 2
            t6028 = t6022 ** 2
            t6023 = t6018 * t6022
            t6030 = t6023 ** 2
            t6033 = 10043 * t6017 - 136357 * t6020 + 699343 * t6022 - 1726427 * t6024 + 2214049 * t6026 - 1423815 * t6028 + 363285 * t6030 - 121
            t6032 = 13093 * t6019 - 123587 * t6021 + 551233 * t6023 + (-1303597 * t6024 + 1667615 * t6026 - 1086865 * t6028 + 282555 * t6030 - 447) * t6018
            tfunc[..., c] = (0.29e2 / 0.16384e5*1j) * np.sqrt(0.209e3) * np.sqrt(0.2e1) * ((1 + t6018) ** (-0.1e1 / 0.2e1)) * ((1 - t6018) ** (-0.1e1 / 0.2e1)) * ((t6032 - t6033) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t6032 + t6033) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 338:
            t6050 = np.cos(phi)
            t6049 = t6050 ** 2
            t6052 = t6049 ** 2
            t6051 = t6050 * t6049
            t6054 = t6051 ** 2
            t6056 = t6052 ** 2
            t6053 = t6050 * t6052
            t6058 = t6053 ** 2
            t6060 = t6054 ** 2
            t6055 = t6050 * t6054
            t6062 = t6055 ** 2
            t6065 = 2 - 58 * t6049 + 746 * t6052 - 2930 * t6054 + 5350 * t6056 - 5102 * t6058 + 2478 * t6060 - 486 * t6062
            t6064 = -701 * t6051 + 2191 * t6053 - 3065 * t6055 + (1745 * t6056 + 185 * t6058 - 619 * t6060 + 189 * t6062 + 75) * t6050
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.28405e5) * ((1 + t6050) ** (-0.1e1 / 0.2e1)) * ((1 - t6050) ** (-0.1e1 / 0.2e1)) * ((t6064 + t6065) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t6064 - t6065) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 339:
            t6067 = np.cos(phi)
            t6068 = t6067 ** 2
            t6069 = t6068 ** 2
            t6071 = t6069 ** 2
            t6070 = t6068 * t6069
            t6066 = np.sin(phi)
            tfunc[..., c] = -(0.29e2 / 0.8192e4) * np.exp((-2*1j) * phi1) * np.sqrt(0.2730e4) * t6066 ** 2 * (53295 * t6069 + 735471 * t6071 + 33 + (-298452 + 334305 * t6070) * t6070 + (-817190 * t6071 - 3366) * t6068)

        if Bindx == 340:
            t6089 = np.cos(phi)
            t6088 = t6089 ** 2
            t6090 = t6089 * t6088
            t6091 = t6088 ** 2
            t6092 = t6089 * t6091
            t6093 = t6090 ** 2
            t6094 = t6089 * t6093
            t6095 = t6091 ** 2
            t6097 = t6092 ** 2
            t6099 = t6093 ** 2
            t6103 = -9596 * t6090 + 74182 * t6092 - 241480 * t6094 + (377798 * t6095 - 281980 * t6097 + 80730 * t6099 + 346) * t6089
            t6102 = 94185 * t6094 ** 2 + 1955 * t6088 - 27487 * t6091 + 147411 * t6093 - 383021 * t6095 + 518305 * t6097 - 351325 * t6099 - 23
            tfunc[..., c] = (0.29e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * ((t6102 - t6103) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t6102 + t6103) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 341:
            t6119 = np.cos(phi)
            t6118 = t6119 ** 2
            t6121 = t6118 ** 2
            t6120 = t6119 * t6118
            t6123 = t6120 ** 2
            t6124 = t6119 * t6123
            t6125 = t6121 ** 2
            t6122 = t6119 * t6121
            t6127 = t6122 ** 2
            t6129 = t6123 ** 2
            t6133 = 63 * t6124 ** 2 - 31 * t6118 + 77 * t6121 + 45 * t6123 - 365 * t6125 + 499 * t6127 - 289 * t6129 + 1
            t6132 = 208 * t6120 - 740 * t6122 + 1280 * t6124 + (-1180 * t6125 + 560 * t6127 - 108 * t6129 - 20) * t6119
            tfunc[..., c] = (0.29e2 / 0.16384e5) * ((t6132 + t6133) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (-t6132 + t6133) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.1448655e7)

        if Bindx == 342:
            t6134 = np.cos(phi)
            t6135 = t6134 ** 2
            t6137 = t6135 ** 2
            t6138 = t6134 * t6137
            t6136 = t6134 * t6135
            t6139 = t6136 ** 2
            t6147 = -1062347 * t6137 ** 2 + 965770 * t6138 ** 2 - 429 + (554268 - 334305 * t6139) * t6139
            tfunc[..., c] = (0.29e2 / 0.2048e4*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.210e3) * np.sqrt((1 + t6134)) * t6134 * (-t6147 * t6134 + 14586 * t6135 - 14586 * t6136 - 138567 * t6137 + 138567 * t6138 + t6147) * ((1 - t6134) ** (-0.1e1 / 0.2e1))

        if Bindx == 343:
            t6164 = np.cos(phi)
            t6163 = t6164 ** 2
            t6166 = t6163 ** 2
            t6165 = t6164 * t6163
            t6168 = t6165 ** 2
            t6170 = t6166 ** 2
            t6167 = t6164 * t6166
            t6172 = t6167 ** 2
            t6174 = t6168 ** 2
            t6169 = t6164 * t6168
            t6176 = t6169 ** 2
            t6179 = 1 - 87 * t6163 + 1221 * t6166 - 6371 * t6168 + 15747 * t6170 - 19941 * t6172 + 12535 * t6174 - 3105 * t6176
            t6178 = 843 * t6165 - 7185 * t6167 + 27367 * t6169 + (-54231 * t6170 + 58305 * t6172 - 32315 * t6174 + 7245 * t6176 - 29) * t6164
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.138567e6) * np.sqrt(0.2e1) * ((1 + t6164) ** (-0.1e1 / 0.2e1)) * ((1 - t6164) ** (-0.1e1 / 0.2e1)) * ((t6178 + t6179) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t6178 - t6179) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 344:
            t6196 = np.cos(phi)
            t6195 = t6196 ** 2
            t6198 = t6195 ** 2
            t6197 = t6196 * t6195
            t6200 = t6197 ** 2
            t6202 = t6198 ** 2
            t6199 = t6196 * t6198
            t6204 = t6199 ** 2
            t6206 = t6200 ** 2
            t6201 = t6196 * t6200
            t6208 = t6201 ** 2
            t6211 = 2 - 66 * t6195 + 354 * t6198 - 850 * t6200 + 1110 * t6202 - 822 * t6204 + 326 * t6206 - 54 * t6208
            t6210 = 129 * t6197 - 543 * t6199 + 1165 * t6201 + (-1425 * t6202 + 1011 * t6204 - 389 * t6206 + 63 * t6208 - 11) * t6196
            tfunc[..., c] = (0.29e2 / 0.4096e4*1j) * np.sqrt(0.111435e6) * ((1 + t6196) ** (-0.1e1 / 0.2e1)) * ((1 - t6196) ** (-0.1e1 / 0.2e1)) * ((t6210 + t6211) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (t6210 - t6211) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 345:
            t6212 = np.cos(phi)
            t6213 = t6212 ** 2
            t6214 = t6213 ** 2
            t6215 = t6213 * t6214
            t6218 = t6215 ** 2
            t6216 = t6214 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t6218 - 0.421936515e9 / 0.2048e4 * t6216 + 0.140645505e9 / 0.2048e4 * t6215 - 0.22207185e8 / 0.2048e4 * t6214 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t6218 + 0.646969323e9 / 0.2048e4 * t6216 + 0.1306305e7 / 0.2048e4) * t6213

        if Bindx == 346:
            t6220 = np.cos(phi)
            t6221 = t6220 ** 2
            t6222 = t6221 ** 2
            t6223 = t6221 * t6222
            t6226 = t6223 ** 2
            t6224 = t6222 ** 2
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t6222 + 6371 * t6223 - 15747 * t6224 - 12535 * t6226 - 1 + (19941 * t6224 + 3105 * t6226 + 87) * t6221) * np.cos((6 * phi2))

        if Bindx == 347:
            t6228 = np.cos(phi)
            t6229 = t6228 ** 2
            t6230 = t6229 ** 2
            t6231 = t6229 * t6230
            t6234 = t6231 ** 2
            t6232 = t6230 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.52003e5) * np.sqrt(0.2e1) * (-177 * t6230 + 425 * t6231 - 555 * t6232 - 163 * t6234 - 1 + (411 * t6232 + 27 * t6234 + 33) * t6229) * np.cos((12 * phi2))

        if Bindx == 348:
            t6236 = np.cos(phi)
            t6237 = t6236 ** 2
            t6238 = t6237 ** 2
            t6240 = t6238 ** 2
            t6239 = t6237 * t6238
            tfunc[..., c] = (-0.29e2 / 0.2048e4*1j) * np.exp((1j) * phi1) * np.sqrt(0.210e3) * np.sqrt((1 - t6236)) * np.sqrt((1 + t6236)) * t6236 * (138567 * t6238 + 1062347 * t6240 + 429 + (-554268 + 334305 * t6239) * t6239 + (-965770 * t6240 - 14586) * t6237)

        if Bindx == 349:
            t6259 = np.cos(phi)
            t6258 = t6259 ** 2
            t6261 = t6258 ** 2
            t6260 = t6259 * t6258
            t6263 = t6260 ** 2
            t6265 = t6261 ** 2
            t6262 = t6259 * t6261
            t6267 = t6262 ** 2
            t6269 = t6263 ** 2
            t6264 = t6259 * t6263
            t6271 = t6264 ** 2
            t6274 = 1 - 87 * t6258 + 1221 * t6261 - 6371 * t6263 + 15747 * t6265 - 19941 * t6267 + 12535 * t6269 - 3105 * t6271
            t6273 = 843 * t6260 - 7185 * t6262 + 27367 * t6264 + (-54231 * t6265 + 58305 * t6267 - 32315 * t6269 + 7245 * t6271 - 29) * t6259
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.138567e6) * np.sqrt(0.2e1) * ((1 + t6259) ** (-0.1e1 / 0.2e1)) * ((1 - t6259) ** (-0.1e1 / 0.2e1)) * ((t6273 + t6274) * np.exp((1j) * (phi1 - 6 * phi2)) + (t6273 - t6274) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 350:
            t6291 = np.cos(phi)
            t6290 = t6291 ** 2
            t6293 = t6290 ** 2
            t6292 = t6291 * t6290
            t6295 = t6292 ** 2
            t6297 = t6293 ** 2
            t6294 = t6291 * t6293
            t6299 = t6294 ** 2
            t6301 = t6295 ** 2
            t6296 = t6291 * t6295
            t6303 = t6296 ** 2
            t6306 = 2 - 66 * t6290 + 354 * t6293 - 850 * t6295 + 1110 * t6297 - 822 * t6299 + 326 * t6301 - 54 * t6303
            t6305 = 129 * t6292 - 543 * t6294 + 1165 * t6296 + (-1425 * t6297 + 1011 * t6299 - 389 * t6301 + 63 * t6303 - 11) * t6291
            tfunc[..., c] = (0.29e2 / 0.4096e4*1j) * np.sqrt(0.111435e6) * ((1 + t6291) ** (-0.1e1 / 0.2e1)) * ((1 - t6291) ** (-0.1e1 / 0.2e1)) * ((t6305 + t6306) * np.exp((1j) * (phi1 - 12 * phi2)) + (t6305 - t6306) * np.exp((1j) * (phi1 + 12 * phi2)))

        if Bindx == 351:
            t6308 = np.cos(phi)
            t6309 = t6308 ** 2
            t6310 = t6309 ** 2
            t6312 = t6310 ** 2
            t6311 = t6309 * t6310
            t6307 = np.sin(phi)
            tfunc[..., c] = -(0.29e2 / 0.8192e4) * np.exp((2*1j) * phi1) * np.sqrt(0.2730e4) * t6307 ** 2 * (53295 * t6310 + 735471 * t6312 + 33 + (-298452 + 334305 * t6311) * t6311 + (-817190 * t6312 - 3366) * t6309)

        if Bindx == 352:
            t6330 = np.cos(phi)
            t6329 = t6330 ** 2
            t6331 = t6330 * t6329
            t6332 = t6329 ** 2
            t6333 = t6330 * t6332
            t6334 = t6331 ** 2
            t6335 = t6330 * t6334
            t6336 = t6332 ** 2
            t6338 = t6333 ** 2
            t6340 = t6334 ** 2
            t6344 = -9596 * t6331 + 74182 * t6333 - 241480 * t6335 + (377798 * t6336 - 281980 * t6338 + 80730 * t6340 + 346) * t6330
            t6343 = 94185 * t6335 ** 2 + 1955 * t6329 - 27487 * t6332 + 147411 * t6334 - 383021 * t6336 + 518305 * t6338 - 351325 * t6340 - 23
            tfunc[..., c] = (0.29e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.10659e5) * ((t6343 - t6344) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t6343 + t6344) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 353:
            t6360 = np.cos(phi)
            t6359 = t6360 ** 2
            t6362 = t6359 ** 2
            t6361 = t6360 * t6359
            t6364 = t6361 ** 2
            t6365 = t6360 * t6364
            t6366 = t6362 ** 2
            t6363 = t6360 * t6362
            t6368 = t6363 ** 2
            t6370 = t6364 ** 2
            t6374 = 63 * t6365 ** 2 - 31 * t6359 + 77 * t6362 + 45 * t6364 - 365 * t6366 + 499 * t6368 - 289 * t6370 + 1
            t6373 = 208 * t6361 - 740 * t6363 + 1280 * t6365 + (-1180 * t6366 + 560 * t6368 - 108 * t6370 - 20) * t6360
            tfunc[..., c] = (0.29e2 / 0.16384e5) * ((t6373 + t6374) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (-t6373 + t6374) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.1448655e7)

        if Bindx == 354:
            t6375 = np.cos(phi)
            t6376 = t6375 ** 2
            t6377 = t6376 ** 2
            t6379 = t6377 ** 2
            tfunc[..., c] = (0.29e2 / 0.4096e4*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.15470e5) * ((1 - t6375) ** (0.3e1 / 0.2e1)) * ((1 + t6375) ** (0.3e1 / 0.2e1)) * t6375 * (-26334 * t6377 - 120175 * t6379 - 99 + (86526 * t6377 + 58995 * t6379 + 3135) * t6376)

        if Bindx == 355:
            t6397 = np.cos(phi)
            t6396 = t6397 ** 2
            t6399 = t6396 ** 2
            t6398 = t6397 * t6396
            t6401 = t6398 ** 2
            t6403 = t6399 ** 2
            t6400 = t6397 * t6399
            t6405 = t6400 ** 2
            t6407 = t6401 ** 2
            t6402 = t6397 * t6401
            t6409 = t6402 ** 2
            t6412 = 10043 * t6396 - 136357 * t6399 + 699343 * t6401 - 1726427 * t6403 + 2214049 * t6405 - 1423815 * t6407 + 363285 * t6409 - 121
            t6411 = 13093 * t6398 - 123587 * t6400 + 551233 * t6402 + (-1303597 * t6403 + 1667615 * t6405 - 1086865 * t6407 + 282555 * t6409 - 447) * t6397
            tfunc[..., c] = (0.29e2 / 0.16384e5*1j) * np.sqrt(0.209e3) * np.sqrt(0.2e1) * ((1 + t6397) ** (-0.1e1 / 0.2e1)) * ((1 - t6397) ** (-0.1e1 / 0.2e1)) * ((t6411 - t6412) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t6411 + t6412) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 356:
            t6429 = np.cos(phi)
            t6428 = t6429 ** 2
            t6431 = t6428 ** 2
            t6430 = t6429 * t6428
            t6433 = t6430 ** 2
            t6435 = t6431 ** 2
            t6432 = t6429 * t6431
            t6437 = t6432 ** 2
            t6439 = t6433 ** 2
            t6434 = t6429 * t6433
            t6441 = t6434 ** 2
            t6444 = 2 - 58 * t6428 + 746 * t6431 - 2930 * t6433 + 5350 * t6435 - 5102 * t6437 + 2478 * t6439 - 486 * t6441
            t6443 = -701 * t6430 + 2191 * t6432 - 3065 * t6434 + (1745 * t6435 + 185 * t6437 - 619 * t6439 + 189 * t6441 + 75) * t6429
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.28405e5) * ((1 + t6429) ** (-0.1e1 / 0.2e1)) * ((1 - t6429) ** (-0.1e1 / 0.2e1)) * ((t6443 + t6444) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t6443 - t6444) * np.exp((3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 357:
            t6453 = np.sin(phi)
            t6451 = t6453 ** 2
            t6445 = np.cos(phi)
            t6446 = t6445 ** 2
            t6447 = t6446 ** 2
            t6449 = t6447 ** 2
            tfunc[..., c] = (0.87e2 / 0.4096e4) * np.exp((4*1j) * phi1) * np.sqrt(0.85085e5) * t6451 ** 2 * (-1330 * t6447 - 10925 * t6449 - 1 + (6118 * t6447 + 6555 * t6449 + 95) * t6446)

        if Bindx == 358:
            t6469 = np.cos(phi)
            t6468 = t6469 ** 2
            t6472 = t6468 ** 2
            t6471 = t6469 * t6468
            t6474 = t6471 ** 2
            t6475 = t6469 * t6474
            t6476 = t6472 ** 2
            t6473 = t6469 * t6472
            t6478 = t6473 ** 2
            t6480 = t6474 ** 2
            t6484 = 345345 * t6475 ** 2 - 2449 * t6468 + 21251 * t6472 - 2509 * t6474 - 338899 * t6476 + 947485 * t6478 - 970255 * t6480 + 31
            t6483 = 64624 * t6471 - 483996 * t6473 + 1573504 * t6475 + (-2522916 * t6476 + 1963280 * t6478 - 592020 * t6480 - 2476) * t6469
            t6470 = 2 * phi1
            tfunc[..., c] = (0.87e2 / 0.16384e5) * ((t6483 + t6484) * np.exp((2*1j) * (t6470 - 3 * phi2)) + (-t6483 + t6484) * np.exp((2*1j) * (t6470 + 3 * phi2))) * np.sqrt(0.19e2)

        if Bindx == 359:
            t6500 = np.cos(phi)
            t6499 = t6500 ** 2
            t6501 = t6500 * t6499
            t6502 = t6499 ** 2
            t6503 = t6500 * t6502
            t6504 = t6501 ** 2
            t6505 = t6500 * t6504
            t6506 = t6502 ** 2
            t6508 = t6503 ** 2
            t6510 = t6504 ** 2
            t6514 = -48 * t6501 + 40 * t6503 + 160 * t6505 + (-360 * t6506 + 272 * t6508 - 72 * t6510 + 8) * t6500
            t6513 = 21 * t6505 ** 2 - 25 * t6499 + 169 * t6502 - 425 * t6504 + 475 * t6506 - 211 * t6508 - 5 * t6510 + 1
            tfunc[..., c] = (0.87e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.312455e6) * ((t6513 + t6514) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t6513 - t6514) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 360:
            t6515 = np.cos(phi)
            t6516 = t6515 ** 2
            t6517 = t6516 ** 2
            tfunc[..., c] = (-0.87e2 / 0.4096e4*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.646646e6) * ((1 - t6515) ** (0.5e1 / 0.2e1)) * ((1 + t6515) ** (0.5e1 / 0.2e1)) * t6515 * (-140 * t6516 + 5 + (-2300 * t6516 + 966 + 1725 * t6517) * t6517)

        if Bindx == 361:
            t6536 = np.cos(phi)
            t6535 = t6536 ** 2
            t6539 = t6535 ** 2
            t6538 = t6536 * t6535
            t6541 = t6538 ** 2
            t6543 = t6539 ** 2
            t6540 = t6536 * t6539
            t6545 = t6540 ** 2
            t6547 = t6541 ** 2
            t6542 = t6536 * t6541
            t6549 = t6542 ** 2
            t6552 = 17175 * t6535 - 222785 * t6539 + 1148347 * t6541 - 2946015 * t6543 + 3989557 * t6545 - 2726075 * t6547 + 740025 * t6549 - 229
            t6551 = -46785 * t6538 + 291903 * t6540 - 673485 * t6542 + (430705 * t6543 + 554829 * t6545 - 904475 * t6547 + 345345 * t6549 + 1963) * t6536
            t6537 = 5 * phi1
            tfunc[..., c] = (0.87e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.5e1) * ((1 + t6536) ** (-0.1e1 / 0.2e1)) * ((1 - t6536) ** (-0.1e1 / 0.2e1)) * ((t6551 - t6552) * np.exp((1j) * (t6537 - 6 * phi2)) + (t6551 + t6552) * np.exp((1j) * (t6537 + 6 * phi2)))

        if Bindx == 362:
            t6569 = np.cos(phi)
            t6568 = t6569 ** 2
            t6572 = t6568 ** 2
            t6571 = t6569 * t6568
            t6574 = t6571 ** 2
            t6576 = t6572 ** 2
            t6573 = t6569 * t6572
            t6578 = t6573 ** 2
            t6580 = t6574 ** 2
            t6575 = t6569 * t6574
            t6582 = t6575 ** 2
            t6585 = -2 + 42 * t6568 - 218 * t6572 + 402 * t6574 - 198 * t6576 - 226 * t6578 + 290 * t6580 - 90 * t6582
            t6584 = -5 * t6571 + 207 * t6573 - 657 * t6575 + (833 * t6576 - 447 * t6578 + 53 * t6580 + 21 * t6582 - 5) * t6569
            t6570 = 5 * phi1
            tfunc[..., c] = (0.435e3 / 0.8192e4*1j) * np.sqrt(0.3289e4) * ((1 + t6569) ** (-0.1e1 / 0.2e1)) * ((1 - t6569) ** (-0.1e1 / 0.2e1)) * ((t6584 + t6585) * np.exp((1j) * (t6570 - 12 * phi2)) + (t6584 - t6585) * np.exp((1j) * (t6570 + 12 * phi2)))

        if Bindx == 363:
            t6594 = np.sin(phi)
            t6591 = t6594 ** 2
            t6592 = t6594 * t6591
            t6586 = np.cos(phi)
            t6587 = t6586 ** 2
            t6588 = t6587 ** 2
            tfunc[..., c] = -(0.29e2 / 0.8192e4) * np.exp((6*1j) * phi1) * np.sqrt(0.3233230e7) * t6592 ** 2 * (-84 * t6587 + 1 + (-3220 * t6587 + 966 + 3105 * t6588) * t6588)

        if Bindx == 364:
            t6610 = np.cos(phi)
            t6609 = t6610 ** 2
            t6611 = t6610 * t6609
            t6612 = t6609 ** 2
            t6613 = t6610 * t6612
            t6614 = t6611 ** 2
            t6615 = t6610 * t6614
            t6616 = t6612 ** 2
            t6618 = t6613 ** 2
            t6620 = t6614 ** 2
            t6624 = 520532 * t6611 - 4172562 * t6613 + 15354648 * t6615 + (-27848722 * t6616 + 24151380 * t6618 - 7992270 * t6620 - 21198) * t6610
            t6623 = 3108105 * t6615 ** 2 - 230253 * t6609 + 2425617 * t6612 - 8886957 * t6614 + 13338963 * t6616 - 5787375 * t6618 - 3963245 * t6620 + 3337
            tfunc[..., c] = (0.29e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t6623 + t6624) * np.exp((6*1j) * (phi1 - phi2)) + (t6623 - t6624) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 365:
            t6640 = np.cos(phi)
            t6639 = t6640 ** 2
            t6641 = t6640 * t6639
            t6642 = t6639 ** 2
            t6643 = t6640 * t6642
            t6644 = t6641 ** 2
            t6645 = t6640 * t6644
            t6646 = t6642 ** 2
            t6648 = t6643 ** 2
            t6650 = t6644 ** 2
            t6654 = -752 * t6641 + 3708 * t6643 - 5760 * t6645 + (2372 * t6646 + 1392 * t6648 - 972 * t6650 + 12) * t6640
            t6653 = 189 * t6645 ** 2 + 435 * t6639 - 1161 * t6642 - 729 * t6644 + 5049 * t6646 - 5079 * t6648 + 1325 * t6650 - 29
            tfunc[..., c] = (0.29e2 / 0.16384e5) * ((t6653 + t6654) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (t6653 - t6654) * np.exp((6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.16445e5)

        if Bindx == 366:
            t6655 = np.cos(phi)
            t6656 = t6655 ** 2
            t6657 = t6656 ** 2
            tfunc[..., c] = (0.29e2 / 0.2048e4*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.692835e6) * ((1 - t6655) ** (0.7e1 / 0.2e1)) * ((1 + t6655) ** (0.7e1 / 0.2e1)) * t6655 * (-805 * t6657 - 7 + (1035 * t6657 + 161) * t6656)

        if Bindx == 367:
            t6674 = np.cos(phi)
            t6673 = t6674 ** 2
            t6676 = t6674 * t6673
            t6679 = t6676 ** 2
            t6680 = t6674 * t6679
            t6688 = 148005 * t6680 ** 2
            t6685 = t6679 ** 2
            t6677 = t6673 ** 2
            t6678 = t6674 * t6677
            t6683 = t6678 ** 2
            t6681 = t6677 ** 2
            t6675 = 7 * phi1
            t6666 = t6674 * t6681
            t6664 = t6674 * t6683
            t6662 = t6674 * t6685
            tfunc[..., c] = (-0.29e2 / 0.8192e4*1j) * np.sqrt((1 - t6674)) * np.sqrt(0.21e2) * ((1 + t6674) ** (-0.1e1 / 0.2e1)) * ((-296010 * t6662 + 1067660 * t6664 - 1521542 * t6666 - 2945 * t6673 - 3386 * t6674 + 67916 * t6676 + 39657 * t6677 - 397878 * t6678 - 100329 * t6679 + 1083240 * t6680 - 23661 * t6681 + 350405 * t6683 - 411125 * t6685 - 7 + t6688) * np.exp((1j) * (t6675 - 6 * phi2)) + (592020 * t6662 - 1001880 * t6664 + 152812 * t6666 - 3813 * t6673 - 3372 * t6674 + 67048 * t6676 + 95307 * t6677 - 342228 * t6678 - 639777 * t6679 + 543792 * t6680 + 1650693 * t6681 - 1719135 * t6683 + 476905 * t6685 + 7 + t6688) * np.exp((1j) * (t6675 + 6 * phi2)))

        if Bindx == 368:
            t6705 = np.cos(phi)
            t6704 = t6705 ** 2
            t6708 = t6704 ** 2
            t6707 = t6705 * t6704
            t6710 = t6707 ** 2
            t6712 = t6708 ** 2
            t6709 = t6705 * t6708
            t6714 = t6709 ** 2
            t6716 = t6710 ** 2
            t6711 = t6705 * t6710
            t6718 = t6711 ** 2
            t6721 = 2 - 18 * t6704 - 14 * t6708 + 270 * t6710 - 522 * t6712 + 314 * t6714 + 22 * t6716 - 54 * t6718
            t6720 = 71 * t6707 - 225 * t6709 + 171 * t6711 + (193 * t6712 - 315 * t6714 + 101 * t6716 + 9 * t6718 - 5) * t6705
            t6706 = 7 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.345345e6) * np.sqrt(0.2e1) * ((1 + t6705) ** (-0.1e1 / 0.2e1)) * ((1 - t6705) ** (-0.1e1 / 0.2e1)) * ((t6720 + t6721) * np.exp((1j) * (t6706 - 12 * phi2)) + (t6720 - t6721) * np.exp((1j) * (t6706 + 12 * phi2)))

        if Bindx == 369:
            t6729 = np.sin(phi)
            t6726 = t6729 ** 2
            t6727 = t6726 ** 2
            t6722 = np.cos(phi)
            t6723 = t6722 ** 2
            t6724 = t6723 ** 2
            tfunc[..., c] = (0.29e2 / 0.4096e4) * np.exp((8*1j) * phi1) * np.sqrt(0.881790e6) * t6727 ** 2 * (-575 * t6724 - 1 + (1035 * t6724 + 69) * t6723)

        if Bindx == 370:
            t6745 = np.cos(phi)
            t6744 = t6745 ** 2
            t6747 = t6745 * t6744
            t6748 = t6744 ** 2
            t6749 = t6745 * t6748
            t6750 = t6747 ** 2
            t6751 = t6745 * t6750
            t6752 = t6748 ** 2
            t6754 = t6749 ** 2
            t6756 = t6750 ** 2
            t6760 = -26848 * t6747 + 59784 * t6749 + 165120 * t6751 + (-719624 * t6752 + 842720 * t6754 - 322920 * t6756 + 1768) * t6745
            t6759 = 94185 * t6751 ** 2 - 17105 * t6744 + 164979 * t6748 - 631173 * t6750 + 1090533 * t6752 - 783955 * t6754 + 82225 * t6756 + 311
            t6746 = 4 * phi1
            tfunc[..., c] = (0.29e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.33e2) * ((t6759 + t6760) * np.exp((2*1j) * (t6746 - 3 * phi2)) + (t6759 - t6760) * np.exp((2*1j) * (t6746 + 3 * phi2)))

        if Bindx == 371:
            t6776 = np.cos(phi)
            t6775 = t6776 ** 2
            t6778 = t6776 * t6775
            t6779 = t6775 ** 2
            t6780 = t6776 * t6779
            t6781 = t6778 ** 2
            t6782 = t6776 * t6781
            t6783 = t6779 ** 2
            t6785 = t6780 ** 2
            t6787 = t6781 ** 2
            t6791 = 608 * t6778 - 528 * t6780 - 2112 * t6782 + (3344 * t6783 - 800 * t6785 - 432 * t6787 - 80) * t6776
            t6790 = 63 * t6782 ** 2 - 19 * t6775 - 957 * t6779 + 2805 * t6781 - 1551 * t6783 - 1441 * t6785 + 1081 * t6787 + 19
            t6777 = 2 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4) * ((t6790 + t6791) * np.exp((4*1j) * (t6777 - 3 * phi2)) + (t6790 - t6791) * np.exp((4*1j) * (t6777 + 3 * phi2))) * np.sqrt(0.4485e4)

        if Bindx == 372:
            t6792 = np.cos(phi)
            t6793 = t6792 ** 2
            tfunc[..., c] = (-0.29e2 / 0.2048e4*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.3380195e7) * ((1 - t6792) ** (0.9e1 / 0.2e1)) * ((1 + t6792) ** (0.9e1 / 0.2e1)) * t6792 * (3 + (-50 + 135 * t6793) * t6793)

        if Bindx == 373:
            t6809 = np.cos(phi)
            t6808 = t6809 ** 2
            t6811 = t6809 * t6808
            t6814 = t6811 ** 2
            t6820 = t6814 ** 2
            t6822 = 12285 * t6809 * t6820
            t6812 = t6808 ** 2
            t6813 = t6809 * t6812
            t6818 = t6813 ** 2
            t6816 = t6812 ** 2
            t6810 = 3 * phi1
            t6803 = t6809 * t6814
            t6801 = t6809 * t6816
            t6799 = t6809 * t6818
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * ((1 - t6809) ** (0.3e1 / 0.2e1)) * np.sqrt(0.253e3) * ((1 + t6809) ** (-0.1e1 / 0.2e1)) * ((t6822 - 22815 * t6820 - 37310 * t6799 + 83690 * t6818 + 39235 * t6801 - 120129 * t6816 - 15204 * t6803 + 84684 * t6814 + 819 * t6813 - 29745 * t6812 - 126 * t6811 + 4394 * t6808 + 301 * t6809 - 79) * np.exp((3*1j) * (t6810 - 2 * phi2)) + (t6822 + 71955 * t6820 + 152230 * t6799 + 97010 * t6818 - 123665 * t6801 - 229431 * t6816 - 70908 * t6803 + 92652 * t6814 + 72459 * t6813 - 1035 * t6812 - 14346 * t6811 - 2558 * t6808 + 617 * t6809 + 79) * np.exp((3*1j) * (t6810 + 2 * phi2)))

        if Bindx == 374:
            t6839 = np.cos(phi)
            t6838 = t6839 ** 2
            t6842 = t6838 ** 2
            t6841 = t6839 * t6838
            t6844 = t6841 ** 2
            t6846 = t6842 ** 2
            t6843 = t6839 * t6842
            t6848 = t6843 ** 2
            t6850 = t6844 ** 2
            t6845 = t6839 * t6844
            t6852 = t6845 ** 2
            t6855 = -74 - 518 * t6838 + 5542 * t6842 - 8646 * t6844 - 4686 * t6846 + 14718 * t6848 - 4878 * t6850 - 1458 * t6852
            t6854 = -1677 * t6841 - 3333 * t6843 + 16071 * t6845 + (-12859 * t6846 - 3127 * t6848 + 4313 * t6850 + 189 * t6852 + 423) * t6839
            t6840 = 3 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.65e2) * np.sqrt(0.2e1) * ((1 + t6839) ** (-0.1e1 / 0.2e1)) * ((1 - t6839) ** (-0.1e1 / 0.2e1)) * ((t6854 + t6855) * np.exp((3*1j) * (t6840 - 4 * phi2)) + (t6854 - t6855) * np.exp((3*1j) * (t6840 + 4 * phi2)))

        if Bindx == 375:
            t6863 = np.sin(phi)
            t6859 = t6863 ** 2
            t6861 = t6863 * t6859 ** 2
            t6856 = np.cos(phi)
            t6857 = t6856 ** 2
            tfunc[..., c] = -(0.29e2 / 0.8192e4) * np.exp((10*1j) * phi1) * np.sqrt(0.4056234e7) * t6861 ** 2 * (1 + (-50 + 225 * t6857) * t6857)

        if Bindx == 376:
            t6879 = np.cos(phi)
            t6878 = t6879 ** 2
            t6881 = t6879 * t6878
            t6882 = t6878 ** 2
            t6883 = t6879 * t6882
            t6884 = t6881 ** 2
            t6885 = t6879 * t6884
            t6886 = t6882 ** 2
            t6888 = t6883 ** 2
            t6890 = t6884 ** 2
            t6894 = -7532 * t6881 + 27822 * t6883 - 34152 * t6885 + (-5714 * t6886 + 36500 * t6888 - 17550 * t6890 + 626) * t6879
            t6893 = 4095 * t6885 ** 2 + 37 * t6878 + 6039 * t6882 - 38331 * t6884 + 81477 * t6886 - 68201 * t6888 + 14885 * t6890 - 1
            t6880 = 5 * phi1
            tfunc[..., c] = (0.29e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.3795e4) * ((t6893 + t6894) * np.exp((2*1j) * (t6880 - 3 * phi2)) + (t6893 - t6894) * np.exp((2*1j) * (t6880 + 3 * phi2)))

        if Bindx == 377:
            t6910 = np.cos(phi)
            t6909 = t6910 ** 2
            t6912 = t6910 * t6909
            t6913 = t6909 ** 2
            t6914 = t6910 * t6913
            t6915 = t6912 ** 2
            t6916 = t6910 * t6915
            t6917 = t6913 ** 2
            t6919 = t6914 ** 2
            t6921 = t6915 ** 2
            t6925 = 80 * t6912 - 3828 * t6914 + 4224 * t6916 + (3124 * t6917 - 3280 * t6919 - 540 * t6921 + 220) * t6910
            t6924 = 63 * t6916 ** 2 - 527 * t6909 + 2013 * t6913 + 1485 * t6915 - 6765 * t6917 + 1859 * t6919 + 1903 * t6921 - 31
            t6911 = 5 * phi1
            tfunc[..., c] = (0.145e3 / 0.16384e5) * ((t6924 + t6925) * np.exp((2*1j) * (t6911 - 6 * phi2)) + (t6924 - t6925) * np.exp((2*1j) * (t6911 + 6 * phi2))) * np.sqrt(0.39e2)

        if Bindx == 378:
            t6926 = np.cos(phi)
            tfunc[..., c] = (0.145e3 / 0.4096e4*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.4056234e7) * ((1 - t6926) ** (0.11e2 / 0.2e1)) * ((1 + t6926) ** (0.11e2 / 0.2e1)) * t6926 * (9 * t6926 ** 2 - 1)

        if Bindx == 379:
            t6940 = np.cos(phi)
            t6939 = t6940 ** 2
            t6942 = t6940 * t6939
            t6945 = t6942 ** 2
            t6952 = 819 * t6945 ** 2
            t6943 = t6939 ** 2
            t6944 = t6940 * t6943
            t6949 = t6944 ** 2
            t6947 = t6943 ** 2
            t6941 = 11 * phi1
            t6934 = t6940 * t6945
            t6932 = t6940 * t6947
            t6930 = t6940 * t6949
            tfunc[..., c] = (-0.29e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 - t6940) ** (0.5e1 / 0.2e1)) * np.sqrt(0.3795e4) * ((1 + t6940) ** (-0.1e1 / 0.2e1)) * ((t6952 - 1404 * t6930 - 2782 * t6949 + 5452 * t6932 + 3417 * t6947 - 8216 * t6934 - 1780 * t6945 + 5976 * t6944 + 373 * t6943 - 2092 * t6942 - 78 * t6939 + 284 * t6940 + 31) * np.exp((1j) * (t6941 - 6 * phi2)) + (t6952 + 6318 * t6930 + 20384 * t6949 + 34250 * t6932 + 28035 * t6947 + 1068 * t6934 - 18984 * t6945 - 15372 * t6944 - 2775 * t6943 + 2310 * t6942 + 1224 * t6939 + 98 * t6940 - 31) * np.exp((1j) * (t6941 + 6 * phi2)))

        if Bindx == 380:
            t6969 = np.cos(phi)
            t6968 = t6969 ** 2
            t6972 = t6968 ** 2
            t6971 = t6969 * t6968
            t6974 = t6971 ** 2
            t6976 = t6972 ** 2
            t6973 = t6969 * t6972
            t6978 = t6973 ** 2
            t6980 = t6974 ** 2
            t6975 = t6969 * t6974
            t6982 = t6975 ** 2
            t6985 = 38 + 1026 * t6968 - 1394 * t6972 - 7062 * t6974 + 10098 * t6976 + 2662 * t6978 - 4774 * t6980 - 594 * t6982
            t6984 = -1199 * t6971 + 6237 * t6973 - 627 * t6975 + (-10637 * t6976 + 4131 * t6978 + 2351 * t6980 + 63 * t6982 - 319) * t6969
            t6970 = 11 * phi1
            tfunc[..., c] = (0.29e2 / 0.8192e4*1j) * np.sqrt(0.39e2) * ((1 + t6969) ** (-0.1e1 / 0.2e1)) * ((1 - t6969) ** (-0.1e1 / 0.2e1)) * ((t6984 + t6985) * np.exp((1j) * (t6970 - 12 * phi2)) + (t6984 - t6985) * np.exp((1j) * (t6970 + 12 * phi2)))

        if Bindx == 381:
            t6991 = np.sin(phi)
            t6987 = t6991 ** 2
            t6988 = t6991 * t6987
            t6989 = t6988 ** 2
            t6986 = np.cos(phi)
            tfunc[..., c] = (0.145e3 / 0.4096e4) * np.exp((12*1j) * phi1) * np.sqrt(0.52003e5) * t6989 ** 2 * (27 * t6986 ** 2 - 1)

        if Bindx == 382:
            t7007 = np.cos(phi)
            t7006 = t7007 ** 2
            t7009 = t7007 * t7006
            t7010 = t7006 ** 2
            t7011 = t7007 * t7010
            t7012 = t7009 ** 2
            t7013 = t7007 * t7012
            t7014 = t7010 ** 2
            t7016 = t7011 ** 2
            t7018 = t7012 ** 2
            t7022 = -752 * t7009 + 3708 * t7011 - 5760 * t7013 + (2372 * t7014 + 1392 * t7016 - 972 * t7018 + 12) * t7007
            t7021 = 189 * t7013 ** 2 + 435 * t7006 - 1161 * t7010 - 729 * t7012 + 5049 * t7014 - 5079 * t7016 + 1325 * t7018 - 29
            t7008 = 2 * phi1
            tfunc[..., c] = (0.29e2 / 0.16384e5) * ((t7021 + t7022) * np.exp((6*1j) * (t7008 - phi2)) + (t7021 - t7022) * np.exp((6*1j) * (t7008 + phi2))) * np.sqrt(0.16445e5)

        if Bindx == 383:
            t7038 = np.cos(phi)
            t7037 = t7038 ** 2
            t7039 = t7038 * t7037
            t7040 = t7037 ** 2
            t7041 = t7038 * t7040
            t7042 = t7039 ** 2
            t7043 = t7038 * t7042
            t7044 = t7040 ** 2
            t7046 = t7041 ** 2
            t7048 = t7042 ** 2
            t7052 = -11024 * t7039 + 10296 * t7041 + 41184 * t7043 + (-19448 * t7044 - 21840 * t7046 - 1944 * t7048 - 1320) * t7038
            t7051 = 189 * t7043 ** 2 + 5343 * t7037 + 9009 * t7040 - 36465 * t7042 - 14157 * t7044 + 31317 * t7046 + 8723 * t7048 + 137
            tfunc[..., c] = (0.29e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t7051 + t7052) * np.exp((12*1j) * (phi1 - phi2)) + (t7051 - t7052) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 384:
            t7053 = np.cos(phi)
            tfunc[..., c] = (-0.435e3 / 0.4096e4*1j) * np.exp((13*1j) * phi1) * np.sqrt(0.312018e6) * ((1 - t7053) ** (0.13e2 / 0.2e1)) * ((1 + t7053) ** (0.13e2 / 0.2e1)) * t7053

        if Bindx == 385:
            t7066 = np.cos(phi)
            t7065 = t7066 ** 2
            t7069 = t7065 ** 2
            t7070 = t7066 * t7069
            t7075 = t7070 ** 2
            t7077 = 7 * t7066 * t7075
            t7073 = t7069 ** 2
            t7068 = t7066 * t7065
            t7071 = t7068 ** 2
            t7067 = 13 * phi1
            t7060 = t7066 * t7071
            t7058 = t7066 * t7073
            tfunc[..., c] = (0.87e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 - t7066) ** (0.7e1 / 0.2e1)) * np.sqrt(0.49335e5) * ((1 + t7066) ** (-0.1e1 / 0.2e1)) * ((t7077 - 11 * t7075 - 27 * t7058 + 47 * t7073 + 38 * t7060 - 78 * t7071 - 22 * t7070 + 62 * t7069 + 3 * t7068 - 23 * t7065 + t7066 + 3) * np.exp((1j) * (t7067 - 6 * phi2)) + (t7077 + 67 * t7075 + 285 * t7058 + 705 * t7073 + 1110 * t7060 + 1134 * t7071 + 714 * t7070 + 210 * t7069 - 45 * t7068 - 65 * t7065 - 23 * t7066 - 3) * np.exp((1j) * (t7067 + 6 * phi2)))

        if Bindx == 386:
            t7093 = np.cos(phi)
            t7092 = t7093 ** 2
            t7095 = t7093 * t7092
            t7098 = t7095 ** 2
            t7099 = t7093 * t7098
            t7107 = -1287 * t7098 + (1716 + 7 * t7099) * t7099
            t7104 = t7098 ** 2
            t7096 = t7092 ** 2
            t7097 = t7093 * t7096
            t7102 = t7097 ** 2
            t7100 = t7096 ** 2
            t7094 = 13 * phi1
            t7085 = t7093 * t7100
            t7083 = t7093 * t7102
            t7081 = t7093 * t7104
            tfunc[..., c] = (-0.87e2 / 0.8192e4*1j) * np.sqrt((1 - t7093)) * np.sqrt(0.3e1) * ((1 + t7093) ** (-0.1e1 / 0.2e1)) * ((-71 * t7081 + 312 * t7104 - 754 * t7083 + 1001 * t7102 - 429 * t7085 - 858 * t7100 + 143 * t7097 + 572 * t7096 - 546 * t7095 + 247 * t7092 - 59 * t7093 + 6 + t7107) * np.exp((1j) * (t7094 - 12 * phi2)) + (85 * t7081 + 468 * t7104 + 1534 * t7083 + 3289 * t7102 + 4719 * t7085 + 4290 * t7100 - 2717 * t7097 - 2288 * t7096 - 1170 * t7095 - 377 * t7092 - 71 * t7093 - 6 + t7107) * np.exp((1j) * (t7094 + 12 * phi2)))

        if Bindx == 387:
            t7113 = np.sin(phi)
            t7108 = t7113 ** 2
            t7109 = t7113 * t7108
            t7111 = t7113 * t7109 ** 2
            tfunc[..., c] = -(0.435e3 / 0.8192e4) * np.exp((14*1j) * phi1) * np.sqrt(0.44574e5) * t7111 ** 2

        if Bindx == 388:
            t7129 = np.cos(phi)
            t7145 = -6 * t7129
            t7128 = t7129 ** 2
            t7131 = t7129 * t7128
            t7132 = t7128 ** 2
            t7133 = t7129 * t7132
            t7134 = t7131 ** 2
            t7135 = t7129 * t7134
            t7136 = t7132 ** 2
            t7138 = t7133 ** 2
            t7140 = t7134 ** 2
            t7144 = t7140 * t7145 + 4 * t7131 + 38 * t7133 - 72 * t7135 + t7145 + (38 * t7136 + 4 * t7138) * t7129
            t7143 = t7135 ** 2 + 11 * t7128 - 39 * t7132 + 27 * t7134 + 27 * t7136 - 39 * t7138 + 11 * t7140 + 1
            t7130 = 7 * phi1
            tfunc[..., c] = (0.87e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.345345e6) * ((t7143 + t7144) * np.exp((2*1j) * (t7130 - 3 * phi2)) + (t7143 - t7144) * np.exp((2*1j) * (t7130 + 3 * phi2)))

        if Bindx == 389:
            t7160 = np.cos(phi)
            t7159 = t7160 ** 2
            t7162 = t7160 * t7159
            t7163 = t7159 ** 2
            t7164 = t7160 * t7163
            t7166 = t7163 ** 2
            t7168 = t7164 ** 2
            t7165 = t7162 ** 2
            t7170 = t7165 ** 2
            t7171 = t7160 * t7170
            t7174 = 208 * t7162 + 572 * t7164 - 12 * t7171 + (-572 * t7166 - 208 * t7168 + 12) * t7160
            t7173 = t7160 * t7171 - 65 * t7159 - 429 * t7163 - 429 * t7165 + 429 * t7166 + 429 * t7168 + 65 * t7170 - 1
            t7161 = 7 * phi1
            tfunc[..., c] = (0.87e2 / 0.16384e5) * ((t7173 + t7174) * np.exp((2*1j) * (t7161 - 6 * phi2)) + (t7173 - t7174) * np.exp((2*1j) * (t7161 + 6 * phi2))) * np.sqrt(0.21e2)

        if Bindx == 390:
            t7190 = np.cos(phi)
            t7206 = -6 * t7190
            t7189 = t7190 ** 2
            t7192 = t7190 * t7189
            t7193 = t7189 ** 2
            t7194 = t7190 * t7193
            t7195 = t7192 ** 2
            t7196 = t7190 * t7195
            t7197 = t7193 ** 2
            t7199 = t7194 ** 2
            t7201 = t7195 ** 2
            t7205 = t7201 * t7206 + 4 * t7192 + 38 * t7194 - 72 * t7196 + t7206 + (38 * t7197 + 4 * t7199) * t7190
            t7204 = -t7196 ** 2 - 11 * t7189 + 39 * t7193 - 27 * t7195 - 27 * t7197 + 39 * t7199 - 11 * t7201 - 1
            t7191 = 5 * phi1
            tfunc[..., c] = (-0.155e3 / 0.32768e5*1j) * np.sqrt(0.286143e6) * np.sqrt((1 - t7190)) * np.sqrt((1 + t7190)) * ((-t7204 + t7205) * np.exp((-3*1j) * (t7191 - 2 * phi2)) + (t7204 + t7205) * np.exp((-3*1j) * (t7191 + 2 * phi2)))

        if Bindx == 391:
            t7221 = np.cos(phi)
            t7220 = t7221 ** 2
            t7223 = t7221 * t7220
            t7224 = t7220 ** 2
            t7225 = t7221 * t7224
            t7227 = t7224 ** 2
            t7229 = t7225 ** 2
            t7226 = t7223 ** 2
            t7231 = t7226 ** 2
            t7232 = t7221 * t7231
            t7235 = 208 * t7223 + 572 * t7225 - 12 * t7232 + (-572 * t7227 - 208 * t7229 + 12) * t7221
            t7234 = -t7221 * t7232 + 65 * t7220 + 429 * t7224 + 429 * t7226 - 429 * t7227 - 429 * t7229 - 65 * t7231 + 1
            t7222 = 5 * phi1
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * np.sqrt((1 - t7221)) * np.sqrt((1 + t7221)) * ((-t7234 + t7235) * np.exp((-3*1j) * (t7222 - 4 * phi2)) + (t7234 + t7235) * np.exp((-3*1j) * (t7222 + 4 * phi2)))

        if Bindx == 392:
            t7252 = np.cos(phi)
            t7251 = t7252 ** 2
            t7255 = t7251 ** 2
            t7254 = t7252 * t7251
            t7257 = t7254 ** 2
            t7259 = t7255 ** 2
            t7256 = t7252 * t7255
            t7261 = t7256 ** 2
            t7263 = t7257 ** 2
            t7258 = t7252 * t7257
            t7265 = t7258 ** 2
            t7268 = 2 - 8 * t7251 - 58 * t7255 + 244 * t7257 - 306 * t7259 + 112 * t7261 + 42 * t7263 - 28 * t7265
            t7267 = -63 * t7254 + 119 * t7256 + 9 * t7258 + (-211 * t7259 + 187 * t7261 - 43 * t7263 - 5 * t7265 + 7) * t7252
            t7253 = 7 * phi1
            tfunc[..., c] = (0.93e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.476905e6) * ((-t7267 + t7268) * np.exp((-2*1j) * (t7253 - 3 * phi2)) + (t7267 + t7268) * np.exp((-2*1j) * (t7253 + 3 * phi2)))

        if Bindx == 393:
            t7285 = np.cos(phi)
            t7284 = t7285 ** 2
            t7288 = t7284 ** 2
            t7287 = t7285 * t7284
            t7290 = t7287 ** 2
            t7292 = t7288 ** 2
            t7289 = t7285 * t7288
            t7294 = t7289 ** 2
            t7296 = t7290 ** 2
            t7291 = t7285 * t7290
            t7298 = t7291 ** 2
            t7301 = 4 + 200 * t7284 + 676 * t7288 - 1144 * t7290 - 1716 * t7292 + 1144 * t7294 + 780 * t7296 + 56 * t7298
            t7300 = -507 * t7287 - 143 * t7289 + 2145 * t7291 + (143 * t7292 - 1313 * t7294 - 277 * t7296 - 5 * t7298 - 43) * t7285
            t7286 = 7 * phi1
            tfunc[..., c] = -(0.31e2 / 0.16384e5) * ((t7300 + t7301) * np.exp((-2*1j) * (t7286 - 6 * phi2)) + (-t7300 + t7301) * np.exp((-2*1j) * (t7286 + 6 * phi2))) * np.sqrt(0.609e3)

        if Bindx == 394:
            t7315 = np.cos(phi)
            t7314 = t7315 ** 2
            t7317 = t7315 * t7314
            t7320 = t7317 ** 2
            t7327 = -145 * t7320 ** 2 - 19
            t7318 = t7314 ** 2
            t7319 = t7315 * t7318
            t7324 = t7319 ** 2
            t7322 = t7318 ** 2
            t7316 = 13 * phi1
            t7309 = t7315 * t7320
            t7307 = t7315 * t7322
            t7305 = t7315 * t7324
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * ((1 + t7315) ** (0.7e1 / 0.2e1)) * np.sqrt(0.16445e5) * ((1334 * t7305 - 5384 * t7324 + 12370 * t7307 - 17385 * t7322 + 14460 * t7309 - 5208 * t7320 - 2172 * t7319 + 3405 * t7318 - 1490 * t7317 + 160 * t7314 + 74 * t7315 + t7327) * np.exp((-1*1j) * (t7316 - 6 * phi2)) + (174 * t7305 - 648 * t7324 - 774 * t7307 + 1161 * t7322 + 1356 * t7309 - 1064 * t7320 - 1164 * t7319 + 531 * t7318 + 486 * t7317 - 144 * t7314 - 78 * t7315 - t7327) * np.exp((-1*1j) * (t7316 + 6 * phi2))) * ((1 - t7315) ** (-0.1e1 / 0.2e1))

        if Bindx == 395:
            t7344 = np.cos(phi)
            t7343 = t7344 ** 2
            t7346 = t7344 * t7343
            t7349 = t7346 ** 2
            t7350 = t7344 * t7349
            t7357 = t7350 ** 2
            t7359 = -145 * t7344 * t7357 + 91
            t7355 = t7349 ** 2
            t7347 = t7343 ** 2
            t7348 = t7344 * t7347
            t7353 = t7348 ** 2
            t7351 = t7347 ** 2
            t7345 = 13 * phi1
            t7336 = t7344 * t7351
            t7334 = t7344 * t7353
            t7332 = t7344 * t7355
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.21e2) * np.sqrt((1 + t7344)) * ((1653 * t7357 - 8385 * t7332 + 24557 * t7355 - 44421 * t7334 + 46761 * t7353 - 15301 * t7336 - 32175 * t7351 + 55341 * t7350 - 38753 * t7349 + 7293 * t7348 + 10023 * t7347 - 9815 * t7346 + 4227 * t7343 - 951 * t7344 + t7359) * np.exp((-1*1j) * (t7345 - 12 * phi2)) + (1363 * t7357 + 5369 * t7332 + 10803 * t7355 + 9061 * t7334 - 6721 * t7353 - 24739 * t7336 - 22737 * t7351 - 429 * t7350 + 17017 * t7349 + 14443 * t7348 + 2873 * t7347 - 3081 * t7346 - 2507 * t7343 - 769 * t7344 - t7359) * np.exp((-1*1j) * (t7345 + 12 * phi2))) * ((1 - t7344) ** (-0.1e1 / 0.2e1))

        if Bindx == 396:
            t7376 = np.cos(phi)
            t7375 = t7376 ** 2
            t7379 = t7375 ** 2
            t7378 = t7376 * t7375
            t7381 = t7378 ** 2
            t7383 = t7379 ** 2
            t7380 = t7376 * t7379
            t7385 = t7380 ** 2
            t7387 = t7381 ** 2
            t7382 = t7376 * t7381
            t7389 = t7382 ** 2
            t7392 = -4 + 120 * t7375 - 996 * t7379 + 2936 * t7381 - 3276 * t7383 + 456 * t7385 + 1460 * t7387 - 696 * t7389
            t7391 = -223 * t7378 - 3 * t7380 + 2205 * t7382 + (-4717 * t7383 + 3603 * t7385 - 753 * t7387 - 145 * t7389 + 33) * t7376
            t7377 = 2 * phi1
            tfunc[..., c] = (0.31e2 / 0.16384e5) * ((-t7391 + t7392) * np.exp((-6*1j) * (t7377 - phi2)) + (t7391 + t7392) * np.exp((-6*1j) * (t7377 + phi2))) * np.sqrt(0.345345e6)

        if Bindx == 397:
            t7409 = np.cos(phi)
            t7408 = t7409 ** 2
            t7411 = t7408 ** 2
            t7410 = t7409 * t7408
            t7413 = t7410 ** 2
            t7415 = t7411 ** 2
            t7412 = t7409 * t7411
            t7417 = t7412 ** 2
            t7419 = t7413 ** 2
            t7414 = t7409 * t7413
            t7421 = t7414 ** 2
            t7424 = 11712 * t7408 - 30264 * t7411 - 80080 * t7413 + 175032 * t7415 + 13728 * t7417 - 84968 * t7419 - 9744 * t7421 + 488
            t7423 = -9451 * t7410 + 90519 * t7412 - 47619 * t7414 + (-152867 * t7415 + 86775 * t7417 + 39669 * t7419 + 1015 * t7421 - 3945) * t7409
            tfunc[..., c] = (0.31e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t7423 + t7424) * np.exp((-12*1j) * (phi1 - phi2)) + (-t7423 + t7424) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 398:
            t7439 = np.cos(phi)
            t7438 = t7439 ** 2
            t7441 = t7439 * t7438
            t7444 = t7441 ** 2
            t7450 = t7444 ** 2
            t7452 = -435 * t7439 * t7450 - 1
            t7442 = t7438 ** 2
            t7443 = t7439 * t7442
            t7448 = t7443 ** 2
            t7446 = t7442 ** 2
            t7440 = 11 * phi1
            t7433 = t7439 * t7444
            t7431 = t7439 * t7446
            t7429 = t7439 * t7448
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * ((1 + t7439) ** (0.5e1 / 0.2e1)) * np.sqrt(0.115115e6) * ((3219 * t7450 - 9738 * t7429 + 14514 * t7448 - 8225 * t7431 - 5895 * t7446 + 12132 * t7433 - 5844 * t7444 - 1413 * t7443 + 2325 * t7442 - 570 * t7441 - 126 * t7438 + 57 * t7439 + t7452) * np.exp((-1*1j) * (t7440 - 6 * phi2)) + (609 * t7450 - 1746 * t7429 - 2502 * t7448 + 2813 * t7431 + 4047 * t7446 - 2364 * t7433 - 3220 * t7444 + 1149 * t7443 + 1263 * t7442 - 338 * t7441 - 198 * t7438 + 51 * t7439 - t7452) * np.exp((-1*1j) * (t7440 + 6 * phi2))) * ((1 - t7439) ** (-0.1e1 / 0.2e1))

        if Bindx == 399:
            t7470 = np.cos(phi)
            t7469 = t7470 ** 2
            t7472 = t7470 * t7469
            t7473 = t7469 ** 2
            t7474 = t7470 * t7473
            t7475 = t7472 ** 2
            t7476 = t7470 * t7475
            t7477 = t7473 ** 2
            t7479 = t7474 ** 2
            t7481 = t7475 ** 2
            t7483 = t7476 ** 2
            t7487 = 6356 * t7472 + 40092 * t7474 - 126412 * t7476 + (56628 * t7477 + 87516 * t7479 - 52844 * t7481 - 8932 * t7483 - 2404) * t7470
            t7486 = 4356 * t7469 - 35464 * t7473 + 33748 * t7475 - 148148 * t7479 + 17056 * t7481 + 31836 * t7483 + 363 + (95238 + 1015 * t7477) * t7477
            t7471 = 11 * phi1
            tfunc[..., c] = (0.93e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((t7486 + t7487) * np.exp((-1*1j) * (t7471 - 12 * phi2)) + (-t7486 + t7487) * np.exp((-1*1j) * (t7471 + 12 * phi2))) * ((1 + t7470) ** (-0.1e1 / 0.2e1)) * ((1 - t7470) ** (-0.1e1 / 0.2e1))

        if Bindx == 400:
            t7504 = np.cos(phi)
            t7503 = t7504 ** 2
            t7507 = t7503 ** 2
            t7506 = t7504 * t7503
            t7509 = t7506 ** 2
            t7511 = t7507 ** 2
            t7508 = t7504 * t7507
            t7513 = t7508 ** 2
            t7515 = t7509 ** 2
            t7510 = t7504 * t7509
            t7517 = t7510 ** 2
            t7520 = -6 + 312 * t7503 - 2386 * t7507 + 6116 * t7509 - 3562 * t7511 - 7728 * t7513 + 11778 * t7515 - 4524 * t7517
            t7519 = 511 * t7506 - 4343 * t7508 + 15175 * t7510 + (-24125 * t7511 + 16549 * t7513 - 2613 * t7515 - 1131 * t7517 - 23) * t7504
            t7505 = 5 * phi1
            tfunc[..., c] = (0.465e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * ((-t7519 + t7520) * np.exp((-2*1j) * (t7505 - 3 * phi2)) + (t7519 + t7520) * np.exp((-2*1j) * (t7505 + 3 * phi2)))

        if Bindx == 401:
            t7537 = np.cos(phi)
            t7536 = t7537 ** 2
            t7540 = t7536 ** 2
            t7539 = t7537 * t7536
            t7542 = t7539 ** 2
            t7544 = t7540 ** 2
            t7541 = t7537 * t7540
            t7546 = t7541 ** 2
            t7548 = t7542 ** 2
            t7543 = t7537 * t7542
            t7550 = t7543 ** 2
            t7553 = -52 - 104 * t7536 + 4076 * t7540 - 10472 * t7542 + 1188 * t7544 + 13992 * t7546 - 7004 * t7548 - 1624 * t7550
            t7552 = 1819 * t7539 + 143 * t7541 - 13233 * t7543 + (16577 * t7544 + 289 * t7546 - 5131 * t7548 - 203 * t7550 - 261) * t7537
            t7538 = 5 * phi1
            tfunc[..., c] = (0.93e2 / 0.16384e5) * ((-t7552 + t7553) * np.exp((-2*1j) * (t7538 - 6 * phi2)) + (t7552 + t7553) * np.exp((-2*1j) * (t7538 + 6 * phi2))) * np.sqrt(0.195e3)

        if Bindx == 402:
            t7569 = np.cos(phi)
            t7568 = t7569 ** 2
            t7571 = t7569 * t7568
            t7574 = t7571 ** 2
            t7575 = t7569 * t7574
            t7583 = -28275 * t7575 ** 2 + 59
            t7580 = t7574 ** 2
            t7572 = t7568 ** 2
            t7573 = t7569 * t7572
            t7578 = t7573 ** 2
            t7576 = t7572 ** 2
            t7570 = 3 * phi1
            t7561 = t7569 * t7576
            t7559 = t7569 * t7578
            t7557 = t7569 * t7580
            tfunc[..., c] = (0.31e2 / 0.32768e5*1j) * ((1 + t7569) ** (0.3e1 / 0.2e1)) * np.sqrt(0.5313e4) * ((1 - t7569) ** (-0.1e1 / 0.2e1)) * ((-158340 * t7557 + 304395 * t7580 - 112320 * t7559 - 390585 * t7578 + 498300 * t7561 - 11969 * t7576 - 316448 * t7575 + 148393 * t7574 + 54964 * t7573 - 50255 * t7572 + 1504 * t7571 + 4573 * t7568 - 428 * t7569 - t7583) * np.exp((-3*1j) * (t7570 - 2 * phi2)) + (-45240 * t7557 + 102765 * t7580 + 177840 * t7559 - 147615 * t7578 - 277800 * t7561 + 109169 * t7576 + 217376 * t7575 - 47449 * t7574 - 87176 * t7573 + 13735 * t7572 + 15664 * t7571 - 2389 * t7568 - 664 * t7569 + t7583) * np.exp((-3*1j) * (t7570 + 2 * phi2)))

        if Bindx == 403:
            t7601 = np.cos(phi)
            t7600 = t7601 ** 2
            t7603 = t7601 * t7600
            t7604 = t7600 ** 2
            t7605 = t7601 * t7604
            t7606 = t7603 ** 2
            t7607 = t7601 * t7606
            t7608 = t7604 ** 2
            t7610 = t7605 ** 2
            t7612 = t7606 ** 2
            t7614 = t7607 ** 2
            t7618 = -7876 * t7603 + 23636 * t7605 - 3652 * t7607 + (-63492 * t7608 + 72084 * t7610 - 13956 * t7612 - 7308 * t7614 + 564) * t7601
            t7617 = -1416 * t7600 - 5196 * t7604 + 44088 * t7606 + 28776 * t7610 + 31364 * t7612 - 19096 * t7614 + 177 + (-77682 - 1015 * t7608) * t7608
            t7602 = 3 * phi1
            tfunc[..., c] = (0.93e2 / 0.32768e5*1j) * np.sqrt(0.65e2) * np.sqrt(0.2e1) * ((-t7617 + t7618) * np.exp((-3*1j) * (t7602 - 4 * phi2)) + (t7617 + t7618) * np.exp((-3*1j) * (t7602 + 4 * phi2))) * ((1 + t7601) ** (-0.1e1 / 0.2e1)) * ((1 - t7601) ** (-0.1e1 / 0.2e1))

        if Bindx == 404:
            t7635 = np.cos(phi)
            t7634 = t7635 ** 2
            t7638 = t7634 ** 2
            t7637 = t7635 * t7634
            t7640 = t7637 ** 2
            t7642 = t7638 ** 2
            t7639 = t7635 * t7638
            t7644 = t7639 ** 2
            t7646 = t7640 ** 2
            t7641 = t7635 * t7640
            t7648 = t7641 ** 2
            t7651 = -560 * t7634 + 2632 * t7638 + 20496 * t7640 - 140776 * t7642 + 300720 * t7644 - 273000 * t7646 + 90480 * t7648 + 8
            t7650 = -10731 * t7637 + 73633 * t7639 - 222055 * t7641 + (316967 * t7642 - 185185 * t7644 - 1365 * t7646 + 28275 * t7648 + 461) * t7635
            t7636 = 4 * phi1
            tfunc[..., c] = -(0.93e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((-t7650 + t7651) * np.exp((-2*1j) * (t7636 - 3 * phi2)) + (t7650 + t7651) * np.exp((-2*1j) * (t7636 + 3 * phi2)))

        if Bindx == 405:
            t7668 = np.cos(phi)
            t7667 = t7668 ** 2
            t7671 = t7667 ** 2
            t7670 = t7668 * t7667
            t7673 = t7670 ** 2
            t7675 = t7671 ** 2
            t7672 = t7668 * t7671
            t7677 = t7672 ** 2
            t7679 = t7673 ** 2
            t7674 = t7668 * t7673
            t7681 = t7674 ** 2
            t7684 = -16 + 256 * t7667 - 592 * t7671 - 1760 * t7673 + 6864 * t7675 - 6336 * t7677 + 656 * t7679 + 928 * t7681
            t7683 = -587 * t7670 + 3047 * t7672 - 4587 * t7674 + (-11 * t7675 + 4295 * t7677 - 2027 * t7679 - 145 * t7681 + 15) * t7668
            t7669 = 2 * phi1
            tfunc[..., c] = -(0.93e2 / 0.8192e4) * ((t7683 + t7684) * np.exp((-4*1j) * (t7669 - 3 * phi2)) + (-t7683 + t7684) * np.exp((-4*1j) * (t7669 + 3 * phi2))) * np.sqrt(0.1365e4)

        if Bindx == 406:
            t7701 = np.cos(phi)
            t7700 = t7701 ** 2
            t7703 = t7701 * t7700
            t7706 = t7703 ** 2
            t7707 = t7701 * t7706
            t7714 = t7707 ** 2
            t7716 = -650325 * t7701 * t7714 + 509
            t7712 = t7706 ** 2
            t7704 = t7700 ** 2
            t7705 = t7701 * t7704
            t7710 = t7705 ** 2
            t7708 = t7704 ** 2
            t7702 = 7 * phi1
            t7693 = t7701 * t7708
            t7691 = t7701 * t7710
            t7689 = t7701 * t7712
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt((1 + t7701)) * np.sqrt(0.11e2) * ((-1475565 * t7689 + 7105735 * t7691 - 8315489 * t7693 - 37611 * t7700 - 2091 * t7701 + 85869 * t7703 + 416129 * t7704 - 949319 * t7705 - 1439319 * t7706 + 4184801 * t7707 + 1154071 * t7708 + 2694335 * t7710 - 5242965 * t7712 + 2471235 * t7714 + t7716) * np.exp((-1*1j) * (t7702 - 6 * phi2)) + (-2166255 * t7689 + 2689505 * t7691 - 1489411 * t7693 + 40775 * t7700 - 1073 * t7701 + 7483 * t7703 - 509481 * t7704 - 23709 * t7705 + 2412347 * t7706 + 333135 * t7707 - 5672007 * t7708 + 7110565 * t7710 - 4552275 * t7712 + 1170585 * t7714 - t7716) * np.exp((-1*1j) * (t7702 + 6 * phi2))) * ((1 - t7701) ** (-0.1e1 / 0.2e1))

        if Bindx == 407:
            t7734 = np.cos(phi)
            t7733 = t7734 ** 2
            t7736 = t7734 * t7733
            t7737 = t7733 ** 2
            t7738 = t7734 * t7737
            t7739 = t7736 ** 2
            t7740 = t7734 * t7739
            t7741 = t7737 ** 2
            t7743 = t7738 ** 2
            t7745 = t7739 ** 2
            t7747 = t7740 ** 2
            t7751 = -92 * t7736 + 1740 * t7738 - 5852 * t7740 + (7524 * t7741 - 3060 * t7743 - 1052 * t7745 + 812 * t7747 - 20) * t7734
            t7750 = 216 * t7733 - 1252 * t7737 + 2200 * t7739 - 5368 * t7743 + 5036 * t7745 - 1272 * t7747 - 9 + (594 - 145 * t7741) * t7741
            t7735 = 7 * phi1
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.31395e5) * np.sqrt(0.2e1) * ((1 + t7734) ** (-0.1e1 / 0.2e1)) * ((1 - t7734) ** (-0.1e1 / 0.2e1)) * ((t7750 + t7751) * np.exp((-1*1j) * (t7735 - 12 * phi2)) + (-t7750 + t7751) * np.exp((-1*1j) * (t7735 + 12 * phi2)))

        if Bindx == 408:
            t7768 = np.cos(phi)
            t7767 = t7768 ** 2
            t7770 = t7767 ** 2
            t7769 = t7768 * t7767
            t7772 = t7769 ** 2
            t7774 = t7770 ** 2
            t7771 = t7768 * t7770
            t7776 = t7771 ** 2
            t7778 = t7772 ** 2
            t7773 = t7768 * t7772
            t7780 = t7773 ** 2
            t7783 = 194712 * t7767 - 2861418 * t7770 + 16846228 * t7772 - 49242402 * t7774 + 75232080 * t7776 - 57327270 * t7778 + 17168580 * t7780 - 2318
            t7782 = 981547 * t7769 - 7094787 * t7771 + 20356083 * t7773 + (-23637537 * t7774 + 3108105 * t7776 + 13468455 * t7778 - 7153575 * t7780 - 36483) * t7768
            tfunc[..., c] = -(0.31e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t7782 + t7783) * np.exp((-6*1j) * (phi1 - phi2)) + (-t7782 + t7783) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 409:
            t7800 = np.cos(phi)
            t7799 = t7800 ** 2
            t7802 = t7799 ** 2
            t7801 = t7800 * t7799
            t7804 = t7801 ** 2
            t7806 = t7802 ** 2
            t7803 = t7800 * t7802
            t7808 = t7803 ** 2
            t7810 = t7804 ** 2
            t7805 = t7800 * t7804
            t7812 = t7805 ** 2
            t7815 = 4 - 120 * t7799 + 996 * t7802 - 2936 * t7804 + 3276 * t7806 - 456 * t7808 - 1460 * t7810 + 696 * t7812
            t7814 = -223 * t7801 - 3 * t7803 + 2205 * t7805 + (-4717 * t7806 + 3603 * t7808 - 753 * t7810 - 145 * t7812 + 33) * t7800
            tfunc[..., c] = -(0.31e2 / 0.16384e5) * ((t7814 + t7815) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (-t7814 + t7815) * np.exp((-6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.345345e6)

        if Bindx == 410:
            t7833 = np.cos(phi)
            t7832 = t7833 ** 2
            t7835 = t7833 * t7832
            t7836 = t7832 ** 2
            t7837 = t7833 * t7836
            t7838 = t7835 ** 2
            t7839 = t7833 * t7838
            t7840 = t7836 ** 2
            t7842 = t7837 ** 2
            t7844 = t7838 ** 2
            t7846 = t7839 ** 2
            t7850 = 179930 * t7835 - 1640574 * t7837 + 6840290 * t7839 + (-15081330 * t7840 + 18193230 * t7842 - 11347050 * t7844 + 2861430 * t7846 - 5926) * t7833
            t7849 = -19350 * t7832 + 258470 * t7836 - 1137694 * t7838 + 596574 * t7842 - 4440150 * t7844 + 4440150 * t7846 + 215 + (1732500 - 1430715 * t7840) * t7840
            t7834 = 5 * phi1
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.105e3) * ((t7849 + t7850) * np.exp((-1*1j) * (t7834 - 6 * phi2)) + (-t7849 + t7850) * np.exp((-1*1j) * (t7834 + 6 * phi2))) * ((1 + t7833) ** (-0.1e1 / 0.2e1)) * ((1 - t7833) ** (-0.1e1 / 0.2e1))

        if Bindx == 411:
            t7868 = np.cos(phi)
            t7867 = t7868 ** 2
            t7870 = t7868 * t7867
            t7871 = t7867 ** 2
            t7872 = t7868 * t7871
            t7873 = t7870 ** 2
            t7874 = t7868 * t7873
            t7875 = t7871 ** 2
            t7877 = t7872 ** 2
            t7879 = t7873 ** 2
            t7881 = t7874 ** 2
            t7885 = 508 * t7870 - 1836 * t7872 + 2332 * t7874 + (412 * t7875 - 3564 * t7877 + 3004 * t7879 - 812 * t7881 - 44) * t7868
            t7884 = -36 * t7867 + 664 * t7871 - 3380 * t7873 - 7724 * t7877 + 3568 * t7879 - 252 * t7881 + 1 + (7362 - 203 * t7875) * t7875
            t7869 = 5 * phi1
            tfunc[..., c] = (0.465e3 / 0.32768e5*1j) * np.sqrt(0.3289e4) * np.sqrt(0.2e1) * ((-t7884 + t7885) * np.exp((-1*1j) * (t7869 - 12 * phi2)) + (t7884 + t7885) * np.exp((-1*1j) * (t7869 + 12 * phi2))) * ((1 + t7868) ** (-0.1e1 / 0.2e1)) * ((1 - t7868) ** (-0.1e1 / 0.2e1))

        if Bindx == 412:
            t7902 = np.cos(phi)
            t7901 = t7902 ** 2
            t7904 = t7902 * t7901
            t7905 = t7901 ** 2
            t7906 = t7902 * t7905
            t7907 = t7904 ** 2
            t7908 = t7902 * t7907
            t7909 = t7905 ** 2
            t7911 = t7906 ** 2
            t7913 = t7907 ** 2
            t7915 = t7908 ** 2
            t7918 = 1509 * t7904 + 23089 * t7906 - 336111 * t7908 + (1383519 * t7909 - 2498145 * t7911 + 2076555 * t7913 - 650325 * t7915 - 91) * t7902
            t7917 = 15416 * t7901 - 234884 * t7905 + 1344056 * t7907 - 3687084 * t7909 + 5235720 * t7911 - 3713580 * t7913 + 1040520 * t7915 - 164
            t7903 = 2 * phi1
            tfunc[..., c] = -(0.31e2 / 0.16384e5) * ((t7917 + t7918) * np.exp((-2*1j) * (t7903 - 3 * phi2)) + (t7917 - t7918) * np.exp((-2*1j) * (t7903 + 3 * phi2))) * np.sqrt(0.231e3)

        if Bindx == 413:
            t7935 = np.cos(phi)
            t7934 = t7935 ** 2
            t7937 = t7934 ** 2
            t7936 = t7935 * t7934
            t7939 = t7936 ** 2
            t7941 = t7937 ** 2
            t7938 = t7935 * t7937
            t7943 = t7938 ** 2
            t7945 = t7939 ** 2
            t7940 = t7935 * t7939
            t7947 = t7940 ** 2
            t7950 = 8 - 320 * t7934 + 872 * t7937 + 2800 * t7939 - 13800 * t7941 + 20512 * t7943 - 13320 * t7945 + 3248 * t7947
            t7949 = 2091 * t7936 - 9815 * t7938 + 20355 * t7940 + (-19805 * t7941 + 7241 * t7943 + 1099 * t7945 - 1015 * t7947 - 151) * t7935
            tfunc[..., c] = -(0.93e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * ((t7949 + t7950) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (-t7949 + t7950) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 414:
            t7968 = np.cos(phi)
            t7967 = t7968 ** 2
            t7969 = t7968 * t7967
            t7970 = t7967 ** 2
            t7971 = t7968 * t7970
            t7972 = t7969 ** 2
            t7973 = t7968 * t7972
            t7974 = t7970 ** 2
            t7976 = t7971 ** 2
            t7978 = t7972 ** 2
            t7980 = t7973 ** 2
            t7984 = 54794 * t7969 - 516046 * t7971 + 2153714 * t7973 + (-4647426 * t7974 + 5414430 * t7976 - 3238170 * t7978 + 780390 * t7980 - 1686) * t7968
            t7983 = 4606 * t7967 - 79694 * t7970 + 559206 * t7972 + 4046298 * t7976 - 4565730 * t7978 + 2699970 * t7980 - 47 + (-2014284 - 650325 * t7974) * t7974
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.1463e4) * ((t7983 + t7984) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (-t7983 + t7984) * np.exp((-3*1j) * (phi1 + 2 * phi2))) * ((1 + t7968) ** (-0.1e1 / 0.2e1)) * ((1 - t7968) ** (-0.1e1 / 0.2e1))

        if Bindx == 415:
            t8002 = np.cos(phi)
            t8001 = t8002 ** 2
            t8003 = t8002 * t8001
            t8004 = t8001 ** 2
            t8005 = t8002 * t8004
            t8006 = t8003 ** 2
            t8007 = t8002 * t8006
            t8008 = t8004 ** 2
            t8010 = t8005 ** 2
            t8012 = t8006 ** 2
            t8014 = t8007 ** 2
            t8018 = 1036 * t8003 - 6716 * t8005 + 20140 * t8007 + (-32020 * t8008 + 28100 * t8010 - 12916 * t8012 + 2436 * t8014 - 60) * t8002
            t8017 = -572 * t8001 + 3904 * t8004 - 10380 * t8006 - 4788 * t8010 - 3448 * t8012 + 3836 * t8014 + 13 + (12450 - 1015 * t8008) * t8008
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.85215e5) * np.sqrt(0.2e1) * ((t8017 + t8018) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (-t8017 + t8018) * np.exp((-3*1j) * (phi1 + 4 * phi2))) * ((1 + t8002) ** (-0.1e1 / 0.2e1)) * ((1 - t8002) ** (-0.1e1 / 0.2e1))

        if Bindx == 416:
            t8035 = np.cos(phi)
            t8034 = t8035 ** 2
            t8037 = t8034 ** 2
            t8036 = t8035 * t8034
            t8039 = t8036 ** 2
            t8041 = t8037 ** 2
            t8038 = t8035 * t8037
            t8043 = t8038 ** 2
            t8045 = t8039 ** 2
            t8040 = t8035 * t8039
            t8047 = t8040 ** 2
            t8050 = 600 * t8034 - 9554 * t8037 + 55972 * t8039 - 153962 * t8041 + 215280 * t8043 - 148350 * t8045 + 40020 * t8047 - 6
            t8049 = 2763 * t8036 - 26851 * t8038 + 116355 * t8040 + (-261809 * t8041 + 318665 * t8043 - 199065 * t8045 + 50025 * t8047 - 83) * t8035
            tfunc[..., c] = -(0.93e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.19019e5) * ((-t8049 + t8050) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t8049 + t8050) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 417:
            t8067 = np.cos(phi)
            t8066 = t8067 ** 2
            t8068 = t8067 * t8066
            t8069 = t8066 ** 2
            t8070 = t8067 * t8069
            t8071 = t8068 ** 2
            t8072 = t8067 * t8071
            t8073 = t8069 ** 2
            t8075 = t8070 ** 2
            t8077 = t8071 ** 2
            t8079 = t8072 ** 2
            t8082 = 279 * t8068 - 5 * t8070 - 3285 * t8072 + (8485 * t8073 - 9355 * t8075 + 4921 * t8077 - 1015 * t8079 - 25) * t8067
            t8081 = 12 - 552 * t8066 + 4204 * t8069 - 13160 * t8071 + 21220 * t8073 - 18712 * t8075 + 8612 * t8077 - 1624 * t8079
            tfunc[..., c] = (0.93e2 / 0.16384e5) * ((t8081 - t8082) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (t8081 + t8082) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.6555e4)

        if Bindx == 418:
            t8100 = np.cos(phi)
            t8099 = t8100 ** 2
            t8101 = t8100 * t8099
            t8102 = t8099 ** 2
            t8103 = t8100 * t8102
            t8104 = t8101 ** 2
            t8105 = t8100 * t8104
            t8106 = t8102 ** 2
            t8108 = t8103 ** 2
            t8110 = t8104 ** 2
            t8112 = t8105 ** 2
            t8116 = 1414 * t8101 - 13650 * t8103 + 57726 * t8105 + (-124798 * t8106 + 144210 * t8108 - 84870 * t8110 + 20010 * t8112 - 42) * t8100
            t8115 = 714 * t8099 - 12082 * t8102 + 78722 * t8104 + 451582 * t8108 - 448270 * t8110 + 233910 * t8112 - 7 + (-254544 - 50025 * t8106) * t8106
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.46189e5) * ((1 + t8100) ** (-0.1e1 / 0.2e1)) * ((1 - t8100) ** (-0.1e1 / 0.2e1)) * ((t8115 + t8116) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t8115 + t8116) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 419:
            t8134 = np.cos(phi)
            t8133 = t8134 ** 2
            t8135 = t8134 * t8133
            t8136 = t8133 ** 2
            t8137 = t8134 * t8136
            t8138 = t8135 ** 2
            t8139 = t8134 * t8138
            t8140 = t8136 ** 2
            t8142 = t8137 ** 2
            t8144 = t8138 ** 2
            t8146 = t8139 ** 2
            t8150 = 188 * t8135 - 876 * t8137 + 1980 * t8139 + (-2500 * t8140 + 1812 * t8142 - 708 * t8144 + 116 * t8146 - 12) * t8134
            t8149 = 48 * t8133 - 412 * t8136 + 1520 * t8138 + 3536 * t8142 - 2428 * t8144 + 912 * t8146 - 1 + (-3030 - 145 * t8140) * t8140
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.780045e6) * np.sqrt(0.2e1) * ((1 + t8134) ** (-0.1e1 / 0.2e1)) * ((1 - t8134) ** (-0.1e1 / 0.2e1)) * ((t8149 + t8150) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (-t8149 + t8150) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 420:
            t8159 = np.sin(phi)
            t8156 = t8159 ** 2
            t8157 = t8159 * t8156
            t8151 = np.cos(phi)
            t8152 = t8151 ** 2
            t8153 = t8152 ** 2
            tfunc[..., c] = (-0.31e2 / 0.4096e4*1j) * t8151 * t8157 ** 2 * (-644 * t8152 + 21 + (-12420 * t8152 + 4830 + 10005 * t8153) * t8153) * np.sin((6 * phi2)) * np.sqrt(0.692835e6)

        if Bindx == 421:
            t8165 = np.sin(phi)
            t8161 = t8165 ** 2
            t8162 = t8165 * t8161
            t8163 = t8162 ** 2
            t8160 = np.cos(phi)
            tfunc[..., c] = (0.465e3 / 0.4096e4*1j) * t8160 * t8163 ** 2 * (29 * t8160 ** 2 - 3) * np.sin((12 * phi2)) * np.sqrt(0.52003e5) * np.sqrt(0.2e1)

        if Bindx == 422:
            t8183 = np.cos(phi)
            t8182 = t8183 ** 2
            t8184 = t8183 * t8182
            t8185 = t8182 ** 2
            t8186 = t8183 * t8185
            t8187 = t8184 ** 2
            t8188 = t8183 * t8187
            t8189 = t8185 ** 2
            t8191 = t8186 ** 2
            t8193 = t8187 ** 2
            t8195 = t8188 ** 2
            t8199 = -1414 * t8184 + 13650 * t8186 - 57726 * t8188 + (124798 * t8189 - 144210 * t8191 + 84870 * t8193 - 20010 * t8195 + 42) * t8183
            t8198 = 714 * t8182 - 12082 * t8185 + 78722 * t8187 + 451582 * t8191 - 448270 * t8193 + 233910 * t8195 - 7 + (-254544 - 50025 * t8189) * t8189
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.46189e5) * ((1 + t8183) ** (-0.1e1 / 0.2e1)) * ((1 - t8183) ** (-0.1e1 / 0.2e1)) * ((-t8198 + t8199) * np.exp((1j) * (phi1 - 6 * phi2)) + (t8198 + t8199) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 423:
            t8217 = np.cos(phi)
            t8216 = t8217 ** 2
            t8218 = t8217 * t8216
            t8219 = t8216 ** 2
            t8220 = t8217 * t8219
            t8221 = t8218 ** 2
            t8222 = t8217 * t8221
            t8223 = t8219 ** 2
            t8225 = t8220 ** 2
            t8227 = t8221 ** 2
            t8229 = t8222 ** 2
            t8233 = -188 * t8218 + 876 * t8220 - 1980 * t8222 + (2500 * t8223 - 1812 * t8225 + 708 * t8227 - 116 * t8229 + 12) * t8217
            t8232 = 48 * t8216 - 412 * t8219 + 1520 * t8221 + 3536 * t8225 - 2428 * t8227 + 912 * t8229 - 1 + (-3030 - 145 * t8223) * t8223
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.780045e6) * np.sqrt(0.2e1) * ((1 + t8217) ** (-0.1e1 / 0.2e1)) * ((1 - t8217) ** (-0.1e1 / 0.2e1)) * ((-t8232 + t8233) * np.exp((1j) * (phi1 - 12 * phi2)) + (t8232 + t8233) * np.exp((1j) * (phi1 + 12 * phi2)))

        if Bindx == 424:
            t8250 = np.cos(phi)
            t8249 = t8250 ** 2
            t8252 = t8249 ** 2
            t8251 = t8250 * t8249
            t8254 = t8251 ** 2
            t8256 = t8252 ** 2
            t8253 = t8250 * t8252
            t8258 = t8253 ** 2
            t8260 = t8254 ** 2
            t8255 = t8250 * t8254
            t8262 = t8255 ** 2
            t8265 = 600 * t8249 - 9554 * t8252 + 55972 * t8254 - 153962 * t8256 + 215280 * t8258 - 148350 * t8260 + 40020 * t8262 - 6
            t8264 = 2763 * t8251 - 26851 * t8253 + 116355 * t8255 + (-261809 * t8256 + 318665 * t8258 - 199065 * t8260 + 50025 * t8262 - 83) * t8250
            tfunc[..., c] = (0.93e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.19019e5) * ((-t8264 + t8265) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t8264 + t8265) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 425:
            t8282 = np.cos(phi)
            t8281 = t8282 ** 2
            t8283 = t8282 * t8281
            t8284 = t8281 ** 2
            t8285 = t8282 * t8284
            t8286 = t8283 ** 2
            t8287 = t8282 * t8286
            t8288 = t8284 ** 2
            t8290 = t8285 ** 2
            t8292 = t8286 ** 2
            t8294 = t8287 ** 2
            t8297 = 279 * t8283 - 5 * t8285 - 3285 * t8287 + (8485 * t8288 - 9355 * t8290 + 4921 * t8292 - 1015 * t8294 - 25) * t8282
            t8296 = -12 + 552 * t8281 - 4204 * t8284 + 13160 * t8286 - 21220 * t8288 + 18712 * t8290 - 8612 * t8292 + 1624 * t8294
            tfunc[..., c] = (0.93e2 / 0.16384e5) * ((t8296 + t8297) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (t8296 - t8297) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.6555e4)

        if Bindx == 426:
            t8315 = np.cos(phi)
            t8314 = t8315 ** 2
            t8316 = t8315 * t8314
            t8317 = t8314 ** 2
            t8318 = t8315 * t8317
            t8319 = t8316 ** 2
            t8320 = t8315 * t8319
            t8321 = t8317 ** 2
            t8323 = t8318 ** 2
            t8325 = t8319 ** 2
            t8327 = t8320 ** 2
            t8331 = -54794 * t8316 + 516046 * t8318 - 2153714 * t8320 + (4647426 * t8321 - 5414430 * t8323 + 3238170 * t8325 - 780390 * t8327 + 1686) * t8315
            t8330 = 4606 * t8314 - 79694 * t8317 + 559206 * t8319 + 4046298 * t8323 - 4565730 * t8325 + 2699970 * t8327 - 47 + (-2014284 - 650325 * t8321) * t8321
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.1463e4) * ((1 + t8315) ** (-0.1e1 / 0.2e1)) * ((1 - t8315) ** (-0.1e1 / 0.2e1)) * ((-t8330 + t8331) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t8330 + t8331) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 427:
            t8349 = np.cos(phi)
            t8348 = t8349 ** 2
            t8350 = t8349 * t8348
            t8351 = t8348 ** 2
            t8352 = t8349 * t8351
            t8353 = t8350 ** 2
            t8354 = t8349 * t8353
            t8355 = t8351 ** 2
            t8357 = t8352 ** 2
            t8359 = t8353 ** 2
            t8361 = t8354 ** 2
            t8365 = 1036 * t8350 - 6716 * t8352 + 20140 * t8354 + (-32020 * t8355 + 28100 * t8357 - 12916 * t8359 + 2436 * t8361 - 60) * t8349
            t8364 = -572 * t8348 + 3904 * t8351 - 10380 * t8353 - 4788 * t8357 - 3448 * t8359 + 3836 * t8361 + 13 + (12450 - 1015 * t8355) * t8355
            tfunc[..., c] = (0.31e2 / 0.32768e5*1j) * np.sqrt(0.85215e5) * np.sqrt(0.2e1) * ((t8364 + t8365) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (-t8364 + t8365) * np.exp((3*1j) * (phi1 + 4 * phi2))) * ((1 + t8349) ** (-0.1e1 / 0.2e1)) * ((1 - t8349) ** (-0.1e1 / 0.2e1))

        if Bindx == 428:
            t8382 = np.cos(phi)
            t8381 = t8382 ** 2
            t8384 = t8382 * t8381
            t8385 = t8381 ** 2
            t8386 = t8382 * t8385
            t8387 = t8384 ** 2
            t8388 = t8382 * t8387
            t8389 = t8385 ** 2
            t8391 = t8386 ** 2
            t8393 = t8387 ** 2
            t8395 = t8388 ** 2
            t8398 = 1509 * t8384 + 23089 * t8386 - 336111 * t8388 + (1383519 * t8389 - 2498145 * t8391 + 2076555 * t8393 - 650325 * t8395 - 91) * t8382
            t8397 = 15416 * t8381 - 234884 * t8385 + 1344056 * t8387 - 3687084 * t8389 + 5235720 * t8391 - 3713580 * t8393 + 1040520 * t8395 - 164
            t8383 = 2 * phi1
            tfunc[..., c] = (0.31e2 / 0.16384e5) * ((t8397 + t8398) * np.exp((2*1j) * (t8383 - 3 * phi2)) + (t8397 - t8398) * np.exp((2*1j) * (t8383 + 3 * phi2))) * np.sqrt(0.231e3)

        if Bindx == 429:
            t8415 = np.cos(phi)
            t8414 = t8415 ** 2
            t8417 = t8414 ** 2
            t8416 = t8415 * t8414
            t8419 = t8416 ** 2
            t8421 = t8417 ** 2
            t8418 = t8415 * t8417
            t8423 = t8418 ** 2
            t8425 = t8419 ** 2
            t8420 = t8415 * t8419
            t8427 = t8420 ** 2
            t8430 = -8 + 320 * t8414 - 872 * t8417 - 2800 * t8419 + 13800 * t8421 - 20512 * t8423 + 13320 * t8425 - 3248 * t8427
            t8429 = 2091 * t8416 - 9815 * t8418 + 20355 * t8420 + (-19805 * t8421 + 7241 * t8423 + 1099 * t8425 - 1015 * t8427 - 151) * t8415
            tfunc[..., c] = -(0.93e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.1495e4) * ((-t8429 + t8430) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t8429 + t8430) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 430:
            t8448 = np.cos(phi)
            t8447 = t8448 ** 2
            t8450 = t8448 * t8447
            t8451 = t8447 ** 2
            t8452 = t8448 * t8451
            t8453 = t8450 ** 2
            t8454 = t8448 * t8453
            t8455 = t8451 ** 2
            t8457 = t8452 ** 2
            t8459 = t8453 ** 2
            t8461 = t8454 ** 2
            t8465 = 179930 * t8450 - 1640574 * t8452 + 6840290 * t8454 + (-15081330 * t8455 + 18193230 * t8457 - 11347050 * t8459 + 2861430 * t8461 - 5926) * t8448
            t8464 = -19350 * t8447 + 258470 * t8451 - 1137694 * t8453 + 596574 * t8457 - 4440150 * t8459 + 4440150 * t8461 + 215 + (1732500 - 1430715 * t8455) * t8455
            t8449 = 5 * phi1
            tfunc[..., c] = (0.31e2 / 0.32768e5*1j) * np.sqrt(0.105e3) * ((t8464 + t8465) * np.exp((1j) * (t8449 - 6 * phi2)) + (-t8464 + t8465) * np.exp((1j) * (t8449 + 6 * phi2))) * ((1 + t8448) ** (-0.1e1 / 0.2e1)) * ((1 - t8448) ** (-0.1e1 / 0.2e1))

        if Bindx == 431:
            t8483 = np.cos(phi)
            t8482 = t8483 ** 2
            t8485 = t8483 * t8482
            t8486 = t8482 ** 2
            t8487 = t8483 * t8486
            t8488 = t8485 ** 2
            t8489 = t8483 * t8488
            t8490 = t8486 ** 2
            t8492 = t8487 ** 2
            t8494 = t8488 ** 2
            t8496 = t8489 ** 2
            t8500 = 508 * t8485 - 1836 * t8487 + 2332 * t8489 + (412 * t8490 - 3564 * t8492 + 3004 * t8494 - 812 * t8496 - 44) * t8483
            t8499 = -36 * t8482 + 664 * t8486 - 3380 * t8488 - 7724 * t8492 + 3568 * t8494 - 252 * t8496 + 1 + (7362 - 203 * t8490) * t8490
            t8484 = 5 * phi1
            tfunc[..., c] = (-0.465e3 / 0.32768e5*1j) * np.sqrt(0.3289e4) * np.sqrt(0.2e1) * ((1 + t8483) ** (-0.1e1 / 0.2e1)) * ((1 - t8483) ** (-0.1e1 / 0.2e1)) * ((-t8499 + t8500) * np.exp((1j) * (t8484 - 12 * phi2)) + (t8499 + t8500) * np.exp((1j) * (t8484 + 12 * phi2)))

        if Bindx == 432:
            t8517 = np.cos(phi)
            t8516 = t8517 ** 2
            t8519 = t8516 ** 2
            t8518 = t8517 * t8516
            t8521 = t8518 ** 2
            t8523 = t8519 ** 2
            t8520 = t8517 * t8519
            t8525 = t8520 ** 2
            t8527 = t8521 ** 2
            t8522 = t8517 * t8521
            t8529 = t8522 ** 2
            t8532 = -194712 * t8516 + 2861418 * t8519 - 16846228 * t8521 + 49242402 * t8523 - 75232080 * t8525 + 57327270 * t8527 - 17168580 * t8529 + 2318
            t8531 = 981547 * t8518 - 7094787 * t8520 + 20356083 * t8522 + (-23637537 * t8523 + 3108105 * t8525 + 13468455 * t8527 - 7153575 * t8529 - 36483) * t8517
            tfunc[..., c] = -(0.31e2 / 0.32768e5) * np.sqrt(0.2e1) * ((-t8531 + t8532) * np.exp((6*1j) * (phi1 - phi2)) + (t8531 + t8532) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 433:
            t8549 = np.cos(phi)
            t8548 = t8549 ** 2
            t8551 = t8548 ** 2
            t8550 = t8549 * t8548
            t8553 = t8550 ** 2
            t8555 = t8551 ** 2
            t8552 = t8549 * t8551
            t8557 = t8552 ** 2
            t8559 = t8553 ** 2
            t8554 = t8549 * t8553
            t8561 = t8554 ** 2
            t8564 = 4 - 120 * t8548 + 996 * t8551 - 2936 * t8553 + 3276 * t8555 - 456 * t8557 - 1460 * t8559 + 696 * t8561
            t8563 = -223 * t8550 - 3 * t8552 + 2205 * t8554 + (-4717 * t8555 + 3603 * t8557 - 753 * t8559 - 145 * t8561 + 33) * t8549
            tfunc[..., c] = (0.31e2 / 0.16384e5) * ((t8563 + t8564) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (-t8563 + t8564) * np.exp((6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.345345e6)

        if Bindx == 434:
            t8581 = np.cos(phi)
            t8580 = t8581 ** 2
            t8583 = t8581 * t8580
            t8586 = t8583 ** 2
            t8587 = t8581 * t8586
            t8594 = t8587 ** 2
            t8596 = -650325 * t8581 * t8594 - 509
            t8592 = t8586 ** 2
            t8584 = t8580 ** 2
            t8585 = t8581 * t8584
            t8590 = t8585 ** 2
            t8588 = t8584 ** 2
            t8582 = 7 * phi1
            t8573 = t8581 * t8588
            t8571 = t8581 * t8590
            t8569 = t8581 * t8592
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt((1 - t8581)) * np.sqrt(0.11e2) * ((2166255 * t8569 - 2689505 * t8571 + 1489411 * t8573 + 40775 * t8580 + 1073 * t8581 - 7483 * t8583 - 509481 * t8584 + 23709 * t8585 + 2412347 * t8586 - 333135 * t8587 - 5672007 * t8588 + 7110565 * t8590 - 4552275 * t8592 + 1170585 * t8594 + t8596) * np.exp((1j) * (t8582 - 6 * phi2)) + (1475565 * t8569 - 7105735 * t8571 + 8315489 * t8573 - 37611 * t8580 + 2091 * t8581 - 85869 * t8583 + 416129 * t8584 + 949319 * t8585 - 1439319 * t8586 - 4184801 * t8587 + 1154071 * t8588 + 2694335 * t8590 - 5242965 * t8592 + 2471235 * t8594 - t8596) * np.exp((1j) * (t8582 + 6 * phi2))) * ((1 + t8581) ** (-0.1e1 / 0.2e1))

        if Bindx == 435:
            t8614 = np.cos(phi)
            t8613 = t8614 ** 2
            t8616 = t8614 * t8613
            t8617 = t8613 ** 2
            t8618 = t8614 * t8617
            t8619 = t8616 ** 2
            t8620 = t8614 * t8619
            t8621 = t8617 ** 2
            t8623 = t8618 ** 2
            t8625 = t8619 ** 2
            t8627 = t8620 ** 2
            t8631 = 92 * t8616 - 1740 * t8618 + 5852 * t8620 + (-7524 * t8621 + 3060 * t8623 + 1052 * t8625 - 812 * t8627 + 20) * t8614
            t8630 = 216 * t8613 - 1252 * t8617 + 2200 * t8619 - 5368 * t8623 + 5036 * t8625 - 1272 * t8627 - 9 + (594 - 145 * t8621) * t8621
            t8615 = 7 * phi1
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.31395e5) * np.sqrt(0.2e1) * ((1 + t8614) ** (-0.1e1 / 0.2e1)) * ((1 - t8614) ** (-0.1e1 / 0.2e1)) * ((-t8630 + t8631) * np.exp((1j) * (t8615 - 12 * phi2)) + (t8630 + t8631) * np.exp((1j) * (t8615 + 12 * phi2)))

        if Bindx == 436:
            t8648 = np.cos(phi)
            t8647 = t8648 ** 2
            t8651 = t8647 ** 2
            t8650 = t8648 * t8647
            t8653 = t8650 ** 2
            t8655 = t8651 ** 2
            t8652 = t8648 * t8651
            t8657 = t8652 ** 2
            t8659 = t8653 ** 2
            t8654 = t8648 * t8653
            t8661 = t8654 ** 2
            t8664 = -560 * t8647 + 2632 * t8651 + 20496 * t8653 - 140776 * t8655 + 300720 * t8657 - 273000 * t8659 + 90480 * t8661 + 8
            t8663 = -10731 * t8650 + 73633 * t8652 - 222055 * t8654 + (316967 * t8655 - 185185 * t8657 - 1365 * t8659 + 28275 * t8661 + 461) * t8648
            t8649 = 4 * phi1
            tfunc[..., c] = (0.93e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.253e3) * ((-t8663 + t8664) * np.exp((2*1j) * (t8649 - 3 * phi2)) + (t8663 + t8664) * np.exp((2*1j) * (t8649 + 3 * phi2)))

        if Bindx == 437:
            t8681 = np.cos(phi)
            t8680 = t8681 ** 2
            t8684 = t8680 ** 2
            t8683 = t8681 * t8680
            t8686 = t8683 ** 2
            t8688 = t8684 ** 2
            t8685 = t8681 * t8684
            t8690 = t8685 ** 2
            t8692 = t8686 ** 2
            t8687 = t8681 * t8686
            t8694 = t8687 ** 2
            t8697 = 16 - 256 * t8680 + 592 * t8684 + 1760 * t8686 - 6864 * t8688 + 6336 * t8690 - 656 * t8692 - 928 * t8694
            t8696 = -587 * t8683 + 3047 * t8685 - 4587 * t8687 + (-11 * t8688 + 4295 * t8690 - 2027 * t8692 - 145 * t8694 + 15) * t8681
            t8682 = 2 * phi1
            tfunc[..., c] = -(0.93e2 / 0.8192e4) * ((-t8696 + t8697) * np.exp((4*1j) * (t8682 - 3 * phi2)) + (t8696 + t8697) * np.exp((4*1j) * (t8682 + 3 * phi2))) * np.sqrt(0.1365e4)

        if Bindx == 438:
            t8713 = np.cos(phi)
            t8712 = t8713 ** 2
            t8715 = t8713 * t8712
            t8718 = t8715 ** 2
            t8719 = t8713 * t8718
            t8727 = -28275 * t8719 ** 2 + 59
            t8724 = t8718 ** 2
            t8716 = t8712 ** 2
            t8717 = t8713 * t8716
            t8722 = t8717 ** 2
            t8720 = t8716 ** 2
            t8714 = 3 * phi1
            t8705 = t8713 * t8720
            t8703 = t8713 * t8722
            t8701 = t8713 * t8724
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * ((1 - t8713) ** (0.3e1 / 0.2e1)) * np.sqrt(0.5313e4) * ((1 + t8713) ** (-0.1e1 / 0.2e1)) * ((-45240 * t8701 - 102765 * t8724 + 177840 * t8703 + 147615 * t8722 - 277800 * t8705 - 109169 * t8720 + 217376 * t8719 + 47449 * t8718 - 87176 * t8717 - 13735 * t8716 + 15664 * t8715 + 2389 * t8712 - 664 * t8713 - t8727) * np.exp((3*1j) * (t8714 - 2 * phi2)) + (-158340 * t8701 - 304395 * t8724 - 112320 * t8703 + 390585 * t8722 + 498300 * t8705 + 11969 * t8720 - 316448 * t8719 - 148393 * t8718 + 54964 * t8717 + 50255 * t8716 + 1504 * t8715 - 4573 * t8712 - 428 * t8713 + t8727) * np.exp((3*1j) * (t8714 + 2 * phi2)))

        if Bindx == 439:
            t8745 = np.cos(phi)
            t8744 = t8745 ** 2
            t8747 = t8745 * t8744
            t8748 = t8744 ** 2
            t8749 = t8745 * t8748
            t8750 = t8747 ** 2
            t8751 = t8745 * t8750
            t8752 = t8748 ** 2
            t8754 = t8749 ** 2
            t8756 = t8750 ** 2
            t8758 = t8751 ** 2
            t8762 = -7876 * t8747 + 23636 * t8749 - 3652 * t8751 + (-63492 * t8752 + 72084 * t8754 - 13956 * t8756 - 7308 * t8758 + 564) * t8745
            t8761 = -1416 * t8744 - 5196 * t8748 + 44088 * t8750 + 28776 * t8754 + 31364 * t8756 - 19096 * t8758 + 177 + (-77682 - 1015 * t8752) * t8752
            t8746 = 3 * phi1
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * np.sqrt(0.65e2) * np.sqrt(0.2e1) * ((1 + t8745) ** (-0.1e1 / 0.2e1)) * ((1 - t8745) ** (-0.1e1 / 0.2e1)) * ((-t8761 + t8762) * np.exp((3*1j) * (t8746 - 4 * phi2)) + (t8761 + t8762) * np.exp((3*1j) * (t8746 + 4 * phi2)))

        if Bindx == 440:
            t8779 = np.cos(phi)
            t8778 = t8779 ** 2
            t8782 = t8778 ** 2
            t8781 = t8779 * t8778
            t8784 = t8781 ** 2
            t8786 = t8782 ** 2
            t8783 = t8779 * t8782
            t8788 = t8783 ** 2
            t8790 = t8784 ** 2
            t8785 = t8779 * t8784
            t8792 = t8785 ** 2
            t8795 = -6 + 312 * t8778 - 2386 * t8782 + 6116 * t8784 - 3562 * t8786 - 7728 * t8788 + 11778 * t8790 - 4524 * t8792
            t8794 = 511 * t8781 - 4343 * t8783 + 15175 * t8785 + (-24125 * t8786 + 16549 * t8788 - 2613 * t8790 - 1131 * t8792 - 23) * t8779
            t8780 = 5 * phi1
            tfunc[..., c] = -(0.465e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.1771e4) * ((-t8794 + t8795) * np.exp((2*1j) * (t8780 - 3 * phi2)) + (t8794 + t8795) * np.exp((2*1j) * (t8780 + 3 * phi2)))

        if Bindx == 441:
            t8812 = np.cos(phi)
            t8811 = t8812 ** 2
            t8815 = t8811 ** 2
            t8814 = t8812 * t8811
            t8817 = t8814 ** 2
            t8819 = t8815 ** 2
            t8816 = t8812 * t8815
            t8821 = t8816 ** 2
            t8823 = t8817 ** 2
            t8818 = t8812 * t8817
            t8825 = t8818 ** 2
            t8828 = -52 - 104 * t8811 + 4076 * t8815 - 10472 * t8817 + 1188 * t8819 + 13992 * t8821 - 7004 * t8823 - 1624 * t8825
            t8827 = 1819 * t8814 + 143 * t8816 - 13233 * t8818 + (16577 * t8819 + 289 * t8821 - 5131 * t8823 - 203 * t8825 - 261) * t8812
            t8813 = 5 * phi1
            tfunc[..., c] = -(0.93e2 / 0.16384e5) * ((-t8827 + t8828) * np.exp((2*1j) * (t8813 - 6 * phi2)) + (t8827 + t8828) * np.exp((2*1j) * (t8813 + 6 * phi2))) * np.sqrt(0.195e3)

        if Bindx == 442:
            t8843 = np.cos(phi)
            t8842 = t8843 ** 2
            t8845 = t8843 * t8842
            t8848 = t8845 ** 2
            t8854 = t8848 ** 2
            t8856 = -435 * t8843 * t8854 + 1
            t8846 = t8842 ** 2
            t8847 = t8843 * t8846
            t8852 = t8847 ** 2
            t8850 = t8846 ** 2
            t8844 = 11 * phi1
            t8837 = t8843 * t8848
            t8835 = t8843 * t8850
            t8833 = t8843 * t8852
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * ((1 - t8843) ** (0.5e1 / 0.2e1)) * np.sqrt(0.115115e6) * ((609 * t8854 + 1746 * t8833 - 2502 * t8852 - 2813 * t8835 + 4047 * t8850 + 2364 * t8837 - 3220 * t8848 - 1149 * t8847 + 1263 * t8846 + 338 * t8845 - 198 * t8842 - 51 * t8843 + t8856) * np.exp((1j) * (t8844 - 6 * phi2)) + (3219 * t8854 + 9738 * t8833 + 14514 * t8852 + 8225 * t8835 - 5895 * t8850 - 12132 * t8837 - 5844 * t8848 + 1413 * t8847 + 2325 * t8846 + 570 * t8845 - 126 * t8842 - 57 * t8843 - t8856) * np.exp((1j) * (t8844 + 6 * phi2))) * ((1 + t8843) ** (-0.1e1 / 0.2e1))

        if Bindx == 443:
            t8874 = np.cos(phi)
            t8873 = t8874 ** 2
            t8876 = t8874 * t8873
            t8877 = t8873 ** 2
            t8878 = t8874 * t8877
            t8879 = t8876 ** 2
            t8880 = t8874 * t8879
            t8881 = t8877 ** 2
            t8883 = t8878 ** 2
            t8885 = t8879 ** 2
            t8887 = t8880 ** 2
            t8891 = -6356 * t8876 - 40092 * t8878 + 126412 * t8880 + (-56628 * t8881 - 87516 * t8883 + 52844 * t8885 + 8932 * t8887 + 2404) * t8874
            t8890 = 4356 * t8873 - 35464 * t8877 + 33748 * t8879 - 148148 * t8883 + 17056 * t8885 + 31836 * t8887 + 363 + (95238 + 1015 * t8881) * t8881
            t8875 = 11 * phi1
            tfunc[..., c] = (0.93e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.3e1) * ((-t8890 + t8891) * np.exp((1j) * (t8875 - 12 * phi2)) + (t8890 + t8891) * np.exp((1j) * (t8875 + 12 * phi2))) * ((1 + t8874) ** (-0.1e1 / 0.2e1)) * ((1 - t8874) ** (-0.1e1 / 0.2e1))

        if Bindx == 444:
            t8908 = np.cos(phi)
            t8907 = t8908 ** 2
            t8911 = t8907 ** 2
            t8910 = t8908 * t8907
            t8913 = t8910 ** 2
            t8915 = t8911 ** 2
            t8912 = t8908 * t8911
            t8917 = t8912 ** 2
            t8919 = t8913 ** 2
            t8914 = t8908 * t8913
            t8921 = t8914 ** 2
            t8924 = -4 + 120 * t8907 - 996 * t8911 + 2936 * t8913 - 3276 * t8915 + 456 * t8917 + 1460 * t8919 - 696 * t8921
            t8923 = -223 * t8910 - 3 * t8912 + 2205 * t8914 + (-4717 * t8915 + 3603 * t8917 - 753 * t8919 - 145 * t8921 + 33) * t8908
            t8909 = 2 * phi1
            tfunc[..., c] = -(0.31e2 / 0.16384e5) * ((-t8923 + t8924) * np.exp((6*1j) * (t8909 - phi2)) + (t8923 + t8924) * np.exp((6*1j) * (t8909 + phi2))) * np.sqrt(0.345345e6)

        if Bindx == 445:
            t8941 = np.cos(phi)
            t8940 = t8941 ** 2
            t8943 = t8940 ** 2
            t8942 = t8941 * t8940
            t8945 = t8942 ** 2
            t8947 = t8943 ** 2
            t8944 = t8941 * t8943
            t8949 = t8944 ** 2
            t8951 = t8945 ** 2
            t8946 = t8941 * t8945
            t8953 = t8946 ** 2
            t8956 = 11712 * t8940 - 30264 * t8943 - 80080 * t8945 + 175032 * t8947 + 13728 * t8949 - 84968 * t8951 - 9744 * t8953 + 488
            t8955 = -9451 * t8942 + 90519 * t8944 - 47619 * t8946 + (-152867 * t8947 + 86775 * t8949 + 39669 * t8951 + 1015 * t8953 - 3945) * t8941
            tfunc[..., c] = -(0.31e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t8955 + t8956) * np.exp((12*1j) * (phi1 - phi2)) + (-t8955 + t8956) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 446:
            t8970 = np.cos(phi)
            t8969 = t8970 ** 2
            t8972 = t8970 * t8969
            t8975 = t8972 ** 2
            t8982 = -145 * t8975 ** 2 - 19
            t8973 = t8969 ** 2
            t8974 = t8970 * t8973
            t8979 = t8974 ** 2
            t8977 = t8973 ** 2
            t8971 = 13 * phi1
            t8964 = t8970 * t8975
            t8962 = t8970 * t8977
            t8960 = t8970 * t8979
            tfunc[..., c] = (-0.93e2 / 0.32768e5*1j) * ((1 - t8970) ** (0.7e1 / 0.2e1)) * np.sqrt(0.16445e5) * ((1 + t8970) ** (-0.1e1 / 0.2e1)) * ((-174 * t8960 - 648 * t8979 + 774 * t8962 + 1161 * t8977 - 1356 * t8964 - 1064 * t8975 + 1164 * t8974 + 531 * t8973 - 486 * t8972 - 144 * t8969 + 78 * t8970 - t8982) * np.exp((1j) * (t8971 - 6 * phi2)) + (-1334 * t8960 - 5384 * t8979 - 12370 * t8962 - 17385 * t8977 - 14460 * t8964 - 5208 * t8975 + 2172 * t8974 + 3405 * t8973 + 1490 * t8972 + 160 * t8969 - 74 * t8970 + t8982) * np.exp((1j) * (t8971 + 6 * phi2)))

        if Bindx == 447:
            t8999 = np.cos(phi)
            t8998 = t8999 ** 2
            t9001 = t8999 * t8998
            t9004 = t9001 ** 2
            t9005 = t8999 * t9004
            t9012 = t9005 ** 2
            t9014 = -145 * t8999 * t9012 - 91
            t9010 = t9004 ** 2
            t9002 = t8998 ** 2
            t9003 = t8999 * t9002
            t9008 = t9003 ** 2
            t9006 = t9002 ** 2
            t9000 = 13 * phi1
            t8991 = t8999 * t9006
            t8989 = t8999 * t9008
            t8987 = t8999 * t9010
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t8999)) * np.sqrt(0.21e2) * ((1363 * t9012 - 5369 * t8987 + 10803 * t9010 - 9061 * t8989 - 6721 * t9008 + 24739 * t8991 - 22737 * t9006 + 429 * t9005 + 17017 * t9004 - 14443 * t9003 + 2873 * t9002 + 3081 * t9001 - 2507 * t8998 + 769 * t8999 + t9014) * np.exp((1j) * (t9000 - 12 * phi2)) + (1653 * t9012 + 8385 * t8987 + 24557 * t9010 + 44421 * t8989 + 46761 * t9008 + 15301 * t8991 - 32175 * t9006 - 55341 * t9005 - 38753 * t9004 - 7293 * t9003 + 10023 * t9002 + 9815 * t9001 + 4227 * t8998 + 951 * t8999 - t9014) * np.exp((1j) * (t9000 + 12 * phi2))) * ((1 + t8999) ** (-0.1e1 / 0.2e1))

        if Bindx == 448:
            t9031 = np.cos(phi)
            t9030 = t9031 ** 2
            t9034 = t9030 ** 2
            t9033 = t9031 * t9030
            t9036 = t9033 ** 2
            t9038 = t9034 ** 2
            t9035 = t9031 * t9034
            t9040 = t9035 ** 2
            t9042 = t9036 ** 2
            t9037 = t9031 * t9036
            t9044 = t9037 ** 2
            t9047 = -2 + 8 * t9030 + 58 * t9034 - 244 * t9036 + 306 * t9038 - 112 * t9040 - 42 * t9042 + 28 * t9044
            t9046 = -63 * t9033 + 119 * t9035 + 9 * t9037 + (-211 * t9038 + 187 * t9040 - 43 * t9042 - 5 * t9044 + 7) * t9031
            t9032 = 7 * phi1
            tfunc[..., c] = (0.93e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.476905e6) * ((t9046 + t9047) * np.exp((2*1j) * (t9032 - 3 * phi2)) + (-t9046 + t9047) * np.exp((2*1j) * (t9032 + 3 * phi2)))

        if Bindx == 449:
            t9064 = np.cos(phi)
            t9063 = t9064 ** 2
            t9067 = t9063 ** 2
            t9066 = t9064 * t9063
            t9069 = t9066 ** 2
            t9071 = t9067 ** 2
            t9068 = t9064 * t9067
            t9073 = t9068 ** 2
            t9075 = t9069 ** 2
            t9070 = t9064 * t9069
            t9077 = t9070 ** 2
            t9080 = -4 - 200 * t9063 - 676 * t9067 + 1144 * t9069 + 1716 * t9071 - 1144 * t9073 - 780 * t9075 - 56 * t9077
            t9079 = -507 * t9066 - 143 * t9068 + 2145 * t9070 + (143 * t9071 - 1313 * t9073 - 277 * t9075 - 5 * t9077 - 43) * t9064
            t9065 = 7 * phi1
            tfunc[..., c] = -(0.31e2 / 0.16384e5) * ((-t9079 + t9080) * np.exp((2*1j) * (t9065 - 6 * phi2)) + (t9079 + t9080) * np.exp((2*1j) * (t9065 + 6 * phi2))) * np.sqrt(0.609e3)

        if Bindx == 450:
            t9096 = np.cos(phi)
            t9112 = -6 * t9096
            t9095 = t9096 ** 2
            t9098 = t9096 * t9095
            t9099 = t9095 ** 2
            t9100 = t9096 * t9099
            t9101 = t9098 ** 2
            t9102 = t9096 * t9101
            t9103 = t9099 ** 2
            t9105 = t9100 ** 2
            t9107 = t9101 ** 2
            t9111 = t9107 * t9112 + 4 * t9098 + 38 * t9100 - 72 * t9102 + t9112 + (38 * t9103 + 4 * t9105) * t9096
            t9110 = -t9102 ** 2 - 11 * t9095 + 39 * t9099 - 27 * t9101 - 27 * t9103 + 39 * t9105 - 11 * t9107 - 1
            t9097 = 5 * phi1
            tfunc[..., c] = (0.155e3 / 0.32768e5*1j) * np.sqrt(0.286143e6) * np.sqrt((1 - t9096)) * np.sqrt((1 + t9096)) * ((-t9110 + t9111) * np.exp((3*1j) * (t9097 - 2 * phi2)) + (t9110 + t9111) * np.exp((3*1j) * (t9097 + 2 * phi2)))

        if Bindx == 451:
            t9127 = np.cos(phi)
            t9126 = t9127 ** 2
            t9129 = t9127 * t9126
            t9130 = t9126 ** 2
            t9131 = t9127 * t9130
            t9133 = t9130 ** 2
            t9135 = t9131 ** 2
            t9132 = t9129 ** 2
            t9137 = t9132 ** 2
            t9138 = t9127 * t9137
            t9141 = -208 * t9129 - 572 * t9131 + 12 * t9138 + (572 * t9133 + 208 * t9135 - 12) * t9127
            t9140 = -t9127 * t9138 + 65 * t9126 + 429 * t9130 + 429 * t9132 - 429 * t9133 - 429 * t9135 - 65 * t9137 + 1
            t9128 = 5 * phi1
            tfunc[..., c] = (-0.31e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.1015e4) * np.sqrt((1 - t9127)) * np.sqrt((1 + t9127)) * ((t9140 + t9141) * np.exp((3*1j) * (t9128 - 4 * phi2)) + (-t9140 + t9141) * np.exp((3*1j) * (t9128 + 4 * phi2)))

        if Bindx == 452:
            t9146 = np.sin(phi)
            t9142 = t9146 ** 2
            t9143 = t9142 ** 2
            t9144 = t9143 ** 2
            tfunc[..., c] = (0.99e2 / 0.65536e5) * np.exp((-16*1j) * phi1) * np.sqrt(0.66786710e8) * t9144 ** 2

        if Bindx == 453:
            t9163 = np.cos(phi)
            t9162 = t9163 ** 2
            t9166 = t9162 ** 2
            t9165 = t9163 * t9162
            t9168 = t9165 ** 2
            t9167 = t9163 * t9166
            t9171 = t9167 ** 2
            t9173 = t9168 ** 2
            t9169 = t9163 * t9168
            t9175 = t9169 ** 2
            t9176 = t9163 * t9175
            t9179 = t9163 * t9176 - 10 * t9162 + 50 * t9166 - 66 * t9168 + 66 * t9171 - 50 * t9173 + 10 * t9175 - 1
            t9178 = -10 * t9165 - 34 * t9167 - 6 * t9176 + (-110 * t9162 + 110) * t9169 + (34 * t9171 + 10 * t9173 + 6) * t9163
            t9164 = 8 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.4032015e7) * np.sqrt(0.2e1) * ((t9178 + t9179) * np.exp((-2*1j) * (t9164 - 3 * phi2)) + (-t9178 + t9179) * np.exp((-2*1j) * (t9164 + 3 * phi2)))

        if Bindx == 454:
            t9195 = np.cos(phi)
            t9212 = -12 * t9195
            t9194 = t9195 ** 2
            t9198 = t9194 ** 2
            t9201 = t9198 ** 2
            t9202 = t9195 * t9201
            t9203 = t9194 * t9202
            t9204 = t9195 * t9203
            t9199 = t9195 * t9198
            t9200 = t9194 * t9199
            t9206 = t9200 ** 2
            t9210 = 64 * t9194 + 364 * t9198 + 364 * t9204 + 64 * t9206 + 1 + (-858 + t9201) * t9201
            t9209 = t9206 * t9212 - 364 * t9199 + 572 * t9200 + 572 * t9202 - 364 * t9203 + t9212 - 196 * (t9194 + t9204) * t9195
            t9196 = 4 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * ((t9209 + t9210) * np.exp((-4*1j) * (t9196 - 3 * phi2)) + (-t9209 + t9210) * np.exp((-4*1j) * (t9196 + 3 * phi2))) * np.sqrt(0.4495e4)

        if Bindx == 455:
            t9213 = np.cos(phi)
            t9221 = -8 * t9213
            t9214 = t9213 ** 2
            t9216 = t9214 ** 2
            t9215 = t9213 * t9214
            tfunc[..., c] = (0.99e2 / 0.8192e4*1j) * t9213 * (28 * t9214 + t9221 + 1 + (-56 * t9213 + 70 + t9216) * t9216 + (-56 + (t9221 + 28) * t9215) * t9215) * ((1 + t9213) ** (0.15e2 / 0.2e1)) * np.sqrt(0.33393355e8) * np.exp((-15*1j) * phi1) * ((1 - t9213) ** (-0.1e1 / 0.2e1))

        if Bindx == 456:
            t9235 = np.cos(phi)
            t9234 = t9235 ** 2
            t9237 = t9235 * t9234
            t9240 = t9237 ** 2
            t9247 = 8 * t9240 ** 2
            t9238 = t9234 ** 2
            t9239 = t9235 * t9238
            t9244 = t9239 ** 2
            t9242 = t9238 ** 2
            t9236 = 5 * phi1
            t9229 = t9235 * t9240
            t9227 = t9235 * t9242
            t9225 = t9235 * t9244
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * ((1 + t9235) ** (0.9e1 / 0.2e1)) * np.sqrt(0.4032015e7) * ((1 - t9235) ** (-0.1e1 / 0.2e1)) * ((t9247 - 85 * t9225 + 407 * t9244 - 1155 * t9227 + 2145 * t9242 - 2706 * t9229 + 2310 * t9240 - 1254 * t9239 + 330 * t9238 + 55 * t9237 - 77 * t9234 + 25 * t9235 - 3) * np.exp((-3*1j) * (t9236 - 2 * phi2)) + (t9247 + 5 * t9225 - 43 * t9244 - 25 * t9227 + 95 * t9242 + 50 * t9229 - 110 * t9240 - 50 * t9239 + 70 * t9238 + 25 * t9237 - 23 * t9234 - 5 * t9235 + 3) * np.exp((-3*1j) * (t9236 + 2 * phi2)))

        if Bindx == 457:
            t9264 = np.cos(phi)
            t9263 = t9264 ** 2
            t9266 = t9264 * t9263
            t9269 = t9266 ** 2
            t9270 = t9264 * t9269
            t9277 = t9270 ** 2
            t9279 = 4 * t9264 * t9277
            t9275 = t9269 ** 2
            t9267 = t9263 ** 2
            t9268 = t9264 * t9267
            t9273 = t9268 ** 2
            t9271 = t9267 ** 2
            t9265 = 5 * phi1
            t9256 = t9264 * t9271
            t9254 = t9264 * t9273
            t9252 = t9264 * t9275
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * ((1 + t9264) ** (0.3e1 / 0.2e1)) * np.sqrt(0.4495e4) * ((1 - t9264) ** (-0.1e1 / 0.2e1)) * ((t9279 - 53 * t9277 + 322 * t9252 - 1183 * t9275 + 2912 * t9254 - 5005 * t9273 + 6006 * t9256 - 4719 * t9271 + 1716 * t9270 + 1001 * t9269 - 2002 * t9268 + 1547 * t9267 - 728 * t9266 + 217 * t9263 - 38 * t9264 + 3) * np.exp((-3*1j) * (t9265 - 4 * phi2)) + (t9279 + 37 * t9277 + 142 * t9252 + 271 * t9275 + 184 * t9254 - 275 * t9273 - 726 * t9256 - 561 * t9271 + 132 * t9270 + 583 * t9269 + 418 * t9268 + 37 * t9267 - 128 * t9266 - 89 * t9263 - 26 * t9264 - 3) * np.exp((-3*1j) * (t9265 + 4 * phi2)))

        if Bindx == 458:
            t9286 = np.sin(phi)
            t9281 = t9286 ** 2
            t9282 = t9286 * t9281
            t9284 = t9286 * t9282 ** 2
            t9280 = np.cos(phi)
            tfunc[..., c] = -(0.99e2 / 0.16384e5) * np.exp((-14*1j) * phi1) * np.sqrt(0.2154410e7) * t9284 ** 2 * (31 * t9280 ** 2 - 1)

        if Bindx == 459:
            t9304 = np.cos(phi)
            t9303 = t9304 ** 2
            t9306 = t9304 * t9303
            t9307 = t9303 ** 2
            t9308 = t9304 * t9307
            t9309 = t9306 ** 2
            t9310 = t9304 * t9309
            t9311 = t9307 ** 2
            t9313 = t9308 ** 2
            t9315 = t9309 ** 2
            t9317 = t9310 ** 2
            t9321 = 335 * t9306 - 2599 * t9308 + 6215 * t9310 + (-5885 * t9311 + 1141 * t9313 + 1435 * t9315 - 651 * t9317 + 9) * t9304
            t9320 = -280 * t9303 + 1190 * t9307 - 924 * t9309 + 6336 * t9313 - 4310 * t9315 + 820 * t9317 + 14 + (-2970 + 124 * t9311) * t9311
            t9305 = 7 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.130065e6) * ((t9320 + t9321) * np.exp((-2*1j) * (t9305 - 3 * phi2)) + (t9320 - t9321) * np.exp((-2*1j) * (t9305 + 3 * phi2)))

        if Bindx == 460:
            t9339 = np.cos(phi)
            t9338 = t9339 ** 2
            t9341 = t9339 * t9338
            t9342 = t9338 ** 2
            t9343 = t9339 * t9342
            t9344 = t9341 ** 2
            t9345 = t9339 * t9344
            t9346 = t9342 ** 2
            t9348 = t9343 ** 2
            t9350 = t9344 ** 2
            t9352 = t9345 ** 2
            t9356 = 1771 * t9341 - 7553 * t9343 - 4433 * t9345 + (20449 * t9346 - 2639 * t9348 - 7259 * t9350 - 651 * t9352 + 315) * t9339
            t9355 = -1156 * t9338 + 728 * t9342 + 12012 * t9344 - 12012 * t9348 + 9464 * t9350 + 2948 * t9352 - 34 + (-12012 + 62 * t9346) * t9346
            t9340 = 7 * phi1
            tfunc[..., c] = (0.33e2 / 0.16384e5) * ((t9355 + t9356) * np.exp((-2*1j) * (t9340 - 6 * phi2)) + (t9355 - t9356) * np.exp((-2*1j) * (t9340 + 6 * phi2))) * np.sqrt(0.145e3)

        if Bindx == 461:
            t9357 = np.cos(phi)
            tfunc[..., c] = (-0.495e3 / 0.8192e4*1j) * (31 * t9357 ** 2 - 3) * t9357 * ((1 + t9357) ** (0.13e2 / 0.2e1)) * np.sqrt(0.215441e6) * np.exp((-13*1j) * phi1) * ((1 - t9357) ** (0.13e2 / 0.2e1))

        if Bindx == 462:
            t9372 = np.cos(phi)
            t9371 = t9372 ** 2
            t9374 = t9372 * t9371
            t9377 = t9374 ** 2
            t9383 = t9377 ** 2
            t9385 = 248 * t9372 * t9383
            t9375 = t9371 ** 2
            t9376 = t9372 * t9375
            t9381 = t9376 ** 2
            t9379 = t9375 ** 2
            t9373 = 13 * phi1
            t9366 = t9372 * t9377
            t9364 = t9372 * t9379
            t9362 = t9372 * t9381
            tfunc[..., c] = (0.165e3 / 0.32768e5*1j) * ((1 + t9372) ** (0.7e1 / 0.2e1)) * np.sqrt(0.26013e5) * ((1 - t9372) ** (-0.1e1 / 0.2e1)) * ((t9385 - 2201 * t9383 + 8454 * t9362 - 18040 * t9381 + 22330 * t9364 - 13761 * t9379 - 1188 * t9366 + 8712 * t9377 - 5940 * t9376 + 1045 * t9375 + 638 * t9374 - 336 * t9371 + 34 * t9372 + 5) * np.exp((-1*1j) * (t9373 - 6 * phi2)) + (t9385 + 217 * t9383 - 1218 * t9362 - 984 * t9381 + 2466 * t9364 + 1761 * t9379 - 2644 * t9366 - 1544 * t9377 + 1596 * t9376 + 651 * t9375 - 522 * t9374 - 96 * t9371 + 74 * t9372 - 5) * np.exp((-1*1j) * (t9373 + 6 * phi2)))

        if Bindx == 463:
            t9403 = np.cos(phi)
            t9402 = t9403 ** 2
            t9406 = t9402 ** 2
            t9410 = t9406 ** 2
            t9419 = 620 * t9410 ** 2
            t9405 = t9403 * t9402
            t9408 = t9405 ** 2
            t9409 = t9403 * t9408
            t9416 = t9409 ** 2
            t9414 = t9408 ** 2
            t9407 = t9403 * t9406
            t9412 = t9407 ** 2
            t9404 = 13 * phi1
            t9395 = t9403 * t9410
            t9393 = t9403 * t9412
            t9391 = t9403 * t9414
            t9389 = t9403 * t9416
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt((1 + t9403)) * np.sqrt(0.29e2) * ((1 - t9403) ** (-0.1e1 / 0.2e1)) * ((t9419 - 6665 * t9389 + 31245 * t9416 - 81529 * t9391 + 120757 * t9414 - 73437 * t9393 - 71071 * t9412 + 189475 * t9395 - 155727 * t9410 + 15301 * t9409 + 79079 * t9408 - 68523 * t9407 + 18655 * t9406 + 6881 * t9405 - 6933 * t9402 + 2113 * t9403 - 241) * np.exp((-1*1j) * (t9404 - 12 * phi2)) + (t9419 + 5425 * t9389 + 19155 * t9416 + 31129 * t9391 + 8099 * t9414 - 55419 * t9393 - 89089 * t9412 - 29315 * t9395 + 63063 * t9410 + 77363 * t9409 + 17017 * t9408 - 27573 * t9407 - 22295 * t9406 - 3241 * t9405 + 3189 * t9402 + 1631 * t9403 + 241) * np.exp((-1*1j) * (t9404 + 12 * phi2)))

        if Bindx == 464:
            t9427 = np.sin(phi)
            t9423 = t9427 ** 2
            t9424 = t9427 * t9423
            t9425 = t9424 ** 2
            t9420 = np.cos(phi)
            t9421 = t9420 ** 2
            tfunc[..., c] = (0.495e3 / 0.16384e5) * np.exp((-12*1j) * phi1) * np.sqrt(0.7429e4) * t9425 ** 2 * (3 + (-174 + 899 * t9421) * t9421)

        if Bindx == 465:
            t9445 = np.cos(phi)
            t9444 = t9445 ** 2
            t9447 = t9445 * t9444
            t9448 = t9444 ** 2
            t9449 = t9445 * t9448
            t9450 = t9447 ** 2
            t9451 = t9445 * t9450
            t9452 = t9448 ** 2
            t9454 = t9449 ** 2
            t9456 = t9450 ** 2
            t9458 = t9451 ** 2
            t9462 = 2859 * t9447 - 15009 * t9449 + 32351 * t9451 + (-24783 * t9452 - 8751 * t9454 + 21605 * t9456 - 8091 * t9458 - 181) * t9445
            t9461 = -276 * t9444 - 104 * t9448 + 11484 * t9450 + 63844 * t9454 - 40200 * t9456 + 6612 * t9458 + 6 + (-43164 + 1798 * t9452) * t9452
            t9446 = 2 * phi1
            tfunc[..., c] = (0.165e3 / 0.16384e5) * ((t9461 + t9462) * np.exp((-6*1j) * (t9446 - phi2)) + (t9461 - t9462) * np.exp((-6*1j) * (t9446 + phi2))) * np.sqrt(0.897e3)

        if Bindx == 466:
            t9480 = np.cos(phi)
            t9479 = t9480 ** 2
            t9481 = t9480 * t9479
            t9482 = t9479 ** 2
            t9483 = t9480 * t9482
            t9484 = t9481 ** 2
            t9485 = t9480 * t9484
            t9486 = t9482 ** 2
            t9488 = t9483 ** 2
            t9490 = t9484 ** 2
            t9492 = t9485 ** 2
            t9496 = 35259 * t9481 + 98553 * t9483 - 512941 * t9485 + (383955 * t9486 + 308217 * t9488 - 269381 * t9490 - 40455 * t9492 - 7303) * t9480
            t9495 = 9528 * t9479 - 129220 * t9482 + 216216 * t9484 - 664664 * t9488 + 151788 * t9490 + 149640 * t9492 + 1191 + (265122 + 4495 * t9486) * t9486
            tfunc[..., c] = (0.33e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t9495 + t9496) * np.exp((-12*1j) * (phi1 - phi2)) + (t9495 - t9496) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 467:
            t9497 = np.cos(phi)
            t9498 = t9497 ** 2
            tfunc[..., c] = (0.99e2 / 0.8192e4*1j) * (15 + (-290 + 899 * t9498) * t9498) * t9497 * ((1 + t9497) ** (0.11e2 / 0.2e1)) * np.sqrt(0.260015e6) * np.exp((-11*1j) * phi1) * ((1 - t9497) ** (0.11e2 / 0.2e1))

        if Bindx == 468:
            t9515 = np.cos(phi)
            t9514 = t9515 ** 2
            t9517 = t9515 * t9514
            t9520 = t9517 ** 2
            t9521 = t9515 * t9520
            t9529 = 7192 * t9521 ** 2
            t9526 = t9520 ** 2
            t9518 = t9514 ** 2
            t9519 = t9515 * t9518
            t9524 = t9519 ** 2
            t9522 = t9518 ** 2
            t9516 = 11 * phi1
            t9507 = t9515 * t9522
            t9505 = t9515 * t9524
            t9503 = t9515 * t9526
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * ((1 + t9515) ** (0.5e1 / 0.2e1)) * np.sqrt(0.31395e5) * ((1 - t9515) ** (-0.1e1 / 0.2e1)) * ((t9529 - 51243 * t9503 + 145667 * t9526 - 190298 * t9505 + 52602 * t9524 + 164087 * t9507 - 197703 * t9522 + 42372 * t9521 + 66132 * t9520 - 45133 * t9519 + 1221 * t9518 + 6646 * t9517 - 1414 * t9514 - 159 * t9515 + 31) * np.exp((-1*1j) * (t9516 - 6 * phi2)) + (t9529 + 8091 * t9503 - 32335 * t9526 - 34626 * t9505 + 60258 * t9524 + 58773 * t9507 - 60401 * t9522 - 49500 * t9521 + 35156 * t9520 + 20757 * t9519 - 11649 * t9518 - 3522 * t9517 + 1810 * t9514 + 27 * t9515 - 31) * np.exp((-1*1j) * (t9516 + 6 * phi2)))

        if Bindx == 469:
            t9548 = np.cos(phi)
            t9547 = t9548 ** 2
            t9550 = t9548 * t9547
            t9551 = t9547 ** 2
            t9552 = t9548 * t9551
            t9553 = t9550 ** 2
            t9554 = t9548 * t9553
            t9555 = t9551 ** 2
            t9557 = t9552 ** 2
            t9559 = t9553 ** 2
            t9561 = t9554 ** 2
            t9563 = t9555 ** 2
            t9566 = 30668 * t9550 - 62348 * t9552 - 125268 * t9554 + (473044 * t9555 - 364156 * t9557 - 48132 * t9559 + 95236 * t9561 + 3596 * t9563 - 2640) * t9548
            t9565 = 2468 * t9547 + 43272 * t9551 - 224588 * t9553 + 286286 * t9555 + 94380 * t9557 - 354640 * t9559 + 123772 * t9561 + 29667 * t9563 - 617
            t9549 = 11 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 + t9548) ** (-0.1e1 / 0.2e1)) * ((1 - t9548) ** (-0.1e1 / 0.2e1)) * ((-t9565 + t9566) * np.exp((-1*1j) * (t9549 - 12 * phi2)) + (t9565 + t9566) * np.exp((-1*1j) * (t9549 + 12 * phi2)))

        if Bindx == 470:
            t9575 = np.sin(phi)
            t9571 = t9575 ** 2
            t9573 = t9575 * t9571 ** 2
            t9567 = np.cos(phi)
            t9568 = t9567 ** 2
            t9569 = t9568 ** 2
            tfunc[..., c] = -(0.33e2 / 0.16384e5) * np.exp((-10*1j) * phi1) * np.sqrt(0.520030e6) * t9573 ** 2 * (-3915 * t9569 - 5 + (8091 * t9569 + 405) * t9568)

        if Bindx == 471:
            t9593 = np.cos(phi)
            t9592 = t9593 ** 2
            t9595 = t9593 * t9592
            t9596 = t9592 ** 2
            t9597 = t9593 * t9596
            t9598 = t9595 ** 2
            t9599 = t9593 * t9598
            t9600 = t9596 ** 2
            t9602 = t9597 ** 2
            t9604 = t9598 ** 2
            t9606 = t9599 ** 2
            t9610 = -4075 * t9595 + 20963 * t9597 - 32659 * t9599 + (-25311 * t9600 + 124407 * t9602 - 123975 * t9604 + 40455 * t9606 + 195) * t9593
            t9609 = 952 * t9592 - 12422 * t9596 + 67804 * t9598 + 232672 * t9602 - 134346 * t9604 + 12876 * t9606 - 14 + (-178310 + 10788 * t9600) * t9600
            t9594 = 5 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * ((t9609 - t9610) * np.exp((-2*1j) * (t9594 - 3 * phi2)) + (t9609 + t9610) * np.exp((-2*1j) * (t9594 + 3 * phi2)))

        if Bindx == 472:
            t9628 = np.cos(phi)
            t9627 = t9628 ** 2
            t9630 = t9628 * t9627
            t9631 = t9627 ** 2
            t9632 = t9628 * t9631
            t9633 = t9630 ** 2
            t9634 = t9628 * t9633
            t9635 = t9631 ** 2
            t9637 = t9632 ** 2
            t9639 = t9633 ** 2
            t9641 = t9634 ** 2
            t9645 = 9091 * t9630 - 40937 * t9632 + 40183 * t9634 + (67353 * t9635 - 127335 * t9637 + 38541 * t9639 + 13485 * t9641 - 381) * t9628
            t9644 = 2604 * t9627 - 936 * t9631 - 49764 * t9633 - 87516 * t9637 - 36296 * t9639 + 38164 * t9641 - 186 + (132132 + 1798 * t9635) * t9635
            t9629 = 5 * phi1
            tfunc[..., c] = (0.99e2 / 0.16384e5) * ((t9644 - t9645) * np.exp((-2*1j) * (t9629 - 6 * phi2)) + (t9644 + t9645) * np.exp((-2*1j) * (t9629 + 6 * phi2))) * np.sqrt(0.35e2)

        if Bindx == 473:
            t9646 = np.cos(phi)
            t9647 = t9646 ** 2
            t9648 = t9647 ** 2
            tfunc[..., c] = (-0.33e2 / 0.8192e4*1j) * (-5481 * t9648 - 35 + (8091 * t9648 + 945) * t9647) * t9646 * ((1 + t9646) ** (0.9e1 / 0.2e1)) * np.sqrt(0.482885e6) * np.exp((-9*1j) * phi1) * ((1 - t9646) ** (0.9e1 / 0.2e1))

        if Bindx == 474:
            t9666 = np.cos(phi)
            t9665 = t9666 ** 2
            t9668 = t9666 * t9665
            t9671 = t9668 ** 2
            t9672 = t9666 * t9671
            t9679 = t9672 ** 2
            t9681 = 280488 * t9666 * t9679
            t9677 = t9671 ** 2
            t9669 = t9665 ** 2
            t9670 = t9666 * t9669
            t9675 = t9670 ** 2
            t9673 = t9669 ** 2
            t9667 = 3 * phi1
            t9658 = t9666 * t9673
            t9656 = t9666 * t9675
            t9654 = t9666 * t9677
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * ((1 + t9666) ** (0.3e1 / 0.2e1)) * np.sqrt(0.345e3) * ((1 - t9666) ** (-0.1e1 / 0.2e1)) * ((2628444 * t9654 - 4592952 * t9656 + 1373372 * t9658 - 1897 * t9665 - 3436 * t9666 + 92792 * t9668 - 100429 * t9669 - 598444 * t9670 + 1161083 * t9671 + 983576 * t9672 - 3870691 * t9673 + 4369365 * t9675 - 213759 * t9677 - 1507623 * t9679 + 111 + t9681) * np.exp((-3*1j) * (t9667 - 2 * phi2)) + (-1158144 * t9654 + 1975896 * t9656 - 1823536 * t9658 + 14753 * t9665 - 2992 * t9666 + 59048 * t9668 - 216107 * t9669 - 333344 * t9670 + 1019029 * t9671 + 1002584 * t9672 - 2281741 * t9673 + 2683395 * t9675 - 1604889 * t9677 + 385671 * t9679 - 111 + t9681) * np.exp((-3*1j) * (t9667 + 2 * phi2)))

        if Bindx == 475:
            t9700 = np.cos(phi)
            t9699 = t9700 ** 2
            t9703 = t9699 ** 2
            t9702 = t9700 * t9699
            t9705 = t9702 ** 2
            t9707 = t9703 ** 2
            t9704 = t9700 * t9703
            t9709 = t9704 ** 2
            t9711 = t9705 ** 2
            t9706 = t9700 * t9705
            t9713 = t9706 ** 2
            t9715 = t9707 ** 2
            t9718 = -4824 * t9699 + 25700 * t9703 - 22936 * t9705 - 116050 * t9707 + 286968 * t9709 - 210732 * t9711 + 17400 * t9713 + 24273 * t9715 + 201
            t9717 = -5700 * t9702 + 59748 * t9704 - 179652 * t9706 + (188100 * t9707 + 16404 * t9709 - 138100 * t9711 + 55796 * t9713 + 3596 * t9715 - 192) * t9700
            t9701 = 3 * phi1
            tfunc[..., c] = (0.99e2 / 0.32768e5*1j) * np.sqrt(0.65e2) * np.sqrt(0.2e1) * ((1 + t9700) ** (-0.1e1 / 0.2e1)) * ((1 - t9700) ** (-0.1e1 / 0.2e1)) * ((t9717 - t9718) * np.exp((-3*1j) * (t9701 - 4 * phi2)) + (t9717 + t9718) * np.exp((-3*1j) * (t9701 + 4 * phi2)))

        if Bindx == 476:
            t9727 = np.sin(phi)
            t9724 = t9727 ** 2
            t9725 = t9724 ** 2
            t9719 = np.cos(phi)
            t9720 = t9719 ** 2
            t9721 = t9720 ** 2
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.exp((-8*1j) * phi1) * np.sqrt(0.965770e6) * t9725 ** 2 * (-700 * t9720 + 7 + (-36540 * t9720 + 9450 + 40455 * t9721) * t9721)

        if Bindx == 477:
            t9745 = np.cos(phi)
            t9744 = t9745 ** 2
            t9747 = t9745 * t9744
            t9748 = t9744 ** 2
            t9749 = t9745 * t9748
            t9750 = t9747 ** 2
            t9751 = t9745 * t9750
            t9752 = t9748 ** 2
            t9754 = t9749 ** 2
            t9756 = t9750 ** 2
            t9758 = t9751 ** 2
            t9762 = -2317 * t9747 + 58247 * t9749 - 448657 * t9751 + (1467345 * t9752 - 2330055 * t9754 + 1781325 * t9756 - 525915 * t9758 + 27) * t9745
            t9761 = 8342 * t9744 - 115990 * t9748 + 607838 * t9750 + 1811810 * t9754 - 832650 * t9756 - 147030 * t9758 - 97 + (-1507528 + 175305 * t9752) * t9752
            t9746 = 4 * phi1
            tfunc[..., c] = (0.33e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.345e3) * ((t9761 + t9762) * np.exp((-2*1j) * (t9746 - 3 * phi2)) + (t9761 - t9762) * np.exp((-2*1j) * (t9746 + 3 * phi2)))

        if Bindx == 478:
            t9780 = np.cos(phi)
            t9779 = t9780 ** 2
            t9783 = t9779 ** 2
            t9782 = t9780 * t9779
            t9785 = t9782 ** 2
            t9787 = t9783 ** 2
            t9784 = t9780 * t9783
            t9789 = t9784 ** 2
            t9791 = t9785 ** 2
            t9786 = t9780 * t9785
            t9793 = t9786 ** 2
            t9797 = -3552 * t9779 + 29940 * t9783 - 85536 * t9785 + 85536 * t9789 - 146252 * t9791 + 51040 * t9793 + 111 + (64218 + 4495 * t9787) * t9787
            t9796 = 3454 * t9782 + 17002 * t9784 - 121154 * t9786 + (228030 * t9787 - 146838 * t9789 - 6786 * t9791 + 26970 * t9793 - 678) * t9780
            t9781 = 2 * phi1
            tfunc[..., c] = (0.99e2 / 0.16384e5) * ((-t9796 + t9797) * np.exp((-4*1j) * (t9781 - 3 * phi2)) + (t9796 + t9797) * np.exp((-4*1j) * (t9781 + 3 * phi2))) * np.sqrt(0.65e2)

        if Bindx == 479:
            t9798 = np.cos(phi)
            t9799 = t9798 ** 2
            t9800 = t9799 ** 2
            tfunc[..., c] = (0.33e2 / 0.8192e4*1j) * (-700 * t9799 + 21 + (-15660 * t9799 + 5670 + 13485 * t9800) * t9800) * t9798 * ((1 + t9798) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1448655e7) * np.exp((-7*1j) * phi1) * ((1 - t9798) ** (0.7e1 / 0.2e1))

        if Bindx == 480:
            t9820 = np.cos(phi)
            t9819 = t9820 ** 2
            t9823 = t9819 ** 2
            t9827 = t9823 ** 2
            t9836 = 1402440 * t9827 ** 2
            t9822 = t9820 * t9819
            t9825 = t9822 ** 2
            t9826 = t9820 * t9825
            t9833 = t9826 ** 2
            t9831 = t9825 ** 2
            t9824 = t9820 * t9823
            t9829 = t9824 ** 2
            t9821 = 7 * phi1
            t9812 = t9820 * t9827
            t9810 = t9820 * t9829
            t9808 = t9820 * t9831
            t9806 = t9820 * t9833
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt((1 + t9820)) * np.sqrt(0.115e3) * ((1 - t9820) ** (-0.1e1 / 0.2e1)) * ((-5083845 * t9806 + 12785955 * t9808 - 10053225 * t9810 + 887535 * t9812 + 24645 * t9819 - 5563 * t9820 + 153181 * t9822 - 490735 * t9823 - 1072407 * t9824 + 3587353 * t9825 + 2371985 * t9826 - 12032361 * t9827 + 19594575 * t9829 - 14088165 * t9831 + 2018835 * t9833 - 203 + t9836) * np.exp((-1*1j) * (t9821 - 6 * phi2)) + (2278965 * t9806 - 9460815 * t9808 + 15982785 * t9810 - 14040675 * t9812 - 13113 * t9819 - 5969 * t9820 + 190939 * t9822 + 146615 * t9823 - 1709757 * t9824 - 805189 * t9825 + 6764527 * t9826 + 2895849 * t9827 - 6441435 * t9829 + 8158605 * t9831 - 5343975 * t9833 + 203 + t9836) * np.exp((-1*1j) * (t9821 + 6 * phi2)))

        if Bindx == 481:
            t9855 = np.cos(phi)
            t9854 = t9855 ** 2
            t9858 = t9854 ** 2
            t9857 = t9855 * t9854
            t9860 = t9857 ** 2
            t9862 = t9858 ** 2
            t9859 = t9855 * t9858
            t9864 = t9859 ** 2
            t9866 = t9860 ** 2
            t9861 = t9855 * t9860
            t9868 = t9861 ** 2
            t9870 = t9862 ** 2
            t9873 = -4360 * t9854 + 67716 * t9858 - 349256 * t9860 + 773366 * t9862 - 744216 * t9864 + 157780 * t9866 + 193256 * t9868 - 94395 * t9870 + 109
            t9872 = -32788 * t9857 + 111412 * t9859 - 42900 * t9861 + (-427372 * t9862 + 842788 * t9864 - 593028 * t9866 + 121220 * t9868 + 17980 * t9870 + 2688) * t9855
            t9856 = 7 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.195e3) * np.sqrt(0.2e1) * ((1 + t9855) ** (-0.1e1 / 0.2e1)) * ((1 - t9855) ** (-0.1e1 / 0.2e1)) * ((t9872 + t9873) * np.exp((-1*1j) * (t9856 - 12 * phi2)) + (t9872 - t9873) * np.exp((-1*1j) * (t9856 + 12 * phi2)))

        if Bindx == 482:
            t9883 = np.sin(phi)
            t9880 = t9883 ** 2
            t9881 = t9883 * t9880
            t9874 = np.cos(phi)
            t9875 = t9874 ** 2
            t9876 = t9875 ** 2
            t9878 = t9876 ** 2
            tfunc[..., c] = -(0.33e2 / 0.16384e5) * np.exp((-6*1j) * phi1) * np.sqrt(0.25194e5) * t9881 ** 2 * (-40250 * t9876 - 450225 * t9878 - 21 + (217350 * t9876 + 310155 * t9878 + 2415) * t9875)

        if Bindx == 483:
            t9901 = np.cos(phi)
            t9900 = t9901 ** 2
            t9902 = t9901 * t9900
            t9903 = t9900 ** 2
            t9904 = t9901 * t9903
            t9905 = t9902 ** 2
            t9906 = t9901 * t9905
            t9907 = t9903 ** 2
            t9909 = t9904 ** 2
            t9911 = t9905 ** 2
            t9913 = t9906 ** 2
            t9917 = -1247925 * t9902 + 12674109 * t9904 - 58935085 * t9906 + (144532575 * t9907 - 192796695 * t9909 + 132015975 * t9911 - 36288135 * t9913 + 36989) * t9901
            t9916 = 227400 * t9900 - 3468010 * t9903 + 18442116 * t9905 + 33153120 * t9909 + 16011450 * t9911 - 39019500 * t9913 - 2274 + (-41464170 + 16128060 * t9907) * t9907
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t9916 + t9917) * np.exp((-6*1j) * (phi1 - phi2)) + (t9916 - t9917) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 484:
            t9935 = np.cos(phi)
            t9934 = t9935 ** 2
            t9936 = t9935 * t9934
            t9937 = t9934 ** 2
            t9938 = t9935 * t9937
            t9939 = t9936 ** 2
            t9940 = t9935 * t9939
            t9941 = t9937 ** 2
            t9943 = t9938 ** 2
            t9945 = t9939 ** 2
            t9947 = t9940 ** 2
            t9951 = 2859 * t9936 - 15009 * t9938 + 32351 * t9940 + (-24783 * t9941 - 8751 * t9943 + 21605 * t9945 - 8091 * t9947 - 181) * t9935
            t9950 = -276 * t9934 - 104 * t9937 + 11484 * t9939 + 63844 * t9943 - 40200 * t9945 + 6612 * t9947 + 6 + (-43164 + 1798 * t9941) * t9941
            tfunc[..., c] = (0.165e3 / 0.16384e5) * ((t9950 + t9951) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (t9950 - t9951) * np.exp((-6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.897e3)

        if Bindx == 485:
            t9952 = np.cos(phi)
            t9953 = t9952 ** 2
            t9954 = t9953 ** 2
            t9956 = t9954 ** 2
            tfunc[..., c] = (-0.33e2 / 0.8192e4*1j) * (-88550 * t9954 - 550275 * t9956 - 231 + (341550 * t9954 + 310155 * t9956 + 8855) * t9953) * t9952 * ((1 + t9952) ** (0.5e1 / 0.2e1)) * np.sqrt(0.12597e5) * np.exp((-5*1j) * phi1) * ((1 - t9952) ** (0.5e1 / 0.2e1))

        if Bindx == 486:
            t9976 = np.cos(phi)
            t9975 = t9976 ** 2
            t9979 = t9975 ** 2
            t9978 = t9976 * t9975
            t9981 = t9978 ** 2
            t9983 = t9979 ** 2
            t9980 = t9976 * t9979
            t9985 = t9980 ** 2
            t9987 = t9981 ** 2
            t9982 = t9976 * t9981
            t9989 = t9982 ** 2
            t9991 = t9983 ** 2
            t9994 = 487918 * t9975 - 8673630 * t9979 + 60237590 * t9981 - 210521300 * t9983 + 407970090 * t9985 - 445243890 * t9987 + 256228050 * t9989 - 60480225 * t9991 - 4603
            t9993 = 745790 * t9978 - 6298922 * t9980 + 18128022 * t9982 + (-4075830 * t9983 - 74406150 * t9985 + 147870450 * t9987 - 114197070 * t9989 + 32256120 * t9991 - 22410) * t9976
            t9977 = 5 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * ((1 + t9976) ** (-0.1e1 / 0.2e1)) * ((1 - t9976) ** (-0.1e1 / 0.2e1)) * ((t9993 + t9994) * np.exp((-1*1j) * (t9977 - 6 * phi2)) + (t9993 - t9994) * np.exp((-1*1j) * (t9977 + 6 * phi2)))

        if Bindx == 487:
            t10013 = np.cos(phi)
            t10012 = t10013 ** 2
            t10016 = t10012 ** 2
            t10015 = t10013 * t10012
            t10018 = t10015 ** 2
            t10020 = t10016 ** 2
            t10017 = t10013 * t10016
            t10022 = t10017 ** 2
            t10024 = t10018 ** 2
            t10019 = t10013 * t10018
            t10026 = t10019 ** 2
            t10028 = t10020 ** 2
            t10031 = 23 - 1196 * t10012 + 9048 * t10016 - 23068 * t10018 + 11422 * t10020 + 44604 * t10022 - 82912 * t10024 + 55564 * t10026 - 13485 * t10028
            t10030 = 2956 * t10015 - 22732 * t10017 + 79212 * t10019 + (-140012 * t10020 + 127172 * t10022 - 50628 * t10024 + 580 * t10026 + 3596 * t10028 - 144) * t10013
            t10014 = 5 * phi1
            tfunc[..., c] = (0.165e3 / 0.32768e5*1j) * np.sqrt(0.897e3) * np.sqrt(0.2e1) * ((1 + t10013) ** (-0.1e1 / 0.2e1)) * ((1 - t10013) ** (-0.1e1 / 0.2e1)) * ((t10030 + t10031) * np.exp((-1*1j) * (t10014 - 12 * phi2)) + (t10030 - t10031) * np.exp((-1*1j) * (t10014 + 12 * phi2)))

        if Bindx == 488:
            t10041 = np.sin(phi)
            t10039 = t10041 ** 2
            t10032 = np.cos(phi)
            t10033 = t10032 ** 2
            t10034 = t10033 ** 2
            t10036 = t10034 ** 2
            t10035 = t10033 * t10034
            tfunc[..., c] = (0.33e2 / 0.16384e5) * np.exp((-4*1j) * phi1) * np.sqrt(0.88179e5) * t10039 ** 2 * (26565 * t10034 + 512325 * t10036 + 11 + (-177100 + 310155 * t10035) * t10035 + (-660330 * t10036 - 1386) * t10033)

        if Bindx == 489:
            t10059 = np.cos(phi)
            t10058 = t10059 ** 2
            t10061 = t10059 * t10058
            t10062 = t10058 ** 2
            t10063 = t10059 * t10062
            t10064 = t10061 ** 2
            t10065 = t10059 * t10064
            t10066 = t10062 ** 2
            t10068 = t10063 ** 2
            t10070 = t10064 ** 2
            t10072 = t10065 ** 2
            t10076 = -487715 * t10061 + 5090953 * t10063 - 23424695 * t10065 + (55508775 * t10066 - 70777785 * t10068 + 46173075 * t10070 - 12096045 * t10072 + 13437) * t10059
            t10075 = -6820 * t10058 + 175640 * t10062 - 1941492 * t10064 - 27968460 * t10068 + 40006200 * t10070 - 28614300 * t10072 + 62 + (10285140 + 8064030 * t10066) * t10066
            t10060 = 2 * phi1
            tfunc[..., c] = (0.33e2 / 0.16384e5) * ((t10075 + t10076) * np.exp((-2*1j) * (t10060 - 3 * phi2)) + (t10075 - t10076) * np.exp((-2*1j) * (t10060 + 3 * phi2))) * np.sqrt(0.7e1)

        if Bindx == 490:
            t10094 = np.cos(phi)
            t10093 = t10094 ** 2
            t10095 = t10094 * t10093
            t10096 = t10093 ** 2
            t10097 = t10094 * t10096
            t10098 = t10095 ** 2
            t10099 = t10094 * t10098
            t10100 = t10096 ** 2
            t10102 = t10097 ** 2
            t10104 = t10098 ** 2
            t10106 = t10099 ** 2
            t10110 = 85 * t10095 + 823 * t10097 - 6659 * t10099 + (17021 * t10100 - 20425 * t10102 + 11861 * t10104 - 2697 * t10106 - 9) * t10094
            t10109 = 280 * t10093 - 2612 * t10096 + 9720 * t10098 + 14664 * t10102 - 4036 * t10104 - 1624 * t10106 - 5 + (-17286 + 899 * t10100) * t10100
            tfunc[..., c] = (0.165e3 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * ((t10109 + t10110) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t10109 - t10110) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 491:
            t10111 = np.cos(phi)
            t10112 = t10111 ** 2
            t10113 = t10112 ** 2
            t10115 = t10113 ** 2
            t10114 = t10112 * t10113
            tfunc[..., c] = (0.33e2 / 0.8192e4*1j) * (69069 * t10113 + 740025 * t10115 + 143 + (-328900 + 310155 * t10114) * t10114 + (-780390 * t10115 - 6006) * t10112) * t10111 * ((1 + t10111) ** (0.3e1 / 0.2e1)) * np.sqrt(0.33915e5) * np.exp((-3*1j) * phi1) * ((1 - t10111) ** (0.3e1 / 0.2e1))

        if Bindx == 492:
            t10136 = np.cos(phi)
            t10135 = t10136 ** 2
            t10138 = t10135 ** 2
            t10137 = t10136 * t10135
            t10140 = t10137 ** 2
            t10142 = t10138 ** 2
            t10139 = t10136 * t10138
            t10144 = t10139 ** 2
            t10146 = t10140 ** 2
            t10141 = t10136 * t10140
            t10148 = t10141 ** 2
            t10150 = t10142 ** 2
            t10153 = 22914 * t10135 - 427922 * t10138 + 3048346 * t10140 - 10700612 * t10142 + 20497830 * t10144 - 21875070 * t10146 + 12226110 * t10148 - 2791395 * t10150 - 201
            t10152 = -56458 * t10137 + 670766 * t10139 - 3726834 * t10141 + (11325522 * t10142 - 19943070 * t10144 + 20272890 * t10146 - 11025510 * t10148 + 2481240 * t10150 + 1454) * t10136
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.455e3) * ((1 + t10136) ** (-0.1e1 / 0.2e1)) * ((1 - t10136) ** (-0.1e1 / 0.2e1)) * ((t10152 + t10153) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t10152 - t10153) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 493:
            t10172 = np.cos(phi)
            t10171 = t10172 ** 2
            t10173 = t10172 * t10171
            t10174 = t10171 ** 2
            t10175 = t10172 * t10174
            t10176 = t10173 ** 2
            t10177 = t10172 * t10176
            t10178 = t10174 ** 2
            t10180 = t10175 ** 2
            t10182 = t10176 ** 2
            t10184 = t10177 ** 2
            t10186 = t10178 ** 2
            t10189 = 13148 * t10173 - 69340 * t10175 + 155580 * t10177 + (-149820 * t10178 + 8628 * t10180 + 100492 * t10182 - 75980 * t10184 + 17980 * t10186 - 688) * t10172
            t10188 = -3060 * t10171 + 34864 * t10174 - 170660 * t10176 + 433870 * t10178 - 621916 * t10180 + 509000 * t10182 - 222604 * t10184 + 40455 * t10186 + 51
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2415e4) * np.sqrt(0.2e1) * ((1 + t10172) ** (-0.1e1 / 0.2e1)) * ((1 - t10172) ** (-0.1e1 / 0.2e1)) * ((-t10188 + t10189) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t10188 + t10189) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 494:
            t10191 = np.cos(phi)
            t10192 = t10191 ** 2
            t10193 = t10192 ** 2
            t10194 = t10192 * t10193
            t10197 = t10194 ** 2
            t10195 = t10193 ** 2
            t10190 = np.sin(phi)
            tfunc[..., c] = -(0.33e2 / 0.16384e5) * np.exp((-2*1j) * phi1) * np.sqrt(0.510e3) * t10190 ** 2 * (-399399 * t10193 + 3062059 * t10194 - 10935925 * t10195 - 17298645 * t10197 - 143 + (19684665 * t10195 + 5892945 * t10197 + 19019) * t10192)

        if Bindx == 495:
            t10216 = np.cos(phi)
            t10215 = t10216 ** 2
            t10217 = t10216 * t10215
            t10218 = t10215 ** 2
            t10219 = t10216 * t10218
            t10220 = t10217 ** 2
            t10221 = t10216 * t10220
            t10222 = t10218 ** 2
            t10224 = t10219 ** 2
            t10226 = t10220 ** 2
            t10228 = t10221 ** 2
            t10232 = -37555 * t10217 + 405419 * t10219 - 1900651 * t10221 + (4521225 * t10222 - 5710785 * t10224 + 3651825 * t10226 - 930465 * t10228 + 987) * t10216
            t10231 = -8120 * t10215 + 155134 * t10218 - 1136268 * t10220 - 8169600 * t10224 + 9042450 * t10226 - 5242620 * t10228 + 70 + (4118334 + 1240620 * t10222) * t10222
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.1235e4) * ((t10231 + t10232) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t10231 - t10232) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 496:
            t10250 = np.cos(phi)
            t10249 = t10250 ** 2
            t10252 = t10249 ** 2
            t10251 = t10250 * t10249
            t10254 = t10251 ** 2
            t10256 = t10252 ** 2
            t10253 = t10250 * t10252
            t10258 = t10253 ** 2
            t10260 = t10254 ** 2
            t10255 = t10250 * t10254
            t10262 = t10255 ** 2
            t10266 = 124 * t10249 + 280 * t10252 - 12180 * t10254 - 98028 * t10258 + 94136 * t10260 - 45820 * t10262 - 2 + (52500 + 8990 * t10256) * t10256
            t10265 = -7763 * t10251 + 46585 * t10253 - 129815 * t10255 + (195335 * t10256 - 164521 * t10258 + 73283 * t10260 - 13485 * t10262 + 381) * t10250
            tfunc[..., c] = (0.33e2 / 0.16384e5) * ((t10265 + t10266) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (-t10265 + t10266) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.6555e4)

        if Bindx == 497:
            t10267 = np.cos(phi)
            t10283 = 1 - t10267
            t10268 = t10267 ** 2
            t10269 = t10267 * t10268
            t10272 = t10269 ** 2
            t10273 = t10267 * t10272
            t10270 = t10268 ** 2
            t10271 = t10267 * t10270
            tfunc[..., c] = (0.33e2 / 0.8192e4*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.17e2) * np.sqrt((1 + t10267)) * t10267 * (t10283 * (54679625 * t10270 ** 2 - 80528175 * t10271 ** 2 + 59879925 * t10272 ** 2 - 17678835 * t10273 ** 2 + 6435) - 19684665 * t10272 + 19684665 * t10273 + 3594591 * t10270 - 3594591 * t10271 - 285285 * t10268 + 285285 * t10269) * (t10283 ** (-0.1e1 / 0.2e1))

        if Bindx == 498:
            t10302 = np.cos(phi)
            t10301 = t10302 ** 2
            t10304 = t10301 ** 2
            t10303 = t10302 * t10301
            t10306 = t10303 ** 2
            t10308 = t10304 ** 2
            t10305 = t10302 * t10304
            t10310 = t10305 ** 2
            t10312 = t10306 ** 2
            t10307 = t10302 * t10306
            t10314 = t10307 ** 2
            t10316 = t10308 ** 2
            t10319 = 7434 * t10301 - 142674 * t10304 + 1036098 * t10306 - 3676320 * t10308 + 7059390 * t10310 - 7495470 * t10312 + 4142070 * t10314 - 930465 * t10316 - 63
            t10318 = -97594 * t10303 + 1131214 * t10305 - 5937858 * t10307 + (16667410 * t10308 - 26756590 * t10310 + 24655770 * t10312 - 12146070 * t10314 + 2481240 * t10316 + 2478) * t10302
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.741e3) * ((1 + t10302) ** (-0.1e1 / 0.2e1)) * ((1 - t10302) ** (-0.1e1 / 0.2e1)) * ((t10318 + t10319) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t10318 - t10319) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 499:
            t10338 = np.cos(phi)
            t10337 = t10338 ** 2
            t10340 = t10337 ** 2
            t10339 = t10338 * t10337
            t10342 = t10339 ** 2
            t10344 = t10340 ** 2
            t10341 = t10338 * t10340
            t10346 = t10341 ** 2
            t10348 = t10342 ** 2
            t10343 = t10338 * t10342
            t10350 = t10343 ** 2
            t10352 = t10344 ** 2
            t10355 = -9 + 576 * t10337 - 5964 * t10340 + 24192 * t10342 - 51030 * t10344 + 61824 * t10346 - 43596 * t10348 + 16704 * t10350 - 2697 * t10352
            t10354 = -2084 * t10339 + 14084 * t10341 - 46116 * t10343 + (85540 * t10344 - 95116 * t10346 + 63084 * t10348 - 23084 * t10350 + 3596 * t10352 + 96) * t10338
            tfunc[..., c] = (0.495e3 / 0.32768e5*1j) * np.sqrt(0.437e3) * np.sqrt(0.2e1) * ((1 + t10338) ** (-0.1e1 / 0.2e1)) * ((1 - t10338) ** (-0.1e1 / 0.2e1)) * ((t10354 + t10355) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (t10354 - t10355) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 500:
            t10356 = np.cos(phi)
            t10357 = t10356 ** 2
            t10358 = t10357 ** 2
            t10359 = t10357 * t10358
            t10362 = t10359 ** 2
            t10360 = t10358 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t10362 - 0.672188517e9 / 0.4096e4 * t10359 + 0.160044885e9 / 0.8192e4 * t10358 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t10360) * t10360 + (-0.4798948275e10 / 0.4096e4 * t10362 - 0.6135053925e10 / 0.4096e4 * t10360 - 0.3610035e7 / 0.4096e4) * t10357

        if Bindx == 501:
            t10365 = np.cos(phi)
            t10366 = t10365 ** 2
            t10367 = t10366 ** 2
            t10368 = t10366 * t10367
            t10371 = t10368 ** 2
            t10369 = t10367 ** 2
            tfunc[..., c] = 0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t10367 - 345366 * t10368 + 2498490 * t10371 + 21 + (1225440 + 310155 * t10369) * t10369 + (-2353130 * t10369 - 1380690 * t10371 - 2478) * t10366) * np.cos((6 * phi2))

        if Bindx == 502:
            t10374 = np.cos(phi)
            t10375 = t10374 ** 2
            t10376 = t10375 ** 2
            t10377 = t10375 * t10376
            t10380 = t10377 ** 2
            t10378 = t10376 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.7429e4) * np.sqrt(0.2e1) * (1988 * t10376 - 8064 * t10377 + 14532 * t10380 + 3 + (17010 + 899 * t10378) * t10378 + (-20608 * t10378 - 5568 * t10380 - 192) * t10375) * np.cos((12 * phi2))

        if Bindx == 503:
            t10383 = np.cos(phi)
            t10384 = t10383 ** 2
            t10385 = t10384 ** 2
            t10386 = t10384 * t10385
            t10389 = t10386 ** 2
            t10387 = t10385 ** 2
            tfunc[..., c] = (-0.33e2 / 0.8192e4*1j) * np.exp((1j) * phi1) * np.sqrt(0.17e2) * np.sqrt((1 - t10383)) * np.sqrt((1 + t10383)) * t10383 * (-3594591 * t10385 + 19684665 * t10386 - 54679625 * t10387 - 59879925 * t10389 - 6435 + (80528175 * t10387 + 17678835 * t10389 + 285285) * t10384)

        if Bindx == 504:
            t10409 = np.cos(phi)
            t10408 = t10409 ** 2
            t10411 = t10408 ** 2
            t10410 = t10409 * t10408
            t10413 = t10410 ** 2
            t10415 = t10411 ** 2
            t10412 = t10409 * t10411
            t10417 = t10412 ** 2
            t10419 = t10413 ** 2
            t10414 = t10409 * t10413
            t10421 = t10414 ** 2
            t10423 = t10415 ** 2
            t10426 = 7434 * t10408 - 142674 * t10411 + 1036098 * t10413 - 3676320 * t10415 + 7059390 * t10417 - 7495470 * t10419 + 4142070 * t10421 - 930465 * t10423 - 63
            t10425 = -97594 * t10410 + 1131214 * t10412 - 5937858 * t10414 + (16667410 * t10415 - 26756590 * t10417 + 24655770 * t10419 - 12146070 * t10421 + 2481240 * t10423 + 2478) * t10409
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.741e3) * ((1 + t10409) ** (-0.1e1 / 0.2e1)) * ((1 - t10409) ** (-0.1e1 / 0.2e1)) * ((t10425 + t10426) * np.exp((1j) * (phi1 - 6 * phi2)) + (t10425 - t10426) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 505:
            t10445 = np.cos(phi)
            t10444 = t10445 ** 2
            t10447 = t10444 ** 2
            t10446 = t10445 * t10444
            t10449 = t10446 ** 2
            t10451 = t10447 ** 2
            t10448 = t10445 * t10447
            t10453 = t10448 ** 2
            t10455 = t10449 ** 2
            t10450 = t10445 * t10449
            t10457 = t10450 ** 2
            t10459 = t10451 ** 2
            t10462 = -9 + 576 * t10444 - 5964 * t10447 + 24192 * t10449 - 51030 * t10451 + 61824 * t10453 - 43596 * t10455 + 16704 * t10457 - 2697 * t10459
            t10461 = -2084 * t10446 + 14084 * t10448 - 46116 * t10450 + (85540 * t10451 - 95116 * t10453 + 63084 * t10455 - 23084 * t10457 + 3596 * t10459 + 96) * t10445
            tfunc[..., c] = (0.495e3 / 0.32768e5*1j) * np.sqrt(0.437e3) * np.sqrt(0.2e1) * ((1 + t10445) ** (-0.1e1 / 0.2e1)) * ((1 - t10445) ** (-0.1e1 / 0.2e1)) * ((t10461 + t10462) * np.exp((1j) * (phi1 - 12 * phi2)) + (t10461 - t10462) * np.exp((1j) * (phi1 + 12 * phi2)))

        if Bindx == 506:
            t10464 = np.cos(phi)
            t10465 = t10464 ** 2
            t10466 = t10465 ** 2
            t10467 = t10465 * t10466
            t10470 = t10467 ** 2
            t10468 = t10466 ** 2
            t10463 = np.sin(phi)
            tfunc[..., c] = -(0.33e2 / 0.16384e5) * np.exp((2*1j) * phi1) * np.sqrt(0.510e3) * t10463 ** 2 * (-399399 * t10466 + 3062059 * t10467 - 10935925 * t10468 - 17298645 * t10470 - 143 + (19684665 * t10468 + 5892945 * t10470 + 19019) * t10465)

        if Bindx == 507:
            t10489 = np.cos(phi)
            t10488 = t10489 ** 2
            t10490 = t10489 * t10488
            t10491 = t10488 ** 2
            t10492 = t10489 * t10491
            t10493 = t10490 ** 2
            t10494 = t10489 * t10493
            t10495 = t10491 ** 2
            t10497 = t10492 ** 2
            t10499 = t10493 ** 2
            t10501 = t10494 ** 2
            t10505 = -37555 * t10490 + 405419 * t10492 - 1900651 * t10494 + (4521225 * t10495 - 5710785 * t10497 + 3651825 * t10499 - 930465 * t10501 + 987) * t10489
            t10504 = -8120 * t10488 + 155134 * t10491 - 1136268 * t10493 - 8169600 * t10497 + 9042450 * t10499 - 5242620 * t10501 + 70 + (4118334 + 1240620 * t10495) * t10495
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.1235e4) * ((t10504 + t10505) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t10504 - t10505) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 508:
            t10523 = np.cos(phi)
            t10522 = t10523 ** 2
            t10525 = t10522 ** 2
            t10524 = t10523 * t10522
            t10527 = t10524 ** 2
            t10529 = t10525 ** 2
            t10526 = t10523 * t10525
            t10531 = t10526 ** 2
            t10533 = t10527 ** 2
            t10528 = t10523 * t10527
            t10535 = t10528 ** 2
            t10539 = 124 * t10522 + 280 * t10525 - 12180 * t10527 - 98028 * t10531 + 94136 * t10533 - 45820 * t10535 - 2 + (52500 + 8990 * t10529) * t10529
            t10538 = -7763 * t10524 + 46585 * t10526 - 129815 * t10528 + (195335 * t10529 - 164521 * t10531 + 73283 * t10533 - 13485 * t10535 + 381) * t10523
            tfunc[..., c] = (0.33e2 / 0.16384e5) * ((t10538 + t10539) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (-t10538 + t10539) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.6555e4)

        if Bindx == 509:
            t10540 = np.cos(phi)
            t10541 = t10540 ** 2
            t10542 = t10541 ** 2
            t10544 = t10542 ** 2
            t10543 = t10541 * t10542
            tfunc[..., c] = (0.33e2 / 0.8192e4*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.33915e5) * ((1 - t10540) ** (0.3e1 / 0.2e1)) * ((1 + t10540) ** (0.3e1 / 0.2e1)) * t10540 * (69069 * t10542 + 740025 * t10544 + 143 + (-328900 + 310155 * t10543) * t10543 + (-780390 * t10544 - 6006) * t10541)

        if Bindx == 510:
            t10565 = np.cos(phi)
            t10564 = t10565 ** 2
            t10567 = t10564 ** 2
            t10566 = t10565 * t10564
            t10569 = t10566 ** 2
            t10571 = t10567 ** 2
            t10568 = t10565 * t10567
            t10573 = t10568 ** 2
            t10575 = t10569 ** 2
            t10570 = t10565 * t10569
            t10577 = t10570 ** 2
            t10579 = t10571 ** 2
            t10582 = 22914 * t10564 - 427922 * t10567 + 3048346 * t10569 - 10700612 * t10571 + 20497830 * t10573 - 21875070 * t10575 + 12226110 * t10577 - 2791395 * t10579 - 201
            t10581 = -56458 * t10566 + 670766 * t10568 - 3726834 * t10570 + (11325522 * t10571 - 19943070 * t10573 + 20272890 * t10575 - 11025510 * t10577 + 2481240 * t10579 + 1454) * t10565
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.455e3) * ((1 + t10565) ** (-0.1e1 / 0.2e1)) * ((1 - t10565) ** (-0.1e1 / 0.2e1)) * ((t10581 + t10582) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t10581 - t10582) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 511:
            t10601 = np.cos(phi)
            t10600 = t10601 ** 2
            t10602 = t10601 * t10600
            t10603 = t10600 ** 2
            t10604 = t10601 * t10603
            t10605 = t10602 ** 2
            t10606 = t10601 * t10605
            t10607 = t10603 ** 2
            t10609 = t10604 ** 2
            t10611 = t10605 ** 2
            t10613 = t10606 ** 2
            t10615 = t10607 ** 2
            t10618 = 13148 * t10602 - 69340 * t10604 + 155580 * t10606 + (-149820 * t10607 + 8628 * t10609 + 100492 * t10611 - 75980 * t10613 + 17980 * t10615 - 688) * t10601
            t10617 = -3060 * t10600 + 34864 * t10603 - 170660 * t10605 + 433870 * t10607 - 621916 * t10609 + 509000 * t10611 - 222604 * t10613 + 40455 * t10615 + 51
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2415e4) * np.sqrt(0.2e1) * ((1 + t10601) ** (-0.1e1 / 0.2e1)) * ((1 - t10601) ** (-0.1e1 / 0.2e1)) * ((-t10617 + t10618) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t10617 + t10618) * np.exp((3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 512:
            t10628 = np.sin(phi)
            t10626 = t10628 ** 2
            t10619 = np.cos(phi)
            t10620 = t10619 ** 2
            t10621 = t10620 ** 2
            t10623 = t10621 ** 2
            t10622 = t10620 * t10621
            tfunc[..., c] = (0.33e2 / 0.16384e5) * np.exp((4*1j) * phi1) * np.sqrt(0.88179e5) * t10626 ** 2 * (26565 * t10621 + 512325 * t10623 + 11 + (-177100 + 310155 * t10622) * t10622 + (-660330 * t10623 - 1386) * t10620)

        if Bindx == 513:
            t10646 = np.cos(phi)
            t10645 = t10646 ** 2
            t10648 = t10646 * t10645
            t10649 = t10645 ** 2
            t10650 = t10646 * t10649
            t10651 = t10648 ** 2
            t10652 = t10646 * t10651
            t10653 = t10649 ** 2
            t10655 = t10650 ** 2
            t10657 = t10651 ** 2
            t10659 = t10652 ** 2
            t10663 = -487715 * t10648 + 5090953 * t10650 - 23424695 * t10652 + (55508775 * t10653 - 70777785 * t10655 + 46173075 * t10657 - 12096045 * t10659 + 13437) * t10646
            t10662 = -6820 * t10645 + 175640 * t10649 - 1941492 * t10651 - 27968460 * t10655 + 40006200 * t10657 - 28614300 * t10659 + 62 + (10285140 + 8064030 * t10653) * t10653
            t10647 = 2 * phi1
            tfunc[..., c] = (0.33e2 / 0.16384e5) * ((t10662 + t10663) * np.exp((2*1j) * (t10647 - 3 * phi2)) + (t10662 - t10663) * np.exp((2*1j) * (t10647 + 3 * phi2))) * np.sqrt(0.7e1)

        if Bindx == 514:
            t10681 = np.cos(phi)
            t10680 = t10681 ** 2
            t10682 = t10681 * t10680
            t10683 = t10680 ** 2
            t10684 = t10681 * t10683
            t10685 = t10682 ** 2
            t10686 = t10681 * t10685
            t10687 = t10683 ** 2
            t10689 = t10684 ** 2
            t10691 = t10685 ** 2
            t10693 = t10686 ** 2
            t10697 = 85 * t10682 + 823 * t10684 - 6659 * t10686 + (17021 * t10687 - 20425 * t10689 + 11861 * t10691 - 2697 * t10693 - 9) * t10681
            t10696 = 280 * t10680 - 2612 * t10683 + 9720 * t10685 + 14664 * t10689 - 4036 * t10691 - 1624 * t10693 - 5 + (-17286 + 899 * t10687) * t10687
            tfunc[..., c] = (0.165e3 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * ((t10696 + t10697) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t10696 - t10697) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 515:
            t10698 = np.cos(phi)
            t10699 = t10698 ** 2
            t10700 = t10699 ** 2
            t10702 = t10700 ** 2
            tfunc[..., c] = (-0.33e2 / 0.8192e4*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.12597e5) * ((1 - t10698) ** (0.5e1 / 0.2e1)) * ((1 + t10698) ** (0.5e1 / 0.2e1)) * t10698 * (-88550 * t10700 - 550275 * t10702 - 231 + (341550 * t10700 + 310155 * t10702 + 8855) * t10699)

        if Bindx == 516:
            t10722 = np.cos(phi)
            t10721 = t10722 ** 2
            t10725 = t10721 ** 2
            t10724 = t10722 * t10721
            t10727 = t10724 ** 2
            t10729 = t10725 ** 2
            t10726 = t10722 * t10725
            t10731 = t10726 ** 2
            t10733 = t10727 ** 2
            t10728 = t10722 * t10727
            t10735 = t10728 ** 2
            t10737 = t10729 ** 2
            t10740 = 487918 * t10721 - 8673630 * t10725 + 60237590 * t10727 - 210521300 * t10729 + 407970090 * t10731 - 445243890 * t10733 + 256228050 * t10735 - 60480225 * t10737 - 4603
            t10739 = 745790 * t10724 - 6298922 * t10726 + 18128022 * t10728 + (-4075830 * t10729 - 74406150 * t10731 + 147870450 * t10733 - 114197070 * t10735 + 32256120 * t10737 - 22410) * t10722
            t10723 = 5 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * ((1 + t10722) ** (-0.1e1 / 0.2e1)) * ((1 - t10722) ** (-0.1e1 / 0.2e1)) * ((t10739 + t10740) * np.exp((1j) * (t10723 - 6 * phi2)) + (t10739 - t10740) * np.exp((1j) * (t10723 + 6 * phi2)))

        if Bindx == 517:
            t10759 = np.cos(phi)
            t10758 = t10759 ** 2
            t10762 = t10758 ** 2
            t10761 = t10759 * t10758
            t10764 = t10761 ** 2
            t10766 = t10762 ** 2
            t10763 = t10759 * t10762
            t10768 = t10763 ** 2
            t10770 = t10764 ** 2
            t10765 = t10759 * t10764
            t10772 = t10765 ** 2
            t10774 = t10766 ** 2
            t10777 = 23 - 1196 * t10758 + 9048 * t10762 - 23068 * t10764 + 11422 * t10766 + 44604 * t10768 - 82912 * t10770 + 55564 * t10772 - 13485 * t10774
            t10776 = 2956 * t10761 - 22732 * t10763 + 79212 * t10765 + (-140012 * t10766 + 127172 * t10768 - 50628 * t10770 + 580 * t10772 + 3596 * t10774 - 144) * t10759
            t10760 = 5 * phi1
            tfunc[..., c] = (0.165e3 / 0.32768e5*1j) * np.sqrt(0.897e3) * np.sqrt(0.2e1) * ((1 + t10759) ** (-0.1e1 / 0.2e1)) * ((1 - t10759) ** (-0.1e1 / 0.2e1)) * ((t10776 + t10777) * np.exp((1j) * (t10760 - 12 * phi2)) + (t10776 - t10777) * np.exp((1j) * (t10760 + 12 * phi2)))

        if Bindx == 518:
            t10787 = np.sin(phi)
            t10784 = t10787 ** 2
            t10785 = t10787 * t10784
            t10778 = np.cos(phi)
            t10779 = t10778 ** 2
            t10780 = t10779 ** 2
            t10782 = t10780 ** 2
            tfunc[..., c] = -(0.33e2 / 0.16384e5) * np.exp((6*1j) * phi1) * np.sqrt(0.25194e5) * t10785 ** 2 * (-40250 * t10780 - 450225 * t10782 - 21 + (217350 * t10780 + 310155 * t10782 + 2415) * t10779)

        if Bindx == 519:
            t10805 = np.cos(phi)
            t10804 = t10805 ** 2
            t10806 = t10805 * t10804
            t10807 = t10804 ** 2
            t10808 = t10805 * t10807
            t10809 = t10806 ** 2
            t10810 = t10805 * t10809
            t10811 = t10807 ** 2
            t10813 = t10808 ** 2
            t10815 = t10809 ** 2
            t10817 = t10810 ** 2
            t10821 = -1247925 * t10806 + 12674109 * t10808 - 58935085 * t10810 + (144532575 * t10811 - 192796695 * t10813 + 132015975 * t10815 - 36288135 * t10817 + 36989) * t10805
            t10820 = 227400 * t10804 - 3468010 * t10807 + 18442116 * t10809 + 33153120 * t10813 + 16011450 * t10815 - 39019500 * t10817 - 2274 + (-41464170 + 16128060 * t10811) * t10811
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t10820 + t10821) * np.exp((6*1j) * (phi1 - phi2)) + (t10820 - t10821) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 520:
            t10839 = np.cos(phi)
            t10838 = t10839 ** 2
            t10840 = t10839 * t10838
            t10841 = t10838 ** 2
            t10842 = t10839 * t10841
            t10843 = t10840 ** 2
            t10844 = t10839 * t10843
            t10845 = t10841 ** 2
            t10847 = t10842 ** 2
            t10849 = t10843 ** 2
            t10851 = t10844 ** 2
            t10855 = 2859 * t10840 - 15009 * t10842 + 32351 * t10844 + (-24783 * t10845 - 8751 * t10847 + 21605 * t10849 - 8091 * t10851 - 181) * t10839
            t10854 = -276 * t10838 - 104 * t10841 + 11484 * t10843 + 63844 * t10847 - 40200 * t10849 + 6612 * t10851 + 6 + (-43164 + 1798 * t10845) * t10845
            tfunc[..., c] = (0.165e3 / 0.16384e5) * ((t10854 + t10855) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (t10854 - t10855) * np.exp((6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.897e3)

        if Bindx == 521:
            t10856 = np.cos(phi)
            t10857 = t10856 ** 2
            t10858 = t10857 ** 2
            tfunc[..., c] = (0.33e2 / 0.8192e4*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.1448655e7) * ((1 - t10856) ** (0.7e1 / 0.2e1)) * ((1 + t10856) ** (0.7e1 / 0.2e1)) * t10856 * (-700 * t10857 + 21 + (-15660 * t10857 + 5670 + 13485 * t10858) * t10858)

        if Bindx == 522:
            t10878 = np.cos(phi)
            t10877 = t10878 ** 2
            t10881 = t10877 ** 2
            t10885 = t10881 ** 2
            t10894 = 1402440 * t10885 ** 2
            t10880 = t10878 * t10877
            t10883 = t10880 ** 2
            t10884 = t10878 * t10883
            t10891 = t10884 ** 2
            t10889 = t10883 ** 2
            t10882 = t10878 * t10881
            t10887 = t10882 ** 2
            t10879 = 7 * phi1
            t10870 = t10878 * t10885
            t10868 = t10878 * t10887
            t10866 = t10878 * t10889
            t10864 = t10878 * t10891
            tfunc[..., c] = (-0.33e2 / 0.32768e5*1j) * np.sqrt((1 - t10878)) * np.sqrt(0.115e3) * ((1 + t10878) ** (-0.1e1 / 0.2e1)) * ((-2278965 * t10864 + 9460815 * t10866 - 15982785 * t10868 + 14040675 * t10870 - 13113 * t10877 + 5969 * t10878 - 190939 * t10880 + 146615 * t10881 + 1709757 * t10882 - 805189 * t10883 - 6764527 * t10884 + 2895849 * t10885 - 6441435 * t10887 + 8158605 * t10889 - 5343975 * t10891 + 203 + t10894) * np.exp((1j) * (t10879 - 6 * phi2)) + (5083845 * t10864 - 12785955 * t10866 + 10053225 * t10868 - 887535 * t10870 + 24645 * t10877 + 5563 * t10878 - 153181 * t10880 - 490735 * t10881 + 1072407 * t10882 + 3587353 * t10883 - 2371985 * t10884 - 12032361 * t10885 + 19594575 * t10887 - 14088165 * t10889 + 2018835 * t10891 - 203 + t10894) * np.exp((1j) * (t10879 + 6 * phi2)))

        if Bindx == 523:
            t10913 = np.cos(phi)
            t10912 = t10913 ** 2
            t10916 = t10912 ** 2
            t10915 = t10913 * t10912
            t10918 = t10915 ** 2
            t10920 = t10916 ** 2
            t10917 = t10913 * t10916
            t10922 = t10917 ** 2
            t10924 = t10918 ** 2
            t10919 = t10913 * t10918
            t10926 = t10919 ** 2
            t10928 = t10920 ** 2
            t10931 = -4360 * t10912 + 67716 * t10916 - 349256 * t10918 + 773366 * t10920 - 744216 * t10922 + 157780 * t10924 + 193256 * t10926 - 94395 * t10928 + 109
            t10930 = -32788 * t10915 + 111412 * t10917 - 42900 * t10919 + (-427372 * t10920 + 842788 * t10922 - 593028 * t10924 + 121220 * t10926 + 17980 * t10928 + 2688) * t10913
            t10914 = 7 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.195e3) * np.sqrt(0.2e1) * ((1 + t10913) ** (-0.1e1 / 0.2e1)) * ((1 - t10913) ** (-0.1e1 / 0.2e1)) * ((t10930 + t10931) * np.exp((1j) * (t10914 - 12 * phi2)) + (t10930 - t10931) * np.exp((1j) * (t10914 + 12 * phi2)))

        if Bindx == 524:
            t10940 = np.sin(phi)
            t10937 = t10940 ** 2
            t10938 = t10937 ** 2
            t10932 = np.cos(phi)
            t10933 = t10932 ** 2
            t10934 = t10933 ** 2
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.exp((8*1j) * phi1) * np.sqrt(0.965770e6) * t10938 ** 2 * (-700 * t10933 + 7 + (-36540 * t10933 + 9450 + 40455 * t10934) * t10934)

        if Bindx == 525:
            t10958 = np.cos(phi)
            t10957 = t10958 ** 2
            t10960 = t10958 * t10957
            t10961 = t10957 ** 2
            t10962 = t10958 * t10961
            t10963 = t10960 ** 2
            t10964 = t10958 * t10963
            t10965 = t10961 ** 2
            t10967 = t10962 ** 2
            t10969 = t10963 ** 2
            t10971 = t10964 ** 2
            t10975 = -2317 * t10960 + 58247 * t10962 - 448657 * t10964 + (1467345 * t10965 - 2330055 * t10967 + 1781325 * t10969 - 525915 * t10971 + 27) * t10958
            t10974 = 8342 * t10957 - 115990 * t10961 + 607838 * t10963 + 1811810 * t10967 - 832650 * t10969 - 147030 * t10971 - 97 + (-1507528 + 175305 * t10965) * t10965
            t10959 = 4 * phi1
            tfunc[..., c] = (0.33e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.345e3) * ((t10974 + t10975) * np.exp((2*1j) * (t10959 - 3 * phi2)) + (t10974 - t10975) * np.exp((2*1j) * (t10959 + 3 * phi2)))

        if Bindx == 526:
            t10993 = np.cos(phi)
            t10992 = t10993 ** 2
            t10996 = t10992 ** 2
            t10995 = t10993 * t10992
            t10998 = t10995 ** 2
            t11000 = t10996 ** 2
            t10997 = t10993 * t10996
            t11002 = t10997 ** 2
            t11004 = t10998 ** 2
            t10999 = t10993 * t10998
            t11006 = t10999 ** 2
            t11010 = -3552 * t10992 + 29940 * t10996 - 85536 * t10998 + 85536 * t11002 - 146252 * t11004 + 51040 * t11006 + 111 + (64218 + 4495 * t11000) * t11000
            t11009 = 3454 * t10995 + 17002 * t10997 - 121154 * t10999 + (228030 * t11000 - 146838 * t11002 - 6786 * t11004 + 26970 * t11006 - 678) * t10993
            t10994 = 2 * phi1
            tfunc[..., c] = (0.99e2 / 0.16384e5) * ((-t11009 + t11010) * np.exp((4*1j) * (t10994 - 3 * phi2)) + (t11009 + t11010) * np.exp((4*1j) * (t10994 + 3 * phi2))) * np.sqrt(0.65e2)

        if Bindx == 527:
            t11011 = np.cos(phi)
            t11012 = t11011 ** 2
            t11013 = t11012 ** 2
            tfunc[..., c] = (-0.33e2 / 0.8192e4*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.482885e6) * ((1 - t11011) ** (0.9e1 / 0.2e1)) * ((1 + t11011) ** (0.9e1 / 0.2e1)) * t11011 * (-5481 * t11013 - 35 + (8091 * t11013 + 945) * t11012)

        if Bindx == 528:
            t11031 = np.cos(phi)
            t11030 = t11031 ** 2
            t11033 = t11031 * t11030
            t11036 = t11033 ** 2
            t11037 = t11031 * t11036
            t11044 = t11037 ** 2
            t11046 = 280488 * t11031 * t11044
            t11042 = t11036 ** 2
            t11034 = t11030 ** 2
            t11035 = t11031 * t11034
            t11040 = t11035 ** 2
            t11038 = t11034 ** 2
            t11032 = 3 * phi1
            t11023 = t11031 * t11038
            t11021 = t11031 * t11040
            t11019 = t11031 * t11042
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * ((1 - t11031) ** (0.3e1 / 0.2e1)) * np.sqrt(0.345e3) * ((1 + t11031) ** (-0.1e1 / 0.2e1)) * ((-1158144 * t11019 + 1975896 * t11021 - 1823536 * t11023 - 14753 * t11030 - 2992 * t11031 + 59048 * t11033 + 216107 * t11034 - 333344 * t11035 - 1019029 * t11036 + 1002584 * t11037 + 2281741 * t11038 - 2683395 * t11040 + 1604889 * t11042 - 385671 * t11044 + 111 + t11046) * np.exp((3*1j) * (t11032 - 2 * phi2)) + (2628444 * t11019 - 4592952 * t11021 + 1373372 * t11023 + 1897 * t11030 - 3436 * t11031 + 92792 * t11033 + 100429 * t11034 - 598444 * t11035 - 1161083 * t11036 + 983576 * t11037 + 3870691 * t11038 - 4369365 * t11040 + 213759 * t11042 + 1507623 * t11044 - 111 + t11046) * np.exp((3*1j) * (t11032 + 2 * phi2)))

        if Bindx == 529:
            t11065 = np.cos(phi)
            t11064 = t11065 ** 2
            t11068 = t11064 ** 2
            t11067 = t11065 * t11064
            t11070 = t11067 ** 2
            t11072 = t11068 ** 2
            t11069 = t11065 * t11068
            t11074 = t11069 ** 2
            t11076 = t11070 ** 2
            t11071 = t11065 * t11070
            t11078 = t11071 ** 2
            t11080 = t11072 ** 2
            t11083 = -4824 * t11064 + 25700 * t11068 - 22936 * t11070 - 116050 * t11072 + 286968 * t11074 - 210732 * t11076 + 17400 * t11078 + 24273 * t11080 + 201
            t11082 = -5700 * t11067 + 59748 * t11069 - 179652 * t11071 + (188100 * t11072 + 16404 * t11074 - 138100 * t11076 + 55796 * t11078 + 3596 * t11080 - 192) * t11065
            t11066 = 3 * phi1
            tfunc[..., c] = (0.99e2 / 0.32768e5*1j) * np.sqrt(0.65e2) * np.sqrt(0.2e1) * ((1 + t11065) ** (-0.1e1 / 0.2e1)) * ((1 - t11065) ** (-0.1e1 / 0.2e1)) * ((t11082 - t11083) * np.exp((3*1j) * (t11066 - 4 * phi2)) + (t11082 + t11083) * np.exp((3*1j) * (t11066 + 4 * phi2)))

        if Bindx == 530:
            t11092 = np.sin(phi)
            t11088 = t11092 ** 2
            t11090 = t11092 * t11088 ** 2
            t11084 = np.cos(phi)
            t11085 = t11084 ** 2
            t11086 = t11085 ** 2
            tfunc[..., c] = -(0.33e2 / 0.16384e5) * np.exp((10*1j) * phi1) * np.sqrt(0.520030e6) * t11090 ** 2 * (-3915 * t11086 - 5 + (8091 * t11086 + 405) * t11085)

        if Bindx == 531:
            t11110 = np.cos(phi)
            t11109 = t11110 ** 2
            t11112 = t11110 * t11109
            t11113 = t11109 ** 2
            t11114 = t11110 * t11113
            t11115 = t11112 ** 2
            t11116 = t11110 * t11115
            t11117 = t11113 ** 2
            t11119 = t11114 ** 2
            t11121 = t11115 ** 2
            t11123 = t11116 ** 2
            t11127 = -4075 * t11112 + 20963 * t11114 - 32659 * t11116 + (-25311 * t11117 + 124407 * t11119 - 123975 * t11121 + 40455 * t11123 + 195) * t11110
            t11126 = 952 * t11109 - 12422 * t11113 + 67804 * t11115 + 232672 * t11119 - 134346 * t11121 + 12876 * t11123 - 14 + (-178310 + 10788 * t11117) * t11117
            t11111 = 5 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.31395e5) * ((t11126 - t11127) * np.exp((2*1j) * (t11111 - 3 * phi2)) + (t11126 + t11127) * np.exp((2*1j) * (t11111 + 3 * phi2)))

        if Bindx == 532:
            t11145 = np.cos(phi)
            t11144 = t11145 ** 2
            t11147 = t11145 * t11144
            t11148 = t11144 ** 2
            t11149 = t11145 * t11148
            t11150 = t11147 ** 2
            t11151 = t11145 * t11150
            t11152 = t11148 ** 2
            t11154 = t11149 ** 2
            t11156 = t11150 ** 2
            t11158 = t11151 ** 2
            t11162 = 9091 * t11147 - 40937 * t11149 + 40183 * t11151 + (67353 * t11152 - 127335 * t11154 + 38541 * t11156 + 13485 * t11158 - 381) * t11145
            t11161 = 2604 * t11144 - 936 * t11148 - 49764 * t11150 - 87516 * t11154 - 36296 * t11156 + 38164 * t11158 - 186 + (132132 + 1798 * t11152) * t11152
            t11146 = 5 * phi1
            tfunc[..., c] = (0.99e2 / 0.16384e5) * ((t11161 - t11162) * np.exp((2*1j) * (t11146 - 6 * phi2)) + (t11161 + t11162) * np.exp((2*1j) * (t11146 + 6 * phi2))) * np.sqrt(0.35e2)

        if Bindx == 533:
            t11163 = np.cos(phi)
            t11164 = t11163 ** 2
            tfunc[..., c] = (0.99e2 / 0.8192e4*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.260015e6) * ((1 - t11163) ** (0.11e2 / 0.2e1)) * ((1 + t11163) ** (0.11e2 / 0.2e1)) * t11163 * (15 + (-290 + 899 * t11164) * t11164)

        if Bindx == 534:
            t11181 = np.cos(phi)
            t11180 = t11181 ** 2
            t11183 = t11181 * t11180
            t11186 = t11183 ** 2
            t11187 = t11181 * t11186
            t11195 = 7192 * t11187 ** 2
            t11192 = t11186 ** 2
            t11184 = t11180 ** 2
            t11185 = t11181 * t11184
            t11190 = t11185 ** 2
            t11188 = t11184 ** 2
            t11182 = 11 * phi1
            t11173 = t11181 * t11188
            t11171 = t11181 * t11190
            t11169 = t11181 * t11192
            tfunc[..., c] = (-0.33e2 / 0.32768e5*1j) * ((1 - t11181) ** (0.5e1 / 0.2e1)) * np.sqrt(0.31395e5) * ((1 + t11181) ** (-0.1e1 / 0.2e1)) * ((t11195 - 8091 * t11169 - 32335 * t11192 + 34626 * t11171 + 60258 * t11190 - 58773 * t11173 - 60401 * t11188 + 49500 * t11187 + 35156 * t11186 - 20757 * t11185 - 11649 * t11184 + 3522 * t11183 + 1810 * t11180 - 27 * t11181 - 31) * np.exp((1j) * (t11182 - 6 * phi2)) + (t11195 + 51243 * t11169 + 145667 * t11192 + 190298 * t11171 + 52602 * t11190 - 164087 * t11173 - 197703 * t11188 - 42372 * t11187 + 66132 * t11186 + 45133 * t11185 + 1221 * t11184 - 6646 * t11183 - 1414 * t11180 + 159 * t11181 + 31) * np.exp((1j) * (t11182 + 6 * phi2)))

        if Bindx == 535:
            t11214 = np.cos(phi)
            t11213 = t11214 ** 2
            t11216 = t11214 * t11213
            t11217 = t11213 ** 2
            t11218 = t11214 * t11217
            t11219 = t11216 ** 2
            t11220 = t11214 * t11219
            t11221 = t11217 ** 2
            t11223 = t11218 ** 2
            t11225 = t11219 ** 2
            t11227 = t11220 ** 2
            t11229 = t11221 ** 2
            t11232 = 30668 * t11216 - 62348 * t11218 - 125268 * t11220 + (473044 * t11221 - 364156 * t11223 - 48132 * t11225 + 95236 * t11227 + 3596 * t11229 - 2640) * t11214
            t11231 = 2468 * t11213 + 43272 * t11217 - 224588 * t11219 + 286286 * t11221 + 94380 * t11223 - 354640 * t11225 + 123772 * t11227 + 29667 * t11229 - 617
            t11215 = 11 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((1 + t11214) ** (-0.1e1 / 0.2e1)) * ((1 - t11214) ** (-0.1e1 / 0.2e1)) * ((-t11231 + t11232) * np.exp((1j) * (t11215 - 12 * phi2)) + (t11231 + t11232) * np.exp((1j) * (t11215 + 12 * phi2)))

        if Bindx == 536:
            t11240 = np.sin(phi)
            t11236 = t11240 ** 2
            t11237 = t11240 * t11236
            t11238 = t11237 ** 2
            t11233 = np.cos(phi)
            t11234 = t11233 ** 2
            tfunc[..., c] = (0.495e3 / 0.16384e5) * np.exp((12*1j) * phi1) * np.sqrt(0.7429e4) * t11238 ** 2 * (3 + (-174 + 899 * t11234) * t11234)

        if Bindx == 537:
            t11258 = np.cos(phi)
            t11257 = t11258 ** 2
            t11260 = t11258 * t11257
            t11261 = t11257 ** 2
            t11262 = t11258 * t11261
            t11263 = t11260 ** 2
            t11264 = t11258 * t11263
            t11265 = t11261 ** 2
            t11267 = t11262 ** 2
            t11269 = t11263 ** 2
            t11271 = t11264 ** 2
            t11275 = 2859 * t11260 - 15009 * t11262 + 32351 * t11264 + (-24783 * t11265 - 8751 * t11267 + 21605 * t11269 - 8091 * t11271 - 181) * t11258
            t11274 = -276 * t11257 - 104 * t11261 + 11484 * t11263 + 63844 * t11267 - 40200 * t11269 + 6612 * t11271 + 6 + (-43164 + 1798 * t11265) * t11265
            t11259 = 2 * phi1
            tfunc[..., c] = (0.165e3 / 0.16384e5) * ((t11274 + t11275) * np.exp((6*1j) * (t11259 - phi2)) + (t11274 - t11275) * np.exp((6*1j) * (t11259 + phi2))) * np.sqrt(0.897e3)

        if Bindx == 538:
            t11293 = np.cos(phi)
            t11292 = t11293 ** 2
            t11294 = t11293 * t11292
            t11295 = t11292 ** 2
            t11296 = t11293 * t11295
            t11297 = t11294 ** 2
            t11298 = t11293 * t11297
            t11299 = t11295 ** 2
            t11301 = t11296 ** 2
            t11303 = t11297 ** 2
            t11305 = t11298 ** 2
            t11309 = 35259 * t11294 + 98553 * t11296 - 512941 * t11298 + (383955 * t11299 + 308217 * t11301 - 269381 * t11303 - 40455 * t11305 - 7303) * t11293
            t11308 = 9528 * t11292 - 129220 * t11295 + 216216 * t11297 - 664664 * t11301 + 151788 * t11303 + 149640 * t11305 + 1191 + (265122 + 4495 * t11299) * t11299
            tfunc[..., c] = (0.33e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t11308 + t11309) * np.exp((12*1j) * (phi1 - phi2)) + (t11308 - t11309) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 539:
            t11310 = np.cos(phi)
            tfunc[..., c] = (-0.495e3 / 0.8192e4*1j) * np.exp((13*1j) * phi1) * np.sqrt(0.215441e6) * ((1 - t11310) ** (0.13e2 / 0.2e1)) * ((1 + t11310) ** (0.13e2 / 0.2e1)) * t11310 * (31 * t11310 ** 2 - 3)

        if Bindx == 540:
            t11325 = np.cos(phi)
            t11324 = t11325 ** 2
            t11327 = t11325 * t11324
            t11330 = t11327 ** 2
            t11336 = t11330 ** 2
            t11338 = 248 * t11325 * t11336
            t11328 = t11324 ** 2
            t11329 = t11325 * t11328
            t11334 = t11329 ** 2
            t11332 = t11328 ** 2
            t11326 = 13 * phi1
            t11319 = t11325 * t11330
            t11317 = t11325 * t11332
            t11315 = t11325 * t11334
            tfunc[..., c] = (0.165e3 / 0.32768e5*1j) * ((1 - t11325) ** (0.7e1 / 0.2e1)) * np.sqrt(0.26013e5) * ((1 + t11325) ** (-0.1e1 / 0.2e1)) * ((t11338 - 217 * t11336 - 1218 * t11315 + 984 * t11334 + 2466 * t11317 - 1761 * t11332 - 2644 * t11319 + 1544 * t11330 + 1596 * t11329 - 651 * t11328 - 522 * t11327 + 96 * t11324 + 74 * t11325 + 5) * np.exp((1j) * (t11326 - 6 * phi2)) + (t11338 + 2201 * t11336 + 8454 * t11315 + 18040 * t11334 + 22330 * t11317 + 13761 * t11332 - 1188 * t11319 - 8712 * t11330 - 5940 * t11329 - 1045 * t11328 + 638 * t11327 + 336 * t11324 + 34 * t11325 - 5) * np.exp((1j) * (t11326 + 6 * phi2)))

        if Bindx == 541:
            t11356 = np.cos(phi)
            t11355 = t11356 ** 2
            t11359 = t11355 ** 2
            t11363 = t11359 ** 2
            t11372 = 620 * t11363 ** 2
            t11358 = t11356 * t11355
            t11361 = t11358 ** 2
            t11362 = t11356 * t11361
            t11369 = t11362 ** 2
            t11367 = t11361 ** 2
            t11360 = t11356 * t11359
            t11365 = t11360 ** 2
            t11357 = 13 * phi1
            t11348 = t11356 * t11363
            t11346 = t11356 * t11365
            t11344 = t11356 * t11367
            t11342 = t11356 * t11369
            tfunc[..., c] = (-0.33e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t11356)) * np.sqrt(0.29e2) * ((1 + t11356) ** (-0.1e1 / 0.2e1)) * ((t11372 - 5425 * t11342 + 19155 * t11369 - 31129 * t11344 + 8099 * t11367 + 55419 * t11346 - 89089 * t11365 + 29315 * t11348 + 63063 * t11363 - 77363 * t11362 + 17017 * t11361 + 27573 * t11360 - 22295 * t11359 + 3241 * t11358 + 3189 * t11355 - 1631 * t11356 + 241) * np.exp((1j) * (t11357 - 12 * phi2)) + (t11372 + 6665 * t11342 + 31245 * t11369 + 81529 * t11344 + 120757 * t11367 + 73437 * t11346 - 71071 * t11365 - 189475 * t11348 - 155727 * t11363 - 15301 * t11362 + 79079 * t11361 + 68523 * t11360 + 18655 * t11359 - 6881 * t11358 - 6933 * t11355 - 2113 * t11356 - 241) * np.exp((1j) * (t11357 + 12 * phi2)))

        if Bindx == 542:
            t11379 = np.sin(phi)
            t11374 = t11379 ** 2
            t11375 = t11379 * t11374
            t11377 = t11379 * t11375 ** 2
            t11373 = np.cos(phi)
            tfunc[..., c] = -(0.99e2 / 0.16384e5) * np.exp((14*1j) * phi1) * np.sqrt(0.2154410e7) * t11377 ** 2 * (31 * t11373 ** 2 - 1)

        if Bindx == 543:
            t11397 = np.cos(phi)
            t11396 = t11397 ** 2
            t11399 = t11397 * t11396
            t11400 = t11396 ** 2
            t11401 = t11397 * t11400
            t11402 = t11399 ** 2
            t11403 = t11397 * t11402
            t11404 = t11400 ** 2
            t11406 = t11401 ** 2
            t11408 = t11402 ** 2
            t11410 = t11403 ** 2
            t11414 = 335 * t11399 - 2599 * t11401 + 6215 * t11403 + (-5885 * t11404 + 1141 * t11406 + 1435 * t11408 - 651 * t11410 + 9) * t11397
            t11413 = -280 * t11396 + 1190 * t11400 - 924 * t11402 + 6336 * t11406 - 4310 * t11408 + 820 * t11410 + 14 + (-2970 + 124 * t11404) * t11404
            t11398 = 7 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.130065e6) * ((t11413 + t11414) * np.exp((2*1j) * (t11398 - 3 * phi2)) + (t11413 - t11414) * np.exp((2*1j) * (t11398 + 3 * phi2)))

        if Bindx == 544:
            t11432 = np.cos(phi)
            t11431 = t11432 ** 2
            t11434 = t11432 * t11431
            t11435 = t11431 ** 2
            t11436 = t11432 * t11435
            t11437 = t11434 ** 2
            t11438 = t11432 * t11437
            t11439 = t11435 ** 2
            t11441 = t11436 ** 2
            t11443 = t11437 ** 2
            t11445 = t11438 ** 2
            t11449 = 1771 * t11434 - 7553 * t11436 - 4433 * t11438 + (20449 * t11439 - 2639 * t11441 - 7259 * t11443 - 651 * t11445 + 315) * t11432
            t11448 = -1156 * t11431 + 728 * t11435 + 12012 * t11437 - 12012 * t11441 + 9464 * t11443 + 2948 * t11445 - 34 + (-12012 + 62 * t11439) * t11439
            t11433 = 7 * phi1
            tfunc[..., c] = (0.33e2 / 0.16384e5) * ((t11448 + t11449) * np.exp((2*1j) * (t11433 - 6 * phi2)) + (t11448 - t11449) * np.exp((2*1j) * (t11433 + 6 * phi2))) * np.sqrt(0.145e3)

        if Bindx == 545:
            t11450 = np.cos(phi)
            tfunc[..., c] = (0.99e2 / 0.8192e4*1j) * np.exp((15*1j) * phi1) * np.sqrt(0.33393355e8) * ((1 - t11450) ** (0.15e2 / 0.2e1)) * ((1 + t11450) ** (0.15e2 / 0.2e1)) * t11450

        if Bindx == 546:
            t11464 = np.cos(phi)
            t11463 = t11464 ** 2
            t11466 = t11464 * t11463
            t11469 = t11466 ** 2
            t11476 = 8 * t11469 ** 2
            t11467 = t11463 ** 2
            t11468 = t11464 * t11467
            t11473 = t11468 ** 2
            t11471 = t11467 ** 2
            t11465 = 5 * phi1
            t11458 = t11464 * t11469
            t11456 = t11464 * t11471
            t11454 = t11464 * t11473
            tfunc[..., c] = (-0.33e2 / 0.32768e5*1j) * ((1 - t11464) ** (0.9e1 / 0.2e1)) * np.sqrt(0.4032015e7) * ((1 + t11464) ** (-0.1e1 / 0.2e1)) * ((t11476 - 5 * t11454 - 43 * t11473 + 25 * t11456 + 95 * t11471 - 50 * t11458 - 110 * t11469 + 50 * t11468 + 70 * t11467 - 25 * t11466 - 23 * t11463 + 5 * t11464 + 3) * np.exp((3*1j) * (t11465 - 2 * phi2)) + (t11476 + 85 * t11454 + 407 * t11473 + 1155 * t11456 + 2145 * t11471 + 2706 * t11458 + 2310 * t11469 + 1254 * t11468 + 330 * t11467 - 55 * t11466 - 77 * t11463 - 25 * t11464 - 3) * np.exp((3*1j) * (t11465 + 2 * phi2)))

        if Bindx == 547:
            t11493 = np.cos(phi)
            t11492 = t11493 ** 2
            t11495 = t11493 * t11492
            t11498 = t11495 ** 2
            t11499 = t11493 * t11498
            t11506 = t11499 ** 2
            t11508 = 4 * t11493 * t11506
            t11504 = t11498 ** 2
            t11496 = t11492 ** 2
            t11497 = t11493 * t11496
            t11502 = t11497 ** 2
            t11500 = t11496 ** 2
            t11494 = 5 * phi1
            t11485 = t11493 * t11500
            t11483 = t11493 * t11502
            t11481 = t11493 * t11504
            tfunc[..., c] = (0.33e2 / 0.32768e5*1j) * np.sqrt(0.2e1) * ((1 - t11493) ** (0.3e1 / 0.2e1)) * np.sqrt(0.4495e4) * ((1 + t11493) ** (-0.1e1 / 0.2e1)) * ((t11508 - 37 * t11506 + 142 * t11481 - 271 * t11504 + 184 * t11483 + 275 * t11502 - 726 * t11485 + 561 * t11500 + 132 * t11499 - 583 * t11498 + 418 * t11497 - 37 * t11496 - 128 * t11495 + 89 * t11492 - 26 * t11493 + 3) * np.exp((3*1j) * (t11494 - 4 * phi2)) + (t11508 + 53 * t11506 + 322 * t11481 + 1183 * t11504 + 2912 * t11483 + 5005 * t11502 + 6006 * t11485 + 4719 * t11500 + 1716 * t11499 - 1001 * t11498 - 2002 * t11497 - 1547 * t11496 - 728 * t11495 - 217 * t11492 - 38 * t11493 - 3) * np.exp((3*1j) * (t11494 + 4 * phi2)))

        if Bindx == 548:
            t11513 = np.sin(phi)
            t11509 = t11513 ** 2
            t11510 = t11509 ** 2
            t11511 = t11510 ** 2
            tfunc[..., c] = (0.99e2 / 0.65536e5) * np.exp((16*1j) * phi1) * np.sqrt(0.66786710e8) * t11511 ** 2

        if Bindx == 549:
            t11530 = np.cos(phi)
            t11529 = t11530 ** 2
            t11533 = t11529 ** 2
            t11532 = t11530 * t11529
            t11535 = t11532 ** 2
            t11534 = t11530 * t11533
            t11538 = t11534 ** 2
            t11540 = t11535 ** 2
            t11536 = t11530 * t11535
            t11542 = t11536 ** 2
            t11543 = t11530 * t11542
            t11546 = t11530 * t11543 - 10 * t11529 + 50 * t11533 - 66 * t11535 + 66 * t11538 - 50 * t11540 + 10 * t11542 - 1
            t11545 = -10 * t11532 - 34 * t11534 - 6 * t11543 + (-110 * t11529 + 110) * t11536 + (34 * t11538 + 10 * t11540 + 6) * t11530
            t11531 = 8 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.4032015e7) * ((t11545 + t11546) * np.exp((2*1j) * (t11531 - 3 * phi2)) + (-t11545 + t11546) * np.exp((2*1j) * (t11531 + 3 * phi2)))

        if Bindx == 550:
            t11562 = np.cos(phi)
            t11579 = -12 * t11562
            t11561 = t11562 ** 2
            t11565 = t11561 ** 2
            t11568 = t11565 ** 2
            t11569 = t11562 * t11568
            t11570 = t11561 * t11569
            t11571 = t11562 * t11570
            t11566 = t11562 * t11565
            t11567 = t11561 * t11566
            t11573 = t11567 ** 2
            t11577 = 64 * t11561 + 364 * t11565 + 364 * t11571 + 64 * t11573 + 1 + (-858 + t11568) * t11568
            t11576 = t11573 * t11579 - 364 * t11566 + 572 * t11567 + 572 * t11569 - 364 * t11570 + t11579 - 196 * (t11561 + t11571) * t11562
            t11563 = 4 * phi1
            tfunc[..., c] = (0.33e2 / 0.32768e5) * ((t11576 + t11577) * np.exp((4*1j) * (t11563 - 3 * phi2)) + (-t11576 + t11577) * np.exp((4*1j) * (t11563 + 3 * phi2))) * np.sqrt(0.4495e4)

        if Bindx == 551:
            t11596 = np.cos(phi)
            t11595 = t11596 ** 2
            t11599 = t11595 ** 2
            t11598 = t11596 * t11595
            t11601 = t11598 ** 2
            t11600 = t11596 * t11599
            t11604 = t11600 ** 2
            t11606 = t11601 ** 2
            t11602 = t11596 * t11601
            t11608 = t11602 ** 2
            t11609 = t11596 * t11608
            t11612 = -t11596 * t11609 + 10 * t11595 - 50 * t11599 + 66 * t11601 - 66 * t11604 + 50 * t11606 - 10 * t11608 + 1
            t11611 = -10 * t11598 - 34 * t11600 - 6 * t11609 + (-110 * t11595 + 110) * t11602 + (34 * t11604 + 10 * t11606 + 6) * t11596
            t11597 = 17 * phi1
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.993395e6) * np.sqrt((1 - t11596)) * np.sqrt((1 + t11596)) * ((t11611 - t11612) * np.exp((-1*1j) * (t11597 - 6 * phi2)) + (t11611 + t11612) * np.exp((-1*1j) * (t11597 + 6 * phi2)))

        if Bindx == 552:
            t11628 = np.cos(phi)
            t11645 = 12 * t11628
            t11627 = t11628 ** 2
            t11631 = t11627 ** 2
            t11634 = t11631 ** 2
            t11635 = t11628 * t11634
            t11636 = t11627 * t11635
            t11637 = t11628 * t11636
            t11632 = t11628 * t11631
            t11633 = t11627 * t11632
            t11639 = t11633 ** 2
            t11643 = -64 * t11627 - 364 * t11631 - 364 * t11637 - 64 * t11639 - 1 + (858 - t11634) * t11634
            t11642 = t11639 * t11645 + 364 * t11632 - 572 * t11633 - 572 * t11635 + 364 * t11636 + t11645 + 196 * (t11627 + t11637) * t11628
            t11629 = 17 * phi1
            tfunc[..., c] = (0.35e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.17391e5) * np.sqrt((1 - t11628)) * np.sqrt((1 + t11628)) * ((t11642 + t11643) * np.exp((-1*1j) * (t11629 - 12 * phi2)) + (t11642 - t11643) * np.exp((-1*1j) * (t11629 + 12 * phi2)))

        if Bindx == 553:
            t11664 = np.cos(phi)
            t11663 = t11664 ** 2
            t11667 = t11663 ** 2
            t11666 = t11664 * t11663
            t11669 = t11666 ** 2
            t11671 = t11667 ** 2
            t11668 = t11664 * t11667
            t11673 = t11668 ** 2
            t11675 = t11669 ** 2
            t11670 = t11664 * t11669
            t11677 = t11670 ** 2
            t11679 = t11671 ** 2
            t11682 = -6 + 42 * t11663 + 130 * t11667 - 974 * t11669 + 1870 * t11671 - 1474 * t11673 + 278 * t11675 + 230 * t11677 - 96 * t11679
            t11681 = 230 * t11666 - 646 * t11668 + 462 * t11670 + (660 * t11671 - 1326 * t11673 + 790 * t11675 - 134 * t11677 - 17 * t11679 - 19) * t11664
            t11665 = 8 * phi1
            tfunc[..., c] = (0.105e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.58435e5) * ((-t11681 + t11682) * np.exp((-2*1j) * (t11665 - 3 * phi2)) + (t11681 + t11682) * np.exp((-2*1j) * (t11665 + 3 * phi2)))

        if Bindx == 554:
            t11701 = np.cos(phi)
            t11700 = t11701 ** 2
            t11704 = t11700 ** 2
            t11703 = t11701 * t11700
            t11706 = t11703 ** 2
            t11708 = t11704 ** 2
            t11705 = t11701 * t11704
            t11710 = t11705 ** 2
            t11712 = t11706 ** 2
            t11707 = t11701 * t11706
            t11714 = t11707 ** 2
            t11716 = t11708 ** 2
            t11719 = 12 + 564 * t11700 + 1036 * t11704 - 6188 * t11706 - 572 * t11708 + 9724 * t11710 - 1820 * t11712 - 2564 * t11714 - 192 * t11716
            t11718 = 1264 * t11703 - 1820 * t11705 - 6864 * t11707 + (7722 * t11708 + 4368 * t11710 - 3836 * t11712 - 944 * t11714 - 17 * t11716 + 127) * t11701
            t11702 = 4 * phi1
            tfunc[..., c] = (0.35e2 / 0.32768e5) * ((-t11718 + t11719) * np.exp((-4*1j) * (t11702 - 3 * phi2)) + (t11718 + t11719) * np.exp((-4*1j) * (t11702 + 3 * phi2))) * np.sqrt(0.1023e4)

        if Bindx == 555:
            t11734 = np.cos(phi)
            t11733 = t11734 ** 2
            t11736 = t11734 * t11733
            t11739 = t11736 ** 2
            t11745 = t11739 ** 2
            t11747 = -51 * t11734 * t11745 + 5
            t11737 = t11733 ** 2
            t11738 = t11734 * t11737
            t11743 = t11738 ** 2
            t11741 = t11737 ** 2
            t11735 = 5 * phi1
            t11728 = t11734 * t11739
            t11726 = t11734 * t11741
            t11724 = t11734 * t11743
            tfunc[..., c] = (-0.35e2 / 0.32768e5*1j) * ((1 + t11734) ** (0.9e1 / 0.2e1)) * np.sqrt(0.1928355e7) * ((1 - t11734) ** (-0.1e1 / 0.2e1)) * ((525 * t11745 - 2414 * t11724 + 6490 * t11743 - 11165 * t11726 + 12507 * t11741 - 8580 * t11728 + 2508 * t11739 + 1155 * t11738 - 1485 * t11737 + 594 * t11736 - 70 * t11733 - 19 * t11734 + t11747) * np.exp((-3*1j) * (t11735 - 2 * phi2)) + (15 * t11745 - 286 * t11724 - 70 * t11743 + 665 * t11726 + 125 * t11741 - 820 * t11728 - 100 * t11739 + 565 * t11738 + 25 * t11737 - 206 * t11736 + 10 * t11733 + 31 * t11734 - t11747) * np.exp((-3*1j) * (t11735 + 2 * phi2)))

        if Bindx == 556:
            t11765 = np.cos(phi)
            t11764 = t11765 ** 2
            t11768 = t11764 ** 2
            t11772 = t11768 ** 2
            t11781 = -561 * t11772 ** 2 - 271
            t11767 = t11765 * t11764
            t11770 = t11767 ** 2
            t11771 = t11765 * t11770
            t11778 = t11771 ** 2
            t11776 = t11770 ** 2
            t11769 = t11765 * t11768
            t11774 = t11769 ** 2
            t11766 = 5 * phi1
            t11757 = t11765 * t11772
            t11755 = t11765 * t11774
            t11753 = t11765 * t11776
            t11751 = t11765 * t11778
            tfunc[..., c] = (0.35e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.31e2) * ((1 + t11765) ** (0.3e1 / 0.2e1)) * ((-7062 * t11751 + 40234 * t11778 - 135926 * t11753 + 297934 * t11776 - 428974 * t11755 + 370370 * t11774 - 89518 * t11757 - 219648 * t11772 + 325182 * t11771 - 210210 * t11770 + 46046 * t11769 + 34034 * t11768 - 34426 * t11767 + 14134 * t11764 - 3002 * t11765 - t11781) * np.exp((-3*1j) * (t11766 - 4 * phi2)) + (-4818 * t11751 - 16474 * t11778 - 24754 * t11753 - 334 * t11776 + 56390 * t11755 + 77198 * t11774 + 11462 * t11757 - 71808 * t11772 - 71478 * t11771 - 5742 * t11770 + 33770 * t11769 + 22286 * t11768 + 1346 * t11767 - 4294 * t11764 - 1918 * t11765 + t11781) * np.exp((-3*1j) * (t11766 + 4 * phi2))) * ((1 - t11765) ** (-0.1e1 / 0.2e1))

        if Bindx == 557:
            t11800 = np.cos(phi)
            t11799 = t11800 ** 2
            t11803 = t11799 ** 2
            t11802 = t11800 * t11799
            t11805 = t11802 ** 2
            t11807 = t11803 ** 2
            t11804 = t11800 * t11803
            t11809 = t11804 ** 2
            t11811 = t11805 ** 2
            t11806 = t11800 * t11805
            t11813 = t11806 ** 2
            t11815 = t11807 ** 2
            t11818 = -1 + 37 * t11799 - 425 * t11803 + 1749 * t11805 - 3115 * t11807 + 2231 * t11809 + 133 * t11811 - 945 * t11813 + 336 * t11815
            t11817 = 140 * t11802 - 294 * t11804 - 552 * t11806 + (2770 * t11807 - 3796 * t11809 + 2150 * t11811 - 336 * t11813 - 68 * t11815 - 14) * t11800
            t11801 = 7 * phi1
            tfunc[..., c] = -(0.105e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.642785e6) * ((t11817 + t11818) * np.exp((-2*1j) * (t11801 - 3 * phi2)) + (-t11817 + t11818) * np.exp((-2*1j) * (t11801 + 3 * phi2)))

        if Bindx == 558:
            t11837 = np.cos(phi)
            t11836 = t11837 ** 2
            t11840 = t11836 ** 2
            t11839 = t11837 * t11836
            t11842 = t11839 ** 2
            t11844 = t11840 ** 2
            t11841 = t11837 * t11840
            t11846 = t11841 ** 2
            t11848 = t11842 ** 2
            t11843 = t11837 * t11842
            t11850 = t11843 ** 2
            t11852 = t11844 ** 2
            t11855 = 119 + 2023 * t11836 - 14693 * t11840 + 3003 * t11842 + 74789 * t11844 - 80795 * t11846 - 20839 * t11848 + 32697 * t11850 + 3696 * t11852
            t11854 = 1348 * t11839 + 24024 * t11841 - 60060 * t11843 + (-4004 * t11844 + 84812 * t11846 - 29512 * t11848 - 15348 * t11850 - 374 * t11852 - 886) * t11837
            t11838 = 7 * phi1
            tfunc[..., c] = -(0.35e2 / 0.16384e5) * ((t11854 + t11855) * np.exp((-2*1j) * (t11838 - 6 * phi2)) + (-t11854 + t11855) * np.exp((-2*1j) * (t11838 + 6 * phi2))) * np.sqrt(0.93e2)

        if Bindx == 559:
            t11871 = np.cos(phi)
            t11870 = t11871 ** 2
            t11873 = t11871 * t11870
            t11876 = t11873 ** 2
            t11877 = t11871 * t11876
            t11885 = -527 * t11877 ** 2 + 2
            t11882 = t11876 ** 2
            t11874 = t11870 ** 2
            t11875 = t11871 * t11874
            t11880 = t11875 ** 2
            t11878 = t11874 ** 2
            t11872 = 13 * phi1
            t11863 = t11871 * t11878
            t11861 = t11871 * t11880
            t11859 = t11871 * t11882
            tfunc[..., c] = (0.105e3 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 + t11871) ** (0.7e1 / 0.2e1)) * np.sqrt(0.20735e5) * ((-4526 * t11859 + 16585 * t11882 - 32829 * t11861 + 35028 * t11880 - 12349 * t11863 - 15528 * t11878 + 21630 * t11877 - 8697 * t11876 - 1976 * t11875 + 2897 * t11874 - 721 * t11873 - 90 * t11870 + 51 * t11871 - t11885) * np.exp((-1*1j) * (t11872 - 6 * phi2)) + (-310 * t11859 + 2759 * t11882 + 1395 * t11861 - 6012 * t11880 - 2445 * t11863 + 7000 * t11878 + 2030 * t11877 - 4615 * t11876 - 720 * t11875 + 1647 * t11874 + 15 * t11873 - 254 * t11870 + 35 * t11871 + t11885) * np.exp((-1*1j) * (t11872 + 6 * phi2))) * ((1 - t11871) ** (-0.1e1 / 0.2e1))

        if Bindx == 560:
            t11904 = np.cos(phi)
            t11903 = t11904 ** 2
            t11907 = t11903 ** 2
            t11911 = t11907 ** 2
            t11919 = t11911 ** 2
            t11921 = -5797 * t11904 * t11919 + 1157
            t11906 = t11904 * t11903
            t11909 = t11906 ** 2
            t11910 = t11904 * t11909
            t11917 = t11910 ** 2
            t11915 = t11909 ** 2
            t11908 = t11904 * t11907
            t11913 = t11908 ** 2
            t11905 = 13 * phi1
            t11896 = t11904 * t11911
            t11894 = t11904 * t11913
            t11892 = t11904 * t11915
            t11890 = t11904 * t11917
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt(0.3e1) * np.sqrt((1 + t11904)) * ((58993 * t11919 - 256184 * t11890 + 592286 * t11917 - 679406 * t11892 + 2548 * t11915 + 1124396 * t11894 - 1460030 * t11913 + 462748 * t11896 + 739882 * t11911 - 903760 * t11910 + 274274 * t11909 + 182182 * t11908 - 179284 * t11907 + 42524 * t11906 + 11134 * t11903 - 7663 * t11904 + t11921) * np.exp((-1*1j) * (t11905 - 12 * phi2)) + (47399 * t11919 + 149792 * t11890 + 186310 * t11917 - 99190 * t11892 - 577668 * t11915 - 549276 * t11894 + 213642 * t11913 + 783640 * t11896 + 418990 * t11911 - 255112 * t11910 - 374374 * t11909 - 82082 * t11908 + 84980 * t11907 + 51780 * t11906 + 1878 * t11903 - 5349 * t11904 - t11921) * np.exp((-1*1j) * (t11905 + 12 * phi2))) * ((1 - t11904) ** (-0.1e1 / 0.2e1))

        if Bindx == 561:
            t11940 = np.cos(phi)
            t11939 = t11940 ** 2
            t11943 = t11939 ** 2
            t11942 = t11940 * t11939
            t11945 = t11942 ** 2
            t11947 = t11943 ** 2
            t11944 = t11940 * t11943
            t11949 = t11944 ** 2
            t11951 = t11945 ** 2
            t11946 = t11940 * t11945
            t11953 = t11946 ** 2
            t11955 = t11947 ** 2
            t11958 = 11 - 693 * t11939 + 7023 * t11943 - 27073 * t11945 + 43521 * t11947 - 14799 * t11949 - 37099 * t11951 + 42501 * t11953 - 13392 * t11955
            t11957 = -388 * t11942 + 7176 * t11944 - 39780 * t11946 + (97124 * t11947 - 115596 * t11949 + 62184 * t11951 - 7564 * t11953 - 3162 * t11955 + 6) * t11940
            t11941 = 2 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((-t11957 + t11958) * np.exp((-6*1j) * (t11941 - phi2)) + (t11957 + t11958) * np.exp((-6*1j) * (t11941 + phi2))) * np.sqrt(0.62205e5)

        if Bindx == 562:
            t11977 = np.cos(phi)
            t11976 = t11977 ** 2
            t11978 = t11977 * t11976
            t11979 = t11976 ** 2
            t11980 = t11977 * t11979
            t11981 = t11978 ** 2
            t11982 = t11977 * t11981
            t11983 = t11979 ** 2
            t11985 = t11980 ** 2
            t11987 = t11981 ** 2
            t11989 = t11982 ** 2
            t11991 = t11983 ** 2
            t11994 = -116840 * t11978 + 372372 * t11980 + 175032 * t11982 + (-1937650 * t11983 + 2011464 * t11985 - 2940 * t11987 - 495256 * t11989 - 17391 * t11991 + 7113) * t11977
            t11993 = -18351 * t11976 - 103425 * t11979 + 889889 * t11981 - 1585155 * t11983 + 112827 * t11985 + 1573117 * t11987 - 727725 * t11989 - 147312 * t11991 + 2039
            tfunc[..., c] = (0.35e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t11993 - t11994) * np.exp((-12*1j) * (phi1 - phi2)) + (t11993 + t11994) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 563:
            t12011 = np.cos(phi)
            t12010 = t12011 ** 2
            t12013 = t12011 * t12010
            t12016 = t12013 ** 2
            t12017 = t12011 * t12016
            t12024 = t12017 ** 2
            t12026 = -15283 * t12011 * t12024 - 12
            t12022 = t12016 ** 2
            t12014 = t12010 ** 2
            t12015 = t12011 * t12014
            t12020 = t12015 ** 2
            t12018 = t12014 ** 2
            t12012 = 11 * phi1
            t12003 = t12011 * t12018
            t12001 = t12011 * t12020
            t11999 = t12011 * t12022
            tfunc[..., c] = (-0.105e3 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 + t12011) ** (0.5e1 / 0.2e1)) * np.sqrt(0.715e3) * ((1 - t12011) ** (-0.1e1 / 0.2e1)) * ((105183 * t12024 - 281387 * t11999 + 316448 * t12022 + 25143 * t12001 - 433637 * t12020 + 368283 * t12003 + 35388 * t12018 - 210717 * t12017 + 85093 * t12016 + 26307 * t12015 - 24016 * t12014 + 1849 * t12013 + 1569 * t12010 - 211 * t12011 + t12026) * np.exp((-1*1j) * (t12012 - 6 * phi2)) + (13485 * t12024 - 74617 * t11999 - 59334 * t12022 + 152859 * t12001 + 103791 * t12020 - 169865 * t12003 - 90168 * t12018 + 109649 * t12017 + 38811 * t12016 - 40035 * t12015 - 6510 * t12014 + 7009 * t12013 - 87 * t12010 - 283 * t12011 - t12026) * np.exp((-1*1j) * (t12012 + 6 * phi2)))

        if Bindx == 564:
            t12046 = np.cos(phi)
            t12045 = t12046 ** 2
            t12049 = t12045 ** 2
            t12048 = t12046 * t12045
            t12051 = t12048 ** 2
            t12053 = t12049 ** 2
            t12054 = t12046 * t12053
            t12050 = t12046 * t12049
            t12055 = t12050 ** 2
            t12057 = t12051 ** 2
            t12052 = t12046 * t12051
            t12059 = t12052 ** 2
            t12061 = t12053 ** 2
            t12065 = 5797 * t12054 ** 2 - 7623 * t12045 + 27280 * t12049 + 64064 * t12051 - 457314 * t12053 + 737594 * t12055 - 315224 * t12057 - 184920 * t12059 + 129983 * t12061 + 363
            t12064 = 17918 * t12048 - 131754 * t12050 + 305734 * t12052 - 110110 * t12054 + (-465894 * t12055 + 551474 * t12057 - 122078 * t12059 - 45012 * t12061 - 278) * t12046
            t12047 = 11 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5*1j) * np.sqrt(0.87e2) * ((t12064 + t12065) * np.exp((-1*1j) * (t12047 - 12 * phi2)) + (t12064 - t12065) * np.exp((-1*1j) * (t12047 + 12 * phi2))) * ((1 + t12046) ** (-0.1e1 / 0.2e1)) * ((1 - t12046) ** (-0.1e1 / 0.2e1))

        if Bindx == 565:
            t12084 = np.cos(phi)
            t12083 = t12084 ** 2
            t12087 = t12083 ** 2
            t12086 = t12084 * t12083
            t12089 = t12086 ** 2
            t12091 = t12087 ** 2
            t12088 = t12084 * t12087
            t12093 = t12088 ** 2
            t12095 = t12089 ** 2
            t12090 = t12084 * t12089
            t12097 = t12090 ** 2
            t12099 = t12091 ** 2
            t12102 = -2125 * t12083 + 24465 * t12087 - 77357 * t12089 - 12589 * t12091 + 489009 * t12093 - 956333 * t12095 + 750665 * t12097 - 215760 * t12099 + 25
            t12101 = 14108 * t12086 - 127358 * t12088 + 532536 * t12090 + (-1149670 * t12091 + 1280188 * t12093 - 624834 * t12095 + 14384 * t12097 + 61132 * t12099 - 486) * t12084
            t12085 = 5 * phi1
            tfunc[..., c] = (0.105e3 / 0.32768e5) * np.sqrt(0.715e3) * np.sqrt(0.2e1) * ((t12101 + t12102) * np.exp((-2*1j) * (t12085 - 3 * phi2)) + (-t12101 + t12102) * np.exp((-2*1j) * (t12085 + 3 * phi2)))

        if Bindx == 566:
            t12121 = np.cos(phi)
            t12120 = t12121 ** 2
            t12124 = t12120 ** 2
            t12123 = t12121 * t12120
            t12126 = t12123 ** 2
            t12128 = t12124 ** 2
            t12125 = t12121 * t12124
            t12130 = t12125 ** 2
            t12132 = t12126 ** 2
            t12127 = t12121 * t12126
            t12134 = t12127 ** 2
            t12136 = t12128 ** 2
            t12139 = 10261 * t12120 - 76815 * t12124 + 162305 * t12126 + 112255 * t12128 - 736593 * t12130 + 744523 * t12132 - 133765 * t12134 - 81840 * t12136 - 331
            t12138 = 2140 * t12123 - 110968 * t12125 + 485628 * t12127 + (-723580 * t12128 + 200980 * t12130 + 363240 * t12132 - 206956 * t12134 - 11594 * t12136 + 1110) * t12121
            t12122 = 5 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((-t12138 + t12139) * np.exp((-2*1j) * (t12122 - 6 * phi2)) + (t12138 + t12139) * np.exp((-2*1j) * (t12122 + 6 * phi2))) * np.sqrt(0.87e2)

        if Bindx == 567:
            t12157 = np.cos(phi)
            t12156 = t12157 ** 2
            t12160 = t12156 ** 2
            t12164 = t12160 ** 2
            t12173 = -137547 * t12164 ** 2 - 53
            t12159 = t12157 * t12156
            t12162 = t12159 ** 2
            t12163 = t12157 * t12162
            t12170 = t12163 ** 2
            t12168 = t12162 ** 2
            t12161 = t12157 * t12160
            t12166 = t12161 ** 2
            t12158 = 3 * phi1
            t12149 = t12157 * t12164
            t12147 = t12157 * t12166
            t12145 = t12157 * t12168
            t12143 = t12157 * t12170
            tfunc[..., c] = (0.35e2 / 0.16384e5*1j) * np.sqrt(0.2145e4) * ((1 + t12157) ** (0.3e1 / 0.2e1)) * ((-712008 * t12143 + 264306 * t12145 + 1775844 * t12147 - 2120778 * t12149 - 5140 * t12156 + 26 * t12157 + 7028 * t12159 + 71666 * t12160 - 146818 * t12161 - 286552 * t12162 + 891440 * t12163 + 114056 * t12164 + 1378188 * t12166 - 2490810 * t12168 + 1121952 * t12170 - t12173) * np.exp((-3*1j) * (t12158 - 2 * phi2)) + (-161820 * t12143 + 706614 * t12145 - 1250712 * t12147 + 1140066 * t12149 + 4612 * t12156 + 238 * t12157 - 12688 * t12159 - 59818 * t12160 + 135866 * t12161 + 296608 * t12162 - 557564 * t12163 - 791864 * t12164 + 1261044 * t12166 - 1198686 * t12168 + 625704 * t12170 + t12173) * np.exp((-3*1j) * (t12158 + 2 * phi2))) * ((1 - t12157) ** (-0.1e1 / 0.2e1))

        if Bindx == 568:
            t12193 = np.cos(phi)
            t12192 = t12193 ** 2
            t12195 = t12193 * t12192
            t12196 = t12192 ** 2
            t12197 = t12193 * t12196
            t12198 = t12195 ** 2
            t12199 = t12193 * t12198
            t12200 = t12196 ** 2
            t12201 = t12193 * t12200
            t12202 = t12197 ** 2
            t12204 = t12198 ** 2
            t12206 = t12199 ** 2
            t12208 = t12200 ** 2
            t12212 = 22484 * t12195 - 39868 * t12197 - 229372 * t12199 + 1003860 * t12201 + (-1448772 * t12202 + 771852 * t12204 + 32364 * t12206 - 110484 * t12208 - 2064) * t12193
            t12211 = -17391 * t12201 ** 2 - 6519 * t12192 + 83580 * t12196 - 389532 * t12198 + 745602 * t12200 - 395538 * t12202 - 524212 * t12204 + 725780 * t12206 - 221929 * t12208 + 159
            t12194 = 3 * phi1
            tfunc[..., c] = (0.105e3 / 0.32768e5*1j) * np.sqrt(0.29e2) * np.sqrt(0.2e1) * ((-t12211 + t12212) * np.exp((-3*1j) * (t12194 - 4 * phi2)) + (t12211 + t12212) * np.exp((-3*1j) * (t12194 + 4 * phi2))) * ((1 + t12193) ** (-0.1e1 / 0.2e1)) * ((1 - t12193) ** (-0.1e1 / 0.2e1))

        if Bindx == 569:
            t12231 = np.cos(phi)
            t12230 = t12231 ** 2
            t12234 = t12230 ** 2
            t12233 = t12231 * t12230
            t12236 = t12233 ** 2
            t12238 = t12234 ** 2
            t12235 = t12231 * t12234
            t12240 = t12235 ** 2
            t12242 = t12236 ** 2
            t12237 = t12231 * t12236
            t12244 = t12237 ** 2
            t12246 = t12238 ** 2
            t12249 = 3193 * t12230 - 68523 * t12234 + 632429 * t12236 - 2908589 * t12238 + 7098507 * t12240 - 9349977 * t12242 + 6275919 * t12244 - 1682928 * t12246 - 31
            t12248 = -63458 * t12233 + 609770 * t12235 - 2552442 * t12237 + (5322876 * t12238 - 5391750 * t12240 + 1757574 * t12242 + 911586 * t12244 - 596037 * t12246 + 1881) * t12231
            t12232 = 4 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.165e3) * ((-t12248 + t12249) * np.exp((-2*1j) * (t12232 - 3 * phi2)) + (t12248 + t12249) * np.exp((-2*1j) * (t12232 + 3 * phi2)))

        if Bindx == 570:
            t12268 = np.cos(phi)
            t12267 = t12268 ** 2
            t12270 = t12268 * t12267
            t12271 = t12267 ** 2
            t12272 = t12268 * t12271
            t12273 = t12270 ** 2
            t12274 = t12268 * t12273
            t12275 = t12271 ** 2
            t12277 = t12272 ** 2
            t12279 = t12273 ** 2
            t12281 = t12274 ** 2
            t12283 = t12275 ** 2
            t12286 = -8080 * t12270 + 40876 * t12272 - 70224 * t12274 + (-21010 * t12275 + 191248 * t12277 - 192180 * t12279 + 53072 * t12281 + 5797 * t12283 + 501) * t12268
            t12285 = -98 * t12267 - 7230 * t12271 + 66638 * t12273 - 208010 * t12275 + 275946 * t12277 - 124954 * t12279 - 35030 * t12281 + 32736 * t12283 + 2
            t12269 = 2 * phi1
            tfunc[..., c] = -(0.105e3 / 0.16384e5) * ((t12285 - t12286) * np.exp((-4*1j) * (t12269 - 3 * phi2)) + (t12285 + t12286) * np.exp((-4*1j) * (t12269 + 3 * phi2))) * np.sqrt(0.377e3)

        if Bindx == 571:
            t12305 = np.cos(phi)
            t12304 = t12305 ** 2
            t12308 = t12304 ** 2
            t12312 = t12308 ** 2
            t12320 = t12312 ** 2
            t12322 = -2980185 * t12305 * t12320 - 339
            t12307 = t12305 * t12304
            t12310 = t12307 ** 2
            t12311 = t12305 * t12310
            t12318 = t12311 ** 2
            t12316 = t12310 ** 2
            t12309 = t12305 * t12308
            t12314 = t12309 ** 2
            t12306 = 7 * phi1
            t12297 = t12305 * t12312
            t12295 = t12305 * t12314
            t12293 = t12305 * t12316
            t12291 = t12305 * t12318
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt((1 + t12305)) * np.sqrt(0.33e2) * ((1 - t12305) ** (-0.1e1 / 0.2e1)) * ((-2103660 * t12291 + 26917800 * t12293 - 44002140 * t12295 + 31903950 * t12297 + 33706 * t12304 + 3923 * t12305 - 171060 * t12307 - 496090 * t12308 + 2151184 * t12309 + 2248722 * t12310 - 11736196 * t12311 - 2012000 * t12312 - 10462530 * t12314 + 30163770 * t12316 - 29801850 * t12318 + 10342995 * t12320 + t12322) * np.exp((-1*1j) * (t12306 - 6 * phi2)) + (-12621960 * t12291 + 22167600 * t12293 - 21075600 * t12295 + 11947650 * t12297 - 40874 * t12304 + 3245 * t12305 - 96480 * t12307 + 763630 * t12308 + 891464 * t12309 - 5291370 * t12310 - 4196104 * t12311 + 17944300 * t12312 - 33389070 * t12314 + 34913970 * t12316 - 19283550 * t12318 + 4382625 * t12320 - t12322) * np.exp((-1*1j) * (t12306 + 6 * phi2)))

        if Bindx == 572:
            t12342 = np.cos(phi)
            t12341 = t12342 ** 2
            t12344 = t12342 * t12341
            t12345 = t12341 ** 2
            t12346 = t12342 * t12345
            t12347 = t12344 ** 2
            t12348 = t12342 * t12347
            t12349 = t12345 ** 2
            t12350 = t12342 * t12349
            t12351 = t12346 ** 2
            t12353 = t12347 ** 2
            t12355 = t12348 ** 2
            t12357 = t12349 ** 2
            t12361 = 4996 * t12344 - 39084 * t12346 + 137588 * t12348 - 233420 * t12350 + (166860 * t12351 + 11900 * t12353 - 77252 * t12355 + 28644 * t12357 - 232) * t12342
            t12360 = 5797 * t12350 ** 2 + 1197 * t12341 - 8260 * t12345 + 8932 * t12347 + 65274 * t12349 - 230890 * t12351 + 305260 * t12353 - 176460 * t12355 + 29171 * t12357 - 21
            t12343 = 7 * phi1
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.1885e4) * np.sqrt(0.2e1) * ((1 + t12342) ** (-0.1e1 / 0.2e1)) * ((1 - t12342) ** (-0.1e1 / 0.2e1)) * ((-t12360 + t12361) * np.exp((-1*1j) * (t12343 - 12 * phi2)) + (t12360 + t12361) * np.exp((-1*1j) * (t12343 + 12 * phi2)))

        if Bindx == 573:
            t12380 = np.cos(phi)
            t12379 = t12380 ** 2
            t12382 = t12379 ** 2
            t12381 = t12380 * t12379
            t12384 = t12381 ** 2
            t12386 = t12382 ** 2
            t12383 = t12380 * t12382
            t12388 = t12383 ** 2
            t12390 = t12384 ** 2
            t12385 = t12380 * t12384
            t12392 = t12385 ** 2
            t12394 = t12386 ** 2
            t12397 = -328653 * t12379 + 6428625 * t12382 - 49080269 * t12384 + 188346675 * t12386 - 399722895 * t12388 + 475772115 * t12390 - 297141975 * t12392 + 75731760 * t12394 + 2809
            t12396 = -1044860 * t12381 + 10525326 * t12383 - 42404472 * t12385 + (71364150 * t12386 - 19803420 * t12388 - 86691150 * t12390 + 103780560 * t12392 - 35762220 * t12394 + 27894) * t12380
            tfunc[..., c] = -(0.35e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t12396 + t12397) * np.exp((-6*1j) * (phi1 - phi2)) + (-t12396 + t12397) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 574:
            t12416 = np.cos(phi)
            t12415 = t12416 ** 2
            t12418 = t12415 ** 2
            t12417 = t12416 * t12415
            t12420 = t12417 ** 2
            t12422 = t12418 ** 2
            t12419 = t12416 * t12418
            t12424 = t12419 ** 2
            t12426 = t12420 ** 2
            t12421 = t12416 * t12420
            t12428 = t12421 ** 2
            t12430 = t12422 ** 2
            t12433 = -11 + 693 * t12415 - 7023 * t12418 + 27073 * t12420 - 43521 * t12422 + 14799 * t12424 + 37099 * t12426 - 42501 * t12428 + 13392 * t12430
            t12432 = -388 * t12417 + 7176 * t12419 - 39780 * t12421 + (97124 * t12422 - 115596 * t12424 + 62184 * t12426 - 7564 * t12428 - 3162 * t12430 + 6) * t12416
            tfunc[..., c] = -(0.35e2 / 0.16384e5) * ((t12432 + t12433) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (-t12432 + t12433) * np.exp((-6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.62205e5)

        if Bindx == 575:
            t12453 = np.cos(phi)
            t12452 = t12453 ** 2
            t12456 = t12452 ** 2
            t12455 = t12453 * t12452
            t12458 = t12455 ** 2
            t12460 = t12456 ** 2
            t12461 = t12453 * t12460
            t12457 = t12453 * t12456
            t12462 = t12457 ** 2
            t12464 = t12458 ** 2
            t12459 = t12453 * t12458
            t12466 = t12459 ** 2
            t12468 = t12460 ** 2
            t12472 = -2980185 * t12461 ** 2 + 4920 * t12452 - 84995 * t12456 + 428001 * t12458 - 229911 * t12460 - 4021875 * t12462 + 13206375 * t12464 - 18067725 * t12466 + 11745435 * t12468 - 40
            t12471 = -125409 * t12455 + 1528695 * t12457 - 8515085 * t12459 + 25587925 * t12461 + (-44288595 * t12462 + 44216445 * t12464 - 23666175 * t12466 + 5259150 * t12468 + 3049) * t12453
            t12454 = 5 * phi1
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.69e2) * ((1 + t12453) ** (-0.1e1 / 0.2e1)) * ((1 - t12453) ** (-0.1e1 / 0.2e1)) * ((t12471 + t12472) * np.exp((-1*1j) * (t12454 - 6 * phi2)) + (t12471 - t12472) * np.exp((-1*1j) * (t12454 + 6 * phi2)))

        if Bindx == 576:
            t12492 = np.cos(phi)
            t12491 = t12492 ** 2
            t12494 = t12492 * t12491
            t12495 = t12491 ** 2
            t12496 = t12492 * t12495
            t12497 = t12494 ** 2
            t12498 = t12492 * t12497
            t12499 = t12495 ** 2
            t12500 = t12492 * t12499
            t12501 = t12496 ** 2
            t12503 = t12497 ** 2
            t12505 = t12498 ** 2
            t12507 = t12499 ** 2
            t12511 = -210 * t12494 + 1062 * t12496 - 1418 * t12498 - 2958 * t12500 + (11562 * t12501 - 14558 * t12503 + 8370 * t12505 - 1860 * t12507 + 10) * t12492
            t12510 = -527 * t12500 ** 2 + 69 * t12491 - 896 * t12495 + 4944 * t12497 - 13866 * t12499 + 21058 * t12501 - 16872 * t12503 + 5688 * t12505 + 403 * t12507 - 1
            t12493 = 5 * phi1
            tfunc[..., c] = (0.105e3 / 0.16384e5*1j) * np.sqrt(0.476905e6) * ((-t12510 + t12511) * np.exp((-1*1j) * (t12493 - 12 * phi2)) + (t12510 + t12511) * np.exp((-1*1j) * (t12493 + 12 * phi2))) * ((1 + t12492) ** (-0.1e1 / 0.2e1)) * ((1 - t12492) ** (-0.1e1 / 0.2e1))

        if Bindx == 577:
            t12530 = np.cos(phi)
            t12529 = t12530 ** 2
            t12533 = t12529 ** 2
            t12532 = t12530 * t12529
            t12535 = t12532 ** 2
            t12537 = t12533 ** 2
            t12534 = t12530 * t12533
            t12539 = t12534 ** 2
            t12541 = t12535 ** 2
            t12536 = t12530 * t12535
            t12543 = t12536 ** 2
            t12545 = t12537 ** 2
            t12548 = 2921 * t12529 - 60235 * t12533 + 470757 * t12535 - 1804325 * t12537 + 3759915 * t12539 - 4351305 * t12541 + 2629575 * t12543 - 647280 * t12545 - 23
            t12547 = 2620 * t12532 - 38808 * t12534 + 275676 * t12536 + (-1059900 * t12537 + 2300340 * t12539 - 2801400 * t12541 + 1780020 * t12543 - 458490 * t12545 - 58) * t12530
            t12531 = 2 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((-t12547 + t12548) * np.exp((-2*1j) * (t12531 - 3 * phi2)) + (t12547 + t12548) * np.exp((-2*1j) * (t12531 + 3 * phi2))) * np.sqrt(0.9867e4)

        if Bindx == 578:
            t12567 = np.cos(phi)
            t12566 = t12567 ** 2
            t12568 = t12567 * t12566
            t12569 = t12566 ** 2
            t12570 = t12567 * t12569
            t12571 = t12568 ** 2
            t12572 = t12567 * t12571
            t12573 = t12569 ** 2
            t12575 = t12570 ** 2
            t12577 = t12571 ** 2
            t12579 = t12572 ** 2
            t12581 = t12573 ** 2
            t12584 = 3128 * t12568 - 21660 * t12570 + 67032 * t12572 + (-103706 * t12573 + 75560 * t12575 - 11884 * t12577 - 14136 * t12579 + 5797 * t12581 - 131) * t12567
            t12583 = 73 * t12566 - 1913 * t12569 + 18009 * t12571 - 70699 * t12573 + 138467 * t12575 - 144107 * t12577 + 76539 * t12579 - 16368 * t12581 - 1
            tfunc[..., c] = (0.105e3 / 0.16384e5) * np.sqrt(0.3335e4) * np.sqrt(0.2e1) * ((t12583 + t12584) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t12583 - t12584) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 579:
            t12604 = np.cos(phi)
            t12603 = t12604 ** 2
            t12605 = t12604 * t12603
            t12606 = t12603 ** 2
            t12607 = t12604 * t12606
            t12608 = t12605 ** 2
            t12609 = t12604 * t12608
            t12610 = t12606 ** 2
            t12611 = t12604 * t12610
            t12612 = t12607 ** 2
            t12614 = t12608 ** 2
            t12616 = t12609 ** 2
            t12618 = t12610 ** 2
            t12622 = -17339 * t12605 + 219541 * t12607 - 1249151 * t12609 + 3777975 * t12611 + (-6503745 * t12612 + 6401895 * t12614 - 3357765 * t12616 + 728190 * t12618 + 399) * t12604
            t12621 = -687735 * t12611 ** 2 - 1834 * t12603 + 40985 * t12606 - 364539 * t12608 + 1671249 * t12610 - 4402995 * t12612 + 6930795 * t12614 - 6435825 * t12616 + 3249885 * t12618 + 14
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt(0.3289e4) * np.sqrt(0.2e1) * ((1 + t12604) ** (-0.1e1 / 0.2e1)) * ((1 - t12604) ** (-0.1e1 / 0.2e1)) * ((t12621 + t12622) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (-t12621 + t12622) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 580:
            t12642 = np.cos(phi)
            t12641 = t12642 ** 2
            t12644 = t12641 ** 2
            t12643 = t12642 * t12641
            t12646 = t12643 ** 2
            t12648 = t12644 ** 2
            t12649 = t12642 * t12648
            t12645 = t12642 * t12644
            t12650 = t12645 ** 2
            t12652 = t12646 ** 2
            t12647 = t12642 * t12646
            t12654 = t12647 ** 2
            t12656 = t12648 ** 2
            t12660 = -17391 * t12649 ** 2 + 1309 * t12641 - 15320 * t12644 + 64008 * t12646 - 117474 * t12648 + 73962 * t12650 + 63056 * t12652 - 132640 * t12654 + 80507 * t12656 - 17
            t12659 = -6518 * t12643 + 54754 * t12645 - 221438 * t12647 + 496790 * t12649 + (-653506 * t12650 + 502838 * t12652 - 209994 * t12654 + 36828 * t12656 + 246) * t12642
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt(0.10005e5) * ((1 + t12642) ** (-0.1e1 / 0.2e1)) * ((1 - t12642) ** (-0.1e1 / 0.2e1)) * ((t12659 + t12660) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t12659 - t12660) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 581:
            t12679 = np.cos(phi)
            t12678 = t12679 ** 2
            t12681 = t12678 ** 2
            t12680 = t12679 * t12678
            t12683 = t12680 ** 2
            t12685 = t12681 ** 2
            t12682 = t12679 * t12681
            t12687 = t12682 ** 2
            t12689 = t12683 ** 2
            t12684 = t12679 * t12683
            t12691 = t12684 ** 2
            t12693 = t12685 ** 2
            t12696 = 2793 * t12678 - 59773 * t12681 + 479801 * t12683 - 1867975 * t12685 + 3910755 * t12687 - 4501815 * t12689 + 2683515 * t12691 - 647280 * t12693 - 21
            t12695 = 17948 * t12680 - 232078 * t12682 + 1353336 * t12684 + (-4207350 * t12685 + 7461180 * t12687 - 7575090 * t12689 + 4099440 * t12691 - 916980 * t12693 - 406) * t12679
            tfunc[..., c] = (0.35e2 / 0.32768e5) * np.sqrt(0.9867e4) * np.sqrt(0.2e1) * ((-t12695 + t12696) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t12695 + t12696) * np.exp((-2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 582:
            t12715 = np.cos(phi)
            t12714 = t12715 ** 2
            t12717 = t12714 ** 2
            t12716 = t12715 * t12714
            t12719 = t12716 ** 2
            t12721 = t12717 ** 2
            t12718 = t12715 * t12717
            t12723 = t12718 ** 2
            t12725 = t12719 ** 2
            t12720 = t12715 * t12719
            t12727 = t12720 ** 2
            t12729 = t12721 ** 2
            t12732 = 1185 * t12714 - 15155 * t12717 + 74893 * t12719 - 187565 * t12721 + 263795 * t12723 - 212065 * t12725 + 91295 * t12727 - 16368 * t12729 - 15
            t12731 = 380 * t12716 - 5656 * t12718 + 34524 * t12720 + (-100380 * t12721 + 156660 * t12723 - 135800 * t12725 + 61876 * t12727 - 11594 * t12729 - 10) * t12715
            tfunc[..., c] = (0.105e3 / 0.16384e5) * ((-t12731 + t12732) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (t12731 + t12732) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.3335e4)

        if Bindx == 583:
            t12752 = np.cos(phi)
            t12751 = t12752 ** 2
            t12753 = t12752 * t12751
            t12754 = t12751 ** 2
            t12755 = t12752 * t12754
            t12756 = t12753 ** 2
            t12757 = t12752 * t12756
            t12758 = t12754 ** 2
            t12759 = t12752 * t12758
            t12760 = t12755 ** 2
            t12762 = t12756 ** 2
            t12764 = t12757 ** 2
            t12766 = t12758 ** 2
            t12770 = -1876 * t12753 + 24276 * t12755 - 140292 * t12757 + 428200 * t12759 + (-739260 * t12760 + 725580 * t12762 - 377580 * t12764 + 80910 * t12766 + 42) * t12752
            t12769 = -229245 * t12759 ** 2 - 945 * t12751 + 21168 * t12754 - 183904 * t12756 + 805974 * t12758 - 1997610 * t12760 + 2927400 * t12762 - 2516040 * t12764 + 1173195 * t12766 + 7
            tfunc[..., c] = (-0.35e2 / 0.32768e5*1j) * np.sqrt(0.187473e6) * np.sqrt(0.2e1) * ((1 + t12752) ** (-0.1e1 / 0.2e1)) * ((1 - t12752) ** (-0.1e1 / 0.2e1)) * ((t12769 + t12770) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t12769 + t12770) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 584:
            t12790 = np.cos(phi)
            t12789 = t12790 ** 2
            t12791 = t12790 * t12789
            t12792 = t12789 ** 2
            t12793 = t12790 * t12792
            t12794 = t12791 ** 2
            t12795 = t12790 * t12794
            t12796 = t12792 ** 2
            t12797 = t12790 * t12796
            t12798 = t12793 ** 2
            t12800 = t12794 ** 2
            t12802 = t12795 ** 2
            t12804 = t12796 ** 2
            t12808 = -1600 * t12791 + 12432 * t12793 - 44352 * t12795 + 87080 * t12797 + (-100800 * t12798 + 68880 * t12800 - 25792 * t12802 + 4092 * t12804 + 60) * t12790
            t12807 = -5797 * t12797 ** 2 - 405 * t12789 + 5580 * t12792 - 31052 * t12794 + 91182 * t12796 - 157710 * t12798 + 167020 * t12800 - 106860 * t12802 + 38037 * t12804 + 5
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.63365e5) * ((1 + t12790) ** (-0.1e1 / 0.2e1)) * ((1 - t12790) ** (-0.1e1 / 0.2e1)) * ((t12807 + t12808) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (-t12807 + t12808) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 585:
            t12818 = np.sin(phi)
            t12815 = t12818 ** 2
            t12816 = t12818 * t12815
            t12809 = np.cos(phi)
            t12810 = t12809 ** 2
            t12811 = t12810 ** 2
            t12813 = t12811 ** 2
            tfunc[..., c] = (-0.35e2 / 0.8192e4*1j) * t12809 * t12816 ** 2 * (-9450 * t12811 - 67425 * t12813 - 21 + (39150 * t12811 + 40455 * t12813 + 875) * t12810) * np.sin((6 * phi2)) * np.sqrt(0.3187041e7)

        if Bindx == 586:
            t12826 = np.sin(phi)
            t12822 = t12826 ** 2
            t12823 = t12826 * t12822
            t12824 = t12823 ** 2
            t12819 = np.cos(phi)
            t12820 = t12819 ** 2
            tfunc[..., c] = (0.105e3 / 0.16384e5*1j) * t12819 * t12824 ** 2 * (15 + (-310 + 1023 * t12820) * t12820) * np.sin((12 * phi2)) * np.sqrt(0.1077205e7) * np.sqrt(0.2e1)

        if Bindx == 587:
            t12846 = np.cos(phi)
            t12845 = t12846 ** 2
            t12847 = t12846 * t12845
            t12848 = t12845 ** 2
            t12849 = t12846 * t12848
            t12850 = t12847 ** 2
            t12851 = t12846 * t12850
            t12852 = t12848 ** 2
            t12853 = t12846 * t12852
            t12854 = t12849 ** 2
            t12856 = t12850 ** 2
            t12858 = t12851 ** 2
            t12860 = t12852 ** 2
            t12864 = 1876 * t12847 - 24276 * t12849 + 140292 * t12851 - 428200 * t12853 + (739260 * t12854 - 725580 * t12856 + 377580 * t12858 - 80910 * t12860 - 42) * t12846
            t12863 = -229245 * t12853 ** 2 - 945 * t12845 + 21168 * t12848 - 183904 * t12850 + 805974 * t12852 - 1997610 * t12854 + 2927400 * t12856 - 2516040 * t12858 + 1173195 * t12860 + 7
            tfunc[..., c] = (-0.35e2 / 0.32768e5*1j) * np.sqrt(0.187473e6) * np.sqrt(0.2e1) * ((1 + t12846) ** (-0.1e1 / 0.2e1)) * ((1 - t12846) ** (-0.1e1 / 0.2e1)) * ((-t12863 + t12864) * np.exp((1j) * (phi1 - 6 * phi2)) + (t12863 + t12864) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 588:
            t12884 = np.cos(phi)
            t12883 = t12884 ** 2
            t12885 = t12884 * t12883
            t12886 = t12883 ** 2
            t12887 = t12884 * t12886
            t12888 = t12885 ** 2
            t12889 = t12884 * t12888
            t12890 = t12886 ** 2
            t12891 = t12884 * t12890
            t12892 = t12887 ** 2
            t12894 = t12888 ** 2
            t12896 = t12889 ** 2
            t12898 = t12890 ** 2
            t12902 = 1600 * t12885 - 12432 * t12887 + 44352 * t12889 - 87080 * t12891 + (100800 * t12892 - 68880 * t12894 + 25792 * t12896 - 4092 * t12898 - 60) * t12884
            t12901 = -5797 * t12891 ** 2 - 405 * t12883 + 5580 * t12886 - 31052 * t12888 + 91182 * t12890 - 157710 * t12892 + 167020 * t12894 - 106860 * t12896 + 38037 * t12898 + 5
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.63365e5) * ((-t12901 + t12902) * np.exp((1j) * (phi1 - 12 * phi2)) + (t12901 + t12902) * np.exp((1j) * (phi1 + 12 * phi2))) * ((1 + t12884) ** (-0.1e1 / 0.2e1)) * ((1 - t12884) ** (-0.1e1 / 0.2e1))

        if Bindx == 589:
            t12921 = np.cos(phi)
            t12920 = t12921 ** 2
            t12923 = t12920 ** 2
            t12922 = t12921 * t12920
            t12925 = t12922 ** 2
            t12927 = t12923 ** 2
            t12924 = t12921 * t12923
            t12929 = t12924 ** 2
            t12931 = t12925 ** 2
            t12926 = t12921 * t12925
            t12933 = t12926 ** 2
            t12935 = t12927 ** 2
            t12938 = -2793 * t12920 + 59773 * t12923 - 479801 * t12925 + 1867975 * t12927 - 3910755 * t12929 + 4501815 * t12931 - 2683515 * t12933 + 647280 * t12935 + 21
            t12937 = 17948 * t12922 - 232078 * t12924 + 1353336 * t12926 + (-4207350 * t12927 + 7461180 * t12929 - 7575090 * t12931 + 4099440 * t12933 - 916980 * t12935 - 406) * t12921
            tfunc[..., c] = (0.35e2 / 0.32768e5) * np.sqrt(0.9867e4) * np.sqrt(0.2e1) * ((t12937 + t12938) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (-t12937 + t12938) * np.exp((2*1j) * (phi1 + 3 * phi2)))

        if Bindx == 590:
            t12957 = np.cos(phi)
            t12956 = t12957 ** 2
            t12959 = t12956 ** 2
            t12958 = t12957 * t12956
            t12961 = t12958 ** 2
            t12963 = t12959 ** 2
            t12960 = t12957 * t12959
            t12965 = t12960 ** 2
            t12967 = t12961 ** 2
            t12962 = t12957 * t12961
            t12969 = t12962 ** 2
            t12971 = t12963 ** 2
            t12974 = 1185 * t12956 - 15155 * t12959 + 74893 * t12961 - 187565 * t12963 + 263795 * t12965 - 212065 * t12967 + 91295 * t12969 - 16368 * t12971 - 15
            t12973 = 380 * t12958 - 5656 * t12960 + 34524 * t12962 + (-100380 * t12963 + 156660 * t12965 - 135800 * t12967 + 61876 * t12969 - 11594 * t12971 - 10) * t12957
            tfunc[..., c] = -(0.105e3 / 0.16384e5) * ((-t12973 + t12974) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (t12973 + t12974) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.3335e4)

        if Bindx == 591:
            t12994 = np.cos(phi)
            t12993 = t12994 ** 2
            t12995 = t12994 * t12993
            t12996 = t12993 ** 2
            t12997 = t12994 * t12996
            t12998 = t12995 ** 2
            t12999 = t12994 * t12998
            t13000 = t12996 ** 2
            t13001 = t12994 * t13000
            t13002 = t12997 ** 2
            t13004 = t12998 ** 2
            t13006 = t12999 ** 2
            t13008 = t13000 ** 2
            t13012 = 17339 * t12995 - 219541 * t12997 + 1249151 * t12999 - 3777975 * t13001 + (6503745 * t13002 - 6401895 * t13004 + 3357765 * t13006 - 728190 * t13008 - 399) * t12994
            t13011 = 687735 * t13001 ** 2 + 1834 * t12993 - 40985 * t12996 + 364539 * t12998 - 1671249 * t13000 + 4402995 * t13002 - 6930795 * t13004 + 6435825 * t13006 - 3249885 * t13008 - 14
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt(0.3289e4) * np.sqrt(0.2e1) * ((1 + t12994) ** (-0.1e1 / 0.2e1)) * ((1 - t12994) ** (-0.1e1 / 0.2e1)) * ((t13011 + t13012) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (-t13011 + t13012) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 592:
            t13032 = np.cos(phi)
            t13031 = t13032 ** 2
            t13034 = t13031 ** 2
            t13033 = t13032 * t13031
            t13036 = t13033 ** 2
            t13038 = t13034 ** 2
            t13039 = t13032 * t13038
            t13035 = t13032 * t13034
            t13040 = t13035 ** 2
            t13042 = t13036 ** 2
            t13037 = t13032 * t13036
            t13044 = t13037 ** 2
            t13046 = t13038 ** 2
            t13050 = -17391 * t13039 ** 2 + 1309 * t13031 - 15320 * t13034 + 64008 * t13036 - 117474 * t13038 + 73962 * t13040 + 63056 * t13042 - 132640 * t13044 + 80507 * t13046 - 17
            t13049 = -6518 * t13033 + 54754 * t13035 - 221438 * t13037 + 496790 * t13039 + (-653506 * t13040 + 502838 * t13042 - 209994 * t13044 + 36828 * t13046 + 246) * t13032
            tfunc[..., c] = (0.35e2 / 0.16384e5*1j) * np.sqrt(0.10005e5) * ((t13049 + t13050) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t13049 - t13050) * np.exp((3*1j) * (phi1 + 4 * phi2))) * ((1 + t13032) ** (-0.1e1 / 0.2e1)) * ((1 - t13032) ** (-0.1e1 / 0.2e1))

        if Bindx == 593:
            t13069 = np.cos(phi)
            t13068 = t13069 ** 2
            t13072 = t13068 ** 2
            t13071 = t13069 * t13068
            t13074 = t13071 ** 2
            t13076 = t13072 ** 2
            t13073 = t13069 * t13072
            t13078 = t13073 ** 2
            t13080 = t13074 ** 2
            t13075 = t13069 * t13074
            t13082 = t13075 ** 2
            t13084 = t13076 ** 2
            t13087 = -2921 * t13068 + 60235 * t13072 - 470757 * t13074 + 1804325 * t13076 - 3759915 * t13078 + 4351305 * t13080 - 2629575 * t13082 + 647280 * t13084 + 23
            t13086 = 2620 * t13071 - 38808 * t13073 + 275676 * t13075 + (-1059900 * t13076 + 2300340 * t13078 - 2801400 * t13080 + 1780020 * t13082 - 458490 * t13084 - 58) * t13069
            t13070 = 2 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((t13086 + t13087) * np.exp((2*1j) * (t13070 - 3 * phi2)) + (-t13086 + t13087) * np.exp((2*1j) * (t13070 + 3 * phi2))) * np.sqrt(0.9867e4)

        if Bindx == 594:
            t13106 = np.cos(phi)
            t13105 = t13106 ** 2
            t13107 = t13106 * t13105
            t13108 = t13105 ** 2
            t13109 = t13106 * t13108
            t13110 = t13107 ** 2
            t13111 = t13106 * t13110
            t13112 = t13108 ** 2
            t13114 = t13109 ** 2
            t13116 = t13110 ** 2
            t13118 = t13111 ** 2
            t13120 = t13112 ** 2
            t13123 = 3128 * t13107 - 21660 * t13109 + 67032 * t13111 + (-103706 * t13112 + 75560 * t13114 - 11884 * t13116 - 14136 * t13118 + 5797 * t13120 - 131) * t13106
            t13122 = 73 * t13105 - 1913 * t13108 + 18009 * t13110 - 70699 * t13112 + 138467 * t13114 - 144107 * t13116 + 76539 * t13118 - 16368 * t13120 - 1
            tfunc[..., c] = -(0.105e3 / 0.16384e5) * np.sqrt(0.3335e4) * np.sqrt(0.2e1) * ((t13122 + t13123) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t13122 - t13123) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 595:
            t13143 = np.cos(phi)
            t13142 = t13143 ** 2
            t13146 = t13142 ** 2
            t13145 = t13143 * t13142
            t13148 = t13145 ** 2
            t13150 = t13146 ** 2
            t13151 = t13143 * t13150
            t13147 = t13143 * t13146
            t13152 = t13147 ** 2
            t13154 = t13148 ** 2
            t13149 = t13143 * t13148
            t13156 = t13149 ** 2
            t13158 = t13150 ** 2
            t13162 = -2980185 * t13151 ** 2 + 4920 * t13142 - 84995 * t13146 + 428001 * t13148 - 229911 * t13150 - 4021875 * t13152 + 13206375 * t13154 - 18067725 * t13156 + 11745435 * t13158 - 40
            t13161 = -125409 * t13145 + 1528695 * t13147 - 8515085 * t13149 + 25587925 * t13151 + (-44288595 * t13152 + 44216445 * t13154 - 23666175 * t13156 + 5259150 * t13158 + 3049) * t13143
            t13144 = 5 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.69e2) * ((t13161 + t13162) * np.exp((1j) * (t13144 - 6 * phi2)) + (t13161 - t13162) * np.exp((1j) * (t13144 + 6 * phi2))) * ((1 + t13143) ** (-0.1e1 / 0.2e1)) * ((1 - t13143) ** (-0.1e1 / 0.2e1))

        if Bindx == 596:
            t13182 = np.cos(phi)
            t13181 = t13182 ** 2
            t13184 = t13182 * t13181
            t13185 = t13181 ** 2
            t13186 = t13182 * t13185
            t13187 = t13184 ** 2
            t13188 = t13182 * t13187
            t13189 = t13185 ** 2
            t13190 = t13182 * t13189
            t13191 = t13186 ** 2
            t13193 = t13187 ** 2
            t13195 = t13188 ** 2
            t13197 = t13189 ** 2
            t13201 = -210 * t13184 + 1062 * t13186 - 1418 * t13188 - 2958 * t13190 + (11562 * t13191 - 14558 * t13193 + 8370 * t13195 - 1860 * t13197 + 10) * t13182
            t13200 = -527 * t13190 ** 2 + 69 * t13181 - 896 * t13185 + 4944 * t13187 - 13866 * t13189 + 21058 * t13191 - 16872 * t13193 + 5688 * t13195 + 403 * t13197 - 1
            t13183 = 5 * phi1
            tfunc[..., c] = (-0.105e3 / 0.16384e5*1j) * np.sqrt(0.476905e6) * ((1 + t13182) ** (-0.1e1 / 0.2e1)) * ((1 - t13182) ** (-0.1e1 / 0.2e1)) * ((-t13200 + t13201) * np.exp((1j) * (t13183 - 12 * phi2)) + (t13200 + t13201) * np.exp((1j) * (t13183 + 12 * phi2)))

        if Bindx == 597:
            t13220 = np.cos(phi)
            t13219 = t13220 ** 2
            t13222 = t13219 ** 2
            t13221 = t13220 * t13219
            t13224 = t13221 ** 2
            t13226 = t13222 ** 2
            t13223 = t13220 * t13222
            t13228 = t13223 ** 2
            t13230 = t13224 ** 2
            t13225 = t13220 * t13224
            t13232 = t13225 ** 2
            t13234 = t13226 ** 2
            t13237 = 328653 * t13219 - 6428625 * t13222 + 49080269 * t13224 - 188346675 * t13226 + 399722895 * t13228 - 475772115 * t13230 + 297141975 * t13232 - 75731760 * t13234 - 2809
            t13236 = 1044860 * t13221 - 10525326 * t13223 + 42404472 * t13225 + (-71364150 * t13226 + 19803420 * t13228 + 86691150 * t13230 - 103780560 * t13232 + 35762220 * t13234 - 27894) * t13220
            tfunc[..., c] = -(0.35e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t13236 + t13237) * np.exp((6*1j) * (phi1 - phi2)) + (-t13236 + t13237) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 598:
            t13256 = np.cos(phi)
            t13255 = t13256 ** 2
            t13258 = t13255 ** 2
            t13257 = t13256 * t13255
            t13260 = t13257 ** 2
            t13262 = t13258 ** 2
            t13259 = t13256 * t13258
            t13264 = t13259 ** 2
            t13266 = t13260 ** 2
            t13261 = t13256 * t13260
            t13268 = t13261 ** 2
            t13270 = t13262 ** 2
            t13273 = 11 - 693 * t13255 + 7023 * t13258 - 27073 * t13260 + 43521 * t13262 - 14799 * t13264 - 37099 * t13266 + 42501 * t13268 - 13392 * t13270
            t13272 = -388 * t13257 + 7176 * t13259 - 39780 * t13261 + (97124 * t13262 - 115596 * t13264 + 62184 * t13266 - 7564 * t13268 - 3162 * t13270 + 6) * t13256
            tfunc[..., c] = -(0.35e2 / 0.16384e5) * ((-t13272 + t13273) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (t13272 + t13273) * np.exp((6*1j) * (phi1 + 2 * phi2))) * np.sqrt(0.62205e5)

        if Bindx == 599:
            t13292 = np.cos(phi)
            t13291 = t13292 ** 2
            t13295 = t13291 ** 2
            t13299 = t13295 ** 2
            t13307 = t13299 ** 2
            t13309 = -2980185 * t13292 * t13307 + 339
            t13294 = t13292 * t13291
            t13297 = t13294 ** 2
            t13298 = t13292 * t13297
            t13305 = t13298 ** 2
            t13303 = t13297 ** 2
            t13296 = t13292 * t13295
            t13301 = t13296 ** 2
            t13293 = 7 * phi1
            t13284 = t13292 * t13299
            t13282 = t13292 * t13301
            t13280 = t13292 * t13303
            t13278 = t13292 * t13305
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt((1 - t13292)) * np.sqrt(0.33e2) * ((12621960 * t13278 - 22167600 * t13280 + 21075600 * t13282 - 11947650 * t13284 - 40874 * t13291 - 3245 * t13292 + 96480 * t13294 + 763630 * t13295 - 891464 * t13296 - 5291370 * t13297 + 4196104 * t13298 + 17944300 * t13299 - 33389070 * t13301 + 34913970 * t13303 - 19283550 * t13305 + 4382625 * t13307 + t13309) * np.exp((1j) * (t13293 - 6 * phi2)) + (2103660 * t13278 - 26917800 * t13280 + 44002140 * t13282 - 31903950 * t13284 + 33706 * t13291 - 3923 * t13292 + 171060 * t13294 - 496090 * t13295 - 2151184 * t13296 + 2248722 * t13297 + 11736196 * t13298 - 2012000 * t13299 - 10462530 * t13301 + 30163770 * t13303 - 29801850 * t13305 + 10342995 * t13307 - t13309) * np.exp((1j) * (t13293 + 6 * phi2))) * ((1 + t13292) ** (-0.1e1 / 0.2e1))

        if Bindx == 600:
            t13329 = np.cos(phi)
            t13328 = t13329 ** 2
            t13331 = t13329 * t13328
            t13332 = t13328 ** 2
            t13333 = t13329 * t13332
            t13334 = t13331 ** 2
            t13335 = t13329 * t13334
            t13336 = t13332 ** 2
            t13337 = t13329 * t13336
            t13338 = t13333 ** 2
            t13340 = t13334 ** 2
            t13342 = t13335 ** 2
            t13344 = t13336 ** 2
            t13348 = -4996 * t13331 + 39084 * t13333 - 137588 * t13335 + 233420 * t13337 + (-166860 * t13338 - 11900 * t13340 + 77252 * t13342 - 28644 * t13344 + 232) * t13329
            t13347 = 5797 * t13337 ** 2 + 1197 * t13328 - 8260 * t13332 + 8932 * t13334 + 65274 * t13336 - 230890 * t13338 + 305260 * t13340 - 176460 * t13342 + 29171 * t13344 - 21
            t13330 = 7 * phi1
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.1885e4) * np.sqrt(0.2e1) * ((1 + t13329) ** (-0.1e1 / 0.2e1)) * ((1 - t13329) ** (-0.1e1 / 0.2e1)) * ((t13347 + t13348) * np.exp((1j) * (t13330 - 12 * phi2)) + (-t13347 + t13348) * np.exp((1j) * (t13330 + 12 * phi2)))

        if Bindx == 601:
            t13367 = np.cos(phi)
            t13366 = t13367 ** 2
            t13370 = t13366 ** 2
            t13369 = t13367 * t13366
            t13372 = t13369 ** 2
            t13374 = t13370 ** 2
            t13371 = t13367 * t13370
            t13376 = t13371 ** 2
            t13378 = t13372 ** 2
            t13373 = t13367 * t13372
            t13380 = t13373 ** 2
            t13382 = t13374 ** 2
            t13385 = 3193 * t13366 - 68523 * t13370 + 632429 * t13372 - 2908589 * t13374 + 7098507 * t13376 - 9349977 * t13378 + 6275919 * t13380 - 1682928 * t13382 - 31
            t13384 = -63458 * t13369 + 609770 * t13371 - 2552442 * t13373 + (5322876 * t13374 - 5391750 * t13376 + 1757574 * t13378 + 911586 * t13380 - 596037 * t13382 + 1881) * t13367
            t13368 = 4 * phi1
            tfunc[..., c] = -(0.35e2 / 0.16384e5) * np.sqrt(0.2e1) * np.sqrt(0.165e3) * ((-t13384 + t13385) * np.exp((2*1j) * (t13368 - 3 * phi2)) + (t13384 + t13385) * np.exp((2*1j) * (t13368 + 3 * phi2)))

        if Bindx == 602:
            t13404 = np.cos(phi)
            t13403 = t13404 ** 2
            t13406 = t13404 * t13403
            t13407 = t13403 ** 2
            t13408 = t13404 * t13407
            t13409 = t13406 ** 2
            t13410 = t13404 * t13409
            t13411 = t13407 ** 2
            t13413 = t13408 ** 2
            t13415 = t13409 ** 2
            t13417 = t13410 ** 2
            t13419 = t13411 ** 2
            t13422 = -8080 * t13406 + 40876 * t13408 - 70224 * t13410 + (-21010 * t13411 + 191248 * t13413 - 192180 * t13415 + 53072 * t13417 + 5797 * t13419 + 501) * t13404
            t13421 = -98 * t13403 - 7230 * t13407 + 66638 * t13409 - 208010 * t13411 + 275946 * t13413 - 124954 * t13415 - 35030 * t13417 + 32736 * t13419 + 2
            t13405 = 2 * phi1
            tfunc[..., c] = (0.105e3 / 0.16384e5) * ((t13421 - t13422) * np.exp((4*1j) * (t13405 - 3 * phi2)) + (t13421 + t13422) * np.exp((4*1j) * (t13405 + 3 * phi2))) * np.sqrt(0.377e3)

        if Bindx == 603:
            t13440 = np.cos(phi)
            t13439 = t13440 ** 2
            t13443 = t13439 ** 2
            t13447 = t13443 ** 2
            t13456 = -137547 * t13447 ** 2 - 53
            t13442 = t13440 * t13439
            t13445 = t13442 ** 2
            t13446 = t13440 * t13445
            t13453 = t13446 ** 2
            t13451 = t13445 ** 2
            t13444 = t13440 * t13443
            t13449 = t13444 ** 2
            t13441 = 3 * phi1
            t13432 = t13440 * t13447
            t13430 = t13440 * t13449
            t13428 = t13440 * t13451
            t13426 = t13440 * t13453
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * ((1 - t13440) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2145e4) * ((1 + t13440) ** (-0.1e1 / 0.2e1)) * ((-161820 * t13426 + 706614 * t13428 - 1250712 * t13430 + 1140066 * t13432 - 4612 * t13439 + 238 * t13440 - 12688 * t13442 + 59818 * t13443 + 135866 * t13444 - 296608 * t13445 - 557564 * t13446 + 791864 * t13447 - 1261044 * t13449 + 1198686 * t13451 - 625704 * t13453 - t13456) * np.exp((3*1j) * (t13441 - 2 * phi2)) + (-712008 * t13426 + 264306 * t13428 + 1775844 * t13430 - 2120778 * t13432 + 5140 * t13439 + 26 * t13440 + 7028 * t13442 - 71666 * t13443 - 146818 * t13444 + 286552 * t13445 + 891440 * t13446 - 114056 * t13447 - 1378188 * t13449 + 2490810 * t13451 - 1121952 * t13453 + t13456) * np.exp((3*1j) * (t13441 + 2 * phi2)))

        if Bindx == 604:
            t13476 = np.cos(phi)
            t13475 = t13476 ** 2
            t13478 = t13476 * t13475
            t13479 = t13475 ** 2
            t13480 = t13476 * t13479
            t13481 = t13478 ** 2
            t13482 = t13476 * t13481
            t13483 = t13479 ** 2
            t13484 = t13476 * t13483
            t13485 = t13480 ** 2
            t13487 = t13481 ** 2
            t13489 = t13482 ** 2
            t13491 = t13483 ** 2
            t13495 = 22484 * t13478 - 39868 * t13480 - 229372 * t13482 + 1003860 * t13484 + (-1448772 * t13485 + 771852 * t13487 + 32364 * t13489 - 110484 * t13491 - 2064) * t13476
            t13494 = -17391 * t13484 ** 2 - 6519 * t13475 + 83580 * t13479 - 389532 * t13481 + 745602 * t13483 - 395538 * t13485 - 524212 * t13487 + 725780 * t13489 - 221929 * t13491 + 159
            t13477 = 3 * phi1
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.29e2) * np.sqrt(0.2e1) * ((1 + t13476) ** (-0.1e1 / 0.2e1)) * ((1 - t13476) ** (-0.1e1 / 0.2e1)) * ((-t13494 + t13495) * np.exp((3*1j) * (t13477 - 4 * phi2)) + (t13494 + t13495) * np.exp((3*1j) * (t13477 + 4 * phi2)))

        if Bindx == 605:
            t13514 = np.cos(phi)
            t13513 = t13514 ** 2
            t13517 = t13513 ** 2
            t13516 = t13514 * t13513
            t13519 = t13516 ** 2
            t13521 = t13517 ** 2
            t13518 = t13514 * t13517
            t13523 = t13518 ** 2
            t13525 = t13519 ** 2
            t13520 = t13514 * t13519
            t13527 = t13520 ** 2
            t13529 = t13521 ** 2
            t13532 = 2125 * t13513 - 24465 * t13517 + 77357 * t13519 + 12589 * t13521 - 489009 * t13523 + 956333 * t13525 - 750665 * t13527 + 215760 * t13529 - 25
            t13531 = 14108 * t13516 - 127358 * t13518 + 532536 * t13520 + (-1149670 * t13521 + 1280188 * t13523 - 624834 * t13525 + 14384 * t13527 + 61132 * t13529 - 486) * t13514
            t13515 = 5 * phi1
            tfunc[..., c] = (0.105e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.715e3) * ((-t13531 + t13532) * np.exp((2*1j) * (t13515 - 3 * phi2)) + (t13531 + t13532) * np.exp((2*1j) * (t13515 + 3 * phi2)))

        if Bindx == 606:
            t13551 = np.cos(phi)
            t13550 = t13551 ** 2
            t13554 = t13550 ** 2
            t13553 = t13551 * t13550
            t13556 = t13553 ** 2
            t13558 = t13554 ** 2
            t13555 = t13551 * t13554
            t13560 = t13555 ** 2
            t13562 = t13556 ** 2
            t13557 = t13551 * t13556
            t13564 = t13557 ** 2
            t13566 = t13558 ** 2
            t13569 = -10261 * t13550 + 76815 * t13554 - 162305 * t13556 - 112255 * t13558 + 736593 * t13560 - 744523 * t13562 + 133765 * t13564 + 81840 * t13566 + 331
            t13568 = 2140 * t13553 - 110968 * t13555 + 485628 * t13557 + (-723580 * t13558 + 200980 * t13560 + 363240 * t13562 - 206956 * t13564 - 11594 * t13566 + 1110) * t13551
            t13552 = 5 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((t13568 + t13569) * np.exp((2*1j) * (t13552 - 6 * phi2)) + (-t13568 + t13569) * np.exp((2*1j) * (t13552 + 6 * phi2))) * np.sqrt(0.87e2)

        if Bindx == 607:
            t13586 = np.cos(phi)
            t13585 = t13586 ** 2
            t13588 = t13586 * t13585
            t13591 = t13588 ** 2
            t13592 = t13586 * t13591
            t13599 = t13592 ** 2
            t13601 = -15283 * t13586 * t13599 + 12
            t13597 = t13591 ** 2
            t13589 = t13585 ** 2
            t13590 = t13586 * t13589
            t13595 = t13590 ** 2
            t13593 = t13589 ** 2
            t13587 = 11 * phi1
            t13578 = t13586 * t13593
            t13576 = t13586 * t13595
            t13574 = t13586 * t13597
            tfunc[..., c] = (-0.105e3 / 0.16384e5*1j) * np.sqrt(0.2e1) * ((1 - t13586) ** (0.5e1 / 0.2e1)) * np.sqrt(0.715e3) * ((13485 * t13599 + 74617 * t13574 - 59334 * t13597 - 152859 * t13576 + 103791 * t13595 + 169865 * t13578 - 90168 * t13593 - 109649 * t13592 + 38811 * t13591 + 40035 * t13590 - 6510 * t13589 - 7009 * t13588 - 87 * t13585 + 283 * t13586 + t13601) * np.exp((1j) * (t13587 - 6 * phi2)) + (105183 * t13599 + 281387 * t13574 + 316448 * t13597 - 25143 * t13576 - 433637 * t13595 - 368283 * t13578 + 35388 * t13593 + 210717 * t13592 + 85093 * t13591 - 26307 * t13590 - 24016 * t13589 - 1849 * t13588 + 1569 * t13585 + 211 * t13586 - t13601) * np.exp((1j) * (t13587 + 6 * phi2))) * ((1 + t13586) ** (-0.1e1 / 0.2e1))

        if Bindx == 608:
            t13621 = np.cos(phi)
            t13620 = t13621 ** 2
            t13624 = t13620 ** 2
            t13623 = t13621 * t13620
            t13626 = t13623 ** 2
            t13628 = t13624 ** 2
            t13629 = t13621 * t13628
            t13625 = t13621 * t13624
            t13630 = t13625 ** 2
            t13632 = t13626 ** 2
            t13627 = t13621 * t13626
            t13634 = t13627 ** 2
            t13636 = t13628 ** 2
            t13640 = 5797 * t13629 ** 2 - 7623 * t13620 + 27280 * t13624 + 64064 * t13626 - 457314 * t13628 + 737594 * t13630 - 315224 * t13632 - 184920 * t13634 + 129983 * t13636 + 363
            t13639 = -17918 * t13623 + 131754 * t13625 - 305734 * t13627 + 110110 * t13629 + (465894 * t13630 - 551474 * t13632 + 122078 * t13634 + 45012 * t13636 + 278) * t13621
            t13622 = 11 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5*1j) * np.sqrt(0.87e2) * ((t13639 - t13640) * np.exp((1j) * (t13622 - 12 * phi2)) + (t13639 + t13640) * np.exp((1j) * (t13622 + 12 * phi2))) * ((1 + t13621) ** (-0.1e1 / 0.2e1)) * ((1 - t13621) ** (-0.1e1 / 0.2e1))

        if Bindx == 609:
            t13659 = np.cos(phi)
            t13658 = t13659 ** 2
            t13662 = t13658 ** 2
            t13661 = t13659 * t13658
            t13664 = t13661 ** 2
            t13666 = t13662 ** 2
            t13663 = t13659 * t13662
            t13668 = t13663 ** 2
            t13670 = t13664 ** 2
            t13665 = t13659 * t13664
            t13672 = t13665 ** 2
            t13674 = t13666 ** 2
            t13677 = -11 + 693 * t13658 - 7023 * t13662 + 27073 * t13664 - 43521 * t13666 + 14799 * t13668 + 37099 * t13670 - 42501 * t13672 + 13392 * t13674
            t13676 = -388 * t13661 + 7176 * t13663 - 39780 * t13665 + (97124 * t13666 - 115596 * t13668 + 62184 * t13670 - 7564 * t13672 - 3162 * t13674 + 6) * t13659
            t13660 = 2 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((t13676 + t13677) * np.exp((6*1j) * (t13660 - phi2)) + (-t13676 + t13677) * np.exp((6*1j) * (t13660 + phi2))) * np.sqrt(0.62205e5)

        if Bindx == 610:
            t13696 = np.cos(phi)
            t13695 = t13696 ** 2
            t13697 = t13696 * t13695
            t13698 = t13695 ** 2
            t13699 = t13696 * t13698
            t13700 = t13697 ** 2
            t13701 = t13696 * t13700
            t13702 = t13698 ** 2
            t13704 = t13699 ** 2
            t13706 = t13700 ** 2
            t13708 = t13701 ** 2
            t13710 = t13702 ** 2
            t13713 = -116840 * t13697 + 372372 * t13699 + 175032 * t13701 + (-1937650 * t13702 + 2011464 * t13704 - 2940 * t13706 - 495256 * t13708 - 17391 * t13710 + 7113) * t13696
            t13712 = -18351 * t13695 - 103425 * t13698 + 889889 * t13700 - 1585155 * t13702 + 112827 * t13704 + 1573117 * t13706 - 727725 * t13708 - 147312 * t13710 + 2039
            tfunc[..., c] = -(0.35e2 / 0.16384e5) * np.sqrt(0.2e1) * ((t13712 - t13713) * np.exp((12*1j) * (phi1 - phi2)) + (t13712 + t13713) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 611:
            t13729 = np.cos(phi)
            t13728 = t13729 ** 2
            t13731 = t13729 * t13728
            t13734 = t13731 ** 2
            t13735 = t13729 * t13734
            t13743 = -527 * t13735 ** 2 + 2
            t13740 = t13734 ** 2
            t13732 = t13728 ** 2
            t13733 = t13729 * t13732
            t13738 = t13733 ** 2
            t13736 = t13732 ** 2
            t13730 = 13 * phi1
            t13721 = t13729 * t13736
            t13719 = t13729 * t13738
            t13717 = t13729 * t13740
            tfunc[..., c] = (-0.105e3 / 0.16384e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.20735e5) * ((1 - t13729) ** (0.7e1 / 0.2e1)) * ((-310 * t13717 - 2759 * t13740 + 1395 * t13719 + 6012 * t13738 - 2445 * t13721 - 7000 * t13736 + 2030 * t13735 + 4615 * t13734 - 720 * t13733 - 1647 * t13732 + 15 * t13731 + 254 * t13728 + 35 * t13729 - t13743) * np.exp((1j) * (t13730 - 6 * phi2)) + (-4526 * t13717 - 16585 * t13740 - 32829 * t13719 - 35028 * t13738 - 12349 * t13721 + 15528 * t13736 + 21630 * t13735 + 8697 * t13734 - 1976 * t13733 - 2897 * t13732 - 721 * t13731 + 90 * t13728 + 51 * t13729 + t13743) * np.exp((1j) * (t13730 + 6 * phi2))) * ((1 + t13729) ** (-0.1e1 / 0.2e1))

        if Bindx == 612:
            t13762 = np.cos(phi)
            t13761 = t13762 ** 2
            t13765 = t13761 ** 2
            t13769 = t13765 ** 2
            t13777 = t13769 ** 2
            t13779 = -5797 * t13762 * t13777 - 1157
            t13764 = t13762 * t13761
            t13767 = t13764 ** 2
            t13768 = t13762 * t13767
            t13775 = t13768 ** 2
            t13773 = t13767 ** 2
            t13766 = t13762 * t13765
            t13771 = t13766 ** 2
            t13763 = 13 * phi1
            t13754 = t13762 * t13769
            t13752 = t13762 * t13771
            t13750 = t13762 * t13773
            t13748 = t13762 * t13775
            tfunc[..., c] = (-0.35e2 / 0.16384e5*1j) * np.sqrt((1 - t13762)) * np.sqrt(0.3e1) * ((47399 * t13777 - 149792 * t13748 + 186310 * t13775 + 99190 * t13750 - 577668 * t13773 + 549276 * t13752 + 213642 * t13771 - 783640 * t13754 + 418990 * t13769 + 255112 * t13768 - 374374 * t13767 + 82082 * t13766 + 84980 * t13765 - 51780 * t13764 + 1878 * t13761 + 5349 * t13762 + t13779) * np.exp((1j) * (t13763 - 12 * phi2)) + (58993 * t13777 + 256184 * t13748 + 592286 * t13775 + 679406 * t13750 + 2548 * t13773 - 1124396 * t13752 - 1460030 * t13771 - 462748 * t13754 + 739882 * t13769 + 903760 * t13768 + 274274 * t13767 - 182182 * t13766 - 179284 * t13765 - 42524 * t13764 + 11134 * t13761 + 7663 * t13762 - t13779) * np.exp((1j) * (t13763 + 12 * phi2))) * ((1 + t13762) ** (-0.1e1 / 0.2e1))

        if Bindx == 613:
            t13798 = np.cos(phi)
            t13797 = t13798 ** 2
            t13801 = t13797 ** 2
            t13800 = t13798 * t13797
            t13803 = t13800 ** 2
            t13805 = t13801 ** 2
            t13802 = t13798 * t13801
            t13807 = t13802 ** 2
            t13809 = t13803 ** 2
            t13804 = t13798 * t13803
            t13811 = t13804 ** 2
            t13813 = t13805 ** 2
            t13816 = -1 + 37 * t13797 - 425 * t13801 + 1749 * t13803 - 3115 * t13805 + 2231 * t13807 + 133 * t13809 - 945 * t13811 + 336 * t13813
            t13815 = 140 * t13800 - 294 * t13802 - 552 * t13804 + (2770 * t13805 - 3796 * t13807 + 2150 * t13809 - 336 * t13811 - 68 * t13813 - 14) * t13798
            t13799 = 7 * phi1
            tfunc[..., c] = (0.105e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.642785e6) * ((t13815 + t13816) * np.exp((2*1j) * (t13799 - 3 * phi2)) + (-t13815 + t13816) * np.exp((2*1j) * (t13799 + 3 * phi2)))

        if Bindx == 614:
            t13835 = np.cos(phi)
            t13834 = t13835 ** 2
            t13838 = t13834 ** 2
            t13837 = t13835 * t13834
            t13840 = t13837 ** 2
            t13842 = t13838 ** 2
            t13839 = t13835 * t13838
            t13844 = t13839 ** 2
            t13846 = t13840 ** 2
            t13841 = t13835 * t13840
            t13848 = t13841 ** 2
            t13850 = t13842 ** 2
            t13853 = 119 + 2023 * t13834 - 14693 * t13838 + 3003 * t13840 + 74789 * t13842 - 80795 * t13844 - 20839 * t13846 + 32697 * t13848 + 3696 * t13850
            t13852 = 1348 * t13837 + 24024 * t13839 - 60060 * t13841 + (-4004 * t13842 + 84812 * t13844 - 29512 * t13846 - 15348 * t13848 - 374 * t13850 - 886) * t13835
            t13836 = 7 * phi1
            tfunc[..., c] = (0.35e2 / 0.16384e5) * ((t13852 + t13853) * np.exp((2*1j) * (t13836 - 6 * phi2)) + (-t13852 + t13853) * np.exp((2*1j) * (t13836 + 6 * phi2))) * np.sqrt(0.93e2)

        if Bindx == 615:
            t13868 = np.cos(phi)
            t13867 = t13868 ** 2
            t13870 = t13868 * t13867
            t13873 = t13870 ** 2
            t13879 = t13873 ** 2
            t13881 = -51 * t13868 * t13879 - 5
            t13871 = t13867 ** 2
            t13872 = t13868 * t13871
            t13877 = t13872 ** 2
            t13875 = t13871 ** 2
            t13869 = 5 * phi1
            t13862 = t13868 * t13873
            t13860 = t13868 * t13875
            t13858 = t13868 * t13877
            tfunc[..., c] = (0.35e2 / 0.32768e5*1j) * ((1 - t13868) ** (0.9e1 / 0.2e1)) * np.sqrt(0.1928355e7) * ((1 + t13868) ** (-0.1e1 / 0.2e1)) * ((-15 * t13879 - 286 * t13858 + 70 * t13877 + 665 * t13860 - 125 * t13875 - 820 * t13862 + 100 * t13873 + 565 * t13872 - 25 * t13871 - 206 * t13870 - 10 * t13867 + 31 * t13868 - t13881) * np.exp((3*1j) * (t13869 - 2 * phi2)) + (-525 * t13879 - 2414 * t13858 - 6490 * t13877 - 11165 * t13860 - 12507 * t13875 - 8580 * t13862 - 2508 * t13873 + 1155 * t13872 + 1485 * t13871 + 594 * t13870 + 70 * t13867 - 19 * t13868 + t13881) * np.exp((3*1j) * (t13869 + 2 * phi2)))

        if Bindx == 616:
            t13899 = np.cos(phi)
            t13898 = t13899 ** 2
            t13902 = t13898 ** 2
            t13906 = t13902 ** 2
            t13915 = -561 * t13906 ** 2 - 271
            t13901 = t13899 * t13898
            t13904 = t13901 ** 2
            t13905 = t13899 * t13904
            t13912 = t13905 ** 2
            t13910 = t13904 ** 2
            t13903 = t13899 * t13902
            t13908 = t13903 ** 2
            t13900 = 5 * phi1
            t13891 = t13899 * t13906
            t13889 = t13899 * t13908
            t13887 = t13899 * t13910
            t13885 = t13899 * t13912
            tfunc[..., c] = (0.35e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 - t13899) ** (0.3e1 / 0.2e1)) * np.sqrt(0.31e2) * ((4818 * t13885 - 16474 * t13912 + 24754 * t13887 - 334 * t13910 - 56390 * t13889 + 77198 * t13908 - 11462 * t13891 - 71808 * t13906 + 71478 * t13905 - 5742 * t13904 - 33770 * t13903 + 22286 * t13902 - 1346 * t13901 - 4294 * t13898 + 1918 * t13899 + t13915) * np.exp((3*1j) * (t13900 - 4 * phi2)) + (7062 * t13885 + 40234 * t13912 + 135926 * t13887 + 297934 * t13910 + 428974 * t13889 + 370370 * t13908 + 89518 * t13891 - 219648 * t13906 - 325182 * t13905 - 210210 * t13904 - 46046 * t13903 + 34034 * t13902 + 34426 * t13901 + 14134 * t13898 + 3002 * t13899 - t13915) * np.exp((3*1j) * (t13900 + 4 * phi2))) * ((1 + t13899) ** (-0.1e1 / 0.2e1))

        if Bindx == 617:
            t13934 = np.cos(phi)
            t13933 = t13934 ** 2
            t13937 = t13933 ** 2
            t13936 = t13934 * t13933
            t13939 = t13936 ** 2
            t13941 = t13937 ** 2
            t13938 = t13934 * t13937
            t13943 = t13938 ** 2
            t13945 = t13939 ** 2
            t13940 = t13934 * t13939
            t13947 = t13940 ** 2
            t13949 = t13941 ** 2
            t13952 = 6 - 42 * t13933 - 130 * t13937 + 974 * t13939 - 1870 * t13941 + 1474 * t13943 - 278 * t13945 - 230 * t13947 + 96 * t13949
            t13951 = 230 * t13936 - 646 * t13938 + 462 * t13940 + (660 * t13941 - 1326 * t13943 + 790 * t13945 - 134 * t13947 - 17 * t13949 - 19) * t13934
            t13935 = 8 * phi1
            tfunc[..., c] = (0.105e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.58435e5) * ((t13951 + t13952) * np.exp((2*1j) * (t13935 - 3 * phi2)) + (-t13951 + t13952) * np.exp((2*1j) * (t13935 + 3 * phi2)))

        if Bindx == 618:
            t13971 = np.cos(phi)
            t13970 = t13971 ** 2
            t13974 = t13970 ** 2
            t13973 = t13971 * t13970
            t13976 = t13973 ** 2
            t13978 = t13974 ** 2
            t13975 = t13971 * t13974
            t13980 = t13975 ** 2
            t13982 = t13976 ** 2
            t13977 = t13971 * t13976
            t13984 = t13977 ** 2
            t13986 = t13978 ** 2
            t13989 = 12 + 564 * t13970 + 1036 * t13974 - 6188 * t13976 - 572 * t13978 + 9724 * t13980 - 1820 * t13982 - 2564 * t13984 - 192 * t13986
            t13988 = 1264 * t13973 - 1820 * t13975 - 6864 * t13977 + (7722 * t13978 + 4368 * t13980 - 3836 * t13982 - 944 * t13984 - 17 * t13986 + 127) * t13971
            t13972 = 4 * phi1
            tfunc[..., c] = -(0.35e2 / 0.32768e5) * ((-t13988 + t13989) * np.exp((4*1j) * (t13972 - 3 * phi2)) + (t13988 + t13989) * np.exp((4*1j) * (t13972 + 3 * phi2))) * np.sqrt(0.1023e4)

        if Bindx == 619:
            t14006 = np.cos(phi)
            t14005 = t14006 ** 2
            t14009 = t14005 ** 2
            t14008 = t14006 * t14005
            t14011 = t14008 ** 2
            t14010 = t14006 * t14009
            t14014 = t14010 ** 2
            t14016 = t14011 ** 2
            t14012 = t14006 * t14011
            t14018 = t14012 ** 2
            t14019 = t14006 * t14018
            t14022 = -t14006 * t14019 + 10 * t14005 - 50 * t14009 + 66 * t14011 - 66 * t14014 + 50 * t14016 - 10 * t14018 + 1
            t14021 = 10 * t14008 + 34 * t14010 + 6 * t14019 + (110 * t14005 - 110) * t14012 + (-34 * t14014 - 10 * t14016 - 6) * t14006
            t14007 = 17 * phi1
            tfunc[..., c] = (-0.105e3 / 0.32768e5*1j) * np.sqrt(0.993395e6) * np.sqrt((1 - t14006)) * np.sqrt((1 + t14006)) * ((t14021 + t14022) * np.exp((1j) * (t14007 - 6 * phi2)) + (t14021 - t14022) * np.exp((1j) * (t14007 + 6 * phi2)))

        if Bindx == 620:
            t14038 = np.cos(phi)
            t14055 = -12 * t14038
            t14037 = t14038 ** 2
            t14041 = t14037 ** 2
            t14044 = t14041 ** 2
            t14045 = t14038 * t14044
            t14046 = t14037 * t14045
            t14047 = t14038 * t14046
            t14042 = t14038 * t14041
            t14043 = t14037 * t14042
            t14049 = t14043 ** 2
            t14053 = -64 * t14037 - 364 * t14041 - 364 * t14047 - 64 * t14049 - 1 + (858 - t14044) * t14044
            t14052 = t14049 * t14055 - 364 * t14042 + 572 * t14043 + 572 * t14045 - 364 * t14046 + t14055 - 196 * (t14037 + t14047) * t14038
            t14039 = 17 * phi1
            tfunc[..., c] = (0.35e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * np.sqrt(0.17391e5) * np.sqrt((1 - t14038)) * np.sqrt((1 + t14038)) * ((t14052 - t14053) * np.exp((1j) * (t14039 - 12 * phi2)) + (t14052 + t14053) * np.exp((1j) * (t14039 + 12 * phi2)))

        if Bindx == 621:
            t14061 = np.sin(phi)
            t14056 = t14061 ** 2
            t14057 = t14056 ** 2
            t14059 = t14061 * t14057 ** 2
            tfunc[..., c] = -(0.185e3 / 0.131072e6) * np.exp((-18*1j) * phi1) * np.sqrt(0.90751353e8) * t14059 ** 2

        if Bindx == 622:
            t14081 = np.cos(phi)
            t14101 = -6 * t14081
            t14080 = t14081 ** 2
            t14083 = t14081 * t14080
            t14084 = t14080 ** 2
            t14085 = t14081 * t14084
            t14086 = t14083 ** 2
            t14087 = t14081 * t14086
            t14088 = t14084 ** 2
            t14089 = t14081 * t14088
            t14090 = t14085 ** 2
            t14092 = t14086 ** 2
            t14094 = t14087 ** 2
            t14096 = t14088 ** 2
            t14100 = t14096 * t14101 + 16 * t14083 + 24 * t14085 - 144 * t14087 + 220 * t14089 + t14101 + (-144 * t14090 + 24 * t14092 + 16 * t14094) * t14081
            t14099 = t14089 ** 2 + 9 * t14080 - 60 * t14084 + 116 * t14086 - 66 * t14088 - 66 * t14090 + 116 * t14092 - 60 * t14094 + 9 * t14096 + 1
            t14082 = 3 * phi1
            tfunc[..., c] = (0.555e3 / 0.262144e6) * np.sqrt(0.1390753e7) * np.sqrt(0.2e1) * ((t14099 + t14100) * np.exp((-6*1j) * (t14082 - phi2)) + (t14099 - t14100) * np.exp((-6*1j) * (t14082 + phi2)))

        if Bindx == 623:
            t14120 = np.cos(phi)
            t14119 = t14120 ** 2
            t14122 = t14120 * t14119
            t14123 = t14119 ** 2
            t14124 = t14120 * t14123
            t14125 = t14122 ** 2
            t14126 = t14120 * t14125
            t14128 = t14124 ** 2
            t14130 = t14125 ** 2
            t14132 = t14126 ** 2
            t14127 = t14123 ** 2
            t14134 = t14127 ** 2
            t14135 = t14120 * t14134
            t14138 = 184 * t14122 + 168 * t14124 - 936 * t14126 - 12 * t14135 + (936 * t14128 - 168 * t14130 - 184 * t14132 + 12) * t14120
            t14137 = t14120 * t14135 - 63 * t14119 - 300 * t14123 + 364 * t14125 + 858 * t14127 - 858 * t14128 - 364 * t14130 + 300 * t14132 + 63 * t14134 - 1
            t14121 = 3 * phi1
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.121737e6) * ((t14137 + t14138) * np.exp((-6*1j) * (t14121 - 2 * phi2)) + (t14137 - t14138) * np.exp((-6*1j) * (t14121 + 2 * phi2)))

        if Bindx == 624:
            t14158 = np.cos(phi)
            t14177 = -18 * t14158
            t14157 = t14158 ** 2
            t14159 = t14158 * t14157
            t14160 = t14157 ** 2
            t14161 = t14158 * t14160
            t14162 = t14159 ** 2
            t14163 = t14158 * t14162
            t14164 = t14160 ** 2
            t14165 = t14158 * t14164
            t14166 = t14161 ** 2
            t14168 = t14162 ** 2
            t14170 = t14163 ** 2
            t14172 = t14164 ** 2
            t14176 = t14172 * t14177 - 816 * t14159 - 8568 * t14161 - 31824 * t14163 - 48620 * t14165 + t14177 + (-31824 * t14166 - 8568 * t14168 - 816 * t14170) * t14158
            t14175 = t14165 ** 2 + 153 * t14157 + 3060 * t14160 + 18564 * t14162 + 43758 * t14164 + 43758 * t14166 + 18564 * t14168 + 3060 * t14170 + 153 * t14172 + 1
            tfunc[..., c] = (0.37e2 / 0.524288e6) * np.sqrt(0.2e1) * ((t14175 + t14176) * np.exp((-18*1j) * (phi1 - phi2)) + (t14175 - t14176) * np.exp((-18*1j) * (phi1 + phi2)))

        if Bindx == 625:
            t14178 = np.cos(phi)
            t14179 = t14178 ** 2
            t14181 = t14179 ** 2
            t14185 = t14181 ** 2
            t14180 = t14178 * t14179
            t14183 = t14180 ** 2
            tfunc[..., c] = (0.555e3 / 0.65536e5*1j) * t14178 * (-36 * t14179 + 84 * t14180 - 126 * t14181 - 84 * t14183 - 9 * t14185 - 1 + (126 * t14181 + 36 * t14183 + t14185 + 9) * t14178) * ((1 + t14178) ** (0.17e2 / 0.2e1)) * np.sqrt(0.90751353e8) * np.exp((-17*1j) * phi1) * ((1 - t14178) ** (-0.1e1 / 0.2e1))

        if Bindx == 626:
            t14201 = np.cos(phi)
            t14215 = 3 * t14201
            t14200 = t14201 ** 2
            t14203 = t14201 * t14200
            t14206 = t14203 ** 2
            t14212 = t14206 ** 2
            t14214 = t14212 * t14215
            t14204 = t14200 ** 2
            t14205 = t14201 * t14204
            t14210 = t14205 ** 2
            t14208 = t14204 ** 2
            t14202 = 17 * phi1
            t14195 = t14201 * t14206
            t14193 = t14201 * t14208
            t14191 = t14201 * t14210
            tfunc[..., c] = (0.555e3 / 0.131072e6*1j) * np.sqrt(0.2e1) * ((1 + t14201) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1390753e7) * ((1 - t14201) ** (-0.1e1 / 0.2e1)) * ((t14214 - 35 * t14212 + 186 * t14191 - 594 * t14210 + 1265 * t14193 - 1881 * t14208 + 1980 * t14195 - 1452 * t14206 + 693 * t14205 - 165 * t14204 - 22 * t14203 + 30 * t14200 - 9 * t14201 + 1) * np.exp((-1*1j) * (t14202 - 6 * phi2)) + (t14214 - t14212 - 18 * t14191 + 6 * t14210 + 45 * t14193 - 15 * t14208 - 60 * t14195 + 20 * t14206 + 45 * t14205 - 15 * t14204 - 18 * t14203 + 6 * t14200 + t14215 - 1) * np.exp((-1*1j) * (t14202 + 6 * phi2)))

        if Bindx == 627:
            t14233 = np.cos(phi)
            t14232 = t14233 ** 2
            t14236 = t14232 ** 2
            t14240 = t14236 ** 2
            t14249 = 3 * t14240 ** 2
            t14235 = t14233 * t14232
            t14238 = t14235 ** 2
            t14239 = t14233 * t14238
            t14246 = t14239 ** 2
            t14244 = t14238 ** 2
            t14237 = t14233 * t14236
            t14242 = t14237 ** 2
            t14234 = 17 * phi1
            t14225 = t14233 * t14240
            t14223 = t14233 * t14242
            t14221 = t14233 * t14244
            t14219 = t14233 * t14246
            tfunc[..., c] = (0.37e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 + t14233) ** (0.5e1 / 0.2e1)) * np.sqrt(0.121737e6) * ((1 - t14233) ** (-0.1e1 / 0.2e1)) * ((t14249 - 43 * t14219 + 285 * t14246 - 1155 * t14221 + 3185 * t14244 - 6279 * t14223 + 9009 * t14242 - 9295 * t14225 + 6435 * t14240 - 2145 * t14239 - 1001 * t14238 + 1911 * t14237 - 1365 * t14236 + 595 * t14235 - 165 * t14232 + 27 * t14233 - 2) * np.exp((-1*1j) * (t14234 - 12 * phi2)) + (t14249 + 25 * t14219 + 81 * t14246 + 105 * t14221 - 51 * t14244 - 339 * t14223 - 363 * t14242 + 77 * t14225 + 495 * t14240 + 363 * t14239 - 77 * t14238 - 261 * t14237 - 129 * t14236 + 15 * t14235 + 39 * t14232 + 15 * t14233 + 2) * np.exp((-1*1j) * (t14234 + 12 * phi2)))

        if Bindx == 628:
            t14268 = np.cos(phi)
            t14267 = t14268 ** 2
            t14271 = t14267 ** 2
            t14270 = t14268 * t14267
            t14273 = t14270 ** 2
            t14275 = t14271 ** 2
            t14272 = t14268 * t14271
            t14277 = t14272 ** 2
            t14279 = t14273 ** 2
            t14274 = t14268 * t14273
            t14281 = t14274 ** 2
            t14283 = t14275 ** 2
            t14286 = -1 - 136 * t14267 - 2380 * t14271 - 12376 * t14273 - 24310 * t14275 - 19448 * t14277 - 6188 * t14279 - 680 * t14281 - 17 * t14283
            t14285 = 680 * t14270 + 6188 * t14272 + 19448 * t14274 + (24310 * t14275 + 12376 * t14277 + 2380 * t14279 + 136 * t14281 + t14283 + 17) * t14268
            t14269 = 17 * phi1
            tfunc[..., c] = (-0.111e3 / 0.262144e6*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t14268)) * np.sqrt((1 + t14268)) * ((t14285 + t14286) * np.exp((-1*1j) * (t14269 - 18 * phi2)) + (t14285 - t14286) * np.exp((-1*1j) * (t14269 + 18 * phi2)))

        if Bindx == 629:
            t14292 = np.sin(phi)
            t14288 = t14292 ** 2
            t14289 = t14288 ** 2
            t14290 = t14289 ** 2
            t14287 = np.cos(phi)
            tfunc[..., c] = (0.111e3 / 0.131072e6) * np.exp((-16*1j) * phi1) * np.sqrt(0.129644790e9) * t14290 ** 2 * (35 * t14287 ** 2 - 1)

        if Bindx == 630:
            t14312 = np.cos(phi)
            t14311 = t14312 ** 2
            t14314 = t14312 * t14311
            t14315 = t14311 ** 2
            t14316 = t14312 * t14315
            t14317 = t14314 ** 2
            t14318 = t14312 * t14317
            t14319 = t14315 ** 2
            t14320 = t14312 * t14319
            t14321 = t14316 ** 2
            t14323 = t14317 ** 2
            t14325 = t14318 ** 2
            t14327 = t14319 ** 2
            t14331 = -160 * t14314 + 2144 * t14316 - 7200 * t14318 + 10560 * t14320 + (-6624 * t14321 + 160 * t14323 + 1696 * t14325 - 560 * t14327 - 16) * t14312
            t14330 = 105 * t14320 ** 2 + 225 * t14311 - 1300 * t14315 + 2276 * t14317 + 770 * t14319 - 7106 * t14321 + 8860 * t14323 - 4460 * t14325 + 639 * t14327 - 9
            t14313 = 8 * phi1
            tfunc[..., c] = (0.111e3 / 0.131072e6) * ((t14330 + t14331) * np.exp((-2*1j) * (t14313 - 3 * phi2)) + (t14330 - t14331) * np.exp((-2*1j) * (t14313 + 3 * phi2))) * np.sqrt(0.993395e6)

        if Bindx == 631:
            t14351 = np.cos(phi)
            t14350 = t14351 ** 2
            t14353 = t14351 * t14350
            t14354 = t14350 ** 2
            t14355 = t14351 * t14354
            t14356 = t14353 ** 2
            t14357 = t14351 * t14356
            t14358 = t14354 ** 2
            t14359 = t14351 * t14358
            t14360 = t14355 ** 2
            t14362 = t14356 ** 2
            t14364 = t14357 ** 2
            t14366 = t14358 ** 2
            t14370 = -224 * t14353 + 2800 * t14355 - 2496 * t14357 - 6864 * t14359 + (8736 * t14360 + 784 * t14362 - 2432 * t14364 - 224 * t14366 - 80) * t14351
            t14369 = 21 * t14359 ** 2 + 261 * t14350 - 868 * t14354 - 2548 * t14356 + 8294 * t14358 - 2002 * t14360 - 6916 * t14362 + 2732 * t14364 + 1017 * t14366 + 9
            t14352 = 4 * phi1
            tfunc[..., c] = (0.37e2 / 0.65536e5) * ((t14369 + t14370) * np.exp((-4*1j) * (t14352 - 3 * phi2)) + (t14369 - t14370) * np.exp((-4*1j) * (t14352 + 3 * phi2))) * np.sqrt(0.86955e5)

        if Bindx == 632:
            t14389 = np.cos(phi)
            t14388 = t14389 ** 2
            t14391 = t14389 * t14388
            t14392 = t14388 ** 2
            t14393 = t14389 * t14392
            t14394 = t14391 ** 2
            t14395 = t14389 * t14394
            t14397 = t14393 ** 2
            t14399 = t14394 ** 2
            t14401 = t14395 ** 2
            t14396 = t14392 ** 2
            t14403 = t14396 ** 2
            t14404 = t14389 * t14403
            t14407 = 544 * t14391 + 3808 * t14393 + 7072 * t14395 - 16 * t14404 + 16 * (-442 * t14397 - 238 * t14399 - 34 * t14401 + 1) * t14389
            t14406 = t14389 * t14404 - 119 * t14388 - 1700 * t14392 - 6188 * t14394 - 4862 * t14396 + 4862 * t14397 + 6188 * t14399 + 1700 * t14401 + 119 * t14403 - 1
            t14390 = 8 * phi1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * ((t14406 + t14407) * np.exp((-2*1j) * (t14390 - 9 * phi2)) + (t14406 - t14407) * np.exp((-2*1j) * (t14390 + 9 * phi2))) * np.sqrt(0.35e2)

        if Bindx == 633:
            t14408 = np.cos(phi)
            tfunc[..., c] = (0.111e3 / 0.65536e5*1j) * (35 * t14408 ** 2 - 3) * t14408 * ((1 + t14408) ** (0.15e2 / 0.2e1)) * np.sqrt(0.367326905e9) * np.exp((-15*1j) * phi1) * ((1 - t14408) ** (0.15e2 / 0.2e1))

        if Bindx == 634:
            t14423 = np.cos(phi)
            t14422 = t14423 ** 2
            t14425 = t14423 * t14422
            t14428 = t14425 ** 2
            t14429 = t14423 * t14428
            t14437 = 1785 * t14429 ** 2
            t14434 = t14428 ** 2
            t14426 = t14422 ** 2
            t14427 = t14423 * t14426
            t14432 = t14427 ** 2
            t14430 = t14426 ** 2
            t14424 = 5 * phi1
            t14415 = t14423 * t14430
            t14413 = t14423 * t14432
            tfunc[..., c] = (0.37e2 / 0.131072e6*1j) * np.sqrt(0.2e1) * ((1 + t14423) ** (0.9e1 / 0.2e1)) * np.sqrt(0.175305e6) * ((1 - t14423) ** (-0.1e1 / 0.2e1)) * ((t14437 - 10251 * t14434 + 440 * t14413 + 24461 * t14432 - 2200 * t14415 - 31015 * t14430 + 4400 * t14429 + 21995 * t14428 - 4400 * t14427 - 8225 * t14426 + 2200 * t14425 + 1231 * t14422 - 440 * t14423 + 19) * np.exp((-3*1j) * (t14424 + 2 * phi2)) + (-201380 * t14413 - 310310 * t14415 + 2219 * t14422 - 4260 * t14425 - 9075 * t14426 + 53658 * t14427 - 91245 * t14428 + 29832 * t14429 + 148335 * t14430 + 319561 * t14432 + 78999 * t14434 + t14437 - 19 + (-17850 * t14434 - 250) * t14423) * np.exp((-3*1j) * (t14424 - 2 * phi2)))

        if Bindx == 635:
            t14456 = np.cos(phi)
            t14455 = t14456 ** 2
            t14459 = t14455 ** 2
            t14463 = t14459 ** 2
            t14471 = t14463 ** 2
            t14473 = 357 * t14456 * t14471
            t14458 = t14456 * t14455
            t14461 = t14458 ** 2
            t14462 = t14456 * t14461
            t14469 = t14462 ** 2
            t14467 = t14461 ** 2
            t14460 = t14456 * t14459
            t14465 = t14460 ** 2
            t14457 = 5 * phi1
            t14448 = t14456 * t14463
            t14446 = t14456 * t14465
            t14444 = t14456 * t14467
            t14442 = t14456 * t14469
            tfunc[..., c] = (0.37e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 + t14456) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1705e4) * ((1 - t14456) ** (-0.1e1 / 0.2e1)) * ((t14473 - 4284 * t14471 + 22950 * t14442 - 71306 * t14469 + 137914 * t14444 - 158522 * t14467 + 67886 * t14446 + 94094 * t14465 - 188188 * t14448 + 136422 * t14463 - 16302 * t14462 - 51870 * t14461 + 43862 * t14460 - 13006 * t14459 - 2086 * t14458 + 2842 * t14455 - 857 * t14456 + 94) * np.exp((-3*1j) * (t14457 - 4 * phi2)) + (t14473 + 2856 * t14471 + 8670 * t14442 + 9494 * t14469 - 9406 * t14444 - 36682 * t14467 - 28474 * t14446 + 22286 * t14465 + 51788 * t14448 + 19998 * t14463 - 23430 * t14462 - 25086 * t14461 - 2578 * t14460 + 7394 * t14459 + 3554 * t14458 - 166 * t14455 - 481 * t14456 - 94) * np.exp((-3*1j) * (t14457 + 4 * phi2)))

        if Bindx == 636:
            t14492 = np.cos(phi)
            t14491 = t14492 ** 2
            t14495 = t14491 ** 2
            t14499 = t14495 ** 2
            t14511 = 1430 * t14499
            t14494 = t14492 * t14491
            t14497 = t14494 ** 2
            t14496 = t14492 * t14495
            t14501 = t14496 ** 2
            t14503 = t14497 ** 2
            t14498 = t14492 * t14497
            t14505 = t14498 ** 2
            t14507 = t14499 ** 2
            t14510 = 1 + 104 * t14491 + 1260 * t14495 + 3640 * t14497 + t14511 - 3432 * t14501 - 2548 * t14503 - 440 * t14505 - 15 * t14507
            t14509 = -440 * t14494 - 2548 * t14496 - 3432 * t14498 + (3640 * t14501 + 1260 * t14503 + 104 * t14505 + t14507 + t14511 - 15) * t14492
            t14493 = 5 * phi1
            tfunc[..., c] = (-0.37e2 / 0.262144e6*1j) * np.sqrt(0.2e1) * np.sqrt(0.1785e4) * np.sqrt((1 - t14492)) * np.sqrt((1 + t14492)) * ((t14509 + t14510) * np.exp((-3*1j) * (t14493 - 6 * phi2)) + (t14509 - t14510) * np.exp((-3*1j) * (t14493 + 6 * phi2)))

        if Bindx == 637:
            t14520 = np.sin(phi)
            t14515 = t14520 ** 2
            t14516 = t14520 * t14515
            t14518 = t14520 * t14516 ** 2
            t14512 = np.cos(phi)
            t14513 = t14512 ** 2
            tfunc[..., c] = -(0.111e3 / 0.131072e6) * np.exp((-14*1j) * phi1) * np.sqrt(0.100180065e9) * t14518 ** 2 * (1 + (-66 + 385 * t14513) * t14513)

        if Bindx == 638:
            t14540 = np.cos(phi)
            t14539 = t14540 ** 2
            t14542 = t14540 * t14539
            t14543 = t14539 ** 2
            t14544 = t14540 * t14543
            t14545 = t14542 ** 2
            t14546 = t14540 * t14545
            t14547 = t14543 ** 2
            t14548 = t14540 * t14547
            t14549 = t14544 ** 2
            t14551 = t14545 ** 2
            t14553 = t14546 ** 2
            t14555 = t14547 ** 2
            t14559 = -2320 * t14542 + 15912 * t14544 - 48240 * t14546 + 67780 * t14548 + (-32368 * t14549 - 20440 * t14551 + 27888 * t14553 - 8330 * t14555 + 118) * t14540
            t14558 = 1785 * t14548 ** 2 + 385 * t14539 - 1820 * t14543 - 3948 * t14545 + 39950 * t14547 - 95218 * t14549 + 103060 * t14551 - 50460 * t14553 + 6273 * t14555 - 7
            t14541 = 7 * phi1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.642785e6) * ((t14558 + t14559) * np.exp((-2*1j) * (t14541 - 3 * phi2)) + (t14558 - t14559) * np.exp((-2*1j) * (t14541 + 3 * phi2)))

        if Bindx == 639:
            t14579 = np.cos(phi)
            t14578 = t14579 ** 2
            t14581 = t14579 * t14578
            t14582 = t14578 ** 2
            t14583 = t14579 * t14582
            t14584 = t14581 ** 2
            t14585 = t14579 * t14584
            t14586 = t14582 ** 2
            t14587 = t14579 * t14586
            t14588 = t14583 ** 2
            t14590 = t14584 ** 2
            t14592 = t14585 ** 2
            t14594 = t14586 ** 2
            t14598 = -33544 * t14581 + 35112 * t14583 + 326040 * t14585 - 814528 * t14587 + (366184 * t14588 + 407512 * t14590 - 253176 * t14592 - 36652 * t14594 + 3052) * t14579
            t14597 = 3927 * t14587 ** 2 + 599 * t14578 + 68684 * t14582 - 300300 * t14584 + 230230 * t14586 + 538538 * t14588 - 794612 * t14590 + 113844 * t14592 + 139689 * t14594 - 599
            t14580 = 7 * phi1
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.465e3) * ((t14597 + t14598) * np.exp((-2*1j) * (t14580 - 6 * phi2)) + (t14597 - t14598) * np.exp((-2*1j) * (t14580 + 6 * phi2)))

        if Bindx == 640:
            t14618 = np.cos(phi)
            t14638 = -14 * t14618
            t14617 = t14618 ** 2
            t14620 = t14618 * t14617
            t14621 = t14617 ** 2
            t14622 = t14618 * t14621
            t14623 = t14620 ** 2
            t14624 = t14618 * t14623
            t14625 = t14621 ** 2
            t14626 = t14618 * t14625
            t14627 = t14622 ** 2
            t14629 = t14623 ** 2
            t14631 = t14624 ** 2
            t14633 = t14625 ** 2
            t14637 = t14633 * t14638 - 336 * t14620 - 1288 * t14622 + 208 * t14624 + 2860 * t14626 + t14638 + (208 * t14627 - 1288 * t14629 - 336 * t14631) * t14618
            t14636 = t14626 ** 2 + 89 * t14617 + 820 * t14621 + 1092 * t14623 - 2002 * t14625 - 2002 * t14627 + 1092 * t14629 + 820 * t14631 + 89 * t14633 + 1
            t14619 = 7 * phi1
            tfunc[..., c] = (0.111e3 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.6545e4) * ((t14636 + t14637) * np.exp((-2*1j) * (t14619 - 9 * phi2)) + (t14636 - t14637) * np.exp((-2*1j) * (t14619 + 9 * phi2)))

        if Bindx == 641:
            t14639 = np.cos(phi)
            t14640 = t14639 ** 2
            tfunc[..., c] = (-0.555e3 / 0.32768e5*1j) * (1 + (-22 + 77 * t14640) * t14640) * t14639 * ((1 + t14639) ** (0.13e2 / 0.2e1)) * np.sqrt(0.40072026e8) * np.exp((-13*1j) * phi1) * ((1 - t14639) ** (0.13e2 / 0.2e1))

        if Bindx == 642:
            t14658 = np.cos(phi)
            t14657 = t14658 ** 2
            t14660 = t14658 * t14657
            t14663 = t14660 ** 2
            t14664 = t14658 * t14663
            t14671 = t14664 ** 2
            t14673 = 357 * t14658 * t14671
            t14669 = t14663 ** 2
            t14661 = t14657 ** 2
            t14662 = t14658 * t14661
            t14667 = t14662 ** 2
            t14665 = t14661 ** 2
            t14659 = 13 * phi1
            t14650 = t14658 * t14665
            t14648 = t14658 * t14667
            t14646 = t14658 * t14669
            tfunc[..., c] = (0.555e3 / 0.32768e5*1j) * ((1 + t14658) ** (0.7e1 / 0.2e1)) * np.sqrt(0.128557e6) * ((1 - t14658) ** (-0.1e1 / 0.2e1)) * ((t14673 - 2975 * t14671 + 10421 * t14646 - 19087 * t14669 + 16953 * t14648 + 45 * t14667 - 15575 * t14650 + 13773 * t14665 - 2001 * t14664 - 3981 * t14663 + 2399 * t14662 - 125 * t14661 - 269 * t14660 + 63 * t14657 + 3 * t14658 - 1) * np.exp((-1*1j) * (t14659 - 6 * phi2)) + (t14673 + 119 * t14671 - 1955 * t14646 - 497 * t14669 + 4473 * t14648 + 747 * t14667 - 5487 * t14650 - 397 * t14665 + 3823 * t14664 - 107 * t14663 - 1449 * t14662 + 189 * t14661 + 243 * t14660 - 55 * t14657 - 5 * t14658 + 1) * np.exp((-1*1j) * (t14659 + 6 * phi2)))

        if Bindx == 643:
            t14693 = np.cos(phi)
            t14692 = t14693 ** 2
            t14696 = t14692 ** 2
            t14700 = t14696 ** 2
            t14701 = t14693 * t14700
            t14711 = 3927 * t14701 ** 2
            t14708 = t14700 ** 2
            t14695 = t14693 * t14692
            t14698 = t14695 ** 2
            t14699 = t14693 * t14698
            t14706 = t14699 ** 2
            t14704 = t14698 ** 2
            t14697 = t14693 * t14696
            t14702 = t14697 ** 2
            t14694 = 13 * phi1
            t14683 = t14693 * t14702
            t14681 = t14693 * t14704
            t14679 = t14693 * t14706
            t14677 = t14693 * t14708
            tfunc[..., c] = (0.37e2 / 0.16384e5*1j) * np.sqrt((1 + t14693)) * np.sqrt(0.93e2) * ((1 - t14693) ** (-0.1e1 / 0.2e1)) * ((t14711 - 37961 * t14677 + 152966 * t14708 - 310552 * t14679 + 245380 * t14706 + 259826 * t14681 - 802438 * t14704 + 624988 * t14683 + 214214 * t14702 - 723580 * t14701 + 408122 * t14700 + 121264 * t14699 - 244244 * t14698 + 81158 * t14697 + 26950 * t14696 - 24500 * t14695 + 3635 * t14692 + 1165 * t14693 - 320) * np.exp((-1*1j) * (t14694 - 12 * phi2)) + (t14711 + 30107 * t14677 + 84898 * t14708 + 72688 * t14679 - 137860 * t14706 - 367346 * t14681 - 175266 * t14704 + 352716 * t14683 + 486486 * t14702 + 22880 * t14701 - 338338 * t14700 - 191048 * t14699 + 68068 * t14698 + 95018 * t14697 + 13090 * t14696 - 15540 * t14695 - 5325 * t14692 + 525 * t14693 + 320) * np.exp((-1*1j) * (t14694 + 12 * phi2)))

        if Bindx == 644:
            t14730 = np.cos(phi)
            t14729 = t14730 ** 2
            t14733 = t14729 ** 2
            t14732 = t14730 * t14729
            t14735 = t14732 ** 2
            t14737 = t14733 ** 2
            t14734 = t14730 * t14733
            t14739 = t14734 ** 2
            t14741 = t14735 ** 2
            t14736 = t14730 * t14735
            t14743 = t14736 ** 2
            t14745 = t14737 ** 2
            t14748 = -1 - 76 * t14729 - 560 * t14733 - 364 * t14735 + 1430 * t14737 + 572 * t14739 - 728 * t14741 - 260 * t14743 - 13 * t14745
            t14747 = 260 * t14732 + 728 * t14734 - 572 * t14736 + (-1430 * t14737 + 364 * t14739 + 560 * t14741 + 76 * t14743 + t14745 + 13) * t14730
            t14731 = 13 * phi1
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.sqrt(0.1309e4) * np.sqrt((1 - t14730)) * np.sqrt((1 + t14730)) * ((t14747 + t14748) * np.exp((-1*1j) * (t14731 - 18 * phi2)) + (t14747 - t14748) * np.exp((-1*1j) * (t14731 + 18 * phi2)))

        if Bindx == 645:
            t14757 = np.sin(phi)
            t14753 = t14757 ** 2
            t14754 = t14757 * t14753
            t14755 = t14754 ** 2
            t14749 = np.cos(phi)
            t14750 = t14749 ** 2
            t14751 = t14750 ** 2
            tfunc[..., c] = (0.555e3 / 0.32768e5) * np.exp((-12*1j) * phi1) * np.sqrt(0.215441e6) * t14755 ** 2 * (-1023 * t14751 - 1 + (2387 * t14751 + 93) * t14750)

        if Bindx == 646:
            t14777 = np.cos(phi)
            t14776 = t14777 ** 2
            t14779 = t14777 * t14776
            t14780 = t14776 ** 2
            t14781 = t14777 * t14780
            t14782 = t14779 ** 2
            t14783 = t14777 * t14782
            t14784 = t14780 ** 2
            t14785 = t14777 * t14784
            t14786 = t14781 ** 2
            t14788 = t14782 ** 2
            t14790 = t14783 ** 2
            t14792 = t14784 ** 2
            t14796 = 4040 * t14779 - 28824 * t14781 + 83880 * t14783 - 89104 * t14785 + (-49320 * t14786 + 195672 * t14788 - 160456 * t14790 + 44268 * t14792 - 156) * t14777
            t14795 = 11067 * t14785 ** 2 - 405 * t14776 + 7212 * t14780 - 55180 * t14782 + 204270 * t14784 - 395310 * t14786 + 401228 * t14788 - 187116 * t14790 + 14229 * t14792 + 5
            t14778 = 2 * phi1
            tfunc[..., c] = (0.185e3 / 0.65536e5) * np.sqrt(0.12441e5) * np.sqrt(0.2e1) * ((t14795 - t14796) * np.exp((-6*1j) * (t14778 - phi2)) + (t14795 + t14796) * np.exp((-6*1j) * (t14778 + phi2)))

        if Bindx == 647:
            t14816 = np.cos(phi)
            t14815 = t14816 ** 2
            t14817 = t14816 * t14815
            t14818 = t14815 ** 2
            t14819 = t14816 * t14818
            t14820 = t14817 ** 2
            t14821 = t14816 * t14820
            t14822 = t14818 ** 2
            t14823 = t14816 * t14822
            t14824 = t14819 ** 2
            t14826 = t14820 ** 2
            t14828 = t14821 ** 2
            t14830 = t14822 ** 2
            t14834 = -196280 * t14817 + 2118732 * t14819 - 6527664 * t14821 + 5368220 * t14823 + (6361992 * t14824 - 11481036 * t14826 + 3393632 * t14828 + 973896 * t14830 - 3300) * t14816
            t14833 = 121737 * t14823 ** 2 - 126495 * t14815 + 697620 * t14818 - 44044 * t14820 - 6899178 * t14822 + 15069054 * t14824 - 9157148 * t14826 - 2631900 * t14828 + 2973861 * t14830 + 4685
            tfunc[..., c] = (0.37e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t14833 - t14834) * np.exp((-12*1j) * (phi1 - phi2)) + (t14833 + t14834) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 648:
            t14853 = np.cos(phi)
            t14852 = t14853 ** 2
            t14855 = t14853 * t14852
            t14856 = t14852 ** 2
            t14857 = t14853 * t14856
            t14858 = t14855 ** 2
            t14859 = t14853 * t14858
            t14861 = t14857 ** 2
            t14863 = t14858 ** 2
            t14865 = t14859 ** 2
            t14860 = t14856 ** 2
            t14867 = t14860 ** 2
            t14868 = t14853 * t14867
            t14871 = 184 * t14855 + 168 * t14857 - 936 * t14859 - 12 * t14868 + (936 * t14861 - 168 * t14863 - 184 * t14865 + 12) * t14853
            t14870 = t14853 * t14868 - 63 * t14852 - 300 * t14856 + 364 * t14858 + 858 * t14860 - 858 * t14861 - 364 * t14863 + 300 * t14865 + 63 * t14867 - 1
            t14854 = 2 * phi1
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.121737e6) * np.sqrt(0.2e1) * ((t14870 + t14871) * np.exp((-6*1j) * (t14854 - 3 * phi2)) + (t14870 - t14871) * np.exp((-6*1j) * (t14854 + 3 * phi2)))

        if Bindx == 649:
            t14872 = np.cos(phi)
            t14873 = t14872 ** 2
            t14874 = t14873 ** 2
            tfunc[..., c] = (0.111e3 / 0.32768e5*1j) * (-1023 * t14874 - 5 + (1705 * t14874 + 155) * t14873) * t14872 * ((1 + t14872) ** (0.11e2 / 0.2e1)) * np.sqrt(0.45242610e8) * np.exp((-11*1j) * phi1) * ((1 - t14872) ** (0.11e2 / 0.2e1))

        if Bindx == 650:
            t14893 = np.cos(phi)
            t14892 = t14893 ** 2
            t14896 = t14892 ** 2
            t14900 = t14896 ** 2
            t14909 = 7905 * t14900 ** 2
            t14895 = t14893 * t14892
            t14898 = t14895 ** 2
            t14899 = t14893 * t14898
            t14906 = t14899 ** 2
            t14904 = t14898 ** 2
            t14897 = t14893 * t14896
            t14902 = t14897 ** 2
            t14894 = 11 * phi1
            t14885 = t14893 * t14900
            t14883 = t14893 * t14902
            t14881 = t14893 * t14904
            t14879 = t14893 * t14906
            tfunc[..., c] = (0.111e3 / 0.32768e5*1j) * ((1 + t14893) ** (0.5e1 / 0.2e1)) * np.sqrt(0.145145e6) * ((1 - t14893) ** (-0.1e1 / 0.2e1)) * ((t14909 - 52700 * t14879 + 132804 * t14906 - 125116 * t14881 - 68696 * t14904 + 248124 * t14883 - 149476 * t14902 - 82356 * t14885 + 132714 * t14900 - 26436 * t14899 - 32356 * t14898 + 15804 * t14897 + 1552 * t14896 - 1948 * t14895 + 132 * t14892 + 52 * t14893 - 3) * np.exp((-1*1j) * (t14894 - 6 * phi2)) + (t14909 + 5270 * t14879 - 41106 * t14906 - 23498 * t14881 + 90210 * t14904 + 41478 * t14883 - 107874 * t14902 - 35914 * t14885 + 75228 * t14900 + 14770 * t14899 - 29958 * t14898 - 1806 * t14897 + 5982 * t14896 - 334 * t14895 - 390 * t14892 + 34 * t14893 + 3) * np.exp((-1*1j) * (t14894 + 6 * phi2)))

        if Bindx == 651:
            t14930 = np.cos(phi)
            t14929 = t14930 ** 2
            t14932 = t14930 * t14929
            t14933 = t14929 ** 2
            t14934 = t14930 * t14933
            t14935 = t14932 ** 2
            t14936 = t14930 * t14935
            t14937 = t14933 ** 2
            t14938 = t14930 * t14937
            t14939 = t14934 ** 2
            t14941 = t14935 ** 2
            t14943 = t14936 ** 2
            t14945 = t14937 ** 2
            t14947 = t14938 ** 2
            t14950 = -10505 * t14932 - 66660 * t14934 + 632060 * t14936 - 1681394 * t14938 + (1738386 * t14939 - 215012 * t14941 - 746356 * t14943 + 330429 * t14945 + 17391 * t14947 + 1661) * t14930
            t14949 = 9828 * t14929 - 104330 * t14933 + 391622 * t14935 - 426426 * t14937 - 657514 * t14939 + 1930786 * t14941 - 1458798 * t14943 + 187550 * t14945 + 127534 * t14947 - 252
            t14931 = 11 * phi1
            tfunc[..., c] = (0.37e2 / 0.16384e5*1j) * np.sqrt(0.105e3) * ((1 + t14930) ** (-0.1e1 / 0.2e1)) * ((1 - t14930) ** (-0.1e1 / 0.2e1)) * ((-t14949 + t14950) * np.exp((-1*1j) * (t14931 - 12 * phi2)) + (t14949 + t14950) * np.exp((-1*1j) * (t14931 + 12 * phi2)))

        if Bindx == 652:
            t14967 = np.cos(phi)
            t14966 = t14967 ** 2
            t14970 = t14966 ** 2
            t14969 = t14967 * t14966
            t14971 = t14969 ** 2
            t14973 = t14970 ** 2
            t14974 = t14967 * t14973
            t14975 = t14967 * t14974
            t14972 = t14967 * t14971
            t14978 = t14972 ** 2
            t14980 = t14973 ** 2
            t14983 = 1 + 52 * t14966 + 168 * t14970 - 364 * t14971 - 286 * t14973 + 572 * t14975 - 132 * t14978 - 11 * t14980
            t14982 = -132 * t14969 + 572 * t14972 - 286 * t14974 + ((168 * t14966 - 364) * t14975 + 52 * t14978 + t14980 - 11) * t14967
            t14968 = 11 * phi1
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.sqrt(0.28985e5) * np.sqrt((1 - t14967)) * np.sqrt((1 + t14967)) * ((t14982 + t14983) * np.exp((-1*1j) * (t14968 - 18 * phi2)) + (t14982 - t14983) * np.exp((-1*1j) * (t14968 + 18 * phi2)))

        if Bindx == 653:
            t14993 = np.sin(phi)
            t14989 = t14993 ** 2
            t14991 = t14993 * t14989 ** 2
            t14984 = np.cos(phi)
            t14985 = t14984 ** 2
            t14986 = t14985 ** 2
            tfunc[..., c] = -(0.111e3 / 0.65536e5) * np.exp((-10*1j) * phi1) * np.sqrt(0.780045e6) * t14991 ** 2 * (-580 * t14985 + 5 + (-39556 * t14985 + 8990 + 49445 * t14986) * t14986)

        if Bindx == 654:
            t15013 = np.cos(phi)
            t15012 = t15013 ** 2
            t15015 = t15013 * t15012
            t15016 = t15012 ** 2
            t15017 = t15013 * t15016
            t15018 = t15015 ** 2
            t15019 = t15013 * t15018
            t15020 = t15016 ** 2
            t15021 = t15013 * t15020
            t15022 = t15017 ** 2
            t15024 = t15018 ** 2
            t15026 = t15019 ** 2
            t15028 = t15020 ** 2
            t15032 = -10000 * t15015 + 61912 * t15017 + 2064 * t15019 - 969604 * t15021 + (3153808 * t15022 - 4423080 * t15024 + 2948720 * t15026 - 764150 * t15028 + 330) * t15013
            t15031 = 229245 * t15021 ** 2 - 6283 * t15012 + 108708 * t15016 - 740876 * t15018 + 2530550 * t15020 - 4659978 * t15022 + 4506484 * t15024 - 1830364 * t15026 - 137547 * t15028 + 61
            t15014 = 5 * phi1
            tfunc[..., c] = (0.111e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.5005e4) * ((t15031 + t15032) * np.exp((-2*1j) * (t15014 - 3 * phi2)) + (t15031 - t15032) * np.exp((-2*1j) * (t15014 + 3 * phi2)))

        if Bindx == 655:
            t15052 = np.cos(phi)
            t15051 = t15052 ** 2
            t15054 = t15052 * t15051
            t15055 = t15051 ** 2
            t15056 = t15052 * t15055
            t15057 = t15054 ** 2
            t15058 = t15052 * t15057
            t15059 = t15055 ** 2
            t15060 = t15052 * t15059
            t15061 = t15056 ** 2
            t15063 = t15057 ** 2
            t15065 = t15058 ** 2
            t15067 = t15059 ** 2
            t15071 = 21352 * t15054 - 82456 * t15056 - 10296 * t15058 + 647504 * t15060 + (-1324232 * t15061 + 933720 * t15063 - 68200 * t15065 - 115940 * t15067 - 1452) * t15052
            t15070 = 17391 * t15060 ** 2 + 2303 * t15051 - 47652 * t15055 + 301444 * t15057 - 767338 * t15059 + 721578 * t15061 + 165308 * t15063 - 653852 * t15065 + 260865 * t15067 - 47
            t15053 = 5 * phi1
            tfunc[..., c] = (0.37e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.3045e4) * ((t15070 + t15071) * np.exp((-2*1j) * (t15053 - 6 * phi2)) + (t15070 - t15071) * np.exp((-2*1j) * (t15053 + 6 * phi2)))

        if Bindx == 656:
            t15091 = np.cos(phi)
            t15111 = -10 * t15091
            t15090 = t15091 ** 2
            t15093 = t15091 * t15090
            t15094 = t15090 ** 2
            t15095 = t15091 * t15094
            t15096 = t15093 ** 2
            t15097 = t15091 * t15096
            t15098 = t15094 ** 2
            t15099 = t15091 * t15098
            t15100 = t15095 ** 2
            t15102 = t15096 ** 2
            t15104 = t15097 ** 2
            t15106 = t15098 ** 2
            t15110 = t15106 * t15111 - 80 * t15093 + 168 * t15095 + 208 * t15097 - 572 * t15099 + t15111 + (208 * t15100 + 168 * t15102 - 80 * t15104) * t15091
            t15109 = t15099 ** 2 + 41 * t15090 + 36 * t15094 - 364 * t15096 + 286 * t15098 + 286 * t15100 - 364 * t15102 + 36 * t15104 + 41 * t15106 + 1
            t15092 = 5 * phi1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.840565e6) * ((t15109 + t15110) * np.exp((-2*1j) * (t15092 - 9 * phi2)) + (t15109 - t15110) * np.exp((-2*1j) * (t15092 + 9 * phi2)))

        if Bindx == 657:
            t15112 = np.cos(phi)
            t15113 = t15112 ** 2
            t15114 = t15113 ** 2
            tfunc[..., c] = (-0.37e2 / 0.32768e5*1j) * (-12180 * t15113 + 315 + (-356004 * t15113 + 113274 + 346115 * t15114) * t15114) * t15112 * ((1 + t15112) ** (0.9e1 / 0.2e1)) * np.sqrt(0.111435e6) * np.exp((-9*1j) * phi1) * ((1 - t15112) ** (0.9e1 / 0.2e1))

        if Bindx == 658:
            t15135 = np.cos(phi)
            t15134 = t15135 ** 2
            t15138 = t15134 ** 2
            t15142 = t15138 ** 2
            t15150 = t15142 ** 2
            t15153 = 534905 * t15150
            t15152 = t15135 * t15153
            t15137 = t15135 * t15134
            t15140 = t15137 ** 2
            t15141 = t15135 * t15140
            t15148 = t15141 ** 2
            t15146 = t15140 ** 2
            t15139 = t15135 * t15138
            t15144 = t15139 ** 2
            t15136 = 3 * phi1
            t15127 = t15135 * t15142
            t15125 = t15135 * t15144
            t15123 = t15135 * t15146
            t15121 = t15135 * t15148
            tfunc[..., c] = (0.111e3 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 + t15135) ** (0.3e1 / 0.2e1)) * np.sqrt(0.715e3) * ((1 - t15135) ** (-0.1e1 / 0.2e1)) * ((3790184 * t15121 - 10295348 * t15123 + 7959224 * t15125 - 1424794 * t15127 - 2856 * t15134 + 1257 * t15135 - 43064 * t15137 + 106708 * t15138 + 357868 * t15139 - 1116696 * t15140 - 798312 * t15141 + 4708722 * t15142 - 8615320 * t15144 + 5260948 * t15146 + 2251096 * t15148 - 2674525 * t15150 + 3 + t15152) * np.exp((-3*1j) * (t15136 - 2 * phi2)) + (-2628676 * t15121 + 5494688 * t15123 - 6356452 * t15125 + 4410122 * t15127 - 2196 * t15134 + 1269 * t15135 - 44396 * t15137 + 73264 * t15138 + 426088 * t15139 - 631188 * t15140 - 1837548 * t15141 + 2310882 * t15142 - 4374940 * t15144 + 4523768 * t15146 - 2434492 * t15148 + t15152 - 3 + t15153) * np.exp((-3*1j) * (t15136 + 2 * phi2)))

        if Bindx == 659:
            t15174 = np.cos(phi)
            t15173 = t15174 ** 2
            t15177 = t15173 ** 2
            t15176 = t15174 * t15173
            t15179 = t15176 ** 2
            t15181 = t15177 ** 2
            t15178 = t15174 * t15177
            t15183 = t15178 ** 2
            t15185 = t15179 ** 2
            t15180 = t15174 * t15179
            t15187 = t15180 ** 2
            t15189 = t15181 ** 2
            t15182 = t15174 * t15181
            t15191 = t15182 ** 2
            t15194 = 4366 * t15173 - 9836 * t15177 - 204380 * t15179 + 1267552 * t15181 - 2960672 * t15183 + 3163628 * t15185 - 1221028 * t15187 - 283030 * t15189 + 243474 * t15191 - 74
            t15193 = 39539 * t15176 - 288772 * t15178 + 903188 * t15180 - 1104818 * t15182 + (-286910 * t15183 + 1999612 * t15185 - 1723724 * t15187 + 423181 * t15189 + 40579 * t15191 - 1875) * t15174
            t15175 = 3 * phi1
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.sqrt(0.435e3) * np.sqrt(0.2e1) * ((1 + t15174) ** (-0.1e1 / 0.2e1)) * ((1 - t15174) ** (-0.1e1 / 0.2e1)) * ((t15193 - t15194) * np.exp((-3*1j) * (t15175 - 4 * phi2)) + (t15193 + t15194) * np.exp((-3*1j) * (t15175 + 4 * phi2)))

        if Bindx == 660:
            t15211 = np.cos(phi)
            t15210 = t15211 ** 2
            t15213 = t15210 ** 2
            t15212 = t15211 * t15210
            t15215 = t15212 ** 2
            t15216 = t15213 ** 2
            t15219 = t15215 ** 2
            t15220 = t15211 * t15219
            t15221 = t15211 * t15220
            t15223 = t15216 ** 2
            t15226 = -1 - 32 * t15210 + 12 * t15213 + 208 * t15215 - 286 * t15216 + 156 * t15219 - 48 * t15221 - 9 * t15223
            t15225 = 48 * t15212 - 12 * t15220 + ((-208 * t15210 + 286) * t15216 - 156 * t15213 + 32 * t15221 + t15223 + 9) * t15211
            tfunc[..., c] = (-0.37e2 / 0.131072e6*1j) * np.sqrt(0.5883955e7) * np.sqrt(0.2e1) * np.sqrt((1 - t15211)) * np.sqrt((1 + t15211)) * ((t15225 + t15226) * np.exp((-9*1j) * (phi1 - 2 * phi2)) + (t15225 - t15226) * np.exp((-9*1j) * (phi1 + 2 * phi2)))

        if Bindx == 661:
            t15236 = np.sin(phi)
            t15233 = t15236 ** 2
            t15234 = t15233 ** 2
            t15227 = np.cos(phi)
            t15228 = t15227 ** 2
            t15229 = t15228 ** 2
            t15231 = t15229 ** 2
            tfunc[..., c] = (0.555e3 / 0.65536e5) * np.exp((-8*1j) * phi1) * np.sqrt(0.14858e5) * t15234 ** 2 * (-18270 * t15229 - 267003 * t15231 - 7 + (113274 * t15229 + 207669 * t15231 + 945) * t15228)

        if Bindx == 662:
            t15256 = np.cos(phi)
            t15255 = t15256 ** 2
            t15258 = t15256 * t15255
            t15259 = t15255 ** 2
            t15260 = t15256 * t15259
            t15261 = t15258 ** 2
            t15262 = t15256 * t15261
            t15263 = t15259 ** 2
            t15264 = t15256 * t15263
            t15265 = t15260 ** 2
            t15267 = t15261 ** 2
            t15269 = t15262 ** 2
            t15271 = t15263 ** 2
            t15275 = -23408 * t15258 + 319760 * t15260 - 2088624 * t15262 + 7421664 * t15264 + (-15015504 * t15265 + 17217648 * t15267 - 10399632 * t15269 + 2567544 * t15271 + 552) * t15256
            t15274 = 962829 * t15264 ** 2 - 10043 * t15255 + 193788 * t15259 - 1394092 * t15261 + 4798186 * t15263 - 8496810 * t15265 + 7120428 * t15267 - 1111164 * t15269 - 2063205 * t15271 + 83
            t15257 = 4 * phi1
            tfunc[..., c] = (0.185e3 / 0.65536e5) * ((t15274 - t15275) * np.exp((-2*1j) * (t15257 - 3 * phi2)) + (t15274 + t15275) * np.exp((-2*1j) * (t15257 + 3 * phi2))) * np.sqrt(0.429e3)

        if Bindx == 663:
            t15295 = np.cos(phi)
            t15294 = t15295 ** 2
            t15297 = t15295 * t15294
            t15298 = t15294 ** 2
            t15299 = t15295 * t15298
            t15300 = t15297 ** 2
            t15301 = t15295 * t15300
            t15302 = t15298 ** 2
            t15303 = t15295 * t15302
            t15304 = t15299 ** 2
            t15306 = t15300 ** 2
            t15308 = t15301 ** 2
            t15310 = t15302 ** 2
            t15314 = -42032 * t15297 + 466136 * t15299 - 2182752 * t15301 + 4833400 * t15303 + (-4923568 * t15304 + 1339944 * t15306 + 1156672 * t15308 - 649264 * t15310 + 1464) * t15295
            t15313 = 121737 * t15303 ** 2 + 20569 * t15294 - 201300 * t15298 + 645788 * t15300 - 274274 * t15302 - 2485626 * t15304 + 5226572 * t15306 - 3940100 * t15308 + 886941 * t15310 - 307
            t15296 = 2 * phi1
            tfunc[..., c] = (0.111e3 / 0.32768e5) * ((t15313 + t15314) * np.exp((-4*1j) * (t15296 - 3 * phi2)) + (t15313 - t15314) * np.exp((-4*1j) * (t15296 + 3 * phi2))) * np.sqrt(0.29e2)

        if Bindx == 664:
            t15333 = np.cos(phi)
            t15332 = t15333 ** 2
            t15335 = t15333 * t15332
            t15336 = t15332 ** 2
            t15337 = t15333 * t15336
            t15338 = t15335 ** 2
            t15339 = t15333 * t15338
            t15341 = t15337 ** 2
            t15343 = t15338 ** 2
            t15345 = t15339 ** 2
            t15340 = t15336 ** 2
            t15347 = t15340 ** 2
            t15348 = t15333 * t15347
            t15351 = 16 * t15335 - 144 * t15337 + 208 * t15339 - 8 * t15348 + 8 * (-26 * t15341 + 18 * t15343 - 2 * t15345 + 1) * t15333
            t15350 = t15333 * t15348 - 23 * t15332 + 60 * t15336 + 52 * t15338 - 286 * t15340 + 286 * t15341 - 52 * t15343 - 60 * t15345 + 23 * t15347 - 1
            t15334 = 4 * phi1
            tfunc[..., c] = (0.111e3 / 0.131072e6) * ((t15350 + t15351) * np.exp((-2*1j) * (t15334 - 9 * phi2)) + (t15350 - t15351) * np.exp((-2*1j) * (t15334 + 9 * phi2))) * np.sqrt(0.3530373e7)

        if Bindx == 665:
            t15352 = np.cos(phi)
            t15353 = t15352 ** 2
            t15354 = t15353 ** 2
            t15356 = t15354 ** 2
            tfunc[..., c] = (0.555e3 / 0.32768e5*1j) * (-3654 * t15354 - 29667 * t15356 - 7 + (16182 * t15354 + 18879 * t15356 + 315) * t15353) * t15352 * ((1 + t15352) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1062347e7) * np.exp((-7*1j) * phi1) * ((1 - t15352) ** (0.7e1 / 0.2e1))

        if Bindx == 666:
            t15377 = np.cos(phi)
            t15376 = t15377 ** 2
            t15380 = t15376 ** 2
            t15384 = t15380 ** 2
            t15385 = t15377 * t15384
            t15395 = 12516777 * t15385 ** 2
            t15392 = t15384 ** 2
            t15379 = t15377 * t15376
            t15382 = t15379 ** 2
            t15383 = t15377 * t15382
            t15390 = t15383 ** 2
            t15388 = t15382 ** 2
            t15381 = t15377 * t15380
            t15386 = t15381 ** 2
            t15378 = 7 * phi1
            t15367 = t15377 * t15386
            t15365 = t15377 * t15388
            t15363 = t15377 * t15390
            t15361 = t15377 * t15392
            tfunc[..., c] = (0.185e3 / 0.65536e5*1j) * np.sqrt(0.2e1) * np.sqrt((1 + t15377)) * np.sqrt(0.3e1) * ((1 - t15377) ** (-0.1e1 / 0.2e1)) * ((-41722590 * t15361 + 134634240 * t15363 - 162963528 * t15365 + 85630272 * t15367 - 75919 * t15376 + 8194 * t15377 - 291648 * t15379 + 1801156 * t15380 + 2584568 * t15381 - 16155468 * t15382 - 6530048 * t15383 + 69986774 * t15384 - 11382228 * t15385 - 159777618 * t15386 + 190293012 * t15388 - 99152508 * t15390 + 596037 * t15392 + 525 + t15395) * np.exp((-1*1j) * (t15378 - 6 * phi2)) + (16689036 * t15361 - 77414688 * t15363 + 149219616 * t15365 - 154033152 * t15367 + 58481 * t15376 + 9244 * t15377 - 426048 * t15379 - 1083460 * t15380 + 5469184 * t15381 + 8101716 * t15382 - 30787232 * t15383 - 32669494 * t15384 + 91274040 * t15385 + 79885806 * t15386 - 121890132 * t15388 + 112896420 * t15390 - 57815589 * t15392 - 525 + t15395) * np.exp((-1*1j) * (t15378 + 6 * phi2)))

        if Bindx == 667:
            t15416 = np.cos(phi)
            t15415 = t15416 ** 2
            t15418 = t15416 * t15415
            t15419 = t15415 ** 2
            t15420 = t15416 * t15419
            t15421 = t15418 ** 2
            t15422 = t15416 * t15421
            t15423 = t15419 ** 2
            t15424 = t15416 * t15423
            t15425 = t15420 ** 2
            t15427 = t15421 ** 2
            t15429 = t15422 ** 2
            t15431 = t15423 ** 2
            t15433 = t15424 ** 2
            t15436 = 1771 * t15418 - 2436 * t15420 - 52300 * t15422 + 274366 * t15424 + (-582318 * t15425 + 614588 * t15427 - 304172 * t15429 + 39525 * t15431 + 11067 * t15433 - 91) * t15416
            t15435 = -1350 * t15415 + 18212 * t15419 - 101708 * t15421 + 278088 * t15423 - 372376 * t15425 + 168700 * t15427 + 127596 * t15429 - 168826 * t15431 + 51646 * t15433 + 18
            t15417 = 7 * phi1
            tfunc[..., c] = (0.111e3 / 0.32768e5*1j) * np.sqrt(0.4147e4) * np.sqrt(0.2e1) * ((1 + t15416) ** (-0.1e1 / 0.2e1)) * ((1 - t15416) ** (-0.1e1 / 0.2e1)) * ((-t15435 + t15436) * np.exp((-1*1j) * (t15417 - 12 * phi2)) + (t15435 + t15436) * np.exp((-1*1j) * (t15417 + 12 * phi2)))

        if Bindx == 668:
            t15453 = np.cos(phi)
            t15452 = t15453 ** 2
            t15471 = 16 * t15452
            t15455 = t15452 ** 2
            t15459 = t15455 ** 2
            t15470 = 110 * t15459
            t15456 = t15453 * t15455
            t15457 = t15453 * t15456
            t15461 = t15456 ** 2
            t15463 = t15457 ** 2
            t15466 = t15459 ** 2
            t15469 = 1 + t15471 - 60 * t15455 + 32 * t15457 + t15470 - 176 * t15461 + 84 * t15463 - 7 * t15466
            t15468 = 84 * t15456 + ((t15471 - 60) * t15463 - 176 * t15457 + 32 * t15461 + t15466 + t15470 - 7) * t15453
            t15454 = 7 * phi1
            tfunc[..., c] = (-0.111e3 / 0.131072e6*1j) * np.sqrt(0.4172259e7) * np.sqrt(0.2e1) * np.sqrt((1 + t15453)) * np.sqrt((1 - t15453)) * ((t15468 + t15469) * np.exp((-1*1j) * (t15454 - 18 * phi2)) + (t15468 - t15469) * np.exp((-1*1j) * (t15454 + 18 * phi2)))

        if Bindx == 669:
            t15482 = np.sin(phi)
            t15479 = t15482 ** 2
            t15480 = t15482 * t15479
            t15472 = np.cos(phi)
            t15473 = t15472 ** 2
            t15474 = t15473 ** 2
            t15476 = t15474 ** 2
            t15475 = t15473 * t15474
            tfunc[..., c] = -(0.37e2 / 0.65536e5) * np.exp((-6*1j) * phi1) * np.sqrt(0.3187041e7) * t15480 ** 2 * (23625 * t15474 + 606825 * t15476 + 7 + (-182700 + 471975 * t15475) * t15475 + (-890010 * t15476 - 1050) * t15473)

        if Bindx == 670:
            t15502 = np.cos(phi)
            t15501 = t15502 ** 2
            t15503 = t15502 * t15501
            t15504 = t15501 ** 2
            t15505 = t15502 * t15504
            t15506 = t15503 ** 2
            t15507 = t15502 * t15506
            t15508 = t15504 ** 2
            t15509 = t15502 * t15508
            t15510 = t15505 ** 2
            t15512 = t15506 ** 2
            t15514 = t15507 ** 2
            t15516 = t15508 ** 2
            t15520 = 8594320 * t15503 - 114240504 * t15505 + 692377200 * t15507 - 2259242700 * t15509 + (4235278320 * t15510 - 4564942200 * t15512 + 2628172560 * t15514 - 625838850 * t15516 - 190914) * t15502
            t15519 = 312919425 * t15509 ** 2 - 751815 * t15501 + 15427860 * t15504 - 110188316 * t15506 + 331423950 * t15508 - 336305970 * t15510 - 376057500 * t15512 + 1209604500 * t15514 - 1046044935 * t15516 + 5569
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * ((t15519 + t15520) * np.exp((-6*1j) * (phi1 - phi2)) + (t15519 - t15520) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 671:
            t15540 = np.cos(phi)
            t15539 = t15540 ** 2
            t15541 = t15540 * t15539
            t15542 = t15539 ** 2
            t15543 = t15540 * t15542
            t15544 = t15541 ** 2
            t15545 = t15540 * t15544
            t15546 = t15542 ** 2
            t15547 = t15540 * t15546
            t15548 = t15543 ** 2
            t15550 = t15544 ** 2
            t15552 = t15545 ** 2
            t15554 = t15546 ** 2
            t15558 = 4040 * t15541 - 28824 * t15543 + 83880 * t15545 - 89104 * t15547 + (-49320 * t15548 + 195672 * t15550 - 160456 * t15552 + 44268 * t15554 - 156) * t15540
            t15557 = 11067 * t15547 ** 2 - 405 * t15539 + 7212 * t15542 - 55180 * t15544 + 204270 * t15546 - 395310 * t15548 + 401228 * t15550 - 187116 * t15552 + 14229 * t15554 + 5
            tfunc[..., c] = (0.185e3 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.12441e5) * ((t15557 - t15558) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (t15557 + t15558) * np.exp((-6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 672:
            t15578 = np.cos(phi)
            t15597 = -6 * t15578
            t15577 = t15578 ** 2
            t15579 = t15578 * t15577
            t15580 = t15577 ** 2
            t15581 = t15578 * t15580
            t15582 = t15579 ** 2
            t15583 = t15578 * t15582
            t15584 = t15580 ** 2
            t15585 = t15578 * t15584
            t15586 = t15581 ** 2
            t15588 = t15582 ** 2
            t15590 = t15583 ** 2
            t15592 = t15584 ** 2
            t15596 = t15592 * t15597 + 16 * t15579 + 24 * t15581 - 144 * t15583 + 220 * t15585 + t15597 + (-144 * t15586 + 24 * t15588 + 16 * t15590) * t15578
            t15595 = t15585 ** 2 + 9 * t15577 - 60 * t15580 + 116 * t15582 - 66 * t15584 - 66 * t15586 + 116 * t15588 - 60 * t15590 + 9 * t15592 + 1
            tfunc[..., c] = (0.555e3 / 0.262144e6) * np.sqrt(0.1390753e7) * np.sqrt(0.2e1) * ((t15595 + t15596) * np.exp((-6*1j) * (phi1 - 3 * phi2)) + (t15595 - t15596) * np.exp((-6*1j) * (phi1 + 3 * phi2)))

        if Bindx == 673:
            t15598 = np.cos(phi)
            t15599 = t15598 ** 2
            t15600 = t15599 ** 2
            t15602 = t15600 ** 2
            t15601 = t15599 * t15600
            tfunc[..., c] = (-0.111e3 / 0.32768e5*1j) * (61425 * t15600 + 876525 * t15602 + 91 + (-339300 + 471975 * t15601) * t15601 + (-1051830 * t15602 - 4550) * t15599) * t15598 * ((1 + t15598) ** (0.5e1 / 0.2e1)) * np.sqrt(0.163438e6) * np.exp((-5*1j) * phi1) * ((1 - t15598) ** (0.5e1 / 0.2e1))

        if Bindx == 674:
            t15625 = np.cos(phi)
            t15624 = t15625 ** 2
            t15627 = t15625 * t15624
            t15628 = t15624 ** 2
            t15629 = t15625 * t15628
            t15630 = t15627 ** 2
            t15631 = t15625 * t15630
            t15632 = t15628 ** 2
            t15633 = t15625 * t15632
            t15634 = t15629 ** 2
            t15636 = t15630 ** 2
            t15638 = t15631 ** 2
            t15640 = t15632 ** 2
            t15642 = t15633 ** 2
            t15645 = -51795 * t15627 + 416556 * t15629 + 578884 * t15631 - 17796350 * t15633 + (78664950 * t15634 - 163760100 * t15636 + 181723860 * t15638 - 103847985 * t15640 + 24070725 * t15642 + 1255) * t15625
            t15644 = -101379 * t15624 + 2375380 * t15628 - 21680820 * t15630 + 100393050 * t15632 - 264405570 * t15634 + 413742420 * t15636 - 381086100 * t15638 + 190880175 * t15640 - 40117875 * t15642 + 719
            t15626 = 5 * phi1
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.sqrt(0.39e2) * ((1 + t15625) ** (-0.1e1 / 0.2e1)) * ((1 - t15625) ** (-0.1e1 / 0.2e1)) * ((t15644 + t15645) * np.exp((-1*1j) * (t15626 - 6 * phi2)) + (-t15644 + t15645) * np.exp((-1*1j) * (t15626 + 6 * phi2)))

        if Bindx == 675:
            t15666 = np.cos(phi)
            t15665 = t15666 ** 2
            t15669 = t15665 ** 2
            t15668 = t15666 * t15665
            t15671 = t15668 ** 2
            t15673 = t15669 ** 2
            t15670 = t15666 * t15669
            t15675 = t15670 ** 2
            t15677 = t15671 ** 2
            t15672 = t15666 * t15671
            t15679 = t15672 ** 2
            t15681 = t15673 ** 2
            t15674 = t15666 * t15673
            t15683 = t15674 ** 2
            t15686 = 348 * t15665 - 3914 * t15669 + 10086 * t15671 + 23286 * t15673 - 164570 * t15675 + 341538 * t15677 - 348750 * t15679 + 178870 * t15681 - 36890 * t15683 - 4
            t15685 = -3357 * t15668 + 31212 * t15670 - 137620 * t15672 + 328422 * t15674 + (-439494 * t15675 + 312236 * t15677 - 85188 * t15679 - 17391 * t15681 + 11067 * t15683 + 113) * t15666
            t15667 = 5 * phi1
            tfunc[..., c] = (0.555e3 / 0.16384e5*1j) * np.sqrt(0.319e3) * ((1 + t15666) ** (-0.1e1 / 0.2e1)) * ((1 - t15666) ** (-0.1e1 / 0.2e1)) * ((t15685 + t15686) * np.exp((-1*1j) * (t15667 - 12 * phi2)) + (t15685 - t15686) * np.exp((-1*1j) * (t15667 + 12 * phi2)))

        if Bindx == 676:
            t15705 = np.cos(phi)
            t15704 = t15705 ** 2
            t15708 = t15704 ** 2
            t15707 = t15705 * t15704
            t15710 = t15707 ** 2
            t15712 = t15708 ** 2
            t15709 = t15705 * t15708
            t15714 = t15709 ** 2
            t15716 = t15710 ** 2
            t15711 = t15705 * t15710
            t15718 = t15711 ** 2
            t15720 = t15712 ** 2
            t15723 = -1 - 4 * t15704 + 40 * t15708 - 100 * t15710 + 110 * t15712 - 44 * t15714 - 16 * t15716 + 20 * t15718 - 5 * t15720
            t15722 = -20 * t15707 + 16 * t15709 + 44 * t15711 + (-110 * t15712 + 100 * t15714 - 40 * t15716 + 4 * t15718 + t15720 + 5) * t15705
            t15706 = 5 * phi1
            tfunc[..., c] = (-0.555e3 / 0.65536e5*1j) * np.sqrt(0.320943e6) * np.sqrt((1 - t15705)) * np.sqrt((1 + t15705)) * ((t15722 + t15723) * np.exp((-1*1j) * (t15706 - 18 * phi2)) + (t15722 - t15723) * np.exp((-1*1j) * (t15706 + 18 * phi2)))

        if Bindx == 677:
            t15734 = np.sin(phi)
            t15732 = t15734 ** 2
            t15724 = np.cos(phi)
            t15725 = t15724 ** 2
            t15726 = t15725 ** 2
            t15727 = t15725 * t15726
            t15730 = t15727 ** 2
            t15728 = t15726 ** 2
            tfunc[..., c] = (0.111e3 / 0.32768e5) * np.exp((-4*1j) * phi1) * np.sqrt(0.24871e5) * t15732 ** 2 * (-52325 * t15726 + 470925 * t15727 - 1950975 * t15728 - 4032015 * t15730 - 13 + (4032015 * t15728 + 1550775 * t15730 + 2093) * t15725)

        if Bindx == 678:
            t15754 = np.cos(phi)
            t15753 = t15754 ** 2
            t15756 = t15754 * t15753
            t15757 = t15753 ** 2
            t15758 = t15754 * t15757
            t15759 = t15756 ** 2
            t15760 = t15754 * t15759
            t15761 = t15757 ** 2
            t15762 = t15754 * t15761
            t15763 = t15758 ** 2
            t15765 = t15759 ** 2
            t15767 = t15760 ** 2
            t15769 = t15761 ** 2
            t15773 = -63400 * t15756 + 878136 * t15758 - 5435400 * t15760 + 17806800 * t15762 + (-33091320 * t15763 + 35061000 * t15765 - 19742040 * t15767 + 4584900 * t15769 + 1324) * t15754
            t15772 = 3438675 * t15762 ** 2 + 2755 * t15753 - 70580 * t15757 + 739284 * t15759 - 4036450 * t15761 + 12628770 * t15763 - 23342100 * t15765 + 25082100 * t15767 - 14442435 * t15769 - 19
            t15755 = 2 * phi1
            tfunc[..., c] = (0.37e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.6279e4) * ((t15772 - t15773) * np.exp((-2*1j) * (t15755 - 3 * phi2)) + (t15772 + t15773) * np.exp((-2*1j) * (t15755 + 3 * phi2)))

        if Bindx == 679:
            t15793 = np.cos(phi)
            t15792 = t15793 ** 2
            t15794 = t15793 * t15792
            t15795 = t15792 ** 2
            t15796 = t15793 * t15795
            t15797 = t15794 ** 2
            t15798 = t15793 * t15797
            t15799 = t15795 ** 2
            t15800 = t15793 * t15799
            t15801 = t15796 ** 2
            t15803 = t15797 ** 2
            t15805 = t15798 ** 2
            t15807 = t15799 ** 2
            t15811 = 136 * t15794 - 1620 * t15796 + 9168 * t15798 - 27268 * t15800 + (45256 * t15801 - 42284 * t15803 + 20832 * t15805 - 4216 * t15807 - 4) * t15793
            t15810 = 1581 * t15800 ** 2 - 91 * t15792 + 1316 * t15795 - 7164 * t15797 + 18862 * t15799 - 25418 * t15801 + 15284 * t15803 + 372 * t15805 - 4743 * t15807 + 1
            tfunc[..., c] = (0.555e3 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.51359e5) * ((t15810 + t15811) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t15810 - t15811) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 680:
            t15830 = np.cos(phi)
            t15829 = t15830 ** 2
            t15832 = t15830 * t15829
            t15833 = t15829 ** 2
            t15834 = t15830 * t15833
            t15835 = t15832 ** 2
            t15836 = t15830 * t15835
            t15838 = t15834 ** 2
            t15840 = t15835 ** 2
            t15842 = t15836 ** 2
            t15837 = t15833 ** 2
            t15844 = t15837 ** 2
            t15845 = t15830 * t15844
            t15848 = -24 * t15832 + 56 * t15834 - 56 * t15836 - 4 * t15845 + 4 * (14 * t15838 - 14 * t15840 + 6 * t15842 + 1) * t15830
            t15847 = t15830 * t15845 + t15829 + 20 * t15833 - 84 * t15835 + 154 * t15837 - 154 * t15838 + 84 * t15840 - 20 * t15842 - t15844 - 1
            t15831 = 2 * phi1
            tfunc[..., c] = (0.555e3 / 0.131072e6) * np.sqrt(0.1054527e7) * np.sqrt(0.2e1) * ((t15847 + t15848) * np.exp((-2*1j) * (t15831 - 9 * phi2)) + (t15847 - t15848) * np.exp((-2*1j) * (t15831 + 9 * phi2)))

        if Bindx == 681:
            t15849 = np.cos(phi)
            t15850 = t15849 ** 2
            t15851 = t15850 ** 2
            t15852 = t15850 * t15851
            t15855 = t15852 ** 2
            t15853 = t15851 ** 2
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * (-345345 * t15851 + 2220075 * t15852 - 7153575 * t15853 - 10235115 * t15855 - 429 + (12096045 * t15853 + 3411705 * t15855 + 23023) * t15850) * t15849 * ((1 + t15849) ** (0.3e1 / 0.2e1)) * np.sqrt(0.67830e5) * np.exp((-3*1j) * phi1) * ((1 - t15849) ** (0.3e1 / 0.2e1))

        if Bindx == 682:
            t15877 = np.cos(phi)
            t15876 = t15877 ** 2
            t15879 = t15876 ** 2
            t15883 = t15879 ** 2
            t15884 = t15877 * t15883
            t15897 = 687735 * t15884 ** 2
            t15878 = t15877 * t15876
            t15881 = t15878 ** 2
            t15880 = t15877 * t15879
            t15885 = t15880 ** 2
            t15887 = t15881 ** 2
            t15882 = t15877 * t15881
            t15889 = t15882 ** 2
            t15891 = t15883 ** 2
            t15896 = -1639 * t15876 + 40100 * t15879 - 377412 * t15881 + 1780290 * t15883 - 4724730 * t15885 + 7382820 * t15887 - 6742500 * t15889 + 3330795 * t15891 + 11 - t15897
            t15895 = 6175 * t15878 - 93356 * t15880 + 657244 * t15882 - 2559690 * t15884 + (5958690 * t15885 - 8499900 * t15887 + 7281900 * t15889 - 3438675 * t15891 + t15897 - 123) * t15877
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.sqrt(0.115115e6) * ((1 + t15877) ** (-0.1e1 / 0.2e1)) * ((1 - t15877) ** (-0.1e1 / 0.2e1)) * ((t15895 + t15896) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t15895 - t15896) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 683:
            t15918 = np.cos(phi)
            t15917 = t15918 ** 2
            t15919 = t15918 * t15917
            t15920 = t15917 ** 2
            t15921 = t15918 * t15920
            t15922 = t15919 ** 2
            t15923 = t15918 * t15922
            t15924 = t15920 ** 2
            t15925 = t15918 * t15924
            t15926 = t15921 ** 2
            t15928 = t15922 ** 2
            t15930 = t15923 ** 2
            t15932 = t15924 ** 2
            t15934 = t15925 ** 2
            t15937 = -2089 * t15919 + 17036 * t15921 - 56260 * t15923 + 76654 * t15925 + (1906 * t15926 - 134036 * t15928 + 166284 * t15930 - 86955 * t15932 + 17391 * t15934 + 69) * t15918
            t15936 = 760 * t15917 - 12422 * t15920 + 82362 * t15922 - 286302 * t15924 + 578658 * t15926 - 705970 * t15928 + 513422 * t15930 - 205282 * t15932 + 34782 * t15934 - 8
            tfunc[..., c] = (0.37e2 / 0.16384e5*1j) * np.sqrt(0.70035e5) * ((1 + t15918) ** (-0.1e1 / 0.2e1)) * ((1 - t15918) ** (-0.1e1 / 0.2e1)) * ((-t15936 + t15937) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t15936 + t15937) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 684:
            t15954 = np.cos(phi)
            t15953 = t15954 ** 2
            t15955 = t15954 * t15953
            t15957 = t15955 ** 2
            t15958 = t15954 * t15957
            t15959 = t15954 * t15958
            t15970 = -70 * t15959
            t15956 = t15953 * t15955
            t15961 = t15956 ** 2
            t15964 = t15958 ** 2
            t15966 = t15959 ** 2
            t15969 = -4 * t15953 + 84 * t15961 + 20 * t15964 - 3 * t15966 + t15970 + 1 + (28 - 56 * t15957) * t15957
            t15968 = 20 * t15955 - 56 * t15956 + 84 * t15958 + (28 * t15961 - 4 * t15964 + t15966 + t15970 - 3) * t15954
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.sqrt(0.19332995e8) * np.sqrt((1 + t15954)) * np.sqrt((1 - t15954)) * ((t15968 + t15969) * np.exp((-3*1j) * (phi1 - 6 * phi2)) + (t15968 - t15969) * np.exp((-3*1j) * (phi1 + 6 * phi2)))

        if Bindx == 685:
            t15972 = np.cos(phi)
            t15973 = t15972 ** 2
            t15974 = t15973 ** 2
            t15975 = t15973 * t15974
            t15978 = t15975 ** 2
            t15976 = t15974 ** 2
            t15971 = np.sin(phi)
            tfunc[..., c] = -(0.111e3 / 0.131072e6) * np.exp((-2*1j) * phi1) * np.sqrt(0.3230e4) * t15971 ** 2 * (644644 * t15974 - 6446440 * t15975 + 112896420 * t15978 + 143 + (31081050 + 23881935 * t15976) * t15976 + (-80120040 * t15976 - 81880920 * t15978 - 24024) * t15973)

        if Bindx == 686:
            t16000 = np.cos(phi)
            t15999 = t16000 ** 2
            t16001 = t16000 * t15999
            t16002 = t15999 ** 2
            t16003 = t16000 * t16002
            t16004 = t16001 ** 2
            t16005 = t16000 * t16004
            t16006 = t16002 ** 2
            t16007 = t16000 * t16006
            t16008 = t16003 ** 2
            t16010 = t16004 ** 2
            t16012 = t16005 ** 2
            t16014 = t16006 ** 2
            t16018 = -42448 * t16001 + 605864 * t16003 - 3833520 * t16005 + 12730500 * t16007 + (-23782320 * t16008 + 25136040 * t16010 - 14024400 * t16012 + 3209430 * t16014 + 854) * t16000
            t16017 = 4814145 * t16007 ** 2 + 9513 * t15999 - 236572 * t16002 + 2269652 * t16004 - 10941730 * t16006 + 29741790 * t16008 - 47677740 * t16010 + 44716260 * t16012 - 22695255 * t16014 - 63
            tfunc[..., c] = (0.37e2 / 0.131072e6) * ((t16017 - t16018) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t16017 + t16018) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.49335e5)

        if Bindx == 687:
            t16038 = np.cos(phi)
            t16037 = t16038 ** 2
            t16039 = t16038 * t16037
            t16040 = t16037 ** 2
            t16041 = t16038 * t16040
            t16042 = t16039 ** 2
            t16043 = t16038 * t16042
            t16044 = t16040 ** 2
            t16045 = t16038 * t16044
            t16046 = t16041 ** 2
            t16048 = t16042 ** 2
            t16050 = t16043 ** 2
            t16052 = t16044 ** 2
            t16056 = -25144 * t16039 + 232568 * t16041 - 975576 * t16043 + 2214240 * t16045 + (-2916648 * t16046 + 2237704 * t16048 - 930248 * t16050 + 162316 * t16052 + 788) * t16038
            t16055 = 121737 * t16045 ** 2 + 873 * t16037 - 16940 * t16040 + 141484 * t16042 - 604982 * t16044 + 1435574 * t16046 - 1977388 * t16048 + 1577900 * t16050 - 678249 * t16052 - 9
            tfunc[..., c] = (0.111e3 / 0.65536e5) * ((t16055 - t16056) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (t16055 + t16056) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.3335e4)

        if Bindx == 688:
            t16076 = np.cos(phi)
            t16075 = t16076 ** 2
            t16077 = t16076 * t16075
            t16080 = t16077 ** 2
            t16095 = -28 * t16080 ** 2
            t16078 = t16075 ** 2
            t16079 = t16076 * t16078
            t16081 = t16076 * t16080
            t16082 = t16078 ** 2
            t16083 = t16076 * t16082
            t16084 = t16079 ** 2
            t16088 = t16081 ** 2
            t16090 = t16082 ** 2
            t16094 = 16 * t16077 - 56 * t16079 + 112 * t16081 - 140 * t16083 + 2 * (56 * t16084 + 8 * t16088 - t16090 + t16095 - 1) * t16076
            t16093 = t16083 ** 2 - 7 * t16075 + 20 * t16078 - 28 * t16080 + 14 * t16082 + 14 * t16084 + 20 * t16088 - 7 * t16090 + t16095 + 1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * ((t16093 + t16094) * np.exp((-2*1j) * (phi1 - 9 * phi2)) + (t16093 - t16094) * np.exp((-2*1j) * (phi1 + 9 * phi2))) * np.sqrt(0.405992895e9)

        if Bindx == 689:
            t16096 = np.cos(phi)
            t16114 = 1 - t16096
            t16097 = t16096 ** 2
            t16099 = t16097 ** 2
            t16103 = t16099 ** 2
            t16098 = t16096 * t16097
            t16101 = t16098 ** 2
            t16102 = t16096 * t16101
            t16100 = t16096 * t16099
            tfunc[..., c] = (0.111e3 / 0.65536e5*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.38e2) * np.sqrt((1 + t16096)) * t16096 * (-t16114 * (-619109400 * t16100 ** 2 + 738168900 * t16101 ** 2 - 463991880 * t16102 ** 2 + 12155 + (293543250 + 119409675 * t16103) * t16103) + 78278200 * t16101 - 78278200 * t16102 - 10958948 * t16099 + 10958948 * t16100 + 680680 * t16097 - 680680 * t16098) * (t16114 ** (-0.1e1 / 0.2e1))

        if Bindx == 690:
            t16135 = np.cos(phi)
            t16134 = t16135 ** 2
            t16137 = t16134 ** 2
            t16136 = t16135 * t16134
            t16139 = t16136 ** 2
            t16141 = t16137 ** 2
            t16138 = t16135 * t16137
            t16143 = t16138 ** 2
            t16145 = t16139 ** 2
            t16140 = t16135 * t16139
            t16147 = t16140 ** 2
            t16149 = t16141 ** 2
            t16142 = t16135 * t16141
            t16151 = t16142 ** 2
            t16154 = 1071 * t16134 - 26796 * t16137 + 256732 * t16139 - 1226850 * t16141 + 3282210 * t16143 - 5145180 * t16145 + 4692780 * t16147 - 2305935 * t16149 + 471975 * t16151 - 7
            t16153 = 18221 * t16136 - 274596 * t16138 + 1892532 * t16140 - 7106150 * t16142 + (15760710 * t16143 - 21240180 * t16145 + 17098980 * t16147 - 7565085 * t16149 + 1415925 * t16151 - 357) * t16135
            tfunc[..., c] = (0.37e2 / 0.65536e5*1j) * np.sqrt(0.167739e6) * ((1 + t16135) ** (-0.1e1 / 0.2e1)) * ((1 - t16135) ** (-0.1e1 / 0.2e1)) * ((t16153 - t16154) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t16153 + t16154) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 691:
            t16175 = np.cos(phi)
            t16174 = t16175 ** 2
            t16177 = t16174 ** 2
            t16176 = t16175 * t16174
            t16179 = t16176 ** 2
            t16181 = t16177 ** 2
            t16178 = t16175 * t16177
            t16183 = t16178 ** 2
            t16185 = t16179 ** 2
            t16180 = t16175 * t16179
            t16187 = t16180 ** 2
            t16189 = t16181 ** 2
            t16182 = t16175 * t16181
            t16191 = t16182 ** 2
            t16194 = -198 * t16174 + 3192 * t16177 - 19880 * t16179 + 63084 * t16181 - 115332 * t16183 + 127288 * t16185 - 84072 * t16187 + 30690 * t16189 - 4774 * t16191 + 2
            t16193 = 1097 * t16176 - 11004 * t16178 + 51996 * t16180 - 138166 * t16182 + (223398 * t16183 - 225372 * t16185 + 139004 * t16187 - 48081 * t16189 + 7161 * t16191 - 33) * t16175
            tfunc[..., c] = (0.555e3 / 0.32768e5*1j) * np.sqrt(0.11339e5) * ((1 + t16175) ** (-0.1e1 / 0.2e1)) * ((1 - t16175) ** (-0.1e1 / 0.2e1)) * ((t16193 + t16194) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (t16193 - t16194) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 692:
            t16213 = np.cos(phi)
            t16212 = t16213 ** 2
            t16215 = t16212 ** 2
            t16216 = t16213 * t16215
            t16214 = t16213 * t16212
            t16217 = t16214 ** 2
            t16218 = t16213 * t16217
            t16219 = t16215 ** 2
            t16231 = -56 * t16216 ** 2 + 28 * t16217 ** 2 - 8 * t16218 ** 2 + 1 + (70 + t16219) * t16219
            t16230 = 8 * t16212 - 28 * t16215 + 56 * t16217 - t16231
            t16229 = t16213 * t16231 - 8 * t16214 + 28 * t16216 - 56 * t16218
            tfunc[..., c] = (-0.555e3 / 0.131072e6*1j) * np.sqrt(0.4776387e7) * np.sqrt((1 - t16213)) * np.sqrt((1 + t16213)) * ((t16229 + t16230) * np.exp((-1*1j) * (phi1 - 18 * phi2)) + (t16229 - t16230) * np.exp((-1*1j) * (phi1 + 18 * phi2)))

        if Bindx == 693:
            t16232 = np.cos(phi)
            t16233 = t16232 ** 2
            t16234 = t16233 ** 2
            t16236 = t16234 ** 2
            t16240 = t16236 ** 2
            t16235 = t16233 * t16234
            t16238 = t16235 ** 2
            tfunc[..., c] = -0.366959578095e12 / 0.65536e5 * t16240 - 0.163212715575e12 / 0.16384e5 * t16238 - 0.61908271425e11 / 0.32768e5 * t16236 + 0.5778105333e10 / 0.16384e5 * t16235 - 0.538332795e9 / 0.16384e5 * t16234 - 0.449735e6 / 0.65536e5 + (0.83945001525e11 / 0.65536e5 * t16240 + 0.166799808225e12 / 0.16384e5 * t16238 + 0.185724814275e12 / 0.32768e5 * t16236 + 0.76904685e8 / 0.65536e5) * t16233

        if Bindx == 694:
            t16242 = np.cos(phi)
            t16243 = t16242 ** 2
            t16244 = t16243 ** 2
            t16246 = t16244 ** 2
            t16250 = t16246 ** 2
            t16245 = t16243 * t16244
            t16248 = t16245 ** 2
            tfunc[..., c] = 0.37e2 / 0.65536e5 * np.sqrt(0.3187041e7) * np.sqrt(0.2e1) * (-26796 * t16244 + 256732 * t16245 - 1226850 * t16246 - 5145180 * t16248 - 2305935 * t16250 - 7 + (3282210 * t16246 + 4692780 * t16248 + 471975 * t16250 + 1071) * t16243) * np.cos((6 * phi2))

        if Bindx == 695:
            t16252 = np.cos(phi)
            t16253 = t16252 ** 2
            t16254 = t16253 ** 2
            t16256 = t16254 ** 2
            t16260 = t16256 ** 2
            t16255 = t16253 * t16254
            t16258 = t16255 ** 2
            tfunc[..., c] = 0.555e3 / 0.32768e5 * np.sqrt(0.215441e6) * np.sqrt(0.2e1) * (-1596 * t16254 + 9940 * t16255 - 31542 * t16256 - 63644 * t16258 - 15345 * t16260 - 1 + (57666 * t16256 + 42036 * t16258 + 2387 * t16260 + 99) * t16253) * np.cos((12 * phi2))

        if Bindx == 696:
            t16262 = np.cos(phi)
            t16263 = t16262 ** 2
            t16264 = t16263 ** 2
            t16266 = t16264 ** 2
            t16270 = t16266 ** 2
            t16265 = t16263 * t16264
            t16268 = t16265 ** 2
            tfunc[..., c] = 0.185e3 / 0.131072e6 * np.sqrt(0.90751353e8) * np.sqrt(0.2e1) * np.cos((18 * phi2)) * (-36 * t16264 + 84 * t16265 - 126 * t16266 - 84 * t16268 - 9 * t16270 - 1 + (126 * t16266 + 36 * t16268 + t16270 + 9) * t16263)

        if Bindx == 697:
            t16272 = np.cos(phi)
            t16273 = t16272 ** 2
            t16274 = t16273 ** 2
            t16275 = t16273 * t16274
            t16278 = t16275 ** 2
            t16276 = t16274 ** 2
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.exp((1j) * phi1) * np.sqrt(0.38e2) * np.sqrt((1 - t16272)) * np.sqrt((1 + t16272)) * t16272 * (10958948 * t16274 - 78278200 * t16275 + 738168900 * t16278 + 12155 + (293543250 + 119409675 * t16276) * t16276 + (-619109400 * t16276 - 463991880 * t16278 - 680680) * t16273)

        if Bindx == 698:
            t16301 = np.cos(phi)
            t16300 = t16301 ** 2
            t16303 = t16300 ** 2
            t16302 = t16301 * t16300
            t16305 = t16302 ** 2
            t16307 = t16303 ** 2
            t16304 = t16301 * t16303
            t16309 = t16304 ** 2
            t16311 = t16305 ** 2
            t16306 = t16301 * t16305
            t16313 = t16306 ** 2
            t16315 = t16307 ** 2
            t16308 = t16301 * t16307
            t16317 = t16308 ** 2
            t16320 = -1071 * t16300 + 26796 * t16303 - 256732 * t16305 + 1226850 * t16307 - 3282210 * t16309 + 5145180 * t16311 - 4692780 * t16313 + 2305935 * t16315 - 471975 * t16317 + 7
            t16319 = 18221 * t16302 - 274596 * t16304 + 1892532 * t16306 - 7106150 * t16308 + (15760710 * t16309 - 21240180 * t16311 + 17098980 * t16313 - 7565085 * t16315 + 1415925 * t16317 - 357) * t16301
            tfunc[..., c] = (0.37e2 / 0.65536e5*1j) * np.sqrt(0.167739e6) * ((1 + t16301) ** (-0.1e1 / 0.2e1)) * ((1 - t16301) ** (-0.1e1 / 0.2e1)) * ((t16319 + t16320) * np.exp((1j) * (phi1 - 6 * phi2)) + (t16319 - t16320) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 699:
            t16341 = np.cos(phi)
            t16340 = t16341 ** 2
            t16343 = t16340 ** 2
            t16342 = t16341 * t16340
            t16345 = t16342 ** 2
            t16347 = t16343 ** 2
            t16344 = t16341 * t16343
            t16349 = t16344 ** 2
            t16351 = t16345 ** 2
            t16346 = t16341 * t16345
            t16353 = t16346 ** 2
            t16355 = t16347 ** 2
            t16348 = t16341 * t16347
            t16357 = t16348 ** 2
            t16360 = -198 * t16340 + 3192 * t16343 - 19880 * t16345 + 63084 * t16347 - 115332 * t16349 + 127288 * t16351 - 84072 * t16353 + 30690 * t16355 - 4774 * t16357 + 2
            t16359 = 1097 * t16342 - 11004 * t16344 + 51996 * t16346 - 138166 * t16348 + (223398 * t16349 - 225372 * t16351 + 139004 * t16353 - 48081 * t16355 + 7161 * t16357 - 33) * t16341
            tfunc[..., c] = (0.555e3 / 0.32768e5*1j) * np.sqrt(0.11339e5) * ((1 + t16341) ** (-0.1e1 / 0.2e1)) * ((1 - t16341) ** (-0.1e1 / 0.2e1)) * ((t16359 + t16360) * np.exp((1j) * (phi1 - 12 * phi2)) + (t16359 - t16360) * np.exp((1j) * (phi1 + 12 * phi2)))

        if Bindx == 700:
            t16379 = np.cos(phi)
            t16378 = t16379 ** 2
            t16381 = t16378 ** 2
            t16382 = t16379 * t16381
            t16380 = t16379 * t16378
            t16383 = t16380 ** 2
            t16384 = t16379 * t16383
            t16385 = t16381 ** 2
            t16397 = -56 * t16382 ** 2 + 28 * t16383 ** 2 - 8 * t16384 ** 2 + 1 + (70 + t16385) * t16385
            t16396 = 8 * t16378 - 28 * t16381 + 56 * t16383 - t16397
            t16395 = t16397 * t16379 - 8 * t16380 + 28 * t16382 - 56 * t16384
            tfunc[..., c] = (-0.555e3 / 0.131072e6*1j) * np.sqrt(0.4776387e7) * np.sqrt((1 - t16379)) * np.sqrt((1 + t16379)) * ((t16395 + t16396) * np.exp((1j) * (phi1 - 18 * phi2)) + (t16395 - t16396) * np.exp((1j) * (phi1 + 18 * phi2)))

        if Bindx == 701:
            t16399 = np.cos(phi)
            t16400 = t16399 ** 2
            t16401 = t16400 ** 2
            t16402 = t16400 * t16401
            t16405 = t16402 ** 2
            t16403 = t16401 ** 2
            t16398 = np.sin(phi)
            tfunc[..., c] = -(0.111e3 / 0.131072e6) * np.exp((2*1j) * phi1) * np.sqrt(0.3230e4) * t16398 ** 2 * (644644 * t16401 - 6446440 * t16402 + 112896420 * t16405 + 143 + (31081050 + 23881935 * t16403) * t16403 + (-80120040 * t16403 - 81880920 * t16405 - 24024) * t16400)

        if Bindx == 702:
            t16427 = np.cos(phi)
            t16426 = t16427 ** 2
            t16428 = t16427 * t16426
            t16429 = t16426 ** 2
            t16430 = t16427 * t16429
            t16431 = t16428 ** 2
            t16432 = t16427 * t16431
            t16433 = t16429 ** 2
            t16434 = t16427 * t16433
            t16435 = t16430 ** 2
            t16437 = t16431 ** 2
            t16439 = t16432 ** 2
            t16441 = t16433 ** 2
            t16445 = -42448 * t16428 + 605864 * t16430 - 3833520 * t16432 + 12730500 * t16434 + (-23782320 * t16435 + 25136040 * t16437 - 14024400 * t16439 + 3209430 * t16441 + 854) * t16427
            t16444 = 4814145 * t16434 ** 2 + 9513 * t16426 - 236572 * t16429 + 2269652 * t16431 - 10941730 * t16433 + 29741790 * t16435 - 47677740 * t16437 + 44716260 * t16439 - 22695255 * t16441 - 63
            tfunc[..., c] = (0.37e2 / 0.131072e6) * ((t16444 - t16445) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t16444 + t16445) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.49335e5)

        if Bindx == 703:
            t16465 = np.cos(phi)
            t16464 = t16465 ** 2
            t16466 = t16465 * t16464
            t16467 = t16464 ** 2
            t16468 = t16465 * t16467
            t16469 = t16466 ** 2
            t16470 = t16465 * t16469
            t16471 = t16467 ** 2
            t16472 = t16465 * t16471
            t16473 = t16468 ** 2
            t16475 = t16469 ** 2
            t16477 = t16470 ** 2
            t16479 = t16471 ** 2
            t16483 = -25144 * t16466 + 232568 * t16468 - 975576 * t16470 + 2214240 * t16472 + (-2916648 * t16473 + 2237704 * t16475 - 930248 * t16477 + 162316 * t16479 + 788) * t16465
            t16482 = 121737 * t16472 ** 2 + 873 * t16464 - 16940 * t16467 + 141484 * t16469 - 604982 * t16471 + 1435574 * t16473 - 1977388 * t16475 + 1577900 * t16477 - 678249 * t16479 - 9
            tfunc[..., c] = (0.111e3 / 0.65536e5) * ((t16482 - t16483) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (t16482 + t16483) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.3335e4)

        if Bindx == 704:
            t16503 = np.cos(phi)
            t16502 = t16503 ** 2
            t16504 = t16503 * t16502
            t16507 = t16504 ** 2
            t16522 = -28 * t16507 ** 2
            t16505 = t16502 ** 2
            t16506 = t16503 * t16505
            t16508 = t16503 * t16507
            t16509 = t16505 ** 2
            t16510 = t16503 * t16509
            t16511 = t16506 ** 2
            t16515 = t16508 ** 2
            t16517 = t16509 ** 2
            t16521 = 16 * t16504 - 56 * t16506 + 112 * t16508 - 140 * t16510 + 2 * (56 * t16511 + 8 * t16515 - t16517 + t16522 - 1) * t16503
            t16520 = t16510 ** 2 - 7 * t16502 + 20 * t16505 - 28 * t16507 + 14 * t16509 + 14 * t16511 + 20 * t16515 - 7 * t16517 + t16522 + 1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * ((t16520 + t16521) * np.exp((2*1j) * (phi1 - 9 * phi2)) + (t16520 - t16521) * np.exp((2*1j) * (phi1 + 9 * phi2))) * np.sqrt(0.405992895e9)

        if Bindx == 705:
            t16523 = np.cos(phi)
            t16524 = t16523 ** 2
            t16525 = t16524 ** 2
            t16526 = t16524 * t16525
            t16529 = t16526 ** 2
            t16527 = t16525 ** 2
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.67830e5) * ((1 - t16523) ** (0.3e1 / 0.2e1)) * ((1 + t16523) ** (0.3e1 / 0.2e1)) * t16523 * (-345345 * t16525 + 2220075 * t16526 - 7153575 * t16527 - 10235115 * t16529 - 429 + (12096045 * t16527 + 3411705 * t16529 + 23023) * t16524)

        if Bindx == 706:
            t16551 = np.cos(phi)
            t16550 = t16551 ** 2
            t16553 = t16550 ** 2
            t16557 = t16553 ** 2
            t16558 = t16551 * t16557
            t16571 = 687735 * t16558 ** 2
            t16552 = t16551 * t16550
            t16555 = t16552 ** 2
            t16554 = t16551 * t16553
            t16559 = t16554 ** 2
            t16561 = t16555 ** 2
            t16556 = t16551 * t16555
            t16563 = t16556 ** 2
            t16565 = t16557 ** 2
            t16570 = -1639 * t16550 + 40100 * t16553 - 377412 * t16555 + 1780290 * t16557 - 4724730 * t16559 + 7382820 * t16561 - 6742500 * t16563 + 3330795 * t16565 + 11 - t16571
            t16569 = 6175 * t16552 - 93356 * t16554 + 657244 * t16556 - 2559690 * t16558 + (5958690 * t16559 - 8499900 * t16561 + 7281900 * t16563 - 3438675 * t16565 + t16571 - 123) * t16551
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.sqrt(0.115115e6) * ((1 + t16551) ** (-0.1e1 / 0.2e1)) * ((1 - t16551) ** (-0.1e1 / 0.2e1)) * ((t16569 + t16570) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t16569 - t16570) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 707:
            t16592 = np.cos(phi)
            t16591 = t16592 ** 2
            t16593 = t16592 * t16591
            t16594 = t16591 ** 2
            t16595 = t16592 * t16594
            t16596 = t16593 ** 2
            t16597 = t16592 * t16596
            t16598 = t16594 ** 2
            t16599 = t16592 * t16598
            t16600 = t16595 ** 2
            t16602 = t16596 ** 2
            t16604 = t16597 ** 2
            t16606 = t16598 ** 2
            t16608 = t16599 ** 2
            t16611 = -2089 * t16593 + 17036 * t16595 - 56260 * t16597 + 76654 * t16599 + (1906 * t16600 - 134036 * t16602 + 166284 * t16604 - 86955 * t16606 + 17391 * t16608 + 69) * t16592
            t16610 = 760 * t16591 - 12422 * t16594 + 82362 * t16596 - 286302 * t16598 + 578658 * t16600 - 705970 * t16602 + 513422 * t16604 - 205282 * t16606 + 34782 * t16608 - 8
            tfunc[..., c] = (0.37e2 / 0.16384e5*1j) * np.sqrt(0.70035e5) * ((1 + t16592) ** (-0.1e1 / 0.2e1)) * ((1 - t16592) ** (-0.1e1 / 0.2e1)) * ((-t16610 + t16611) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t16610 + t16611) * np.exp((3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 708:
            t16628 = np.cos(phi)
            t16627 = t16628 ** 2
            t16629 = t16628 * t16627
            t16631 = t16629 ** 2
            t16632 = t16628 * t16631
            t16633 = t16628 * t16632
            t16644 = -70 * t16633
            t16630 = t16627 * t16629
            t16635 = t16630 ** 2
            t16638 = t16632 ** 2
            t16640 = t16633 ** 2
            t16643 = -4 * t16627 + 84 * t16635 + 20 * t16638 - 3 * t16640 + t16644 + 1 + (28 - 56 * t16631) * t16631
            t16642 = 20 * t16629 - 56 * t16630 + 84 * t16632 + (28 * t16635 - 4 * t16638 + t16640 + t16644 - 3) * t16628
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.sqrt(0.19332995e8) * np.sqrt((1 + t16628)) * np.sqrt((1 - t16628)) * ((t16642 + t16643) * np.exp((3*1j) * (phi1 - 6 * phi2)) + (t16642 - t16643) * np.exp((3*1j) * (phi1 + 6 * phi2)))

        if Bindx == 709:
            t16655 = np.sin(phi)
            t16653 = t16655 ** 2
            t16645 = np.cos(phi)
            t16646 = t16645 ** 2
            t16647 = t16646 ** 2
            t16648 = t16646 * t16647
            t16651 = t16648 ** 2
            t16649 = t16647 ** 2
            tfunc[..., c] = (0.111e3 / 0.32768e5) * np.exp((4*1j) * phi1) * np.sqrt(0.24871e5) * t16653 ** 2 * (-52325 * t16647 + 470925 * t16648 - 1950975 * t16649 - 4032015 * t16651 - 13 + (4032015 * t16649 + 1550775 * t16651 + 2093) * t16646)

        if Bindx == 710:
            t16675 = np.cos(phi)
            t16674 = t16675 ** 2
            t16677 = t16675 * t16674
            t16678 = t16674 ** 2
            t16679 = t16675 * t16678
            t16680 = t16677 ** 2
            t16681 = t16675 * t16680
            t16682 = t16678 ** 2
            t16683 = t16675 * t16682
            t16684 = t16679 ** 2
            t16686 = t16680 ** 2
            t16688 = t16681 ** 2
            t16690 = t16682 ** 2
            t16694 = -63400 * t16677 + 878136 * t16679 - 5435400 * t16681 + 17806800 * t16683 + (-33091320 * t16684 + 35061000 * t16686 - 19742040 * t16688 + 4584900 * t16690 + 1324) * t16675
            t16693 = 3438675 * t16683 ** 2 + 2755 * t16674 - 70580 * t16678 + 739284 * t16680 - 4036450 * t16682 + 12628770 * t16684 - 23342100 * t16686 + 25082100 * t16688 - 14442435 * t16690 - 19
            t16676 = 2 * phi1
            tfunc[..., c] = (0.37e2 / 0.65536e5) * np.sqrt(0.6279e4) * np.sqrt(0.2e1) * ((t16693 - t16694) * np.exp((2*1j) * (t16676 - 3 * phi2)) + (t16693 + t16694) * np.exp((2*1j) * (t16676 + 3 * phi2)))

        if Bindx == 711:
            t16714 = np.cos(phi)
            t16713 = t16714 ** 2
            t16715 = t16714 * t16713
            t16716 = t16713 ** 2
            t16717 = t16714 * t16716
            t16718 = t16715 ** 2
            t16719 = t16714 * t16718
            t16720 = t16716 ** 2
            t16721 = t16714 * t16720
            t16722 = t16717 ** 2
            t16724 = t16718 ** 2
            t16726 = t16719 ** 2
            t16728 = t16720 ** 2
            t16732 = 136 * t16715 - 1620 * t16717 + 9168 * t16719 - 27268 * t16721 + (45256 * t16722 - 42284 * t16724 + 20832 * t16726 - 4216 * t16728 - 4) * t16714
            t16731 = 1581 * t16721 ** 2 - 91 * t16713 + 1316 * t16716 - 7164 * t16718 + 18862 * t16720 - 25418 * t16722 + 15284 * t16724 + 372 * t16726 - 4743 * t16728 + 1
            tfunc[..., c] = (0.555e3 / 0.32768e5) * np.sqrt(0.51359e5) * np.sqrt(0.2e1) * ((t16731 + t16732) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t16731 - t16732) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 712:
            t16751 = np.cos(phi)
            t16750 = t16751 ** 2
            t16753 = t16751 * t16750
            t16754 = t16750 ** 2
            t16755 = t16751 * t16754
            t16756 = t16753 ** 2
            t16757 = t16751 * t16756
            t16759 = t16755 ** 2
            t16761 = t16756 ** 2
            t16763 = t16757 ** 2
            t16758 = t16754 ** 2
            t16765 = t16758 ** 2
            t16766 = t16751 * t16765
            t16769 = -24 * t16753 + 56 * t16755 - 56 * t16757 - 4 * t16766 + 4 * (14 * t16759 - 14 * t16761 + 6 * t16763 + 1) * t16751
            t16768 = t16751 * t16766 + t16750 + 20 * t16754 - 84 * t16756 + 154 * t16758 - 154 * t16759 + 84 * t16761 - 20 * t16763 - t16765 - 1
            t16752 = 2 * phi1
            tfunc[..., c] = (0.555e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.1054527e7) * ((t16768 + t16769) * np.exp((2*1j) * (t16752 - 9 * phi2)) + (t16768 - t16769) * np.exp((2*1j) * (t16752 + 9 * phi2)))

        if Bindx == 713:
            t16770 = np.cos(phi)
            t16771 = t16770 ** 2
            t16772 = t16771 ** 2
            t16774 = t16772 ** 2
            t16773 = t16771 * t16772
            tfunc[..., c] = (-0.111e3 / 0.32768e5*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.163438e6) * ((1 - t16770) ** (0.5e1 / 0.2e1)) * ((1 + t16770) ** (0.5e1 / 0.2e1)) * t16770 * (61425 * t16772 + 876525 * t16774 + 91 + (-339300 + 471975 * t16773) * t16773 + (-1051830 * t16774 - 4550) * t16771)

        if Bindx == 714:
            t16797 = np.cos(phi)
            t16796 = t16797 ** 2
            t16799 = t16797 * t16796
            t16800 = t16796 ** 2
            t16801 = t16797 * t16800
            t16802 = t16799 ** 2
            t16803 = t16797 * t16802
            t16804 = t16800 ** 2
            t16805 = t16797 * t16804
            t16806 = t16801 ** 2
            t16808 = t16802 ** 2
            t16810 = t16803 ** 2
            t16812 = t16804 ** 2
            t16814 = t16805 ** 2
            t16817 = -51795 * t16799 + 416556 * t16801 + 578884 * t16803 - 17796350 * t16805 + (78664950 * t16806 - 163760100 * t16808 + 181723860 * t16810 - 103847985 * t16812 + 24070725 * t16814 + 1255) * t16797
            t16816 = -101379 * t16796 + 2375380 * t16800 - 21680820 * t16802 + 100393050 * t16804 - 264405570 * t16806 + 413742420 * t16808 - 381086100 * t16810 + 190880175 * t16812 - 40117875 * t16814 + 719
            t16798 = 5 * phi1
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.sqrt(0.39e2) * ((1 + t16797) ** (-0.1e1 / 0.2e1)) * ((1 - t16797) ** (-0.1e1 / 0.2e1)) * ((t16816 + t16817) * np.exp((1j) * (t16798 - 6 * phi2)) + (-t16816 + t16817) * np.exp((1j) * (t16798 + 6 * phi2)))

        if Bindx == 715:
            t16838 = np.cos(phi)
            t16837 = t16838 ** 2
            t16841 = t16837 ** 2
            t16840 = t16838 * t16837
            t16843 = t16840 ** 2
            t16845 = t16841 ** 2
            t16842 = t16838 * t16841
            t16847 = t16842 ** 2
            t16849 = t16843 ** 2
            t16844 = t16838 * t16843
            t16851 = t16844 ** 2
            t16853 = t16845 ** 2
            t16846 = t16838 * t16845
            t16855 = t16846 ** 2
            t16858 = 348 * t16837 - 3914 * t16841 + 10086 * t16843 + 23286 * t16845 - 164570 * t16847 + 341538 * t16849 - 348750 * t16851 + 178870 * t16853 - 36890 * t16855 - 4
            t16857 = -3357 * t16840 + 31212 * t16842 - 137620 * t16844 + 328422 * t16846 + (-439494 * t16847 + 312236 * t16849 - 85188 * t16851 - 17391 * t16853 + 11067 * t16855 + 113) * t16838
            t16839 = 5 * phi1
            tfunc[..., c] = (0.555e3 / 0.16384e5*1j) * np.sqrt(0.319e3) * ((1 + t16838) ** (-0.1e1 / 0.2e1)) * ((1 - t16838) ** (-0.1e1 / 0.2e1)) * ((t16857 + t16858) * np.exp((1j) * (t16839 - 12 * phi2)) + (t16857 - t16858) * np.exp((1j) * (t16839 + 12 * phi2)))

        if Bindx == 716:
            t16877 = np.cos(phi)
            t16876 = t16877 ** 2
            t16880 = t16876 ** 2
            t16879 = t16877 * t16876
            t16882 = t16879 ** 2
            t16884 = t16880 ** 2
            t16881 = t16877 * t16880
            t16886 = t16881 ** 2
            t16888 = t16882 ** 2
            t16883 = t16877 * t16882
            t16890 = t16883 ** 2
            t16892 = t16884 ** 2
            t16895 = -1 - 4 * t16876 + 40 * t16880 - 100 * t16882 + 110 * t16884 - 44 * t16886 - 16 * t16888 + 20 * t16890 - 5 * t16892
            t16894 = -20 * t16879 + 16 * t16881 + 44 * t16883 + (-110 * t16884 + 100 * t16886 - 40 * t16888 + 4 * t16890 + t16892 + 5) * t16877
            t16878 = 5 * phi1
            tfunc[..., c] = (-0.555e3 / 0.65536e5*1j) * np.sqrt(0.320943e6) * np.sqrt((1 - t16877)) * np.sqrt((1 + t16877)) * ((t16894 + t16895) * np.exp((1j) * (t16878 - 18 * phi2)) + (t16894 - t16895) * np.exp((1j) * (t16878 + 18 * phi2)))

        if Bindx == 717:
            t16906 = np.sin(phi)
            t16903 = t16906 ** 2
            t16904 = t16906 * t16903
            t16896 = np.cos(phi)
            t16897 = t16896 ** 2
            t16898 = t16897 ** 2
            t16900 = t16898 ** 2
            t16899 = t16897 * t16898
            tfunc[..., c] = -(0.37e2 / 0.65536e5) * np.exp((6*1j) * phi1) * np.sqrt(0.3187041e7) * t16904 ** 2 * (23625 * t16898 + 606825 * t16900 + 7 + (-182700 + 471975 * t16899) * t16899 + (-890010 * t16900 - 1050) * t16897)

        if Bindx == 718:
            t16926 = np.cos(phi)
            t16925 = t16926 ** 2
            t16927 = t16926 * t16925
            t16928 = t16925 ** 2
            t16929 = t16926 * t16928
            t16930 = t16927 ** 2
            t16931 = t16926 * t16930
            t16932 = t16928 ** 2
            t16933 = t16926 * t16932
            t16934 = t16929 ** 2
            t16936 = t16930 ** 2
            t16938 = t16931 ** 2
            t16940 = t16932 ** 2
            t16944 = -8594320 * t16927 + 114240504 * t16929 - 692377200 * t16931 + 2259242700 * t16933 + (-4235278320 * t16934 + 4564942200 * t16936 - 2628172560 * t16938 + 625838850 * t16940 + 190914) * t16926
            t16943 = 312919425 * t16933 ** 2 - 751815 * t16925 + 15427860 * t16928 - 110188316 * t16930 + 331423950 * t16932 - 336305970 * t16934 - 376057500 * t16936 + 1209604500 * t16938 - 1046044935 * t16940 + 5569
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * ((t16943 - t16944) * np.exp((6*1j) * (phi1 - phi2)) + (t16943 + t16944) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 719:
            t16964 = np.cos(phi)
            t16963 = t16964 ** 2
            t16965 = t16964 * t16963
            t16966 = t16963 ** 2
            t16967 = t16964 * t16966
            t16968 = t16965 ** 2
            t16969 = t16964 * t16968
            t16970 = t16966 ** 2
            t16971 = t16964 * t16970
            t16972 = t16967 ** 2
            t16974 = t16968 ** 2
            t16976 = t16969 ** 2
            t16978 = t16970 ** 2
            t16982 = 4040 * t16965 - 28824 * t16967 + 83880 * t16969 - 89104 * t16971 + (-49320 * t16972 + 195672 * t16974 - 160456 * t16976 + 44268 * t16978 - 156) * t16964
            t16981 = 11067 * t16971 ** 2 - 405 * t16963 + 7212 * t16966 - 55180 * t16968 + 204270 * t16970 - 395310 * t16972 + 401228 * t16974 - 187116 * t16976 + 14229 * t16978 + 5
            tfunc[..., c] = (0.185e3 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.12441e5) * ((t16981 - t16982) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (t16981 + t16982) * np.exp((6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 720:
            t17002 = np.cos(phi)
            t17021 = -6 * t17002
            t17001 = t17002 ** 2
            t17003 = t17002 * t17001
            t17004 = t17001 ** 2
            t17005 = t17002 * t17004
            t17006 = t17003 ** 2
            t17007 = t17002 * t17006
            t17008 = t17004 ** 2
            t17009 = t17002 * t17008
            t17010 = t17005 ** 2
            t17012 = t17006 ** 2
            t17014 = t17007 ** 2
            t17016 = t17008 ** 2
            t17020 = t17016 * t17021 + 16 * t17003 + 24 * t17005 - 144 * t17007 + 220 * t17009 + t17021 + (-144 * t17010 + 24 * t17012 + 16 * t17014) * t17002
            t17019 = t17009 ** 2 + 9 * t17001 - 60 * t17004 + 116 * t17006 - 66 * t17008 - 66 * t17010 + 116 * t17012 - 60 * t17014 + 9 * t17016 + 1
            tfunc[..., c] = (0.555e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.1390753e7) * ((t17019 + t17020) * np.exp((6*1j) * (phi1 - 3 * phi2)) + (t17019 - t17020) * np.exp((6*1j) * (phi1 + 3 * phi2)))

        if Bindx == 721:
            t17022 = np.cos(phi)
            t17023 = t17022 ** 2
            t17024 = t17023 ** 2
            t17026 = t17024 ** 2
            tfunc[..., c] = (0.555e3 / 0.32768e5*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.1062347e7) * ((1 - t17022) ** (0.7e1 / 0.2e1)) * ((1 + t17022) ** (0.7e1 / 0.2e1)) * t17022 * (-3654 * t17024 - 29667 * t17026 - 7 + (16182 * t17024 + 18879 * t17026 + 315) * t17023)

        if Bindx == 722:
            t17047 = np.cos(phi)
            t17046 = t17047 ** 2
            t17050 = t17046 ** 2
            t17054 = t17050 ** 2
            t17055 = t17047 * t17054
            t17065 = 12516777 * t17055 ** 2
            t17062 = t17054 ** 2
            t17049 = t17047 * t17046
            t17052 = t17049 ** 2
            t17053 = t17047 * t17052
            t17060 = t17053 ** 2
            t17058 = t17052 ** 2
            t17051 = t17047 * t17050
            t17056 = t17051 ** 2
            t17048 = 7 * phi1
            t17037 = t17047 * t17056
            t17035 = t17047 * t17058
            t17033 = t17047 * t17060
            t17031 = t17047 * t17062
            tfunc[..., c] = (-0.185e3 / 0.65536e5*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t17047)) * np.sqrt(0.3e1) * ((1 + t17047) ** (-0.1e1 / 0.2e1)) * ((-16689036 * t17031 + 77414688 * t17033 - 149219616 * t17035 + 154033152 * t17037 + 58481 * t17046 - 9244 * t17047 + 426048 * t17049 - 1083460 * t17050 - 5469184 * t17051 + 8101716 * t17052 + 30787232 * t17053 - 32669494 * t17054 - 91274040 * t17055 + 79885806 * t17056 - 121890132 * t17058 + 112896420 * t17060 - 57815589 * t17062 - 525 + t17065) * np.exp((1j) * (t17048 - 6 * phi2)) + (41722590 * t17031 - 134634240 * t17033 + 162963528 * t17035 - 85630272 * t17037 - 75919 * t17046 - 8194 * t17047 + 291648 * t17049 + 1801156 * t17050 - 2584568 * t17051 - 16155468 * t17052 + 6530048 * t17053 + 69986774 * t17054 + 11382228 * t17055 - 159777618 * t17056 + 190293012 * t17058 - 99152508 * t17060 + 596037 * t17062 + 525 + t17065) * np.exp((1j) * (t17048 + 6 * phi2)))

        if Bindx == 723:
            t17086 = np.cos(phi)
            t17085 = t17086 ** 2
            t17088 = t17086 * t17085
            t17089 = t17085 ** 2
            t17090 = t17086 * t17089
            t17091 = t17088 ** 2
            t17092 = t17086 * t17091
            t17093 = t17089 ** 2
            t17094 = t17086 * t17093
            t17095 = t17090 ** 2
            t17097 = t17091 ** 2
            t17099 = t17092 ** 2
            t17101 = t17093 ** 2
            t17103 = t17094 ** 2
            t17106 = 1771 * t17088 - 2436 * t17090 - 52300 * t17092 + 274366 * t17094 + (-582318 * t17095 + 614588 * t17097 - 304172 * t17099 + 39525 * t17101 + 11067 * t17103 - 91) * t17086
            t17105 = -1350 * t17085 + 18212 * t17089 - 101708 * t17091 + 278088 * t17093 - 372376 * t17095 + 168700 * t17097 + 127596 * t17099 - 168826 * t17101 + 51646 * t17103 + 18
            t17087 = 7 * phi1
            tfunc[..., c] = (0.111e3 / 0.32768e5*1j) * np.sqrt(0.4147e4) * np.sqrt(0.2e1) * ((1 + t17086) ** (-0.1e1 / 0.2e1)) * ((1 - t17086) ** (-0.1e1 / 0.2e1)) * ((-t17105 + t17106) * np.exp((1j) * (t17087 - 12 * phi2)) + (t17105 + t17106) * np.exp((1j) * (t17087 + 12 * phi2)))

        if Bindx == 724:
            t17123 = np.cos(phi)
            t17122 = t17123 ** 2
            t17141 = 16 * t17122
            t17125 = t17122 ** 2
            t17129 = t17125 ** 2
            t17140 = 110 * t17129
            t17126 = t17123 * t17125
            t17127 = t17123 * t17126
            t17131 = t17126 ** 2
            t17133 = t17127 ** 2
            t17136 = t17129 ** 2
            t17139 = 1 + t17141 - 60 * t17125 + 32 * t17127 + t17140 - 176 * t17131 + 84 * t17133 - 7 * t17136
            t17138 = 84 * t17126 + ((t17141 - 60) * t17133 - 176 * t17127 + 32 * t17131 + t17136 + t17140 - 7) * t17123
            t17124 = 7 * phi1
            tfunc[..., c] = (-0.111e3 / 0.131072e6*1j) * np.sqrt(0.2e1) * np.sqrt(0.4172259e7) * np.sqrt((1 - t17123)) * np.sqrt((1 + t17123)) * ((t17138 + t17139) * np.exp((1j) * (t17124 - 18 * phi2)) + (t17138 - t17139) * np.exp((1j) * (t17124 + 18 * phi2)))

        if Bindx == 725:
            t17151 = np.sin(phi)
            t17148 = t17151 ** 2
            t17149 = t17148 ** 2
            t17142 = np.cos(phi)
            t17143 = t17142 ** 2
            t17144 = t17143 ** 2
            t17146 = t17144 ** 2
            tfunc[..., c] = (0.555e3 / 0.65536e5) * np.exp((8*1j) * phi1) * np.sqrt(0.14858e5) * t17149 ** 2 * (-18270 * t17144 - 267003 * t17146 - 7 + (113274 * t17144 + 207669 * t17146 + 945) * t17143)

        if Bindx == 726:
            t17171 = np.cos(phi)
            t17170 = t17171 ** 2
            t17173 = t17171 * t17170
            t17174 = t17170 ** 2
            t17175 = t17171 * t17174
            t17176 = t17173 ** 2
            t17177 = t17171 * t17176
            t17178 = t17174 ** 2
            t17179 = t17171 * t17178
            t17180 = t17175 ** 2
            t17182 = t17176 ** 2
            t17184 = t17177 ** 2
            t17186 = t17178 ** 2
            t17190 = 23408 * t17173 - 319760 * t17175 + 2088624 * t17177 - 7421664 * t17179 + (15015504 * t17180 - 17217648 * t17182 + 10399632 * t17184 - 2567544 * t17186 - 552) * t17171
            t17189 = 962829 * t17179 ** 2 - 10043 * t17170 + 193788 * t17174 - 1394092 * t17176 + 4798186 * t17178 - 8496810 * t17180 + 7120428 * t17182 - 1111164 * t17184 - 2063205 * t17186 + 83
            t17172 = 4 * phi1
            tfunc[..., c] = (0.185e3 / 0.65536e5) * ((t17189 + t17190) * np.exp((2*1j) * (t17172 - 3 * phi2)) + (t17189 - t17190) * np.exp((2*1j) * (t17172 + 3 * phi2))) * np.sqrt(0.429e3)

        if Bindx == 727:
            t17210 = np.cos(phi)
            t17209 = t17210 ** 2
            t17212 = t17210 * t17209
            t17213 = t17209 ** 2
            t17214 = t17210 * t17213
            t17215 = t17212 ** 2
            t17216 = t17210 * t17215
            t17217 = t17213 ** 2
            t17218 = t17210 * t17217
            t17219 = t17214 ** 2
            t17221 = t17215 ** 2
            t17223 = t17216 ** 2
            t17225 = t17217 ** 2
            t17229 = 42032 * t17212 - 466136 * t17214 + 2182752 * t17216 - 4833400 * t17218 + (4923568 * t17219 - 1339944 * t17221 - 1156672 * t17223 + 649264 * t17225 - 1464) * t17210
            t17228 = 121737 * t17218 ** 2 + 20569 * t17209 - 201300 * t17213 + 645788 * t17215 - 274274 * t17217 - 2485626 * t17219 + 5226572 * t17221 - 3940100 * t17223 + 886941 * t17225 - 307
            t17211 = 2 * phi1
            tfunc[..., c] = (0.111e3 / 0.32768e5) * ((t17228 - t17229) * np.exp((4*1j) * (t17211 - 3 * phi2)) + (t17228 + t17229) * np.exp((4*1j) * (t17211 + 3 * phi2))) * np.sqrt(0.29e2)

        if Bindx == 728:
            t17248 = np.cos(phi)
            t17247 = t17248 ** 2
            t17250 = t17248 * t17247
            t17251 = t17247 ** 2
            t17252 = t17248 * t17251
            t17253 = t17250 ** 2
            t17254 = t17248 * t17253
            t17256 = t17252 ** 2
            t17258 = t17253 ** 2
            t17260 = t17254 ** 2
            t17255 = t17251 ** 2
            t17262 = t17255 ** 2
            t17263 = t17248 * t17262
            t17266 = 16 * t17250 - 144 * t17252 + 208 * t17254 - 8 * t17263 + 8 * (-26 * t17256 + 18 * t17258 - 2 * t17260 + 1) * t17248
            t17265 = t17248 * t17263 - 23 * t17247 + 60 * t17251 + 52 * t17253 - 286 * t17255 + 286 * t17256 - 52 * t17258 - 60 * t17260 + 23 * t17262 - 1
            t17249 = 4 * phi1
            tfunc[..., c] = (0.111e3 / 0.131072e6) * ((t17265 + t17266) * np.exp((2*1j) * (t17249 - 9 * phi2)) + (t17265 - t17266) * np.exp((2*1j) * (t17249 + 9 * phi2))) * np.sqrt(0.3530373e7)

        if Bindx == 729:
            t17267 = np.cos(phi)
            t17268 = t17267 ** 2
            t17269 = t17268 ** 2
            tfunc[..., c] = (-0.37e2 / 0.32768e5*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.111435e6) * ((1 - t17267) ** (0.9e1 / 0.2e1)) * ((1 + t17267) ** (0.9e1 / 0.2e1)) * t17267 * (-12180 * t17268 + 315 + (-356004 * t17268 + 113274 + 346115 * t17269) * t17269)

        if Bindx == 730:
            t17290 = np.cos(phi)
            t17289 = t17290 ** 2
            t17293 = t17289 ** 2
            t17297 = t17293 ** 2
            t17305 = t17297 ** 2
            t17308 = 534905 * t17305
            t17307 = t17290 * t17308
            t17292 = t17290 * t17289
            t17295 = t17292 ** 2
            t17296 = t17290 * t17295
            t17303 = t17296 ** 2
            t17301 = t17295 ** 2
            t17294 = t17290 * t17293
            t17299 = t17294 ** 2
            t17291 = 3 * phi1
            t17282 = t17290 * t17297
            t17280 = t17290 * t17299
            t17278 = t17290 * t17301
            t17276 = t17290 * t17303
            tfunc[..., c] = (0.111e3 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 - t17290) ** (0.3e1 / 0.2e1)) * np.sqrt(0.715e3) * ((1 + t17290) ** (-0.1e1 / 0.2e1)) * ((-2628676 * t17276 + 5494688 * t17278 - 6356452 * t17280 + 4410122 * t17282 + 2196 * t17289 + 1269 * t17290 - 44396 * t17292 - 73264 * t17293 + 426088 * t17294 + 631188 * t17295 - 1837548 * t17296 - 2310882 * t17297 + 4374940 * t17299 - 4523768 * t17301 + 2434492 * t17303 + t17307 + 3 - t17308) * np.exp((3*1j) * (t17291 - 2 * phi2)) + (3790184 * t17276 - 10295348 * t17278 + 7959224 * t17280 - 1424794 * t17282 + 2856 * t17289 + 1257 * t17290 - 43064 * t17292 - 106708 * t17293 + 357868 * t17294 + 1116696 * t17295 - 798312 * t17296 - 4708722 * t17297 + 8615320 * t17299 - 5260948 * t17301 - 2251096 * t17303 + 2674525 * t17305 - 3 + t17307) * np.exp((3*1j) * (t17291 + 2 * phi2)))

        if Bindx == 731:
            t17329 = np.cos(phi)
            t17328 = t17329 ** 2
            t17332 = t17328 ** 2
            t17331 = t17329 * t17328
            t17334 = t17331 ** 2
            t17336 = t17332 ** 2
            t17333 = t17329 * t17332
            t17338 = t17333 ** 2
            t17340 = t17334 ** 2
            t17335 = t17329 * t17334
            t17342 = t17335 ** 2
            t17344 = t17336 ** 2
            t17337 = t17329 * t17336
            t17346 = t17337 ** 2
            t17349 = 4366 * t17328 - 9836 * t17332 - 204380 * t17334 + 1267552 * t17336 - 2960672 * t17338 + 3163628 * t17340 - 1221028 * t17342 - 283030 * t17344 + 243474 * t17346 - 74
            t17348 = 39539 * t17331 - 288772 * t17333 + 903188 * t17335 - 1104818 * t17337 + (-286910 * t17338 + 1999612 * t17340 - 1723724 * t17342 + 423181 * t17344 + 40579 * t17346 - 1875) * t17329
            t17330 = 3 * phi1
            tfunc[..., c] = (0.37e2 / 0.32768e5*1j) * np.sqrt(0.435e3) * np.sqrt(0.2e1) * ((1 + t17329) ** (-0.1e1 / 0.2e1)) * ((1 - t17329) ** (-0.1e1 / 0.2e1)) * ((t17348 - t17349) * np.exp((3*1j) * (t17330 - 4 * phi2)) + (t17348 + t17349) * np.exp((3*1j) * (t17330 + 4 * phi2)))

        if Bindx == 732:
            t17366 = np.cos(phi)
            t17365 = t17366 ** 2
            t17368 = t17365 ** 2
            t17367 = t17366 * t17365
            t17370 = t17367 ** 2
            t17371 = t17368 ** 2
            t17374 = t17370 ** 2
            t17375 = t17366 * t17374
            t17376 = t17366 * t17375
            t17378 = t17371 ** 2
            t17381 = -1 - 32 * t17365 + 12 * t17368 + 208 * t17370 - 286 * t17371 + 156 * t17374 - 48 * t17376 - 9 * t17378
            t17380 = 48 * t17367 - 12 * t17375 + ((-208 * t17365 + 286) * t17371 - 156 * t17368 + 32 * t17376 + t17378 + 9) * t17366
            tfunc[..., c] = (-0.37e2 / 0.131072e6*1j) * np.sqrt(0.2e1) * np.sqrt(0.5883955e7) * np.sqrt((1 - t17366)) * np.sqrt((1 + t17366)) * ((t17380 + t17381) * np.exp((9*1j) * (phi1 - 2 * phi2)) + (t17380 - t17381) * np.exp((9*1j) * (phi1 + 2 * phi2)))

        if Bindx == 733:
            t17391 = np.sin(phi)
            t17387 = t17391 ** 2
            t17389 = t17391 * t17387 ** 2
            t17382 = np.cos(phi)
            t17383 = t17382 ** 2
            t17384 = t17383 ** 2
            tfunc[..., c] = -(0.111e3 / 0.65536e5) * np.exp((10*1j) * phi1) * np.sqrt(0.780045e6) * t17389 ** 2 * (-580 * t17383 + 5 + (-39556 * t17383 + 8990 + 49445 * t17384) * t17384)

        if Bindx == 734:
            t17411 = np.cos(phi)
            t17410 = t17411 ** 2
            t17413 = t17411 * t17410
            t17414 = t17410 ** 2
            t17415 = t17411 * t17414
            t17416 = t17413 ** 2
            t17417 = t17411 * t17416
            t17418 = t17414 ** 2
            t17419 = t17411 * t17418
            t17420 = t17415 ** 2
            t17422 = t17416 ** 2
            t17424 = t17417 ** 2
            t17426 = t17418 ** 2
            t17430 = -10000 * t17413 + 61912 * t17415 + 2064 * t17417 - 969604 * t17419 + (3153808 * t17420 - 4423080 * t17422 + 2948720 * t17424 - 764150 * t17426 + 330) * t17411
            t17429 = 229245 * t17419 ** 2 - 6283 * t17410 + 108708 * t17414 - 740876 * t17416 + 2530550 * t17418 - 4659978 * t17420 + 4506484 * t17422 - 1830364 * t17424 - 137547 * t17426 + 61
            t17412 = 5 * phi1
            tfunc[..., c] = (0.111e3 / 0.131072e6) * np.sqrt(0.5005e4) * np.sqrt(0.2e1) * ((t17429 + t17430) * np.exp((2*1j) * (t17412 - 3 * phi2)) + (t17429 - t17430) * np.exp((2*1j) * (t17412 + 3 * phi2)))

        if Bindx == 735:
            t17450 = np.cos(phi)
            t17449 = t17450 ** 2
            t17452 = t17450 * t17449
            t17453 = t17449 ** 2
            t17454 = t17450 * t17453
            t17455 = t17452 ** 2
            t17456 = t17450 * t17455
            t17457 = t17453 ** 2
            t17458 = t17450 * t17457
            t17459 = t17454 ** 2
            t17461 = t17455 ** 2
            t17463 = t17456 ** 2
            t17465 = t17457 ** 2
            t17469 = 21352 * t17452 - 82456 * t17454 - 10296 * t17456 + 647504 * t17458 + (-1324232 * t17459 + 933720 * t17461 - 68200 * t17463 - 115940 * t17465 - 1452) * t17450
            t17468 = 17391 * t17458 ** 2 + 2303 * t17449 - 47652 * t17453 + 301444 * t17455 - 767338 * t17457 + 721578 * t17459 + 165308 * t17461 - 653852 * t17463 + 260865 * t17465 - 47
            t17451 = 5 * phi1
            tfunc[..., c] = (0.37e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.3045e4) * ((t17468 + t17469) * np.exp((2*1j) * (t17451 - 6 * phi2)) + (t17468 - t17469) * np.exp((2*1j) * (t17451 + 6 * phi2)))

        if Bindx == 736:
            t17489 = np.cos(phi)
            t17509 = -10 * t17489
            t17488 = t17489 ** 2
            t17491 = t17489 * t17488
            t17492 = t17488 ** 2
            t17493 = t17489 * t17492
            t17494 = t17491 ** 2
            t17495 = t17489 * t17494
            t17496 = t17492 ** 2
            t17497 = t17489 * t17496
            t17498 = t17493 ** 2
            t17500 = t17494 ** 2
            t17502 = t17495 ** 2
            t17504 = t17496 ** 2
            t17508 = t17504 * t17509 - 80 * t17491 + 168 * t17493 + 208 * t17495 - 572 * t17497 + t17509 + (208 * t17498 + 168 * t17500 - 80 * t17502) * t17489
            t17507 = t17497 ** 2 + 41 * t17488 + 36 * t17492 - 364 * t17494 + 286 * t17496 + 286 * t17498 - 364 * t17500 + 36 * t17502 + 41 * t17504 + 1
            t17490 = 5 * phi1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.840565e6) * ((t17507 + t17508) * np.exp((2*1j) * (t17490 - 9 * phi2)) + (t17507 - t17508) * np.exp((2*1j) * (t17490 + 9 * phi2)))

        if Bindx == 737:
            t17510 = np.cos(phi)
            t17511 = t17510 ** 2
            t17512 = t17511 ** 2
            tfunc[..., c] = (0.111e3 / 0.32768e5*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.45242610e8) * ((1 - t17510) ** (0.11e2 / 0.2e1)) * ((1 + t17510) ** (0.11e2 / 0.2e1)) * t17510 * (-1023 * t17512 - 5 + (1705 * t17512 + 155) * t17511)

        if Bindx == 738:
            t17531 = np.cos(phi)
            t17530 = t17531 ** 2
            t17534 = t17530 ** 2
            t17538 = t17534 ** 2
            t17547 = 7905 * t17538 ** 2
            t17533 = t17531 * t17530
            t17536 = t17533 ** 2
            t17537 = t17531 * t17536
            t17544 = t17537 ** 2
            t17542 = t17536 ** 2
            t17535 = t17531 * t17534
            t17540 = t17535 ** 2
            t17532 = 11 * phi1
            t17523 = t17531 * t17538
            t17521 = t17531 * t17540
            t17519 = t17531 * t17542
            t17517 = t17531 * t17544
            tfunc[..., c] = (-0.111e3 / 0.32768e5*1j) * ((1 - t17531) ** (0.5e1 / 0.2e1)) * np.sqrt(0.145145e6) * ((1 + t17531) ** (-0.1e1 / 0.2e1)) * ((t17547 - 5270 * t17517 - 41106 * t17544 + 23498 * t17519 + 90210 * t17542 - 41478 * t17521 - 107874 * t17540 + 35914 * t17523 + 75228 * t17538 - 14770 * t17537 - 29958 * t17536 + 1806 * t17535 + 5982 * t17534 + 334 * t17533 - 390 * t17530 - 34 * t17531 + 3) * np.exp((1j) * (t17532 - 6 * phi2)) + (t17547 + 52700 * t17517 + 132804 * t17544 + 125116 * t17519 - 68696 * t17542 - 248124 * t17521 - 149476 * t17540 + 82356 * t17523 + 132714 * t17538 + 26436 * t17537 - 32356 * t17536 - 15804 * t17535 + 1552 * t17534 + 1948 * t17533 + 132 * t17530 - 52 * t17531 - 3) * np.exp((1j) * (t17532 + 6 * phi2)))

        if Bindx == 739:
            t17568 = np.cos(phi)
            t17567 = t17568 ** 2
            t17570 = t17568 * t17567
            t17571 = t17567 ** 2
            t17572 = t17568 * t17571
            t17573 = t17570 ** 2
            t17574 = t17568 * t17573
            t17575 = t17571 ** 2
            t17576 = t17568 * t17575
            t17577 = t17572 ** 2
            t17579 = t17573 ** 2
            t17581 = t17574 ** 2
            t17583 = t17575 ** 2
            t17585 = t17576 ** 2
            t17588 = -10505 * t17570 - 66660 * t17572 + 632060 * t17574 - 1681394 * t17576 + (1738386 * t17577 - 215012 * t17579 - 746356 * t17581 + 330429 * t17583 + 17391 * t17585 + 1661) * t17568
            t17587 = 9828 * t17567 - 104330 * t17571 + 391622 * t17573 - 426426 * t17575 - 657514 * t17577 + 1930786 * t17579 - 1458798 * t17581 + 187550 * t17583 + 127534 * t17585 - 252
            t17569 = 11 * phi1
            tfunc[..., c] = (0.37e2 / 0.16384e5*1j) * np.sqrt(0.105e3) * ((1 + t17568) ** (-0.1e1 / 0.2e1)) * ((1 - t17568) ** (-0.1e1 / 0.2e1)) * ((-t17587 + t17588) * np.exp((1j) * (t17569 - 12 * phi2)) + (t17587 + t17588) * np.exp((1j) * (t17569 + 12 * phi2)))

        if Bindx == 740:
            t17605 = np.cos(phi)
            t17604 = t17605 ** 2
            t17608 = t17604 ** 2
            t17607 = t17605 * t17604
            t17609 = t17607 ** 2
            t17611 = t17608 ** 2
            t17612 = t17605 * t17611
            t17613 = t17605 * t17612
            t17610 = t17605 * t17609
            t17616 = t17610 ** 2
            t17618 = t17611 ** 2
            t17621 = 1 + 52 * t17604 + 168 * t17608 - 364 * t17609 - 286 * t17611 + 572 * t17613 - 132 * t17616 - 11 * t17618
            t17620 = -132 * t17607 + 572 * t17610 - 286 * t17612 + ((168 * t17604 - 364) * t17613 + 52 * t17616 + t17618 - 11) * t17605
            t17606 = 11 * phi1
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.sqrt(0.28985e5) * np.sqrt((1 - t17605)) * np.sqrt((1 + t17605)) * ((t17620 + t17621) * np.exp((1j) * (t17606 - 18 * phi2)) + (t17620 - t17621) * np.exp((1j) * (t17606 + 18 * phi2)))

        if Bindx == 741:
            t17630 = np.sin(phi)
            t17626 = t17630 ** 2
            t17627 = t17630 * t17626
            t17628 = t17627 ** 2
            t17622 = np.cos(phi)
            t17623 = t17622 ** 2
            t17624 = t17623 ** 2
            tfunc[..., c] = (0.555e3 / 0.32768e5) * np.exp((12*1j) * phi1) * np.sqrt(0.215441e6) * t17628 ** 2 * (-1023 * t17624 - 1 + (2387 * t17624 + 93) * t17623)

        if Bindx == 742:
            t17650 = np.cos(phi)
            t17649 = t17650 ** 2
            t17652 = t17650 * t17649
            t17653 = t17649 ** 2
            t17654 = t17650 * t17653
            t17655 = t17652 ** 2
            t17656 = t17650 * t17655
            t17657 = t17653 ** 2
            t17658 = t17650 * t17657
            t17659 = t17654 ** 2
            t17661 = t17655 ** 2
            t17663 = t17656 ** 2
            t17665 = t17657 ** 2
            t17669 = 4040 * t17652 - 28824 * t17654 + 83880 * t17656 - 89104 * t17658 + (-49320 * t17659 + 195672 * t17661 - 160456 * t17663 + 44268 * t17665 - 156) * t17650
            t17668 = 11067 * t17658 ** 2 - 405 * t17649 + 7212 * t17653 - 55180 * t17655 + 204270 * t17657 - 395310 * t17659 + 401228 * t17661 - 187116 * t17663 + 14229 * t17665 + 5
            t17651 = 2 * phi1
            tfunc[..., c] = (0.185e3 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.12441e5) * ((t17668 - t17669) * np.exp((6*1j) * (t17651 - phi2)) + (t17668 + t17669) * np.exp((6*1j) * (t17651 + phi2)))

        if Bindx == 743:
            t17689 = np.cos(phi)
            t17688 = t17689 ** 2
            t17690 = t17689 * t17688
            t17691 = t17688 ** 2
            t17692 = t17689 * t17691
            t17693 = t17690 ** 2
            t17694 = t17689 * t17693
            t17695 = t17691 ** 2
            t17696 = t17689 * t17695
            t17697 = t17692 ** 2
            t17699 = t17693 ** 2
            t17701 = t17694 ** 2
            t17703 = t17695 ** 2
            t17707 = -196280 * t17690 + 2118732 * t17692 - 6527664 * t17694 + 5368220 * t17696 + (6361992 * t17697 - 11481036 * t17699 + 3393632 * t17701 + 973896 * t17703 - 3300) * t17689
            t17706 = 121737 * t17696 ** 2 - 126495 * t17688 + 697620 * t17691 - 44044 * t17693 - 6899178 * t17695 + 15069054 * t17697 - 9157148 * t17699 - 2631900 * t17701 + 2973861 * t17703 + 4685
            tfunc[..., c] = (0.37e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t17706 - t17707) * np.exp((12*1j) * (phi1 - phi2)) + (t17706 + t17707) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 744:
            t17726 = np.cos(phi)
            t17725 = t17726 ** 2
            t17728 = t17726 * t17725
            t17729 = t17725 ** 2
            t17730 = t17726 * t17729
            t17731 = t17728 ** 2
            t17732 = t17726 * t17731
            t17734 = t17730 ** 2
            t17736 = t17731 ** 2
            t17738 = t17732 ** 2
            t17733 = t17729 ** 2
            t17740 = t17733 ** 2
            t17741 = t17726 * t17740
            t17744 = 184 * t17728 + 168 * t17730 - 936 * t17732 - 12 * t17741 + (936 * t17734 - 168 * t17736 - 184 * t17738 + 12) * t17726
            t17743 = t17726 * t17741 - 63 * t17725 - 300 * t17729 + 364 * t17731 + 858 * t17733 - 858 * t17734 - 364 * t17736 + 300 * t17738 + 63 * t17740 - 1
            t17727 = 2 * phi1
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.121737e6) * ((t17743 + t17744) * np.exp((6*1j) * (t17727 - 3 * phi2)) + (t17743 - t17744) * np.exp((6*1j) * (t17727 + 3 * phi2)))

        if Bindx == 745:
            t17745 = np.cos(phi)
            t17746 = t17745 ** 2
            tfunc[..., c] = (-0.555e3 / 0.32768e5*1j) * np.exp((13*1j) * phi1) * np.sqrt(0.40072026e8) * ((1 - t17745) ** (0.13e2 / 0.2e1)) * ((1 + t17745) ** (0.13e2 / 0.2e1)) * t17745 * (1 + (-22 + 77 * t17746) * t17746)

        if Bindx == 746:
            t17764 = np.cos(phi)
            t17763 = t17764 ** 2
            t17766 = t17764 * t17763
            t17769 = t17766 ** 2
            t17770 = t17764 * t17769
            t17777 = t17770 ** 2
            t17779 = 357 * t17764 * t17777
            t17775 = t17769 ** 2
            t17767 = t17763 ** 2
            t17768 = t17764 * t17767
            t17773 = t17768 ** 2
            t17771 = t17767 ** 2
            t17765 = 13 * phi1
            t17756 = t17764 * t17771
            t17754 = t17764 * t17773
            t17752 = t17764 * t17775
            tfunc[..., c] = (0.555e3 / 0.32768e5*1j) * ((1 - t17764) ** (0.7e1 / 0.2e1)) * np.sqrt(0.128557e6) * ((1 + t17764) ** (-0.1e1 / 0.2e1)) * ((t17779 - 119 * t17777 - 1955 * t17752 + 497 * t17775 + 4473 * t17754 - 747 * t17773 - 5487 * t17756 + 397 * t17771 + 3823 * t17770 + 107 * t17769 - 1449 * t17768 - 189 * t17767 + 243 * t17766 + 55 * t17763 - 5 * t17764 - 1) * np.exp((1j) * (t17765 - 6 * phi2)) + (t17779 + 2975 * t17777 + 10421 * t17752 + 19087 * t17775 + 16953 * t17754 - 45 * t17773 - 15575 * t17756 - 13773 * t17771 - 2001 * t17770 + 3981 * t17769 + 2399 * t17768 + 125 * t17767 - 269 * t17766 - 63 * t17763 + 3 * t17764 + 1) * np.exp((1j) * (t17765 + 6 * phi2)))

        if Bindx == 747:
            t17799 = np.cos(phi)
            t17798 = t17799 ** 2
            t17802 = t17798 ** 2
            t17806 = t17802 ** 2
            t17807 = t17799 * t17806
            t17817 = 3927 * t17807 ** 2
            t17814 = t17806 ** 2
            t17801 = t17799 * t17798
            t17804 = t17801 ** 2
            t17805 = t17799 * t17804
            t17812 = t17805 ** 2
            t17810 = t17804 ** 2
            t17803 = t17799 * t17802
            t17808 = t17803 ** 2
            t17800 = 13 * phi1
            t17789 = t17799 * t17808
            t17787 = t17799 * t17810
            t17785 = t17799 * t17812
            t17783 = t17799 * t17814
            tfunc[..., c] = (-0.37e2 / 0.16384e5*1j) * np.sqrt((1 - t17799)) * np.sqrt(0.93e2) * ((1 + t17799) ** (-0.1e1 / 0.2e1)) * ((t17817 - 30107 * t17783 + 84898 * t17814 - 72688 * t17785 - 137860 * t17812 + 367346 * t17787 - 175266 * t17810 - 352716 * t17789 + 486486 * t17808 - 22880 * t17807 - 338338 * t17806 + 191048 * t17805 + 68068 * t17804 - 95018 * t17803 + 13090 * t17802 + 15540 * t17801 - 5325 * t17798 - 525 * t17799 + 320) * np.exp((1j) * (t17800 - 12 * phi2)) + (t17817 + 37961 * t17783 + 152966 * t17814 + 310552 * t17785 + 245380 * t17812 - 259826 * t17787 - 802438 * t17810 - 624988 * t17789 + 214214 * t17808 + 723580 * t17807 + 408122 * t17806 - 121264 * t17805 - 244244 * t17804 - 81158 * t17803 + 26950 * t17802 + 24500 * t17801 + 3635 * t17798 - 1165 * t17799 - 320) * np.exp((1j) * (t17800 + 12 * phi2)))

        if Bindx == 748:
            t17836 = np.cos(phi)
            t17835 = t17836 ** 2
            t17839 = t17835 ** 2
            t17838 = t17836 * t17835
            t17841 = t17838 ** 2
            t17843 = t17839 ** 2
            t17840 = t17836 * t17839
            t17845 = t17840 ** 2
            t17847 = t17841 ** 2
            t17842 = t17836 * t17841
            t17849 = t17842 ** 2
            t17851 = t17843 ** 2
            t17854 = -1 - 76 * t17835 - 560 * t17839 - 364 * t17841 + 1430 * t17843 + 572 * t17845 - 728 * t17847 - 260 * t17849 - 13 * t17851
            t17853 = 260 * t17838 + 728 * t17840 - 572 * t17842 + (-1430 * t17843 + 364 * t17845 + 560 * t17847 + 76 * t17849 + t17851 + 13) * t17836
            t17837 = 13 * phi1
            tfunc[..., c] = (-0.111e3 / 0.65536e5*1j) * np.sqrt(0.1309e4) * np.sqrt((1 - t17836)) * np.sqrt((1 + t17836)) * ((t17853 + t17854) * np.exp((1j) * (t17837 - 18 * phi2)) + (t17853 - t17854) * np.exp((1j) * (t17837 + 18 * phi2)))

        if Bindx == 749:
            t17863 = np.sin(phi)
            t17858 = t17863 ** 2
            t17859 = t17863 * t17858
            t17861 = t17863 * t17859 ** 2
            t17855 = np.cos(phi)
            t17856 = t17855 ** 2
            tfunc[..., c] = -(0.111e3 / 0.131072e6) * np.exp((14*1j) * phi1) * np.sqrt(0.100180065e9) * t17861 ** 2 * (1 + (-66 + 385 * t17856) * t17856)

        if Bindx == 750:
            t17883 = np.cos(phi)
            t17882 = t17883 ** 2
            t17885 = t17883 * t17882
            t17886 = t17882 ** 2
            t17887 = t17883 * t17886
            t17888 = t17885 ** 2
            t17889 = t17883 * t17888
            t17890 = t17886 ** 2
            t17891 = t17883 * t17890
            t17892 = t17887 ** 2
            t17894 = t17888 ** 2
            t17896 = t17889 ** 2
            t17898 = t17890 ** 2
            t17902 = -2320 * t17885 + 15912 * t17887 - 48240 * t17889 + 67780 * t17891 + (-32368 * t17892 - 20440 * t17894 + 27888 * t17896 - 8330 * t17898 + 118) * t17883
            t17901 = 1785 * t17891 ** 2 + 385 * t17882 - 1820 * t17886 - 3948 * t17888 + 39950 * t17890 - 95218 * t17892 + 103060 * t17894 - 50460 * t17896 + 6273 * t17898 - 7
            t17884 = 7 * phi1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.642785e6) * ((t17901 + t17902) * np.exp((2*1j) * (t17884 - 3 * phi2)) + (t17901 - t17902) * np.exp((2*1j) * (t17884 + 3 * phi2)))

        if Bindx == 751:
            t17922 = np.cos(phi)
            t17921 = t17922 ** 2
            t17924 = t17922 * t17921
            t17925 = t17921 ** 2
            t17926 = t17922 * t17925
            t17927 = t17924 ** 2
            t17928 = t17922 * t17927
            t17929 = t17925 ** 2
            t17930 = t17922 * t17929
            t17931 = t17926 ** 2
            t17933 = t17927 ** 2
            t17935 = t17928 ** 2
            t17937 = t17929 ** 2
            t17941 = -33544 * t17924 + 35112 * t17926 + 326040 * t17928 - 814528 * t17930 + (366184 * t17931 + 407512 * t17933 - 253176 * t17935 - 36652 * t17937 + 3052) * t17922
            t17940 = 3927 * t17930 ** 2 + 599 * t17921 + 68684 * t17925 - 300300 * t17927 + 230230 * t17929 + 538538 * t17931 - 794612 * t17933 + 113844 * t17935 + 139689 * t17937 - 599
            t17923 = 7 * phi1
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.465e3) * ((t17940 + t17941) * np.exp((2*1j) * (t17923 - 6 * phi2)) + (t17940 - t17941) * np.exp((2*1j) * (t17923 + 6 * phi2)))

        if Bindx == 752:
            t17961 = np.cos(phi)
            t17981 = -14 * t17961
            t17960 = t17961 ** 2
            t17963 = t17961 * t17960
            t17964 = t17960 ** 2
            t17965 = t17961 * t17964
            t17966 = t17963 ** 2
            t17967 = t17961 * t17966
            t17968 = t17964 ** 2
            t17969 = t17961 * t17968
            t17970 = t17965 ** 2
            t17972 = t17966 ** 2
            t17974 = t17967 ** 2
            t17976 = t17968 ** 2
            t17980 = t17976 * t17981 - 336 * t17963 - 1288 * t17965 + 208 * t17967 + 2860 * t17969 + t17981 + (208 * t17970 - 1288 * t17972 - 336 * t17974) * t17961
            t17979 = t17969 ** 2 + 89 * t17960 + 820 * t17964 + 1092 * t17966 - 2002 * t17968 - 2002 * t17970 + 1092 * t17972 + 820 * t17974 + 89 * t17976 + 1
            t17962 = 7 * phi1
            tfunc[..., c] = (0.111e3 / 0.524288e6) * np.sqrt(0.6545e4) * np.sqrt(0.2e1) * ((t17979 + t17980) * np.exp((2*1j) * (t17962 - 9 * phi2)) + (t17979 - t17980) * np.exp((2*1j) * (t17962 + 9 * phi2)))

        if Bindx == 753:
            t17982 = np.cos(phi)
            tfunc[..., c] = (0.111e3 / 0.65536e5*1j) * np.exp((15*1j) * phi1) * np.sqrt(0.367326905e9) * ((1 - t17982) ** (0.15e2 / 0.2e1)) * ((1 + t17982) ** (0.15e2 / 0.2e1)) * t17982 * (35 * t17982 ** 2 - 3)

        if Bindx == 754:
            t17997 = np.cos(phi)
            t17996 = t17997 ** 2
            t17999 = t17997 * t17996
            t18002 = t17999 ** 2
            t18003 = t17997 * t18002
            t18011 = 1785 * t18003 ** 2
            t18008 = t18002 ** 2
            t18000 = t17996 ** 2
            t18001 = t17997 * t18000
            t18006 = t18001 ** 2
            t18004 = t18000 ** 2
            t17998 = 5 * phi1
            t17989 = t17997 * t18004
            t17987 = t17997 * t18006
            tfunc[..., c] = (-0.37e2 / 0.131072e6*1j) * np.sqrt(0.2e1) * ((1 - t17997) ** (0.9e1 / 0.2e1)) * np.sqrt(0.175305e6) * ((1 + t17997) ** (-0.1e1 / 0.2e1)) * ((t18011 - 10251 * t18008 - 440 * t17987 + 24461 * t18006 + 2200 * t17989 - 31015 * t18004 - 4400 * t18003 + 21995 * t18002 + 4400 * t18001 - 8225 * t18000 - 2200 * t17999 + 1231 * t17996 + 440 * t17997 + 19) * np.exp((3*1j) * (t17998 - 2 * phi2)) + (201380 * t17987 + 310310 * t17989 + 2219 * t17996 + 4260 * t17999 - 9075 * t18000 - 53658 * t18001 - 91245 * t18002 - 29832 * t18003 + 148335 * t18004 + 319561 * t18006 + 78999 * t18008 + t18011 - 19 + (17850 * t18008 + 250) * t17997) * np.exp((3*1j) * (t17998 + 2 * phi2)))

        if Bindx == 755:
            t18030 = np.cos(phi)
            t18029 = t18030 ** 2
            t18033 = t18029 ** 2
            t18037 = t18033 ** 2
            t18045 = t18037 ** 2
            t18047 = 357 * t18030 * t18045
            t18032 = t18030 * t18029
            t18035 = t18032 ** 2
            t18036 = t18030 * t18035
            t18043 = t18036 ** 2
            t18041 = t18035 ** 2
            t18034 = t18030 * t18033
            t18039 = t18034 ** 2
            t18031 = 5 * phi1
            t18022 = t18030 * t18037
            t18020 = t18030 * t18039
            t18018 = t18030 * t18041
            t18016 = t18030 * t18043
            tfunc[..., c] = (0.37e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 - t18030) ** (0.3e1 / 0.2e1)) * np.sqrt(0.1705e4) * ((1 + t18030) ** (-0.1e1 / 0.2e1)) * ((t18047 - 2856 * t18045 + 8670 * t18016 - 9494 * t18043 - 9406 * t18018 + 36682 * t18041 - 28474 * t18020 - 22286 * t18039 + 51788 * t18022 - 19998 * t18037 - 23430 * t18036 + 25086 * t18035 - 2578 * t18034 - 7394 * t18033 + 3554 * t18032 + 166 * t18029 - 481 * t18030 + 94) * np.exp((3*1j) * (t18031 - 4 * phi2)) + (t18047 + 4284 * t18045 + 22950 * t18016 + 71306 * t18043 + 137914 * t18018 + 158522 * t18041 + 67886 * t18020 - 94094 * t18039 - 188188 * t18022 - 136422 * t18037 - 16302 * t18036 + 51870 * t18035 + 43862 * t18034 + 13006 * t18033 - 2086 * t18032 - 2842 * t18029 - 857 * t18030 - 94) * np.exp((3*1j) * (t18031 + 4 * phi2)))

        if Bindx == 756:
            t18066 = np.cos(phi)
            t18065 = t18066 ** 2
            t18069 = t18065 ** 2
            t18073 = t18069 ** 2
            t18085 = 1430 * t18073
            t18068 = t18066 * t18065
            t18071 = t18068 ** 2
            t18070 = t18066 * t18069
            t18075 = t18070 ** 2
            t18077 = t18071 ** 2
            t18072 = t18066 * t18071
            t18079 = t18072 ** 2
            t18081 = t18073 ** 2
            t18084 = 1 + 104 * t18065 + 1260 * t18069 + 3640 * t18071 + t18085 - 3432 * t18075 - 2548 * t18077 - 440 * t18079 - 15 * t18081
            t18083 = -440 * t18068 - 2548 * t18070 - 3432 * t18072 + (3640 * t18075 + 1260 * t18077 + 104 * t18079 + t18081 + t18085 - 15) * t18066
            t18067 = 5 * phi1
            tfunc[..., c] = (-0.37e2 / 0.262144e6*1j) * np.sqrt(0.2e1) * np.sqrt(0.1785e4) * np.sqrt((1 - t18066)) * np.sqrt((1 + t18066)) * ((t18083 + t18084) * np.exp((3*1j) * (t18067 - 6 * phi2)) + (t18083 - t18084) * np.exp((3*1j) * (t18067 + 6 * phi2)))

        if Bindx == 757:
            t18091 = np.sin(phi)
            t18087 = t18091 ** 2
            t18088 = t18087 ** 2
            t18089 = t18088 ** 2
            t18086 = np.cos(phi)
            tfunc[..., c] = (0.111e3 / 0.131072e6) * np.exp((16*1j) * phi1) * np.sqrt(0.129644790e9) * t18089 ** 2 * (35 * t18086 ** 2 - 1)

        if Bindx == 758:
            t18111 = np.cos(phi)
            t18110 = t18111 ** 2
            t18113 = t18111 * t18110
            t18114 = t18110 ** 2
            t18115 = t18111 * t18114
            t18116 = t18113 ** 2
            t18117 = t18111 * t18116
            t18118 = t18114 ** 2
            t18119 = t18111 * t18118
            t18120 = t18115 ** 2
            t18122 = t18116 ** 2
            t18124 = t18117 ** 2
            t18126 = t18118 ** 2
            t18130 = -160 * t18113 + 2144 * t18115 - 7200 * t18117 + 10560 * t18119 + (-6624 * t18120 + 160 * t18122 + 1696 * t18124 - 560 * t18126 - 16) * t18111
            t18129 = 105 * t18119 ** 2 + 225 * t18110 - 1300 * t18114 + 2276 * t18116 + 770 * t18118 - 7106 * t18120 + 8860 * t18122 - 4460 * t18124 + 639 * t18126 - 9
            t18112 = 8 * phi1
            tfunc[..., c] = (0.111e3 / 0.131072e6) * ((t18129 + t18130) * np.exp((2*1j) * (t18112 - 3 * phi2)) + (t18129 - t18130) * np.exp((2*1j) * (t18112 + 3 * phi2))) * np.sqrt(0.993395e6)

        if Bindx == 759:
            t18150 = np.cos(phi)
            t18149 = t18150 ** 2
            t18152 = t18150 * t18149
            t18153 = t18149 ** 2
            t18154 = t18150 * t18153
            t18155 = t18152 ** 2
            t18156 = t18150 * t18155
            t18157 = t18153 ** 2
            t18158 = t18150 * t18157
            t18159 = t18154 ** 2
            t18161 = t18155 ** 2
            t18163 = t18156 ** 2
            t18165 = t18157 ** 2
            t18169 = -224 * t18152 + 2800 * t18154 - 2496 * t18156 - 6864 * t18158 + (8736 * t18159 + 784 * t18161 - 2432 * t18163 - 224 * t18165 - 80) * t18150
            t18168 = 21 * t18158 ** 2 + 261 * t18149 - 868 * t18153 - 2548 * t18155 + 8294 * t18157 - 2002 * t18159 - 6916 * t18161 + 2732 * t18163 + 1017 * t18165 + 9
            t18151 = 4 * phi1
            tfunc[..., c] = (0.37e2 / 0.65536e5) * ((t18168 + t18169) * np.exp((4*1j) * (t18151 - 3 * phi2)) + (t18168 - t18169) * np.exp((4*1j) * (t18151 + 3 * phi2))) * np.sqrt(0.86955e5)

        if Bindx == 760:
            t18188 = np.cos(phi)
            t18187 = t18188 ** 2
            t18190 = t18188 * t18187
            t18191 = t18187 ** 2
            t18192 = t18188 * t18191
            t18193 = t18190 ** 2
            t18194 = t18188 * t18193
            t18196 = t18192 ** 2
            t18198 = t18193 ** 2
            t18200 = t18194 ** 2
            t18195 = t18191 ** 2
            t18202 = t18195 ** 2
            t18203 = t18188 * t18202
            t18206 = 544 * t18190 + 3808 * t18192 + 7072 * t18194 - 16 * t18203 + 16 * (-442 * t18196 - 238 * t18198 - 34 * t18200 + 1) * t18188
            t18205 = t18188 * t18203 - 119 * t18187 - 1700 * t18191 - 6188 * t18193 - 4862 * t18195 + 4862 * t18196 + 6188 * t18198 + 1700 * t18200 + 119 * t18202 - 1
            t18189 = 8 * phi1
            tfunc[..., c] = (0.111e3 / 0.262144e6) * ((t18205 + t18206) * np.exp((2*1j) * (t18189 - 9 * phi2)) + (t18205 - t18206) * np.exp((2*1j) * (t18189 + 9 * phi2))) * np.sqrt(0.35e2)

        if Bindx == 761:
            t18207 = np.cos(phi)
            tfunc[..., c] = (-0.555e3 / 0.65536e5*1j) * np.exp((17*1j) * phi1) * np.sqrt(0.90751353e8) * ((1 - t18207) ** (0.17e2 / 0.2e1)) * ((1 + t18207) ** (0.17e2 / 0.2e1)) * t18207

        if Bindx == 762:
            t18222 = np.cos(phi)
            t18236 = 3 * t18222
            t18221 = t18222 ** 2
            t18224 = t18222 * t18221
            t18227 = t18224 ** 2
            t18233 = t18227 ** 2
            t18235 = t18233 * t18236
            t18225 = t18221 ** 2
            t18226 = t18222 * t18225
            t18231 = t18226 ** 2
            t18229 = t18225 ** 2
            t18223 = 17 * phi1
            t18216 = t18222 * t18227
            t18214 = t18222 * t18229
            t18212 = t18222 * t18231
            tfunc[..., c] = (0.555e3 / 0.131072e6*1j) * np.sqrt(0.1390753e7) * ((1 - t18222) ** (0.11e2 / 0.2e1)) * np.sqrt(0.2e1) * ((1 + t18222) ** (-0.1e1 / 0.2e1)) * ((t18235 + t18233 - 18 * t18212 - 6 * t18231 + 45 * t18214 + 15 * t18229 - 60 * t18216 - 20 * t18227 + 45 * t18226 + 15 * t18225 - 18 * t18224 - 6 * t18221 + t18236 + 1) * np.exp((1j) * (t18223 - 6 * phi2)) + (t18235 + 35 * t18233 + 186 * t18212 + 594 * t18231 + 1265 * t18214 + 1881 * t18229 + 1980 * t18216 + 1452 * t18227 + 693 * t18226 + 165 * t18225 - 22 * t18224 - 30 * t18221 - 9 * t18222 - 1) * np.exp((1j) * (t18223 + 6 * phi2)))

        if Bindx == 763:
            t18254 = np.cos(phi)
            t18253 = t18254 ** 2
            t18257 = t18253 ** 2
            t18261 = t18257 ** 2
            t18270 = 3 * t18261 ** 2
            t18256 = t18254 * t18253
            t18259 = t18256 ** 2
            t18260 = t18254 * t18259
            t18267 = t18260 ** 2
            t18265 = t18259 ** 2
            t18258 = t18254 * t18257
            t18263 = t18258 ** 2
            t18255 = 17 * phi1
            t18246 = t18254 * t18261
            t18244 = t18254 * t18263
            t18242 = t18254 * t18265
            t18240 = t18254 * t18267
            tfunc[..., c] = (-0.37e2 / 0.65536e5*1j) * np.sqrt(0.2e1) * ((1 - t18254) ** (0.5e1 / 0.2e1)) * np.sqrt(0.121737e6) * ((1 + t18254) ** (-0.1e1 / 0.2e1)) * ((t18270 - 25 * t18240 + 81 * t18267 - 105 * t18242 - 51 * t18265 + 339 * t18244 - 363 * t18263 - 77 * t18246 + 495 * t18261 - 363 * t18260 - 77 * t18259 + 261 * t18258 - 129 * t18257 - 15 * t18256 + 39 * t18253 - 15 * t18254 + 2) * np.exp((1j) * (t18255 - 12 * phi2)) + (t18270 + 43 * t18240 + 285 * t18267 + 1155 * t18242 + 3185 * t18265 + 6279 * t18244 + 9009 * t18263 + 9295 * t18246 + 6435 * t18261 + 2145 * t18260 - 1001 * t18259 - 1911 * t18258 - 1365 * t18257 - 595 * t18256 - 165 * t18253 - 27 * t18254 - 2) * np.exp((1j) * (t18255 + 12 * phi2)))

        if Bindx == 764:
            t18289 = np.cos(phi)
            t18288 = t18289 ** 2
            t18292 = t18288 ** 2
            t18291 = t18289 * t18288
            t18294 = t18291 ** 2
            t18296 = t18292 ** 2
            t18293 = t18289 * t18292
            t18298 = t18293 ** 2
            t18300 = t18294 ** 2
            t18295 = t18289 * t18294
            t18302 = t18295 ** 2
            t18304 = t18296 ** 2
            t18307 = -1 - 136 * t18288 - 2380 * t18292 - 12376 * t18294 - 24310 * t18296 - 19448 * t18298 - 6188 * t18300 - 680 * t18302 - 17 * t18304
            t18306 = 680 * t18291 + 6188 * t18293 + 19448 * t18295 + (24310 * t18296 + 12376 * t18298 + 2380 * t18300 + 136 * t18302 + t18304 + 17) * t18289
            t18290 = 17 * phi1
            tfunc[..., c] = (-0.111e3 / 0.262144e6*1j) * np.sqrt(0.2e1) * np.sqrt((1 - t18289)) * np.sqrt((1 + t18289)) * ((t18306 + t18307) * np.exp((1j) * (t18290 - 18 * phi2)) + (t18306 - t18307) * np.exp((1j) * (t18290 + 18 * phi2)))

        if Bindx == 765:
            t18313 = np.sin(phi)
            t18308 = t18313 ** 2
            t18309 = t18308 ** 2
            t18311 = t18313 * t18309 ** 2
            tfunc[..., c] = -(0.185e3 / 0.131072e6) * np.exp((18*1j) * phi1) * np.sqrt(0.90751353e8) * t18311 ** 2

        if Bindx == 766:
            t18333 = np.cos(phi)
            t18353 = -6 * t18333
            t18332 = t18333 ** 2
            t18335 = t18333 * t18332
            t18336 = t18332 ** 2
            t18337 = t18333 * t18336
            t18338 = t18335 ** 2
            t18339 = t18333 * t18338
            t18340 = t18336 ** 2
            t18341 = t18333 * t18340
            t18342 = t18337 ** 2
            t18344 = t18338 ** 2
            t18346 = t18339 ** 2
            t18348 = t18340 ** 2
            t18352 = t18348 * t18353 + 16 * t18335 + 24 * t18337 - 144 * t18339 + 220 * t18341 + t18353 + (-144 * t18342 + 24 * t18344 + 16 * t18346) * t18333
            t18351 = t18341 ** 2 + 9 * t18332 - 60 * t18336 + 116 * t18338 - 66 * t18340 - 66 * t18342 + 116 * t18344 - 60 * t18346 + 9 * t18348 + 1
            t18334 = 3 * phi1
            tfunc[..., c] = (0.555e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.1390753e7) * ((t18351 + t18352) * np.exp((6*1j) * (t18334 - phi2)) + (t18351 - t18352) * np.exp((6*1j) * (t18334 + phi2)))

        if Bindx == 767:
            t18372 = np.cos(phi)
            t18371 = t18372 ** 2
            t18374 = t18372 * t18371
            t18375 = t18371 ** 2
            t18376 = t18372 * t18375
            t18377 = t18374 ** 2
            t18378 = t18372 * t18377
            t18380 = t18376 ** 2
            t18382 = t18377 ** 2
            t18384 = t18378 ** 2
            t18379 = t18375 ** 2
            t18386 = t18379 ** 2
            t18387 = t18372 * t18386
            t18390 = 184 * t18374 + 168 * t18376 - 936 * t18378 - 12 * t18387 + (936 * t18380 - 168 * t18382 - 184 * t18384 + 12) * t18372
            t18389 = t18372 * t18387 - 63 * t18371 - 300 * t18375 + 364 * t18377 + 858 * t18379 - 858 * t18380 - 364 * t18382 + 300 * t18384 + 63 * t18386 - 1
            t18373 = 3 * phi1
            tfunc[..., c] = (0.37e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.121737e6) * ((t18389 + t18390) * np.exp((6*1j) * (t18373 - 2 * phi2)) + (t18389 - t18390) * np.exp((6*1j) * (t18373 + 2 * phi2)))

        if Bindx == 768:
            t18410 = np.cos(phi)
            t18429 = -18 * t18410
            t18409 = t18410 ** 2
            t18411 = t18410 * t18409
            t18412 = t18409 ** 2
            t18413 = t18410 * t18412
            t18414 = t18411 ** 2
            t18415 = t18410 * t18414
            t18416 = t18412 ** 2
            t18417 = t18410 * t18416
            t18418 = t18413 ** 2
            t18420 = t18414 ** 2
            t18422 = t18415 ** 2
            t18424 = t18416 ** 2
            t18428 = t18424 * t18429 - 816 * t18411 - 8568 * t18413 - 31824 * t18415 - 48620 * t18417 + t18429 + (-31824 * t18418 - 8568 * t18420 - 816 * t18422) * t18410
            t18427 = t18417 ** 2 + 153 * t18409 + 3060 * t18412 + 18564 * t18414 + 43758 * t18416 + 43758 * t18418 + 18564 * t18420 + 3060 * t18422 + 153 * t18424 + 1
            tfunc[..., c] = (0.37e2 / 0.524288e6) * np.sqrt(0.2e1) * ((t18427 + t18428) * np.exp((18*1j) * (phi1 - phi2)) + (t18427 - t18428) * np.exp((18*1j) * (phi1 + phi2)))

        if Bindx == 769:
            t18449 = np.cos(phi)
            t18469 = -6 * t18449
            t18448 = t18449 ** 2
            t18451 = t18449 * t18448
            t18452 = t18448 ** 2
            t18453 = t18449 * t18452
            t18454 = t18451 ** 2
            t18455 = t18449 * t18454
            t18456 = t18452 ** 2
            t18457 = t18449 * t18456
            t18458 = t18453 ** 2
            t18460 = t18454 ** 2
            t18462 = t18455 ** 2
            t18464 = t18456 ** 2
            t18468 = t18464 * t18469 + 16 * t18451 + 24 * t18453 - 144 * t18455 + 220 * t18457 + t18469 + (-144 * t18458 + 24 * t18460 + 16 * t18462) * t18449
            t18467 = -t18457 ** 2 - 9 * t18448 + 60 * t18452 - 116 * t18454 + 66 * t18456 + 66 * t18458 - 116 * t18460 + 60 * t18462 - 9 * t18464 - 1
            t18450 = 19 * phi1
            tfunc[..., c] = (-0.117e3 / 0.262144e6*1j) * np.sqrt(0.75207643e8) * np.sqrt((1 + t18449)) * np.sqrt((1 - t18449)) * ((-t18467 + t18468) * np.exp((-1*1j) * (t18450 - 6 * phi2)) + (t18467 + t18468) * np.exp((-1*1j) * (t18450 + 6 * phi2)))

        if Bindx == 770:
            t18488 = np.cos(phi)
            t18487 = t18488 ** 2
            t18490 = t18488 * t18487
            t18491 = t18487 ** 2
            t18492 = t18488 * t18491
            t18493 = t18490 ** 2
            t18494 = t18488 * t18493
            t18496 = t18492 ** 2
            t18498 = t18493 ** 2
            t18500 = t18494 ** 2
            t18495 = t18491 ** 2
            t18502 = t18495 ** 2
            t18503 = t18488 * t18502
            t18506 = 184 * t18490 + 168 * t18492 - 936 * t18494 - 12 * t18503 + (936 * t18496 - 168 * t18498 - 184 * t18500 + 12) * t18488
            t18505 = -t18488 * t18503 + 63 * t18487 + 300 * t18491 - 364 * t18493 - 858 * t18495 + 858 * t18496 + 364 * t18498 - 300 * t18500 - 63 * t18502 + 1
            t18489 = 19 * phi1
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * np.sqrt(0.394383e6) * np.sqrt((1 - t18488)) * np.sqrt((1 + t18488)) * ((-t18505 + t18506) * np.exp((-1*1j) * (t18489 - 12 * phi2)) + (t18505 + t18506) * np.exp((-1*1j) * (t18489 + 12 * phi2)))

        if Bindx == 771:
            t18527 = np.cos(phi)
            t18526 = t18527 ** 2
            t18530 = t18526 ** 2
            t18534 = t18530 ** 2
            t18535 = t18527 * t18534
            t18544 = t18535 ** 2
            t18546 = -t18527 * t18544 + 1
            t18542 = t18534 ** 2
            t18529 = t18527 * t18526
            t18532 = t18529 ** 2
            t18533 = t18527 * t18532
            t18540 = t18533 ** 2
            t18538 = t18532 ** 2
            t18531 = t18527 * t18530
            t18536 = t18531 ** 2
            t18528 = 19 * phi1
            t18517 = t18527 * t18536
            t18515 = t18527 * t18538
            t18513 = t18527 * t18540
            t18511 = t18527 * t18542
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.19e2) * np.sqrt((1 + t18527)) * ((1 - t18527) ** (-0.1e1 / 0.2e1)) * ((19 * t18544 - 171 * t18511 + 969 * t18542 - 3876 * t18513 + 11628 * t18540 - 27132 * t18515 + 50388 * t18538 - 75582 * t18517 + 92378 * t18536 - 92378 * t18535 + 75582 * t18534 - 50388 * t18533 + 27132 * t18532 - 11628 * t18531 + 3876 * t18530 - 969 * t18529 + 171 * t18526 - 19 * t18527 + t18546) * np.exp((-1*1j) * (t18528 - 18 * phi2)) + (17 * t18544 + 135 * t18511 + 663 * t18542 + 2244 * t18513 + 5508 * t18540 + 9996 * t18515 + 13260 * t18538 + 11934 * t18517 + 4862 * t18536 - 4862 * t18535 - 11934 * t18534 - 13260 * t18533 - 9996 * t18532 - 5508 * t18531 - 2244 * t18530 - 663 * t18529 - 135 * t18526 - 17 * t18527 - t18546) * np.exp((-1*1j) * (t18528 + 18 * phi2)))

        if Bindx == 772:
            t18567 = np.cos(phi)
            t18566 = t18567 ** 2
            t18570 = t18566 ** 2
            t18569 = t18567 * t18566
            t18572 = t18569 ** 2
            t18574 = t18570 ** 2
            t18571 = t18567 * t18570
            t18576 = t18571 ** 2
            t18578 = t18572 ** 2
            t18573 = t18567 * t18572
            t18580 = t18573 ** 2
            t18582 = t18574 ** 2
            t18575 = t18567 * t18574
            t18584 = t18575 ** 2
            t18587 = 6 - 60 * t18566 - 56 * t18570 + 1152 * t18572 - 3132 * t18574 + 3784 * t18576 - 2040 * t18578 + 96 * t18580 + 358 * t18582 - 108 * t18584
            t18586 = -267 * t18569 + 996 * t18571 - 1340 * t18573 - 66 * t18575 + (2118 * t18576 - 2348 * t18578 + 1044 * t18580 - 135 * t18582 - 19 * t18584 + 17) * t18567
            t18568 = 3 * phi1
            tfunc[..., c] = (0.117e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.3958297e7) * ((-t18586 + t18587) * np.exp((-6*1j) * (t18568 - phi2)) + (t18586 + t18587) * np.exp((-6*1j) * (t18568 + phi2)))

        if Bindx == 773:
            t18608 = np.cos(phi)
            t18607 = t18608 ** 2
            t18611 = t18607 ** 2
            t18610 = t18608 * t18607
            t18613 = t18610 ** 2
            t18615 = t18611 ** 2
            t18612 = t18608 * t18611
            t18617 = t18612 ** 2
            t18619 = t18613 ** 2
            t18614 = t18608 * t18613
            t18621 = t18614 ** 2
            t18623 = t18615 ** 2
            t18616 = t18608 * t18615
            t18625 = t18616 ** 2
            t18628 = -12 - 528 * t18607 - 104 * t18611 + 7560 * t18613 - 7488 * t18615 - 10296 * t18617 + 13416 * t18619 + 408 * t18621 - 2740 * t18623 - 216 * t18625
            t18627 = -1011 * t18610 + 3684 * t18612 + 4316 * t18614 - 16302 * t18616 + (5070 * t18617 + 8932 * t18619 - 3492 * t18621 - 1053 * t18623 - 19 * t18625 - 125) * t18608
            t18609 = 3 * phi1
            tfunc[..., c] = (0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.20757e5) * ((-t18627 + t18628) * np.exp((-6*1j) * (t18609 - 2 * phi2)) + (t18627 + t18628) * np.exp((-6*1j) * (t18609 + 2 * phi2)))

        if Bindx == 774:
            t18649 = np.cos(phi)
            t18648 = t18649 ** 2
            t18650 = t18649 * t18648
            t18651 = t18648 ** 2
            t18652 = t18649 * t18651
            t18653 = t18650 ** 2
            t18654 = t18649 * t18653
            t18655 = t18651 ** 2
            t18656 = t18649 * t18655
            t18657 = t18652 ** 2
            t18659 = t18653 ** 2
            t18661 = t18654 ** 2
            t18663 = t18655 ** 2
            t18665 = t18656 ** 2
            t18668 = 11781 * t18650 + 96084 * t18652 + 220116 * t18654 + 43758 * t18656 + (-258570 * t18657 - 198492 * t18659 - 43452 * t18661 - 2583 * t18663 - 19 * t18665 + 305) * t18649
            t18667 = -2412 * t18648 - 39576 * t18651 - 171360 * t18653 - 182988 * t18655 + 136136 * t18657 + 270504 * t18659 + 107712 * t18661 + 12750 * t18663 + 324 * t18665 - 18
            tfunc[..., c] = -(0.39e2 / 0.524288e6) * np.sqrt(0.2e1) * ((t18667 + t18668) * np.exp((-18*1j) * (phi1 - phi2)) + (t18667 - t18668) * np.exp((-18*1j) * (phi1 + phi2)))

        if Bindx == 775:
            t18684 = np.cos(phi)
            t18683 = t18684 ** 2
            t18686 = t18684 * t18683
            t18689 = t18686 ** 2
            t18690 = t18684 * t18689
            t18698 = -703 * t18690 ** 2 - 53
            t18695 = t18689 ** 2
            t18687 = t18683 ** 2
            t18688 = t18684 * t18687
            t18693 = t18688 ** 2
            t18691 = t18687 ** 2
            t18685 = 17 * phi1
            t18676 = t18684 * t18691
            t18674 = t18684 * t18693
            t18672 = t18684 * t18695
            tfunc[..., c] = (-0.117e3 / 0.262144e6*1j) * ((1 + t18684) ** (0.11e2 / 0.2e1)) * np.sqrt(0.106981e6) * ((1 - t18684) ** (-0.1e1 / 0.2e1)) * ((7992 * t18672 - 41123 * t18695 + 125992 * t18674 - 253803 * t18693 + 348656 * t18676 - 324159 * t18691 + 188496 * t18690 - 45309 * t18689 - 23144 * t18688 + 25047 * t18687 - 9208 * t18686 + 1127 * t18683 + 192 * t18684 + t18698) * np.exp((-1*1j) * (t18685 - 6 * phi2)) + (-444 * t18672 - 4165 * t18695 + 2664 * t18674 + 10227 * t18693 - 6660 * t18676 - 13265 * t18691 + 8880 * t18690 + 9485 * t18689 - 6660 * t18688 - 3423 * t18687 + 2664 * t18686 + 385 * t18683 - 444 * t18684 - t18698) * np.exp((-1*1j) * (t18685 + 6 * phi2)))

        if Bindx == 776:
            t18717 = np.cos(phi)
            t18716 = t18717 ** 2
            t18720 = t18716 ** 2
            t18724 = t18720 ** 2
            t18732 = t18724 ** 2
            t18734 = -703 * t18717 * t18732 + 269
            t18719 = t18717 * t18716
            t18722 = t18719 ** 2
            t18723 = t18717 * t18722
            t18730 = t18723 ** 2
            t18728 = t18722 ** 2
            t18721 = t18717 * t18720
            t18726 = t18721 ** 2
            t18718 = 17 * phi1
            t18709 = t18717 * t18724
            t18707 = t18717 * t18726
            t18705 = t18717 * t18728
            t18703 = t18717 * t18730
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * ((1 + t18717) ** (0.5e1 / 0.2e1)) * np.sqrt(0.561e3) * ((1 - t18717) ** (-0.1e1 / 0.2e1)) * ((9657 * t18732 - 60764 * t18703 + 230660 * t18730 - 583800 * t18705 + 1021384 * t18728 - 1219036 * t18707 + 887172 * t18726 - 155870 * t18709 - 464750 * t18724 + 602316 * t18723 - 360724 * t18722 + 84448 * t18721 + 36960 * t18720 - 39700 * t18719 + 15628 * t18716 - 3147 * t18717 + t18734) * np.exp((-1*1j) * (t18718 - 12 * phi2)) + (5439 * t18732 + 15476 * t18703 + 13188 * t18730 - 26976 * t18705 - 72912 * t18728 - 37900 * t18707 + 69828 * t18726 + 107206 * t18709 + 16918 * t18724 - 69828 * t18723 - 52372 * t18722 + 5208 * t18721 + 21768 * t18720 + 7644 * t18719 - 1588 * t18716 - 1533 * t18717 - t18734) * np.exp((-1*1j) * (t18718 + 12 * phi2)))

        if Bindx == 777:
            t18756 = np.cos(phi)
            t18755 = t18756 ** 2
            t18759 = t18755 ** 2
            t18758 = t18756 * t18755
            t18761 = t18758 ** 2
            t18763 = t18759 ** 2
            t18760 = t18756 * t18759
            t18765 = t18760 ** 2
            t18767 = t18761 ** 2
            t18762 = t18756 * t18761
            t18769 = t18762 ** 2
            t18771 = t18763 ** 2
            t18764 = t18756 * t18763
            t18773 = t18764 ** 2
            t18777 = 1972 * t18755 + 25551 * t18759 + 65280 * t18761 - 49062 * t18763 + 1326 * t18767 + 96288 * t18769 + 31365 * t18771 + 2276 * t18773 + 17 + (-175032 + 19 * t18765) * t18765
            t18776 = -8706 * t18758 - 51000 * t18760 - 35496 * t18762 + 144092 * t18764 + (110500 * t18765 - 82008 * t18767 - 66504 * t18769 - 10302 * t18771 - 306 * t18773 - 270) * t18756
            t18757 = 17 * phi1
            tfunc[..., c] = (0.39e2 / 0.524288e6*1j) * np.sqrt(0.37e2) * ((t18776 + t18777) * np.exp((-1*1j) * (t18757 - 18 * phi2)) + (t18776 - t18777) * np.exp((-1*1j) * (t18757 + 18 * phi2))) * ((1 + t18756) ** (-0.1e1 / 0.2e1)) * ((1 - t18756) ** (-0.1e1 / 0.2e1))

        if Bindx == 778:
            t18798 = np.cos(phi)
            t18797 = t18798 ** 2
            t18801 = t18797 ** 2
            t18800 = t18798 * t18797
            t18803 = t18800 ** 2
            t18805 = t18801 ** 2
            t18802 = t18798 * t18801
            t18807 = t18802 ** 2
            t18809 = t18803 ** 2
            t18804 = t18798 * t18803
            t18811 = t18804 ** 2
            t18813 = t18805 ** 2
            t18806 = t18798 * t18805
            t18815 = t18806 ** 2
            t18818 = -704 * t18797 + 11296 * t18801 - 61536 * t18803 + 151104 * t18805 - 180576 * t18807 + 84704 * t18809 + 23264 * t18811 - 38224 * t18813 + 10656 * t18815 + 16
            t18817 = -4949 * t18800 + 17764 * t18802 - 7796 * t18804 - 78826 * t18806 + (187754 * t18807 - 183436 * t18809 + 80796 * t18811 - 9579 * t18813 - 2109 * t18815 + 381) * t18798
            t18799 = 8 * phi1
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * ((t18817 + t18818) * np.exp((-2*1j) * (t18799 - 3 * phi2)) + (-t18817 + t18818) * np.exp((-2*1j) * (t18799 + 3 * phi2))) * np.sqrt(0.320943e6)

        if Bindx == 779:
            t18839 = np.cos(phi)
            t18838 = t18839 ** 2
            t18841 = t18839 * t18838
            t18842 = t18838 ** 2
            t18843 = t18839 * t18842
            t18844 = t18841 ** 2
            t18845 = t18839 * t18844
            t18846 = t18842 ** 2
            t18847 = t18839 * t18846
            t18848 = t18843 ** 2
            t18850 = t18844 ** 2
            t18852 = t18845 ** 2
            t18854 = t18846 ** 2
            t18856 = t18847 ** 2
            t18859 = -18157 * t18841 - 64108 * t18843 + 421460 * t18845 - 473902 * t18847 + (-307294 * t18848 + 664244 * t18850 - 133836 * t18852 - 89445 * t18854 - 2109 * t18856 + 3147) * t18839
            t18858 = -4640 * t18838 + 75184 * t18842 - 159936 * t18844 - 219024 * t18846 + 837408 * t18848 - 494000 * t18850 - 242048 * t18852 + 186208 * t18854 + 21312 * t18856 - 464
            t18840 = 4 * phi1
            tfunc[..., c] = -(0.39e2 / 0.65536e5) * ((t18858 + t18859) * np.exp((-4*1j) * (t18840 - 3 * phi2)) + (t18858 - t18859) * np.exp((-4*1j) * (t18840 + 3 * phi2))) * np.sqrt(0.187e3)

        if Bindx == 780:
            t18880 = np.cos(phi)
            t18879 = t18880 ** 2
            t18883 = t18879 ** 2
            t18882 = t18880 * t18879
            t18885 = t18882 ** 2
            t18887 = t18883 ** 2
            t18884 = t18880 * t18883
            t18889 = t18884 ** 2
            t18891 = t18885 ** 2
            t18886 = t18880 * t18885
            t18893 = t18886 ** 2
            t18895 = t18887 ** 2
            t18888 = t18880 * t18887
            t18897 = t18888 ** 2
            t18900 = 16 + 1600 * t18879 + 16864 * t18883 + 26656 * t18885 - 56576 * t18887 - 77792 * t18889 + 35360 * t18891 + 45152 * t18893 + 8432 * t18895 + 288 * t18897
            t18899 = -6443 * t18882 - 28628 * t18884 + 4420 * t18886 + 92378 * t18888 + (20774 * t18889 - 56644 * t18891 - 23596 * t18893 - 2005 * t18895 - 19 * t18897 - 237) * t18880
            t18881 = 8 * phi1
            tfunc[..., c] = -(0.39e2 / 0.262144e6) * ((t18899 + t18900) * np.exp((-2*1j) * (t18881 - 9 * phi2)) + (-t18899 + t18900) * np.exp((-2*1j) * (t18881 + 9 * phi2))) * np.sqrt(0.111e3)

        if Bindx == 781:
            t18917 = np.cos(phi)
            t18916 = t18917 ** 2
            t18919 = t18917 * t18916
            t18922 = t18919 ** 2
            t18923 = t18917 * t18922
            t18930 = t18923 ** 2
            t18932 = -14763 * t18917 * t18930 - 57
            t18928 = t18922 ** 2
            t18920 = t18916 ** 2
            t18921 = t18917 * t18920
            t18926 = t18921 ** 2
            t18924 = t18920 ** 2
            t18918 = 5 * phi1
            t18909 = t18917 * t18924
            t18907 = t18917 * t18926
            t18905 = t18917 * t18928
            tfunc[..., c] = (0.39e2 / 0.262144e6*1j) * ((1 + t18917) ** (0.9e1 / 0.2e1)) * np.sqrt(0.229245e6) * ((-143745 * t18930 + 613515 * t18905 - 1483265 * t18928 + 2157175 * t18907 - 1743269 * t18926 + 331815 * t18909 + 815595 * t18924 - 858495 * t18923 + 294525 * t18922 + 64449 * t18921 - 84195 * t18920 + 20765 * t18919 + 1385 * t18916 - 1075 * t18917 - t18932) * np.exp((-3*1j) * (t18918 - 2 * phi2)) + (3885 * t18930 + 85785 * t18905 - 25655 * t18928 - 206975 * t18907 + 70057 * t18926 + 264805 * t18909 - 101435 * t18924 - 188465 * t18923 + 82295 * t18922 + 69563 * t18921 - 35605 * t18920 - 9445 * t18919 + 6515 * t18916 - 505 * t18917 + t18932) * np.exp((-3*1j) * (t18918 + 2 * phi2))) * ((1 - t18917) ** (-0.1e1 / 0.2e1))

        if Bindx == 782:
            t18952 = np.cos(phi)
            t18951 = t18952 ** 2
            t18955 = t18951 ** 2
            t18959 = t18955 ** 2
            t18960 = t18952 * t18959
            t18970 = -2109 * t18960 ** 2 - 249
            t18967 = t18959 ** 2
            t18954 = t18952 * t18951
            t18957 = t18954 ** 2
            t18958 = t18952 * t18957
            t18965 = t18958 ** 2
            t18963 = t18957 ** 2
            t18956 = t18952 * t18955
            t18961 = t18956 ** 2
            t18953 = 5 * phi1
            t18942 = t18952 * t18961
            t18940 = t18952 * t18963
            t18938 = t18952 * t18965
            t18936 = t18952 * t18967
            tfunc[..., c] = (0.39e2 / 0.131072e6*1j) * ((1 + t18952) ** (0.3e1 / 0.2e1)) * np.sqrt(0.6545e4) * ((-24198 * t18936 + 122169 * t18967 - 348760 * t18938 + 586604 * t18965 - 485968 * t18940 - 139412 * t18963 + 835432 * t18942 - 878306 * t18961 + 235092 * t18960 + 362934 * t18959 - 409032 * t18958 + 131404 * t18957 + 52192 * t18956 - 58196 * t18955 + 15800 * t18954 + 1517 * t18951 - 1630 * t18952 - t18970) * np.exp((-3*1j) * (t18953 - 4 * phi2)) + (-15762 * t18936 - 42249 * t18967 - 28360 * t18938 + 87716 * t18965 + 191408 * t18940 + 54212 * t18963 - 229192 * t18942 - 248974 * t18961 + 41052 * t18960 + 212058 * t18959 + 86760 * t18958 - 61852 * t18957 - 57088 * t18956 - 1564 * t18955 + 11816 * t18954 + 3011 * t18951 - 634 * t18952 + t18970) * np.exp((-3*1j) * (t18953 + 4 * phi2))) * ((1 - t18952) ** (-0.1e1 / 0.2e1))

        if Bindx == 783:
            t18992 = np.cos(phi)
            t18991 = t18992 ** 2
            t18994 = t18992 * t18991
            t18995 = t18991 ** 2
            t18996 = t18992 * t18995
            t18997 = t18994 ** 2
            t18998 = t18992 * t18997
            t18999 = t18995 ** 2
            t19000 = t18992 * t18999
            t19001 = t18996 ** 2
            t19003 = t18997 ** 2
            t19005 = t18998 ** 2
            t19007 = t18999 ** 2
            t19009 = t19000 ** 2
            t19013 = -4418 * t18994 - 9656 * t18996 + 31960 * t18998 + 30940 * t19000 + (-59228 * t19001 - 18904 * t19003 + 22712 * t19005 + 6530 * t19007 + 270 * t19009 - 206) * t18992
            t19012 = 1260 * t18991 + 9265 * t18995 - 4352 * t18997 - 49946 * t18999 + 55250 * t19003 - 13600 * t19005 - 15589 * t19007 - 1732 * t19009 + 15 + (19448 - 19 * t19001) * t19001
            t18993 = 5 * phi1
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.3885e4) * ((t19012 + t19013) * np.exp((-3*1j) * (t18993 - 6 * phi2)) + (-t19012 + t19013) * np.exp((-3*1j) * (t18993 + 6 * phi2))) * ((1 + t18992) ** (-0.1e1 / 0.2e1)) * ((1 - t18992) ** (-0.1e1 / 0.2e1))

        if Bindx == 784:
            t19034 = np.cos(phi)
            t19033 = t19034 ** 2
            t19037 = t19033 ** 2
            t19036 = t19034 * t19033
            t19039 = t19036 ** 2
            t19041 = t19037 ** 2
            t19038 = t19034 * t19037
            t19043 = t19038 ** 2
            t19045 = t19039 ** 2
            t19040 = t19034 * t19039
            t19047 = t19040 ** 2
            t19049 = t19041 ** 2
            t19042 = t19034 * t19041
            t19051 = t19042 ** 2
            t19054 = -41884 * t19033 + 526856 * t19037 - 2668032 * t19039 + 6413028 * t19041 - 6965112 * t19043 + 948808 * t19045 + 4922848 * t19047 - 4246634 * t19049 + 1109556 * t19051 + 566
            t19053 = -19411 * t19036 - 198268 * t19038 + 2399972 * t19040 - 8855858 * t19042 + (15736342 * t19043 - 14481548 * t19045 + 6240564 * t19047 - 572271 * t19049 - 250971 * t19051 + 1449) * t19034
            t19035 = 7 * phi1
            tfunc[..., c] = -(0.39e2 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.2697e4) * ((t19053 + t19054) * np.exp((-2*1j) * (t19035 - 3 * phi2)) + (-t19053 + t19054) * np.exp((-2*1j) * (t19035 + 3 * phi2)))

        if Bindx == 785:
            t19075 = np.cos(phi)
            t19074 = t19075 ** 2
            t19078 = t19074 ** 2
            t19077 = t19075 * t19074
            t19080 = t19077 ** 2
            t19082 = t19078 ** 2
            t19079 = t19075 * t19078
            t19084 = t19079 ** 2
            t19086 = t19080 ** 2
            t19081 = t19075 * t19080
            t19088 = t19081 ** 2
            t19090 = t19082 ** 2
            t19083 = t19075 * t19082
            t19092 = t19083 ** 2
            t19095 = -41200 * t19074 + 75560 * t19078 + 1010424 * t19080 - 4402944 * t19082 + 5446584 * t19084 + 330200 * t19086 - 4403224 * t19088 + 1665524 * t19090 + 317016 * t19092 + 2060
            t19094 = 137875 * t19077 - 911012 * t19079 + 1595620 * t19081 + 1572142 * t19083 + (-7005518 * t19084 + 5582428 * t19086 + 176868 * t19088 - 1108995 * t19090 - 35853 * t19092 - 3555) * t19075
            t19076 = 7 * phi1
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.77e2) * ((t19094 + t19095) * np.exp((-2*1j) * (t19076 - 6 * phi2)) + (-t19094 + t19095) * np.exp((-2*1j) * (t19076 + 6 * phi2)))

        if Bindx == 786:
            t19116 = np.cos(phi)
            t19115 = t19116 ** 2
            t19119 = t19115 ** 2
            t19118 = t19116 * t19115
            t19121 = t19118 ** 2
            t19123 = t19119 ** 2
            t19120 = t19116 * t19119
            t19125 = t19120 ** 2
            t19127 = t19121 ** 2
            t19122 = t19116 * t19121
            t19129 = t19122 ** 2
            t19131 = t19123 ** 2
            t19124 = t19116 * t19123
            t19133 = t19124 ** 2
            t19136 = -14 - 980 * t19115 - 5096 * t19119 + 9184 * t19121 + 24076 * t19123 - 26312 * t19125 - 19240 * t19127 + 12992 * t19129 + 5138 * t19131 + 252 * t19133
            t19135 = 3013 * t19118 + 2452 * t19120 - 23660 * t19122 - 2002 * t19124 + (35126 * t19125 - 2716 * t19127 - 10876 * t19129 - 1495 * t19131 - 19 * t19133 + 177) * t19116
            t19117 = 7 * phi1
            tfunc[..., c] = -(0.39e2 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.13209e5) * ((t19135 + t19136) * np.exp((-2*1j) * (t19117 - 9 * phi2)) + (-t19135 + t19136) * np.exp((-2*1j) * (t19117 + 9 * phi2)))

        if Bindx == 787:
            t19154 = np.cos(phi)
            t19153 = t19154 ** 2
            t19157 = t19153 ** 2
            t19161 = t19157 ** 2
            t19170 = -250971 * t19161 ** 2 + 59
            t19156 = t19154 * t19153
            t19159 = t19156 ** 2
            t19160 = t19154 * t19159
            t19167 = t19160 ** 2
            t19165 = t19159 ** 2
            t19158 = t19154 * t19157
            t19163 = t19158 ** 2
            t19155 = 13 * phi1
            t19146 = t19154 * t19161
            t19144 = t19154 * t19163
            t19142 = t19154 * t19165
            t19140 = t19154 * t19167
            tfunc[..., c] = (-0.39e2 / 0.262144e6*1j) * ((1 + t19154) ** (0.7e1 / 0.2e1)) * np.sqrt(0.29667e5) * ((1 - t19154) ** (-0.1e1 / 0.2e1)) * ((2034186 * t19140 + 11518010 * t19142 - 4413102 * t19144 - 7810910 * t19146 - 16770 * t19153 + 2806 * t19154 - 37690 * t19156 + 355930 * t19157 - 396882 * t19158 - 1488858 * t19159 + 4215390 * t19160 - 1588320 * t19161 + 12716762 * t19163 - 8017370 * t19165 - 6822270 * t19167 + t19170) * np.exp((-1*1j) * (t19155 - 6 * phi2)) + (26418 * t19140 - 51646 * t19142 - 121350 * t19144 + 476778 * t19146 - 7566 * t19153 + 3278 * t19154 - 76866 * t19156 + 223974 * t19157 + 328710 * t19158 - 1235318 * t19159 - 585322 * t19160 + 3105888 * t19161 - 4281738 * t19163 + 3363994 * t19165 - 1420146 * t19167 - t19170) * np.exp((-1*1j) * (t19155 + 6 * phi2)))

        if Bindx == 788:
            t19191 = np.cos(phi)
            t19190 = t19191 ** 2
            t19194 = t19190 ** 2
            t19198 = t19194 ** 2
            t19199 = t19191 * t19198
            t19208 = t19199 ** 2
            t19210 = -394383 * t19191 * t19208 + 9425
            t19206 = t19198 ** 2
            t19193 = t19191 * t19190
            t19196 = t19193 ** 2
            t19197 = t19191 * t19196
            t19204 = t19197 ** 2
            t19202 = t19196 ** 2
            t19195 = t19191 * t19194
            t19200 = t19195 ** 2
            t19192 = 13 * phi1
            t19181 = t19191 * t19200
            t19179 = t19191 * t19202
            t19177 = t19191 * t19204
            t19175 = t19191 * t19206
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * np.sqrt(0.7e1) * np.sqrt((1 + t19191)) * ((-13596957 * t19175 - 9257996 * t19177 + 71758700 * t19179 - 55230162 * t19181 - 333885 * t19190 + 13435 * t19191 + 564905 * t19193 + 2036980 * t19194 - 7248516 * t19195 + 1797356 * t19196 + 23062468 * t19197 - 34221330 * t19198 - 9933638 * t19199 + 69459962 * t19200 - 26018876 * t19202 - 40014084 * t19204 + 23914121 * t19206 + 3632475 * t19208 + t19210) * np.exp((-1*1j) * (t19192 - 12 * phi2)) + (7120773 * t19175 - 17852516 * t19177 - 325052 * t19179 + 35184162 * t19181 + 288165 * t19190 + 32285 * t19191 - 57145 * t19193 - 2544740 * t19194 - 2666796 * t19195 + 8117956 * t19196 + 16741868 * t19197 - 5583006 * t19198 - 38571962 * t19199 - 20954362 * t19200 + 46064876 * t19202 - 31419564 * t19204 + 3196391 * t19206 + 2843709 * t19208 - t19210) * np.exp((-1*1j) * (t19192 + 12 * phi2))) * ((1 - t19191) ** (-0.1e1 / 0.2e1))

        if Bindx == 789:
            t19232 = np.cos(phi)
            t19231 = t19232 ** 2
            t19234 = t19232 * t19231
            t19235 = t19231 ** 2
            t19236 = t19232 * t19235
            t19237 = t19234 ** 2
            t19238 = t19232 * t19237
            t19239 = t19235 ** 2
            t19240 = t19232 * t19239
            t19241 = t19236 ** 2
            t19243 = t19237 ** 2
            t19245 = t19238 ** 2
            t19247 = t19239 ** 2
            t19249 = t19240 ** 2
            t19253 = 1786 * t19234 - 3112 * t19236 - 13176 * t19238 + 22932 * t19240 + (7020 * t19241 - 22152 * t19243 + 2600 * t19245 + 3718 * t19247 + 234 * t19249 + 150) * t19232
            t19252 = -728 * t19231 - 1599 * t19235 + 11440 * t19237 - 1378 * t19239 + 17186 * t19243 + 9808 * t19245 - 5985 * t19247 - 1256 * t19249 - 13 + (-27456 - 19 * t19241) * t19241
            t19233 = 13 * phi1
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.145299e6) * ((1 + t19232) ** (-0.1e1 / 0.2e1)) * ((1 - t19232) ** (-0.1e1 / 0.2e1)) * ((t19252 + t19253) * np.exp((-1*1j) * (t19233 - 18 * phi2)) + (-t19252 + t19253) * np.exp((-1*1j) * (t19233 + 18 * phi2)))

        if Bindx == 790:
            t19274 = np.cos(phi)
            t19273 = t19274 ** 2
            t19277 = t19273 ** 2
            t19276 = t19274 * t19273
            t19279 = t19276 ** 2
            t19281 = t19277 ** 2
            t19278 = t19274 * t19277
            t19283 = t19278 ** 2
            t19285 = t19279 ** 2
            t19280 = t19274 * t19279
            t19287 = t19280 ** 2
            t19289 = t19281 ** 2
            t19282 = t19274 * t19281
            t19291 = t19282 ** 2
            t19294 = -1200 * t19273 + 18008 * t19277 - 93672 * t19279 + 193392 * t19281 - 39784 * t19283 - 485400 * t19285 + 821064 * t19287 - 548284 * t19289 + 135864 * t19291 + 12
            t19293 = -4611 * t19276 + 53076 * t19278 - 291700 * t19280 + 858594 * t19282 + (-1408962 * t19283 + 1253492 * t19285 - 507348 * t19287 + 11475 * t19289 + 35853 * t19291 + 131) * t19274
            t19275 = 2 * phi1
            tfunc[..., c] = -(0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.207669e6) * ((-t19293 + t19294) * np.exp((-6*1j) * (t19275 - phi2)) + (t19293 + t19294) * np.exp((-6*1j) * (t19275 + phi2)))

        if Bindx == 791:
            t19315 = np.cos(phi)
            t19314 = t19315 ** 2
            t19316 = t19315 * t19314
            t19317 = t19314 ** 2
            t19318 = t19315 * t19317
            t19319 = t19316 ** 2
            t19320 = t19315 * t19319
            t19321 = t19317 ** 2
            t19322 = t19315 * t19321
            t19323 = t19318 ** 2
            t19325 = t19319 ** 2
            t19327 = t19320 ** 2
            t19329 = t19321 ** 2
            t19331 = t19322 ** 2
            t19334 = 346665 * t19316 - 22044 * t19318 - 9067916 * t19320 + 33066462 * t19322 + (-43662450 * t19323 + 14010164 * t19325 + 14022756 * t19327 - 8275311 * t19329 - 394383 * t19331 - 32135) * t19315
            t19333 = -129720 * t19314 + 1768580 * t19317 - 8482320 * t19319 + 14512212 * t19321 + 2966392 * t19323 - 35856132 * t19325 + 34878624 * t19327 - 6679640 * t19329 - 2989008 * t19331 + 2820
            tfunc[..., c] = (0.39e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t19333 - t19334) * np.exp((-12*1j) * (phi1 - phi2)) + (t19333 + t19334) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 792:
            t19355 = np.cos(phi)
            t19354 = t19355 ** 2
            t19358 = t19354 ** 2
            t19357 = t19355 * t19354
            t19360 = t19357 ** 2
            t19362 = t19358 ** 2
            t19359 = t19355 * t19358
            t19364 = t19359 ** 2
            t19366 = t19360 ** 2
            t19361 = t19355 * t19360
            t19368 = t19361 ** 2
            t19370 = t19362 ** 2
            t19363 = t19355 * t19362
            t19372 = t19363 ** 2
            t19375 = 12 + 528 * t19354 + 104 * t19358 - 7560 * t19360 + 7488 * t19362 + 10296 * t19364 - 13416 * t19366 - 408 * t19368 + 2740 * t19370 + 216 * t19372
            t19374 = -1011 * t19357 + 3684 * t19359 + 4316 * t19361 - 16302 * t19363 + (5070 * t19364 + 8932 * t19366 - 3492 * t19368 - 1053 * t19370 - 19 * t19372 - 125) * t19355
            t19356 = 2 * phi1
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.20757e5) * ((t19374 + t19375) * np.exp((-6*1j) * (t19356 - 3 * phi2)) + (-t19374 + t19375) * np.exp((-6*1j) * (t19356 + 3 * phi2)))

        if Bindx == 793:
            t19394 = np.cos(phi)
            t19393 = t19394 ** 2
            t19397 = t19393 ** 2
            t19401 = t19397 ** 2
            t19409 = t19401 ** 2
            t19411 = -1111443 * t19394 * t19409 + 203
            t19396 = t19394 * t19393
            t19399 = t19396 ** 2
            t19400 = t19394 * t19399
            t19407 = t19400 ** 2
            t19405 = t19399 ** 2
            t19398 = t19394 * t19397
            t19403 = t19398 ** 2
            t19395 = 11 * phi1
            t19386 = t19394 * t19401
            t19384 = t19394 * t19403
            t19382 = t19394 * t19405
            t19380 = t19394 * t19407
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * ((1 + t19394) ** (0.5e1 / 0.2e1)) * np.sqrt(0.6699e4) * ((1 - t19394) ** (-0.1e1 / 0.2e1)) * ((-17087448 * t19380 + 15904860 * t19382 + 14029112 * t19384 - 20156930 * t19386 - 26792 * t19393 + 1149 * t19394 + 15560 * t19396 + 475140 * t19397 - 913604 * t19398 - 2206392 * t19399 + 7401816 * t19400 - 242670 * t19401 + 20029224 * t19403 - 36228956 * t19405 + 12922040 * t19407 + 7195131 * t19409 + t19411) * np.exp((-1*1j) * (t19395 - 6 * phi2)) + (-6077364 * t19380 + 14077224 * t19382 - 17841492 * t19384 + 13272822 * t19386 + 16244 * t19393 + 2367 * t19394 - 116796 * t19396 - 143304 * t19397 + 1295760 * t19398 + 165652 * t19399 - 5723964 * t19400 + 949178 * t19401 - 3174276 * t19403 + 3985360 * t19405 - 2325124 * t19407 + 526473 * t19409 - t19411) * np.exp((-1*1j) * (t19395 + 6 * phi2)))

        if Bindx == 794:
            t19433 = np.cos(phi)
            t19432 = t19433 ** 2
            t19435 = t19433 * t19432
            t19436 = t19432 ** 2
            t19437 = t19433 * t19436
            t19438 = t19435 ** 2
            t19439 = t19433 * t19438
            t19440 = t19436 ** 2
            t19441 = t19433 * t19440
            t19442 = t19437 ** 2
            t19444 = t19438 ** 2
            t19446 = t19439 ** 2
            t19448 = t19440 ** 2
            t19450 = t19441 ** 2
            t19454 = -420980 * t19435 + 2563088 * t19437 - 5160144 * t19439 - 4394104 * t19441 + (32886568 * t19442 - 48934512 * t19444 + 27272432 * t19446 - 1094324 * t19448 - 2739924 * t19450 + 21900) * t19433
            t19453 = 3190 * t19432 - 513315 * t19436 + 5318984 * t19438 - 20775326 * t19440 - 24390158 * t19444 - 8988088 * t19446 + 19337109 * t19448 - 6342666 * t19450 - 55 + (36744708 - 394383 * t19442) * t19442
            t19434 = 11 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5*1j) * np.sqrt(0.31e2) * ((-t19453 + t19454) * np.exp((-1*1j) * (t19434 - 12 * phi2)) + (t19453 + t19454) * np.exp((-1*1j) * (t19434 + 12 * phi2))) * ((1 + t19433) ** (-0.1e1 / 0.2e1)) * ((1 - t19433) ** (-0.1e1 / 0.2e1))

        if Bindx == 795:
            t19476 = np.cos(phi)
            t19475 = t19476 ** 2
            t19478 = t19476 * t19475
            t19479 = t19475 ** 2
            t19480 = t19476 * t19479
            t19481 = t19478 ** 2
            t19482 = t19476 * t19481
            t19483 = t19479 ** 2
            t19484 = t19476 * t19483
            t19485 = t19480 ** 2
            t19487 = t19481 ** 2
            t19489 = t19482 ** 2
            t19491 = t19483 ** 2
            t19493 = t19484 ** 2
            t19497 = -362 * t19478 + 3656 * t19480 - 3816 * t19482 - 7956 * t19484 + (15444 * t19485 - 5016 * t19487 - 3784 * t19489 + 1738 * t19491 + 198 * t19493 - 102) * t19476
            t19496 = 352 * t19475 - 1023 * t19479 - 3344 * t19481 + 11726 * t19483 - 7774 * t19487 + 8656 * t19489 - 873 * t19491 - 848 * t19493 + 11 + (-6864 - 19 * t19485) * t19485
            t19477 = 11 * phi1
            tfunc[..., c] = (-0.39e2 / 0.262144e6*1j) * np.sqrt(0.643467e6) * ((1 + t19476) ** (-0.1e1 / 0.2e1)) * ((1 - t19476) ** (-0.1e1 / 0.2e1)) * ((t19496 + t19497) * np.exp((-1*1j) * (t19477 - 18 * phi2)) + (-t19496 + t19497) * np.exp((-1*1j) * (t19477 + 18 * phi2)))

        if Bindx == 796:
            t19518 = np.cos(phi)
            t19517 = t19518 ** 2
            t19521 = t19517 ** 2
            t19520 = t19518 * t19517
            t19523 = t19520 ** 2
            t19525 = t19521 ** 2
            t19522 = t19518 * t19521
            t19527 = t19522 ** 2
            t19529 = t19523 ** 2
            t19524 = t19518 * t19523
            t19531 = t19524 ** 2
            t19533 = t19525 ** 2
            t19526 = t19518 * t19525
            t19535 = t19526 ** 2
            t19538 = -732 * t19517 + 8136 * t19521 + 37920 * t19523 - 732540 * t19525 + 3343848 * t19527 - 7265656 * t19529 + 8366528 * t19531 - 4927450 * t19533 + 1169940 * t19535 + 6
            t19537 = 26135 * t19520 - 311908 * t19522 + 1692956 * t19524 - 4885958 * t19526 + (7829650 * t19527 - 6611060 * t19529 + 2135404 * t19531 + 495907 * t19533 - 370481 * t19535 - 645) * t19518
            t19519 = 5 * phi1
            tfunc[..., c] = -(0.117e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.11165e5) * ((t19537 + t19538) * np.exp((-2*1j) * (t19519 - 3 * phi2)) + (-t19537 + t19538) * np.exp((-2*1j) * (t19519 + 3 * phi2)))

        if Bindx == 797:
            t19559 = np.cos(phi)
            t19558 = t19559 ** 2
            t19562 = t19558 ** 2
            t19561 = t19559 * t19558
            t19564 = t19561 ** 2
            t19566 = t19562 ** 2
            t19563 = t19559 * t19562
            t19568 = t19563 ** 2
            t19570 = t19564 ** 2
            t19565 = t19559 * t19564
            t19572 = t19565 ** 2
            t19574 = t19566 ** 2
            t19567 = t19559 * t19566
            t19576 = t19567 ** 2
            t19579 = -16048 * t19558 + 118712 * t19562 - 616 * t19564 - 2235376 * t19566 + 7611032 * t19568 - 10382840 * t19570 + 5469640 * t19572 + 265540 * t19574 - 830280 * t19576 + 236
            t19578 = -76373 * t19561 + 699820 * t19563 - 2780492 * t19565 + 4871438 * t19567 + (-2161198 * t19568 - 4121908 * t19570 + 5348948 * t19572 - 1651771 * t19574 - 131461 * t19576 + 2997) * t19559
            t19560 = 5 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.465e3) * ((-t19578 + t19579) * np.exp((-2*1j) * (t19560 - 6 * phi2)) + (t19578 + t19579) * np.exp((-2*1j) * (t19560 + 6 * phi2)))

        if Bindx == 798:
            t19600 = np.cos(phi)
            t19599 = t19600 ** 2
            t19603 = t19599 ** 2
            t19602 = t19600 * t19599
            t19605 = t19602 ** 2
            t19607 = t19603 ** 2
            t19604 = t19600 * t19603
            t19609 = t19604 ** 2
            t19611 = t19605 ** 2
            t19606 = t19600 * t19605
            t19613 = t19606 ** 2
            t19615 = t19607 ** 2
            t19608 = t19600 * t19607
            t19617 = t19608 ** 2
            t19620 = -10 - 220 * t19599 + 1160 * t19603 + 448 * t19605 - 6812 * t19607 + 8008 * t19609 - 312 * t19611 - 3552 * t19613 + 1110 * t19615 + 180 * t19617
            t19619 = 21 * t19602 - 2364 * t19604 + 4836 * t19606 + 286 * t19608 + (-7514 * t19609 + 5236 * t19611 + 116 * t19613 - 679 * t19615 - 19 * t19617 + 81) * t19600
            t19601 = 5 * phi1
            tfunc[..., c] = -(0.39e2 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.1072445e7) * ((t19619 + t19620) * np.exp((-2*1j) * (t19601 - 9 * phi2)) + (-t19619 + t19620) * np.exp((-2*1j) * (t19601 + 9 * phi2)))

        if Bindx == 799:
            t19640 = np.cos(phi)
            t19639 = t19640 ** 2
            t19643 = t19639 ** 2
            t19647 = t19643 ** 2
            t19648 = t19640 * t19647
            t19658 = -10743949 * t19648 ** 2 + 681
            t19655 = t19647 ** 2
            t19642 = t19640 * t19639
            t19645 = t19642 ** 2
            t19646 = t19640 * t19645
            t19653 = t19646 ** 2
            t19651 = t19645 ** 2
            t19644 = t19640 * t19643
            t19649 = t19644 ** 2
            t19641 = 3 * phi1
            t19630 = t19640 * t19649
            t19628 = t19640 * t19651
            t19626 = t19640 * t19653
            t19624 = t19640 * t19655
            tfunc[..., c] = (0.117e3 / 0.131072e6*1j) * np.sqrt(0.77e2) * ((1 + t19640) ** (0.3e1 / 0.2e1)) * ((-52023332 * t19624 + 66511616 * t19626 + 69575408 * t19628 - 170939456 * t19630 + 83157 * t19639 + 3708 * t19640 - 285504 * t19642 - 1460260 * t19643 + 5191088 * t19644 + 7379876 * t19645 - 36575616 * t19646 - 2587278 * t19647 + 117690120 * t19648 - 73896698 * t19649 + 209003116 * t19651 - 214267660 * t19653 + 65854447 * t19655 - t19658) * np.exp((-3*1j) * (t19641 - 2 * phi2)) + (-9047536 * t19624 + 42670136 * t19626 - 82643272 * t19628 + 84009752 * t19630 - 92541 * t19639 + 984 * t19640 + 68616 * t19642 + 1903420 * t19643 - 1890392 * t19644 - 14424428 * t19645 + 14114472 * t19646 + 54554118 * t19647 - 47282760 * t19648 - 118884862 * t19649 + 157637852 * t19651 - 126237580 * t19653 + 56287289 * t19655 + t19658) * np.exp((-3*1j) * (t19641 + 2 * phi2))) * ((1 - t19640) ** (-0.1e1 / 0.2e1))

        if Bindx == 800:
            t19680 = np.cos(phi)
            t19679 = t19680 ** 2
            t19682 = t19680 * t19679
            t19683 = t19679 ** 2
            t19684 = t19680 * t19683
            t19685 = t19682 ** 2
            t19686 = t19680 * t19685
            t19687 = t19683 ** 2
            t19688 = t19680 * t19687
            t19689 = t19684 ** 2
            t19691 = t19685 ** 2
            t19693 = t19686 ** 2
            t19695 = t19687 ** 2
            t19697 = t19688 ** 2
            t19701 = 8588 * t19682 - 232144 * t19684 + 1766864 * t19686 - 6027736 * t19688 + (10439624 * t19689 - 8811536 * t19691 + 2166736 * t19693 + 1436908 * t19695 - 747252 * t19697 - 52) * t19680
            t19700 = -15678 * t19679 + 204017 * t19683 - 1033384 * t19685 + 2216786 * t19687 - 4579094 * t19691 + 8299096 * t19693 - 5469563 * t19695 + 1108162 * t19697 + 201 + (-862004 + 131461 * t19689) * t19689
            t19681 = 3 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5*1j) * np.sqrt(0.2697e4) * ((t19700 + t19701) * np.exp((-3*1j) * (t19681 - 4 * phi2)) + (-t19700 + t19701) * np.exp((-3*1j) * (t19681 + 4 * phi2))) * ((1 + t19680) ** (-0.1e1 / 0.2e1)) * ((1 - t19680) ** (-0.1e1 / 0.2e1))

        if Bindx == 801:
            t19723 = np.cos(phi)
            t19722 = t19723 ** 2
            t19724 = t19723 * t19722
            t19725 = t19722 ** 2
            t19726 = t19723 * t19725
            t19727 = t19724 ** 2
            t19728 = t19723 * t19727
            t19729 = t19725 ** 2
            t19730 = t19723 * t19729
            t19731 = t19726 ** 2
            t19733 = t19727 ** 2
            t19735 = t19728 ** 2
            t19737 = t19729 ** 2
            t19739 = t19730 ** 2
            t19743 = 238 * t19724 + 1000 * t19726 - 5128 * t19728 + 6812 * t19730 + (-988 * t19731 - 4728 * t19733 + 3480 * t19735 - 462 * t19737 - 162 * t19739 - 62) * t19723
            t19742 = -108 * t19722 + 1137 * t19725 - 2112 * t19727 - 1482 * t19729 - 7982 * t19733 + 1888 * t19735 + 1187 * t19737 - 508 * t19739 - 9 + (8008 - 19 * t19731) * t19731
            tfunc[..., c] = (0.39e2 / 0.262144e6*1j) * np.sqrt(0.6220181e7) * ((-t19742 + t19743) * np.exp((-9*1j) * (phi1 - 2 * phi2)) + (t19742 + t19743) * np.exp((-9*1j) * (phi1 + 2 * phi2))) * ((1 + t19723) ** (-0.1e1 / 0.2e1)) * ((1 - t19723) ** (-0.1e1 / 0.2e1))

        if Bindx == 802:
            t19764 = np.cos(phi)
            t19763 = t19764 ** 2
            t19767 = t19763 ** 2
            t19766 = t19764 * t19763
            t19769 = t19766 ** 2
            t19771 = t19767 ** 2
            t19768 = t19764 * t19767
            t19773 = t19768 ** 2
            t19775 = t19769 ** 2
            t19770 = t19764 * t19769
            t19777 = t19770 ** 2
            t19779 = t19771 ** 2
            t19772 = t19764 * t19771
            t19781 = t19772 ** 2
            t19784 = -0.823095e6 / 0.2048e4 * t19763 + 0.40189149e8 / 0.4096e4 * t19767 - 0.398542599e9 / 0.4096e4 * t19769 + 0.1028299077e10 / 0.2048e4 * t19771 - 0.6089210127e10 / 0.4096e4 * t19773 + 0.10687118715e11 / 0.4096e4 * t19775 - 0.10957018293e11 / 0.4096e4 * t19777 + 0.12103723359e11 / 0.8192e4 * t19779 - 0.1389362247e10 / 0.4096e4 * t19781 + 0.23517e5 / 0.8192e4
            t19783 = -0.228948993e9 / 0.65536e5 * t19766 + 0.741855933e9 / 0.16384e5 * t19768 - 0.4196608065e10 / 0.16384e5 * t19770 + 0.24177552399e11 / 0.32768e5 * t19772 + (-0.36298962063e11 / 0.32768e5 * t19773 + 0.11904927489e11 / 0.16384e5 * t19775 + 0.1396514691e10 / 0.16384e5 * t19777 - 0.23719292415e11 / 0.65536e5 * t19779 + 0.8799294231e10 / 0.65536e5 * t19781 + 0.5006313e7 / 0.65536e5) * t19764
            t19765 = 4 * phi1
            tfunc[..., c] = (t19783 + t19784) * np.exp((-2*1j) * (t19765 - 3 * phi2)) + (-t19783 + t19784) * np.exp((-2*1j) * (t19765 + 3 * phi2))

        if Bindx == 803:
            t19805 = np.cos(phi)
            t19804 = t19805 ** 2
            t19808 = t19804 ** 2
            t19807 = t19805 * t19804
            t19810 = t19807 ** 2
            t19812 = t19808 ** 2
            t19809 = t19805 * t19808
            t19814 = t19809 ** 2
            t19816 = t19810 ** 2
            t19811 = t19805 * t19810
            t19818 = t19811 ** 2
            t19820 = t19812 ** 2
            t19813 = t19805 * t19812
            t19822 = t19813 ** 2
            t19825 = 688 * t19804 - 11336 * t19808 + 78880 * t19810 - 269672 * t19812 + 469456 * t19814 - 368056 * t19816 + 14912 * t19818 + 145520 * t19820 - 60384 * t19822 - 8
            t19824 = 2719 * t19807 - 16316 * t19809 + 19396 * t19811 + 111098 * t19813 + (-423670 * t19814 + 594212 * t19816 - 367132 * t19818 + 67847 * t19820 + 11951 * t19822 - 105) * t19805
            t19806 = 2 * phi1
            tfunc[..., c] = (0.39e2 / 0.32768e5) * ((t19824 + t19825) * np.exp((-4*1j) * (t19806 - 3 * phi2)) + (-t19824 + t19825) * np.exp((-4*1j) * (t19806 + 3 * phi2))) * np.sqrt(0.207669e6)

        if Bindx == 804:
            t19846 = np.cos(phi)
            t19845 = t19846 ** 2
            t19849 = t19845 ** 2
            t19848 = t19846 * t19845
            t19851 = t19848 ** 2
            t19853 = t19849 ** 2
            t19850 = t19846 * t19849
            t19855 = t19850 ** 2
            t19857 = t19851 ** 2
            t19852 = t19846 * t19851
            t19859 = t19852 ** 2
            t19861 = t19853 ** 2
            t19854 = t19846 * t19853
            t19863 = t19854 ** 2
            t19866 = -8 - 32 * t19845 + 784 * t19849 - 2320 * t19851 + 1664 * t19853 + 2288 * t19855 - 4368 * t19857 + 2256 * t19859 - 120 * t19861 - 144 * t19863
            t19865 = 309 * t19848 + 12 * t19850 - 2652 * t19852 + 5434 * t19854 + (-3770 * t19855 - 164 * t19857 + 1268 * t19859 - 373 * t19861 - 19 * t19863 - 45) * t19846
            t19847 = 4 * phi1
            tfunc[..., c] = (0.39e2 / 0.131072e6) * ((-t19865 + t19866) * np.exp((-2*1j) * (t19847 - 9 * phi2)) + (t19865 + t19866) * np.exp((-2*1j) * (t19847 + 9 * phi2))) * np.sqrt(0.3958297e7)

        if Bindx == 805:
            t19887 = np.cos(phi)
            t19886 = t19887 ** 2
            t19890 = t19886 ** 2
            t19894 = t19890 ** 2
            t19895 = t19887 * t19894
            t19904 = t19895 ** 2
            t19906 = -676868787 * t19887 * t19904 + 11047
            t19902 = t19894 ** 2
            t19889 = t19887 * t19886
            t19892 = t19889 ** 2
            t19893 = t19887 * t19892
            t19900 = t19893 ** 2
            t19898 = t19892 ** 2
            t19891 = t19887 * t19890
            t19896 = t19891 ** 2
            t19888 = 7 * phi1
            t19877 = t19887 * t19896
            t19875 = t19887 * t19898
            t19873 = t19887 * t19900
            t19871 = t19887 * t19902
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * np.sqrt((1 + t19887)) * ((1 - t19887) ** (-0.1e1 / 0.2e1)) * ((372614823 * t19871 + 4557940788 * t19873 - 10362230004 * t19875 + 9958059846 * t19877 - 1383963 * t19886 - 250993 * t19887 + 13375957 * t19889 + 25078172 * t19890 - 206790276 * t19891 - 128883356 * t19892 + 1420156004 * t19893 - 25401006 * t19894 - 5076859326 * t19895 + 2125150566 * t19896 - 7187537364 * t19898 + 10748699316 * t19900 - 7727986497 * t19902 + 2173105053 * t19904 + t19906) * np.exp((-1*1j) * (t19888 - 6 * phi2)) + (-3365087355 * t19871 + 7160330028 * t19873 - 8532779388 * t19875 + 6246465498 * t19877 + 1863855 * t19886 - 228899 * t19887 + 10128139 * t19889 - 48582268 * t19890 - 133129836 * t19891 + 468803468 * t19892 + 822469180 * t19893 - 2217224178 * t19894 - 2885036154 * t19895 + 5836744914 * t19896 - 9016987980 * t19898 + 8146310076 * t19900 - 3990284319 * t19902 + 819367479 * t19904 - t19906) * np.exp((-1*1j) * (t19888 + 6 * phi2)))

        if Bindx == 806:
            t19928 = np.cos(phi)
            t19927 = t19928 ** 2
            t19931 = t19927 ** 2
            t19930 = t19928 * t19927
            t19933 = t19930 ** 2
            t19935 = t19931 ** 2
            t19932 = t19928 * t19931
            t19937 = t19932 ** 2
            t19939 = t19933 ** 2
            t19934 = t19928 * t19933
            t19941 = t19934 ** 2
            t19943 = t19935 ** 2
            t19936 = t19928 * t19935
            t19945 = t19936 ** 2
            t19949 = -94 * t19927 - 2727 * t19931 + 66520 * t19933 - 438334 * t19935 - 2243462 * t19939 + 2018264 * t19941 - 872355 * t19943 + 82722 * t19945 + 1 + (1353612 + 35853 * t19937) * t19937
            t19948 = 9428 * t19930 - 89456 * t19932 + 388272 * t19934 - 852904 * t19936 + (864760 * t19937 - 48816 * t19939 - 711760 * t19941 + 599284 * t19943 - 158508 * t19945 - 300) * t19928
            t19929 = 7 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5*1j) * np.sqrt(0.207669e6) * ((t19948 + t19949) * np.exp((-1*1j) * (t19929 - 12 * phi2)) + (t19948 - t19949) * np.exp((-1*1j) * (t19929 + 12 * phi2))) * ((1 + t19928) ** (-0.1e1 / 0.2e1)) * ((1 - t19928) ** (-0.1e1 / 0.2e1))

        if Bindx == 807:
            t19971 = np.cos(phi)
            t19970 = t19971 ** 2
            t19973 = t19971 * t19970
            t19974 = t19970 ** 2
            t19975 = t19971 * t19974
            t19976 = t19973 ** 2
            t19977 = t19971 * t19976
            t19978 = t19974 ** 2
            t19979 = t19971 * t19978
            t19980 = t19975 ** 2
            t19982 = t19976 ** 2
            t19984 = t19977 ** 2
            t19986 = t19978 ** 2
            t19988 = t19979 ** 2
            t19992 = -334 * t19973 + 856 * t19975 + 72 * t19977 - 3484 * t19979 + (5980 * t19980 - 4296 * t19982 + 1064 * t19984 + 238 * t19986 - 126 * t19988 + 30) * t19971
            t19991 = -28 * t19970 - 399 * t19974 + 2240 * t19976 - 4394 * t19978 + 338 * t19982 - 2336 * t19984 + 1395 * t19986 - 236 * t19988 + 7 + (3432 - 19 * t19980) * t19980
            t19972 = 7 * phi1
            tfunc[..., c] = (0.117e3 / 0.262144e6*1j) * np.sqrt(0.3958297e7) * ((-t19991 + t19992) * np.exp((-1*1j) * (t19972 - 18 * phi2)) + (t19991 + t19992) * np.exp((-1*1j) * (t19972 + 18 * phi2))) * ((1 + t19971) ** (-0.1e1 / 0.2e1)) * ((1 - t19971) ** (-0.1e1 / 0.2e1))

        if Bindx == 808:
            t20013 = np.cos(phi)
            t20012 = t20013 ** 2
            t20015 = t20012 ** 2
            t20014 = t20013 * t20012
            t20017 = t20014 ** 2
            t20019 = t20015 ** 2
            t20016 = t20013 * t20015
            t20021 = t20016 ** 2
            t20023 = t20017 ** 2
            t20018 = t20013 * t20017
            t20025 = t20018 ** 2
            t20027 = t20019 ** 2
            t20020 = t20013 * t20019
            t20029 = t20020 ** 2
            t20032 = 1813812 * t20012 - 46155928 * t20015 + 455835744 * t20017 - 2277834156 * t20019 + 6459068616 * t20021 - 10855727064 * t20023 + 10710671616 * t20025 - 5730116322 * t20027 + 1282488228 * t20029 - 11778
            t20031 = 3578757 * t20014 - 46740876 * t20016 + 239354804 * t20018 - 469495026 * t20020 + (-162789354 * t20021 + 2177201796 * t20023 - 3603181212 * t20025 + 2538980073 * t20027 - 676868787 * t20029 - 72943) * t20013
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * ((t20031 + t20032) * np.exp((-6*1j) * (phi1 - phi2)) + (-t20031 + t20032) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 809:
            t20053 = np.cos(phi)
            t20052 = t20053 ** 2
            t20055 = t20052 ** 2
            t20054 = t20053 * t20052
            t20057 = t20054 ** 2
            t20059 = t20055 ** 2
            t20056 = t20053 * t20055
            t20061 = t20056 ** 2
            t20063 = t20057 ** 2
            t20058 = t20053 * t20057
            t20065 = t20058 ** 2
            t20067 = t20059 ** 2
            t20060 = t20053 * t20059
            t20069 = t20060 ** 2
            t20072 = 1200 * t20052 - 18008 * t20055 + 93672 * t20057 - 193392 * t20059 + 39784 * t20061 + 485400 * t20063 - 821064 * t20065 + 548284 * t20067 - 135864 * t20069 - 12
            t20071 = -4611 * t20054 + 53076 * t20056 - 291700 * t20058 + 858594 * t20060 + (-1408962 * t20061 + 1253492 * t20063 - 507348 * t20065 + 11475 * t20067 + 35853 * t20069 + 131) * t20053
            tfunc[..., c] = (0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.207669e6) * ((t20071 + t20072) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (-t20071 + t20072) * np.exp((-6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 810:
            t20093 = np.cos(phi)
            t20092 = t20093 ** 2
            t20095 = t20092 ** 2
            t20094 = t20093 * t20092
            t20097 = t20094 ** 2
            t20099 = t20095 ** 2
            t20096 = t20093 * t20095
            t20101 = t20096 ** 2
            t20103 = t20097 ** 2
            t20098 = t20093 * t20097
            t20105 = t20098 ** 2
            t20107 = t20099 ** 2
            t20100 = t20093 * t20099
            t20109 = t20100 ** 2
            t20112 = -6 + 60 * t20092 + 56 * t20095 - 1152 * t20097 + 3132 * t20099 - 3784 * t20101 + 2040 * t20103 - 96 * t20105 - 358 * t20107 + 108 * t20109
            t20111 = -267 * t20094 + 996 * t20096 - 1340 * t20098 - 66 * t20100 + (2118 * t20101 - 2348 * t20103 + 1044 * t20105 - 135 * t20107 - 19 * t20109 + 17) * t20093
            tfunc[..., c] = -(0.117e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.3958297e7) * ((t20111 + t20112) * np.exp((-6*1j) * (phi1 - 3 * phi2)) + (-t20111 + t20112) * np.exp((-6*1j) * (phi1 + 3 * phi2)))

        if Bindx == 811:
            t20134 = np.cos(phi)
            t20133 = t20134 ** 2
            t20137 = t20133 ** 2
            t20136 = t20134 * t20133
            t20139 = t20136 ** 2
            t20141 = t20137 ** 2
            t20138 = t20134 * t20137
            t20143 = t20138 ** 2
            t20145 = t20139 ** 2
            t20140 = t20134 * t20139
            t20147 = t20140 ** 2
            t20149 = t20141 ** 2
            t20142 = t20134 * t20141
            t20151 = t20142 ** 2
            t20155 = -2080 * t20133 - 62985 * t20137 + 3116464 * t20139 - 36171070 * t20141 - 549745170 * t20145 + 912449040 * t20147 - 875486655 * t20149 + 451154160 * t20151 + 13 + (191443824 - 96695541 * t20143) * t20143
            t20154 = 1260610 * t20136 - 19868680 * t20138 + 143593320 * t20140 - 567413340 * t20142 + (1329354780 * t20143 - 1898795880 * t20145 + 1624435464 * t20147 - 765219810 * t20149 + 152677170 * t20151 - 23634) * t20134
            t20135 = 5 * phi1
            tfunc[..., c] = (-0.195e3 / 0.131072e6*1j) * np.sqrt(0.7e1) * ((1 + t20134) ** (-0.1e1 / 0.2e1)) * ((1 - t20134) ** (-0.1e1 / 0.2e1)) * ((t20154 + t20155) * np.exp((-1*1j) * (t20135 - 6 * phi2)) + (t20154 - t20155) * np.exp((-1*1j) * (t20135 + 6 * phi2)))

        if Bindx == 812:
            t20177 = np.cos(phi)
            t20176 = t20177 ** 2
            t20179 = t20177 * t20176
            t20180 = t20176 ** 2
            t20181 = t20177 * t20180
            t20182 = t20179 ** 2
            t20183 = t20177 * t20182
            t20184 = t20180 ** 2
            t20185 = t20177 * t20184
            t20186 = t20181 ** 2
            t20188 = t20182 ** 2
            t20190 = t20183 ** 2
            t20192 = t20184 ** 2
            t20194 = t20185 ** 2
            t20198 = 1052 * t20179 - 4208 * t20181 - 33168 * t20183 + 287912 * t20185 + (-883832 * t20186 + 1410960 * t20188 - 1251280 * t20190 + 585820 * t20192 - 113220 * t20194 - 36) * t20177
            t20197 = 1166 * t20176 - 20919 * t20180 + 149992 * t20182 - 553606 * t20184 - 1376918 * t20188 + 862952 * t20190 - 170799 * t20192 - 81906 * t20194 - 11 + (1154196 + 35853 * t20186) * t20186
            t20178 = 5 * phi1
            tfunc[..., c] = (0.195e3 / 0.65536e5*1j) * np.sqrt(0.29667e5) * ((t20197 + t20198) * np.exp((-1*1j) * (t20178 - 12 * phi2)) + (-t20197 + t20198) * np.exp((-1*1j) * (t20178 + 12 * phi2))) * ((1 + t20177) ** (-0.1e1 / 0.2e1)) * ((1 - t20177) ** (-0.1e1 / 0.2e1))

        if Bindx == 813:
            t20220 = np.cos(phi)
            t20219 = t20220 ** 2
            t20222 = t20220 * t20219
            t20223 = t20219 ** 2
            t20224 = t20220 * t20223
            t20225 = t20222 ** 2
            t20226 = t20220 * t20225
            t20227 = t20223 ** 2
            t20228 = t20220 * t20227
            t20229 = t20224 ** 2
            t20231 = t20225 ** 2
            t20233 = t20226 ** 2
            t20235 = t20227 ** 2
            t20237 = t20228 ** 2
            t20241 = -182 * t20222 + 1016 * t20224 - 2520 * t20226 + 3220 * t20228 + (-1876 * t20229 - 168 * t20231 + 904 * t20233 - 490 * t20235 + 90 * t20237 + 6) * t20220
            t20240 = 80 * t20219 - 255 * t20223 - 16 * t20225 + 1582 * t20227 + 4130 * t20231 - 2480 * t20233 + 711 * t20235 - 32 * t20237 - 5 + (-3696 - 19 * t20229) * t20229
            t20221 = 5 * phi1
            tfunc[..., c] = (-0.585e3 / 0.262144e6*1j) * np.sqrt(0.565471e6) * ((1 + t20220) ** (-0.1e1 / 0.2e1)) * ((1 - t20220) ** (-0.1e1 / 0.2e1)) * ((t20240 + t20241) * np.exp((-1*1j) * (t20221 - 18 * phi2)) + (-t20240 + t20241) * np.exp((-1*1j) * (t20221 + 18 * phi2)))

        if Bindx == 814:
            t20262 = np.cos(phi)
            t20261 = t20262 ** 2
            t20265 = t20261 ** 2
            t20264 = t20262 * t20261
            t20267 = t20264 ** 2
            t20269 = t20265 ** 2
            t20266 = t20262 * t20265
            t20271 = t20266 ** 2
            t20273 = t20267 ** 2
            t20268 = t20262 * t20267
            t20275 = t20268 ** 2
            t20277 = t20269 ** 2
            t20270 = t20262 * t20269
            t20279 = t20270 ** 2
            t20282 = -162032 * t20261 + 4329208 * t20265 - 44223816 * t20267 + 225327024 * t20269 - 643448520 * t20271 + 1078476360 * t20273 - 1053663960 * t20275 + 555506484 * t20277 - 122141736 * t20279 + 988
            t20281 = 319397 * t20264 - 5447884 * t20266 + 43805996 * t20268 - 195901134 * t20270 + (522985710 * t20271 - 850471980 * t20273 + 823631436 * t20275 - 435611349 * t20277 + 96695541 * t20279 - 5733) * t20262
            t20263 = 2 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((t20281 + t20282) * np.exp((-2*1j) * (t20263 - 3 * phi2)) + (-t20281 + t20282) * np.exp((-2*1j) * (t20263 + 3 * phi2)))

        if Bindx == 815:
            t20303 = np.cos(phi)
            t20302 = t20303 ** 2
            t20305 = t20302 ** 2
            t20304 = t20303 * t20302
            t20307 = t20304 ** 2
            t20309 = t20305 ** 2
            t20306 = t20303 * t20305
            t20311 = t20306 ** 2
            t20313 = t20307 ** 2
            t20308 = t20303 * t20307
            t20315 = t20308 ** 2
            t20317 = t20309 ** 2
            t20310 = t20303 * t20309
            t20319 = t20310 ** 2
            t20322 = 440 * t20302 - 8836 * t20305 + 74256 * t20307 - 325716 * t20309 + 812424 * t20311 - 1192700 * t20313 + 1020256 * t20315 - 470696 * t20317 + 90576 * t20319 - 4
            t20321 = -4187 * t20304 + 42388 * t20306 - 188060 * t20308 + 425702 * t20310 + (-494122 * t20311 + 221732 * t20313 + 86292 * t20315 - 125715 * t20317 + 35853 * t20319 + 117) * t20303
            tfunc[..., c] = -(0.39e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.148335e6) * ((-t20321 + t20322) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t20321 + t20322) * np.exp((-4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 816:
            t20343 = np.cos(phi)
            t20342 = t20343 ** 2
            t20346 = t20342 ** 2
            t20345 = t20343 * t20342
            t20348 = t20345 ** 2
            t20350 = t20346 ** 2
            t20347 = t20343 * t20346
            t20352 = t20347 ** 2
            t20354 = t20348 ** 2
            t20349 = t20343 * t20348
            t20356 = t20349 ** 2
            t20358 = t20350 ** 2
            t20351 = t20343 * t20350
            t20360 = t20351 ** 2
            t20363 = 4 - 80 * t20342 + 376 * t20346 - 728 * t20348 + 448 * t20350 + 616 * t20352 - 1400 * t20354 + 1144 * t20356 - 452 * t20358 + 72 * t20360
            t20362 = 77 * t20345 - 604 * t20347 + 1820 * t20349 - 2926 * t20351 + (2702 * t20352 - 1372 * t20354 + 284 * t20356 + 35 * t20358 - 19 * t20360 + 3) * t20343
            t20344 = 2 * phi1
            tfunc[..., c] = -(0.117e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.2827355e7) * ((t20362 + t20363) * np.exp((-2*1j) * (t20344 - 9 * phi2)) + (-t20362 + t20363) * np.exp((-2*1j) * (t20344 + 9 * phi2)))

        if Bindx == 817:
            t20385 = np.cos(phi)
            t20384 = t20385 ** 2
            t20386 = t20385 * t20384
            t20387 = t20384 ** 2
            t20388 = t20385 * t20387
            t20389 = t20386 ** 2
            t20390 = t20385 * t20389
            t20391 = t20387 ** 2
            t20392 = t20385 * t20391
            t20393 = t20388 ** 2
            t20395 = t20389 ** 2
            t20397 = t20390 ** 2
            t20399 = t20391 ** 2
            t20401 = t20392 ** 2
            t20405 = 711854 * t20386 - 11621272 * t20388 + 86174712 * t20390 - 346217508 * t20392 + (817916580 * t20393 - 1169742840 * t20395 + 996185496 * t20397 - 465000558 * t20399 + 91606302 * t20401 - 12766) * t20385
            t20404 = 85176 * t20384 - 2410889 * t20387 + 27000688 * t20389 - 156388622 * t20391 - 1103120850 * t20395 + 1440629520 * t20397 - 1147279527 * t20399 + 509474088 * t20401 - 507 + (528706464 - 96695541 * t20393) * t20393
            tfunc[..., c] = (-0.39e2 / 0.262144e6*1j) * np.sqrt(0.805e3) * np.sqrt(0.2e1) * ((1 + t20385) ** (-0.1e1 / 0.2e1)) * ((1 - t20385) ** (-0.1e1 / 0.2e1)) * ((t20404 + t20405) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (-t20404 + t20405) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 818:
            t20427 = np.cos(phi)
            t20426 = t20427 ** 2
            t20429 = t20426 ** 2
            t20428 = t20427 * t20426
            t20431 = t20428 ** 2
            t20433 = t20429 ** 2
            t20430 = t20427 * t20429
            t20435 = t20430 ** 2
            t20437 = t20431 ** 2
            t20432 = t20427 * t20431
            t20439 = t20432 ** 2
            t20441 = t20433 ** 2
            t20434 = t20427 * t20433
            t20443 = t20434 ** 2
            t20447 = -342 * t20426 + 5879 * t20429 - 35080 * t20431 + 86582 * t20433 - 174698 * t20437 + 424696 * t20439 - 409785 * t20441 + 191658 * t20443 + 3 + (-53060 - 35853 * t20435) * t20435
            t20446 = 3836 * t20428 - 44560 * t20430 + 243696 * t20432 - 745272 * t20434 + (1374600 * t20435 - 1566416 * t20437 + 1080880 * t20439 - 414596 * t20441 + 67932 * t20443 - 100) * t20427
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * np.sqrt(0.3411705e7) * np.sqrt(0.2e1) * ((1 + t20427) ** (-0.1e1 / 0.2e1)) * ((1 - t20427) ** (-0.1e1 / 0.2e1)) * ((t20446 + t20447) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t20446 - t20447) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 819:
            t20469 = np.cos(phi)
            t20468 = t20469 ** 2
            t20470 = t20469 * t20468
            t20471 = t20468 ** 2
            t20472 = t20469 * t20471
            t20473 = t20470 ** 2
            t20474 = t20469 * t20473
            t20475 = t20471 ** 2
            t20476 = t20469 * t20475
            t20477 = t20472 ** 2
            t20479 = t20473 ** 2
            t20481 = t20474 ** 2
            t20483 = t20475 ** 2
            t20485 = t20476 ** 2
            t20489 = -26 * t20470 - 152 * t20472 + 952 * t20474 - 2324 * t20476 + (3220 * t20477 - 2744 * t20479 + 1432 * t20481 - 422 * t20483 + 54 * t20485 + 10) * t20469
            t20488 = -72 * t20468 + 449 * t20471 - 1360 * t20473 + 2366 * t20475 + 1442 * t20479 - 304 * t20481 - 145 * t20483 + 104 * t20485 + 3 + (-2464 - 19 * t20477) * t20477
            tfunc[..., c] = (-0.117e3 / 0.524288e6*1j) * np.sqrt(0.65029165e8) * np.sqrt(0.2e1) * ((1 + t20469) ** (-0.1e1 / 0.2e1)) * ((1 - t20469) ** (-0.1e1 / 0.2e1)) * ((t20488 + t20489) * np.exp((-3*1j) * (phi1 - 6 * phi2)) + (-t20488 + t20489) * np.exp((-3*1j) * (phi1 + 6 * phi2)))

        if Bindx == 820:
            t20510 = np.cos(phi)
            t20509 = t20510 ** 2
            t20512 = t20509 ** 2
            t20511 = t20510 * t20509
            t20514 = t20511 ** 2
            t20516 = t20512 ** 2
            t20513 = t20510 * t20512
            t20518 = t20513 ** 2
            t20520 = t20514 ** 2
            t20515 = t20510 * t20514
            t20522 = t20515 ** 2
            t20524 = t20516 ** 2
            t20517 = t20510 * t20516
            t20526 = t20517 ** 2
            t20529 = -4420 * t20509 + 121784 * t20512 - 1275456 * t20514 + 6620796 * t20516 - 19136520 * t20518 + 32256120 * t20520 - 31500960 * t20522 + 16511034 * t20524 - 3592404 * t20526 + 26
            t20528 = 37453 * t20511 - 620828 * t20513 + 4684420 * t20515 - 19187922 * t20517 + (46291830 * t20518 - 67694700 * t20520 + 58999572 * t20522 - 28197135 * t20524 + 5687973 * t20526 - 663) * t20510
            tfunc[..., c] = (0.39e2 / 0.131072e6) * ((t20528 + t20529) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (-t20528 + t20529) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.150535e6)

        if Bindx == 821:
            t20550 = np.cos(phi)
            t20549 = t20550 ** 2
            t20552 = t20549 ** 2
            t20551 = t20550 * t20549
            t20554 = t20551 ** 2
            t20556 = t20552 ** 2
            t20553 = t20550 * t20552
            t20558 = t20553 ** 2
            t20560 = t20554 ** 2
            t20555 = t20550 * t20554
            t20562 = t20555 ** 2
            t20564 = t20556 ** 2
            t20557 = t20550 * t20556
            t20566 = t20557 ** 2
            t20569 = -464 * t20549 + 8728 * t20552 - 63000 * t20554 + 229344 * t20556 - 475224 * t20558 + 587624 * t20560 - 430408 * t20562 + 172700 * t20564 - 29304 * t20566 + 4
            t20568 = 607 * t20551 - 7892 * t20553 + 49492 * t20555 - 172474 * t20557 + (355610 * t20558 - 444052 * t20560 + 330132 * t20562 - 134607 * t20564 + 23199 * t20566 - 15) * t20550
            tfunc[..., c] = (0.39e2 / 0.65536e5) * ((t20568 + t20569) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (-t20568 + t20569) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.5272635e7)

        if Bindx == 822:
            t20590 = np.cos(phi)
            t20589 = t20590 ** 2
            t20592 = t20589 ** 2
            t20591 = t20590 * t20589
            t20594 = t20591 ** 2
            t20596 = t20592 ** 2
            t20593 = t20590 * t20592
            t20598 = t20593 ** 2
            t20600 = t20594 ** 2
            t20595 = t20590 * t20594
            t20602 = t20595 ** 2
            t20604 = t20596 ** 2
            t20597 = t20590 * t20596
            t20606 = t20597 ** 2
            t20609 = 2 - 52 * t20589 + 344 * t20592 - 1120 * t20594 + 2156 * t20596 - 2632 * t20598 + 2072 * t20600 - 1024 * t20602 + 290 * t20604 - 36 * t20606
            t20608 = 101 * t20591 - 268 * t20593 + 308 * t20595 + 14 * t20597 + (-490 * t20598 + 644 * t20600 - 412 * t20602 + 137 * t20604 - 19 * t20606 - 15) * t20590
            tfunc[..., c] = (0.117e3 / 0.262144e6) * ((-t20608 + t20609) * np.exp((-2*1j) * (phi1 - 9 * phi2)) + (t20608 + t20609) * np.exp((-2*1j) * (phi1 + 9 * phi2))) * np.sqrt(0.42077695e8)

        if Bindx == 823:
            t20631 = np.cos(phi)
            t20630 = t20631 ** 2
            t20632 = t20631 * t20630
            t20633 = t20630 ** 2
            t20634 = t20631 * t20633
            t20635 = t20632 ** 2
            t20636 = t20631 * t20635
            t20637 = t20633 ** 2
            t20638 = t20631 * t20637
            t20639 = t20634 ** 2
            t20641 = t20635 ** 2
            t20643 = t20636 ** 2
            t20645 = t20637 ** 2
            t20647 = t20638 ** 2
            t20651 = 31122 * t20632 - 517608 * t20634 + 3895944 * t20636 - 15827292 * t20638 + (37662300 * t20639 - 54047880 * t20641 + 46021608 * t20643 - 21408786 * t20645 + 4191138 * t20647 - 546) * t20631
            t20650 = 15652 * t20630 - 446901 * t20633 + 4976608 * t20635 - 28286206 * t20637 - 186151290 * t20641 + 232157760 * t20643 - 175712247 * t20645 + 73930164 * t20647 - 91 + (92788488 - 13271937 * t20639) * t20639
            tfunc[..., c] = (-0.39e2 / 0.262144e6*1j) * np.sqrt(0.64515e5) * np.sqrt(0.2e1) * ((1 + t20631) ** (-0.1e1 / 0.2e1)) * ((1 - t20631) ** (-0.1e1 / 0.2e1)) * ((t20650 + t20651) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (-t20650 + t20651) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 824:
            t20673 = np.cos(phi)
            t20672 = t20673 ** 2
            t20674 = t20673 * t20672
            t20675 = t20672 ** 2
            t20676 = t20673 * t20675
            t20677 = t20674 ** 2
            t20678 = t20673 * t20677
            t20679 = t20675 ** 2
            t20680 = t20673 * t20679
            t20681 = t20676 ** 2
            t20683 = t20677 ** 2
            t20685 = t20678 ** 2
            t20687 = t20679 ** 2
            t20689 = t20680 ** 2
            t20693 = 468 * t20674 - 5328 * t20676 + 27696 * t20678 - 78984 * t20680 + (134712 * t20681 - 141648 * t20683 + 90288 * t20685 - 32076 * t20687 + 4884 * t20689 - 12) * t20673
            t20692 = -118 * t20672 + 2337 * t20675 - 18376 * t20677 + 75394 * t20679 + 276938 * t20683 - 266312 * t20685 + 158301 * t20687 - 53174 * t20689 + 1 + (-182724 + 7733 * t20681) * t20681
            tfunc[..., c] = (-0.117e3 / 0.131072e6*1j) * np.sqrt(0.12302815e8) * np.sqrt(0.2e1) * ((1 + t20673) ** (-0.1e1 / 0.2e1)) * ((1 - t20673) ** (-0.1e1 / 0.2e1)) * ((-t20692 + t20693) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (t20692 + t20693) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 825:
            t20715 = np.cos(phi)
            t20714 = t20715 ** 2
            t20716 = t20715 * t20714
            t20717 = t20714 ** 2
            t20718 = t20715 * t20717
            t20719 = t20716 ** 2
            t20720 = t20715 * t20719
            t20721 = t20717 ** 2
            t20722 = t20715 * t20721
            t20723 = t20718 ** 2
            t20725 = t20719 ** 2
            t20727 = t20720 ** 2
            t20729 = t20721 ** 2
            t20731 = t20722 ** 2
            t20735 = 162 * t20716 - 648 * t20718 + 1512 * t20720 - 2268 * t20722 + 18 * (126 * t20723 - 84 * t20725 + 36 * t20727 - 9 * t20729 + t20731 - 1) * t20715
            t20734 = 28 * t20714 - 207 * t20717 + 768 * t20719 - 1722 * t20721 - 2478 * t20725 + 1632 * t20727 - 693 * t20729 + 172 * t20731 - 1 + (2520 - 19 * t20723) * t20723
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.883631595e9) * np.sqrt(0.2e1) * ((1 + t20715) ** (-0.1e1 / 0.2e1)) * ((1 - t20715) ** (-0.1e1 / 0.2e1)) * ((t20734 + t20735) * np.exp((-1*1j) * (phi1 - 18 * phi2)) + (-t20734 + t20735) * np.exp((-1*1j) * (phi1 + 18 * phi2)))

        if Bindx == 826:
            t20746 = np.sin(phi)
            t20743 = t20746 ** 2
            t20744 = t20746 * t20743
            t20736 = np.cos(phi)
            t20737 = t20736 ** 2
            t20738 = t20737 ** 2
            t20740 = t20738 ** 2
            t20739 = t20737 * t20738
            tfunc[..., c] = (-0.195e3 / 0.65536e5*1j) * t20736 * t20744 ** 2 * (71253 * t20738 + 1157013 * t20740 + 91 + (-420732 + 698523 * t20739) * t20739 + (-1472562 * t20740 - 4914) * t20737) * np.sin((6 * phi2)) * np.sqrt(0.245157e6) * np.sqrt(0.2e1)

        if Bindx == 827:
            t20755 = np.sin(phi)
            t20751 = t20755 ** 2
            t20752 = t20755 * t20751
            t20753 = t20752 ** 2
            t20747 = np.cos(phi)
            t20748 = t20747 ** 2
            t20749 = t20748 ** 2
            tfunc[..., c] = (0.585e3 / 0.32768e5*1j) * t20747 * t20753 ** 2 * (-231 * t20749 - 1 + (407 * t20749 + 33) * t20748) * np.sin((12 * phi2)) * np.sqrt(0.46750697e8) * np.sqrt(0.2e1)

        if Bindx == 828:
            t20761 = np.sin(phi)
            t20756 = t20761 ** 2
            t20757 = t20756 ** 2
            t20759 = t20761 * t20757 ** 2
            tfunc[..., c] = (-0.195e3 / 0.131072e6*1j) * np.sqrt(0.3357800061e10) * np.sqrt(0.2e1) * np.cos(phi) * np.sin((18 * phi2)) * t20759 ** 2

        if Bindx == 829:
            t20783 = np.cos(phi)
            t20782 = t20783 ** 2
            t20784 = t20783 * t20782
            t20785 = t20782 ** 2
            t20786 = t20783 * t20785
            t20787 = t20784 ** 2
            t20788 = t20783 * t20787
            t20789 = t20785 ** 2
            t20790 = t20783 * t20789
            t20791 = t20786 ** 2
            t20793 = t20787 ** 2
            t20795 = t20788 ** 2
            t20797 = t20789 ** 2
            t20799 = t20790 ** 2
            t20803 = 31122 * t20784 - 517608 * t20786 + 3895944 * t20788 - 15827292 * t20790 + (37662300 * t20791 - 54047880 * t20793 + 46021608 * t20795 - 21408786 * t20797 + 4191138 * t20799 - 546) * t20783
            t20802 = -15652 * t20782 + 446901 * t20785 - 4976608 * t20787 + 28286206 * t20789 + 186151290 * t20793 - 232157760 * t20795 + 175712247 * t20797 - 73930164 * t20799 + 91 + (-92788488 + 13271937 * t20791) * t20791
            tfunc[..., c] = (0.39e2 / 0.262144e6*1j) * np.sqrt(0.64515e5) * np.sqrt(0.2e1) * ((-t20802 + t20803) * np.exp((1j) * (phi1 - 6 * phi2)) + (t20802 + t20803) * np.exp((1j) * (phi1 + 6 * phi2))) * ((1 + t20783) ** (-0.1e1 / 0.2e1)) * ((1 - t20783) ** (-0.1e1 / 0.2e1))

        if Bindx == 830:
            t20825 = np.cos(phi)
            t20824 = t20825 ** 2
            t20826 = t20825 * t20824
            t20827 = t20824 ** 2
            t20828 = t20825 * t20827
            t20829 = t20826 ** 2
            t20830 = t20825 * t20829
            t20831 = t20827 ** 2
            t20832 = t20825 * t20831
            t20833 = t20828 ** 2
            t20835 = t20829 ** 2
            t20837 = t20830 ** 2
            t20839 = t20831 ** 2
            t20841 = t20832 ** 2
            t20845 = 468 * t20826 - 5328 * t20828 + 27696 * t20830 - 78984 * t20832 + (134712 * t20833 - 141648 * t20835 + 90288 * t20837 - 32076 * t20839 + 4884 * t20841 - 12) * t20825
            t20844 = -118 * t20824 + 2337 * t20827 - 18376 * t20829 + 75394 * t20831 + 276938 * t20835 - 266312 * t20837 + 158301 * t20839 - 53174 * t20841 + 1 + (-182724 + 7733 * t20833) * t20833
            tfunc[..., c] = (0.117e3 / 0.131072e6*1j) * np.sqrt(0.12302815e8) * np.sqrt(0.2e1) * ((-t20844 + t20845) * np.exp((1j) * (phi1 - 12 * phi2)) + (t20844 + t20845) * np.exp((1j) * (phi1 + 12 * phi2))) * ((1 + t20825) ** (-0.1e1 / 0.2e1)) * ((1 - t20825) ** (-0.1e1 / 0.2e1))

        if Bindx == 831:
            t20867 = np.cos(phi)
            t20866 = t20867 ** 2
            t20868 = t20867 * t20866
            t20869 = t20866 ** 2
            t20870 = t20867 * t20869
            t20871 = t20868 ** 2
            t20872 = t20867 * t20871
            t20873 = t20869 ** 2
            t20874 = t20867 * t20873
            t20875 = t20870 ** 2
            t20877 = t20871 ** 2
            t20879 = t20872 ** 2
            t20881 = t20873 ** 2
            t20883 = t20874 ** 2
            t20887 = -162 * t20868 + 648 * t20870 - 1512 * t20872 + 2268 * t20874 + 18 * (-126 * t20875 + 84 * t20877 - 36 * t20879 + 9 * t20881 - t20883 + 1) * t20867
            t20886 = 28 * t20866 - 207 * t20869 + 768 * t20871 - 1722 * t20873 - 2478 * t20877 + 1632 * t20879 - 693 * t20881 + 172 * t20883 - 1 + (2520 - 19 * t20875) * t20875
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.883631595e9) * np.sqrt(0.2e1) * ((1 + t20867) ** (-0.1e1 / 0.2e1)) * ((1 - t20867) ** (-0.1e1 / 0.2e1)) * ((-t20886 + t20887) * np.exp((1j) * (phi1 - 18 * phi2)) + (t20886 + t20887) * np.exp((1j) * (phi1 + 18 * phi2)))

        if Bindx == 832:
            t20908 = np.cos(phi)
            t20907 = t20908 ** 2
            t20910 = t20907 ** 2
            t20909 = t20908 * t20907
            t20912 = t20909 ** 2
            t20914 = t20910 ** 2
            t20911 = t20908 * t20910
            t20916 = t20911 ** 2
            t20918 = t20912 ** 2
            t20913 = t20908 * t20912
            t20920 = t20913 ** 2
            t20922 = t20914 ** 2
            t20915 = t20908 * t20914
            t20924 = t20915 ** 2
            t20927 = 4420 * t20907 - 121784 * t20910 + 1275456 * t20912 - 6620796 * t20914 + 19136520 * t20916 - 32256120 * t20918 + 31500960 * t20920 - 16511034 * t20922 + 3592404 * t20924 - 26
            t20926 = -37453 * t20909 + 620828 * t20911 - 4684420 * t20913 + 19187922 * t20915 + (-46291830 * t20916 + 67694700 * t20918 - 58999572 * t20920 + 28197135 * t20922 - 5687973 * t20924 + 663) * t20908
            tfunc[..., c] = (0.39e2 / 0.131072e6) * ((t20926 + t20927) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (-t20926 + t20927) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.150535e6)

        if Bindx == 833:
            t20948 = np.cos(phi)
            t20947 = t20948 ** 2
            t20950 = t20947 ** 2
            t20949 = t20948 * t20947
            t20952 = t20949 ** 2
            t20954 = t20950 ** 2
            t20951 = t20948 * t20950
            t20956 = t20951 ** 2
            t20958 = t20952 ** 2
            t20953 = t20948 * t20952
            t20960 = t20953 ** 2
            t20962 = t20954 ** 2
            t20955 = t20948 * t20954
            t20964 = t20955 ** 2
            t20967 = 464 * t20947 - 8728 * t20950 + 63000 * t20952 - 229344 * t20954 + 475224 * t20956 - 587624 * t20958 + 430408 * t20960 - 172700 * t20962 + 29304 * t20964 - 4
            t20966 = 607 * t20949 - 7892 * t20951 + 49492 * t20953 - 172474 * t20955 + (355610 * t20956 - 444052 * t20958 + 330132 * t20960 - 134607 * t20962 + 23199 * t20964 - 15) * t20948
            tfunc[..., c] = (0.39e2 / 0.65536e5) * ((-t20966 + t20967) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (t20966 + t20967) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.5272635e7)

        if Bindx == 834:
            t20988 = np.cos(phi)
            t20987 = t20988 ** 2
            t20990 = t20987 ** 2
            t20989 = t20988 * t20987
            t20992 = t20989 ** 2
            t20994 = t20990 ** 2
            t20991 = t20988 * t20990
            t20996 = t20991 ** 2
            t20998 = t20992 ** 2
            t20993 = t20988 * t20992
            t21000 = t20993 ** 2
            t21002 = t20994 ** 2
            t20995 = t20988 * t20994
            t21004 = t20995 ** 2
            t21007 = -2 + 52 * t20987 - 344 * t20990 + 1120 * t20992 - 2156 * t20994 + 2632 * t20996 - 2072 * t20998 + 1024 * t21000 - 290 * t21002 + 36 * t21004
            t21006 = 101 * t20989 - 268 * t20991 + 308 * t20993 + 14 * t20995 + (-490 * t20996 + 644 * t20998 - 412 * t21000 + 137 * t21002 - 19 * t21004 - 15) * t20988
            tfunc[..., c] = (0.117e3 / 0.262144e6) * ((t21006 + t21007) * np.exp((2*1j) * (phi1 - 9 * phi2)) + (-t21006 + t21007) * np.exp((2*1j) * (phi1 + 9 * phi2))) * np.sqrt(0.42077695e8)

        if Bindx == 835:
            t21029 = np.cos(phi)
            t21028 = t21029 ** 2
            t21030 = t21029 * t21028
            t21031 = t21028 ** 2
            t21032 = t21029 * t21031
            t21033 = t21030 ** 2
            t21034 = t21029 * t21033
            t21035 = t21031 ** 2
            t21036 = t21029 * t21035
            t21037 = t21032 ** 2
            t21039 = t21033 ** 2
            t21041 = t21034 ** 2
            t21043 = t21035 ** 2
            t21045 = t21036 ** 2
            t21049 = -711854 * t21030 + 11621272 * t21032 - 86174712 * t21034 + 346217508 * t21036 + (-817916580 * t21037 + 1169742840 * t21039 - 996185496 * t21041 + 465000558 * t21043 - 91606302 * t21045 + 12766) * t21029
            t21048 = -85176 * t21028 + 2410889 * t21031 - 27000688 * t21033 + 156388622 * t21035 + 1103120850 * t21039 - 1440629520 * t21041 + 1147279527 * t21043 - 509474088 * t21045 + 507 + (-528706464 + 96695541 * t21037) * t21037
            tfunc[..., c] = (-0.39e2 / 0.262144e6*1j) * np.sqrt(0.805e3) * np.sqrt(0.2e1) * ((1 + t21029) ** (-0.1e1 / 0.2e1)) * ((1 - t21029) ** (-0.1e1 / 0.2e1)) * ((t21048 + t21049) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (-t21048 + t21049) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 836:
            t21071 = np.cos(phi)
            t21070 = t21071 ** 2
            t21073 = t21070 ** 2
            t21072 = t21071 * t21070
            t21075 = t21072 ** 2
            t21077 = t21073 ** 2
            t21074 = t21071 * t21073
            t21079 = t21074 ** 2
            t21081 = t21075 ** 2
            t21076 = t21071 * t21075
            t21083 = t21076 ** 2
            t21085 = t21077 ** 2
            t21078 = t21071 * t21077
            t21087 = t21078 ** 2
            t21091 = -342 * t21070 + 5879 * t21073 - 35080 * t21075 + 86582 * t21077 - 174698 * t21081 + 424696 * t21083 - 409785 * t21085 + 191658 * t21087 + 3 + (-53060 - 35853 * t21079) * t21079
            t21090 = 3836 * t21072 - 44560 * t21074 + 243696 * t21076 - 745272 * t21078 + (1374600 * t21079 - 1566416 * t21081 + 1080880 * t21083 - 414596 * t21085 + 67932 * t21087 - 100) * t21071
            tfunc[..., c] = (0.39e2 / 0.131072e6*1j) * np.sqrt(0.3411705e7) * np.sqrt(0.2e1) * ((t21090 + t21091) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t21090 - t21091) * np.exp((3*1j) * (phi1 + 4 * phi2))) * ((1 + t21071) ** (-0.1e1 / 0.2e1)) * ((1 - t21071) ** (-0.1e1 / 0.2e1))

        if Bindx == 837:
            t21113 = np.cos(phi)
            t21112 = t21113 ** 2
            t21114 = t21113 * t21112
            t21115 = t21112 ** 2
            t21116 = t21113 * t21115
            t21117 = t21114 ** 2
            t21118 = t21113 * t21117
            t21119 = t21115 ** 2
            t21120 = t21113 * t21119
            t21121 = t21116 ** 2
            t21123 = t21117 ** 2
            t21125 = t21118 ** 2
            t21127 = t21119 ** 2
            t21129 = t21120 ** 2
            t21133 = 26 * t21114 + 152 * t21116 - 952 * t21118 + 2324 * t21120 + (-3220 * t21121 + 2744 * t21123 - 1432 * t21125 + 422 * t21127 - 54 * t21129 - 10) * t21113
            t21132 = -72 * t21112 + 449 * t21115 - 1360 * t21117 + 2366 * t21119 + 1442 * t21123 - 304 * t21125 - 145 * t21127 + 104 * t21129 + 3 + (-2464 - 19 * t21121) * t21121
            tfunc[..., c] = (-0.117e3 / 0.524288e6*1j) * np.sqrt(0.65029165e8) * np.sqrt(0.2e1) * ((1 + t21113) ** (-0.1e1 / 0.2e1)) * ((1 - t21113) ** (-0.1e1 / 0.2e1)) * ((-t21132 + t21133) * np.exp((3*1j) * (phi1 - 6 * phi2)) + (t21132 + t21133) * np.exp((3*1j) * (phi1 + 6 * phi2)))

        if Bindx == 838:
            t21154 = np.cos(phi)
            t21153 = t21154 ** 2
            t21157 = t21153 ** 2
            t21156 = t21154 * t21153
            t21159 = t21156 ** 2
            t21161 = t21157 ** 2
            t21158 = t21154 * t21157
            t21163 = t21158 ** 2
            t21165 = t21159 ** 2
            t21160 = t21154 * t21159
            t21167 = t21160 ** 2
            t21169 = t21161 ** 2
            t21162 = t21154 * t21161
            t21171 = t21162 ** 2
            t21174 = -162032 * t21153 + 4329208 * t21157 - 44223816 * t21159 + 225327024 * t21161 - 643448520 * t21163 + 1078476360 * t21165 - 1053663960 * t21167 + 555506484 * t21169 - 122141736 * t21171 + 988
            t21173 = 319397 * t21156 - 5447884 * t21158 + 43805996 * t21160 - 195901134 * t21162 + (522985710 * t21163 - 850471980 * t21165 + 823631436 * t21167 - 435611349 * t21169 + 96695541 * t21171 - 5733) * t21154
            t21155 = 2 * phi1
            tfunc[..., c] = -(0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.35e2) * ((t21173 + t21174) * np.exp((2*1j) * (t21155 - 3 * phi2)) + (-t21173 + t21174) * np.exp((2*1j) * (t21155 + 3 * phi2)))

        if Bindx == 839:
            t21195 = np.cos(phi)
            t21194 = t21195 ** 2
            t21197 = t21194 ** 2
            t21196 = t21195 * t21194
            t21199 = t21196 ** 2
            t21201 = t21197 ** 2
            t21198 = t21195 * t21197
            t21203 = t21198 ** 2
            t21205 = t21199 ** 2
            t21200 = t21195 * t21199
            t21207 = t21200 ** 2
            t21209 = t21201 ** 2
            t21202 = t21195 * t21201
            t21211 = t21202 ** 2
            t21214 = -440 * t21194 + 8836 * t21197 - 74256 * t21199 + 325716 * t21201 - 812424 * t21203 + 1192700 * t21205 - 1020256 * t21207 + 470696 * t21209 - 90576 * t21211 + 4
            t21213 = -4187 * t21196 + 42388 * t21198 - 188060 * t21200 + 425702 * t21202 + (-494122 * t21203 + 221732 * t21205 + 86292 * t21207 - 125715 * t21209 + 35853 * t21211 + 117) * t21195
            tfunc[..., c] = -(0.39e2 / 0.32768e5) * np.sqrt(0.2e1) * np.sqrt(0.148335e6) * ((t21213 + t21214) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (-t21213 + t21214) * np.exp((4*1j) * (phi1 + 3 * phi2)))

        if Bindx == 840:
            t21235 = np.cos(phi)
            t21234 = t21235 ** 2
            t21238 = t21234 ** 2
            t21237 = t21235 * t21234
            t21240 = t21237 ** 2
            t21242 = t21238 ** 2
            t21239 = t21235 * t21238
            t21244 = t21239 ** 2
            t21246 = t21240 ** 2
            t21241 = t21235 * t21240
            t21248 = t21241 ** 2
            t21250 = t21242 ** 2
            t21243 = t21235 * t21242
            t21252 = t21243 ** 2
            t21255 = 4 - 80 * t21234 + 376 * t21238 - 728 * t21240 + 448 * t21242 + 616 * t21244 - 1400 * t21246 + 1144 * t21248 - 452 * t21250 + 72 * t21252
            t21254 = 77 * t21237 - 604 * t21239 + 1820 * t21241 - 2926 * t21243 + (2702 * t21244 - 1372 * t21246 + 284 * t21248 + 35 * t21250 - 19 * t21252 + 3) * t21235
            t21236 = 2 * phi1
            tfunc[..., c] = (0.117e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.2827355e7) * ((t21254 + t21255) * np.exp((2*1j) * (t21236 - 9 * phi2)) + (-t21254 + t21255) * np.exp((2*1j) * (t21236 + 9 * phi2)))

        if Bindx == 841:
            t21277 = np.cos(phi)
            t21276 = t21277 ** 2
            t21280 = t21276 ** 2
            t21279 = t21277 * t21276
            t21282 = t21279 ** 2
            t21284 = t21280 ** 2
            t21281 = t21277 * t21280
            t21286 = t21281 ** 2
            t21288 = t21282 ** 2
            t21283 = t21277 * t21282
            t21290 = t21283 ** 2
            t21292 = t21284 ** 2
            t21285 = t21277 * t21284
            t21294 = t21285 ** 2
            t21298 = -2080 * t21276 - 62985 * t21280 + 3116464 * t21282 - 36171070 * t21284 - 549745170 * t21288 + 912449040 * t21290 - 875486655 * t21292 + 451154160 * t21294 + 13 + (191443824 - 96695541 * t21286) * t21286
            t21297 = 1260610 * t21279 - 19868680 * t21281 + 143593320 * t21283 - 567413340 * t21285 + (1329354780 * t21286 - 1898795880 * t21288 + 1624435464 * t21290 - 765219810 * t21292 + 152677170 * t21294 - 23634) * t21277
            t21278 = 5 * phi1
            tfunc[..., c] = (0.195e3 / 0.131072e6*1j) * np.sqrt(0.7e1) * ((t21297 + t21298) * np.exp((1j) * (t21278 - 6 * phi2)) + (t21297 - t21298) * np.exp((1j) * (t21278 + 6 * phi2))) * ((1 + t21277) ** (-0.1e1 / 0.2e1)) * ((1 - t21277) ** (-0.1e1 / 0.2e1))

        if Bindx == 842:
            t21320 = np.cos(phi)
            t21319 = t21320 ** 2
            t21322 = t21320 * t21319
            t21323 = t21319 ** 2
            t21324 = t21320 * t21323
            t21325 = t21322 ** 2
            t21326 = t21320 * t21325
            t21327 = t21323 ** 2
            t21328 = t21320 * t21327
            t21329 = t21324 ** 2
            t21331 = t21325 ** 2
            t21333 = t21326 ** 2
            t21335 = t21327 ** 2
            t21337 = t21328 ** 2
            t21341 = 1052 * t21322 - 4208 * t21324 - 33168 * t21326 + 287912 * t21328 + (-883832 * t21329 + 1410960 * t21331 - 1251280 * t21333 + 585820 * t21335 - 113220 * t21337 - 36) * t21320
            t21340 = -1166 * t21319 + 20919 * t21323 - 149992 * t21325 + 553606 * t21327 + 1376918 * t21331 - 862952 * t21333 + 170799 * t21335 + 81906 * t21337 + 11 + (-1154196 - 35853 * t21329) * t21329
            t21321 = 5 * phi1
            tfunc[..., c] = (-0.195e3 / 0.65536e5*1j) * np.sqrt(0.29667e5) * ((1 + t21320) ** (-0.1e1 / 0.2e1)) * ((1 - t21320) ** (-0.1e1 / 0.2e1)) * ((-t21340 + t21341) * np.exp((1j) * (t21321 - 12 * phi2)) + (t21340 + t21341) * np.exp((1j) * (t21321 + 12 * phi2)))

        if Bindx == 843:
            t21363 = np.cos(phi)
            t21362 = t21363 ** 2
            t21365 = t21363 * t21362
            t21366 = t21362 ** 2
            t21367 = t21363 * t21366
            t21368 = t21365 ** 2
            t21369 = t21363 * t21368
            t21370 = t21366 ** 2
            t21371 = t21363 * t21370
            t21372 = t21367 ** 2
            t21374 = t21368 ** 2
            t21376 = t21369 ** 2
            t21378 = t21370 ** 2
            t21380 = t21371 ** 2
            t21384 = 182 * t21365 - 1016 * t21367 + 2520 * t21369 - 3220 * t21371 + (1876 * t21372 + 168 * t21374 - 904 * t21376 + 490 * t21378 - 90 * t21380 - 6) * t21363
            t21383 = 80 * t21362 - 255 * t21366 - 16 * t21368 + 1582 * t21370 + 4130 * t21374 - 2480 * t21376 + 711 * t21378 - 32 * t21380 - 5 + (-3696 - 19 * t21372) * t21372
            t21364 = 5 * phi1
            tfunc[..., c] = (-0.585e3 / 0.262144e6*1j) * np.sqrt(0.565471e6) * ((1 + t21363) ** (-0.1e1 / 0.2e1)) * ((1 - t21363) ** (-0.1e1 / 0.2e1)) * ((-t21383 + t21384) * np.exp((1j) * (t21364 - 18 * phi2)) + (t21383 + t21384) * np.exp((1j) * (t21364 + 18 * phi2)))

        if Bindx == 844:
            t21405 = np.cos(phi)
            t21404 = t21405 ** 2
            t21407 = t21404 ** 2
            t21406 = t21405 * t21404
            t21409 = t21406 ** 2
            t21411 = t21407 ** 2
            t21408 = t21405 * t21407
            t21413 = t21408 ** 2
            t21415 = t21409 ** 2
            t21410 = t21405 * t21409
            t21417 = t21410 ** 2
            t21419 = t21411 ** 2
            t21412 = t21405 * t21411
            t21421 = t21412 ** 2
            t21424 = -1813812 * t21404 + 46155928 * t21407 - 455835744 * t21409 + 2277834156 * t21411 - 6459068616 * t21413 + 10855727064 * t21415 - 10710671616 * t21417 + 5730116322 * t21419 - 1282488228 * t21421 + 11778
            t21423 = 3578757 * t21406 - 46740876 * t21408 + 239354804 * t21410 - 469495026 * t21412 + (-162789354 * t21413 + 2177201796 * t21415 - 3603181212 * t21417 + 2538980073 * t21419 - 676868787 * t21421 - 72943) * t21405
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * ((-t21423 + t21424) * np.exp((6*1j) * (phi1 - phi2)) + (t21423 + t21424) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 845:
            t21445 = np.cos(phi)
            t21444 = t21445 ** 2
            t21447 = t21444 ** 2
            t21446 = t21445 * t21444
            t21449 = t21446 ** 2
            t21451 = t21447 ** 2
            t21448 = t21445 * t21447
            t21453 = t21448 ** 2
            t21455 = t21449 ** 2
            t21450 = t21445 * t21449
            t21457 = t21450 ** 2
            t21459 = t21451 ** 2
            t21452 = t21445 * t21451
            t21461 = t21452 ** 2
            t21464 = 1200 * t21444 - 18008 * t21447 + 93672 * t21449 - 193392 * t21451 + 39784 * t21453 + 485400 * t21455 - 821064 * t21457 + 548284 * t21459 - 135864 * t21461 - 12
            t21463 = -4611 * t21446 + 53076 * t21448 - 291700 * t21450 + 858594 * t21452 + (-1408962 * t21453 + 1253492 * t21455 - 507348 * t21457 + 11475 * t21459 + 35853 * t21461 + 131) * t21445
            tfunc[..., c] = -(0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.207669e6) * ((t21463 + t21464) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (-t21463 + t21464) * np.exp((6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 846:
            t21485 = np.cos(phi)
            t21484 = t21485 ** 2
            t21487 = t21484 ** 2
            t21486 = t21485 * t21484
            t21489 = t21486 ** 2
            t21491 = t21487 ** 2
            t21488 = t21485 * t21487
            t21493 = t21488 ** 2
            t21495 = t21489 ** 2
            t21490 = t21485 * t21489
            t21497 = t21490 ** 2
            t21499 = t21491 ** 2
            t21492 = t21485 * t21491
            t21501 = t21492 ** 2
            t21504 = 6 - 60 * t21484 - 56 * t21487 + 1152 * t21489 - 3132 * t21491 + 3784 * t21493 - 2040 * t21495 + 96 * t21497 + 358 * t21499 - 108 * t21501
            t21503 = -267 * t21486 + 996 * t21488 - 1340 * t21490 - 66 * t21492 + (2118 * t21493 - 2348 * t21495 + 1044 * t21497 - 135 * t21499 - 19 * t21501 + 17) * t21485
            tfunc[..., c] = -(0.117e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.3958297e7) * ((-t21503 + t21504) * np.exp((6*1j) * (phi1 - 3 * phi2)) + (t21503 + t21504) * np.exp((6*1j) * (phi1 + 3 * phi2)))

        if Bindx == 847:
            t21525 = np.cos(phi)
            t21524 = t21525 ** 2
            t21528 = t21524 ** 2
            t21532 = t21528 ** 2
            t21533 = t21525 * t21532
            t21542 = t21533 ** 2
            t21544 = -676868787 * t21525 * t21542 - 11047
            t21540 = t21532 ** 2
            t21527 = t21525 * t21524
            t21530 = t21527 ** 2
            t21531 = t21525 * t21530
            t21538 = t21531 ** 2
            t21536 = t21530 ** 2
            t21529 = t21525 * t21528
            t21534 = t21529 ** 2
            t21526 = 7 * phi1
            t21515 = t21525 * t21534
            t21513 = t21525 * t21536
            t21511 = t21525 * t21538
            t21509 = t21525 * t21540
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * np.sqrt((1 - t21525)) * ((3365087355 * t21509 - 7160330028 * t21511 + 8532779388 * t21513 - 6246465498 * t21515 + 1863855 * t21524 + 228899 * t21525 - 10128139 * t21527 - 48582268 * t21528 + 133129836 * t21529 + 468803468 * t21530 - 822469180 * t21531 - 2217224178 * t21532 + 2885036154 * t21533 + 5836744914 * t21534 - 9016987980 * t21536 + 8146310076 * t21538 - 3990284319 * t21540 + 819367479 * t21542 + t21544) * np.exp((1j) * (t21526 - 6 * phi2)) + (-372614823 * t21509 - 4557940788 * t21511 + 10362230004 * t21513 - 9958059846 * t21515 - 1383963 * t21524 + 250993 * t21525 - 13375957 * t21527 + 25078172 * t21528 + 206790276 * t21529 - 128883356 * t21530 - 1420156004 * t21531 - 25401006 * t21532 + 5076859326 * t21533 + 2125150566 * t21534 - 7187537364 * t21536 + 10748699316 * t21538 - 7727986497 * t21540 + 2173105053 * t21542 - t21544) * np.exp((1j) * (t21526 + 6 * phi2))) * ((1 + t21525) ** (-0.1e1 / 0.2e1))

        if Bindx == 848:
            t21566 = np.cos(phi)
            t21565 = t21566 ** 2
            t21569 = t21565 ** 2
            t21568 = t21566 * t21565
            t21571 = t21568 ** 2
            t21573 = t21569 ** 2
            t21570 = t21566 * t21569
            t21575 = t21570 ** 2
            t21577 = t21571 ** 2
            t21572 = t21566 * t21571
            t21579 = t21572 ** 2
            t21581 = t21573 ** 2
            t21574 = t21566 * t21573
            t21583 = t21574 ** 2
            t21587 = -94 * t21565 - 2727 * t21569 + 66520 * t21571 - 438334 * t21573 - 2243462 * t21577 + 2018264 * t21579 - 872355 * t21581 + 82722 * t21583 + 1 + (1353612 + 35853 * t21575) * t21575
            t21586 = 9428 * t21568 - 89456 * t21570 + 388272 * t21572 - 852904 * t21574 + (864760 * t21575 - 48816 * t21577 - 711760 * t21579 + 599284 * t21581 - 158508 * t21583 - 300) * t21566
            t21567 = 7 * phi1
            tfunc[..., c] = (-0.39e2 / 0.65536e5*1j) * np.sqrt(0.207669e6) * ((1 + t21566) ** (-0.1e1 / 0.2e1)) * ((1 - t21566) ** (-0.1e1 / 0.2e1)) * ((t21586 + t21587) * np.exp((1j) * (t21567 - 12 * phi2)) + (t21586 - t21587) * np.exp((1j) * (t21567 + 12 * phi2)))

        if Bindx == 849:
            t21609 = np.cos(phi)
            t21608 = t21609 ** 2
            t21611 = t21609 * t21608
            t21612 = t21608 ** 2
            t21613 = t21609 * t21612
            t21614 = t21611 ** 2
            t21615 = t21609 * t21614
            t21616 = t21612 ** 2
            t21617 = t21609 * t21616
            t21618 = t21613 ** 2
            t21620 = t21614 ** 2
            t21622 = t21615 ** 2
            t21624 = t21616 ** 2
            t21626 = t21617 ** 2
            t21630 = 334 * t21611 - 856 * t21613 - 72 * t21615 + 3484 * t21617 + (-5980 * t21618 + 4296 * t21620 - 1064 * t21622 - 238 * t21624 + 126 * t21626 - 30) * t21609
            t21629 = -28 * t21608 - 399 * t21612 + 2240 * t21614 - 4394 * t21616 + 338 * t21620 - 2336 * t21622 + 1395 * t21624 - 236 * t21626 + 7 + (3432 - 19 * t21618) * t21618
            t21610 = 7 * phi1
            tfunc[..., c] = (0.117e3 / 0.262144e6*1j) * np.sqrt(0.3958297e7) * ((t21629 + t21630) * np.exp((1j) * (t21610 - 18 * phi2)) + (-t21629 + t21630) * np.exp((1j) * (t21610 + 18 * phi2))) * ((1 + t21609) ** (-0.1e1 / 0.2e1)) * ((1 - t21609) ** (-0.1e1 / 0.2e1))

        if Bindx == 850:
            t21651 = np.cos(phi)
            t21650 = t21651 ** 2
            t21654 = t21650 ** 2
            t21653 = t21651 * t21650
            t21656 = t21653 ** 2
            t21658 = t21654 ** 2
            t21655 = t21651 * t21654
            t21660 = t21655 ** 2
            t21662 = t21656 ** 2
            t21657 = t21651 * t21656
            t21664 = t21657 ** 2
            t21666 = t21658 ** 2
            t21659 = t21651 * t21658
            t21668 = t21659 ** 2
            t21671 = 0.823095e6 / 0.2048e4 * t21650 - 0.40189149e8 / 0.4096e4 * t21654 + 0.398542599e9 / 0.4096e4 * t21656 - 0.1028299077e10 / 0.2048e4 * t21658 + 0.6089210127e10 / 0.4096e4 * t21660 - 0.10687118715e11 / 0.4096e4 * t21662 + 0.10957018293e11 / 0.4096e4 * t21664 - 0.12103723359e11 / 0.8192e4 * t21666 + 0.1389362247e10 / 0.4096e4 * t21668 - 0.23517e5 / 0.8192e4
            t21670 = 0.228948993e9 / 0.65536e5 * t21653 - 0.741855933e9 / 0.16384e5 * t21655 + 0.4196608065e10 / 0.16384e5 * t21657 - 0.24177552399e11 / 0.32768e5 * t21659 + (0.36298962063e11 / 0.32768e5 * t21660 - 0.11904927489e11 / 0.16384e5 * t21662 - 0.1396514691e10 / 0.16384e5 * t21664 + 0.23719292415e11 / 0.65536e5 * t21666 - 0.8799294231e10 / 0.65536e5 * t21668 - 0.5006313e7 / 0.65536e5) * t21651
            t21652 = 4 * phi1
            tfunc[..., c] = (t21670 + t21671) * np.exp((2*1j) * (t21652 - 3 * phi2)) + (-t21670 + t21671) * np.exp((2*1j) * (t21652 + 3 * phi2))

        if Bindx == 851:
            t21692 = np.cos(phi)
            t21691 = t21692 ** 2
            t21695 = t21691 ** 2
            t21694 = t21692 * t21691
            t21697 = t21694 ** 2
            t21699 = t21695 ** 2
            t21696 = t21692 * t21695
            t21701 = t21696 ** 2
            t21703 = t21697 ** 2
            t21698 = t21692 * t21697
            t21705 = t21698 ** 2
            t21707 = t21699 ** 2
            t21700 = t21692 * t21699
            t21709 = t21700 ** 2
            t21712 = 688 * t21691 - 11336 * t21695 + 78880 * t21697 - 269672 * t21699 + 469456 * t21701 - 368056 * t21703 + 14912 * t21705 + 145520 * t21707 - 60384 * t21709 - 8
            t21711 = 2719 * t21694 - 16316 * t21696 + 19396 * t21698 + 111098 * t21700 + (-423670 * t21701 + 594212 * t21703 - 367132 * t21705 + 67847 * t21707 + 11951 * t21709 - 105) * t21692
            t21693 = 2 * phi1
            tfunc[..., c] = -(0.39e2 / 0.32768e5) * ((t21711 + t21712) * np.exp((4*1j) * (t21693 - 3 * phi2)) + (-t21711 + t21712) * np.exp((4*1j) * (t21693 + 3 * phi2))) * np.sqrt(0.207669e6)

        if Bindx == 852:
            t21733 = np.cos(phi)
            t21732 = t21733 ** 2
            t21736 = t21732 ** 2
            t21735 = t21733 * t21732
            t21738 = t21735 ** 2
            t21740 = t21736 ** 2
            t21737 = t21733 * t21736
            t21742 = t21737 ** 2
            t21744 = t21738 ** 2
            t21739 = t21733 * t21738
            t21746 = t21739 ** 2
            t21748 = t21740 ** 2
            t21741 = t21733 * t21740
            t21750 = t21741 ** 2
            t21753 = -8 - 32 * t21732 + 784 * t21736 - 2320 * t21738 + 1664 * t21740 + 2288 * t21742 - 4368 * t21744 + 2256 * t21746 - 120 * t21748 - 144 * t21750
            t21752 = 309 * t21735 + 12 * t21737 - 2652 * t21739 + 5434 * t21741 + (-3770 * t21742 - 164 * t21744 + 1268 * t21746 - 373 * t21748 - 19 * t21750 - 45) * t21733
            t21734 = 4 * phi1
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * ((-t21752 + t21753) * np.exp((2*1j) * (t21734 - 9 * phi2)) + (t21752 + t21753) * np.exp((2*1j) * (t21734 + 9 * phi2))) * np.sqrt(0.3958297e7)

        if Bindx == 853:
            t21773 = np.cos(phi)
            t21772 = t21773 ** 2
            t21776 = t21772 ** 2
            t21780 = t21776 ** 2
            t21781 = t21773 * t21780
            t21791 = -10743949 * t21781 ** 2 + 681
            t21788 = t21780 ** 2
            t21775 = t21773 * t21772
            t21778 = t21775 ** 2
            t21779 = t21773 * t21778
            t21786 = t21779 ** 2
            t21784 = t21778 ** 2
            t21777 = t21773 * t21776
            t21782 = t21777 ** 2
            t21774 = 3 * phi1
            t21763 = t21773 * t21782
            t21761 = t21773 * t21784
            t21759 = t21773 * t21786
            t21757 = t21773 * t21788
            tfunc[..., c] = (-0.117e3 / 0.131072e6*1j) * ((1 - t21773) ** (0.3e1 / 0.2e1)) * np.sqrt(0.77e2) * ((1 + t21773) ** (-0.1e1 / 0.2e1)) * ((-9047536 * t21757 + 42670136 * t21759 - 82643272 * t21761 + 84009752 * t21763 + 92541 * t21772 + 984 * t21773 + 68616 * t21775 - 1903420 * t21776 - 1890392 * t21777 + 14424428 * t21778 + 14114472 * t21779 - 54554118 * t21780 - 47282760 * t21781 + 118884862 * t21782 - 157637852 * t21784 + 126237580 * t21786 - 56287289 * t21788 - t21791) * np.exp((3*1j) * (t21774 - 2 * phi2)) + (-52023332 * t21757 + 66511616 * t21759 + 69575408 * t21761 - 170939456 * t21763 - 83157 * t21772 + 3708 * t21773 - 285504 * t21775 + 1460260 * t21776 + 5191088 * t21777 - 7379876 * t21778 - 36575616 * t21779 + 2587278 * t21780 + 117690120 * t21781 + 73896698 * t21782 - 209003116 * t21784 + 214267660 * t21786 - 65854447 * t21788 + t21791) * np.exp((3*1j) * (t21774 + 2 * phi2)))

        if Bindx == 854:
            t21813 = np.cos(phi)
            t21812 = t21813 ** 2
            t21815 = t21813 * t21812
            t21816 = t21812 ** 2
            t21817 = t21813 * t21816
            t21818 = t21815 ** 2
            t21819 = t21813 * t21818
            t21820 = t21816 ** 2
            t21821 = t21813 * t21820
            t21822 = t21817 ** 2
            t21824 = t21818 ** 2
            t21826 = t21819 ** 2
            t21828 = t21820 ** 2
            t21830 = t21821 ** 2
            t21834 = -8588 * t21815 + 232144 * t21817 - 1766864 * t21819 + 6027736 * t21821 + (-10439624 * t21822 + 8811536 * t21824 - 2166736 * t21826 - 1436908 * t21828 + 747252 * t21830 + 52) * t21813
            t21833 = 15678 * t21812 - 204017 * t21816 + 1033384 * t21818 - 2216786 * t21820 + 4579094 * t21824 - 8299096 * t21826 + 5469563 * t21828 - 1108162 * t21830 - 201 + (862004 - 131461 * t21822) * t21822
            t21814 = 3 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5*1j) * np.sqrt(0.2697e4) * ((t21833 + t21834) * np.exp((3*1j) * (t21814 - 4 * phi2)) + (-t21833 + t21834) * np.exp((3*1j) * (t21814 + 4 * phi2))) * ((1 + t21813) ** (-0.1e1 / 0.2e1)) * ((1 - t21813) ** (-0.1e1 / 0.2e1))

        if Bindx == 855:
            t21856 = np.cos(phi)
            t21855 = t21856 ** 2
            t21857 = t21856 * t21855
            t21858 = t21855 ** 2
            t21859 = t21856 * t21858
            t21860 = t21857 ** 2
            t21861 = t21856 * t21860
            t21862 = t21858 ** 2
            t21863 = t21856 * t21862
            t21864 = t21859 ** 2
            t21866 = t21860 ** 2
            t21868 = t21861 ** 2
            t21870 = t21862 ** 2
            t21872 = t21863 ** 2
            t21876 = -238 * t21857 - 1000 * t21859 + 5128 * t21861 - 6812 * t21863 + (988 * t21864 + 4728 * t21866 - 3480 * t21868 + 462 * t21870 + 162 * t21872 + 62) * t21856
            t21875 = -108 * t21855 + 1137 * t21858 - 2112 * t21860 - 1482 * t21862 - 7982 * t21866 + 1888 * t21868 + 1187 * t21870 - 508 * t21872 - 9 + (8008 - 19 * t21864) * t21864
            tfunc[..., c] = (0.39e2 / 0.262144e6*1j) * np.sqrt(0.6220181e7) * ((t21875 + t21876) * np.exp((9*1j) * (phi1 - 2 * phi2)) + (-t21875 + t21876) * np.exp((9*1j) * (phi1 + 2 * phi2))) * ((1 + t21856) ** (-0.1e1 / 0.2e1)) * ((1 - t21856) ** (-0.1e1 / 0.2e1))

        if Bindx == 856:
            t21897 = np.cos(phi)
            t21896 = t21897 ** 2
            t21900 = t21896 ** 2
            t21899 = t21897 * t21896
            t21902 = t21899 ** 2
            t21904 = t21900 ** 2
            t21901 = t21897 * t21900
            t21906 = t21901 ** 2
            t21908 = t21902 ** 2
            t21903 = t21897 * t21902
            t21910 = t21903 ** 2
            t21912 = t21904 ** 2
            t21905 = t21897 * t21904
            t21914 = t21905 ** 2
            t21917 = 732 * t21896 - 8136 * t21900 - 37920 * t21902 + 732540 * t21904 - 3343848 * t21906 + 7265656 * t21908 - 8366528 * t21910 + 4927450 * t21912 - 1169940 * t21914 - 6
            t21916 = 26135 * t21899 - 311908 * t21901 + 1692956 * t21903 - 4885958 * t21905 + (7829650 * t21906 - 6611060 * t21908 + 2135404 * t21910 + 495907 * t21912 - 370481 * t21914 - 645) * t21897
            t21898 = 5 * phi1
            tfunc[..., c] = -(0.117e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.11165e5) * ((-t21916 + t21917) * np.exp((2*1j) * (t21898 - 3 * phi2)) + (t21916 + t21917) * np.exp((2*1j) * (t21898 + 3 * phi2)))

        if Bindx == 857:
            t21938 = np.cos(phi)
            t21937 = t21938 ** 2
            t21941 = t21937 ** 2
            t21940 = t21938 * t21937
            t21943 = t21940 ** 2
            t21945 = t21941 ** 2
            t21942 = t21938 * t21941
            t21947 = t21942 ** 2
            t21949 = t21943 ** 2
            t21944 = t21938 * t21943
            t21951 = t21944 ** 2
            t21953 = t21945 ** 2
            t21946 = t21938 * t21945
            t21955 = t21946 ** 2
            t21958 = -16048 * t21937 + 118712 * t21941 - 616 * t21943 - 2235376 * t21945 + 7611032 * t21947 - 10382840 * t21949 + 5469640 * t21951 + 265540 * t21953 - 830280 * t21955 + 236
            t21957 = -76373 * t21940 + 699820 * t21942 - 2780492 * t21944 + 4871438 * t21946 + (-2161198 * t21947 - 4121908 * t21949 + 5348948 * t21951 - 1651771 * t21953 - 131461 * t21955 + 2997) * t21938
            t21939 = 5 * phi1
            tfunc[..., c] = -(0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.465e3) * ((-t21957 + t21958) * np.exp((2*1j) * (t21939 - 6 * phi2)) + (t21957 + t21958) * np.exp((2*1j) * (t21939 + 6 * phi2)))

        if Bindx == 858:
            t21979 = np.cos(phi)
            t21978 = t21979 ** 2
            t21982 = t21978 ** 2
            t21981 = t21979 * t21978
            t21984 = t21981 ** 2
            t21986 = t21982 ** 2
            t21983 = t21979 * t21982
            t21988 = t21983 ** 2
            t21990 = t21984 ** 2
            t21985 = t21979 * t21984
            t21992 = t21985 ** 2
            t21994 = t21986 ** 2
            t21987 = t21979 * t21986
            t21996 = t21987 ** 2
            t21999 = 10 + 220 * t21978 - 1160 * t21982 - 448 * t21984 + 6812 * t21986 - 8008 * t21988 + 312 * t21990 + 3552 * t21992 - 1110 * t21994 - 180 * t21996
            t21998 = 21 * t21981 - 2364 * t21983 + 4836 * t21985 + 286 * t21987 + (-7514 * t21988 + 5236 * t21990 + 116 * t21992 - 679 * t21994 - 19 * t21996 + 81) * t21979
            t21980 = 5 * phi1
            tfunc[..., c] = -(0.39e2 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.1072445e7) * ((-t21998 + t21999) * np.exp((2*1j) * (t21980 - 9 * phi2)) + (t21998 + t21999) * np.exp((2*1j) * (t21980 + 9 * phi2)))

        if Bindx == 859:
            t22018 = np.cos(phi)
            t22017 = t22018 ** 2
            t22021 = t22017 ** 2
            t22025 = t22021 ** 2
            t22033 = t22025 ** 2
            t22035 = -1111443 * t22018 * t22033 - 203
            t22020 = t22018 * t22017
            t22023 = t22020 ** 2
            t22024 = t22018 * t22023
            t22031 = t22024 ** 2
            t22029 = t22023 ** 2
            t22022 = t22018 * t22021
            t22027 = t22022 ** 2
            t22019 = 11 * phi1
            t22010 = t22018 * t22025
            t22008 = t22018 * t22027
            t22006 = t22018 * t22029
            t22004 = t22018 * t22031
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * ((1 - t22018) ** (0.5e1 / 0.2e1)) * np.sqrt(0.6699e4) * ((6077364 * t22004 - 14077224 * t22006 + 17841492 * t22008 - 13272822 * t22010 + 16244 * t22017 - 2367 * t22018 + 116796 * t22020 - 143304 * t22021 - 1295760 * t22022 + 165652 * t22023 + 5723964 * t22024 + 949178 * t22025 - 3174276 * t22027 + 3985360 * t22029 - 2325124 * t22031 + 526473 * t22033 + t22035) * np.exp((1j) * (t22019 - 6 * phi2)) + (17087448 * t22004 - 15904860 * t22006 - 14029112 * t22008 + 20156930 * t22010 - 26792 * t22017 - 1149 * t22018 - 15560 * t22020 + 475140 * t22021 + 913604 * t22022 - 2206392 * t22023 - 7401816 * t22024 - 242670 * t22025 + 20029224 * t22027 - 36228956 * t22029 + 12922040 * t22031 + 7195131 * t22033 - t22035) * np.exp((1j) * (t22019 + 6 * phi2))) * ((1 + t22018) ** (-0.1e1 / 0.2e1))

        if Bindx == 860:
            t22057 = np.cos(phi)
            t22056 = t22057 ** 2
            t22059 = t22057 * t22056
            t22060 = t22056 ** 2
            t22061 = t22057 * t22060
            t22062 = t22059 ** 2
            t22063 = t22057 * t22062
            t22064 = t22060 ** 2
            t22065 = t22057 * t22064
            t22066 = t22061 ** 2
            t22068 = t22062 ** 2
            t22070 = t22063 ** 2
            t22072 = t22064 ** 2
            t22074 = t22065 ** 2
            t22078 = 420980 * t22059 - 2563088 * t22061 + 5160144 * t22063 + 4394104 * t22065 + (-32886568 * t22066 + 48934512 * t22068 - 27272432 * t22070 + 1094324 * t22072 + 2739924 * t22074 - 21900) * t22057
            t22077 = 3190 * t22056 - 513315 * t22060 + 5318984 * t22062 - 20775326 * t22064 - 24390158 * t22068 - 8988088 * t22070 + 19337109 * t22072 - 6342666 * t22074 - 55 + (36744708 - 394383 * t22066) * t22066
            t22058 = 11 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5*1j) * np.sqrt(0.31e2) * ((t22077 + t22078) * np.exp((1j) * (t22058 - 12 * phi2)) + (-t22077 + t22078) * np.exp((1j) * (t22058 + 12 * phi2))) * ((1 + t22057) ** (-0.1e1 / 0.2e1)) * ((1 - t22057) ** (-0.1e1 / 0.2e1))

        if Bindx == 861:
            t22100 = np.cos(phi)
            t22099 = t22100 ** 2
            t22102 = t22100 * t22099
            t22103 = t22099 ** 2
            t22104 = t22100 * t22103
            t22105 = t22102 ** 2
            t22106 = t22100 * t22105
            t22107 = t22103 ** 2
            t22108 = t22100 * t22107
            t22109 = t22104 ** 2
            t22111 = t22105 ** 2
            t22113 = t22106 ** 2
            t22115 = t22107 ** 2
            t22117 = t22108 ** 2
            t22121 = 362 * t22102 - 3656 * t22104 + 3816 * t22106 + 7956 * t22108 + (-15444 * t22109 + 5016 * t22111 + 3784 * t22113 - 1738 * t22115 - 198 * t22117 + 102) * t22100
            t22120 = 352 * t22099 - 1023 * t22103 - 3344 * t22105 + 11726 * t22107 - 7774 * t22111 + 8656 * t22113 - 873 * t22115 - 848 * t22117 + 11 + (-6864 - 19 * t22109) * t22109
            t22101 = 11 * phi1
            tfunc[..., c] = (-0.39e2 / 0.262144e6*1j) * np.sqrt(0.643467e6) * ((1 + t22100) ** (-0.1e1 / 0.2e1)) * ((1 - t22100) ** (-0.1e1 / 0.2e1)) * ((-t22120 + t22121) * np.exp((1j) * (t22101 - 18 * phi2)) + (t22120 + t22121) * np.exp((1j) * (t22101 + 18 * phi2)))

        if Bindx == 862:
            t22142 = np.cos(phi)
            t22141 = t22142 ** 2
            t22145 = t22141 ** 2
            t22144 = t22142 * t22141
            t22147 = t22144 ** 2
            t22149 = t22145 ** 2
            t22146 = t22142 * t22145
            t22151 = t22146 ** 2
            t22153 = t22147 ** 2
            t22148 = t22142 * t22147
            t22155 = t22148 ** 2
            t22157 = t22149 ** 2
            t22150 = t22142 * t22149
            t22159 = t22150 ** 2
            t22162 = -1200 * t22141 + 18008 * t22145 - 93672 * t22147 + 193392 * t22149 - 39784 * t22151 - 485400 * t22153 + 821064 * t22155 - 548284 * t22157 + 135864 * t22159 + 12
            t22161 = -4611 * t22144 + 53076 * t22146 - 291700 * t22148 + 858594 * t22150 + (-1408962 * t22151 + 1253492 * t22153 - 507348 * t22155 + 11475 * t22157 + 35853 * t22159 + 131) * t22142
            t22143 = 2 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5) * np.sqrt(0.2e1) * np.sqrt(0.207669e6) * ((-t22161 + t22162) * np.exp((6*1j) * (t22143 - phi2)) + (t22161 + t22162) * np.exp((6*1j) * (t22143 + phi2)))

        if Bindx == 863:
            t22183 = np.cos(phi)
            t22182 = t22183 ** 2
            t22184 = t22183 * t22182
            t22185 = t22182 ** 2
            t22186 = t22183 * t22185
            t22187 = t22184 ** 2
            t22188 = t22183 * t22187
            t22189 = t22185 ** 2
            t22190 = t22183 * t22189
            t22191 = t22186 ** 2
            t22193 = t22187 ** 2
            t22195 = t22188 ** 2
            t22197 = t22189 ** 2
            t22199 = t22190 ** 2
            t22202 = 346665 * t22184 - 22044 * t22186 - 9067916 * t22188 + 33066462 * t22190 + (-43662450 * t22191 + 14010164 * t22193 + 14022756 * t22195 - 8275311 * t22197 - 394383 * t22199 - 32135) * t22183
            t22201 = -129720 * t22182 + 1768580 * t22185 - 8482320 * t22187 + 14512212 * t22189 + 2966392 * t22191 - 35856132 * t22193 + 34878624 * t22195 - 6679640 * t22197 - 2989008 * t22199 + 2820
            tfunc[..., c] = -(0.39e2 / 0.32768e5) * np.sqrt(0.2e1) * ((t22201 - t22202) * np.exp((12*1j) * (phi1 - phi2)) + (t22201 + t22202) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 864:
            t22223 = np.cos(phi)
            t22222 = t22223 ** 2
            t22226 = t22222 ** 2
            t22225 = t22223 * t22222
            t22228 = t22225 ** 2
            t22230 = t22226 ** 2
            t22227 = t22223 * t22226
            t22232 = t22227 ** 2
            t22234 = t22228 ** 2
            t22229 = t22223 * t22228
            t22236 = t22229 ** 2
            t22238 = t22230 ** 2
            t22231 = t22223 * t22230
            t22240 = t22231 ** 2
            t22243 = 12 + 528 * t22222 + 104 * t22226 - 7560 * t22228 + 7488 * t22230 + 10296 * t22232 - 13416 * t22234 - 408 * t22236 + 2740 * t22238 + 216 * t22240
            t22242 = -1011 * t22225 + 3684 * t22227 + 4316 * t22229 - 16302 * t22231 + (5070 * t22232 + 8932 * t22234 - 3492 * t22236 - 1053 * t22238 - 19 * t22240 - 125) * t22223
            t22224 = 2 * phi1
            tfunc[..., c] = (0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.20757e5) * ((t22242 + t22243) * np.exp((6*1j) * (t22224 - 3 * phi2)) + (-t22242 + t22243) * np.exp((6*1j) * (t22224 + 3 * phi2)))

        if Bindx == 865:
            t22261 = np.cos(phi)
            t22260 = t22261 ** 2
            t22264 = t22260 ** 2
            t22268 = t22264 ** 2
            t22277 = -250971 * t22268 ** 2 + 59
            t22263 = t22261 * t22260
            t22266 = t22263 ** 2
            t22267 = t22261 * t22266
            t22274 = t22267 ** 2
            t22272 = t22266 ** 2
            t22265 = t22261 * t22264
            t22270 = t22265 ** 2
            t22262 = 13 * phi1
            t22253 = t22261 * t22268
            t22251 = t22261 * t22270
            t22249 = t22261 * t22272
            t22247 = t22261 * t22274
            tfunc[..., c] = (0.39e2 / 0.262144e6*1j) * ((1 - t22261) ** (0.7e1 / 0.2e1)) * np.sqrt(0.29667e5) * ((26418 * t22247 - 51646 * t22249 - 121350 * t22251 + 476778 * t22253 + 7566 * t22260 + 3278 * t22261 - 76866 * t22263 - 223974 * t22264 + 328710 * t22265 + 1235318 * t22266 - 585322 * t22267 - 3105888 * t22268 + 4281738 * t22270 - 3363994 * t22272 + 1420146 * t22274 + t22277) * np.exp((1j) * (t22262 - 6 * phi2)) + (2034186 * t22247 + 11518010 * t22249 - 4413102 * t22251 - 7810910 * t22253 + 16770 * t22260 + 2806 * t22261 - 37690 * t22263 - 355930 * t22264 - 396882 * t22265 + 1488858 * t22266 + 4215390 * t22267 + 1588320 * t22268 - 12716762 * t22270 + 8017370 * t22272 + 6822270 * t22274 - t22277) * np.exp((1j) * (t22262 + 6 * phi2))) * ((1 + t22261) ** (-0.1e1 / 0.2e1))

        if Bindx == 866:
            t22298 = np.cos(phi)
            t22297 = t22298 ** 2
            t22301 = t22297 ** 2
            t22305 = t22301 ** 2
            t22306 = t22298 * t22305
            t22315 = t22306 ** 2
            t22317 = -394383 * t22298 * t22315 - 9425
            t22313 = t22305 ** 2
            t22300 = t22298 * t22297
            t22303 = t22300 ** 2
            t22304 = t22298 * t22303
            t22311 = t22304 ** 2
            t22309 = t22303 ** 2
            t22302 = t22298 * t22301
            t22307 = t22302 ** 2
            t22299 = 13 * phi1
            t22288 = t22298 * t22307
            t22286 = t22298 * t22309
            t22284 = t22298 * t22311
            t22282 = t22298 * t22313
            tfunc[..., c] = (-0.39e2 / 0.131072e6*1j) * np.sqrt((1 - t22298)) * np.sqrt(0.7e1) * ((-7120773 * t22282 + 17852516 * t22284 + 325052 * t22286 - 35184162 * t22288 + 288165 * t22297 - 32285 * t22298 + 57145 * t22300 - 2544740 * t22301 + 2666796 * t22302 + 8117956 * t22303 - 16741868 * t22304 - 5583006 * t22305 + 38571962 * t22306 - 20954362 * t22307 + 46064876 * t22309 - 31419564 * t22311 + 3196391 * t22313 + 2843709 * t22315 + t22317) * np.exp((1j) * (t22299 - 12 * phi2)) + (13596957 * t22282 + 9257996 * t22284 - 71758700 * t22286 + 55230162 * t22288 - 333885 * t22297 - 13435 * t22298 - 564905 * t22300 + 2036980 * t22301 + 7248516 * t22302 + 1797356 * t22303 - 23062468 * t22304 - 34221330 * t22305 + 9933638 * t22306 + 69459962 * t22307 - 26018876 * t22309 - 40014084 * t22311 + 23914121 * t22313 + 3632475 * t22315 - t22317) * np.exp((1j) * (t22299 + 12 * phi2))) * ((1 + t22298) ** (-0.1e1 / 0.2e1))

        if Bindx == 867:
            t22339 = np.cos(phi)
            t22338 = t22339 ** 2
            t22341 = t22339 * t22338
            t22342 = t22338 ** 2
            t22343 = t22339 * t22342
            t22344 = t22341 ** 2
            t22345 = t22339 * t22344
            t22346 = t22342 ** 2
            t22347 = t22339 * t22346
            t22348 = t22343 ** 2
            t22350 = t22344 ** 2
            t22352 = t22345 ** 2
            t22354 = t22346 ** 2
            t22356 = t22347 ** 2
            t22360 = 1786 * t22341 - 3112 * t22343 - 13176 * t22345 + 22932 * t22347 + (7020 * t22348 - 22152 * t22350 + 2600 * t22352 + 3718 * t22354 + 234 * t22356 + 150) * t22339
            t22359 = -728 * t22338 - 1599 * t22342 + 11440 * t22344 - 1378 * t22346 + 17186 * t22350 + 9808 * t22352 - 5985 * t22354 - 1256 * t22356 - 13 + (-27456 - 19 * t22348) * t22348
            t22340 = 13 * phi1
            tfunc[..., c] = (0.39e2 / 0.524288e6*1j) * np.sqrt(0.145299e6) * ((t22359 + t22360) * np.exp((1j) * (t22340 - 18 * phi2)) + (-t22359 + t22360) * np.exp((1j) * (t22340 + 18 * phi2))) * ((1 + t22339) ** (-0.1e1 / 0.2e1)) * ((1 - t22339) ** (-0.1e1 / 0.2e1))

        if Bindx == 868:
            t22381 = np.cos(phi)
            t22380 = t22381 ** 2
            t22384 = t22380 ** 2
            t22383 = t22381 * t22380
            t22386 = t22383 ** 2
            t22388 = t22384 ** 2
            t22385 = t22381 * t22384
            t22390 = t22385 ** 2
            t22392 = t22386 ** 2
            t22387 = t22381 * t22386
            t22394 = t22387 ** 2
            t22396 = t22388 ** 2
            t22389 = t22381 * t22388
            t22398 = t22389 ** 2
            t22401 = -41884 * t22380 + 526856 * t22384 - 2668032 * t22386 + 6413028 * t22388 - 6965112 * t22390 + 948808 * t22392 + 4922848 * t22394 - 4246634 * t22396 + 1109556 * t22398 + 566
            t22400 = -19411 * t22383 - 198268 * t22385 + 2399972 * t22387 - 8855858 * t22389 + (15736342 * t22390 - 14481548 * t22392 + 6240564 * t22394 - 572271 * t22396 - 250971 * t22398 + 1449) * t22381
            t22382 = 7 * phi1
            tfunc[..., c] = (0.39e2 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.2697e4) * ((t22400 + t22401) * np.exp((2*1j) * (t22382 - 3 * phi2)) + (-t22400 + t22401) * np.exp((2*1j) * (t22382 + 3 * phi2)))

        if Bindx == 869:
            t22422 = np.cos(phi)
            t22421 = t22422 ** 2
            t22425 = t22421 ** 2
            t22424 = t22422 * t22421
            t22427 = t22424 ** 2
            t22429 = t22425 ** 2
            t22426 = t22422 * t22425
            t22431 = t22426 ** 2
            t22433 = t22427 ** 2
            t22428 = t22422 * t22427
            t22435 = t22428 ** 2
            t22437 = t22429 ** 2
            t22430 = t22422 * t22429
            t22439 = t22430 ** 2
            t22442 = -41200 * t22421 + 75560 * t22425 + 1010424 * t22427 - 4402944 * t22429 + 5446584 * t22431 + 330200 * t22433 - 4403224 * t22435 + 1665524 * t22437 + 317016 * t22439 + 2060
            t22441 = 137875 * t22424 - 911012 * t22426 + 1595620 * t22428 + 1572142 * t22430 + (-7005518 * t22431 + 5582428 * t22433 + 176868 * t22435 - 1108995 * t22437 - 35853 * t22439 - 3555) * t22422
            t22423 = 7 * phi1
            tfunc[..., c] = (0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.77e2) * ((t22441 + t22442) * np.exp((2*1j) * (t22423 - 6 * phi2)) + (-t22441 + t22442) * np.exp((2*1j) * (t22423 + 6 * phi2)))

        if Bindx == 870:
            t22463 = np.cos(phi)
            t22462 = t22463 ** 2
            t22466 = t22462 ** 2
            t22465 = t22463 * t22462
            t22468 = t22465 ** 2
            t22470 = t22466 ** 2
            t22467 = t22463 * t22466
            t22472 = t22467 ** 2
            t22474 = t22468 ** 2
            t22469 = t22463 * t22468
            t22476 = t22469 ** 2
            t22478 = t22470 ** 2
            t22471 = t22463 * t22470
            t22480 = t22471 ** 2
            t22483 = 14 + 980 * t22462 + 5096 * t22466 - 9184 * t22468 - 24076 * t22470 + 26312 * t22472 + 19240 * t22474 - 12992 * t22476 - 5138 * t22478 - 252 * t22480
            t22482 = 3013 * t22465 + 2452 * t22467 - 23660 * t22469 - 2002 * t22471 + (35126 * t22472 - 2716 * t22474 - 10876 * t22476 - 1495 * t22478 - 19 * t22480 + 177) * t22463
            t22464 = 7 * phi1
            tfunc[..., c] = -(0.39e2 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.13209e5) * ((-t22482 + t22483) * np.exp((2*1j) * (t22464 - 9 * phi2)) + (t22482 + t22483) * np.exp((2*1j) * (t22464 + 9 * phi2)))

        if Bindx == 871:
            t22500 = np.cos(phi)
            t22499 = t22500 ** 2
            t22502 = t22500 * t22499
            t22505 = t22502 ** 2
            t22506 = t22500 * t22505
            t22513 = t22506 ** 2
            t22515 = -14763 * t22500 * t22513 + 57
            t22511 = t22505 ** 2
            t22503 = t22499 ** 2
            t22504 = t22500 * t22503
            t22509 = t22504 ** 2
            t22507 = t22503 ** 2
            t22501 = 5 * phi1
            t22492 = t22500 * t22507
            t22490 = t22500 * t22509
            t22488 = t22500 * t22511
            tfunc[..., c] = (0.39e2 / 0.262144e6*1j) * ((1 - t22500) ** (0.9e1 / 0.2e1)) * np.sqrt(0.229245e6) * ((1 + t22500) ** (-0.1e1 / 0.2e1)) * ((3885 * t22513 - 85785 * t22488 - 25655 * t22511 + 206975 * t22490 + 70057 * t22509 - 264805 * t22492 - 101435 * t22507 + 188465 * t22506 + 82295 * t22505 - 69563 * t22504 - 35605 * t22503 + 9445 * t22502 + 6515 * t22499 + 505 * t22500 - t22515) * np.exp((3*1j) * (t22501 - 2 * phi2)) + (-143745 * t22513 - 613515 * t22488 - 1483265 * t22511 - 2157175 * t22490 - 1743269 * t22509 - 331815 * t22492 + 815595 * t22507 + 858495 * t22506 + 294525 * t22505 - 64449 * t22504 - 84195 * t22503 - 20765 * t22502 + 1385 * t22499 + 1075 * t22500 + t22515) * np.exp((3*1j) * (t22501 + 2 * phi2)))

        if Bindx == 872:
            t22535 = np.cos(phi)
            t22534 = t22535 ** 2
            t22538 = t22534 ** 2
            t22542 = t22538 ** 2
            t22543 = t22535 * t22542
            t22553 = -2109 * t22543 ** 2 - 249
            t22550 = t22542 ** 2
            t22537 = t22535 * t22534
            t22540 = t22537 ** 2
            t22541 = t22535 * t22540
            t22548 = t22541 ** 2
            t22546 = t22540 ** 2
            t22539 = t22535 * t22538
            t22544 = t22539 ** 2
            t22536 = 5 * phi1
            t22525 = t22535 * t22544
            t22523 = t22535 * t22546
            t22521 = t22535 * t22548
            t22519 = t22535 * t22550
            tfunc[..., c] = (0.39e2 / 0.131072e6*1j) * ((1 - t22535) ** (0.3e1 / 0.2e1)) * np.sqrt(0.6545e4) * ((15762 * t22519 - 42249 * t22550 + 28360 * t22521 + 87716 * t22548 - 191408 * t22523 + 54212 * t22546 + 229192 * t22525 - 248974 * t22544 - 41052 * t22543 + 212058 * t22542 - 86760 * t22541 - 61852 * t22540 + 57088 * t22539 - 1564 * t22538 - 11816 * t22537 + 3011 * t22534 + 634 * t22535 + t22553) * np.exp((3*1j) * (t22536 - 4 * phi2)) + (24198 * t22519 + 122169 * t22550 + 348760 * t22521 + 586604 * t22548 + 485968 * t22523 - 139412 * t22546 - 835432 * t22525 - 878306 * t22544 - 235092 * t22543 + 362934 * t22542 + 409032 * t22541 + 131404 * t22540 - 52192 * t22539 - 58196 * t22538 - 15800 * t22537 + 1517 * t22534 + 1630 * t22535 - t22553) * np.exp((3*1j) * (t22536 + 4 * phi2))) * ((1 + t22535) ** (-0.1e1 / 0.2e1))

        if Bindx == 873:
            t22575 = np.cos(phi)
            t22574 = t22575 ** 2
            t22577 = t22575 * t22574
            t22578 = t22574 ** 2
            t22579 = t22575 * t22578
            t22580 = t22577 ** 2
            t22581 = t22575 * t22580
            t22582 = t22578 ** 2
            t22583 = t22575 * t22582
            t22584 = t22579 ** 2
            t22586 = t22580 ** 2
            t22588 = t22581 ** 2
            t22590 = t22582 ** 2
            t22592 = t22583 ** 2
            t22596 = 4418 * t22577 + 9656 * t22579 - 31960 * t22581 - 30940 * t22583 + (59228 * t22584 + 18904 * t22586 - 22712 * t22588 - 6530 * t22590 - 270 * t22592 + 206) * t22575
            t22595 = 1260 * t22574 + 9265 * t22578 - 4352 * t22580 - 49946 * t22582 + 55250 * t22586 - 13600 * t22588 - 15589 * t22590 - 1732 * t22592 + 15 + (19448 - 19 * t22584) * t22584
            t22576 = 5 * phi1
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.3885e4) * ((1 + t22575) ** (-0.1e1 / 0.2e1)) * ((1 - t22575) ** (-0.1e1 / 0.2e1)) * ((-t22595 + t22596) * np.exp((3*1j) * (t22576 - 6 * phi2)) + (t22595 + t22596) * np.exp((3*1j) * (t22576 + 6 * phi2)))

        if Bindx == 874:
            t22617 = np.cos(phi)
            t22616 = t22617 ** 2
            t22620 = t22616 ** 2
            t22619 = t22617 * t22616
            t22622 = t22619 ** 2
            t22624 = t22620 ** 2
            t22621 = t22617 * t22620
            t22626 = t22621 ** 2
            t22628 = t22622 ** 2
            t22623 = t22617 * t22622
            t22630 = t22623 ** 2
            t22632 = t22624 ** 2
            t22625 = t22617 * t22624
            t22634 = t22625 ** 2
            t22637 = -704 * t22616 + 11296 * t22620 - 61536 * t22622 + 151104 * t22624 - 180576 * t22626 + 84704 * t22628 + 23264 * t22630 - 38224 * t22632 + 10656 * t22634 + 16
            t22636 = -4949 * t22619 + 17764 * t22621 - 7796 * t22623 - 78826 * t22625 + (187754 * t22626 - 183436 * t22628 + 80796 * t22630 - 9579 * t22632 - 2109 * t22634 + 381) * t22617
            t22618 = 8 * phi1
            tfunc[..., c] = (0.39e2 / 0.131072e6) * ((t22636 + t22637) * np.exp((2*1j) * (t22618 - 3 * phi2)) + (-t22636 + t22637) * np.exp((2*1j) * (t22618 + 3 * phi2))) * np.sqrt(0.320943e6)

        if Bindx == 875:
            t22658 = np.cos(phi)
            t22657 = t22658 ** 2
            t22660 = t22658 * t22657
            t22661 = t22657 ** 2
            t22662 = t22658 * t22661
            t22663 = t22660 ** 2
            t22664 = t22658 * t22663
            t22665 = t22661 ** 2
            t22666 = t22658 * t22665
            t22667 = t22662 ** 2
            t22669 = t22663 ** 2
            t22671 = t22664 ** 2
            t22673 = t22665 ** 2
            t22675 = t22666 ** 2
            t22678 = -18157 * t22660 - 64108 * t22662 + 421460 * t22664 - 473902 * t22666 + (-307294 * t22667 + 664244 * t22669 - 133836 * t22671 - 89445 * t22673 - 2109 * t22675 + 3147) * t22658
            t22677 = -4640 * t22657 + 75184 * t22661 - 159936 * t22663 - 219024 * t22665 + 837408 * t22667 - 494000 * t22669 - 242048 * t22671 + 186208 * t22673 + 21312 * t22675 - 464
            t22659 = 4 * phi1
            tfunc[..., c] = (0.39e2 / 0.65536e5) * ((t22677 + t22678) * np.exp((4*1j) * (t22659 - 3 * phi2)) + (t22677 - t22678) * np.exp((4*1j) * (t22659 + 3 * phi2))) * np.sqrt(0.187e3)

        if Bindx == 876:
            t22699 = np.cos(phi)
            t22698 = t22699 ** 2
            t22702 = t22698 ** 2
            t22701 = t22699 * t22698
            t22704 = t22701 ** 2
            t22706 = t22702 ** 2
            t22703 = t22699 * t22702
            t22708 = t22703 ** 2
            t22710 = t22704 ** 2
            t22705 = t22699 * t22704
            t22712 = t22705 ** 2
            t22714 = t22706 ** 2
            t22707 = t22699 * t22706
            t22716 = t22707 ** 2
            t22719 = 16 + 1600 * t22698 + 16864 * t22702 + 26656 * t22704 - 56576 * t22706 - 77792 * t22708 + 35360 * t22710 + 45152 * t22712 + 8432 * t22714 + 288 * t22716
            t22718 = -6443 * t22701 - 28628 * t22703 + 4420 * t22705 + 92378 * t22707 + (20774 * t22708 - 56644 * t22710 - 23596 * t22712 - 2005 * t22714 - 19 * t22716 - 237) * t22699
            t22700 = 8 * phi1
            tfunc[..., c] = (0.39e2 / 0.262144e6) * ((t22718 + t22719) * np.exp((2*1j) * (t22700 - 9 * phi2)) + (-t22718 + t22719) * np.exp((2*1j) * (t22700 + 9 * phi2))) * np.sqrt(0.111e3)

        if Bindx == 877:
            t22735 = np.cos(phi)
            t22734 = t22735 ** 2
            t22737 = t22735 * t22734
            t22740 = t22737 ** 2
            t22741 = t22735 * t22740
            t22749 = -703 * t22741 ** 2 - 53
            t22746 = t22740 ** 2
            t22738 = t22734 ** 2
            t22739 = t22735 * t22738
            t22744 = t22739 ** 2
            t22742 = t22738 ** 2
            t22736 = 17 * phi1
            t22727 = t22735 * t22742
            t22725 = t22735 * t22744
            t22723 = t22735 * t22746
            tfunc[..., c] = (-0.117e3 / 0.262144e6*1j) * np.sqrt(0.106981e6) * ((1 - t22735) ** (0.11e2 / 0.2e1)) * ((1 + t22735) ** (-0.1e1 / 0.2e1)) * ((444 * t22723 - 4165 * t22746 - 2664 * t22725 + 10227 * t22744 + 6660 * t22727 - 13265 * t22742 - 8880 * t22741 + 9485 * t22740 + 6660 * t22739 - 3423 * t22738 - 2664 * t22737 + 385 * t22734 + 444 * t22735 - t22749) * np.exp((1j) * (t22736 - 6 * phi2)) + (-7992 * t22723 - 41123 * t22746 - 125992 * t22725 - 253803 * t22744 - 348656 * t22727 - 324159 * t22742 - 188496 * t22741 - 45309 * t22740 + 23144 * t22739 + 25047 * t22738 + 9208 * t22737 + 1127 * t22734 - 192 * t22735 + t22749) * np.exp((1j) * (t22736 + 6 * phi2)))

        if Bindx == 878:
            t22768 = np.cos(phi)
            t22767 = t22768 ** 2
            t22771 = t22767 ** 2
            t22775 = t22771 ** 2
            t22783 = t22775 ** 2
            t22785 = -703 * t22768 * t22783 - 269
            t22770 = t22768 * t22767
            t22773 = t22770 ** 2
            t22774 = t22768 * t22773
            t22781 = t22774 ** 2
            t22779 = t22773 ** 2
            t22772 = t22768 * t22771
            t22777 = t22772 ** 2
            t22769 = 17 * phi1
            t22760 = t22768 * t22775
            t22758 = t22768 * t22777
            t22756 = t22768 * t22779
            t22754 = t22768 * t22781
            tfunc[..., c] = (0.39e2 / 0.131072e6*1j) * ((1 - t22768) ** (0.5e1 / 0.2e1)) * np.sqrt(0.561e3) * ((1 + t22768) ** (-0.1e1 / 0.2e1)) * ((-5439 * t22783 + 15476 * t22754 - 13188 * t22781 - 26976 * t22756 + 72912 * t22779 - 37900 * t22758 - 69828 * t22777 + 107206 * t22760 - 16918 * t22775 - 69828 * t22774 + 52372 * t22773 + 5208 * t22772 - 21768 * t22771 + 7644 * t22770 + 1588 * t22767 - 1533 * t22768 - t22785) * np.exp((1j) * (t22769 - 12 * phi2)) + (-9657 * t22783 - 60764 * t22754 - 230660 * t22781 - 583800 * t22756 - 1021384 * t22779 - 1219036 * t22758 - 887172 * t22777 - 155870 * t22760 + 464750 * t22775 + 602316 * t22774 + 360724 * t22773 + 84448 * t22772 - 36960 * t22771 - 39700 * t22770 - 15628 * t22767 - 3147 * t22768 + t22785) * np.exp((1j) * (t22769 + 12 * phi2)))

        if Bindx == 879:
            t22807 = np.cos(phi)
            t22806 = t22807 ** 2
            t22810 = t22806 ** 2
            t22809 = t22807 * t22806
            t22812 = t22809 ** 2
            t22814 = t22810 ** 2
            t22811 = t22807 * t22810
            t22816 = t22811 ** 2
            t22818 = t22812 ** 2
            t22813 = t22807 * t22812
            t22820 = t22813 ** 2
            t22822 = t22814 ** 2
            t22815 = t22807 * t22814
            t22824 = t22815 ** 2
            t22828 = 1972 * t22806 + 25551 * t22810 + 65280 * t22812 - 49062 * t22814 + 1326 * t22818 + 96288 * t22820 + 31365 * t22822 + 2276 * t22824 + 17 + (-175032 + 19 * t22816) * t22816
            t22827 = -8706 * t22809 - 51000 * t22811 - 35496 * t22813 + 144092 * t22815 + (110500 * t22816 - 82008 * t22818 - 66504 * t22820 - 10302 * t22822 - 306 * t22824 - 270) * t22807
            t22808 = 17 * phi1
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.37e2) * ((1 + t22807) ** (-0.1e1 / 0.2e1)) * ((1 - t22807) ** (-0.1e1 / 0.2e1)) * ((t22827 + t22828) * np.exp((1j) * (t22808 - 18 * phi2)) + (t22827 - t22828) * np.exp((1j) * (t22808 + 18 * phi2)))

        if Bindx == 880:
            t22849 = np.cos(phi)
            t22848 = t22849 ** 2
            t22852 = t22848 ** 2
            t22851 = t22849 * t22848
            t22854 = t22851 ** 2
            t22856 = t22852 ** 2
            t22853 = t22849 * t22852
            t22858 = t22853 ** 2
            t22860 = t22854 ** 2
            t22855 = t22849 * t22854
            t22862 = t22855 ** 2
            t22864 = t22856 ** 2
            t22857 = t22849 * t22856
            t22866 = t22857 ** 2
            t22869 = -6 + 60 * t22848 + 56 * t22852 - 1152 * t22854 + 3132 * t22856 - 3784 * t22858 + 2040 * t22860 - 96 * t22862 - 358 * t22864 + 108 * t22866
            t22868 = -267 * t22851 + 996 * t22853 - 1340 * t22855 - 66 * t22857 + (2118 * t22858 - 2348 * t22860 + 1044 * t22862 - 135 * t22864 - 19 * t22866 + 17) * t22849
            t22850 = 3 * phi1
            tfunc[..., c] = (0.117e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.3958297e7) * ((t22868 + t22869) * np.exp((6*1j) * (t22850 - phi2)) + (-t22868 + t22869) * np.exp((6*1j) * (t22850 + phi2)))

        if Bindx == 881:
            t22890 = np.cos(phi)
            t22889 = t22890 ** 2
            t22893 = t22889 ** 2
            t22892 = t22890 * t22889
            t22895 = t22892 ** 2
            t22897 = t22893 ** 2
            t22894 = t22890 * t22893
            t22899 = t22894 ** 2
            t22901 = t22895 ** 2
            t22896 = t22890 * t22895
            t22903 = t22896 ** 2
            t22905 = t22897 ** 2
            t22898 = t22890 * t22897
            t22907 = t22898 ** 2
            t22910 = -12 - 528 * t22889 - 104 * t22893 + 7560 * t22895 - 7488 * t22897 - 10296 * t22899 + 13416 * t22901 + 408 * t22903 - 2740 * t22905 - 216 * t22907
            t22909 = -1011 * t22892 + 3684 * t22894 + 4316 * t22896 - 16302 * t22898 + (5070 * t22899 + 8932 * t22901 - 3492 * t22903 - 1053 * t22905 - 19 * t22907 - 125) * t22890
            t22891 = 3 * phi1
            tfunc[..., c] = -(0.39e2 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.20757e5) * ((-t22909 + t22910) * np.exp((6*1j) * (t22891 - 2 * phi2)) + (t22909 + t22910) * np.exp((6*1j) * (t22891 + 2 * phi2)))

        if Bindx == 882:
            t22931 = np.cos(phi)
            t22930 = t22931 ** 2
            t22932 = t22931 * t22930
            t22933 = t22930 ** 2
            t22934 = t22931 * t22933
            t22935 = t22932 ** 2
            t22936 = t22931 * t22935
            t22937 = t22933 ** 2
            t22938 = t22931 * t22937
            t22939 = t22934 ** 2
            t22941 = t22935 ** 2
            t22943 = t22936 ** 2
            t22945 = t22937 ** 2
            t22947 = t22938 ** 2
            t22950 = 11781 * t22932 + 96084 * t22934 + 220116 * t22936 + 43758 * t22938 + (-258570 * t22939 - 198492 * t22941 - 43452 * t22943 - 2583 * t22945 - 19 * t22947 + 305) * t22931
            t22949 = 2412 * t22930 + 39576 * t22933 + 171360 * t22935 + 182988 * t22937 - 136136 * t22939 - 270504 * t22941 - 107712 * t22943 - 12750 * t22945 - 324 * t22947 + 18
            tfunc[..., c] = -(0.39e2 / 0.524288e6) * np.sqrt(0.2e1) * ((t22949 - t22950) * np.exp((18*1j) * (phi1 - phi2)) + (t22949 + t22950) * np.exp((18*1j) * (phi1 + phi2)))

        if Bindx == 883:
            t22970 = np.cos(phi)
            t22990 = 6 * t22970
            t22969 = t22970 ** 2
            t22972 = t22970 * t22969
            t22973 = t22969 ** 2
            t22974 = t22970 * t22973
            t22975 = t22972 ** 2
            t22976 = t22970 * t22975
            t22977 = t22973 ** 2
            t22978 = t22970 * t22977
            t22979 = t22974 ** 2
            t22981 = t22975 ** 2
            t22983 = t22976 ** 2
            t22985 = t22977 ** 2
            t22989 = t22985 * t22990 - 16 * t22972 - 24 * t22974 + 144 * t22976 - 220 * t22978 + t22990 + (144 * t22979 - 24 * t22981 - 16 * t22983) * t22970
            t22988 = -t22978 ** 2 - 9 * t22969 + 60 * t22973 - 116 * t22975 + 66 * t22977 + 66 * t22979 - 116 * t22981 + 60 * t22983 - 9 * t22985 - 1
            t22971 = 19 * phi1
            tfunc[..., c] = (-0.117e3 / 0.262144e6*1j) * np.sqrt(0.75207643e8) * np.sqrt((1 - t22970)) * np.sqrt((1 + t22970)) * ((t22988 + t22989) * np.exp((1j) * (t22971 - 6 * phi2)) + (-t22988 + t22989) * np.exp((1j) * (t22971 + 6 * phi2)))

        if Bindx == 884:
            t23009 = np.cos(phi)
            t23008 = t23009 ** 2
            t23011 = t23009 * t23008
            t23012 = t23008 ** 2
            t23013 = t23009 * t23012
            t23014 = t23011 ** 2
            t23015 = t23009 * t23014
            t23017 = t23013 ** 2
            t23019 = t23014 ** 2
            t23021 = t23015 ** 2
            t23016 = t23012 ** 2
            t23023 = t23016 ** 2
            t23024 = t23009 * t23023
            t23027 = 184 * t23011 + 168 * t23013 - 936 * t23015 - 12 * t23024 + (936 * t23017 - 168 * t23019 - 184 * t23021 + 12) * t23009
            t23026 = -t23009 * t23024 + 63 * t23008 + 300 * t23012 - 364 * t23014 - 858 * t23016 + 858 * t23017 + 364 * t23019 - 300 * t23021 - 63 * t23023 + 1
            t23010 = 19 * phi1
            tfunc[..., c] = (0.39e2 / 0.131072e6*1j) * np.sqrt(0.394383e6) * np.sqrt((1 - t23009)) * np.sqrt((1 + t23009)) * ((-t23026 + t23027) * np.exp((1j) * (t23010 - 12 * phi2)) + (t23026 + t23027) * np.exp((1j) * (t23010 + 12 * phi2)))

        if Bindx == 885:
            t23048 = np.cos(phi)
            t23047 = t23048 ** 2
            t23051 = t23047 ** 2
            t23055 = t23051 ** 2
            t23056 = t23048 * t23055
            t23065 = t23056 ** 2
            t23067 = -t23048 * t23065 - 1
            t23063 = t23055 ** 2
            t23050 = t23048 * t23047
            t23053 = t23050 ** 2
            t23054 = t23048 * t23053
            t23061 = t23054 ** 2
            t23059 = t23053 ** 2
            t23052 = t23048 * t23051
            t23057 = t23052 ** 2
            t23049 = 19 * phi1
            t23038 = t23048 * t23057
            t23036 = t23048 * t23059
            t23034 = t23048 * t23061
            t23032 = t23048 * t23063
            tfunc[..., c] = (-0.39e2 / 0.524288e6*1j) * np.sqrt(0.19e2) * np.sqrt((1 - t23048)) * ((17 * t23065 - 135 * t23032 + 663 * t23063 - 2244 * t23034 + 5508 * t23061 - 9996 * t23036 + 13260 * t23059 - 11934 * t23038 + 4862 * t23057 + 4862 * t23056 - 11934 * t23055 + 13260 * t23054 - 9996 * t23053 + 5508 * t23052 - 2244 * t23051 + 663 * t23050 - 135 * t23047 + 17 * t23048 + t23067) * np.exp((1j) * (t23049 - 18 * phi2)) + (19 * t23065 + 171 * t23032 + 969 * t23063 + 3876 * t23034 + 11628 * t23061 + 27132 * t23036 + 50388 * t23059 + 75582 * t23038 + 92378 * t23057 + 92378 * t23056 + 75582 * t23055 + 50388 * t23054 + 27132 * t23053 + 11628 * t23052 + 3876 * t23051 + 969 * t23050 + 171 * t23047 + 19 * t23048 - t23067) * np.exp((1j) * (t23049 + 18 * phi2))) * ((1 + t23048) ** (-0.1e1 / 0.2e1))

        if Bindx == 886:
            t23073 = np.sin(phi)
            t23068 = t23073 ** 2
            t23070 = t23073 * t23068 ** 2
            t23071 = t23070 ** 2
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.exp((-20*1j) * phi1) * np.sqrt(0.3829070245e10) * t23071 ** 2

        if Bindx == 887:
            t23094 = np.cos(phi)
            t23093 = t23094 ** 2
            t23097 = t23093 ** 2
            t23096 = t23094 * t23093
            t23099 = t23096 ** 2
            t23101 = t23097 ** 2
            t23104 = t23099 ** 2
            t23100 = t23094 * t23099
            t23106 = t23100 ** 2
            t23108 = t23101 ** 2
            t23102 = t23094 * t23101
            t23110 = t23102 ** 2
            t23111 = t23094 * t23110
            t23114 = t23094 * t23111 - 8 * t23093 + 69 * t23097 - 176 * t23099 + 182 * t23101 - 182 * t23104 + 176 * t23106 - 69 * t23108 + 8 * t23110 - 1
            t23113 = -22 * t23096 + 168 * t23100 - 6 * t23111 + (364 * t23093 - 364) * t23102 + (-8 * t23097 - 168 * t23104 + 8 * t23106 + 22 * t23108 + 6) * t23094
            t23095 = 10 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.sqrt(0.161159235e9) * np.sqrt(0.2e1) * ((t23113 + t23114) * np.exp((-2*1j) * (t23095 - 3 * phi2)) + (-t23113 + t23114) * np.exp((-2*1j) * (t23095 + 3 * phi2)))

        if Bindx == 888:
            t23136 = np.cos(phi)
            t23158 = -12 * t23136
            t23135 = t23136 ** 2
            t23138 = t23136 * t23135
            t23139 = t23135 ** 2
            t23140 = t23136 * t23139
            t23141 = t23138 ** 2
            t23142 = t23136 * t23141
            t23143 = t23139 ** 2
            t23144 = t23136 * t23143
            t23145 = t23140 ** 2
            t23147 = t23141 ** 2
            t23149 = t23142 ** 2
            t23151 = t23143 ** 2
            t23153 = t23144 ** 2
            t23157 = t23153 * t23158 - 172 * t23138 + 16 * t23140 + 1104 * t23142 - 936 * t23144 + t23158 + (-936 * t23145 + 1104 * t23147 + 16 * t23149 - 172 * t23151) * t23136
            t23156 = 62 * t23135 + 237 * t23139 - 664 * t23141 - 494 * t23143 - 494 * t23147 - 664 * t23149 + 237 * t23151 + 62 * t23153 + 1 + (1716 + t23145) * t23145
            t23137 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.2097152e7) * np.sqrt(0.8544965e7) * np.sqrt(0.2e1) * ((t23156 + t23157) * np.exp((-4*1j) * (t23137 - 3 * phi2)) + (t23156 - t23157) * np.exp((-4*1j) * (t23137 + 3 * phi2)))

        if Bindx == 889:
            t23179 = np.cos(phi)
            t23178 = t23179 ** 2
            t23182 = t23178 ** 2
            t23181 = t23179 * t23178
            t23184 = t23181 ** 2
            t23186 = t23182 ** 2
            t23189 = t23184 ** 2
            t23185 = t23179 * t23184
            t23191 = t23185 ** 2
            t23193 = t23186 ** 2
            t23187 = t23179 * t23186
            t23195 = t23187 ** 2
            t23196 = t23179 * t23195
            t23199 = t23179 * t23196 - 152 * t23178 - 2907 * t23182 - 15504 * t23184 - 25194 * t23186 + 25194 * t23189 + 15504 * t23191 + 2907 * t23193 + 152 * t23195 - 1
            t23198 = 798 * t23181 + 23256 * t23185 - 18 * t23196 + (-16796 * t23178 + 16796) * t23187 + (7752 * t23182 - 23256 * t23189 - 7752 * t23191 - 798 * t23193 + 18) * t23179
            t23180 = 10 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.195e3) * ((t23198 + t23199) * np.exp((-2*1j) * (t23180 - 9 * phi2)) + (-t23198 + t23199) * np.exp((-2*1j) * (t23180 + 9 * phi2)))

        if Bindx == 890:
            t23200 = np.cos(phi)
            t23210 = -10 * t23200
            t23201 = t23200 ** 2
            t23203 = t23201 ** 2
            t23204 = t23200 * t23203
            t23202 = t23200 * t23201
            tfunc[..., c] = (0.615e3 / 0.262144e6*1j) * t23200 * (45 * t23201 + t23210 + 1 + (-252 + t23204) * t23204 + (210 + (t23210 + 45) * t23203) * t23203 + (-120 + (-120 * t23200 + 210) * t23202) * t23202) * ((1 + t23200) ** (0.19e2 / 0.2e1)) * np.sqrt(0.1531628098e10) * np.exp((-19*1j) * phi1) * ((1 - t23200) ** (-0.1e1 / 0.2e1))

        if Bindx == 891:
            t23224 = np.cos(phi)
            t23238 = 10 * t23224
            t23223 = t23224 ** 2
            t23226 = t23224 * t23223
            t23229 = t23226 ** 2
            t23235 = t23229 ** 2
            t23237 = t23235 * t23238
            t23227 = t23223 ** 2
            t23228 = t23224 * t23227
            t23233 = t23228 ** 2
            t23231 = t23227 ** 2
            t23225 = 19 * phi1
            t23219 = t23224 * t23229
            t23217 = t23224 * t23231
            t23215 = t23224 * t23233
            tfunc[..., c] = (-0.123e3 / 0.262144e6*1j) * ((1 + t23224) ** (0.13e2 / 0.2e1)) * np.sqrt(0.32231847e8) * np.sqrt((1 - t23224)) * ((t23237 - 117 * t23235 + 624 * t23215 - 2002 * t23233 + 4290 * t23217 - 6435 * t23231 + 6864 * t23219 - 5148 * t23229 + 2574 * t23228 - 715 * t23227 + 78 * t23223 - 26 * t23224 + 3) * np.exp((-1*1j) * (t23225 - 6 * phi2)) + (t23237 - 3 * t23235 - 60 * t23215 + 18 * t23233 + 150 * t23217 - 45 * t23231 - 200 * t23219 + 60 * t23229 + 150 * t23228 - 45 * t23227 + 18 * t23223 + t23238 - 60 * t23226 - 3) * np.exp((-1*1j) * (t23225 + 6 * phi2)))

        if Bindx == 892:
            t23257 = np.cos(phi)
            t23256 = t23257 ** 2
            t23260 = t23256 ** 2
            t23264 = t23260 ** 2
            t23272 = t23264 ** 2
            t23274 = 5 * t23257 * t23272
            t23259 = t23257 * t23256
            t23262 = t23259 ** 2
            t23263 = t23257 * t23262
            t23270 = t23263 ** 2
            t23268 = t23262 ** 2
            t23261 = t23257 * t23260
            t23266 = t23261 ** 2
            t23258 = 19 * phi1
            t23249 = t23257 * t23264
            t23247 = t23257 * t23266
            t23245 = t23257 * t23268
            t23243 = t23257 * t23270
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * ((1 + t23257) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1708993e7) * ((1 - t23257) ** (-0.1e1 / 0.2e1)) * ((t23274 - 77 * t23272 + 552 * t23243 - 2440 * t23270 + 7420 * t23245 - 16380 * t23268 + 26936 * t23247 - 33176 * t23266 + 30030 * t23249 - 18590 * t23264 + 5720 * t23263 + 2184 * t23262 - 4004 * t23261 + 2660 * t23260 - 1080 * t23259 + 280 * t23256 - 43 * t23257 + 3) * np.exp((-1*1j) * (t23258 - 12 * phi2)) + (t23274 + 37 * t23272 + 96 * t23243 + 48 * t23270 - 252 * t23245 - 492 * t23268 - 80 * t23247 + 704 * t23266 + 726 * t23249 - 154 * t23264 - 704 * t23263 - 336 * t23262 + 180 * t23261 + 228 * t23260 + 48 * t23259 - 32 * t23256 - 19 * t23257 - 3) * np.exp((-1*1j) * (t23258 + 12 * phi2)))

        if Bindx == 893:
            t23295 = np.cos(phi)
            t23294 = t23295 ** 2
            t23298 = t23294 ** 2
            t23299 = t23295 * t23298
            t23304 = t23299 ** 2
            t23316 = 10 * t23304 ** 2
            t23302 = t23298 ** 2
            t23303 = t23295 * t23302
            t23315 = 9 - 75582 * t23303 - 92378 * t23304
            t23312 = t23303 ** 2
            t23310 = t23302 ** 2
            t23297 = t23295 * t23294
            t23300 = t23297 ** 2
            t23301 = t23295 * t23300
            t23308 = t23301 ** 2
            t23306 = t23300 ** 2
            t23296 = 19 * phi1
            t23285 = t23295 * t23304
            t23284 = t23295 * t23306
            t23282 = t23295 * t23308
            t23280 = t23295 * t23310
            t23278 = t23295 * t23312
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt((1 + t23295)) * np.sqrt(0.39e2) * ((1 - t23295) ** (-0.1e1 / 0.2e1)) * ((t23316 + 161 * t23278 + 1197 * t23312 + 5415 * t23280 + 16473 * t23310 + 34884 * t23282 + 50388 * t23308 + 42636 * t23284 - 58786 * t23285 - 25194 * t23302 + 19380 * t23301 + 34884 * t23300 + 27132 * t23299 + 13566 * t23298 + 4617 * t23297 + 1045 * t23294 + 143 * t23295 + t23315) * np.exp((-1*1j) * (t23296 + 18 * phi2)) + (t23316 - 181 * t23278 + 1539 * t23312 - 8151 * t23280 + 30039 * t23310 - 81396 * t23282 + 166668 * t23308 - 259692 * t23284 - 243542 * t23285 - 176358 * t23302 + 182172 * t23301 - 127908 * t23300 + 65892 * t23299 - 25194 * t23298 + 7011 * t23297 - 1349 * t23294 + 161 * t23295 + 302328 * t23306 - t23315) * np.exp((-1*1j) * (t23296 - 18 * phi2)))

        if Bindx == 894:
            t23323 = np.sin(phi)
            t23318 = t23323 ** 2
            t23319 = t23318 ** 2
            t23321 = t23323 * t23319 ** 2
            t23317 = np.cos(phi)
            tfunc[..., c] = -(0.205e3 / 0.262144e6) * np.exp((-18*1j) * phi1) * np.sqrt(0.176726319e9) * t23321 ** 2 * (39 * t23317 ** 2 - 1)

        if Bindx == 895:
            t23345 = np.cos(phi)
            t23344 = t23345 ** 2
            t23347 = t23345 * t23344
            t23348 = t23344 ** 2
            t23349 = t23345 * t23348
            t23350 = t23347 ** 2
            t23351 = t23345 * t23350
            t23352 = t23348 ** 2
            t23353 = t23345 * t23352
            t23354 = t23349 ** 2
            t23356 = t23350 ** 2
            t23358 = t23351 ** 2
            t23360 = t23352 ** 2
            t23362 = t23353 ** 2
            t23366 = 7 * t23347 - 276 * t23349 + 1260 * t23351 - 2534 * t23353 + (2562 * t23354 - 1092 * t23356 - 164 * t23358 + 315 * t23360 - 81 * t23362 + 3) * t23345
            t23365 = -30 * t23344 + 219 * t23348 - 568 * t23350 + 378 * t23352 - 2170 * t23356 + 1896 * t23358 - 747 * t23360 + 82 * t23362 + 1 + (924 + 15 * t23354) * t23354
            t23346 = 3 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.139671337e9) * ((t23365 + t23366) * np.exp((-6*1j) * (t23346 - phi2)) + (t23365 - t23366) * np.exp((-6*1j) * (t23346 + phi2)))

        if Bindx == 896:
            t23388 = np.cos(phi)
            t23387 = t23388 ** 2
            t23390 = t23388 * t23387
            t23391 = t23387 ** 2
            t23392 = t23388 * t23391
            t23393 = t23390 ** 2
            t23394 = t23388 * t23393
            t23395 = t23391 ** 2
            t23396 = t23388 * t23395
            t23397 = t23392 ** 2
            t23399 = t23393 ** 2
            t23401 = t23394 ** 2
            t23403 = t23395 ** 2
            t23405 = t23396 ** 2
            t23409 = -74 * t23390 - 23064 * t23392 + 55224 * t23394 + 18252 * t23396 + (-138060 * t23397 + 86088 * t23399 + 25112 * t23401 - 21942 * t23403 - 2106 * t23405 + 570) * t23388
            t23408 = -1608 * t23387 + 10671 * t23391 + 5200 * t23393 - 90558 * t23395 + 27326 * t23399 - 90192 * t23401 + 19665 * t23403 + 9544 * t23405 - 67 + (109824 + 195 * t23397) * t23397
            t23389 = 3 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.394383e6) * ((t23408 + t23409) * np.exp((-6*1j) * (t23389 - 2 * phi2)) + (t23408 - t23409) * np.exp((-6*1j) * (t23389 + 2 * phi2)))

        if Bindx == 897:
            t23431 = np.cos(phi)
            t23430 = t23431 ** 2
            t23432 = t23431 * t23430
            t23433 = t23430 ** 2
            t23434 = t23431 * t23433
            t23435 = t23432 ** 2
            t23436 = t23431 * t23435
            t23437 = t23433 ** 2
            t23438 = t23431 * t23437
            t23439 = t23434 ** 2
            t23441 = t23435 ** 2
            t23443 = t23436 ** 2
            t23445 = t23437 ** 2
            t23447 = t23438 ** 2
            t23451 = -77919 * t23432 - 430236 * t23434 - 151164 * t23436 + 1520038 * t23438 + (881790 * t23439 - 1034892 * t23441 - 724812 * t23443 - 108243 * t23445 - 3159 * t23447 - 2475) * t23431
            t23450 = 17898 * t23430 + 223839 * t23433 + 503880 * t23435 - 680238 * t23437 + 277134 * t23441 + 1093032 * t23443 + 334305 * t23445 + 23674 * t23447 + 157 + (-1662804 + 195 * t23439) * t23439
            tfunc[..., c] = (0.41e2 / 0.524288e6) * np.sqrt(0.2e1) * ((t23450 + t23451) * np.exp((-18*1j) * (phi1 - phi2)) + (t23450 - t23451) * np.exp((-18*1j) * (phi1 + phi2)))

        if Bindx == 898:
            t23452 = np.cos(phi)
            tfunc[..., c] = (-0.615e3 / 0.262144e6*1j) * (13 * t23452 ** 2 - 1) * t23452 * ((1 + t23452) ** (0.17e2 / 0.2e1)) * np.sqrt(0.2238533374e10) * np.exp((-17*1j) * phi1) * ((1 - t23452) ** (0.17e2 / 0.2e1))

        if Bindx == 899:
            t23469 = np.cos(phi)
            t23468 = t23469 ** 2
            t23471 = t23469 * t23468
            t23474 = t23471 ** 2
            t23475 = t23469 * t23474
            t23482 = t23475 ** 2
            t23484 = 190 * t23469 * t23482
            t23480 = t23474 ** 2
            t23472 = t23468 ** 2
            t23473 = t23469 * t23472
            t23478 = t23473 ** 2
            t23476 = t23472 ** 2
            t23470 = 17 * phi1
            t23461 = t23469 * t23476
            t23459 = t23469 * t23478
            t23457 = t23469 * t23480
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * ((1 + t23469) ** (0.11e2 / 0.2e1)) * np.sqrt(0.22053369e8) * ((1 - t23469) ** (-0.1e1 / 0.2e1)) * ((t23484 - 2109 * t23482 + 10526 * t23457 - 30969 * t23480 + 58926 * t23459 - 74129 * t23478 + 58718 * t23461 - 22077 * t23476 - 7062 * t23475 + 13673 * t23474 - 7062 * t23473 + 1141 * t23472 + 426 * t23471 - 219 * t23468 + 26 * t23469 + 1) * np.exp((-1*1j) * (t23470 - 6 * phi2)) + (t23484 - 171 * t23482 - 1102 * t23457 + 1025 * t23480 + 2622 * t23459 - 2559 * t23478 - 3230 * t23461 + 3405 * t23476 + 2090 * t23475 - 2545 * t23474 - 570 * t23473 + 1011 * t23472 - 38 * t23471 - 165 * t23468 + 38 * t23469 - 1) * np.exp((-1*1j) * (t23470 + 6 * phi2)))

        if Bindx == 900:
            t23504 = np.cos(phi)
            t23503 = t23504 ** 2
            t23507 = t23503 ** 2
            t23511 = t23507 ** 2
            t23512 = t23504 * t23511
            t23522 = 1235 * t23512 ** 2
            t23519 = t23511 ** 2
            t23506 = t23504 * t23503
            t23509 = t23506 ** 2
            t23510 = t23504 * t23509
            t23517 = t23510 ** 2
            t23515 = t23509 ** 2
            t23508 = t23504 * t23507
            t23513 = t23508 ** 2
            t23505 = 17 * phi1
            t23494 = t23504 * t23513
            t23492 = t23504 * t23515
            t23490 = t23504 * t23517
            t23488 = t23504 * t23519
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * ((1 + t23504) ** (0.5e1 / 0.2e1)) * np.sqrt(0.6919e4) * ((1 - t23504) ** (-0.1e1 / 0.2e1)) * ((t23522 - 16302 * t23488 + 97603 * t23519 - 347376 * t23490 + 804540 * t23517 - 1229480 * t23492 + 1138956 * t23515 - 331344 * t23494 - 674102 * t23513 + 1078220 * t23512 - 699270 * t23511 + 92144 * t23510 + 204204 * t23509 - 168168 * t23508 + 51740 * t23507 + 2640 * t23506 - 7173 * t23503 + 2162 * t23504 - 229) * np.exp((-1*1j) * (t23505 - 12 * phi2)) + (t23522 + 8892 * t23488 + 22021 * t23519 + 8264 * t23490 - 60828 * t23517 - 103944 * t23492 + 2812 * t23515 + 162600 * t23494 + 126962 * t23513 - 72336 * t23512 - 144738 * t23511 - 30632 * t23510 + 59492 * t23509 + 36552 * t23508 - 5508 * t23507 - 10184 * t23506 - 1677 * t23503 + 788 * t23504 + 229) * np.exp((-1*1j) * (t23505 + 12 * phi2)))

        if Bindx == 901:
            t23545 = np.cos(phi)
            t23544 = t23545 ** 2
            t23548 = t23544 ** 2
            t23547 = t23545 * t23544
            t23550 = t23547 ** 2
            t23552 = t23548 ** 2
            t23549 = t23545 * t23548
            t23554 = t23549 ** 2
            t23556 = t23550 ** 2
            t23551 = t23545 * t23550
            t23558 = t23551 ** 2
            t23560 = t23552 ** 2
            t23553 = t23545 * t23552
            t23562 = t23553 ** 2
            t23564 = t23554 ** 2
            t23567 = 8928 * t23544 + 79719 * t23548 + 4080 * t23550 - 521118 * t23552 + 24752 * t23554 + 772174 * t23556 - 26928 * t23558 - 281775 * t23560 - 57936 * t23562 - 1989 * t23564 + 93
            t23566 = -34034 * t23547 - 102510 * t23549 + 259896 * t23551 + 461448 * t23553 + (-596700 * t23554 - 449412 * t23556 + 290904 * t23558 + 157752 * t23560 + 13886 * t23562 + 130 * t23564 - 1360) * t23545
            t23546 = 17 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt(0.57e2) * ((1 + t23545) ** (-0.1e1 / 0.2e1)) * ((1 - t23545) ** (-0.1e1 / 0.2e1)) * ((t23566 + t23567) * np.exp((-1*1j) * (t23546 - 18 * phi2)) + (t23566 - t23567) * np.exp((-1*1j) * (t23546 + 18 * phi2)))

        if Bindx == 902:
            t23575 = np.sin(phi)
            t23571 = t23575 ** 2
            t23572 = t23571 ** 2
            t23573 = t23572 ** 2
            t23568 = np.cos(phi)
            t23569 = t23568 ** 2
            tfunc[..., c] = (0.615e3 / 0.524288e6) * np.exp((-16*1j) * phi1) * np.sqrt(0.60500902e8) * t23573 ** 2 * (1 + (-74 + 481 * t23569) * t23569)

        if Bindx == 903:
            t23597 = np.cos(phi)
            t23596 = t23597 ** 2
            t23599 = t23597 * t23596
            t23600 = t23596 ** 2
            t23601 = t23597 * t23600
            t23602 = t23599 ** 2
            t23603 = t23597 * t23602
            t23604 = t23600 ** 2
            t23605 = t23597 * t23604
            t23606 = t23601 ** 2
            t23608 = t23602 ** 2
            t23610 = t23603 ** 2
            t23612 = t23604 ** 2
            t23614 = t23605 ** 2
            t23618 = -3608 * t23599 + 31008 * t23601 - 121632 * t23603 + 241808 * t23605 + (-236432 * t23606 + 64288 * t23608 + 76512 * t23610 - 68968 * t23612 + 16872 * t23614 + 152) * t23597
            t23617 = -832 * t23596 + 6343 * t23600 - 8688 * t23602 - 52318 * t23604 - 368018 * t23608 + 305712 * t23610 - 119967 * t23612 + 11248 * t23614 + 13 + (222992 + 3515 * t23606) * t23606
            t23598 = 8 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6) * ((t23617 - t23618) * np.exp((-2*1j) * (t23598 - 3 * phi2)) + (t23617 + t23618) * np.exp((-2*1j) * (t23598 + 3 * phi2))) * np.sqrt(0.596037e6)

        if Bindx == 904:
            t23640 = np.cos(phi)
            t23639 = t23640 ** 2
            t23643 = t23639 ** 2
            t23642 = t23640 * t23639
            t23645 = t23642 ** 2
            t23647 = t23643 ** 2
            t23644 = t23640 * t23643
            t23649 = t23644 ** 2
            t23651 = t23645 ** 2
            t23646 = t23640 * t23645
            t23653 = t23646 ** 2
            t23655 = t23647 ** 2
            t23648 = t23640 * t23647
            t23657 = t23648 ** 2
            t23661 = -42230 * t23639 - 347053 * t23643 + 3382392 * t23645 - 7523282 * t23647 + 12724270 * t23651 - 12002184 * t23653 + 764499 * t23655 + 1702666 * t23657 + 4223 + (1291004 + 45695 * t23649) * t23649
            t23660 = 320624 * t23642 - 1193664 * t23644 - 911040 * t23646 + 10586784 * t23648 + (-15611232 * t23649 + 3356992 * t23651 + 6940992 * t23653 - 3034000 * t23655 - 438672 * t23657 - 16784) * t23640
            t23641 = 4 * phi1
            tfunc[..., c] = (0.123e3 / 0.1048576e7) * ((t23660 + t23661) * np.exp((-4*1j) * (t23641 - 3 * phi2)) + (-t23660 + t23661) * np.exp((-4*1j) * (t23641 + 3 * phi2))) * np.sqrt(0.187e3)

        if Bindx == 905:
            t23683 = np.cos(phi)
            t23682 = t23683 ** 2
            t23685 = t23683 * t23682
            t23686 = t23682 ** 2
            t23687 = t23683 * t23686
            t23688 = t23685 ** 2
            t23689 = t23683 * t23688
            t23690 = t23686 ** 2
            t23691 = t23683 * t23690
            t23692 = t23687 ** 2
            t23694 = t23688 ** 2
            t23696 = t23689 ** 2
            t23698 = t23690 ** 2
            t23700 = t23691 ** 2
            t23704 = -10968 * t23685 - 14688 * t23687 + 106080 * t23689 + 45968 * t23691 + (-215696 * t23692 - 27744 * t23694 + 93024 * t23696 + 23640 * t23698 + 936 * t23700 - 552) * t23683
            t23703 = -3280 * t23682 - 20859 * t23686 + 31824 * t23688 + 133926 * t23690 - 165750 * t23694 + 75888 * t23696 + 58803 * t23698 + 6112 * t23700 - 41 + (-116688 + 65 * t23692) * t23692
            t23684 = 8 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6) * ((t23703 - t23704) * np.exp((-2*1j) * (t23684 - 9 * phi2)) + (t23703 + t23704) * np.exp((-2*1j) * (t23684 + 9 * phi2))) * np.sqrt(0.2109e4)

        if Bindx == 906:
            t23705 = np.cos(phi)
            t23706 = t23705 ** 2
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * (15 + (-370 + 1443 * t23706) * t23706) * t23705 * ((1 + t23705) ** (0.15e2 / 0.2e1)) * np.sqrt(0.302504510e9) * np.exp((-15*1j) * phi1) * ((1 - t23705) ** (0.15e2 / 0.2e1))

        if Bindx == 907:
            t23725 = np.cos(phi)
            t23724 = t23725 ** 2
            t23728 = t23724 ** 2
            t23732 = t23728 ** 2
            t23741 = 12654 * t23732 ** 2
            t23727 = t23725 * t23724
            t23730 = t23727 ** 2
            t23731 = t23725 * t23730
            t23738 = t23731 ** 2
            t23736 = t23730 ** 2
            t23729 = t23725 * t23728
            t23734 = t23729 ** 2
            t23726 = 5 * phi1
            t23717 = t23725 * t23732
            t23715 = t23725 * t23734
            t23713 = t23725 * t23736
            t23711 = t23725 * t23738
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * ((1 + t23725) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2980185e7) * ((1 - t23725) ** (-0.1e1 / 0.2e1)) * ((t23741 - 120213 * t23711 + 495615 * t23738 - 1136085 * t23713 + 1500375 * t23736 - 935177 * t23715 - 261701 * t23734 + 953095 * t23717 - 659505 * t23732 + 60225 * t23731 + 169917 * t23730 - 91359 * t23729 + 6165 * t23728 + 7965 * t23727 - 1975 * t23724 - 19 * t23725 + 23) * np.exp((-3*1j) * (t23726 - 2 * phi2)) + (t23741 - 6327 * t23711 - 73815 * t23738 + 39405 * t23713 + 178365 * t23736 - 102331 * t23715 - 227467 * t23734 + 142025 * t23717 + 159605 * t23732 - 111445 * t23731 - 56149 * t23730 + 47287 * t23729 + 5815 * t23728 - 8825 * t23727 + 1015 * t23724 + 211 * t23725 - 23) * np.exp((-3*1j) * (t23726 + 2 * phi2)))

        if Bindx == 908:
            t23762 = np.cos(phi)
            t23761 = t23762 ** 2
            t23765 = t23761 ** 2
            t23769 = t23765 ** 2
            t23770 = t23762 * t23769
            t23779 = t23770 ** 2
            t23781 = 82251 * t23762 * t23779
            t23777 = t23769 ** 2
            t23764 = t23762 * t23761
            t23767 = t23764 ** 2
            t23768 = t23762 * t23767
            t23775 = t23768 ** 2
            t23773 = t23767 ** 2
            t23766 = t23762 * t23765
            t23771 = t23766 ** 2
            t23763 = 5 * phi1
            t23752 = t23762 * t23771
            t23750 = t23762 * t23773
            t23748 = t23762 * t23775
            t23746 = t23762 * t23777
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * ((1 + t23762) ** (0.3e1 / 0.2e1)) * np.sqrt(0.935e3) * ((1 - t23762) ** (-0.1e1 / 0.2e1)) * ((t23781 - 904761 * t23779 + 4312905 * t23746 - 11288811 * t23777 + 16135116 * t23748 - 7185284 * t23775 - 16214828 * t23750 + 32075524 * t23773 - 19706518 * t23752 - 8285134 * t23771 + 20953790 * t23770 - 11028186 * t23769 - 2218788 * t23768 + 5140044 * t23767 - 1877980 * t23766 - 289132 * t23765 + 378275 * t23764 - 72641 * t23761 - 9215 * t23762 + 3373) * np.exp((-3*1j) * (t23763 - 4 * phi2)) + (t23781 + 575757 * t23779 + 1351869 * t23746 + 288267 * t23777 - 4058004 * t23748 - 5968396 * t23775 + 1544516 * t23750 + 10418780 * t23773 + 5847626 * t23752 - 6491386 * t23771 - 8187850 * t23770 + 272826 * t23769 + 4320828 * t23768 + 1411236 * t23767 - 959980 * t23766 - 586228 * t23765 + 54467 * t23764 + 82517 * t23761 + 4277 * t23762 - 3373) * np.exp((-3*1j) * (t23763 + 4 * phi2)))

        if Bindx == 909:
            t23804 = np.cos(phi)
            t23803 = t23804 ** 2
            t23807 = t23803 ** 2
            t23806 = t23804 * t23803
            t23809 = t23806 ** 2
            t23811 = t23807 ** 2
            t23808 = t23804 * t23807
            t23813 = t23808 ** 2
            t23815 = t23809 ** 2
            t23810 = t23804 * t23809
            t23817 = t23810 ** 2
            t23819 = t23811 ** 2
            t23812 = t23804 * t23811
            t23821 = t23812 ** 2
            t23823 = t23813 ** 2
            t23826 = -2752 * t23803 - 8017 * t23807 + 54128 * t23809 + 12818 * t23811 - 187408 * t23813 + 82654 * t23815 + 118864 * t23817 - 47447 * t23819 - 21744 * t23821 - 1053 * t23823 - 43
            t23825 = 7394 * t23806 - 11458 * t23808 - 76024 * t23810 + 118456 * t23812 + (94588 * t23813 - 173468 * t23815 - 11288 * t23817 + 44872 * t23819 + 6322 * t23821 + 78 * t23823 + 528) * t23804
            t23805 = 5 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt(0.10545e5) * ((1 + t23804) ** (-0.1e1 / 0.2e1)) * ((1 - t23804) ** (-0.1e1 / 0.2e1)) * ((t23825 + t23826) * np.exp((-3*1j) * (t23805 - 6 * phi2)) + (t23825 - t23826) * np.exp((-3*1j) * (t23805 + 6 * phi2)))

        if Bindx == 910:
            t23836 = np.sin(phi)
            t23831 = t23836 ** 2
            t23832 = t23836 * t23831
            t23834 = t23836 * t23832 ** 2
            t23827 = np.cos(phi)
            t23828 = t23827 ** 2
            t23829 = t23828 ** 2
            tfunc[..., c] = -(0.615e3 / 0.262144e6) * np.exp((-14*1j) * phi1) * np.sqrt(0.12964479e8) * t23834 ** 2 * (-1295 * t23829 - 1 + (3367 * t23829 + 105) * t23828)

        if Bindx == 911:
            t23858 = np.cos(phi)
            t23857 = t23858 ** 2
            t23861 = t23857 ** 2
            t23860 = t23858 * t23857
            t23863 = t23860 ** 2
            t23865 = t23861 ** 2
            t23862 = t23858 * t23861
            t23867 = t23862 ** 2
            t23869 = t23863 ** 2
            t23864 = t23858 * t23863
            t23871 = t23864 ** 2
            t23873 = t23865 ** 2
            t23866 = t23858 * t23865
            t23875 = t23866 ** 2
            t23879 = 94 * t23857 - 2971 * t23861 + 35512 * t23863 - 184698 * t23865 - 732678 * t23869 + 593432 * t23871 - 226581 * t23873 + 12654 * t23875 - 1 + (494692 + 10545 * t23867) * t23867
            t23878 = -3351 * t23860 + 29972 * t23862 - 119148 * t23864 + 228422 * t23866 + (-166178 * t23867 - 107068 * t23869 + 281764 * t23871 - 188811 * t23873 + 44289 * t23875 + 109) * t23858
            t23859 = 7 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.1390753e7) * ((-t23878 + t23879) * np.exp((-2*1j) * (t23859 - 3 * phi2)) + (t23878 + t23879) * np.exp((-2*1j) * (t23859 + 3 * phi2)))

        if Bindx == 912:
            t23901 = np.cos(phi)
            t23900 = t23901 ** 2
            t23903 = t23901 * t23900
            t23904 = t23900 ** 2
            t23905 = t23901 * t23904
            t23906 = t23903 ** 2
            t23907 = t23901 * t23906
            t23908 = t23904 ** 2
            t23909 = t23901 * t23908
            t23910 = t23905 ** 2
            t23912 = t23906 ** 2
            t23914 = t23907 ** 2
            t23916 = t23908 ** 2
            t23918 = t23909 ** 2
            t23922 = -4950 * t23903 - 1166824 * t23905 + 7342920 * t23907 - 16131596 * t23909 + (9861644 * t23910 + 11676856 * t23912 - 17144344 * t23914 + 4405590 * t23916 + 1151514 * t23918 + 9190) * t23901
            t23921 = 81800 * t23900 - 819695 * t23904 + 2495792 * t23906 + 789438 * t23908 + 28134210 * t23912 - 14174512 * t23914 - 3826833 * t23916 + 3694968 * t23918 - 2045 + (-16510208 + 137085 * t23910) * t23910
            t23902 = 7 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.3927e4) * ((t23921 - t23922) * np.exp((-2*1j) * (t23902 - 6 * phi2)) + (t23921 + t23922) * np.exp((-2*1j) * (t23902 + 6 * phi2)))

        if Bindx == 913:
            t23944 = np.cos(phi)
            t23943 = t23944 ** 2
            t23946 = t23944 * t23943
            t23947 = t23943 ** 2
            t23948 = t23944 * t23947
            t23949 = t23946 ** 2
            t23950 = t23944 * t23949
            t23951 = t23947 ** 2
            t23952 = t23944 * t23951
            t23953 = t23948 ** 2
            t23955 = t23949 ** 2
            t23957 = t23950 ** 2
            t23959 = t23951 ** 2
            t23961 = t23952 ** 2
            t23965 = -3227 * t23946 + 12852 * t23948 + 22100 * t23950 - 80002 * t23952 + (10166 * t23953 + 72964 * t23955 - 19516 * t23957 - 14175 * t23959 - 819 * t23961 - 343) * t23944
            t23964 = 1550 * t23943 + 629 * t23947 - 30056 * t23949 + 27846 * t23951 - 77350 * t23955 - 20808 * t23957 + 25483 * t23959 + 4542 * t23961 + 31 + (68068 + 65 * t23953) * t23953
            t23945 = 7 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.4921e4) * ((t23964 + t23965) * np.exp((-2*1j) * (t23945 - 9 * phi2)) + (t23964 - t23965) * np.exp((-2*1j) * (t23945 + 9 * phi2)))

        if Bindx == 914:
            t23966 = np.cos(phi)
            t23967 = t23966 ** 2
            t23968 = t23967 ** 2
            tfunc[..., c] = (-0.615e3 / 0.262144e6*1j) * (-259 * t23968 - 1 + (481 * t23968 + 35) * t23967) * t23966 * ((1 + t23966) ** (0.13e2 / 0.2e1)) * np.sqrt(0.3085546002e10) * np.exp((-13*1j) * phi1) * ((1 - t23966) ** (0.13e2 / 0.2e1))

        if Bindx == 915:
            t23988 = np.cos(phi)
            t23987 = t23988 ** 2
            t23991 = t23987 ** 2
            t23995 = t23991 ** 2
            t24003 = t23995 ** 2
            t24005 = 358530 * t23988 * t24003
            t23990 = t23988 * t23987
            t23993 = t23990 ** 2
            t23994 = t23988 * t23993
            t24001 = t23994 ** 2
            t23999 = t23993 ** 2
            t23992 = t23988 * t23991
            t23997 = t23992 ** 2
            t23989 = 13 * phi1
            t23980 = t23988 * t23995
            t23978 = t23988 * t23997
            t23976 = t23988 * t23999
            t23974 = t23988 * t24001
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * ((1 + t23988) ** (0.7e1 / 0.2e1)) * np.sqrt(0.11687e5) * ((1 - t23988) ** (-0.1e1 / 0.2e1)) * ((9106662 * t23974 + 6822270 * t23976 - 18912194 * t23978 + 6433130 * t23980 - 6670 * t23987 - 1268 * t23988 + 67370 * t23990 - 35490 * t23991 - 680694 * t23992 + 1482474 * t23993 + 1131570 * t23994 - 7213140 * t23995 + 7424054 * t23997 + 10951570 * t23999 - 14095890 * t24001 - 2832387 * t24003 + 103 + t24005) * np.exp((-1*1j) * (t23989 - 6 * phi2)) + (-2079474 * t23974 + 5056038 * t23976 - 6619290 * t23978 + 4957266 * t23980 + 13518 * t23987 - 444 * t23988 - 17502 * t23990 - 198222 * t23991 + 397890 * t23992 + 844694 * t23993 - 2053014 * t23994 - 1699164 * t23995 + 1846794 * t23997 - 1100002 * t23999 + 328338 * t24001 - 35853 * t24003 - 103 + t24005) * np.exp((-1*1j) * (t23989 + 6 * phi2)))

        if Bindx == 916:
            t24027 = np.cos(phi)
            t24026 = t24027 ** 2
            t24030 = t24026 ** 2
            t24031 = t24027 * t24030
            t24036 = t24031 ** 2
            t24047 = 2330445 * t24036 ** 2
            t24034 = t24030 ** 2
            t24035 = t24027 * t24034
            t24044 = t24035 ** 2
            t24042 = t24034 ** 2
            t24029 = t24027 * t24026
            t24032 = t24029 ** 2
            t24033 = t24027 * t24032
            t24040 = t24033 ** 2
            t24038 = t24032 ** 2
            t24028 = 13 * phi1
            t24017 = t24027 * t24036
            t24015 = t24027 * t24038
            t24013 = t24027 * t24040
            t24011 = t24027 * t24042
            t24009 = t24027 * t24044
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt((1 + t24027)) * np.sqrt(0.33e2) * ((1 - t24027) ** (-0.1e1 / 0.2e1)) * ((-20507916 * t24009 - 106524924 * t24011 + 273645328 * t24013 - 32659440 * t24015 - 306130344 * t24017 + 558030 * t24026 - 143580 * t24027 + 1765460 * t24029 - 9558615 * t24030 + 1694928 * t24031 + 50064872 * t24032 - 72322224 * t24033 - 72633990 * t24034 + 260658424 * t24035 - 119967276 * t24036 + 427564618 * t24038 - 338607768 * t24040 - 10565823 * t24042 + 71347470 * t24044 - 7675 + t24047) * np.exp((-1*1j) * (t24028 - 12 * phi2)) + (15847026 * t24009 + 184926 * t24011 - 145803832 * t24013 + 290425816 * t24015 - 225913636 * t24017 - 255520 * t24026 - 158930 * t24027 + 2579010 * t24029 + 5214145 * t24030 - 13077832 * t24031 - 38681968 * t24032 + 16424616 * t24033 + 128531598 * t24034 + 59492836 * t24035 - 200183984 * t24036 + 104479362 * t24038 + 80841392 * t24040 - 117275673 * t24042 + 34992528 * t24044 + 7675 + t24047) * np.exp((-1*1j) * (t24028 + 12 * phi2)))

        if Bindx == 917:
            t24070 = np.cos(phi)
            t24069 = t24070 ** 2
            t24072 = t24070 * t24069
            t24073 = t24069 ** 2
            t24074 = t24070 * t24073
            t24075 = t24072 ** 2
            t24076 = t24070 * t24075
            t24077 = t24073 ** 2
            t24078 = t24070 * t24077
            t24079 = t24074 ** 2
            t24081 = t24075 ** 2
            t24083 = t24076 ** 2
            t24085 = t24077 ** 2
            t24087 = t24078 ** 2
            t24089 = t24079 ** 2
            t24092 = -2106 * t24072 + 24882 * t24074 - 25064 * t24076 - 88712 * t24078 + (161460 * t24079 - 23908 * t24081 - 78920 * t24083 + 25152 * t24085 + 7606 * t24087 + 130 * t24089 - 520) * t24070
            t24091 = 1908 * t24069 - 6341 * t24073 - 26560 * t24075 + 99138 * t24077 - 42744 * t24079 - 122746 * t24081 + 111072 * t24083 + 7865 * t24085 - 20124 * t24087 - 1521 * t24089 + 53
            t24071 = 13 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.11951e5) * ((1 + t24070) ** (-0.1e1 / 0.2e1)) * ((1 - t24070) ** (-0.1e1 / 0.2e1)) * ((t24091 + t24092) * np.exp((-1*1j) * (t24071 - 18 * phi2)) + (-t24091 + t24092) * np.exp((-1*1j) * (t24071 + 18 * phi2)))

        if Bindx == 918:
            t24102 = np.sin(phi)
            t24098 = t24102 ** 2
            t24099 = t24102 * t24098
            t24100 = t24099 ** 2
            t24093 = np.cos(phi)
            t24094 = t24093 ** 2
            t24095 = t24094 ** 2
            tfunc[..., c] = (0.615e3 / 0.524288e6) * np.exp((-12*1j) * phi1) * np.sqrt(0.46750697e8) * t24100 ** 2 * (-132 * t24094 + 1 + (-11396 * t24094 + 2310 + 15873 * t24095) * t24095)

        if Bindx == 919:
            t24124 = np.cos(phi)
            t24123 = t24124 ** 2
            t24126 = t24124 * t24123
            t24127 = t24123 ** 2
            t24128 = t24124 * t24127
            t24129 = t24126 ** 2
            t24130 = t24124 * t24129
            t24131 = t24127 ** 2
            t24132 = t24124 * t24131
            t24133 = t24128 ** 2
            t24135 = t24129 ** 2
            t24137 = t24130 ** 2
            t24139 = t24131 ** 2
            t24141 = t24132 ** 2
            t24145 = -31474 * t24126 + 308904 * t24128 - 1127880 * t24130 + 1046876 * t24132 + (3732132 * t24133 - 12130872 * t24135 + 14813528 * t24137 - 8548110 * t24139 + 1936062 * t24141 + 834) * t24124
            t24144 = 8040 * t24123 - 167793 * t24127 + 1425392 * t24129 - 6269022 * t24131 - 22394530 * t24135 + 17699856 * t24137 - 6145551 * t24139 - 286824 * t24141 - 67 + (15592704 + 537795 * t24133) * t24133
            t24125 = 2 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6) * np.sqrt(0.385671e6) * np.sqrt(0.2e1) * ((t24144 - t24145) * np.exp((-6*1j) * (t24125 - phi2)) + (t24144 + t24145) * np.exp((-6*1j) * (t24125 + phi2)))

        if Bindx == 920:
            t24167 = np.cos(phi)
            t24166 = t24167 ** 2
            t24168 = t24167 * t24166
            t24169 = t24166 ** 2
            t24170 = t24167 * t24169
            t24171 = t24168 ** 2
            t24172 = t24167 * t24171
            t24173 = t24169 ** 2
            t24174 = t24167 * t24173
            t24175 = t24170 ** 2
            t24177 = t24171 ** 2
            t24179 = t24172 ** 2
            t24181 = t24173 ** 2
            t24183 = t24174 ** 2
            t24187 = 62120740 * t24168 - 467492784 * t24170 + 1356745104 * t24172 - 692997448 * t24174 + (-4168174920 * t24175 + 8682850704 * t24177 - 5958918064 * t24179 + 635413284 * t24181 + 553713732 * t24183 - 2736060) * t24167
            t24186 = 3904230 * t24166 + 23251305 * t24169 - 619985080 * t24171 + 3234599082 * t24173 + 6387519658 * t24177 - 4339896 * t24179 - 3397850775 * t24181 + 1385861862 * t24183 - 59155 + (-7089281628 + 76904685 * t24175) * t24175
            tfunc[..., c] = (0.41e2 / 0.2097152e7) * np.sqrt(0.2e1) * ((t24186 - t24187) * np.exp((-12*1j) * (phi1 - phi2)) + (t24186 + t24187) * np.exp((-12*1j) * (phi1 + phi2)))

        if Bindx == 921:
            t24209 = np.cos(phi)
            t24208 = t24209 ** 2
            t24211 = t24209 * t24208
            t24212 = t24208 ** 2
            t24213 = t24209 * t24212
            t24214 = t24211 ** 2
            t24215 = t24209 * t24214
            t24216 = t24212 ** 2
            t24217 = t24209 * t24216
            t24218 = t24213 ** 2
            t24220 = t24214 ** 2
            t24222 = t24215 ** 2
            t24224 = t24216 ** 2
            t24226 = t24217 ** 2
            t24230 = -74 * t24211 - 23064 * t24213 + 55224 * t24215 + 18252 * t24217 + (-138060 * t24218 + 86088 * t24220 + 25112 * t24222 - 21942 * t24224 - 2106 * t24226 + 570) * t24209
            t24229 = -1608 * t24208 + 10671 * t24212 + 5200 * t24214 - 90558 * t24216 + 27326 * t24220 - 90192 * t24222 + 19665 * t24224 + 9544 * t24226 - 67 + (109824 + 195 * t24218) * t24218
            t24210 = 2 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.394383e6) * ((t24229 + t24230) * np.exp((-6*1j) * (t24210 - 3 * phi2)) + (t24229 - t24230) * np.exp((-6*1j) * (t24210 + 3 * phi2)))

        if Bindx == 922:
            t24231 = np.cos(phi)
            t24232 = t24231 ** 2
            t24233 = t24232 ** 2
            tfunc[..., c] = (0.615e3 / 0.131072e6*1j) * (-132 * t24232 + 3 + (-4884 * t24232 + 1386 + 5291 * t24233) * t24233) * t24231 * ((1 + t24231) ** (0.11e2 / 0.2e1)) * np.sqrt(0.93501394e8) * np.exp((-11*1j) * phi1) * ((1 - t24231) ** (0.11e2 / 0.2e1))

        if Bindx == 923:
            t24255 = np.cos(phi)
            t24254 = t24255 ** 2
            t24258 = t24254 ** 2
            t24262 = t24258 ** 2
            t24263 = t24255 * t24262
            t24273 = 119510 * t24263 ** 2
            t24270 = t24262 ** 2
            t24257 = t24255 * t24254
            t24260 = t24257 ** 2
            t24261 = t24255 * t24260
            t24268 = t24261 ** 2
            t24266 = t24260 ** 2
            t24259 = t24255 * t24258
            t24264 = t24259 ** 2
            t24256 = 11 * phi1
            t24245 = t24255 * t24264
            t24243 = t24255 * t24266
            t24241 = t24255 * t24268
            t24239 = t24255 * t24270
            tfunc[..., c] = (0.123e3 / 0.131072e6*1j) * ((1 + t24255) ** (0.5e1 / 0.2e1)) * np.sqrt(0.385671e6) * ((1 - t24255) ** (-0.1e1 / 0.2e1)) * ((-752913 * t24239 - 951048 * t24241 + 3881780 * t24243 - 2977368 * t24245 + 78 * t24254 - 161 * t24255 + 7000 * t24257 - 14060 * t24258 - 69804 * t24259 + 212688 * t24260 + 158856 * t24261 - 1091790 * t24262 + 588970 * t24263 + 2131724 * t24264 - 676396 * t24266 - 2252160 * t24268 + 1685091 * t24270 + 3 + t24273) * np.exp((-1*1j) * (t24256 - 6 * phi2)) + (35853 * t24239 - 148444 * t24241 + 218824 * t24243 - 102012 * t24245 + 834 * t24254 - 143 * t24255 + 4684 * t24257 - 23424 * t24258 - 35520 * t24259 + 204052 * t24260 + 91276 * t24261 - 803502 * t24262 - 64518 * t24263 + 1730664 * t24264 - 2197080 * t24266 + 1650156 * t24268 - 681207 * t24270 - 3 + t24273) * np.exp((-1*1j) * (t24256 + 6 * phi2)))

        if Bindx == 924:
            t24296 = np.cos(phi)
            t24295 = t24296 ** 2
            t24299 = t24295 ** 2
            t24298 = t24296 * t24295
            t24301 = t24298 ** 2
            t24303 = t24299 ** 2
            t24300 = t24296 * t24299
            t24305 = t24300 ** 2
            t24307 = t24301 ** 2
            t24302 = t24296 * t24301
            t24309 = t24302 ** 2
            t24311 = t24303 ** 2
            t24304 = t24296 * t24303
            t24313 = t24304 ** 2
            t24315 = t24305 ** 2
            t24318 = 933270 * t24295 - 10382845 * t24299 + 34738792 * t24301 + 23611302 * t24303 - 404056796 * t24305 + 990955966 * t24307 - 1064260824 * t24309 + 454578487 * t24311 + 30291382 * t24313 - 56396769 * t24315 - 11965
            t24317 = -2721510 * t24298 + 33686961 * t24300 - 185130088 * t24302 + 499655442 * t24304 + (-634015044 * t24305 + 170718826 * t24307 + 436665944 * t24309 - 443438523 * t24311 + 115948602 * t24313 + 8544965 * t24315 + 84425) * t24296
            t24297 = 11 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * ((1 + t24296) ** (-0.1e1 / 0.2e1)) * ((1 - t24296) ** (-0.1e1 / 0.2e1)) * ((t24317 + t24318) * np.exp((-1*1j) * (t24297 - 12 * phi2)) + (t24317 - t24318) * np.exp((-1*1j) * (t24297 + 12 * phi2)))

        if Bindx == 925:
            t24341 = np.cos(phi)
            t24340 = t24341 ** 2
            t24344 = t24340 ** 2
            t24343 = t24341 * t24340
            t24346 = t24343 ** 2
            t24348 = t24344 ** 2
            t24345 = t24341 * t24344
            t24350 = t24345 ** 2
            t24352 = t24346 ** 2
            t24347 = t24341 * t24346
            t24354 = t24347 ** 2
            t24356 = t24348 ** 2
            t24349 = t24341 * t24348
            t24358 = t24349 ** 2
            t24360 = t24350 ** 2
            t24363 = -37 - 444 * t24340 + 6381 * t24344 - 14272 * t24346 - 15522 * t24348 + 80808 * t24350 - 79222 * t24352 + 3168 * t24354 + 29271 * t24356 - 8844 * t24358 - 1287 * t24360
            t24362 = -1386 * t24343 - 5742 * t24345 + 37752 * t24347 - 53768 * t24349 + (-8268 * t24350 + 72252 * t24352 - 45992 * t24354 - 336 * t24356 + 5094 * t24358 + 130 * t24360 + 264) * t24341
            t24342 = 11 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.394383e6) * ((1 + t24341) ** (-0.1e1 / 0.2e1)) * ((1 - t24341) ** (-0.1e1 / 0.2e1)) * ((t24362 + t24363) * np.exp((-1*1j) * (t24342 - 18 * phi2)) + (t24362 - t24363) * np.exp((-1*1j) * (t24342 + 18 * phi2)))

        if Bindx == 926:
            t24374 = np.sin(phi)
            t24370 = t24374 ** 2
            t24372 = t24374 * t24370 ** 2
            t24364 = np.cos(phi)
            t24365 = t24364 ** 2
            t24366 = t24365 ** 2
            t24368 = t24366 ** 2
            tfunc[..., c] = -(0.123e3 / 0.131072e6) * np.exp((-10*1j) * phi1) * np.sqrt(0.7540435e7) * t24372 ** 2 * (-10230 * t24366 - 189255 * t24368 - 3 + (71610 * t24366 + 164021 * t24368 + 465) * t24365)

        if Bindx == 927:
            t24396 = np.cos(phi)
            t24395 = t24396 ** 2
            t24398 = t24396 * t24395
            t24399 = t24395 ** 2
            t24400 = t24396 * t24399
            t24401 = t24398 ** 2
            t24402 = t24396 * t24401
            t24403 = t24399 ** 2
            t24404 = t24396 * t24403
            t24405 = t24400 ** 2
            t24407 = t24401 ** 2
            t24409 = t24402 ** 2
            t24411 = t24403 ** 2
            t24413 = t24404 ** 2
            t24417 = 763 * t24398 - 24820 * t24400 + 305772 * t24402 - 1759166 * t24404 + (5410058 * t24405 - 9473476 * t24407 + 9479676 * t24409 - 5050241 * t24411 + 1111443 * t24413 - 9) * t24396
            t24416 = 2414 * t24395 - 56027 * t24399 + 500888 * t24401 - 2243226 * t24403 - 7868358 * t24407 + 5771704 * t24409 - 1321189 * t24411 - 740962 * t24413 - 17 + (5584292 + 370481 * t24405) * t24405
            t24397 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.131072e6) * np.sqrt(0.62205e5) * np.sqrt(0.2e1) * ((t24416 - t24417) * np.exp((-2*1j) * (t24397 - 3 * phi2)) + (t24416 + t24417) * np.exp((-2*1j) * (t24397 + 3 * phi2)))

        if Bindx == 928:
            t24439 = np.cos(phi)
            t24438 = t24439 ** 2
            t24441 = t24439 * t24438
            t24442 = t24438 ** 2
            t24443 = t24439 * t24442
            t24444 = t24441 ** 2
            t24445 = t24439 * t24444
            t24446 = t24442 ** 2
            t24447 = t24439 * t24446
            t24448 = t24443 ** 2
            t24450 = t24444 ** 2
            t24452 = t24445 ** 2
            t24454 = t24446 ** 2
            t24456 = t24447 ** 2
            t24460 = 123222 * t24441 + 448712 * t24443 - 11516648 * t24445 + 55976492 * t24447 + (-121964076 * t24448 + 128031464 * t24450 - 49875144 * t24452 - 11471702 * t24454 + 10253958 * t24456 - 6278) * t24439
            t24459 = -129448 * t24438 + 1989317 * t24442 - 12320880 * t24444 + 35167990 * t24446 - 16294902 * t24450 + 83025008 * t24452 - 71233349 * t24454 + 17878696 * t24456 + 1471 + (-39792896 + 1708993 * t24448) * t24448
            t24440 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.155e3) * ((t24459 - t24460) * np.exp((-2*1j) * (t24440 - 6 * phi2)) + (t24459 + t24460) * np.exp((-2*1j) * (t24440 + 6 * phi2)))

        if Bindx == 929:
            t24482 = np.cos(phi)
            t24481 = t24482 ** 2
            t24484 = t24482 * t24481
            t24485 = t24481 ** 2
            t24486 = t24482 * t24485
            t24487 = t24484 ** 2
            t24488 = t24482 * t24487
            t24489 = t24485 ** 2
            t24490 = t24482 * t24489
            t24491 = t24486 ** 2
            t24493 = t24487 ** 2
            t24495 = t24488 ** 2
            t24497 = t24489 ** 2
            t24499 = t24490 ** 2
            t24503 = 163 * t24484 - 68 * t24486 - 1924 * t24488 + 4706 * t24490 + (-3094 * t24491 - 1524 * t24493 + 2412 * t24495 - 537 * t24497 - 117 * t24499 - 17) * t24482
            t24502 = 6 * t24481 - 399 * t24485 + 1560 * t24487 - 1170 * t24489 + 5330 * t24493 - 2440 * t24495 - 449 * t24497 + 406 * t24499 + 3 + (-2860 + 13 * t24491) * t24491
            t24483 = 5 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6) * np.sqrt(0.61129365e8) * np.sqrt(0.2e1) * ((t24502 + t24503) * np.exp((-2*1j) * (t24483 - 9 * phi2)) + (t24502 - t24503) * np.exp((-2*1j) * (t24483 + 9 * phi2)))

        if Bindx == 930:
            t24504 = np.cos(phi)
            t24505 = t24504 ** 2
            t24506 = t24505 ** 2
            t24508 = t24506 ** 2
            tfunc[..., c] = (-0.205e3 / 0.131072e6*1j) * (-6138 * t24506 - 63085 * t24508 - 9 + (30690 * t24506 + 44733 * t24508 + 465) * t24505) * t24504 * ((1 + t24504) ** (0.9e1 / 0.2e1)) * np.sqrt(0.99533742e8) * np.exp((-9*1j) * phi1) * ((1 - t24504) ** (0.9e1 / 0.2e1))

        if Bindx == 931:
            t24530 = np.cos(phi)
            t24529 = t24530 ** 2
            t24533 = t24529 ** 2
            t24537 = t24533 ** 2
            t24538 = t24530 * t24537
            t24547 = t24538 ** 2
            t24549 = 11114430 * t24530 * t24547
            t24545 = t24537 ** 2
            t24532 = t24530 * t24529
            t24535 = t24532 ** 2
            t24536 = t24530 * t24535
            t24543 = t24536 ** 2
            t24541 = t24535 ** 2
            t24534 = t24530 * t24533
            t24539 = t24534 ** 2
            t24531 = 3 * phi1
            t24520 = t24530 * t24539
            t24518 = t24530 * t24541
            t24516 = t24530 * t24543
            t24514 = t24530 * t24545
            tfunc[..., c] = (0.123e3 / 0.131072e6*1j) * ((1 + t24530) ** (0.3e1 / 0.2e1)) * np.sqrt(0.377e3) * ((1 - t24530) ** (-0.1e1 / 0.2e1)) * ((58535998 * t24514 - 225636104 * t24516 + 263807768 * t24518 - 130463996 * t24520 + 26427 * t24529 - 4722 * t24530 + 200366 * t24532 - 897340 * t24533 - 2046472 * t24534 + 10508316 * t24535 + 5155224 * t24536 - 55308738 * t24537 + 19796260 * t24538 + 142156762 * t24539 - 165205324 * t24541 + 32305100 * t24543 + 88193977 * t24545 - 52237821 * t24547 - 111 + t24549) * np.exp((-3*1j) * (t24531 - 2 * phi2)) + (-61499846 * t24514 + 146404816 * t24516 - 195167072 * t24518 + 158406652 * t24520 - 6651 * t24529 - 5166 * t24530 + 266966 * t24532 - 57100 * t24533 - 3793552 * t24534 + 2126172 * t24535 + 23666592 * t24536 - 14969382 * t24537 - 79393820 * t24538 + 47316478 * t24539 - 80153228 * t24541 + 75772060 * t24543 - 37808561 * t24545 + 7780101 * t24547 + 111 + t24549) * np.exp((-3*1j) * (t24531 + 2 * phi2)))

        if Bindx == 932:
            t24572 = np.cos(phi)
            t24571 = t24572 ** 2
            t24575 = t24571 ** 2
            t24574 = t24572 * t24571
            t24577 = t24574 ** 2
            t24579 = t24575 ** 2
            t24576 = t24572 * t24575
            t24581 = t24576 ** 2
            t24583 = t24577 ** 2
            t24578 = t24572 * t24577
            t24585 = t24578 ** 2
            t24587 = t24579 ** 2
            t24580 = t24572 * t24579
            t24589 = t24580 ** 2
            t24591 = t24581 ** 2
            t24594 = -50666 * t24571 + 1114249 * t24575 - 10690808 * t24577 + 50981242 * t24579 - 131030588 * t24581 + 183187082 * t24583 - 122570488 * t24585 + 8957249 * t24587 + 32686614 * t24589 - 12584403 * t24591 + 517
            t24593 = -499514 * t24574 + 4381417 * t24576 - 15467192 * t24578 + 16328858 * t24580 + (39238628 * t24581 - 138964342 * t24583 + 169583432 * t24585 - 92555599 * t24587 + 15608006 * t24589 + 2330445 * t24591 + 15861) * t24572
            t24573 = 3 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.1023e4) * ((1 + t24572) ** (-0.1e1 / 0.2e1)) * ((1 - t24572) ** (-0.1e1 / 0.2e1)) * ((t24593 + t24594) * np.exp((-3*1j) * (t24573 - 4 * phi2)) + (t24593 - t24594) * np.exp((-3*1j) * (t24573 + 4 * phi2)))

        if Bindx == 933:
            t24617 = np.cos(phi)
            t24616 = t24617 ** 2
            t24619 = t24616 ** 2
            t24618 = t24617 * t24616
            t24621 = t24618 ** 2
            t24623 = t24619 ** 2
            t24620 = t24617 * t24619
            t24625 = t24620 ** 2
            t24627 = t24621 ** 2
            t24622 = t24617 * t24621
            t24629 = t24622 ** 2
            t24631 = t24623 ** 2
            t24624 = t24617 * t24623
            t24633 = t24624 ** 2
            t24635 = t24625 ** 2
            t24638 = -568 * t24616 - 4723 * t24619 + 40528 * t24621 - 96122 * t24623 + 71968 * t24625 + 50778 * t24627 - 115152 * t24629 + 61347 * t24631 - 4968 * t24633 - 3159 * t24635 + 71
            t24637 = 4602 * t24618 - 16170 * t24620 - 312 * t24622 + 92248 * t24624 + (-176852 * t24625 + 123988 * t24627 - 7960 * t24629 - 28648 * t24631 + 9002 * t24633 + 390 * t24635 - 288) * t24617
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.370481e6) * ((1 + t24617) ** (-0.1e1 / 0.2e1)) * ((1 - t24617) ** (-0.1e1 / 0.2e1)) * ((t24637 + t24638) * np.exp((-9*1j) * (phi1 - 2 * phi2)) + (t24637 - t24638) * np.exp((-9*1j) * (phi1 + 2 * phi2)))

        if Bindx == 934:
            t24649 = np.sin(phi)
            t24646 = t24649 ** 2
            t24647 = t24646 ** 2
            t24639 = np.cos(phi)
            t24640 = t24639 ** 2
            t24641 = t24640 ** 2
            t24643 = t24641 ** 2
            t24642 = t24640 * t24641
            tfunc[..., c] = (0.615e3 / 0.262144e6) * np.exp((-8*1j) * phi1) * np.sqrt(0.1144066e7) * t24647 ** 2 * (13485 * t24641 + 445005 * t24643 + 3 + (-118668 + 432419 * t24642) * t24642 + (-731786 * t24643 - 522) * t24640)

        if Bindx == 935:
            t24671 = np.cos(phi)
            t24670 = t24671 ** 2
            t24673 = t24671 * t24670
            t24674 = t24670 ** 2
            t24675 = t24671 * t24674
            t24676 = t24673 ** 2
            t24677 = t24671 * t24676
            t24678 = t24674 ** 2
            t24679 = t24671 * t24678
            t24680 = t24675 ** 2
            t24682 = t24676 ** 2
            t24684 = t24677 ** 2
            t24686 = t24678 ** 2
            t24688 = t24679 ** 2
            t24692 = 579356 * t24673 - 9519824 * t24675 + 73467600 * t24677 - 314905896 * t24679 + (806014632 * t24680 - 1258643152 * t24682 + 1173489872 * t24684 - 599399260 * t24686 + 128927388 * t24688 - 10716) * t24671
            t24691 = 114080 * t24670 - 2905307 * t24674 + 27611312 * t24676 - 126711162 * t24678 - 384960790 * t24682 + 167012624 * t24684 + 130104179 * t24686 - 171903184 * t24688 - 713 + (307919216 + 53719745 * t24680) * t24680
            t24672 = 4 * phi1
            tfunc[..., c] = (0.123e3 / 0.131072e6) * ((t24691 - t24692) * np.exp((-2*1j) * (t24672 - 3 * phi2)) + (t24691 + t24692) * np.exp((-2*1j) * (t24672 + 3 * phi2))) * np.sqrt(0.39e2)

        if Bindx == 936:
            t24714 = np.cos(phi)
            t24713 = t24714 ** 2
            t24716 = t24714 * t24713
            t24717 = t24713 ** 2
            t24718 = t24714 * t24717
            t24719 = t24716 ** 2
            t24720 = t24714 * t24719
            t24721 = t24717 ** 2
            t24722 = t24714 * t24721
            t24723 = t24718 ** 2
            t24725 = t24719 ** 2
            t24727 = t24720 ** 2
            t24729 = t24721 ** 2
            t24731 = t24722 ** 2
            t24735 = 122552 * t24716 - 1372768 * t24718 + 7168928 * t24720 - 19520176 * t24722 + (27444560 * t24723 - 15223904 * t24725 - 5972576 * t24727 + 11085496 * t24729 - 3728712 * t24731 - 3400) * t24714
            t24734 = -11766 * t24713 + 149507 * t24717 - 275080 * t24719 - 2951026 * t24721 - 37708658 * t24725 + 41979256 * t24727 - 22174205 * t24729 + 3322378 * t24731 + 111 + (16892668 + 776815 * t24723) * t24723
            t24715 = 2 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * ((t24734 + t24735) * np.exp((-4*1j) * (t24715 - 3 * phi2)) + (t24734 - t24735) * np.exp((-4*1j) * (t24715 + 3 * phi2))) * np.sqrt(0.9889e4)

        if Bindx == 937:
            t24757 = np.cos(phi)
            t24756 = t24757 ** 2
            t24759 = t24757 * t24756
            t24760 = t24756 ** 2
            t24761 = t24757 * t24760
            t24762 = t24759 ** 2
            t24763 = t24757 * t24762
            t24764 = t24760 ** 2
            t24765 = t24757 * t24764
            t24766 = t24761 ** 2
            t24768 = t24762 ** 2
            t24770 = t24763 ** 2
            t24772 = t24764 ** 2
            t24774 = t24765 ** 2
            t24778 = -532 * t24759 + 2864 * t24761 - 4784 * t24763 - 1352 * t24765 + (13000 * t24766 - 14928 * t24768 + 6096 * t24770 + 84 * t24772 - 468 * t24774 + 20) * t24757
            t24777 = 144 * t24756 - 123 * t24760 - 3120 * t24762 + 11622 * t24764 + 7306 * t24768 + 3568 * t24770 - 4525 * t24772 + 1088 * t24774 - 9 + (-16016 + 65 * t24766) * t24766
            t24758 = 4 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6) * ((t24777 + t24778) * np.exp((-2*1j) * (t24758 - 9 * phi2)) + (t24777 - t24778) * np.exp((-2*1j) * (t24758 + 9 * phi2))) * np.sqrt(0.32231847e8)

        if Bindx == 938:
            t24779 = np.cos(phi)
            t24780 = t24779 ** 2
            t24781 = t24780 ** 2
            t24783 = t24781 ** 2
            t24782 = t24780 * t24781
            tfunc[..., c] = (0.615e3 / 0.131072e6*1j) * (18879 * t24781 + 346115 * t24783 + 21 + (-118668 + 232841 * t24782) * t24782 + (-465682 * t24783 - 1218) * t24780) * t24779 * ((1 + t24779) ** (0.7e1 / 0.2e1)) * np.sqrt(0.2124694e7) * np.exp((-7*1j) * phi1) * ((1 - t24779) ** (0.7e1 / 0.2e1))

        if Bindx == 939:
            t24807 = np.cos(phi)
            t24806 = t24807 ** 2
            t24810 = t24806 ** 2
            t24811 = t24807 * t24810
            t24816 = t24811 ** 2
            t24827 = 107439490 * t24816 ** 2
            t24814 = t24810 ** 2
            t24815 = t24807 * t24814
            t24824 = t24815 ** 2
            t24822 = t24814 ** 2
            t24809 = t24807 * t24806
            t24812 = t24809 ** 2
            t24813 = t24807 * t24812
            t24820 = t24813 ** 2
            t24818 = t24812 ** 2
            t24808 = 7 * phi1
            t24797 = t24807 * t24816
            t24795 = t24807 * t24818
            t24793 = t24807 * t24820
            t24791 = t24807 * t24822
            t24789 = t24807 * t24824
            tfunc[..., c] = (0.123e3 / 0.131072e6*1j) * np.sqrt((1 + t24807)) * np.sqrt(0.21e2) * ((1 - t24807) ** (-0.1e1 / 0.2e1)) * ((-333062419 * t24789 + 1289839351 * t24791 - 2011059404 * t24793 + 1594959052 * t24795 - 655103098 * t24797 + 190969 * t24806 - 11041 * t24807 + 472309 * t24809 - 5572586 * t24810 - 4671172 * t24811 + 62078228 * t24812 + 6453348 * t24813 - 341912922 * t24814 + 112117538 * t24815 + 1035530782 * t24816 - 1772497168 * t24818 + 1621893092 * t24820 - 588899839 * t24822 - 118183439 * t24824 + t24827 - 1071) * np.exp((-1*1j) * (t24808 - 6 * phi2)) + (118183439 * t24789 - 602226615 * t24791 + 1296793116 * t24793 - 1530892716 * t24795 + 1074245666 * t24797 - 166745 * t24806 - 13183 * t24807 + 830023 * t24809 + 4270254 * t24810 - 14514012 * t24811 - 42893044 * t24812 + 111424620 * t24813 + 224034954 * t24814 - 453830338 * t24815 - 693817982 * t24816 + 1353354600 * t24818 - 1685959428 * t24820 + 1303166127 * t24822 - 569429297 * t24824 + t24827 + 1071) * np.exp((-1*1j) * (t24808 + 6 * phi2)))

        if Bindx == 940:
            t24850 = np.cos(phi)
            t24849 = t24850 ** 2
            t24852 = t24850 * t24849
            t24853 = t24849 ** 2
            t24854 = t24850 * t24853
            t24855 = t24852 ** 2
            t24856 = t24850 * t24855
            t24857 = t24853 ** 2
            t24858 = t24850 * t24857
            t24859 = t24854 ** 2
            t24861 = t24855 ** 2
            t24863 = t24856 ** 2
            t24865 = t24857 ** 2
            t24867 = t24858 ** 2
            t24869 = t24859 ** 2
            t24872 = 2074 * t24852 - 35793 * t24854 + 290616 * t24856 - 1237322 * t24858 + (2983260 * t24859 - 4188378 * t24861 + 3315000 * t24863 - 1260873 * t24865 + 71706 * t24867 + 59755 * t24869 - 45) * t24850
            t24871 = 1482 * t24849 - 27489 * t24853 + 195960 * t24855 - 680778 * t24857 + 1184124 * t24859 - 733114 * t24861 - 751752 * t24863 + 1626135 * t24865 - 1065526 * t24867 + 250971 * t24869 - 13
            t24851 = 7 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.899899e6) * ((1 + t24850) ** (-0.1e1 / 0.2e1)) * ((1 - t24850) ** (-0.1e1 / 0.2e1)) * ((-t24871 + t24872) * np.exp((-1*1j) * (t24851 - 12 * phi2)) + (t24871 + t24872) * np.exp((-1*1j) * (t24851 + 12 * phi2)))

        if Bindx == 941:
            t24895 = np.cos(phi)
            t24894 = t24895 ** 2
            t24897 = t24895 * t24894
            t24898 = t24894 ** 2
            t24899 = t24895 * t24898
            t24900 = t24897 ** 2
            t24901 = t24895 * t24900
            t24902 = t24898 ** 2
            t24903 = t24895 * t24902
            t24904 = t24899 ** 2
            t24906 = t24900 ** 2
            t24908 = t24901 ** 2
            t24910 = t24902 ** 2
            t24912 = t24903 ** 2
            t24914 = t24904 ** 2
            t24917 = -42 * t24897 + 378 * t24899 - 1224 * t24901 + 1768 * t24903 + (-780 * t24904 - 948 * t24906 + 1432 * t24908 - 696 * t24910 + 102 * t24912 + 10 * t24914) * t24895
            t24916 = -1 + 24 * t24894 - 123 * t24898 + 80 * t24900 + 822 * t24902 - 2496 * t24904 + 3146 * t24906 - 1872 * t24908 + 315 * t24910 + 168 * t24912 - 63 * t24914
            t24896 = 7 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.2933098077e10) * ((1 + t24895) ** (-0.1e1 / 0.2e1)) * ((1 - t24895) ** (-0.1e1 / 0.2e1)) * ((t24916 + t24917) * np.exp((-1*1j) * (t24896 - 18 * phi2)) + (-t24916 + t24917) * np.exp((-1*1j) * (t24896 + 18 * phi2)))

        if Bindx == 942:
            t24929 = np.sin(phi)
            t24926 = t24929 ** 2
            t24927 = t24929 * t24926
            t24918 = np.cos(phi)
            t24919 = t24918 ** 2
            t24920 = t24919 ** 2
            t24921 = t24919 * t24920
            t24924 = t24921 ** 2
            t24922 = t24920 ** 2
            tfunc[..., c] = -(0.205e3 / 0.131072e6) * np.exp((-6*1j) * phi1) * np.sqrt(0.22309287e8) * t24927 ** 2 * (-5481 * t24920 + 56637 * t24921 - 267003 * t24922 - 698523 * t24924 - 1 + (623007 * t24922 + 299367 * t24924 + 189) * t24919)

        if Bindx == 943:
            t24951 = np.cos(phi)
            t24950 = t24951 ** 2
            t24952 = t24951 * t24950
            t24953 = t24950 ** 2
            t24954 = t24951 * t24953
            t24955 = t24952 ** 2
            t24956 = t24951 * t24955
            t24957 = t24953 ** 2
            t24958 = t24951 * t24957
            t24959 = t24954 ** 2
            t24961 = t24955 ** 2
            t24963 = t24956 ** 2
            t24965 = t24957 ** 2
            t24967 = t24958 ** 2
            t24971 = -12690623 * t24952 + 215763204 * t24954 - 1676112156 * t24956 + 7099732614 * t24958 + (-17788338594 * t24959 + 27110643156 * t24961 - 24690053292 * t24963 + 12351583053 * t24965 - 2610779607 * t24967 + 219477) * t24951
            t24970 = 494682 * t24950 - 12798633 * t24953 + 111181384 * t24955 - 361974366 * t24957 + 2906066046 * t24961 - 7976625624 * t24963 + 9867484233 * t24965 - 5995123542 * t24967 - 2843 + (10898316 + 1450433115 * t24959) * t24959
            tfunc[..., c] = (0.41e2 / 0.131072e6) * np.sqrt(0.2e1) * ((t24970 + t24971) * np.exp((-6*1j) * (phi1 - phi2)) + (t24970 - t24971) * np.exp((-6*1j) * (phi1 + phi2)))

        if Bindx == 944:
            t24993 = np.cos(phi)
            t24992 = t24993 ** 2
            t24994 = t24993 * t24992
            t24995 = t24992 ** 2
            t24996 = t24993 * t24995
            t24997 = t24994 ** 2
            t24998 = t24993 * t24997
            t24999 = t24995 ** 2
            t25000 = t24993 * t24999
            t25001 = t24996 ** 2
            t25003 = t24997 ** 2
            t25005 = t24998 ** 2
            t25007 = t24999 ** 2
            t25009 = t25000 ** 2
            t25013 = -31474 * t24994 + 308904 * t24996 - 1127880 * t24998 + 1046876 * t25000 + (3732132 * t25001 - 12130872 * t25003 + 14813528 * t25005 - 8548110 * t25007 + 1936062 * t25009 + 834) * t24993
            t25012 = 8040 * t24992 - 167793 * t24995 + 1425392 * t24997 - 6269022 * t24999 - 22394530 * t25003 + 17699856 * t25005 - 6145551 * t25007 - 286824 * t25009 - 67 + (15592704 + 537795 * t25001) * t25001
            tfunc[..., c] = (0.41e2 / 0.524288e6) * np.sqrt(0.385671e6) * np.sqrt(0.2e1) * ((t25012 - t25013) * np.exp((-6*1j) * (phi1 - 2 * phi2)) + (t25012 + t25013) * np.exp((-6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 945:
            t25035 = np.cos(phi)
            t25034 = t25035 ** 2
            t25036 = t25035 * t25034
            t25037 = t25034 ** 2
            t25038 = t25035 * t25037
            t25039 = t25036 ** 2
            t25040 = t25035 * t25039
            t25041 = t25037 ** 2
            t25042 = t25035 * t25041
            t25043 = t25038 ** 2
            t25045 = t25039 ** 2
            t25047 = t25040 ** 2
            t25049 = t25041 ** 2
            t25051 = t25042 ** 2
            t25055 = 7 * t25036 - 276 * t25038 + 1260 * t25040 - 2534 * t25042 + (2562 * t25043 - 1092 * t25045 - 164 * t25047 + 315 * t25049 - 81 * t25051 + 3) * t25035
            t25054 = -30 * t25034 + 219 * t25037 - 568 * t25039 + 378 * t25041 - 2170 * t25045 + 1896 * t25047 - 747 * t25049 + 82 * t25051 + 1 + (924 + 15 * t25043) * t25043
            tfunc[..., c] = (0.123e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.139671337e9) * ((t25054 + t25055) * np.exp((-6*1j) * (phi1 - 3 * phi2)) + (t25054 - t25055) * np.exp((-6*1j) * (phi1 + 3 * phi2)))

        if Bindx == 946:
            t25056 = np.cos(phi)
            t25057 = t25056 ** 2
            t25058 = t25057 ** 2
            t25059 = t25057 * t25058
            t25062 = t25059 ** 2
            t25060 = t25058 ** 2
            tfunc[..., c] = (-0.123e3 / 0.131072e6*1j) * (-71253 * t25058 + 525915 * t25059 - 1928355 * t25060 - 3492615 * t25062 - 65 + (3681405 * t25060 + 1297257 * t25062 + 4095) * t25057) * t25056 * ((1 + t25056) ** (0.5e1 / 0.2e1)) * np.sqrt(0.5720330e7) * np.exp((-5*1j) * phi1) * ((1 - t25056) ** (0.5e1 / 0.2e1))

        if Bindx == 947:
            t25086 = np.cos(phi)
            t25085 = t25086 ** 2
            t25089 = t25085 ** 2
            t25088 = t25086 * t25085
            t25091 = t25088 ** 2
            t25093 = t25089 ** 2
            t25090 = t25086 * t25089
            t25095 = t25090 ** 2
            t25097 = t25091 ** 2
            t25092 = t25086 * t25091
            t25099 = t25092 ** 2
            t25101 = t25093 ** 2
            t25094 = t25086 * t25093
            t25103 = t25094 ** 2
            t25105 = t25095 ** 2
            t25108 = 218340 * t25085 - 6511915 * t25089 + 75760352 * t25091 - 450558450 * t25093 + 1549913352 * t25095 - 3268737030 * t25097 + 4295350080 * t25099 - 3432118593 * t25101 + 1526771700 * t25103 - 290086623 * t25105 - 1213
            t25107 = -107650 * t25088 + 2561562 * t25090 - 29880520 * t25092 + 191906520 * t25094 + (-725274108 * t25095 + 1675106700 * t25097 - 2387449128 * t25099 + 2046699360 * t25101 - 966955410 * t25103 + 193391082 * t25105 + 1592) * t25086
            t25087 = 5 * phi1
            tfunc[..., c] = (0.41e2 / 0.131072e6*1j) * np.sqrt(0.195e3) * ((1 + t25086) ** (-0.1e1 / 0.2e1)) * ((1 - t25086) ** (-0.1e1 / 0.2e1)) * ((t25107 + t25108) * np.exp((-1*1j) * (t25087 - 6 * phi2)) + (t25107 - t25108) * np.exp((-1*1j) * (t25087 + 6 * phi2)))

        if Bindx == 948:
            t25131 = np.cos(phi)
            t25130 = t25131 ** 2
            t25134 = t25130 ** 2
            t25133 = t25131 * t25130
            t25136 = t25133 ** 2
            t25138 = t25134 ** 2
            t25135 = t25131 * t25134
            t25140 = t25135 ** 2
            t25142 = t25136 ** 2
            t25137 = t25131 * t25136
            t25144 = t25137 ** 2
            t25146 = t25138 ** 2
            t25139 = t25131 * t25138
            t25148 = t25139 ** 2
            t25150 = t25140 ** 2
            t25153 = 126 * t25130 + 6191 * t25134 - 193720 * t25136 + 1704798 * t25138 - 7082092 * t25140 + 16329398 * t25142 - 22169592 * t25144 + 17671619 * t25146 - 7664994 * t25148 + 1398267 * t25150 - 1
            t25152 = 37106 * t25133 - 464571 * t25135 + 2693048 * t25137 - 8541862 * t25139 + (15781068 * t25140 - 16844302 * t25142 + 9152120 * t25144 - 915399 * t25146 - 1362414 * t25148 + 466089 * t25150 - 883) * t25131
            t25132 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.49445e5) * ((1 + t25131) ** (-0.1e1 / 0.2e1)) * ((1 - t25131) ** (-0.1e1 / 0.2e1)) * ((t25152 - t25153) * np.exp((-1*1j) * (t25132 - 12 * phi2)) + (t25152 + t25153) * np.exp((-1*1j) * (t25132 + 12 * phi2)))

        if Bindx == 949:
            t25176 = np.cos(phi)
            t25175 = t25176 ** 2
            t25179 = t25175 ** 2
            t25178 = t25176 * t25175
            t25181 = t25178 ** 2
            t25183 = t25179 ** 2
            t25180 = t25176 * t25179
            t25185 = t25180 ** 2
            t25187 = t25181 ** 2
            t25182 = t25176 * t25181
            t25189 = t25182 ** 2
            t25191 = t25183 ** 2
            t25184 = t25176 * t25183
            t25193 = t25184 ** 2
            t25195 = t25185 ** 2
            t25198 = 1 - 36 * t25175 + 359 * t25179 - 1472 * t25181 + 3066 * t25183 - 3304 * t25185 + 1246 * t25187 + 1056 * t25189 - 1483 * t25191 + 684 * t25193 - 117 * t25195
            t25197 = -66 * t25178 + 42 * t25180 + 856 * t25182 - 3304 * t25184 + (5796 * t25185 - 5684 * t25187 + 3128 * t25189 - 816 * t25191 + 14 * t25193 + 26 * t25195 + 8) * t25176
            t25177 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.161159235e9) * ((1 + t25176) ** (-0.1e1 / 0.2e1)) * ((1 - t25176) ** (-0.1e1 / 0.2e1)) * ((t25197 + t25198) * np.exp((-1*1j) * (t25177 - 18 * phi2)) + (t25197 - t25198) * np.exp((-1*1j) * (t25177 + 18 * phi2)))

        if Bindx == 950:
            t25210 = np.sin(phi)
            t25208 = t25210 ** 2
            t25199 = np.cos(phi)
            t25200 = t25199 ** 2
            t25201 = t25200 ** 2
            t25202 = t25200 * t25201
            t25205 = t25202 ** 2
            t25203 = t25201 ** 2
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.exp((-4*1j) * phi1) * np.sqrt(0.5720330e7) * t25208 ** 2 * (81900 * t25201 - 950040 * t25202 + 24542700 * t25205 + 13 + (5259150 + 6486285 * t25203) * t25203 + (-15426840 * t25203 - 19957800 * t25205 - 2600) * t25200)

        if Bindx == 951:
            t25232 = np.cos(phi)
            t25231 = t25232 ** 2
            t25234 = t25232 * t25231
            t25235 = t25231 ** 2
            t25236 = t25232 * t25235
            t25237 = t25234 ** 2
            t25238 = t25232 * t25237
            t25239 = t25235 ** 2
            t25240 = t25232 * t25239
            t25241 = t25236 ** 2
            t25243 = t25237 ** 2
            t25245 = t25238 ** 2
            t25247 = t25239 ** 2
            t25249 = t25240 ** 2
            t25253 = 2627982 * t25234 - 46500824 * t25236 + 371777976 * t25238 - 1603661604 * t25240 + (4053537060 * t25241 - 6184868280 * t25243 + 5605682136 * t25245 - 2778724494 * t25247 + 580173246 * t25249 - 43198) * t25232
            t25252 = -163208 * t25231 + 5100077 * t25235 - 63577904 * t25237 + 412341606 * t25239 + 3661905690 * t25243 - 5344159440 * t25245 + 4730653971 * t25247 - 2320692984 * t25249 + 887 + (-1564886400 + 483477705 * t25241) * t25241
            t25233 = 2 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6) * ((t25252 - t25253) * np.exp((-2*1j) * (t25233 - 3 * phi2)) + (t25252 + t25253) * np.exp((-2*1j) * (t25233 + 3 * phi2))) * np.sqrt(0.195e3)

        if Bindx == 952:
            t25275 = np.cos(phi)
            t25274 = t25275 ** 2
            t25276 = t25275 * t25274
            t25277 = t25274 ** 2
            t25278 = t25275 * t25277
            t25279 = t25276 ** 2
            t25280 = t25275 * t25279
            t25281 = t25277 ** 2
            t25282 = t25275 * t25281
            t25283 = t25278 ** 2
            t25285 = t25279 ** 2
            t25287 = t25280 ** 2
            t25289 = t25281 ** 2
            t25291 = t25282 ** 2
            t25295 = -91788 * t25276 + 1265552 * t25278 - 8312880 * t25280 + 30443288 * t25282 + (-66451688 * t25283 + 88303568 * t25285 - 70021232 * t25287 + 30456180 * t25289 - 5593068 * t25291 + 2068) * t25275
            t25294 = 23270 * t25274 - 478391 * t25277 + 3663176 * t25279 - 13545366 * t25281 - 25563030 * t25285 + 5956936 * t25287 + 10478409 * t25289 - 9250074 * t25291 - 179 + (26384804 + 2330445 * t25283) * t25283
            tfunc[..., c] = (0.123e3 / 0.1048576e7) * ((t25294 + t25295) * np.exp((-4*1j) * (phi1 - 3 * phi2)) + (t25294 - t25295) * np.exp((-4*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.49445e5)

        if Bindx == 953:
            t25317 = np.cos(phi)
            t25316 = t25317 ** 2
            t25319 = t25317 * t25316
            t25320 = t25316 ** 2
            t25321 = t25317 * t25320
            t25322 = t25319 ** 2
            t25323 = t25317 * t25322
            t25324 = t25320 ** 2
            t25325 = t25317 * t25324
            t25326 = t25321 ** 2
            t25328 = t25322 ** 2
            t25330 = t25323 ** 2
            t25332 = t25324 ** 2
            t25334 = t25325 ** 2
            t25338 = 262 * t25319 - 984 * t25321 + 1400 * t25323 + 364 * t25325 + (-3948 * t25326 + 5768 * t25328 - 4136 * t25330 + 1530 * t25332 - 234 * t25334 - 22) * t25317
            t25337 = 40 * t25316 - 539 * t25320 + 2672 * t25322 - 6762 * t25324 - 8470 * t25328 + 3984 * t25330 - 677 * t25332 - 168 * t25334 - 1 + (9856 + 65 * t25326) * t25326
            t25318 = 2 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * ((t25337 + t25338) * np.exp((-2*1j) * (t25318 - 9 * phi2)) + (t25337 - t25338) * np.exp((-2*1j) * (t25318 + 9 * phi2))) * np.sqrt(0.161159235e9)

        if Bindx == 954:
            t25339 = np.cos(phi)
            t25340 = t25339 ** 2
            t25341 = t25340 ** 2
            t25342 = t25340 * t25341
            t25345 = t25342 ** 2
            t25343 = t25341 ** 2
            tfunc[..., c] = (0.41e2 / 0.131072e6*1j) * (835380 * t25341 - 6921720 * t25342 + 96282900 * t25345 + 663 + (29801850 + 19458855 * t25343) * t25343 + (-71524440 * t25343 - 67856520 * t25345 - 44200) * t25340) * t25339 * ((1 + t25339) ** (0.3e1 / 0.2e1)) * np.sqrt(0.504735e6) * np.exp((-3*1j) * phi1) * ((1 - t25339) ** (0.3e1 / 0.2e1))

        if Bindx == 955:
            t25370 = np.cos(phi)
            t25369 = t25370 ** 2
            t25372 = t25369 ** 2
            t25371 = t25370 * t25369
            t25374 = t25371 ** 2
            t25376 = t25372 ** 2
            t25373 = t25370 * t25372
            t25378 = t25373 ** 2
            t25380 = t25374 ** 2
            t25375 = t25370 * t25374
            t25382 = t25375 ** 2
            t25384 = t25376 ** 2
            t25377 = t25370 * t25376
            t25386 = t25377 ** 2
            t25388 = t25378 ** 2
            t25391 = 104716 * t25369 - 3239699 * t25372 + 38815968 * t25374 - 236006802 * t25376 + 824223384 * t25378 - 1753454550 * t25380 + 2311221120 * t25382 - 1843564017 * t25384 + 815475708 * t25386 - 153575271 * t25388 - 557
            t25390 = -546286 * t25371 + 10312838 * t25373 - 90664408 * t25375 + 444396072 * t25377 + (-1326066180 * t25378 + 2507616660 * t25380 - 3022344504 * t25382 + 2250851472 * t25384 - 944203518 * t25386 + 170639190 * t25388 + 8664) * t25370
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.1105e4) * np.sqrt(0.2e1) * ((1 + t25370) ** (-0.1e1 / 0.2e1)) * ((1 - t25370) ** (-0.1e1 / 0.2e1)) * ((t25390 + t25391) * np.exp((-3*1j) * (phi1 - 2 * phi2)) + (t25390 - t25391) * np.exp((-3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 956:
            t25414 = np.cos(phi)
            t25413 = t25414 ** 2
            t25416 = t25413 ** 2
            t25415 = t25414 * t25413
            t25418 = t25415 ** 2
            t25420 = t25416 ** 2
            t25417 = t25414 * t25416
            t25422 = t25417 ** 2
            t25424 = t25418 ** 2
            t25419 = t25414 * t25418
            t25426 = t25419 ** 2
            t25428 = t25420 ** 2
            t25421 = t25414 * t25420
            t25430 = t25421 ** 2
            t25432 = t25422 ** 2
            t25435 = 4154 * t25413 - 93463 * t25416 + 834840 * t25418 - 3882174 * t25420 + 10612860 * t25422 - 18025574 * t25424 + 19286488 * t25426 - 12664835 * t25428 + 4667994 * t25430 - 740259 * t25432 - 31
            t25434 = 6998 * t25415 - 78085 * t25417 + 332648 * t25419 - 449066 * t25421 + (-891740 * t25422 + 4170862 * t25424 - 6622680 * t25426 + 5452527 * t25428 - 2332554 * t25430 + 411255 * t25432 - 165) * t25414
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt(0.2521695e7) * np.sqrt(0.2e1) * ((1 + t25414) ** (-0.1e1 / 0.2e1)) * ((1 - t25414) ** (-0.1e1 / 0.2e1)) * ((t25434 + t25435) * np.exp((-3*1j) * (phi1 - 4 * phi2)) + (t25434 - t25435) * np.exp((-3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 957:
            t25458 = np.cos(phi)
            t25457 = t25458 ** 2
            t25460 = t25457 ** 2
            t25459 = t25458 * t25457
            t25462 = t25459 ** 2
            t25464 = t25460 ** 2
            t25461 = t25458 * t25460
            t25466 = t25461 ** 2
            t25468 = t25462 ** 2
            t25463 = t25458 * t25462
            t25470 = t25463 ** 2
            t25472 = t25464 ** 2
            t25465 = t25458 * t25464
            t25474 = t25465 ** 2
            t25476 = t25466 ** 2
            t25479 = 1 - 44 * t25457 - 737 * t25460 + 7360 * t25462 - 27398 * t25464 + 56392 * t25466 - 71666 * t25468 + 57952 * t25470 - 29195 * t25472 + 8388 * t25474 - 1053 * t25476
            t25478 = 1778 * t25459 - 9514 * t25461 + 26504 * t25463 - 43288 * t25465 + (42140 * t25466 - 21868 * t25468 + 2024 * t25470 + 4256 * t25472 - 2302 * t25474 + 390 * t25476 - 120) * t25458
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.3159985e7) * np.sqrt(0.2e1) * ((1 + t25458) ** (-0.1e1 / 0.2e1)) * ((1 - t25458) ** (-0.1e1 / 0.2e1)) * ((t25478 + t25479) * np.exp((-3*1j) * (phi1 - 6 * phi2)) + (t25478 - t25479) * np.exp((-3*1j) * (phi1 + 6 * phi2)))

        if Bindx == 958:
            t25481 = np.cos(phi)
            t25482 = t25481 ** 2
            t25483 = t25482 ** 2
            t25485 = t25483 ** 2
            t25489 = t25485 ** 2
            t25484 = t25482 * t25483
            t25487 = t25484 ** 2
            t25480 = np.sin(phi)
            tfunc[..., c] = -(0.41e2 / 0.262144e6) * np.exp((-2*1j) * phi1) * np.sqrt(0.43890e5) * t25480 ** 2 * (-1524900 * t25483 + 19213740 * t25484 - 119399670 * t25485 - 822531060 * t25487 - 585262485 * t25489 - 221 + (411265530 * t25485 + 949074300 * t25487 + 149184555 * t25489 + 45747) * t25482)

        if Bindx == 959:
            t25512 = np.cos(phi)
            t25511 = t25512 ** 2
            t25513 = t25512 * t25511
            t25514 = t25511 ** 2
            t25515 = t25512 * t25514
            t25516 = t25513 ** 2
            t25517 = t25512 * t25516
            t25518 = t25514 ** 2
            t25519 = t25512 * t25518
            t25520 = t25515 ** 2
            t25522 = t25516 ** 2
            t25524 = t25517 ** 2
            t25526 = t25518 ** 2
            t25528 = t25519 ** 2
            t25532 = -24013 * t25513 + 436028 * t25515 - 3560580 * t25517 + 15608322 * t25519 + (-39888630 * t25520 + 61221900 * t25522 - 55547412 * t25524 + 27441975 * t25526 - 5687973 * t25528 + 383) * t25512
            t25531 = -5510 * t25511 + 172591 * t25514 - 2097304 * t25516 + 12954834 * t25518 + 99762030 * t25522 - 134094840 * t25524 + 109155681 * t25526 - 49295766 * t25528 + 29 + (-46031700 + 9479955 * t25520) * t25520
            tfunc[..., c] = (0.123e3 / 0.131072e6) * ((t25531 + t25532) * np.exp((-2*1j) * (phi1 - 3 * phi2)) + (t25531 - t25532) * np.exp((-2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.25415e5)

        if Bindx == 960:
            t25554 = np.cos(phi)
            t25553 = t25554 ** 2
            t25555 = t25554 * t25553
            t25556 = t25553 ** 2
            t25557 = t25554 * t25556
            t25558 = t25555 ** 2
            t25559 = t25554 * t25558
            t25560 = t25556 ** 2
            t25561 = t25554 * t25560
            t25562 = t25557 ** 2
            t25564 = t25558 ** 2
            t25566 = t25559 ** 2
            t25568 = t25560 ** 2
            t25570 = t25561 ** 2
            t25574 = -2242 * t25555 + 29192 * t25557 - 172392 * t25559 + 553884 * t25561 + (-1054620 * t25562 + 1227112 * t25564 - 858632 * t25566 + 332482 * t25568 - 54834 * t25570 + 50) * t25554
            t25573 = -136 * t25553 + 3227 * t25556 - 31280 * t25558 + 159786 * t25560 + 883926 * t25564 - 1016272 * t25566 + 709605 * t25568 - 275576 * t25570 + 1 + (-478976 + 45695 * t25562) * t25562
            tfunc[..., c] = (0.123e3 / 0.524288e6) * ((t25573 + t25574) * np.exp((-2*1j) * (phi1 - 6 * phi2)) + (t25573 - t25574) * np.exp((-2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.57998985e8)

        if Bindx == 961:
            t25596 = np.cos(phi)
            t25595 = t25596 ** 2
            t25597 = t25596 * t25595
            t25598 = t25595 ** 2
            t25599 = t25596 * t25598
            t25600 = t25597 ** 2
            t25601 = t25596 * t25600
            t25602 = t25598 ** 2
            t25603 = t25596 * t25602
            t25604 = t25599 ** 2
            t25606 = t25600 ** 2
            t25608 = t25601 ** 2
            t25610 = t25602 ** 2
            t25612 = t25603 ** 2
            t25616 = -237 * t25597 + 1356 * t25599 - 4116 * t25601 + 7602 * t25603 + (-9030 * t25604 + 6972 * t25606 - 3396 * t25608 + 951 * t25610 - 117 * t25612 + 15) * t25596
            t25615 = 46 * t25595 - 267 * t25598 + 600 * t25600 - 378 * t25602 + 2394 * t25606 - 2568 * t25608 + 1515 * t25610 - 482 * t25612 - 1 + (-924 + 65 * t25604) * t25604
            tfunc[..., c] = (0.123e3 / 0.262144e6) * ((t25615 + t25616) * np.exp((-2*1j) * (phi1 - 9 * phi2)) + (t25615 - t25616) * np.exp((-2*1j) * (phi1 + 9 * phi2))) * np.sqrt(0.72679655e8)

        if Bindx == 962:
            t25617 = np.cos(phi)
            t25637 = 1 - t25617
            t25618 = t25617 ** 2
            t25620 = t25618 ** 2
            t25624 = t25620 ** 2
            t25625 = t25617 * t25624
            t25619 = t25617 * t25618
            t25622 = t25619 ** 2
            t25623 = t25617 * t25622
            t25621 = t25617 * t25620
            tfunc[..., c] = (0.41e2 / 0.131072e6*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.105e3) * np.sqrt((1 + t25617)) * t25617 * (-t25637 * (7814045070 * t25621 ** 2 - 13223768580 * t25622 ** 2 + 13223768580 * t25623 ** 2 - 7195285845 * t25624 ** 2 + 1641030105 * t25625 ** 2 - 46189) + 2772725670 * t25624 - 2772725670 * t25625 - 573667380 * t25622 + 573667380 * t25623 + 63740820 * t25620 - 63740820 * t25621 - 3187041 * t25618 + 3187041 * t25619) * (t25637 ** (-0.1e1 / 0.2e1))

        if Bindx == 963:
            t25660 = np.cos(phi)
            t25659 = t25660 ** 2
            t25662 = t25659 ** 2
            t25661 = t25660 * t25659
            t25664 = t25661 ** 2
            t25666 = t25662 ** 2
            t25663 = t25660 * t25662
            t25668 = t25663 ** 2
            t25670 = t25664 ** 2
            t25665 = t25660 * t25664
            t25672 = t25665 ** 2
            t25674 = t25666 ** 2
            t25667 = t25660 * t25666
            t25676 = t25667 ** 2
            t25678 = t25668 ** 2
            t25681 = 192 * t25659 - 6051 * t25662 + 73648 * t25664 - 453546 * t25666 + 1599408 * t25668 - 3425190 * t25670 + 4530960 * t25672 - 3616677 * t25674 + 1596624 * t25676 - 299367 * t25678 - 1
            t25680 = -4098 * t25661 + 77682 * t25663 - 678376 * t25665 + 3270408 * t25667 + (-9516060 * t25668 + 17422620 * t25670 - 20216712 * t25672 + 14434344 * t25674 - 5787762 * t25676 + 997890 * t25678 + 64) * t25660
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.5311735e7) * np.sqrt(0.2e1) * ((1 + t25660) ** (-0.1e1 / 0.2e1)) * ((1 - t25660) ** (-0.1e1 / 0.2e1)) * ((t25680 + t25681) * np.exp((-1*1j) * (phi1 - 6 * phi2)) + (t25680 - t25681) * np.exp((-1*1j) * (phi1 + 6 * phi2)))

        if Bindx == 964:
            t25704 = np.cos(phi)
            t25703 = t25704 ** 2
            t25706 = t25703 ** 2
            t25705 = t25704 * t25703
            t25708 = t25705 ** 2
            t25710 = t25706 ** 2
            t25707 = t25704 * t25706
            t25712 = t25707 ** 2
            t25714 = t25708 ** 2
            t25709 = t25704 * t25708
            t25716 = t25709 ** 2
            t25718 = t25710 ** 2
            t25711 = t25704 * t25710
            t25720 = t25711 ** 2
            t25722 = t25712 ** 2
            t25725 = 138 * t25703 - 3117 * t25706 + 27256 * t25708 - 121554 * t25710 + 314364 * t25712 - 501458 * t25714 + 502392 * t25716 - 308781 * t25718 + 106634 * t25720 - 15873 * t25722 - 1
            t25724 = -1062 * t25705 + 14667 * t25707 - 94664 * t25709 + 343006 * t25711 + (-763428 * t25712 + 1087582 * t25714 - 997832 * t25716 + 571659 * t25718 - 186406 * t25720 + 26455 * t25722 + 23) * t25704
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.100180065e9) * np.sqrt(0.2e1) * ((1 + t25704) ** (-0.1e1 / 0.2e1)) * ((1 - t25704) ** (-0.1e1 / 0.2e1)) * ((t25724 + t25725) * np.exp((-1*1j) * (phi1 - 12 * phi2)) + (t25724 - t25725) * np.exp((-1*1j) * (phi1 + 12 * phi2)))

        if Bindx == 965:
            t25748 = np.cos(phi)
            t25747 = t25748 ** 2
            t25750 = t25747 ** 2
            t25749 = t25748 * t25747
            t25752 = t25749 ** 2
            t25754 = t25750 ** 2
            t25751 = t25748 * t25750
            t25756 = t25751 ** 2
            t25758 = t25752 ** 2
            t25753 = t25748 * t25752
            t25760 = t25753 ** 2
            t25762 = t25754 ** 2
            t25755 = t25748 * t25754
            t25764 = t25755 ** 2
            t25766 = t25756 ** 2
            t25769 = -3 + 144 * t25747 - 1161 * t25750 + 4464 * t25752 - 10206 * t25754 + 15120 * t25756 - 14994 * t25758 + 9936 * t25760 - 4239 * t25762 + 1056 * t25764 - 117 * t25766
            t25768 = -274 * t25749 + 1746 * t25751 - 6024 * t25753 + 12936 * t25755 + (-18396 * t25756 + 17724 * t25758 - 11496 * t25760 + 4824 * t25762 - 1186 * t25764 + 130 * t25766 + 16) * t25748
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.42077695e8) * np.sqrt(0.2e1) * ((1 + t25748) ** (-0.1e1 / 0.2e1)) * ((1 - t25748) ** (-0.1e1 / 0.2e1)) * ((t25768 + t25769) * np.exp((-1*1j) * (phi1 - 18 * phi2)) + (t25768 - t25769) * np.exp((-1*1j) * (phi1 + 18 * phi2)))

        if Bindx == 966:
            t25770 = np.cos(phi)
            t25771 = t25770 ** 2
            t25772 = t25771 ** 2
            t25774 = t25772 ** 2
            t25778 = t25774 ** 2
            t25773 = t25771 * t25772
            t25776 = t25773 ** 2
            t25775 = t25771 * t25774
            tfunc[..., c] = 0.14232080934225e14 / 0.262144e6 * t25778 + 0.5606577337725e13 / 0.131072e6 * t25776 + 0.617409517725e12 / 0.131072e6 * t25774 - 0.22867019175e11 / 0.32768e5 * t25773 + 0.13720211505e11 / 0.262144e6 * t25772 + 0.1893749e7 / 0.262144e6 + (-0.1193658400935e13 / 0.65536e5 + 0.1412926920405e13 / 0.262144e6 * t25775) * t25775 + (-0.3441745062525e13 / 0.131072e6 * t25778 - 0.2033154419175e13 / 0.32768e5 * t25776 - 0.198843645e9 / 0.131072e6) * t25771

        if Bindx == 967:
            t25781 = np.cos(phi)
            t25782 = t25781 ** 2
            t25783 = t25782 ** 2
            t25785 = t25783 ** 2
            t25789 = t25785 ** 2
            t25784 = t25782 * t25783
            t25787 = t25784 ** 2
            t25786 = t25782 * t25785
            tfunc[..., c] = 0.205e3 / 0.131072e6 * np.sqrt(0.22309287e8) * np.sqrt(0.2e1) * (6051 * t25783 - 73648 * t25784 + 453546 * t25785 + 3425190 * t25787 + 3616677 * t25789 + 1 + (-1599408 + 299367 * t25786) * t25786 + (-4530960 * t25787 - 1596624 * t25789 - 192) * t25782) * np.cos((6 * phi2))

        if Bindx == 968:
            t25792 = np.cos(phi)
            t25793 = t25792 ** 2
            t25794 = t25793 ** 2
            t25796 = t25794 ** 2
            t25800 = t25796 ** 2
            t25795 = t25793 * t25794
            t25798 = t25795 ** 2
            t25797 = t25793 * t25796
            tfunc[..., c] = 0.615e3 / 0.524288e6 * np.sqrt(0.46750697e8) * np.sqrt(0.2e1) * (3117 * t25794 - 27256 * t25795 + 121554 * t25796 + 501458 * t25798 + 308781 * t25800 + 1 + (-314364 + 15873 * t25797) * t25797 + (-502392 * t25798 - 106634 * t25800 - 138) * t25793) * np.cos((12 * phi2))

        if Bindx == 969:
            t25803 = np.cos(phi)
            t25804 = t25803 ** 2
            t25805 = t25804 ** 2
            t25807 = t25805 ** 2
            t25811 = t25807 ** 2
            t25806 = t25804 * t25805
            t25809 = t25806 ** 2
            t25808 = t25804 * t25807
            tfunc[..., c] = 0.205e3 / 0.262144e6 * np.sqrt(0.176726319e9) * np.sqrt(0.2e1) * (387 * t25805 - 1488 * t25806 + 3402 * t25807 + 4998 * t25809 + 1413 * t25811 + 1 + (-5040 + 39 * t25808) * t25808 + (-3312 * t25809 - 352 * t25811 - 48) * t25804) * np.cos((18 * phi2))

        if Bindx == 970:
            t25814 = np.cos(phi)
            t25815 = t25814 ** 2
            t25816 = t25815 ** 2
            t25817 = t25815 * t25816
            t25824 = 13223768580 * t25817 ** 2
            t25818 = t25816 ** 2
            t25822 = t25818 ** 2
            tfunc[..., c] = (-0.41e2 / 0.131072e6*1j) * np.exp((1j) * phi1) * np.sqrt(0.105e3) * np.sqrt((1 - t25814)) * np.sqrt((1 + t25814)) * t25814 * (-63740820 * t25816 + 573667380 * t25817 - 2772725670 * t25818 - t25824 - 7195285845 * t25822 - 46189 + (7814045070 * t25818 + 1641030105 * t25822 + 3187041 + t25824) * t25815)

        if Bindx == 971:
            t25847 = np.cos(phi)
            t25846 = t25847 ** 2
            t25849 = t25846 ** 2
            t25848 = t25847 * t25846
            t25851 = t25848 ** 2
            t25853 = t25849 ** 2
            t25850 = t25847 * t25849
            t25855 = t25850 ** 2
            t25857 = t25851 ** 2
            t25852 = t25847 * t25851
            t25859 = t25852 ** 2
            t25861 = t25853 ** 2
            t25854 = t25847 * t25853
            t25863 = t25854 ** 2
            t25865 = t25855 ** 2
            t25868 = -192 * t25846 + 6051 * t25849 - 73648 * t25851 + 453546 * t25853 - 1599408 * t25855 + 3425190 * t25857 - 4530960 * t25859 + 3616677 * t25861 - 1596624 * t25863 + 299367 * t25865 + 1
            t25867 = -4098 * t25848 + 77682 * t25850 - 678376 * t25852 + 3270408 * t25854 + (-9516060 * t25855 + 17422620 * t25857 - 20216712 * t25859 + 14434344 * t25861 - 5787762 * t25863 + 997890 * t25865 + 64) * t25847
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.5311735e7) * np.sqrt(0.2e1) * ((1 + t25847) ** (-0.1e1 / 0.2e1)) * ((1 - t25847) ** (-0.1e1 / 0.2e1)) * ((t25867 - t25868) * np.exp((1j) * (phi1 - 6 * phi2)) + (t25867 + t25868) * np.exp((1j) * (phi1 + 6 * phi2)))

        if Bindx == 972:
            t25891 = np.cos(phi)
            t25890 = t25891 ** 2
            t25893 = t25890 ** 2
            t25892 = t25891 * t25890
            t25895 = t25892 ** 2
            t25897 = t25893 ** 2
            t25894 = t25891 * t25893
            t25899 = t25894 ** 2
            t25901 = t25895 ** 2
            t25896 = t25891 * t25895
            t25903 = t25896 ** 2
            t25905 = t25897 ** 2
            t25898 = t25891 * t25897
            t25907 = t25898 ** 2
            t25909 = t25899 ** 2
            t25912 = -138 * t25890 + 3117 * t25893 - 27256 * t25895 + 121554 * t25897 - 314364 * t25899 + 501458 * t25901 - 502392 * t25903 + 308781 * t25905 - 106634 * t25907 + 15873 * t25909 + 1
            t25911 = -1062 * t25892 + 14667 * t25894 - 94664 * t25896 + 343006 * t25898 + (-763428 * t25899 + 1087582 * t25901 - 997832 * t25903 + 571659 * t25905 - 186406 * t25907 + 26455 * t25909 + 23) * t25891
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.100180065e9) * np.sqrt(0.2e1) * ((1 + t25891) ** (-0.1e1 / 0.2e1)) * ((1 - t25891) ** (-0.1e1 / 0.2e1)) * ((t25911 - t25912) * np.exp((1j) * (phi1 - 12 * phi2)) + (t25911 + t25912) * np.exp((1j) * (phi1 + 12 * phi2)))

        if Bindx == 973:
            t25935 = np.cos(phi)
            t25934 = t25935 ** 2
            t25937 = t25934 ** 2
            t25936 = t25935 * t25934
            t25939 = t25936 ** 2
            t25941 = t25937 ** 2
            t25938 = t25935 * t25937
            t25943 = t25938 ** 2
            t25945 = t25939 ** 2
            t25940 = t25935 * t25939
            t25947 = t25940 ** 2
            t25949 = t25941 ** 2
            t25942 = t25935 * t25941
            t25951 = t25942 ** 2
            t25953 = t25943 ** 2
            t25956 = -3 + 144 * t25934 - 1161 * t25937 + 4464 * t25939 - 10206 * t25941 + 15120 * t25943 - 14994 * t25945 + 9936 * t25947 - 4239 * t25949 + 1056 * t25951 - 117 * t25953
            t25955 = -274 * t25936 + 1746 * t25938 - 6024 * t25940 + 12936 * t25942 + (-18396 * t25943 + 17724 * t25945 - 11496 * t25947 + 4824 * t25949 - 1186 * t25951 + 130 * t25953 + 16) * t25935
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.42077695e8) * np.sqrt(0.2e1) * ((1 + t25935) ** (-0.1e1 / 0.2e1)) * ((1 - t25935) ** (-0.1e1 / 0.2e1)) * ((t25955 + t25956) * np.exp((1j) * (phi1 - 18 * phi2)) + (t25955 - t25956) * np.exp((1j) * (phi1 + 18 * phi2)))

        if Bindx == 974:
            t25958 = np.cos(phi)
            t25959 = t25958 ** 2
            t25960 = t25959 ** 2
            t25962 = t25960 ** 2
            t25966 = t25962 ** 2
            t25961 = t25959 * t25960
            t25964 = t25961 ** 2
            t25957 = np.sin(phi)
            tfunc[..., c] = -(0.41e2 / 0.262144e6) * np.exp((2*1j) * phi1) * np.sqrt(0.43890e5) * t25957 ** 2 * (-1524900 * t25960 + 19213740 * t25961 - 119399670 * t25962 - 822531060 * t25964 - 585262485 * t25966 - 221 + (411265530 * t25962 + 949074300 * t25964 + 149184555 * t25966 + 45747) * t25959)

        if Bindx == 975:
            t25989 = np.cos(phi)
            t25988 = t25989 ** 2
            t25990 = t25989 * t25988
            t25991 = t25988 ** 2
            t25992 = t25989 * t25991
            t25993 = t25990 ** 2
            t25994 = t25989 * t25993
            t25995 = t25991 ** 2
            t25996 = t25989 * t25995
            t25997 = t25992 ** 2
            t25999 = t25993 ** 2
            t26001 = t25994 ** 2
            t26003 = t25995 ** 2
            t26005 = t25996 ** 2
            t26009 = -24013 * t25990 + 436028 * t25992 - 3560580 * t25994 + 15608322 * t25996 + (-39888630 * t25997 + 61221900 * t25999 - 55547412 * t26001 + 27441975 * t26003 - 5687973 * t26005 + 383) * t25989
            t26008 = -5510 * t25988 + 172591 * t25991 - 2097304 * t25993 + 12954834 * t25995 + 99762030 * t25999 - 134094840 * t26001 + 109155681 * t26003 - 49295766 * t26005 + 29 + (-46031700 + 9479955 * t25997) * t25997
            tfunc[..., c] = (0.123e3 / 0.131072e6) * ((t26008 + t26009) * np.exp((2*1j) * (phi1 - 3 * phi2)) + (t26008 - t26009) * np.exp((2*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.25415e5)

        if Bindx == 976:
            t26031 = np.cos(phi)
            t26030 = t26031 ** 2
            t26032 = t26031 * t26030
            t26033 = t26030 ** 2
            t26034 = t26031 * t26033
            t26035 = t26032 ** 2
            t26036 = t26031 * t26035
            t26037 = t26033 ** 2
            t26038 = t26031 * t26037
            t26039 = t26034 ** 2
            t26041 = t26035 ** 2
            t26043 = t26036 ** 2
            t26045 = t26037 ** 2
            t26047 = t26038 ** 2
            t26051 = 2242 * t26032 - 29192 * t26034 + 172392 * t26036 - 553884 * t26038 + (1054620 * t26039 - 1227112 * t26041 + 858632 * t26043 - 332482 * t26045 + 54834 * t26047 - 50) * t26031
            t26050 = -136 * t26030 + 3227 * t26033 - 31280 * t26035 + 159786 * t26037 + 883926 * t26041 - 1016272 * t26043 + 709605 * t26045 - 275576 * t26047 + 1 + (-478976 + 45695 * t26039) * t26039
            tfunc[..., c] = (0.123e3 / 0.524288e6) * ((t26050 - t26051) * np.exp((2*1j) * (phi1 - 6 * phi2)) + (t26050 + t26051) * np.exp((2*1j) * (phi1 + 6 * phi2))) * np.sqrt(0.57998985e8)

        if Bindx == 977:
            t26073 = np.cos(phi)
            t26072 = t26073 ** 2
            t26074 = t26073 * t26072
            t26075 = t26072 ** 2
            t26076 = t26073 * t26075
            t26077 = t26074 ** 2
            t26078 = t26073 * t26077
            t26079 = t26075 ** 2
            t26080 = t26073 * t26079
            t26081 = t26076 ** 2
            t26083 = t26077 ** 2
            t26085 = t26078 ** 2
            t26087 = t26079 ** 2
            t26089 = t26080 ** 2
            t26093 = -237 * t26074 + 1356 * t26076 - 4116 * t26078 + 7602 * t26080 + (-9030 * t26081 + 6972 * t26083 - 3396 * t26085 + 951 * t26087 - 117 * t26089 + 15) * t26073
            t26092 = 46 * t26072 - 267 * t26075 + 600 * t26077 - 378 * t26079 + 2394 * t26083 - 2568 * t26085 + 1515 * t26087 - 482 * t26089 - 1 + (-924 + 65 * t26081) * t26081
            tfunc[..., c] = (0.123e3 / 0.262144e6) * ((t26092 + t26093) * np.exp((2*1j) * (phi1 - 9 * phi2)) + (t26092 - t26093) * np.exp((2*1j) * (phi1 + 9 * phi2))) * np.sqrt(0.72679655e8)

        if Bindx == 978:
            t26094 = np.cos(phi)
            t26095 = t26094 ** 2
            t26096 = t26095 ** 2
            t26097 = t26095 * t26096
            t26100 = t26097 ** 2
            t26098 = t26096 ** 2
            tfunc[..., c] = (0.41e2 / 0.131072e6*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.504735e6) * ((1 - t26094) ** (0.3e1 / 0.2e1)) * ((1 + t26094) ** (0.3e1 / 0.2e1)) * t26094 * (835380 * t26096 - 6921720 * t26097 + 96282900 * t26100 + 663 + (29801850 + 19458855 * t26098) * t26098 + (-71524440 * t26098 - 67856520 * t26100 - 44200) * t26095)

        if Bindx == 979:
            t26125 = np.cos(phi)
            t26124 = t26125 ** 2
            t26127 = t26124 ** 2
            t26126 = t26125 * t26124
            t26129 = t26126 ** 2
            t26131 = t26127 ** 2
            t26128 = t26125 * t26127
            t26133 = t26128 ** 2
            t26135 = t26129 ** 2
            t26130 = t26125 * t26129
            t26137 = t26130 ** 2
            t26139 = t26131 ** 2
            t26132 = t26125 * t26131
            t26141 = t26132 ** 2
            t26143 = t26133 ** 2
            t26146 = 104716 * t26124 - 3239699 * t26127 + 38815968 * t26129 - 236006802 * t26131 + 824223384 * t26133 - 1753454550 * t26135 + 2311221120 * t26137 - 1843564017 * t26139 + 815475708 * t26141 - 153575271 * t26143 - 557
            t26145 = -546286 * t26126 + 10312838 * t26128 - 90664408 * t26130 + 444396072 * t26132 + (-1326066180 * t26133 + 2507616660 * t26135 - 3022344504 * t26137 + 2250851472 * t26139 - 944203518 * t26141 + 170639190 * t26143 + 8664) * t26125
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.1105e4) * np.sqrt(0.2e1) * ((1 + t26125) ** (-0.1e1 / 0.2e1)) * ((1 - t26125) ** (-0.1e1 / 0.2e1)) * ((t26145 + t26146) * np.exp((3*1j) * (phi1 - 2 * phi2)) + (t26145 - t26146) * np.exp((3*1j) * (phi1 + 2 * phi2)))

        if Bindx == 980:
            t26169 = np.cos(phi)
            t26168 = t26169 ** 2
            t26171 = t26168 ** 2
            t26170 = t26169 * t26168
            t26173 = t26170 ** 2
            t26175 = t26171 ** 2
            t26172 = t26169 * t26171
            t26177 = t26172 ** 2
            t26179 = t26173 ** 2
            t26174 = t26169 * t26173
            t26181 = t26174 ** 2
            t26183 = t26175 ** 2
            t26176 = t26169 * t26175
            t26185 = t26176 ** 2
            t26187 = t26177 ** 2
            t26190 = 4154 * t26168 - 93463 * t26171 + 834840 * t26173 - 3882174 * t26175 + 10612860 * t26177 - 18025574 * t26179 + 19286488 * t26181 - 12664835 * t26183 + 4667994 * t26185 - 740259 * t26187 - 31
            t26189 = 6998 * t26170 - 78085 * t26172 + 332648 * t26174 - 449066 * t26176 + (-891740 * t26177 + 4170862 * t26179 - 6622680 * t26181 + 5452527 * t26183 - 2332554 * t26185 + 411255 * t26187 - 165) * t26169
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt(0.2521695e7) * np.sqrt(0.2e1) * ((1 + t26169) ** (-0.1e1 / 0.2e1)) * ((1 - t26169) ** (-0.1e1 / 0.2e1)) * ((t26189 + t26190) * np.exp((3*1j) * (phi1 - 4 * phi2)) + (t26189 - t26190) * np.exp((3*1j) * (phi1 + 4 * phi2)))

        if Bindx == 981:
            t26213 = np.cos(phi)
            t26212 = t26213 ** 2
            t26215 = t26212 ** 2
            t26214 = t26213 * t26212
            t26217 = t26214 ** 2
            t26219 = t26215 ** 2
            t26216 = t26213 * t26215
            t26221 = t26216 ** 2
            t26223 = t26217 ** 2
            t26218 = t26213 * t26217
            t26225 = t26218 ** 2
            t26227 = t26219 ** 2
            t26220 = t26213 * t26219
            t26229 = t26220 ** 2
            t26231 = t26221 ** 2
            t26234 = 1 - 44 * t26212 - 737 * t26215 + 7360 * t26217 - 27398 * t26219 + 56392 * t26221 - 71666 * t26223 + 57952 * t26225 - 29195 * t26227 + 8388 * t26229 - 1053 * t26231
            t26233 = 1778 * t26214 - 9514 * t26216 + 26504 * t26218 - 43288 * t26220 + (42140 * t26221 - 21868 * t26223 + 2024 * t26225 + 4256 * t26227 - 2302 * t26229 + 390 * t26231 - 120) * t26213
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.3159985e7) * np.sqrt(0.2e1) * ((1 + t26213) ** (-0.1e1 / 0.2e1)) * ((1 - t26213) ** (-0.1e1 / 0.2e1)) * ((t26233 + t26234) * np.exp((3*1j) * (phi1 - 6 * phi2)) + (t26233 - t26234) * np.exp((3*1j) * (phi1 + 6 * phi2)))

        if Bindx == 982:
            t26246 = np.sin(phi)
            t26244 = t26246 ** 2
            t26235 = np.cos(phi)
            t26236 = t26235 ** 2
            t26237 = t26236 ** 2
            t26238 = t26236 * t26237
            t26241 = t26238 ** 2
            t26239 = t26237 ** 2
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.exp((4*1j) * phi1) * np.sqrt(0.5720330e7) * t26244 ** 2 * (81900 * t26237 - 950040 * t26238 + 24542700 * t26241 + 13 + (5259150 + 6486285 * t26239) * t26239 + (-15426840 * t26239 - 19957800 * t26241 - 2600) * t26236)

        if Bindx == 983:
            t26268 = np.cos(phi)
            t26267 = t26268 ** 2
            t26270 = t26268 * t26267
            t26271 = t26267 ** 2
            t26272 = t26268 * t26271
            t26273 = t26270 ** 2
            t26274 = t26268 * t26273
            t26275 = t26271 ** 2
            t26276 = t26268 * t26275
            t26277 = t26272 ** 2
            t26279 = t26273 ** 2
            t26281 = t26274 ** 2
            t26283 = t26275 ** 2
            t26285 = t26276 ** 2
            t26289 = -2627982 * t26270 + 46500824 * t26272 - 371777976 * t26274 + 1603661604 * t26276 + (-4053537060 * t26277 + 6184868280 * t26279 - 5605682136 * t26281 + 2778724494 * t26283 - 580173246 * t26285 + 43198) * t26268
            t26288 = -163208 * t26267 + 5100077 * t26271 - 63577904 * t26273 + 412341606 * t26275 + 3661905690 * t26279 - 5344159440 * t26281 + 4730653971 * t26283 - 2320692984 * t26285 + 887 + (-1564886400 + 483477705 * t26277) * t26277
            t26269 = 2 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6) * ((t26288 + t26289) * np.exp((2*1j) * (t26269 - 3 * phi2)) + (t26288 - t26289) * np.exp((2*1j) * (t26269 + 3 * phi2))) * np.sqrt(0.195e3)

        if Bindx == 984:
            t26311 = np.cos(phi)
            t26310 = t26311 ** 2
            t26312 = t26311 * t26310
            t26313 = t26310 ** 2
            t26314 = t26311 * t26313
            t26315 = t26312 ** 2
            t26316 = t26311 * t26315
            t26317 = t26313 ** 2
            t26318 = t26311 * t26317
            t26319 = t26314 ** 2
            t26321 = t26315 ** 2
            t26323 = t26316 ** 2
            t26325 = t26317 ** 2
            t26327 = t26318 ** 2
            t26331 = 91788 * t26312 - 1265552 * t26314 + 8312880 * t26316 - 30443288 * t26318 + (66451688 * t26319 - 88303568 * t26321 + 70021232 * t26323 - 30456180 * t26325 + 5593068 * t26327 - 2068) * t26311
            t26330 = 23270 * t26310 - 478391 * t26313 + 3663176 * t26315 - 13545366 * t26317 - 25563030 * t26321 + 5956936 * t26323 + 10478409 * t26325 - 9250074 * t26327 - 179 + (26384804 + 2330445 * t26319) * t26319
            tfunc[..., c] = (0.123e3 / 0.1048576e7) * ((t26330 - t26331) * np.exp((4*1j) * (phi1 - 3 * phi2)) + (t26330 + t26331) * np.exp((4*1j) * (phi1 + 3 * phi2))) * np.sqrt(0.49445e5)

        if Bindx == 985:
            t26353 = np.cos(phi)
            t26352 = t26353 ** 2
            t26355 = t26353 * t26352
            t26356 = t26352 ** 2
            t26357 = t26353 * t26356
            t26358 = t26355 ** 2
            t26359 = t26353 * t26358
            t26360 = t26356 ** 2
            t26361 = t26353 * t26360
            t26362 = t26357 ** 2
            t26364 = t26358 ** 2
            t26366 = t26359 ** 2
            t26368 = t26360 ** 2
            t26370 = t26361 ** 2
            t26374 = 262 * t26355 - 984 * t26357 + 1400 * t26359 + 364 * t26361 + (-3948 * t26362 + 5768 * t26364 - 4136 * t26366 + 1530 * t26368 - 234 * t26370 - 22) * t26353
            t26373 = 40 * t26352 - 539 * t26356 + 2672 * t26358 - 6762 * t26360 - 8470 * t26364 + 3984 * t26366 - 677 * t26368 - 168 * t26370 - 1 + (9856 + 65 * t26362) * t26362
            t26354 = 2 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * ((t26373 + t26374) * np.exp((2*1j) * (t26354 - 9 * phi2)) + (t26373 - t26374) * np.exp((2*1j) * (t26354 + 9 * phi2))) * np.sqrt(0.161159235e9)

        if Bindx == 986:
            t26375 = np.cos(phi)
            t26376 = t26375 ** 2
            t26377 = t26376 ** 2
            t26378 = t26376 * t26377
            t26381 = t26378 ** 2
            t26379 = t26377 ** 2
            tfunc[..., c] = (-0.123e3 / 0.131072e6*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.5720330e7) * ((1 - t26375) ** (0.5e1 / 0.2e1)) * ((1 + t26375) ** (0.5e1 / 0.2e1)) * t26375 * (-71253 * t26377 + 525915 * t26378 - 1928355 * t26379 - 3492615 * t26381 - 65 + (3681405 * t26379 + 1297257 * t26381 + 4095) * t26376)

        if Bindx == 987:
            t26405 = np.cos(phi)
            t26404 = t26405 ** 2
            t26408 = t26404 ** 2
            t26407 = t26405 * t26404
            t26410 = t26407 ** 2
            t26412 = t26408 ** 2
            t26409 = t26405 * t26408
            t26414 = t26409 ** 2
            t26416 = t26410 ** 2
            t26411 = t26405 * t26410
            t26418 = t26411 ** 2
            t26420 = t26412 ** 2
            t26413 = t26405 * t26412
            t26422 = t26413 ** 2
            t26424 = t26414 ** 2
            t26427 = 218340 * t26404 - 6511915 * t26408 + 75760352 * t26410 - 450558450 * t26412 + 1549913352 * t26414 - 3268737030 * t26416 + 4295350080 * t26418 - 3432118593 * t26420 + 1526771700 * t26422 - 290086623 * t26424 - 1213
            t26426 = -107650 * t26407 + 2561562 * t26409 - 29880520 * t26411 + 191906520 * t26413 + (-725274108 * t26414 + 1675106700 * t26416 - 2387449128 * t26418 + 2046699360 * t26420 - 966955410 * t26422 + 193391082 * t26424 + 1592) * t26405
            t26406 = 5 * phi1
            tfunc[..., c] = (0.41e2 / 0.131072e6*1j) * np.sqrt(0.195e3) * ((1 + t26405) ** (-0.1e1 / 0.2e1)) * ((1 - t26405) ** (-0.1e1 / 0.2e1)) * ((t26426 + t26427) * np.exp((1j) * (t26406 - 6 * phi2)) + (t26426 - t26427) * np.exp((1j) * (t26406 + 6 * phi2)))

        if Bindx == 988:
            t26450 = np.cos(phi)
            t26449 = t26450 ** 2
            t26453 = t26449 ** 2
            t26452 = t26450 * t26449
            t26455 = t26452 ** 2
            t26457 = t26453 ** 2
            t26454 = t26450 * t26453
            t26459 = t26454 ** 2
            t26461 = t26455 ** 2
            t26456 = t26450 * t26455
            t26463 = t26456 ** 2
            t26465 = t26457 ** 2
            t26458 = t26450 * t26457
            t26467 = t26458 ** 2
            t26469 = t26459 ** 2
            t26472 = 126 * t26449 + 6191 * t26453 - 193720 * t26455 + 1704798 * t26457 - 7082092 * t26459 + 16329398 * t26461 - 22169592 * t26463 + 17671619 * t26465 - 7664994 * t26467 + 1398267 * t26469 - 1
            t26471 = 37106 * t26452 - 464571 * t26454 + 2693048 * t26456 - 8541862 * t26458 + (15781068 * t26459 - 16844302 * t26461 + 9152120 * t26463 - 915399 * t26465 - 1362414 * t26467 + 466089 * t26469 - 883) * t26450
            t26451 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.49445e5) * ((1 + t26450) ** (-0.1e1 / 0.2e1)) * ((1 - t26450) ** (-0.1e1 / 0.2e1)) * ((t26471 - t26472) * np.exp((1j) * (t26451 - 12 * phi2)) + (t26471 + t26472) * np.exp((1j) * (t26451 + 12 * phi2)))

        if Bindx == 989:
            t26495 = np.cos(phi)
            t26494 = t26495 ** 2
            t26498 = t26494 ** 2
            t26497 = t26495 * t26494
            t26500 = t26497 ** 2
            t26502 = t26498 ** 2
            t26499 = t26495 * t26498
            t26504 = t26499 ** 2
            t26506 = t26500 ** 2
            t26501 = t26495 * t26500
            t26508 = t26501 ** 2
            t26510 = t26502 ** 2
            t26503 = t26495 * t26502
            t26512 = t26503 ** 2
            t26514 = t26504 ** 2
            t26517 = 1 - 36 * t26494 + 359 * t26498 - 1472 * t26500 + 3066 * t26502 - 3304 * t26504 + 1246 * t26506 + 1056 * t26508 - 1483 * t26510 + 684 * t26512 - 117 * t26514
            t26516 = -66 * t26497 + 42 * t26499 + 856 * t26501 - 3304 * t26503 + (5796 * t26504 - 5684 * t26506 + 3128 * t26508 - 816 * t26510 + 14 * t26512 + 26 * t26514 + 8) * t26495
            t26496 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.161159235e9) * ((1 + t26495) ** (-0.1e1 / 0.2e1)) * ((1 - t26495) ** (-0.1e1 / 0.2e1)) * ((t26516 + t26517) * np.exp((1j) * (t26496 - 18 * phi2)) + (t26516 - t26517) * np.exp((1j) * (t26496 + 18 * phi2)))

        if Bindx == 990:
            t26529 = np.sin(phi)
            t26526 = t26529 ** 2
            t26527 = t26529 * t26526
            t26518 = np.cos(phi)
            t26519 = t26518 ** 2
            t26520 = t26519 ** 2
            t26521 = t26519 * t26520
            t26524 = t26521 ** 2
            t26522 = t26520 ** 2
            tfunc[..., c] = -(0.205e3 / 0.131072e6) * np.exp((6*1j) * phi1) * np.sqrt(0.22309287e8) * t26527 ** 2 * (-5481 * t26520 + 56637 * t26521 - 267003 * t26522 - 698523 * t26524 - 1 + (623007 * t26522 + 299367 * t26524 + 189) * t26519)

        if Bindx == 991:
            t26551 = np.cos(phi)
            t26550 = t26551 ** 2
            t26552 = t26551 * t26550
            t26553 = t26550 ** 2
            t26554 = t26551 * t26553
            t26555 = t26552 ** 2
            t26556 = t26551 * t26555
            t26557 = t26553 ** 2
            t26558 = t26551 * t26557
            t26559 = t26554 ** 2
            t26561 = t26555 ** 2
            t26563 = t26556 ** 2
            t26565 = t26557 ** 2
            t26567 = t26558 ** 2
            t26571 = -12690623 * t26552 + 215763204 * t26554 - 1676112156 * t26556 + 7099732614 * t26558 + (-17788338594 * t26559 + 27110643156 * t26561 - 24690053292 * t26563 + 12351583053 * t26565 - 2610779607 * t26567 + 219477) * t26551
            t26570 = 494682 * t26550 - 12798633 * t26553 + 111181384 * t26555 - 361974366 * t26557 + 2906066046 * t26561 - 7976625624 * t26563 + 9867484233 * t26565 - 5995123542 * t26567 - 2843 + (10898316 + 1450433115 * t26559) * t26559
            tfunc[..., c] = (0.41e2 / 0.131072e6) * np.sqrt(0.2e1) * ((t26570 + t26571) * np.exp((6*1j) * (phi1 - phi2)) + (t26570 - t26571) * np.exp((6*1j) * (phi1 + phi2)))

        if Bindx == 992:
            t26593 = np.cos(phi)
            t26592 = t26593 ** 2
            t26594 = t26593 * t26592
            t26595 = t26592 ** 2
            t26596 = t26593 * t26595
            t26597 = t26594 ** 2
            t26598 = t26593 * t26597
            t26599 = t26595 ** 2
            t26600 = t26593 * t26599
            t26601 = t26596 ** 2
            t26603 = t26597 ** 2
            t26605 = t26598 ** 2
            t26607 = t26599 ** 2
            t26609 = t26600 ** 2
            t26613 = -31474 * t26594 + 308904 * t26596 - 1127880 * t26598 + 1046876 * t26600 + (3732132 * t26601 - 12130872 * t26603 + 14813528 * t26605 - 8548110 * t26607 + 1936062 * t26609 + 834) * t26593
            t26612 = 8040 * t26592 - 167793 * t26595 + 1425392 * t26597 - 6269022 * t26599 - 22394530 * t26603 + 17699856 * t26605 - 6145551 * t26607 - 286824 * t26609 - 67 + (15592704 + 537795 * t26601) * t26601
            tfunc[..., c] = (0.41e2 / 0.524288e6) * np.sqrt(0.385671e6) * np.sqrt(0.2e1) * ((t26612 - t26613) * np.exp((6*1j) * (phi1 - 2 * phi2)) + (t26612 + t26613) * np.exp((6*1j) * (phi1 + 2 * phi2)))

        if Bindx == 993:
            t26635 = np.cos(phi)
            t26634 = t26635 ** 2
            t26636 = t26635 * t26634
            t26637 = t26634 ** 2
            t26638 = t26635 * t26637
            t26639 = t26636 ** 2
            t26640 = t26635 * t26639
            t26641 = t26637 ** 2
            t26642 = t26635 * t26641
            t26643 = t26638 ** 2
            t26645 = t26639 ** 2
            t26647 = t26640 ** 2
            t26649 = t26641 ** 2
            t26651 = t26642 ** 2
            t26655 = 7 * t26636 - 276 * t26638 + 1260 * t26640 - 2534 * t26642 + (2562 * t26643 - 1092 * t26645 - 164 * t26647 + 315 * t26649 - 81 * t26651 + 3) * t26635
            t26654 = -30 * t26634 + 219 * t26637 - 568 * t26639 + 378 * t26641 - 2170 * t26645 + 1896 * t26647 - 747 * t26649 + 82 * t26651 + 1 + (924 + 15 * t26643) * t26643
            tfunc[..., c] = (0.123e3 / 0.262144e6) * np.sqrt(0.139671337e9) * np.sqrt(0.2e1) * ((t26654 + t26655) * np.exp((6*1j) * (phi1 - 3 * phi2)) + (t26654 - t26655) * np.exp((6*1j) * (phi1 + 3 * phi2)))

        if Bindx == 994:
            t26656 = np.cos(phi)
            t26657 = t26656 ** 2
            t26658 = t26657 ** 2
            t26660 = t26658 ** 2
            t26659 = t26657 * t26658
            tfunc[..., c] = (0.615e3 / 0.131072e6*1j) * np.exp((7*1j) * phi1) * np.sqrt(0.2124694e7) * ((1 - t26656) ** (0.7e1 / 0.2e1)) * ((1 + t26656) ** (0.7e1 / 0.2e1)) * t26656 * (18879 * t26658 + 346115 * t26660 + 21 + (-118668 + 232841 * t26659) * t26659 + (-465682 * t26660 - 1218) * t26657)

        if Bindx == 995:
            t26684 = np.cos(phi)
            t26683 = t26684 ** 2
            t26687 = t26683 ** 2
            t26688 = t26684 * t26687
            t26693 = t26688 ** 2
            t26704 = 107439490 * t26693 ** 2
            t26691 = t26687 ** 2
            t26692 = t26684 * t26691
            t26701 = t26692 ** 2
            t26699 = t26691 ** 2
            t26686 = t26684 * t26683
            t26689 = t26686 ** 2
            t26690 = t26684 * t26689
            t26697 = t26690 ** 2
            t26695 = t26689 ** 2
            t26685 = 7 * phi1
            t26674 = t26684 * t26693
            t26672 = t26684 * t26695
            t26670 = t26684 * t26697
            t26668 = t26684 * t26699
            t26666 = t26684 * t26701
            tfunc[..., c] = (-0.123e3 / 0.131072e6*1j) * np.sqrt((1 - t26684)) * np.sqrt(0.21e2) * ((1 + t26684) ** (-0.1e1 / 0.2e1)) * ((-118183439 * t26666 + 602226615 * t26668 - 1296793116 * t26670 + 1530892716 * t26672 - 1074245666 * t26674 - 166745 * t26683 + 13183 * t26684 - 830023 * t26686 + 4270254 * t26687 + 14514012 * t26688 - 42893044 * t26689 - 111424620 * t26690 + 224034954 * t26691 + 453830338 * t26692 - 693817982 * t26693 + 1353354600 * t26695 - 1685959428 * t26697 + 1303166127 * t26699 - 569429297 * t26701 + t26704 + 1071) * np.exp((1j) * (t26685 - 6 * phi2)) + (333062419 * t26666 - 1289839351 * t26668 + 2011059404 * t26670 - 1594959052 * t26672 + 655103098 * t26674 + 190969 * t26683 + 11041 * t26684 - 472309 * t26686 - 5572586 * t26687 + 4671172 * t26688 + 62078228 * t26689 - 6453348 * t26690 - 341912922 * t26691 - 112117538 * t26692 + 1035530782 * t26693 - 1772497168 * t26695 + 1621893092 * t26697 - 588899839 * t26699 - 118183439 * t26701 + t26704 - 1071) * np.exp((1j) * (t26685 + 6 * phi2)))

        if Bindx == 996:
            t26727 = np.cos(phi)
            t26726 = t26727 ** 2
            t26729 = t26727 * t26726
            t26730 = t26726 ** 2
            t26731 = t26727 * t26730
            t26732 = t26729 ** 2
            t26733 = t26727 * t26732
            t26734 = t26730 ** 2
            t26735 = t26727 * t26734
            t26736 = t26731 ** 2
            t26738 = t26732 ** 2
            t26740 = t26733 ** 2
            t26742 = t26734 ** 2
            t26744 = t26735 ** 2
            t26746 = t26736 ** 2
            t26749 = 2074 * t26729 - 35793 * t26731 + 290616 * t26733 - 1237322 * t26735 + (2983260 * t26736 - 4188378 * t26738 + 3315000 * t26740 - 1260873 * t26742 + 71706 * t26744 + 59755 * t26746 - 45) * t26727
            t26748 = 1482 * t26726 - 27489 * t26730 + 195960 * t26732 - 680778 * t26734 + 1184124 * t26736 - 733114 * t26738 - 751752 * t26740 + 1626135 * t26742 - 1065526 * t26744 + 250971 * t26746 - 13
            t26728 = 7 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.899899e6) * ((1 + t26727) ** (-0.1e1 / 0.2e1)) * ((1 - t26727) ** (-0.1e1 / 0.2e1)) * ((-t26748 + t26749) * np.exp((1j) * (t26728 - 12 * phi2)) + (t26748 + t26749) * np.exp((1j) * (t26728 + 12 * phi2)))

        if Bindx == 997:
            t26772 = np.cos(phi)
            t26771 = t26772 ** 2
            t26774 = t26772 * t26771
            t26775 = t26771 ** 2
            t26776 = t26772 * t26775
            t26777 = t26774 ** 2
            t26778 = t26772 * t26777
            t26779 = t26775 ** 2
            t26780 = t26772 * t26779
            t26781 = t26776 ** 2
            t26783 = t26777 ** 2
            t26785 = t26778 ** 2
            t26787 = t26779 ** 2
            t26789 = t26780 ** 2
            t26791 = t26781 ** 2
            t26794 = -42 * t26774 + 378 * t26776 - 1224 * t26778 + 1768 * t26780 + (-780 * t26781 - 948 * t26783 + 1432 * t26785 - 696 * t26787 + 102 * t26789 + 10 * t26791) * t26772
            t26793 = -1 + 24 * t26771 - 123 * t26775 + 80 * t26777 + 822 * t26779 - 2496 * t26781 + 3146 * t26783 - 1872 * t26785 + 315 * t26787 + 168 * t26789 - 63 * t26791
            t26773 = 7 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.2933098077e10) * ((1 + t26772) ** (-0.1e1 / 0.2e1)) * ((1 - t26772) ** (-0.1e1 / 0.2e1)) * ((t26793 + t26794) * np.exp((1j) * (t26773 - 18 * phi2)) + (-t26793 + t26794) * np.exp((1j) * (t26773 + 18 * phi2)))

        if Bindx == 998:
            t26805 = np.sin(phi)
            t26802 = t26805 ** 2
            t26803 = t26802 ** 2
            t26795 = np.cos(phi)
            t26796 = t26795 ** 2
            t26797 = t26796 ** 2
            t26799 = t26797 ** 2
            t26798 = t26796 * t26797
            tfunc[..., c] = (0.615e3 / 0.262144e6) * np.exp((8*1j) * phi1) * np.sqrt(0.1144066e7) * t26803 ** 2 * (13485 * t26797 + 445005 * t26799 + 3 + (-118668 + 432419 * t26798) * t26798 + (-731786 * t26799 - 522) * t26796)

        if Bindx == 999:
            t26827 = np.cos(phi)
            t26826 = t26827 ** 2
            t26829 = t26827 * t26826
            t26830 = t26826 ** 2
            t26831 = t26827 * t26830
            t26832 = t26829 ** 2
            t26833 = t26827 * t26832
            t26834 = t26830 ** 2
            t26835 = t26827 * t26834
            t26836 = t26831 ** 2
            t26838 = t26832 ** 2
            t26840 = t26833 ** 2
            t26842 = t26834 ** 2
            t26844 = t26835 ** 2
            t26848 = -579356 * t26829 + 9519824 * t26831 - 73467600 * t26833 + 314905896 * t26835 + (-806014632 * t26836 + 1258643152 * t26838 - 1173489872 * t26840 + 599399260 * t26842 - 128927388 * t26844 + 10716) * t26827
            t26847 = 114080 * t26826 - 2905307 * t26830 + 27611312 * t26832 - 126711162 * t26834 - 384960790 * t26838 + 167012624 * t26840 + 130104179 * t26842 - 171903184 * t26844 - 713 + (307919216 + 53719745 * t26836) * t26836
            t26828 = 4 * phi1
            tfunc[..., c] = (0.123e3 / 0.131072e6) * ((t26847 + t26848) * np.exp((2*1j) * (t26828 - 3 * phi2)) + (t26847 - t26848) * np.exp((2*1j) * (t26828 + 3 * phi2))) * np.sqrt(0.39e2)

        if Bindx == 1000:
            t26870 = np.cos(phi)
            t26869 = t26870 ** 2
            t26872 = t26870 * t26869
            t26873 = t26869 ** 2
            t26874 = t26870 * t26873
            t26875 = t26872 ** 2
            t26876 = t26870 * t26875
            t26877 = t26873 ** 2
            t26878 = t26870 * t26877
            t26879 = t26874 ** 2
            t26881 = t26875 ** 2
            t26883 = t26876 ** 2
            t26885 = t26877 ** 2
            t26887 = t26878 ** 2
            t26891 = 122552 * t26872 - 1372768 * t26874 + 7168928 * t26876 - 19520176 * t26878 + (27444560 * t26879 - 15223904 * t26881 - 5972576 * t26883 + 11085496 * t26885 - 3728712 * t26887 - 3400) * t26870
            t26890 = -11766 * t26869 + 149507 * t26873 - 275080 * t26875 - 2951026 * t26877 - 37708658 * t26881 + 41979256 * t26883 - 22174205 * t26885 + 3322378 * t26887 + 111 + (16892668 + 776815 * t26879) * t26879
            t26871 = 2 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * ((t26890 + t26891) * np.exp((4*1j) * (t26871 - 3 * phi2)) + (t26890 - t26891) * np.exp((4*1j) * (t26871 + 3 * phi2))) * np.sqrt(0.9889e4)

        if Bindx == 1001:
            t26913 = np.cos(phi)
            t26912 = t26913 ** 2
            t26915 = t26913 * t26912
            t26916 = t26912 ** 2
            t26917 = t26913 * t26916
            t26918 = t26915 ** 2
            t26919 = t26913 * t26918
            t26920 = t26916 ** 2
            t26921 = t26913 * t26920
            t26922 = t26917 ** 2
            t26924 = t26918 ** 2
            t26926 = t26919 ** 2
            t26928 = t26920 ** 2
            t26930 = t26921 ** 2
            t26934 = -532 * t26915 + 2864 * t26917 - 4784 * t26919 - 1352 * t26921 + (13000 * t26922 - 14928 * t26924 + 6096 * t26926 + 84 * t26928 - 468 * t26930 + 20) * t26913
            t26933 = 144 * t26912 - 123 * t26916 - 3120 * t26918 + 11622 * t26920 + 7306 * t26924 + 3568 * t26926 - 4525 * t26928 + 1088 * t26930 - 9 + (-16016 + 65 * t26922) * t26922
            t26914 = 4 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6) * ((t26933 + t26934) * np.exp((2*1j) * (t26914 - 9 * phi2)) + (t26933 - t26934) * np.exp((2*1j) * (t26914 + 9 * phi2))) * np.sqrt(0.32231847e8)

        if Bindx == 1002:
            t26935 = np.cos(phi)
            t26936 = t26935 ** 2
            t26937 = t26936 ** 2
            t26939 = t26937 ** 2
            tfunc[..., c] = (-0.205e3 / 0.131072e6*1j) * np.exp((9*1j) * phi1) * np.sqrt(0.99533742e8) * ((1 - t26935) ** (0.9e1 / 0.2e1)) * ((1 + t26935) ** (0.9e1 / 0.2e1)) * t26935 * (-6138 * t26937 - 63085 * t26939 - 9 + (30690 * t26937 + 44733 * t26939 + 465) * t26936)

        if Bindx == 1003:
            t26961 = np.cos(phi)
            t26960 = t26961 ** 2
            t26964 = t26960 ** 2
            t26968 = t26964 ** 2
            t26969 = t26961 * t26968
            t26978 = t26969 ** 2
            t26980 = 11114430 * t26961 * t26978
            t26976 = t26968 ** 2
            t26963 = t26961 * t26960
            t26966 = t26963 ** 2
            t26967 = t26961 * t26966
            t26974 = t26967 ** 2
            t26972 = t26966 ** 2
            t26965 = t26961 * t26964
            t26970 = t26965 ** 2
            t26962 = 3 * phi1
            t26951 = t26961 * t26970
            t26949 = t26961 * t26972
            t26947 = t26961 * t26974
            t26945 = t26961 * t26976
            tfunc[..., c] = (0.123e3 / 0.131072e6*1j) * ((1 - t26961) ** (0.3e1 / 0.2e1)) * np.sqrt(0.377e3) * ((1 + t26961) ** (-0.1e1 / 0.2e1)) * ((-61499846 * t26945 + 146404816 * t26947 - 195167072 * t26949 + 158406652 * t26951 + 6651 * t26960 - 5166 * t26961 + 266966 * t26963 + 57100 * t26964 - 3793552 * t26965 - 2126172 * t26966 + 23666592 * t26967 + 14969382 * t26968 - 79393820 * t26969 - 47316478 * t26970 + 80153228 * t26972 - 75772060 * t26974 + 37808561 * t26976 - 7780101 * t26978 - 111 + t26980) * np.exp((3*1j) * (t26962 - 2 * phi2)) + (58535998 * t26945 - 225636104 * t26947 + 263807768 * t26949 - 130463996 * t26951 - 26427 * t26960 - 4722 * t26961 + 200366 * t26963 + 897340 * t26964 - 2046472 * t26965 - 10508316 * t26966 + 5155224 * t26967 + 55308738 * t26968 + 19796260 * t26969 - 142156762 * t26970 + 165205324 * t26972 - 32305100 * t26974 - 88193977 * t26976 + 52237821 * t26978 + 111 + t26980) * np.exp((3*1j) * (t26962 + 2 * phi2)))

        if Bindx == 1004:
            t27003 = np.cos(phi)
            t27002 = t27003 ** 2
            t27006 = t27002 ** 2
            t27005 = t27003 * t27002
            t27008 = t27005 ** 2
            t27010 = t27006 ** 2
            t27007 = t27003 * t27006
            t27012 = t27007 ** 2
            t27014 = t27008 ** 2
            t27009 = t27003 * t27008
            t27016 = t27009 ** 2
            t27018 = t27010 ** 2
            t27011 = t27003 * t27010
            t27020 = t27011 ** 2
            t27022 = t27012 ** 2
            t27025 = 50666 * t27002 - 1114249 * t27006 + 10690808 * t27008 - 50981242 * t27010 + 131030588 * t27012 - 183187082 * t27014 + 122570488 * t27016 - 8957249 * t27018 - 32686614 * t27020 + 12584403 * t27022 - 517
            t27024 = -499514 * t27005 + 4381417 * t27007 - 15467192 * t27009 + 16328858 * t27011 + (39238628 * t27012 - 138964342 * t27014 + 169583432 * t27016 - 92555599 * t27018 + 15608006 * t27020 + 2330445 * t27022 + 15861) * t27003
            t27004 = 3 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.1023e4) * ((1 + t27003) ** (-0.1e1 / 0.2e1)) * ((1 - t27003) ** (-0.1e1 / 0.2e1)) * ((t27024 - t27025) * np.exp((3*1j) * (t27004 - 4 * phi2)) + (t27024 + t27025) * np.exp((3*1j) * (t27004 + 4 * phi2)))

        if Bindx == 1005:
            t27048 = np.cos(phi)
            t27047 = t27048 ** 2
            t27050 = t27047 ** 2
            t27049 = t27048 * t27047
            t27052 = t27049 ** 2
            t27054 = t27050 ** 2
            t27051 = t27048 * t27050
            t27056 = t27051 ** 2
            t27058 = t27052 ** 2
            t27053 = t27048 * t27052
            t27060 = t27053 ** 2
            t27062 = t27054 ** 2
            t27055 = t27048 * t27054
            t27064 = t27055 ** 2
            t27066 = t27056 ** 2
            t27069 = -568 * t27047 - 4723 * t27050 + 40528 * t27052 - 96122 * t27054 + 71968 * t27056 + 50778 * t27058 - 115152 * t27060 + 61347 * t27062 - 4968 * t27064 - 3159 * t27066 + 71
            t27068 = 4602 * t27049 - 16170 * t27051 - 312 * t27053 + 92248 * t27055 + (-176852 * t27056 + 123988 * t27058 - 7960 * t27060 - 28648 * t27062 + 9002 * t27064 + 390 * t27066 - 288) * t27048
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.370481e6) * ((1 + t27048) ** (-0.1e1 / 0.2e1)) * ((1 - t27048) ** (-0.1e1 / 0.2e1)) * ((t27068 + t27069) * np.exp((9*1j) * (phi1 - 2 * phi2)) + (t27068 - t27069) * np.exp((9*1j) * (phi1 + 2 * phi2)))

        if Bindx == 1006:
            t27080 = np.sin(phi)
            t27076 = t27080 ** 2
            t27078 = t27080 * t27076 ** 2
            t27070 = np.cos(phi)
            t27071 = t27070 ** 2
            t27072 = t27071 ** 2
            t27074 = t27072 ** 2
            tfunc[..., c] = -(0.123e3 / 0.131072e6) * np.exp((10*1j) * phi1) * np.sqrt(0.7540435e7) * t27078 ** 2 * (-10230 * t27072 - 189255 * t27074 - 3 + (71610 * t27072 + 164021 * t27074 + 465) * t27071)

        if Bindx == 1007:
            t27102 = np.cos(phi)
            t27101 = t27102 ** 2
            t27104 = t27102 * t27101
            t27105 = t27101 ** 2
            t27106 = t27102 * t27105
            t27107 = t27104 ** 2
            t27108 = t27102 * t27107
            t27109 = t27105 ** 2
            t27110 = t27102 * t27109
            t27111 = t27106 ** 2
            t27113 = t27107 ** 2
            t27115 = t27108 ** 2
            t27117 = t27109 ** 2
            t27119 = t27110 ** 2
            t27123 = 763 * t27104 - 24820 * t27106 + 305772 * t27108 - 1759166 * t27110 + (5410058 * t27111 - 9473476 * t27113 + 9479676 * t27115 - 5050241 * t27117 + 1111443 * t27119 - 9) * t27102
            t27122 = 2414 * t27101 - 56027 * t27105 + 500888 * t27107 - 2243226 * t27109 - 7868358 * t27113 + 5771704 * t27115 - 1321189 * t27117 - 740962 * t27119 - 17 + (5584292 + 370481 * t27111) * t27111
            t27103 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.131072e6) * np.sqrt(0.2e1) * np.sqrt(0.62205e5) * ((t27122 - t27123) * np.exp((2*1j) * (t27103 - 3 * phi2)) + (t27122 + t27123) * np.exp((2*1j) * (t27103 + 3 * phi2)))

        if Bindx == 1008:
            t27145 = np.cos(phi)
            t27144 = t27145 ** 2
            t27147 = t27145 * t27144
            t27148 = t27144 ** 2
            t27149 = t27145 * t27148
            t27150 = t27147 ** 2
            t27151 = t27145 * t27150
            t27152 = t27148 ** 2
            t27153 = t27145 * t27152
            t27154 = t27149 ** 2
            t27156 = t27150 ** 2
            t27158 = t27151 ** 2
            t27160 = t27152 ** 2
            t27162 = t27153 ** 2
            t27166 = 123222 * t27147 + 448712 * t27149 - 11516648 * t27151 + 55976492 * t27153 + (-121964076 * t27154 + 128031464 * t27156 - 49875144 * t27158 - 11471702 * t27160 + 10253958 * t27162 - 6278) * t27145
            t27165 = -129448 * t27144 + 1989317 * t27148 - 12320880 * t27150 + 35167990 * t27152 - 16294902 * t27156 + 83025008 * t27158 - 71233349 * t27160 + 17878696 * t27162 + 1471 + (-39792896 + 1708993 * t27154) * t27154
            t27146 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.155e3) * ((t27165 - t27166) * np.exp((2*1j) * (t27146 - 6 * phi2)) + (t27165 + t27166) * np.exp((2*1j) * (t27146 + 6 * phi2)))

        if Bindx == 1009:
            t27188 = np.cos(phi)
            t27187 = t27188 ** 2
            t27190 = t27188 * t27187
            t27191 = t27187 ** 2
            t27192 = t27188 * t27191
            t27193 = t27190 ** 2
            t27194 = t27188 * t27193
            t27195 = t27191 ** 2
            t27196 = t27188 * t27195
            t27197 = t27192 ** 2
            t27199 = t27193 ** 2
            t27201 = t27194 ** 2
            t27203 = t27195 ** 2
            t27205 = t27196 ** 2
            t27209 = 163 * t27190 - 68 * t27192 - 1924 * t27194 + 4706 * t27196 + (-3094 * t27197 - 1524 * t27199 + 2412 * t27201 - 537 * t27203 - 117 * t27205 - 17) * t27188
            t27208 = 6 * t27187 - 399 * t27191 + 1560 * t27193 - 1170 * t27195 + 5330 * t27199 - 2440 * t27201 - 449 * t27203 + 406 * t27205 + 3 + (-2860 + 13 * t27197) * t27197
            t27189 = 5 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.61129365e8) * ((t27208 + t27209) * np.exp((2*1j) * (t27189 - 9 * phi2)) + (t27208 - t27209) * np.exp((2*1j) * (t27189 + 9 * phi2)))

        if Bindx == 1010:
            t27210 = np.cos(phi)
            t27211 = t27210 ** 2
            t27212 = t27211 ** 2
            tfunc[..., c] = (0.615e3 / 0.131072e6*1j) * np.exp((11*1j) * phi1) * np.sqrt(0.93501394e8) * ((1 - t27210) ** (0.11e2 / 0.2e1)) * ((1 + t27210) ** (0.11e2 / 0.2e1)) * t27210 * (-132 * t27211 + 3 + (-4884 * t27211 + 1386 + 5291 * t27212) * t27212)

        if Bindx == 1011:
            t27234 = np.cos(phi)
            t27233 = t27234 ** 2
            t27237 = t27233 ** 2
            t27241 = t27237 ** 2
            t27242 = t27234 * t27241
            t27252 = 119510 * t27242 ** 2
            t27249 = t27241 ** 2
            t27236 = t27234 * t27233
            t27239 = t27236 ** 2
            t27240 = t27234 * t27239
            t27247 = t27240 ** 2
            t27245 = t27239 ** 2
            t27238 = t27234 * t27237
            t27243 = t27238 ** 2
            t27235 = 11 * phi1
            t27224 = t27234 * t27243
            t27222 = t27234 * t27245
            t27220 = t27234 * t27247
            t27218 = t27234 * t27249
            tfunc[..., c] = (-0.123e3 / 0.131072e6*1j) * ((1 - t27234) ** (0.5e1 / 0.2e1)) * np.sqrt(0.385671e6) * ((1 + t27234) ** (-0.1e1 / 0.2e1)) * ((-35853 * t27218 + 148444 * t27220 - 218824 * t27222 + 102012 * t27224 + 834 * t27233 + 143 * t27234 - 4684 * t27236 - 23424 * t27237 + 35520 * t27238 + 204052 * t27239 - 91276 * t27240 - 803502 * t27241 + 64518 * t27242 + 1730664 * t27243 - 2197080 * t27245 + 1650156 * t27247 - 681207 * t27249 - 3 + t27252) * np.exp((1j) * (t27235 - 6 * phi2)) + (752913 * t27218 + 951048 * t27220 - 3881780 * t27222 + 2977368 * t27224 + 78 * t27233 + 161 * t27234 - 7000 * t27236 - 14060 * t27237 + 69804 * t27238 + 212688 * t27239 - 158856 * t27240 - 1091790 * t27241 - 588970 * t27242 + 2131724 * t27243 - 676396 * t27245 - 2252160 * t27247 + 1685091 * t27249 + 3 + t27252) * np.exp((1j) * (t27235 + 6 * phi2)))

        if Bindx == 1012:
            t27275 = np.cos(phi)
            t27274 = t27275 ** 2
            t27278 = t27274 ** 2
            t27277 = t27275 * t27274
            t27280 = t27277 ** 2
            t27282 = t27278 ** 2
            t27279 = t27275 * t27278
            t27284 = t27279 ** 2
            t27286 = t27280 ** 2
            t27281 = t27275 * t27280
            t27288 = t27281 ** 2
            t27290 = t27282 ** 2
            t27283 = t27275 * t27282
            t27292 = t27283 ** 2
            t27294 = t27284 ** 2
            t27297 = 933270 * t27274 - 10382845 * t27278 + 34738792 * t27280 + 23611302 * t27282 - 404056796 * t27284 + 990955966 * t27286 - 1064260824 * t27288 + 454578487 * t27290 + 30291382 * t27292 - 56396769 * t27294 - 11965
            t27296 = -2721510 * t27277 + 33686961 * t27279 - 185130088 * t27281 + 499655442 * t27283 + (-634015044 * t27284 + 170718826 * t27286 + 436665944 * t27288 - 443438523 * t27290 + 115948602 * t27292 + 8544965 * t27294 + 84425) * t27275
            t27276 = 11 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * ((1 + t27275) ** (-0.1e1 / 0.2e1)) * ((1 - t27275) ** (-0.1e1 / 0.2e1)) * ((t27296 + t27297) * np.exp((1j) * (t27276 - 12 * phi2)) + (t27296 - t27297) * np.exp((1j) * (t27276 + 12 * phi2)))

        if Bindx == 1013:
            t27320 = np.cos(phi)
            t27319 = t27320 ** 2
            t27323 = t27319 ** 2
            t27322 = t27320 * t27319
            t27325 = t27322 ** 2
            t27327 = t27323 ** 2
            t27324 = t27320 * t27323
            t27329 = t27324 ** 2
            t27331 = t27325 ** 2
            t27326 = t27320 * t27325
            t27333 = t27326 ** 2
            t27335 = t27327 ** 2
            t27328 = t27320 * t27327
            t27337 = t27328 ** 2
            t27339 = t27329 ** 2
            t27342 = -37 - 444 * t27319 + 6381 * t27323 - 14272 * t27325 - 15522 * t27327 + 80808 * t27329 - 79222 * t27331 + 3168 * t27333 + 29271 * t27335 - 8844 * t27337 - 1287 * t27339
            t27341 = -1386 * t27322 - 5742 * t27324 + 37752 * t27326 - 53768 * t27328 + (-8268 * t27329 + 72252 * t27331 - 45992 * t27333 - 336 * t27335 + 5094 * t27337 + 130 * t27339 + 264) * t27320
            t27321 = 11 * phi1
            tfunc[..., c] = (0.41e2 / 0.262144e6*1j) * np.sqrt(0.394383e6) * ((1 + t27320) ** (-0.1e1 / 0.2e1)) * ((1 - t27320) ** (-0.1e1 / 0.2e1)) * ((t27341 + t27342) * np.exp((1j) * (t27321 - 18 * phi2)) + (t27341 - t27342) * np.exp((1j) * (t27321 + 18 * phi2)))

        if Bindx == 1014:
            t27352 = np.sin(phi)
            t27348 = t27352 ** 2
            t27349 = t27352 * t27348
            t27350 = t27349 ** 2
            t27343 = np.cos(phi)
            t27344 = t27343 ** 2
            t27345 = t27344 ** 2
            tfunc[..., c] = (0.615e3 / 0.524288e6) * np.exp((12*1j) * phi1) * np.sqrt(0.46750697e8) * t27350 ** 2 * (-132 * t27344 + 1 + (-11396 * t27344 + 2310 + 15873 * t27345) * t27345)

        if Bindx == 1015:
            t27374 = np.cos(phi)
            t27373 = t27374 ** 2
            t27376 = t27374 * t27373
            t27377 = t27373 ** 2
            t27378 = t27374 * t27377
            t27379 = t27376 ** 2
            t27380 = t27374 * t27379
            t27381 = t27377 ** 2
            t27382 = t27374 * t27381
            t27383 = t27378 ** 2
            t27385 = t27379 ** 2
            t27387 = t27380 ** 2
            t27389 = t27381 ** 2
            t27391 = t27382 ** 2
            t27395 = -31474 * t27376 + 308904 * t27378 - 1127880 * t27380 + 1046876 * t27382 + (3732132 * t27383 - 12130872 * t27385 + 14813528 * t27387 - 8548110 * t27389 + 1936062 * t27391 + 834) * t27374
            t27394 = 8040 * t27373 - 167793 * t27377 + 1425392 * t27379 - 6269022 * t27381 - 22394530 * t27385 + 17699856 * t27387 - 6145551 * t27389 - 286824 * t27391 - 67 + (15592704 + 537795 * t27383) * t27383
            t27375 = 2 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.385671e6) * ((t27394 - t27395) * np.exp((6*1j) * (t27375 - phi2)) + (t27394 + t27395) * np.exp((6*1j) * (t27375 + phi2)))

        if Bindx == 1016:
            t27417 = np.cos(phi)
            t27416 = t27417 ** 2
            t27418 = t27417 * t27416
            t27419 = t27416 ** 2
            t27420 = t27417 * t27419
            t27421 = t27418 ** 2
            t27422 = t27417 * t27421
            t27423 = t27419 ** 2
            t27424 = t27417 * t27423
            t27425 = t27420 ** 2
            t27427 = t27421 ** 2
            t27429 = t27422 ** 2
            t27431 = t27423 ** 2
            t27433 = t27424 ** 2
            t27437 = -62120740 * t27418 + 467492784 * t27420 - 1356745104 * t27422 + 692997448 * t27424 + (4168174920 * t27425 - 8682850704 * t27427 + 5958918064 * t27429 - 635413284 * t27431 - 553713732 * t27433 + 2736060) * t27417
            t27436 = 3904230 * t27416 + 23251305 * t27419 - 619985080 * t27421 + 3234599082 * t27423 + 6387519658 * t27427 - 4339896 * t27429 - 3397850775 * t27431 + 1385861862 * t27433 - 59155 + (-7089281628 + 76904685 * t27425) * t27425
            tfunc[..., c] = (0.41e2 / 0.2097152e7) * np.sqrt(0.2e1) * ((t27436 + t27437) * np.exp((12*1j) * (phi1 - phi2)) + (t27436 - t27437) * np.exp((12*1j) * (phi1 + phi2)))

        if Bindx == 1017:
            t27459 = np.cos(phi)
            t27458 = t27459 ** 2
            t27461 = t27459 * t27458
            t27462 = t27458 ** 2
            t27463 = t27459 * t27462
            t27464 = t27461 ** 2
            t27465 = t27459 * t27464
            t27466 = t27462 ** 2
            t27467 = t27459 * t27466
            t27468 = t27463 ** 2
            t27470 = t27464 ** 2
            t27472 = t27465 ** 2
            t27474 = t27466 ** 2
            t27476 = t27467 ** 2
            t27480 = -74 * t27461 - 23064 * t27463 + 55224 * t27465 + 18252 * t27467 + (-138060 * t27468 + 86088 * t27470 + 25112 * t27472 - 21942 * t27474 - 2106 * t27476 + 570) * t27459
            t27479 = -1608 * t27458 + 10671 * t27462 + 5200 * t27464 - 90558 * t27466 + 27326 * t27470 - 90192 * t27472 + 19665 * t27474 + 9544 * t27476 - 67 + (109824 + 195 * t27468) * t27468
            t27460 = 2 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.394383e6) * ((t27479 + t27480) * np.exp((6*1j) * (t27460 - 3 * phi2)) + (t27479 - t27480) * np.exp((6*1j) * (t27460 + 3 * phi2)))

        if Bindx == 1018:
            t27481 = np.cos(phi)
            t27482 = t27481 ** 2
            t27483 = t27482 ** 2
            tfunc[..., c] = (-0.615e3 / 0.262144e6*1j) * np.exp((13*1j) * phi1) * np.sqrt(0.3085546002e10) * ((1 - t27481) ** (0.13e2 / 0.2e1)) * ((1 + t27481) ** (0.13e2 / 0.2e1)) * t27481 * (-259 * t27483 - 1 + (481 * t27483 + 35) * t27482)

        if Bindx == 1019:
            t27503 = np.cos(phi)
            t27502 = t27503 ** 2
            t27506 = t27502 ** 2
            t27510 = t27506 ** 2
            t27518 = t27510 ** 2
            t27520 = 358530 * t27503 * t27518
            t27505 = t27503 * t27502
            t27508 = t27505 ** 2
            t27509 = t27503 * t27508
            t27516 = t27509 ** 2
            t27514 = t27508 ** 2
            t27507 = t27503 * t27506
            t27512 = t27507 ** 2
            t27504 = 13 * phi1
            t27495 = t27503 * t27510
            t27493 = t27503 * t27512
            t27491 = t27503 * t27514
            t27489 = t27503 * t27516
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * ((1 - t27503) ** (0.7e1 / 0.2e1)) * np.sqrt(0.11687e5) * ((1 + t27503) ** (-0.1e1 / 0.2e1)) * ((-2079474 * t27489 + 5056038 * t27491 - 6619290 * t27493 + 4957266 * t27495 - 13518 * t27502 - 444 * t27503 - 17502 * t27505 + 198222 * t27506 + 397890 * t27507 - 844694 * t27508 - 2053014 * t27509 + 1699164 * t27510 - 1846794 * t27512 + 1100002 * t27514 - 328338 * t27516 + 35853 * t27518 + 103 + t27520) * np.exp((1j) * (t27504 - 6 * phi2)) + (9106662 * t27489 + 6822270 * t27491 - 18912194 * t27493 + 6433130 * t27495 + 6670 * t27502 - 1268 * t27503 + 67370 * t27505 + 35490 * t27506 - 680694 * t27507 - 1482474 * t27508 + 1131570 * t27509 + 7213140 * t27510 - 7424054 * t27512 - 10951570 * t27514 + 14095890 * t27516 + 2832387 * t27518 - 103 + t27520) * np.exp((1j) * (t27504 + 6 * phi2)))

        if Bindx == 1020:
            t27542 = np.cos(phi)
            t27541 = t27542 ** 2
            t27545 = t27541 ** 2
            t27546 = t27542 * t27545
            t27551 = t27546 ** 2
            t27562 = 2330445 * t27551 ** 2
            t27549 = t27545 ** 2
            t27550 = t27542 * t27549
            t27559 = t27550 ** 2
            t27557 = t27549 ** 2
            t27544 = t27542 * t27541
            t27547 = t27544 ** 2
            t27548 = t27542 * t27547
            t27555 = t27548 ** 2
            t27553 = t27547 ** 2
            t27543 = 13 * phi1
            t27532 = t27542 * t27551
            t27530 = t27542 * t27553
            t27528 = t27542 * t27555
            t27526 = t27542 * t27557
            t27524 = t27542 * t27559
            tfunc[..., c] = (-0.41e2 / 0.524288e6*1j) * np.sqrt((1 - t27542)) * np.sqrt(0.33e2) * ((1 + t27542) ** (-0.1e1 / 0.2e1)) * ((-15847026 * t27524 - 184926 * t27526 + 145803832 * t27528 - 290425816 * t27530 + 225913636 * t27532 - 255520 * t27541 + 158930 * t27542 - 2579010 * t27544 + 5214145 * t27545 + 13077832 * t27546 - 38681968 * t27547 - 16424616 * t27548 + 128531598 * t27549 - 59492836 * t27550 - 200183984 * t27551 + 104479362 * t27553 + 80841392 * t27555 - 117275673 * t27557 + 34992528 * t27559 + 7675 + t27562) * np.exp((1j) * (t27543 - 12 * phi2)) + (20507916 * t27524 + 106524924 * t27526 - 273645328 * t27528 + 32659440 * t27530 + 306130344 * t27532 + 558030 * t27541 + 143580 * t27542 - 1765460 * t27544 - 9558615 * t27545 - 1694928 * t27546 + 50064872 * t27547 + 72322224 * t27548 - 72633990 * t27549 - 260658424 * t27550 - 119967276 * t27551 + 427564618 * t27553 - 338607768 * t27555 - 10565823 * t27557 + 71347470 * t27559 - 7675 + t27562) * np.exp((1j) * (t27543 + 12 * phi2)))

        if Bindx == 1021:
            t27585 = np.cos(phi)
            t27584 = t27585 ** 2
            t27587 = t27585 * t27584
            t27588 = t27584 ** 2
            t27589 = t27585 * t27588
            t27590 = t27587 ** 2
            t27591 = t27585 * t27590
            t27592 = t27588 ** 2
            t27593 = t27585 * t27592
            t27594 = t27589 ** 2
            t27596 = t27590 ** 2
            t27598 = t27591 ** 2
            t27600 = t27592 ** 2
            t27602 = t27593 ** 2
            t27604 = t27594 ** 2
            t27607 = -2106 * t27587 + 24882 * t27589 - 25064 * t27591 - 88712 * t27593 + (161460 * t27594 - 23908 * t27596 - 78920 * t27598 + 25152 * t27600 + 7606 * t27602 + 130 * t27604 - 520) * t27585
            t27606 = 1908 * t27584 - 6341 * t27588 - 26560 * t27590 + 99138 * t27592 - 42744 * t27594 - 122746 * t27596 + 111072 * t27598 + 7865 * t27600 - 20124 * t27602 - 1521 * t27604 + 53
            t27586 = 13 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * np.sqrt(0.11951e5) * ((1 + t27585) ** (-0.1e1 / 0.2e1)) * ((1 - t27585) ** (-0.1e1 / 0.2e1)) * ((t27606 + t27607) * np.exp((1j) * (t27586 - 18 * phi2)) + (-t27606 + t27607) * np.exp((1j) * (t27586 + 18 * phi2)))

        if Bindx == 1022:
            t27617 = np.sin(phi)
            t27612 = t27617 ** 2
            t27613 = t27617 * t27612
            t27615 = t27617 * t27613 ** 2
            t27608 = np.cos(phi)
            t27609 = t27608 ** 2
            t27610 = t27609 ** 2
            tfunc[..., c] = -(0.615e3 / 0.262144e6) * np.exp((14*1j) * phi1) * np.sqrt(0.12964479e8) * t27615 ** 2 * (-1295 * t27610 - 1 + (3367 * t27610 + 105) * t27609)

        if Bindx == 1023:
            t27639 = np.cos(phi)
            t27638 = t27639 ** 2
            t27642 = t27638 ** 2
            t27641 = t27639 * t27638
            t27644 = t27641 ** 2
            t27646 = t27642 ** 2
            t27643 = t27639 * t27642
            t27648 = t27643 ** 2
            t27650 = t27644 ** 2
            t27645 = t27639 * t27644
            t27652 = t27645 ** 2
            t27654 = t27646 ** 2
            t27647 = t27639 * t27646
            t27656 = t27647 ** 2
            t27660 = 94 * t27638 - 2971 * t27642 + 35512 * t27644 - 184698 * t27646 - 732678 * t27650 + 593432 * t27652 - 226581 * t27654 + 12654 * t27656 - 1 + (494692 + 10545 * t27648) * t27648
            t27659 = -3351 * t27641 + 29972 * t27643 - 119148 * t27645 + 228422 * t27647 + (-166178 * t27648 - 107068 * t27650 + 281764 * t27652 - 188811 * t27654 + 44289 * t27656 + 109) * t27639
            t27640 = 7 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.1390753e7) * ((-t27659 + t27660) * np.exp((2*1j) * (t27640 - 3 * phi2)) + (t27659 + t27660) * np.exp((2*1j) * (t27640 + 3 * phi2)))

        if Bindx == 1024:
            t27682 = np.cos(phi)
            t27681 = t27682 ** 2
            t27684 = t27682 * t27681
            t27685 = t27681 ** 2
            t27686 = t27682 * t27685
            t27687 = t27684 ** 2
            t27688 = t27682 * t27687
            t27689 = t27685 ** 2
            t27690 = t27682 * t27689
            t27691 = t27686 ** 2
            t27693 = t27687 ** 2
            t27695 = t27688 ** 2
            t27697 = t27689 ** 2
            t27699 = t27690 ** 2
            t27703 = -4950 * t27684 - 1166824 * t27686 + 7342920 * t27688 - 16131596 * t27690 + (9861644 * t27691 + 11676856 * t27693 - 17144344 * t27695 + 4405590 * t27697 + 1151514 * t27699 + 9190) * t27682
            t27702 = 81800 * t27681 - 819695 * t27685 + 2495792 * t27687 + 789438 * t27689 + 28134210 * t27693 - 14174512 * t27695 - 3826833 * t27697 + 3694968 * t27699 - 2045 + (-16510208 + 137085 * t27691) * t27691
            t27683 = 7 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.3927e4) * ((t27702 - t27703) * np.exp((2*1j) * (t27683 - 6 * phi2)) + (t27702 + t27703) * np.exp((2*1j) * (t27683 + 6 * phi2)))

        if Bindx == 1025:
            t27725 = np.cos(phi)
            t27724 = t27725 ** 2
            t27727 = t27725 * t27724
            t27728 = t27724 ** 2
            t27729 = t27725 * t27728
            t27730 = t27727 ** 2
            t27731 = t27725 * t27730
            t27732 = t27728 ** 2
            t27733 = t27725 * t27732
            t27734 = t27729 ** 2
            t27736 = t27730 ** 2
            t27738 = t27731 ** 2
            t27740 = t27732 ** 2
            t27742 = t27733 ** 2
            t27746 = -3227 * t27727 + 12852 * t27729 + 22100 * t27731 - 80002 * t27733 + (10166 * t27734 + 72964 * t27736 - 19516 * t27738 - 14175 * t27740 - 819 * t27742 - 343) * t27725
            t27745 = 1550 * t27724 + 629 * t27728 - 30056 * t27730 + 27846 * t27732 - 77350 * t27736 - 20808 * t27738 + 25483 * t27740 + 4542 * t27742 + 31 + (68068 + 65 * t27734) * t27734
            t27726 = 7 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.4921e4) * ((t27745 + t27746) * np.exp((2*1j) * (t27726 - 9 * phi2)) + (t27745 - t27746) * np.exp((2*1j) * (t27726 + 9 * phi2)))

        if Bindx == 1026:
            t27747 = np.cos(phi)
            t27748 = t27747 ** 2
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.exp((15*1j) * phi1) * np.sqrt(0.302504510e9) * ((1 - t27747) ** (0.15e2 / 0.2e1)) * ((1 + t27747) ** (0.15e2 / 0.2e1)) * t27747 * (15 + (-370 + 1443 * t27748) * t27748)

        if Bindx == 1027:
            t27767 = np.cos(phi)
            t27766 = t27767 ** 2
            t27770 = t27766 ** 2
            t27774 = t27770 ** 2
            t27783 = 12654 * t27774 ** 2
            t27769 = t27767 * t27766
            t27772 = t27769 ** 2
            t27773 = t27767 * t27772
            t27780 = t27773 ** 2
            t27778 = t27772 ** 2
            t27771 = t27767 * t27770
            t27776 = t27771 ** 2
            t27768 = 5 * phi1
            t27759 = t27767 * t27774
            t27757 = t27767 * t27776
            t27755 = t27767 * t27778
            t27753 = t27767 * t27780
            tfunc[..., c] = (-0.41e2 / 0.262144e6*1j) * ((1 - t27767) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2980185e7) * ((1 + t27767) ** (-0.1e1 / 0.2e1)) * ((t27783 + 6327 * t27753 - 73815 * t27780 - 39405 * t27755 + 178365 * t27778 + 102331 * t27757 - 227467 * t27776 - 142025 * t27759 + 159605 * t27774 + 111445 * t27773 - 56149 * t27772 - 47287 * t27771 + 5815 * t27770 + 8825 * t27769 + 1015 * t27766 - 211 * t27767 - 23) * np.exp((3*1j) * (t27768 - 2 * phi2)) + (t27783 + 120213 * t27753 + 495615 * t27780 + 1136085 * t27755 + 1500375 * t27778 + 935177 * t27757 - 261701 * t27776 - 953095 * t27759 - 659505 * t27774 - 60225 * t27773 + 169917 * t27772 + 91359 * t27771 + 6165 * t27770 - 7965 * t27769 - 1975 * t27766 + 19 * t27767 + 23) * np.exp((3*1j) * (t27768 + 2 * phi2)))

        if Bindx == 1028:
            t27804 = np.cos(phi)
            t27803 = t27804 ** 2
            t27807 = t27803 ** 2
            t27811 = t27807 ** 2
            t27812 = t27804 * t27811
            t27821 = t27812 ** 2
            t27823 = 82251 * t27804 * t27821
            t27819 = t27811 ** 2
            t27806 = t27804 * t27803
            t27809 = t27806 ** 2
            t27810 = t27804 * t27809
            t27817 = t27810 ** 2
            t27815 = t27809 ** 2
            t27808 = t27804 * t27807
            t27813 = t27808 ** 2
            t27805 = 5 * phi1
            t27794 = t27804 * t27813
            t27792 = t27804 * t27815
            t27790 = t27804 * t27817
            t27788 = t27804 * t27819
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * ((1 - t27804) ** (0.3e1 / 0.2e1)) * np.sqrt(0.935e3) * ((1 + t27804) ** (-0.1e1 / 0.2e1)) * ((t27823 - 575757 * t27821 + 1351869 * t27788 - 288267 * t27819 - 4058004 * t27790 + 5968396 * t27817 + 1544516 * t27792 - 10418780 * t27815 + 5847626 * t27794 + 6491386 * t27813 - 8187850 * t27812 - 272826 * t27811 + 4320828 * t27810 - 1411236 * t27809 - 959980 * t27808 + 586228 * t27807 + 54467 * t27806 - 82517 * t27803 + 4277 * t27804 + 3373) * np.exp((3*1j) * (t27805 - 4 * phi2)) + (t27823 + 904761 * t27821 + 4312905 * t27788 + 11288811 * t27819 + 16135116 * t27790 + 7185284 * t27817 - 16214828 * t27792 - 32075524 * t27815 - 19706518 * t27794 + 8285134 * t27813 + 20953790 * t27812 + 11028186 * t27811 - 2218788 * t27810 - 5140044 * t27809 - 1877980 * t27808 + 289132 * t27807 + 378275 * t27806 + 72641 * t27803 - 9215 * t27804 - 3373) * np.exp((3*1j) * (t27805 + 4 * phi2)))

        if Bindx == 1029:
            t27846 = np.cos(phi)
            t27845 = t27846 ** 2
            t27849 = t27845 ** 2
            t27848 = t27846 * t27845
            t27851 = t27848 ** 2
            t27853 = t27849 ** 2
            t27850 = t27846 * t27849
            t27855 = t27850 ** 2
            t27857 = t27851 ** 2
            t27852 = t27846 * t27851
            t27859 = t27852 ** 2
            t27861 = t27853 ** 2
            t27854 = t27846 * t27853
            t27863 = t27854 ** 2
            t27865 = t27855 ** 2
            t27868 = -2752 * t27845 - 8017 * t27849 + 54128 * t27851 + 12818 * t27853 - 187408 * t27855 + 82654 * t27857 + 118864 * t27859 - 47447 * t27861 - 21744 * t27863 - 1053 * t27865 - 43
            t27867 = 7394 * t27848 - 11458 * t27850 - 76024 * t27852 + 118456 * t27854 + (94588 * t27855 - 173468 * t27857 - 11288 * t27859 + 44872 * t27861 + 6322 * t27863 + 78 * t27865 + 528) * t27846
            t27847 = 5 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt(0.10545e5) * ((1 + t27846) ** (-0.1e1 / 0.2e1)) * ((1 - t27846) ** (-0.1e1 / 0.2e1)) * ((t27867 + t27868) * np.exp((3*1j) * (t27847 - 6 * phi2)) + (t27867 - t27868) * np.exp((3*1j) * (t27847 + 6 * phi2)))

        if Bindx == 1030:
            t27876 = np.sin(phi)
            t27872 = t27876 ** 2
            t27873 = t27872 ** 2
            t27874 = t27873 ** 2
            t27869 = np.cos(phi)
            t27870 = t27869 ** 2
            tfunc[..., c] = (0.615e3 / 0.524288e6) * np.exp((16*1j) * phi1) * np.sqrt(0.60500902e8) * t27874 ** 2 * (1 + (-74 + 481 * t27870) * t27870)

        if Bindx == 1031:
            t27898 = np.cos(phi)
            t27897 = t27898 ** 2
            t27900 = t27898 * t27897
            t27901 = t27897 ** 2
            t27902 = t27898 * t27901
            t27903 = t27900 ** 2
            t27904 = t27898 * t27903
            t27905 = t27901 ** 2
            t27906 = t27898 * t27905
            t27907 = t27902 ** 2
            t27909 = t27903 ** 2
            t27911 = t27904 ** 2
            t27913 = t27905 ** 2
            t27915 = t27906 ** 2
            t27919 = -3608 * t27900 + 31008 * t27902 - 121632 * t27904 + 241808 * t27906 + (-236432 * t27907 + 64288 * t27909 + 76512 * t27911 - 68968 * t27913 + 16872 * t27915 + 152) * t27898
            t27918 = -832 * t27897 + 6343 * t27901 - 8688 * t27903 - 52318 * t27905 - 368018 * t27909 + 305712 * t27911 - 119967 * t27913 + 11248 * t27915 + 13 + (222992 + 3515 * t27907) * t27907
            t27899 = 8 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6) * ((t27918 - t27919) * np.exp((2*1j) * (t27899 - 3 * phi2)) + (t27918 + t27919) * np.exp((2*1j) * (t27899 + 3 * phi2))) * np.sqrt(0.596037e6)

        if Bindx == 1032:
            t27941 = np.cos(phi)
            t27940 = t27941 ** 2
            t27944 = t27940 ** 2
            t27943 = t27941 * t27940
            t27946 = t27943 ** 2
            t27948 = t27944 ** 2
            t27945 = t27941 * t27944
            t27950 = t27945 ** 2
            t27952 = t27946 ** 2
            t27947 = t27941 * t27946
            t27954 = t27947 ** 2
            t27956 = t27948 ** 2
            t27949 = t27941 * t27948
            t27958 = t27949 ** 2
            t27962 = -42230 * t27940 - 347053 * t27944 + 3382392 * t27946 - 7523282 * t27948 + 12724270 * t27952 - 12002184 * t27954 + 764499 * t27956 + 1702666 * t27958 + 4223 + (1291004 + 45695 * t27950) * t27950
            t27961 = 320624 * t27943 - 1193664 * t27945 - 911040 * t27947 + 10586784 * t27949 + (-15611232 * t27950 + 3356992 * t27952 + 6940992 * t27954 - 3034000 * t27956 - 438672 * t27958 - 16784) * t27941
            t27942 = 4 * phi1
            tfunc[..., c] = (0.123e3 / 0.1048576e7) * ((t27961 + t27962) * np.exp((4*1j) * (t27942 - 3 * phi2)) + (-t27961 + t27962) * np.exp((4*1j) * (t27942 + 3 * phi2))) * np.sqrt(0.187e3)

        if Bindx == 1033:
            t27984 = np.cos(phi)
            t27983 = t27984 ** 2
            t27986 = t27984 * t27983
            t27987 = t27983 ** 2
            t27988 = t27984 * t27987
            t27989 = t27986 ** 2
            t27990 = t27984 * t27989
            t27991 = t27987 ** 2
            t27992 = t27984 * t27991
            t27993 = t27988 ** 2
            t27995 = t27989 ** 2
            t27997 = t27990 ** 2
            t27999 = t27991 ** 2
            t28001 = t27992 ** 2
            t28005 = -10968 * t27986 - 14688 * t27988 + 106080 * t27990 + 45968 * t27992 + (-215696 * t27993 - 27744 * t27995 + 93024 * t27997 + 23640 * t27999 + 936 * t28001 - 552) * t27984
            t28004 = -3280 * t27983 - 20859 * t27987 + 31824 * t27989 + 133926 * t27991 - 165750 * t27995 + 75888 * t27997 + 58803 * t27999 + 6112 * t28001 - 41 + (-116688 + 65 * t27993) * t27993
            t27985 = 8 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6) * ((t28004 - t28005) * np.exp((2*1j) * (t27985 - 9 * phi2)) + (t28004 + t28005) * np.exp((2*1j) * (t27985 + 9 * phi2))) * np.sqrt(0.2109e4)

        if Bindx == 1034:
            t28006 = np.cos(phi)
            tfunc[..., c] = (-0.615e3 / 0.262144e6*1j) * np.exp((17*1j) * phi1) * np.sqrt(0.2238533374e10) * ((1 - t28006) ** (0.17e2 / 0.2e1)) * ((1 + t28006) ** (0.17e2 / 0.2e1)) * t28006 * (13 * t28006 ** 2 - 1)

        if Bindx == 1035:
            t28023 = np.cos(phi)
            t28022 = t28023 ** 2
            t28025 = t28023 * t28022
            t28028 = t28025 ** 2
            t28029 = t28023 * t28028
            t28036 = t28029 ** 2
            t28038 = 190 * t28023 * t28036
            t28034 = t28028 ** 2
            t28026 = t28022 ** 2
            t28027 = t28023 * t28026
            t28032 = t28027 ** 2
            t28030 = t28026 ** 2
            t28024 = 17 * phi1
            t28015 = t28023 * t28030
            t28013 = t28023 * t28032
            t28011 = t28023 * t28034
            tfunc[..., c] = (0.123e3 / 0.262144e6*1j) * np.sqrt(0.22053369e8) * ((1 - t28023) ** (0.11e2 / 0.2e1)) * ((1 + t28023) ** (-0.1e1 / 0.2e1)) * ((t28038 + 171 * t28036 - 1102 * t28011 - 1025 * t28034 + 2622 * t28013 + 2559 * t28032 - 3230 * t28015 - 3405 * t28030 + 2090 * t28029 + 2545 * t28028 - 570 * t28027 - 1011 * t28026 - 38 * t28025 + 165 * t28022 + 38 * t28023 + 1) * np.exp((1j) * (t28024 - 6 * phi2)) + (t28038 + 2109 * t28036 + 10526 * t28011 + 30969 * t28034 + 58926 * t28013 + 74129 * t28032 + 58718 * t28015 + 22077 * t28030 - 7062 * t28029 - 13673 * t28028 - 7062 * t28027 - 1141 * t28026 + 426 * t28025 + 219 * t28022 + 26 * t28023 - 1) * np.exp((1j) * (t28024 + 6 * phi2)))

        if Bindx == 1036:
            t28058 = np.cos(phi)
            t28057 = t28058 ** 2
            t28061 = t28057 ** 2
            t28065 = t28061 ** 2
            t28066 = t28058 * t28065
            t28076 = 1235 * t28066 ** 2
            t28073 = t28065 ** 2
            t28060 = t28058 * t28057
            t28063 = t28060 ** 2
            t28064 = t28058 * t28063
            t28071 = t28064 ** 2
            t28069 = t28063 ** 2
            t28062 = t28058 * t28061
            t28067 = t28062 ** 2
            t28059 = 17 * phi1
            t28048 = t28058 * t28067
            t28046 = t28058 * t28069
            t28044 = t28058 * t28071
            t28042 = t28058 * t28073
            tfunc[..., c] = (-0.123e3 / 0.524288e6*1j) * ((1 - t28058) ** (0.5e1 / 0.2e1)) * np.sqrt(0.6919e4) * ((1 + t28058) ** (-0.1e1 / 0.2e1)) * ((t28076 - 8892 * t28042 + 22021 * t28073 - 8264 * t28044 - 60828 * t28071 + 103944 * t28046 + 2812 * t28069 - 162600 * t28048 + 126962 * t28067 + 72336 * t28066 - 144738 * t28065 + 30632 * t28064 + 59492 * t28063 - 36552 * t28062 - 5508 * t28061 + 10184 * t28060 - 1677 * t28057 - 788 * t28058 + 229) * np.exp((1j) * (t28059 - 12 * phi2)) + (t28076 + 16302 * t28042 + 97603 * t28073 + 347376 * t28044 + 804540 * t28071 + 1229480 * t28046 + 1138956 * t28069 + 331344 * t28048 - 674102 * t28067 - 1078220 * t28066 - 699270 * t28065 - 92144 * t28064 + 204204 * t28063 + 168168 * t28062 + 51740 * t28061 - 2640 * t28060 - 7173 * t28057 - 2162 * t28058 - 229) * np.exp((1j) * (t28059 + 12 * phi2)))

        if Bindx == 1037:
            t28099 = np.cos(phi)
            t28098 = t28099 ** 2
            t28102 = t28098 ** 2
            t28101 = t28099 * t28098
            t28104 = t28101 ** 2
            t28106 = t28102 ** 2
            t28103 = t28099 * t28102
            t28108 = t28103 ** 2
            t28110 = t28104 ** 2
            t28105 = t28099 * t28104
            t28112 = t28105 ** 2
            t28114 = t28106 ** 2
            t28107 = t28099 * t28106
            t28116 = t28107 ** 2
            t28118 = t28108 ** 2
            t28121 = 8928 * t28098 + 79719 * t28102 + 4080 * t28104 - 521118 * t28106 + 24752 * t28108 + 772174 * t28110 - 26928 * t28112 - 281775 * t28114 - 57936 * t28116 - 1989 * t28118 + 93
            t28120 = -34034 * t28101 - 102510 * t28103 + 259896 * t28105 + 461448 * t28107 + (-596700 * t28108 - 449412 * t28110 + 290904 * t28112 + 157752 * t28114 + 13886 * t28116 + 130 * t28118 - 1360) * t28099
            t28100 = 17 * phi1
            tfunc[..., c] = (0.41e2 / 0.524288e6*1j) * np.sqrt(0.57e2) * ((1 + t28099) ** (-0.1e1 / 0.2e1)) * ((1 - t28099) ** (-0.1e1 / 0.2e1)) * ((t28120 + t28121) * np.exp((1j) * (t28100 - 18 * phi2)) + (t28120 - t28121) * np.exp((1j) * (t28100 + 18 * phi2)))

        if Bindx == 1038:
            t28128 = np.sin(phi)
            t28123 = t28128 ** 2
            t28124 = t28123 ** 2
            t28126 = t28128 * t28124 ** 2
            t28122 = np.cos(phi)
            tfunc[..., c] = -(0.205e3 / 0.262144e6) * np.exp((18*1j) * phi1) * np.sqrt(0.176726319e9) * t28126 ** 2 * (39 * t28122 ** 2 - 1)

        if Bindx == 1039:
            t28150 = np.cos(phi)
            t28149 = t28150 ** 2
            t28152 = t28150 * t28149
            t28153 = t28149 ** 2
            t28154 = t28150 * t28153
            t28155 = t28152 ** 2
            t28156 = t28150 * t28155
            t28157 = t28153 ** 2
            t28158 = t28150 * t28157
            t28159 = t28154 ** 2
            t28161 = t28155 ** 2
            t28163 = t28156 ** 2
            t28165 = t28157 ** 2
            t28167 = t28158 ** 2
            t28171 = 7 * t28152 - 276 * t28154 + 1260 * t28156 - 2534 * t28158 + (2562 * t28159 - 1092 * t28161 - 164 * t28163 + 315 * t28165 - 81 * t28167 + 3) * t28150
            t28170 = -30 * t28149 + 219 * t28153 - 568 * t28155 + 378 * t28157 - 2170 * t28161 + 1896 * t28163 - 747 * t28165 + 82 * t28167 + 1 + (924 + 15 * t28159) * t28159
            t28151 = 3 * phi1
            tfunc[..., c] = (0.123e3 / 0.262144e6) * np.sqrt(0.2e1) * np.sqrt(0.139671337e9) * ((t28170 + t28171) * np.exp((6*1j) * (t28151 - phi2)) + (t28170 - t28171) * np.exp((6*1j) * (t28151 + phi2)))

        if Bindx == 1040:
            t28193 = np.cos(phi)
            t28192 = t28193 ** 2
            t28195 = t28193 * t28192
            t28196 = t28192 ** 2
            t28197 = t28193 * t28196
            t28198 = t28195 ** 2
            t28199 = t28193 * t28198
            t28200 = t28196 ** 2
            t28201 = t28193 * t28200
            t28202 = t28197 ** 2
            t28204 = t28198 ** 2
            t28206 = t28199 ** 2
            t28208 = t28200 ** 2
            t28210 = t28201 ** 2
            t28214 = -74 * t28195 - 23064 * t28197 + 55224 * t28199 + 18252 * t28201 + (-138060 * t28202 + 86088 * t28204 + 25112 * t28206 - 21942 * t28208 - 2106 * t28210 + 570) * t28193
            t28213 = -1608 * t28192 + 10671 * t28196 + 5200 * t28198 - 90558 * t28200 + 27326 * t28204 - 90192 * t28206 + 19665 * t28208 + 9544 * t28210 - 67 + (109824 + 195 * t28202) * t28202
            t28194 = 3 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.394383e6) * ((t28213 + t28214) * np.exp((6*1j) * (t28194 - 2 * phi2)) + (t28213 - t28214) * np.exp((6*1j) * (t28194 + 2 * phi2)))

        if Bindx == 1041:
            t28236 = np.cos(phi)
            t28235 = t28236 ** 2
            t28237 = t28236 * t28235
            t28238 = t28235 ** 2
            t28239 = t28236 * t28238
            t28240 = t28237 ** 2
            t28241 = t28236 * t28240
            t28242 = t28238 ** 2
            t28243 = t28236 * t28242
            t28244 = t28239 ** 2
            t28246 = t28240 ** 2
            t28248 = t28241 ** 2
            t28250 = t28242 ** 2
            t28252 = t28243 ** 2
            t28256 = -77919 * t28237 - 430236 * t28239 - 151164 * t28241 + 1520038 * t28243 + (881790 * t28244 - 1034892 * t28246 - 724812 * t28248 - 108243 * t28250 - 3159 * t28252 - 2475) * t28236
            t28255 = 17898 * t28235 + 223839 * t28238 + 503880 * t28240 - 680238 * t28242 + 277134 * t28246 + 1093032 * t28248 + 334305 * t28250 + 23674 * t28252 + 157 + (-1662804 + 195 * t28244) * t28244
            tfunc[..., c] = (0.41e2 / 0.524288e6) * np.sqrt(0.2e1) * ((t28255 + t28256) * np.exp((18*1j) * (phi1 - phi2)) + (t28255 - t28256) * np.exp((18*1j) * (phi1 + phi2)))

        if Bindx == 1042:
            t28257 = np.cos(phi)
            tfunc[..., c] = (0.615e3 / 0.262144e6*1j) * np.exp((19*1j) * phi1) * np.sqrt(0.1531628098e10) * ((1 - t28257) ** (0.19e2 / 0.2e1)) * ((1 + t28257) ** (0.19e2 / 0.2e1)) * t28257

        if Bindx == 1043:
            t28277 = np.cos(phi)
            t28276 = t28277 ** 2
            t28279 = t28277 * t28276
            t28280 = t28276 ** 2
            t28281 = t28277 * t28280
            t28282 = t28279 ** 2
            t28283 = t28277 * t28282
            t28285 = t28281 ** 2
            t28287 = t28282 ** 2
            t28289 = t28283 ** 2
            t28284 = t28280 ** 2
            t28291 = t28284 ** 2
            t28292 = t28277 * t28291
            t28293 = t28277 * t28292
            t28296 = 138 * t28279 - 528 * t28281 + 728 * t28283 + 72 * t28292 + (-1092 * t28285 + 1232 * t28287 - 552 * t28289 + 10 * t28293 - 8) * t28277
            t28295 = 3 - 33 * t28276 - 20 * t28280 + 588 * t28282 - 1638 * t28284 + 2002 * t28285 - 1092 * t28287 + 60 * t28289 + 187 * t28291 - 57 * t28293
            t28278 = 19 * phi1
            tfunc[..., c] = (-0.123e3 / 0.262144e6*1j) * np.sqrt(0.32231847e8) * np.sqrt((1 - t28277)) * np.sqrt((1 + t28277)) * ((t28295 + t28296) * np.exp((1j) * (t28278 - 6 * phi2)) + (-t28295 + t28296) * np.exp((1j) * (t28278 + 6 * phi2)))

        if Bindx == 1044:
            t28315 = np.cos(phi)
            t28314 = t28315 ** 2
            t28318 = t28314 ** 2
            t28322 = t28318 ** 2
            t28330 = t28322 ** 2
            t28332 = 5 * t28315 * t28330
            t28317 = t28315 * t28314
            t28320 = t28317 ** 2
            t28321 = t28315 * t28320
            t28328 = t28321 ** 2
            t28326 = t28320 ** 2
            t28319 = t28315 * t28318
            t28324 = t28319 ** 2
            t28316 = 19 * phi1
            t28307 = t28315 * t28322
            t28305 = t28315 * t28324
            t28303 = t28315 * t28326
            t28301 = t28315 * t28328
            tfunc[..., c] = (0.123e3 / 0.524288e6*1j) * ((1 - t28315) ** (0.7e1 / 0.2e1)) * np.sqrt(0.1708993e7) * ((1 + t28315) ** (-0.1e1 / 0.2e1)) * ((t28332 - 37 * t28330 + 96 * t28301 - 48 * t28328 - 252 * t28303 + 492 * t28326 - 80 * t28305 - 704 * t28324 + 726 * t28307 + 154 * t28322 - 704 * t28321 + 336 * t28320 + 180 * t28319 - 228 * t28318 + 48 * t28317 + 32 * t28314 - 19 * t28315 + 3) * np.exp((1j) * (t28316 - 12 * phi2)) + (t28332 + 77 * t28330 + 552 * t28301 + 2440 * t28328 + 7420 * t28303 + 16380 * t28326 + 26936 * t28305 + 33176 * t28324 + 30030 * t28307 + 18590 * t28322 + 5720 * t28321 - 2184 * t28320 - 4004 * t28319 - 2660 * t28318 - 1080 * t28317 - 280 * t28314 - 43 * t28315 - 3) * np.exp((1j) * (t28316 + 12 * phi2)))

        if Bindx == 1045:
            t28353 = np.cos(phi)
            t28352 = t28353 ** 2
            t28356 = t28352 ** 2
            t28357 = t28353 * t28356
            t28362 = t28357 ** 2
            t28374 = 10 * t28362 ** 2
            t28360 = t28356 ** 2
            t28361 = t28353 * t28360
            t28373 = 9 + 75582 * t28361 - 92378 * t28362
            t28370 = t28361 ** 2
            t28368 = t28360 ** 2
            t28355 = t28353 * t28352
            t28358 = t28355 ** 2
            t28359 = t28353 * t28358
            t28366 = t28359 ** 2
            t28364 = t28358 ** 2
            t28354 = 19 * phi1
            t28343 = t28353 * t28362
            t28342 = t28353 * t28364
            t28340 = t28353 * t28366
            t28338 = t28353 * t28368
            t28336 = t28353 * t28370
            tfunc[..., c] = (-0.41e2 / 0.524288e6*1j) * np.sqrt((1 - t28353)) * np.sqrt(0.39e2) * ((1 + t28353) ** (-0.1e1 / 0.2e1)) * ((t28374 - 161 * t28336 + 1197 * t28370 - 5415 * t28338 + 16473 * t28368 - 34884 * t28340 + 50388 * t28366 - 42636 * t28342 + 58786 * t28343 - 25194 * t28360 - 19380 * t28359 + 34884 * t28358 - 27132 * t28357 + 13566 * t28356 - 4617 * t28355 + 1045 * t28352 - 143 * t28353 + t28373) * np.exp((1j) * (t28354 - 18 * phi2)) + (t28374 + 181 * t28336 + 1539 * t28370 + 8151 * t28338 + 30039 * t28368 + 81396 * t28340 + 166668 * t28366 + 259692 * t28342 + 243542 * t28343 - 176358 * t28360 - 182172 * t28359 - 127908 * t28358 - 65892 * t28357 - 25194 * t28356 - 7011 * t28355 - 1349 * t28352 - 161 * t28353 + 302328 * t28364 - t28373) * np.exp((1j) * (t28354 + 18 * phi2)))

        if Bindx == 1046:
            t28380 = np.sin(phi)
            t28375 = t28380 ** 2
            t28377 = t28380 * t28375 ** 2
            t28378 = t28377 ** 2
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.exp((20*1j) * phi1) * np.sqrt(0.3829070245e10) * t28378 ** 2

        if Bindx == 1047:
            t28401 = np.cos(phi)
            t28400 = t28401 ** 2
            t28404 = t28400 ** 2
            t28403 = t28401 * t28400
            t28406 = t28403 ** 2
            t28408 = t28404 ** 2
            t28411 = t28406 ** 2
            t28407 = t28401 * t28406
            t28413 = t28407 ** 2
            t28415 = t28408 ** 2
            t28409 = t28401 * t28408
            t28417 = t28409 ** 2
            t28418 = t28401 * t28417
            t28421 = t28401 * t28418 - 8 * t28400 + 69 * t28404 - 176 * t28406 + 182 * t28408 - 182 * t28411 + 176 * t28413 - 69 * t28415 + 8 * t28417 - 1
            t28420 = -22 * t28403 + 168 * t28407 - 6 * t28418 + (364 * t28400 - 364) * t28409 + (-8 * t28404 - 168 * t28411 + 8 * t28413 + 22 * t28415 + 6) * t28401
            t28402 = 10 * phi1
            tfunc[..., c] = (0.123e3 / 0.524288e6) * np.sqrt(0.2e1) * np.sqrt(0.161159235e9) * ((t28420 + t28421) * np.exp((2*1j) * (t28402 - 3 * phi2)) + (-t28420 + t28421) * np.exp((2*1j) * (t28402 + 3 * phi2)))

        if Bindx == 1048:
            t28443 = np.cos(phi)
            t28465 = -12 * t28443
            t28442 = t28443 ** 2
            t28445 = t28443 * t28442
            t28446 = t28442 ** 2
            t28447 = t28443 * t28446
            t28448 = t28445 ** 2
            t28449 = t28443 * t28448
            t28450 = t28446 ** 2
            t28451 = t28443 * t28450
            t28452 = t28447 ** 2
            t28454 = t28448 ** 2
            t28456 = t28449 ** 2
            t28458 = t28450 ** 2
            t28460 = t28451 ** 2
            t28464 = t28460 * t28465 - 172 * t28445 + 16 * t28447 + 1104 * t28449 - 936 * t28451 + t28465 + (-936 * t28452 + 1104 * t28454 + 16 * t28456 - 172 * t28458) * t28443
            t28463 = 62 * t28442 + 237 * t28446 - 664 * t28448 - 494 * t28450 - 494 * t28454 - 664 * t28456 + 237 * t28458 + 62 * t28460 + 1 + (1716 + t28452) * t28452
            t28444 = 5 * phi1
            tfunc[..., c] = (0.123e3 / 0.2097152e7) * np.sqrt(0.2e1) * np.sqrt(0.8544965e7) * ((t28463 + t28464) * np.exp((4*1j) * (t28444 - 3 * phi2)) + (t28463 - t28464) * np.exp((4*1j) * (t28444 + 3 * phi2)))

        if Bindx == 1049:
            t28486 = np.cos(phi)
            t28485 = t28486 ** 2
            t28489 = t28485 ** 2
            t28488 = t28486 * t28485
            t28491 = t28488 ** 2
            t28493 = t28489 ** 2
            t28496 = t28491 ** 2
            t28492 = t28486 * t28491
            t28498 = t28492 ** 2
            t28500 = t28493 ** 2
            t28494 = t28486 * t28493
            t28502 = t28494 ** 2
            t28503 = t28486 * t28502
            t28506 = t28486 * t28503 - 152 * t28485 - 2907 * t28489 - 15504 * t28491 - 25194 * t28493 + 25194 * t28496 + 15504 * t28498 + 2907 * t28500 + 152 * t28502 - 1
            t28505 = 798 * t28488 + 23256 * t28492 - 18 * t28503 + (-16796 * t28485 + 16796) * t28494 + (7752 * t28489 - 23256 * t28496 - 7752 * t28498 - 798 * t28500 + 18) * t28486
            t28487 = 10 * phi1
            tfunc[..., c] = (0.41e2 / 0.1048576e7) * np.sqrt(0.2e1) * np.sqrt(0.195e3) * ((t28505 + t28506) * np.exp((2*1j) * (t28487 - 9 * phi2)) + (-t28505 + t28506) * np.exp((2*1j) * (t28487 + 9 * phi2)))

        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1, 0.2])
    X[:, 0] = phi1
    phi = np.array([0.2, 0.0])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

