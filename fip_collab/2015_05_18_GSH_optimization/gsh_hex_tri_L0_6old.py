import numpy as np


def gsh(e_angles):

    phi1 = e_angles[0, :]
    phi = e_angles[1, :]
    phi2 = e_angles[2, :]

    zvec = np.abs(phi) < 10e-17
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.shape[0]))
    randvecopp = np.ones(zvec.shape[0]) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    out_tvalues = np.zeros([41, e_angles.shape[1]], dtype='complex128')

    out_tvalues[0, :] = 1
    out_tvalues[1, :] = -np.exp((-2*1j) * phi1) * np.sqrt(0.6e1) * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) / 4
    out_tvalues[2, :] = (-0.1e1 / 0.24e2*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.6e1) * ((0.1e1 - np.cos(phi)) ** (-0.1e1 / 0.2e1)) * np.sqrt(0.1e1 + np.cos(phi)) * (0.6e1 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) - 0.6e1 * (0.1e1 - np.cos(phi)) ** 2)
    out_tvalues[3, :] = (0.1e1 + np.cos(phi)) ** 2 / 0.4e1 - (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) + (0.1e1 - np.cos(phi)) ** 2 / 0.4e1
    out_tvalues[4, :] = (0.1e1 / 0.24e2*1j) * np.exp((1j) * phi1) * np.sqrt(0.6e1) * np.sqrt(0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** (-0.1e1 / 0.2e1)) * (-0.6e1 * (0.1e1 + np.cos(phi)) ** 2 + 0.6e1 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)))
    out_tvalues[5, :] = -np.exp((2*1j) * phi1) * np.sqrt(0.6e1) * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) / 4
    out_tvalues[6, :] = np.exp((-4*1j) * phi1) * np.sqrt(0.70e2) * ((0.1e1 - np.cos(phi)) ** 2) * ((0.1e1 + np.cos(phi)) ** 2) / 16
    out_tvalues[7, :] = (0.1e1 / 0.6720e4*1j) * np.exp((-3*1j) * phi1) * np.sqrt(0.35e2) * ((0.1e1 - np.cos(phi)) ** (-0.3e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.3e1 / 0.2e1)) * (0.840e3 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) - 0.840e3 * (0.1e1 - np.cos(phi)) ** 4)
    out_tvalues[8, :] = -np.exp((-2*1j) * phi1) * np.sqrt(0.10e2) / (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) * (0.360e3 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 2 - 0.960e3 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) + 0.360e3 * (0.1e1 - np.cos(phi)) ** 4) / 1920
    out_tvalues[9, :] = (-0.1e1 / 0.960e3*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.5e1) * ((0.1e1 - np.cos(phi)) ** (-0.1e1 / 0.2e1)) * np.sqrt(0.1e1 + np.cos(phi)) * (0.120e3 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 3 - 0.720e3 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 2 + 0.720e3 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) - 0.120e3 * (0.1e1 - np.cos(phi)) ** 4)
    out_tvalues[10, :] = (0.1e1 + np.cos(phi)) ** 4 / 0.16e2 - (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 3 + 0.9e1 / 0.4e1 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 2 - (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) + (0.1e1 - np.cos(phi)) ** 4 / 0.16e2
    out_tvalues[11, :] = (0.1e1 / 0.960e3*1j) * np.exp((1j) * phi1) * np.sqrt(0.5e1) * np.sqrt(0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** (-0.1e1 / 0.2e1)) * (-0.120e3 * (0.1e1 + np.cos(phi)) ** 4 + 0.720e3 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 3 - 0.720e3 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 2 + 0.120e3 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)))
    out_tvalues[12, :] = -np.exp((2*1j) * phi1) * np.sqrt(0.10e2) * (0.1e1 - np.cos(phi)) / (0.1e1 + np.cos(phi)) * (0.360e3 * (0.1e1 + np.cos(phi)) ** 4 - 0.960e3 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 3 + 0.360e3 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 2) / 1920
    out_tvalues[13, :] = (-0.1e1 / 0.6720e4*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.35e2) * ((0.1e1 - np.cos(phi)) ** (0.3e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (-0.3e1 / 0.2e1)) * (-0.840e3 * (0.1e1 + np.cos(phi)) ** 4 + 0.840e3 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 3)
    out_tvalues[14, :] = np.exp((4*1j) * phi1) * np.sqrt(0.70e2) * ((0.1e1 - np.cos(phi)) ** 2) * ((0.1e1 + np.cos(phi)) ** 2) / 16
    out_tvalues[15, :] = -np.exp((-6*1j) * phi1) * np.sqrt(0.231e3) * ((0.1e1 - np.cos(phi)) ** 3) * ((0.1e1 + np.cos(phi)) ** 3) / 32
    out_tvalues[16, :] = np.exp((-6*1j) * phi1) * np.exp((-6*1j) * phi2) * ((0.1e1 + np.cos(phi)) ** 6) * np.sqrt(0.2e1) / 128 + np.exp((-6*1j) * phi1) * np.exp((6*1j) * phi2) * ((0.1e1 - np.cos(phi)) ** 6) * np.sqrt(0.2e1) / 128
    out_tvalues[17, :] = (-0.1e1 / 0.3548160e7*1j) * np.exp((-5*1j) * phi1) * np.sqrt(0.77e2) * ((0.1e1 - np.cos(phi)) ** (-0.5e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.5e1 / 0.2e1)) * (0.332640e6 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)) - 0.332640e6 * (0.1e1 - np.cos(phi)) ** 6)
    out_tvalues[18, :] = (-0.1e1 / 0.64e2*1j) * np.exp((-5*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.3e1) * np.sqrt(0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** (0.11e2 / 0.2e1)) * np.sqrt(0.2e1) + (0.1e1 / 0.64e2*1j) * np.exp((-5*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.3e1) * ((0.1e1 - np.cos(phi)) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1e1 + np.cos(phi)) * np.sqrt(0.2e1)
    out_tvalues[19, :] = np.exp((-4*1j) * phi1) * np.sqrt(0.14e2) / ((0.1e1 - np.cos(phi)) ** 2) * ((0.1e1 + np.cos(phi)) ** 2) * (0.151200e6 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2 - 0.362880e6 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)) + 0.151200e6 * (0.1e1 - np.cos(phi)) ** 6) / 645120
    out_tvalues[20, :] = -np.exp((-4*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.66e2) * (0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** 5) * np.sqrt(0.2e1) / 128 - np.exp((-4*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.66e2) * ((0.1e1 - np.cos(phi)) ** 5) * (0.1e1 + np.cos(phi)) * np.sqrt(0.2e1) / 128
    out_tvalues[21, :] = (0.1e1 / 0.967680e6*1j) * np.exp((-3*1j) * phi1) * np.sqrt(0.105e3) * ((0.1e1 - np.cos(phi)) ** (-0.3e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.3e1 / 0.2e1)) * (0.60480e5 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3 - 0.272160e6 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2 + 0.272160e6 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)) - 0.60480e5 * (0.1e1 - np.cos(phi)) ** 6)
    out_tvalues[22, :] = (0.1e1 / 0.64e2*1j) * np.exp((-3*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** (0.3e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2e1) + (-0.1e1 / 0.64e2*1j) * np.exp((-3*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** (0.9e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2e1)
    out_tvalues[23, :] = -np.exp((-2*1j) * phi1) * np.sqrt(0.105e3) / (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) * (0.20160e5 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4 - 0.161280e6 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3 + 0.302400e6 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2 - 0.161280e6 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)) + 0.20160e5 * (0.1e1 - np.cos(phi)) ** 6) / 645120
    out_tvalues[24, :] = (0.3e1 / 0.128e3) * np.exp((-2*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** 2) * ((0.1e1 + np.cos(phi)) ** 4) * np.sqrt(0.2e1) + (0.3e1 / 0.128e3) * np.exp((-2*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** 4) * ((0.1e1 + np.cos(phi)) ** 2) * np.sqrt(0.2e1)
    out_tvalues[25, :] = (-0.1e1 / 0.322560e6*1j) * np.exp((-1*1j) * phi1) * np.sqrt(0.42e2) * ((0.1e1 - np.cos(phi)) ** (-0.1e1 / 0.2e1)) * np.sqrt(0.1e1 + np.cos(phi)) * (0.5040e4 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5 - 0.75600e5 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4 + 0.252000e6 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3 - 0.252000e6 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2 + 0.75600e5 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)) - 0.5040e4 * (0.1e1 - np.cos(phi)) ** 6)
    out_tvalues[26, :] = (-0.3e1 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.22e2) * ((0.1e1 - np.cos(phi)) ** (0.5e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.7e1 / 0.2e1)) * np.sqrt(0.2e1) + (0.3e1 / 0.64e2*1j) * np.exp((-1*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.22e2) * ((0.1e1 - np.cos(phi)) ** (0.7e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2e1)
    out_tvalues[27, :] = (0.1e1 + np.cos(phi)) ** 6 / 0.64e2 - 0.9e1 / 0.16e2 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5 + 0.225e3 / 0.64e2 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4 - 0.25e2 / 0.4e1 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3 + 0.225e3 / 0.64e2 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2 - 0.9e1 / 0.16e2 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)) + (0.1e1 - np.cos(phi)) ** 6 / 0.64e2
    out_tvalues[28, :] = -np.exp((-6*1j) * phi2) * np.sqrt(0.231e3) * ((0.1e1 - np.cos(phi)) ** 3) * ((0.1e1 + np.cos(phi)) ** 3) * np.sqrt(0.2e1) / 64 - np.exp((6*1j) * phi2) * np.sqrt(0.231e3) * ((0.1e1 - np.cos(phi)) ** 3) * ((0.1e1 + np.cos(phi)) ** 3) * np.sqrt(0.2e1) / 64
    out_tvalues[29, :] = (0.1e1 / 0.322560e6*1j) * np.exp((1j) * phi1) * np.sqrt(0.42e2) * np.sqrt(0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** (-0.1e1 / 0.2e1)) * (-0.5040e4 * (0.1e1 + np.cos(phi)) ** 6 + 0.75600e5 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5 - 0.252000e6 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4 + 0.252000e6 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3 - 0.75600e5 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2 + 0.5040e4 * (0.1e1 - np.cos(phi)) ** 5 * (0.1e1 + np.cos(phi)))
    out_tvalues[30, :] = (0.3e1 / 0.64e2*1j) * np.exp((1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.22e2) * ((0.1e1 - np.cos(phi)) ** (0.7e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.5e1 / 0.2e1)) * np.sqrt(0.2e1) + (-0.3e1 / 0.64e2*1j) * np.exp((1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.22e2) * ((0.1e1 - np.cos(phi)) ** (0.5e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.7e1 / 0.2e1)) * np.sqrt(0.2e1)
    out_tvalues[31, :] = -np.exp((2*1j) * phi1) * np.sqrt(0.105e3) * (0.1e1 - np.cos(phi)) / (0.1e1 + np.cos(phi)) * (0.20160e5 * (0.1e1 + np.cos(phi)) ** 6 - 0.161280e6 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5 + 0.302400e6 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4 - 0.161280e6 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3 + 0.20160e5 * (0.1e1 - np.cos(phi)) ** 4 * (0.1e1 + np.cos(phi)) ** 2) / 645120
    out_tvalues[32, :] = (0.3e1 / 0.128e3) * np.exp((2*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** 4) * ((0.1e1 + np.cos(phi)) ** 2) * np.sqrt(0.2e1) + (0.3e1 / 0.128e3) * np.exp((2*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** 2) * ((0.1e1 + np.cos(phi)) ** 4) * np.sqrt(0.2e1)
    out_tvalues[33, :] = (-0.1e1 / 0.967680e6*1j) * np.exp((3*1j) * phi1) * np.sqrt(0.105e3) * ((0.1e1 - np.cos(phi)) ** (0.3e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (-0.3e1 / 0.2e1)) * (-0.60480e5 * (0.1e1 + np.cos(phi)) ** 6 + 0.272160e6 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5 - 0.272160e6 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4 + 0.60480e5 * (0.1e1 - np.cos(phi)) ** 3 * (0.1e1 + np.cos(phi)) ** 3)
    out_tvalues[34, :] = (-0.1e1 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** (0.9e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.3e1 / 0.2e1)) * np.sqrt(0.2e1) + (0.1e1 / 0.64e2*1j) * np.exp((3*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.55e2) * ((0.1e1 - np.cos(phi)) ** (0.3e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (0.9e1 / 0.2e1)) * np.sqrt(0.2e1)
    out_tvalues[35, :] = np.exp((4*1j) * phi1) * np.sqrt(0.14e2) * ((0.1e1 - np.cos(phi)) ** 2) / ((0.1e1 + np.cos(phi)) ** 2) * (0.151200e6 * (0.1e1 + np.cos(phi)) ** 6 - 0.362880e6 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5 + 0.151200e6 * (0.1e1 - np.cos(phi)) ** 2 * (0.1e1 + np.cos(phi)) ** 4) / 645120
    out_tvalues[36, :] = -np.exp((4*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.66e2) * ((0.1e1 - np.cos(phi)) ** 5) * (0.1e1 + np.cos(phi)) * np.sqrt(0.2e1) / 128 - np.exp((4*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.66e2) * (0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** 5) * np.sqrt(0.2e1) / 128
    out_tvalues[37, :] = (0.1e1 / 0.3548160e7*1j) * np.exp((5*1j) * phi1) * np.sqrt(0.77e2) * ((0.1e1 - np.cos(phi)) ** (0.5e1 / 0.2e1)) * ((0.1e1 + np.cos(phi)) ** (-0.5e1 / 0.2e1)) * (-0.332640e6 * (0.1e1 + np.cos(phi)) ** 6 + 0.332640e6 * (0.1e1 - np.cos(phi)) * (0.1e1 + np.cos(phi)) ** 5)
    out_tvalues[38, :] = (0.1e1 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.exp((-6*1j) * phi2) * np.sqrt(0.3e1) * ((0.1e1 - np.cos(phi)) ** (0.11e2 / 0.2e1)) * np.sqrt(0.1e1 + np.cos(phi)) * np.sqrt(0.2e1) + (-0.1e1 / 0.64e2*1j) * np.exp((5*1j) * phi1) * np.exp((6*1j) * phi2) * np.sqrt(0.3e1) * np.sqrt(0.1e1 - np.cos(phi)) * ((0.1e1 + np.cos(phi)) ** (0.11e2 / 0.2e1)) * np.sqrt(0.2e1)
    out_tvalues[39, :] = -np.exp((6*1j) * phi1) * np.sqrt(0.231e3) * ((0.1e1 - np.cos(phi)) ** 3) * ((0.1e1 + np.cos(phi)) ** 3) / 32
    out_tvalues[40, :] = np.exp((6*1j) * phi1) * np.exp((-6*1j) * phi2) * ((0.1e1 - np.cos(phi)) ** 6) * np.sqrt(0.2e1) / 128 + np.exp((6*1j) * phi1) * np.exp((6*1j) * phi2) * ((0.1e1 + np.cos(phi)) ** 6) * np.sqrt(0.2e1) / 128

    return out_tvalues

if __name__ == '__main__':
    tvals = gsh(np.array([[.1], [.2], [.3]]))
    print tvals
