import numpy as np


def gsh_basis_info():

    indxvec = np.array([[0, 0, 1],
                        [2, 0, 1],
                        [2, 1, 1],
                        [2, 2, 1],
                        [4, 0, 1],
                        [4, 1, 1],
                        [4, 2, 1],
                        [4, 3, 1],
                        [4, 4, 1],
                        [6, 0, 1],
                        [6, 0, 2],
                        [6, 1, 1],
                        [6, 1, 2],
                        [6, 2, 1],
                        [6, 2, 2],
                        [6, 3, 1],
                        [6, 3, 2],
                        [6, 4, 1],
                        [6, 4, 2],
                        [6, 5, 1],
                        [6, 5, 2],
                        [6, 6, 1],
                        [6, 6, 2],
                        [7, 0, 1],
                        [7, 1, 1],
                        [7, 2, 1],
                        [7, 3, 1],
                        [7, 4, 1],
                        [7, 5, 1],
                        [7, 6, 1],
                        [7, 7, 1],
                        [8, 0, 1],
                        [8, 0, 2],
                        [8, 1, 1],
                        [8, 1, 2],
                        [8, 2, 1],
                        [8, 2, 2],
                        [8, 3, 1],
                        [8, 3, 2],
                        [8, 4, 1],
                        [8, 4, 2],
                        [8, 5, 1],
                        [8, 5, 2],
                        [8, 6, 1],
                        [8, 6, 2],
                        [8, 7, 1],
                        [8, 7, 2],
                        [8, 8, 1],
                        [8, 8, 2],
                        [9, 0, 1],
                        [9, 1, 1],
                        [9, 2, 1],
                        [9, 3, 1],
                        [9, 4, 1],
                        [9, 5, 1],
                        [9, 6, 1],
                        [9, 7, 1],
                        [9, 8, 1],
                        [9, 9, 1],
                        [10, 0, 1],
                        [10, 0, 2],
                        [10, 1, 1],
                        [10, 1, 2],
                        [10, 2, 1],
                        [10, 2, 2],
                        [10, 3, 1],
                        [10, 3, 2],
                        [10, 4, 1],
                        [10, 4, 2],
                        [10, 5, 1],
                        [10, 5, 2],
                        [10, 6, 1],
                        [10, 6, 2],
                        [10, 7, 1],
                        [10, 7, 2],
                        [10, 8, 1],
                        [10, 8, 2],
                        [10, 9, 1],
                        [10, 9, 2],
                        [10, 10, 1],
                        [10, 10, 2],
                        [11, 0, 1],
                        [11, 1, 1],
                        [11, 2, 1],
                        [11, 3, 1],
                        [11, 4, 1],
                        [11, 5, 1],
                        [11, 6, 1],
                        [11, 7, 1],
                        [11, 8, 1],
                        [11, 9, 1],
                        [11, 10, 1],
                        [11, 11, 1],
                        [12, 0, 1],
                        [12, 0, 2],
                        [12, 0, 3],
                        [12, 1, 1],
                        [12, 1, 2],
                        [12, 1, 3],
                        [12, 2, 1],
                        [12, 2, 2],
                        [12, 2, 3],
                        [12, 3, 1],
                        [12, 3, 2],
                        [12, 3, 3],
                        [12, 4, 1],
                        [12, 4, 2],
                        [12, 4, 3],
                        [12, 5, 1],
                        [12, 5, 2],
                        [12, 5, 3],
                        [12, 6, 1],
                        [12, 6, 2],
                        [12, 6, 3],
                        [12, 7, 1],
                        [12, 7, 2],
                        [12, 7, 3],
                        [12, 8, 1],
                        [12, 8, 2],
                        [12, 8, 3],
                        [12, 9, 1],
                        [12, 9, 2],
                        [12, 9, 3],
                        [12, 10, 1],
                        [12, 10, 2],
                        [12, 10, 3],
                        [12, 11, 1],
                        [12, 11, 2],
                        [12, 11, 3],
                        [12, 12, 1],
                        [12, 12, 2],
                        [12, 12, 3],
                        [13, 0, 1],
                        [13, 0, 2],
                        [13, 1, 1],
                        [13, 1, 2],
                        [13, 2, 1],
                        [13, 2, 2],
                        [13, 3, 1],
                        [13, 3, 2],
                        [13, 4, 1],
                        [13, 4, 2],
                        [13, 5, 1],
                        [13, 5, 2],
                        [13, 6, 1],
                        [13, 6, 2],
                        [13, 7, 1],
                        [13, 7, 2],
                        [13, 8, 1],
                        [13, 8, 2],
                        [13, 9, 1],
                        [13, 9, 2],
                        [13, 10, 1],
                        [13, 10, 2],
                        [13, 11, 1],
                        [13, 11, 2],
                        [13, 12, 1],
                        [13, 12, 2],
                        [13, 13, 1],
                        [13, 13, 2],
                        [14, 0, 1],
                        [14, 0, 2],
                        [14, 0, 3],
                        [14, 1, 1],
                        [14, 1, 2],
                        [14, 1, 3],
                        [14, 2, 1],
                        [14, 2, 2],
                        [14, 2, 3],
                        [14, 3, 1],
                        [14, 3, 2],
                        [14, 3, 3],
                        [14, 4, 1],
                        [14, 4, 2],
                        [14, 4, 3],
                        [14, 5, 1],
                        [14, 5, 2],
                        [14, 5, 3],
                        [14, 6, 1],
                        [14, 6, 2],
                        [14, 6, 3],
                        [14, 7, 1],
                        [14, 7, 2],
                        [14, 7, 3],
                        [14, 8, 1],
                        [14, 8, 2],
                        [14, 8, 3],
                        [14, 9, 1],
                        [14, 9, 2],
                        [14, 9, 3],
                        [14, 10, 1],
                        [14, 10, 2],
                        [14, 10, 3],
                        [14, 11, 1],
                        [14, 11, 2],
                        [14, 11, 3],
                        [14, 12, 1],
                        [14, 12, 2],
                        [14, 12, 3],
                        [14, 13, 1],
                        [14, 13, 2],
                        [14, 13, 3],
                        [14, 14, 1],
                        [14, 14, 2],
                        [14, 14, 3],
                        [15, 0, 1],
                        [15, 0, 2],
                        [15, 1, 1],
                        [15, 1, 2],
                        [15, 2, 1],
                        [15, 2, 2],
                        [15, 3, 1],
                        [15, 3, 2],
                        [15, 4, 1],
                        [15, 4, 2],
                        [15, 5, 1],
                        [15, 5, 2],
                        [15, 6, 1],
                        [15, 6, 2],
                        [15, 7, 1],
                        [15, 7, 2],
                        [15, 8, 1],
                        [15, 8, 2],
                        [15, 9, 1],
                        [15, 9, 2],
                        [15, 10, 1],
                        [15, 10, 2],
                        [15, 11, 1],
                        [15, 11, 2],
                        [15, 12, 1],
                        [15, 12, 2],
                        [15, 13, 1],
                        [15, 13, 2],
                        [15, 14, 1],
                        [15, 14, 2],
                        [15, 15, 1],
                        [15, 15, 2],
                        [16, 0, 1],
                        [16, 0, 2],
                        [16, 0, 3],
                        [16, 1, 1],
                        [16, 1, 2],
                        [16, 1, 3],
                        [16, 2, 1],
                        [16, 2, 2],
                        [16, 2, 3],
                        [16, 3, 1],
                        [16, 3, 2],
                        [16, 3, 3],
                        [16, 4, 1],
                        [16, 4, 2],
                        [16, 4, 3],
                        [16, 5, 1],
                        [16, 5, 2],
                        [16, 5, 3],
                        [16, 6, 1],
                        [16, 6, 2],
                        [16, 6, 3],
                        [16, 7, 1],
                        [16, 7, 2],
                        [16, 7, 3],
                        [16, 8, 1],
                        [16, 8, 2],
                        [16, 8, 3],
                        [16, 9, 1],
                        [16, 9, 2],
                        [16, 9, 3],
                        [16, 10, 1],
                        [16, 10, 2],
                        [16, 10, 3],
                        [16, 11, 1],
                        [16, 11, 2],
                        [16, 11, 3],
                        [16, 12, 1],
                        [16, 12, 2],
                        [16, 12, 3],
                        [16, 13, 1],
                        [16, 13, 2],
                        [16, 13, 3],
                        [16, 14, 1],
                        [16, 14, 2],
                        [16, 14, 3],
                        [16, 15, 1],
                        [16, 15, 2],
                        [16, 15, 3],
                        [16, 16, 1],
                        [16, 16, 2],
                        [16, 16, 3]])

    return indxvec


def gsh_eval(X, Bvec):

    phi1 = X[..., 0]
    phi = X[..., 1]
    phi2 = X[..., 2]

    zvec = np.abs(phi) < 1e-8
    zvec = zvec.astype(int)
    randvec = np.round(np.random.rand(zvec.size)).reshape(zvec.shape)
    randvecopp = np.ones(zvec.shape) - randvec
    phi += (1e-7)*zvec*(randvec - randvecopp)

    final_shape = np.hstack([phi1.shape, len(Bvec)])
    tfunc = np.zeros(final_shape, dtype='float64')

    c = 0
    for Bindx in Bvec:

        if Bindx == 0:
            tfunc[..., c] = 1

        if Bindx == 1:
            t1 = np.cos(phi)
            tfunc[..., c] = 0.15e2 / 0.2e1 * t1 ** 2 - 0.5e1 / 0.2e1

        if Bindx == 2:
            t3 = np.cos(phi)
            t2 = np.sin(phi)
            tfunc[..., c] = -0.5e1 * np.sqrt(0.3e1) * t3 * t2 ** 2 * np.sin(phi1) * ((1 + t3) ** (-0.1e1 / 0.2e1)) * ((1 - t3) ** (-0.1e1 / 0.2e1))

        if Bindx == 3:
            t4 = np.cos(phi)
            tfunc[..., c] = -0.5e1 / 0.2e1 * np.sqrt(0.3e1) * (t4 ** 2 - 1) * np.cos((2 * phi1))

        if Bindx == 4:
            t5 = np.cos(phi)
            t6 = t5 ** 2
            tfunc[..., c] = 0.27e2 / 0.8e1 + (-0.135e3 / 0.4e1 + 0.315e3 / 0.8e1 * t6) * t6

        if Bindx == 5:
            t9 = np.cos(phi)
            t8 = np.sin(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.5e1) * t9 * t8 ** 2 * (7 * t9 ** 2 - 3) * np.sin(phi1) * ((1 + t9) ** (-0.1e1 / 0.2e1)) * ((1 - t9) ** (-0.1e1 / 0.2e1))

        if Bindx == 6:
            t10 = np.cos(phi)
            t11 = t10 ** 2
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.5e1) * (1 + (-8 + 7 * t11) * t11) * np.cos((2 * phi1))

        if Bindx == 7:
            t16 = np.sin(phi)
            t14 = t16 ** 2
            t13 = np.cos(phi)
            tfunc[..., c] = -0.9e1 / 0.4e1 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * t13 * t14 ** 2 * np.sin((3 * phi1)) * ((1 + t13) ** (-0.1e1 / 0.2e1)) * ((1 - t13) ** (-0.1e1 / 0.2e1))

        if Bindx == 8:
            t17 = np.cos(phi)
            t18 = t17 ** 2
            tfunc[..., c] = 0.9e1 / 0.8e1 * np.sqrt(0.35e2) * np.cos((4 * phi1)) * (1 + (-2 + t18) * t18)

        if Bindx == 9:
            t20 = np.cos(phi)
            t21 = t20 ** 2
            t22 = t21 ** 2
            tfunc[..., c] = -0.4095e4 / 0.16e2 * t22 - 0.65e2 / 0.16e2 + (0.3003e4 / 0.16e2 * t22 + 0.1365e4 / 0.16e2) * t21

        if Bindx == 10:
            t24 = np.cos(phi)
            t25 = t24 ** 2
            t26 = t25 ** 2
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.231e3) * np.cos((6 * phi2)) * (-3 * t26 - 1 + (t26 + 3) * t25)

        if Bindx == 11:
            t29 = np.cos(phi)
            t30 = t29 ** 2
            t28 = np.sin(phi)
            tfunc[..., c] = -0.13e2 / 0.8e1 * np.sqrt(0.21e2) * t29 * t28 ** 2 * (5 + (-30 + 33 * t30) * t30) * np.sin(phi1) * ((1 + t29) ** (-0.1e1 / 0.2e1)) * ((1 - t29) ** (-0.1e1 / 0.2e1))

        if Bindx == 12:
            t38 = np.cos(phi)
            t37 = t38 ** 2
            t44 = 1 + (-2 + t37) * t37
            t42 = t44 * t38
            tfunc[..., c] = 0.39e2 / 0.32e2 * np.sqrt(0.22e2) * np.sqrt((1 + t38)) * np.sqrt((1 - t38)) * ((t42 - t44) * np.sin((phi1 - 6 * phi2)) + (t42 + t44) * np.sin((phi1 + 6 * phi2)))

        if Bindx == 13:
            t45 = np.cos(phi)
            t46 = t45 ** 2
            t47 = t46 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * (-51 * t47 - 1 + (33 * t47 + 19) * t46) * np.cos((2 * phi1))

        if Bindx == 14:
            t56 = np.cos(phi)
            t55 = t56 ** 2
            t58 = t56 * t55
            t59 = t55 ** 2
            t63 = -2 * t56 * t59 - 2 * t56 + 4 * t58
            t62 = t58 ** 2 - t55 - t59 + 1
            t57 = 2 * phi1
            tfunc[..., c] = 0.39e2 / 0.64e2 * np.sqrt(0.55e2) * ((t62 + t63) * np.cos((-t57 + 6 * phi2)) + (t62 - t63) * np.cos((t57 + 6 * phi2)))

        if Bindx == 15:
            t67 = np.sin(phi)
            t65 = t67 ** 2
            t64 = np.cos(phi)
            tfunc[..., c] = -0.13e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.105e3) * t64 * t65 ** 2 * (11 * t64 ** 2 - 3) * np.sin((3 * phi1)) * ((1 + t64) ** (-0.1e1 / 0.2e1)) * ((1 - t64) ** (-0.1e1 / 0.2e1))

        if Bindx == 16:
            t74 = np.cos(phi)
            t73 = t74 ** 2
            t81 = 2 * t73
            t77 = t73 ** 2
            t80 = 1 + t81 - 3 * t77
            t79 = (t77 + t81 - 3) * t74
            t75 = 3 * phi1
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.55e2) * np.sqrt((1 - t74)) * np.sqrt((1 + t74)) * (-(t79 + t80) * np.sin((-t75 + 6 * phi2)) + (t79 - t80) * np.sin((t75 + 6 * phi2)))

        if Bindx == 17:
            t82 = np.cos(phi)
            t83 = t82 ** 2
            t84 = t83 ** 2
            tfunc[..., c] = 0.39e2 / 0.16e2 * np.sqrt(0.7e1) * (-23 * t84 - 1 + (11 * t84 + 13) * t83) * np.cos((4 * phi1))

        if Bindx == 18:
            t92 = np.cos(phi)
            t91 = t92 ** 2
            t94 = t91 ** 2
            t95 = t92 * t94
            t98 = 4 * t92 - 4 * t95
            t97 = t92 * t95 - 5 * t91 + 5 * t94 - 1
            t93 = 4 * phi1
            tfunc[..., c] = -0.13e2 / 0.64e2 * np.sqrt(0.66e2) * ((t97 + t98) * np.cos((-t93 + 6 * phi2)) + (t97 - t98) * np.cos((t93 + 6 * phi2)))

        if Bindx == 19:
            t103 = np.sin(phi)
            t100 = t103 ** 2
            t101 = t103 * t100
            t99 = np.cos(phi)
            tfunc[..., c] = -0.39e2 / 0.16e2 * np.sqrt(0.2e1) * np.sqrt(0.77e2) * t99 * t101 ** 2 * np.sin((5 * phi1)) * ((1 + t99) ** (-0.1e1 / 0.2e1)) * ((1 - t99) ** (-0.1e1 / 0.2e1))

        if Bindx == 20:
            t110 = np.cos(phi)
            t109 = t110 ** 2
            t113 = t109 ** 2
            t116 = -1 - 10 * t109 - 5 * t113
            t115 = (10 * t109 + t113 + 5) * t110
            t111 = 5 * phi1
            tfunc[..., c] = 0.13e2 / 0.32e2 * np.sqrt(0.3e1) * np.sqrt((1 - t110)) * np.sqrt((1 + t110)) * (-(t115 + t116) * np.sin((-t111 + 6 * phi2)) + (t115 - t116) * np.sin((t111 + 6 * phi2)))

        if Bindx == 21:
            t117 = np.cos(phi)
            t118 = t117 ** 2
            t119 = t118 ** 2
            tfunc[..., c] = -0.13e2 / 0.32e2 * np.sqrt(0.2e1) * np.sqrt(0.231e3) * np.cos((6 * phi1)) * (-3 * t119 - 1 + (t119 + 3) * t118)

        if Bindx == 22:
            t128 = np.cos(phi)
            t135 = -0.39e2 / 0.32e2 * t128
            t127 = t128 ** 2
            t129 = t128 * t127
            t130 = t127 ** 2
            t134 = -0.65e2 / 0.16e2 * t129 + t130 * t135 + t135
            t133 = 0.13e2 / 0.64e2 * t129 ** 2 + 0.13e2 / 0.64e2 + 0.195e3 / 0.64e2 * t130 + 0.195e3 / 0.64e2 * t127
            tfunc[..., c] = (t133 + t134) * np.cos((6 * phi1 - 6 * phi2)) + (t133 - t134) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 23:
            tfunc[..., c] = 0

        if Bindx == 24:
            t145 = np.cos(phi)
            t144 = t145 ** 2
            t146 = t145 * t144
            t147 = t144 ** 2
            t149 = t146 ** 2
            t153 = 18 * t146 + 6 * (-3 * t147 + t149 - 1) * t145
            t152 = 10 * t144 + 22 * t149 - 1 + (-24 - 7 * t147) * t147
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.858e3) * ((t152 + t153) * np.sin((phi1 - 6 * phi2)) + (-t152 + t153) * np.sin((phi1 + 6 * phi2))) * ((1 + t145) ** (-0.1e1 / 0.2e1)) * ((1 - t145) ** (-0.1e1 / 0.2e1))

        if Bindx == 25:
            t162 = np.cos(phi)
            t161 = t162 ** 2
            t165 = t161 ** 2
            t164 = t162 * t161
            t167 = t164 ** 2
            t170 = -2 + 16 * t161 - 26 * t165 + 12 * t167
            t169 = -t164 + (11 * t165 - 7 * t167 - 3) * t162
            t163 = 2 * phi1
            tfunc[..., c] = 0.15e2 / 0.64e2 * np.sqrt(0.143e3) * ((t169 + t170) * np.cos((-t163 + 6 * phi2)) + (-t169 + t170) * np.cos((t163 + 6 * phi2)))

        if Bindx == 26:
            t180 = np.cos(phi)
            t179 = t180 ** 2
            t182 = t180 * t179
            t183 = t179 ** 2
            t185 = t182 ** 2
            t189 = -22 * t182 + (38 * t183 - 18 * t185 + 2) * t180
            t188 = -18 * t179 + 2 * t185 + 3 + (20 - 7 * t183) * t183
            t181 = 3 * phi1
            tfunc[..., c] = -0.15e2 / 0.128e3 * np.sqrt(0.286e3) * (-(-t188 + t189) * np.sin((-t181 + 6 * phi2)) + (t188 + t189) * np.sin((t181 + 6 * phi2))) * ((1 + t180) ** (-0.1e1 / 0.2e1)) * ((1 - t180) ** (-0.1e1 / 0.2e1))

        if Bindx == 27:
            t198 = np.cos(phi)
            t197 = t198 ** 2
            t201 = t197 ** 2
            t200 = t198 * t197
            t203 = t200 ** 2
            t206 = 4 - 8 * t197 - 20 * t201 + 24 * t203
            t205 = 35 * t200 + (-19 * t201 - 7 * t203 - 9) * t198
            t199 = 4 * phi1
            tfunc[..., c] = -0.15e2 / 0.64e2 * np.sqrt(0.26e2) * ((t205 + t206) * np.cos((-t199 + 6 * phi2)) + (-t205 + t206) * np.cos((t199 + 6 * phi2)))

        if Bindx == 28:
            t216 = np.cos(phi)
            t215 = t216 ** 2
            t218 = t216 * t215
            t219 = t215 ** 2
            t221 = t218 ** 2
            t225 = 38 * t218 + (10 * t219 - 30 * t221 - 18) * t216
            t224 = -10 * t215 - 38 * t221 - 5 + (60 - 7 * t219) * t219
            t217 = 5 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.26e2) * (-(-t224 + t225) * np.sin((-t217 + 6 * phi2)) + (t224 + t225) * np.sin((t217 + 6 * phi2))) * ((1 + t216) ** (-0.1e1 / 0.2e1)) * ((1 - t216) ** (-0.1e1 / 0.2e1))

        if Bindx == 29:
            t234 = np.cos(phi)
            t233 = t234 ** 2
            t236 = t233 ** 2
            t235 = t234 * t233
            t238 = t235 ** 2
            t241 = 0.375e3 / 0.32e2 * t236 + 0.135e3 / 0.16e2 * t238 - 0.45e2 / 0.4e1 * t233 - 0.45e2 / 0.32e2
            t240 = 0.225e3 / 0.64e2 * t235 + (-0.1035e4 / 0.64e2 * t236 - 0.105e3 / 0.64e2 * t238 + 0.435e3 / 0.64e2) * t234
            tfunc[..., c] = (t240 + t241) * np.cos((6 * phi1 - 6 * phi2)) + (-t240 + t241) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 30:
            t250 = np.cos(phi)
            t249 = t250 ** 2
            t259 = 14 * t249
            t252 = t250 * t249
            t254 = t252 ** 2
            t255 = t250 * t254
            t258 = -t250 * t255 - 14 * t254 + t259 + 1
            t257 = -6 * t250 + 6 * t255 + (t259 - 14) * t252
            t251 = 7 * phi1
            tfunc[..., c] = 0.15e2 / 0.128e3 * np.sqrt(0.14e2) * (-(t257 + t258) * np.sin((-t251 + 6 * phi2)) + (t257 - t258) * np.sin((t251 + 6 * phi2))) * ((1 + t250) ** (-0.1e1 / 0.2e1)) * ((1 - t250) ** (-0.1e1 / 0.2e1))

        if Bindx == 31:
            t260 = np.cos(phi)
            t261 = t260 ** 2
            t262 = t261 ** 2
            tfunc[..., c] = -0.5355e4 / 0.32e2 * t261 + 0.595e3 / 0.128e3 + (-0.51051e5 / 0.32e2 * t261 + 0.58905e5 / 0.64e2 + 0.109395e6 / 0.128e3 * t262) * t262

        if Bindx == 32:
            t265 = np.cos(phi)
            t266 = t265 ** 2
            t267 = t266 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.429e3) * (-18 * t266 + 1 + (-46 * t266 + 48 + 15 * t267) * t267) * np.cos((6 * phi2))

        if Bindx == 33:
            t271 = np.cos(phi)
            t272 = t271 ** 2
            t273 = t272 ** 2
            t270 = np.sin(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * t271 * t270 ** 2 * (-1001 * t273 - 35 + (715 * t273 + 385) * t272) * np.sin(phi1) * ((1 + t271) ** (-0.1e1 / 0.2e1)) * ((1 - t271) ** (-0.1e1 / 0.2e1))

        if Bindx == 34:
            t285 = np.cos(phi)
            t284 = t285 ** 2
            t287 = t284 ** 2
            t286 = t285 * t284
            t289 = t286 ** 2
            t291 = t287 ** 2
            t294 = -1 + 18 * t284 - 48 * t287 + 46 * t289 - 15 * t291
            t293 = -38 * t286 + (78 * t287 - 66 * t289 + 20 * t291 + 6) * t285
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.858e3) * ((t293 + t294) * np.sin((phi1 - 6 * phi2)) + (t293 - t294) * np.sin((phi1 + 6 * phi2))) * ((1 + t285) ** (-0.1e1 / 0.2e1)) * ((1 - t285) ** (-0.1e1 / 0.2e1))

        if Bindx == 35:
            t295 = np.cos(phi)
            t296 = t295 ** 2
            t297 = t296 ** 2
            tfunc[..., c] = -0.51e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.35e2) * (-34 * t296 + 1 + (-286 * t296 + 176 + 143 * t297) * t297) * np.cos((2 * phi1))

        if Bindx == 36:
            t308 = np.cos(phi)
            t307 = t308 ** 2
            t310 = t308 * t307
            t311 = t307 ** 2
            t313 = t310 ** 2
            t316 = 2 * t310 + 2 * (-2 * t311 + t313) * t308
            t315 = 1 - 5 * t307 + 7 * t311 - 3 * t313
            t309 = 2 * phi1
            tfunc[..., c] = 0.17e2 / 0.64e2 * np.sqrt(0.15015e5) * t308 * ((t315 + t316) * np.cos((-t309 + 6 * phi2)) + (-t315 + t316) * np.cos((t309 + 6 * phi2)))

        if Bindx == 37:
            t322 = np.sin(phi)
            t320 = t322 ** 2
            t317 = np.cos(phi)
            t318 = t317 ** 2
            tfunc[..., c] = -0.17e2 / 0.32e2 * np.sqrt(0.1155e4) * t317 * t320 ** 2 * (3 + (-26 + 39 * t318) * t318) * np.sin((3 * phi1)) * ((1 + t317) ** (-0.1e1 / 0.2e1)) * ((1 - t317) ** (-0.1e1 / 0.2e1))

        if Bindx == 38:
            t333 = np.cos(phi)
            t332 = t333 ** 2
            t336 = t332 ** 2
            t335 = t333 * t332
            t338 = t335 ** 2
            t340 = t336 ** 2
            t343 = -1 + 14 * t332 - 52 * t336 + 66 * t338 - 27 * t340
            t342 = 22 * t335 - 14 * (t336 + t338) * t333 + (12 * t340 - 6) * t333
            t334 = 3 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.910e3) * (-(t342 + t343) * np.sin((-t334 + 6 * phi2)) + (t342 - t343) * np.sin((t334 + 6 * phi2))) * ((1 + t333) ** (-0.1e1 / 0.2e1)) * ((1 - t333) ** (-0.1e1 / 0.2e1))

        if Bindx == 39:
            t345 = np.cos(phi)
            t346 = t345 ** 2
            t347 = t346 ** 2
            tfunc[..., c] = 0.51e2 / 0.64e2 * np.sqrt(0.77e2) * (-28 * t346 + 1 + (-156 * t346 + 118 + 65 * t347) * t347) * np.cos((4 * phi1))

        if Bindx == 40:
            t359 = np.cos(phi)
            t358 = t359 ** 2
            t361 = t359 * t358
            t362 = t358 ** 2
            t364 = t361 ** 2
            t368 = -5 * t361 + (21 * t362 - 15 * t364 - 1) * t359
            t367 = 10 * t358 + 6 * t364 - 1 + (-20 + 5 * t362) * t362
            t360 = 4 * phi1
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.546e3) * ((t367 + t368) * np.cos((-t360 + 6 * phi2)) + (t367 - t368) * np.cos((t360 + 6 * phi2)))

        if Bindx == 41:
            t373 = np.sin(phi)
            t370 = t373 ** 2
            t371 = t373 * t370
            t369 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.1001e4) * t369 * t371 ** 2 * (5 * t369 ** 2 - 1) * np.sin((5 * phi1)) * ((1 + t369) ** (-0.1e1 / 0.2e1)) * ((1 - t369) ** (-0.1e1 / 0.2e1))

        if Bindx == 42:
            t384 = np.cos(phi)
            t383 = t384 ** 2
            t387 = t383 ** 2
            t386 = t384 * t383
            t389 = t386 ** 2
            t391 = t387 ** 2
            t394 = 7 - 42 * t383 + 20 * t387 + 90 * t389 - 75 * t391
            t393 = 90 * t386 + (-162 * t387 + 62 * t389 + 20 * t391 - 10) * t384
            t385 = 5 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.42e2) * (-(t393 + t394) * np.sin((-t385 + 6 * phi2)) + (t393 - t394) * np.sin((t385 + 6 * phi2))) * ((1 + t384) ** (-0.1e1 / 0.2e1)) * ((1 - t384) ** (-0.1e1 / 0.2e1))

        if Bindx == 43:
            t395 = np.cos(phi)
            t396 = t395 ** 2
            t397 = t396 ** 2
            tfunc[..., c] = -0.17e2 / 0.64e2 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * (-18 * t396 + 1 + (-46 * t396 + 48 + 15 * t397) * t397) * np.cos((6 * phi1))

        if Bindx == 44:
            t408 = np.cos(phi)
            t409 = t408 ** 2
            t411 = t409 ** 2
            t410 = t408 * t409
            t413 = t410 ** 2
            t417 = 0.833e3 / 0.16e2 * t413 + 0.17e2 / 0.4e1 + (-0.1785e4 / 0.32e2 + 0.255e3 / 0.32e2 * t411) * t411
            t416 = 0.2975e4 / 0.64e2 * t410 + (-0.2295e4 / 0.64e2 * t413 - 0.357e3 / 0.64e2 * t411 - 0.867e3 / 0.64e2) * t408
            tfunc[..., c] = (t416 + t417) * np.cos((6 * phi1 - 6 * phi2)) + (-t416 + t417) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 45:
            t422 = np.sin(phi)
            t419 = t422 ** 2
            t420 = t419 ** 2
            t418 = np.cos(phi)
            tfunc[..., c] = -0.51e2 / 0.32e2 * np.sqrt(0.715e3) * t418 * t420 ** 2 * np.sin((7 * phi1)) * ((1 + t418) ** (-0.1e1 / 0.2e1)) * ((1 - t418) ** (-0.1e1 / 0.2e1))

        if Bindx == 46:
            t433 = np.cos(phi)
            t432 = t433 ** 2
            t436 = t432 ** 2
            t435 = t433 * t432
            t438 = t435 ** 2
            t440 = t436 ** 2
            t443 = -3 - 18 * t432 + 56 * t436 - 14 * t438 - 21 * t440
            t442 = -14 * t435 + (-42 * t436 + 38 * t438 + 4 * t440 + 14) * t433
            t434 = 7 * phi1
            tfunc[..., c] = 0.17e2 / 0.128e3 * np.sqrt(0.30e2) * (-(t442 + t443) * np.sin((-t434 + 6 * phi2)) + (t442 - t443) * np.sin((t434 + 6 * phi2))) * ((1 + t433) ** (-0.1e1 / 0.2e1)) * ((1 - t433) ** (-0.1e1 / 0.2e1))

        if Bindx == 47:
            t444 = np.cos(phi)
            t445 = t444 ** 2
            t449 = -4 * t445
            t446 = t445 ** 2
            tfunc[..., c] = 0.51e2 / 0.128e3 * np.sqrt(0.715e3) * np.cos((8 * phi1)) * (t449 + 1 + (t449 + 6 + t446) * t446)

        if Bindx == 48:
            t458 = np.cos(phi)
            t457 = t458 ** 2
            t467 = -14 * t457
            t460 = t458 * t457
            t462 = t460 ** 2
            t463 = t458 * t462
            t466 = t458 * t463 + 14 * t462 + t467 - 1
            t465 = 6 * t458 - 6 * t463 + (t467 + 14) * t460
            t459 = 8 * phi1
            tfunc[..., c] = -0.17e2 / 0.128e3 * np.sqrt(0.30e2) * ((t465 + t466) * np.cos((-t459 + 6 * phi2)) + (-t465 + t466) * np.cos((t459 + 6 * phi2)))

        if Bindx == 49:
            tfunc[..., c] = 0

        if Bindx == 50:
            t479 = np.cos(phi)
            t478 = t479 ** 2
            t480 = t479 * t478
            t481 = t478 ** 2
            t482 = t479 * t481
            t483 = t480 ** 2
            t485 = t481 ** 2
            t489 = -52 * t480 + 120 * t482 + (-108 * t483 + 34 * t485 + 6) * t479
            t488 = -51 * t482 ** 2 - 27 * t478 + 126 * t481 - 226 * t483 + 177 * t485 + 1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.858e3) * ((t488 + t489) * np.sin((phi1 - 6 * phi2)) + (-t488 + t489) * np.sin((phi1 + 6 * phi2))) * ((1 + t479) ** (-0.1e1 / 0.2e1)) * ((1 - t479) ** (-0.1e1 / 0.2e1))

        if Bindx == 51:
            t500 = np.cos(phi)
            t499 = t500 ** 2
            t503 = t499 ** 2
            t502 = t500 * t499
            t505 = t502 ** 2
            t507 = t503 ** 2
            t510 = 3 - 75 * t499 + 277 * t503 - 341 * t505 + 136 * t507
            t509 = 44 * t502 + (-178 * t503 + 240 * t505 - 102 * t507 - 4) * t500
            t501 = 2 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.39e2) * ((t509 + t510) * np.cos((-t501 + 6 * phi2)) + (-t509 + t510) * np.cos((t501 + 6 * phi2)))

        if Bindx == 52:
            t522 = np.cos(phi)
            t521 = t522 ** 2
            t524 = t522 * t521
            t525 = t521 ** 2
            t526 = t522 * t525
            t527 = t524 ** 2
            t529 = t525 ** 2
            t533 = 98 * t524 - 262 * t526 + (278 * t527 - 102 * t529 - 12) * t522
            t532 = -51 * t526 ** 2 + 23 * t521 - 52 * t525 - 12 * t527 + 93 * t529 - 1
            t523 = 3 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.91e2) * (-(-t532 + t533) * np.sin((-t523 + 6 * phi2)) + (t532 + t533) * np.sin((t523 + 6 * phi2))) * ((1 + t522) ** (-0.1e1 / 0.2e1)) * ((1 - t522) ** (-0.1e1 / 0.2e1))

        if Bindx == 53:
            t544 = np.cos(phi)
            t543 = t544 ** 2
            t547 = t543 ** 2
            t546 = t544 * t543
            t549 = t546 ** 2
            t551 = t547 ** 2
            t554 = -1 + 19 * t543 - 131 * t547 + 249 * t549 - 136 * t551
            t553 = -106 * t546 + (144 * t547 - 6 * t549 - 51 * t551 + 19) * t544
            t545 = 4 * phi1
            tfunc[..., c] = 0.19e2 / 0.64e2 * np.sqrt(0.42e2) * ((-t553 + t554) * np.cos((-t545 + 6 * phi2)) + (t553 + t554) * np.cos((t545 + 6 * phi2)))

        if Bindx == 54:
            t566 = np.cos(phi)
            t565 = t566 ** 2
            t568 = t566 * t565
            t569 = t565 ** 2
            t570 = t566 * t569
            t571 = t568 ** 2
            t573 = t569 ** 2
            t577 = 30 * t568 + 126 * t570 + (-310 * t571 + 170 * t573 - 16) * t566
            t576 = -51 * t570 ** 2 + 75 * t565 - 280 * t569 + 336 * t571 - 75 * t573 - 5
            t567 = 5 * phi1
            tfunc[..., c] = -0.19e2 / 0.64e2 * np.sqrt(0.15e2) * (-(t576 + t577) * np.sin((-t567 + 6 * phi2)) + (-t576 + t577) * np.sin((t567 + 6 * phi2))) * ((1 + t566) ** (-0.1e1 / 0.2e1)) * ((1 - t566) ** (-0.1e1 / 0.2e1))

        if Bindx == 55:
            t588 = np.cos(phi)
            t587 = t588 ** 2
            t590 = t587 ** 2
            t589 = t588 * t587
            t592 = t589 ** 2
            t594 = t590 ** 2
            t597 = 0.3933e4 / 0.64e2 * t587 - 0.5187e4 / 0.64e2 * t590 - 0.5453e4 / 0.64e2 * t592 + 0.969e3 / 0.8e1 * t594 - 0.437e3 / 0.64e2
            t596 = -0.1463e4 / 0.16e2 * t589 + (0.7581e4 / 0.32e2 * t590 - 0.513e3 / 0.4e1 * t592 - 0.969e3 / 0.32e2 * t594 + 0.57e2 / 0.16e2) * t588
            tfunc[..., c] = (t596 + t597) * np.cos((6 * phi1 - 6 * phi2)) + (-t596 + t597) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 56:
            t609 = np.cos(phi)
            t608 = t609 ** 2
            t611 = t609 * t608
            t612 = t608 ** 2
            t613 = t609 * t612
            t614 = t611 ** 2
            t616 = t612 ** 2
            t620 = 352 * t611 - 420 * t613 + (-112 * t614 + 238 * t616 - 58) * t609
            t619 = -51 * t613 ** 2 - 63 * t608 - 238 * t612 + 658 * t614 - 327 * t616 + 21
            t610 = 7 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.3e1) * (-(t619 + t620) * np.sin((-t610 + 6 * phi2)) + (-t619 + t620) * np.sin((t610 + 6 * phi2))) * ((1 + t609) ** (-0.1e1 / 0.2e1)) * ((1 - t609) ** (-0.1e1 / 0.2e1))

        if Bindx == 57:
            t631 = np.cos(phi)
            t630 = t631 ** 2
            t634 = t630 ** 2
            t633 = t631 * t630
            t636 = t633 ** 2
            t638 = t634 ** 2
            t641 = -2 - 10 * t630 + 42 * t634 - 14 * t636 - 16 * t638
            t640 = 14 * t633 + (28 * t634 - 30 * t636 - 3 * t638 - 9) * t631
            t632 = 8 * phi1
            tfunc[..., c] = 0.19e2 / 0.128e3 * np.sqrt(0.102e3) * ((-t640 + t641) * np.cos((-t632 + 6 * phi2)) + (t640 + t641) * np.cos((t632 + 6 * phi2)))

        if Bindx == 58:
            t650 = np.cos(phi)
            t649 = t650 ** 2
            t652 = t650 * t649
            t654 = t652 ** 2
            t655 = t650 * t654
            t658 = -t650 * t655 + 14 * t649 - 14 * t654 + 1
            t657 = 6 * t650 - 6 * t655 + (-14 * t649 + 14) * t652
            t651 = 9 * phi1
            tfunc[..., c] = -0.19e2 / 0.128e3 * np.sqrt(0.51e2) * np.sqrt((1 - t650)) * np.sqrt((1 + t650)) * (-(t657 - t658) * np.sin((-t651 + 6 * phi2)) + (t657 + t658) * np.sin((t651 + 6 * phi2)))

        if Bindx == 59:
            t659 = np.cos(phi)
            t660 = t659 ** 2
            t661 = t660 ** 2
            t663 = t661 ** 2
            tfunc[..., c] = -0.2297295e7 / 0.256e3 * t663 - 0.315315e6 / 0.128e3 * t661 - 0.1323e4 / 0.256e3 + (0.969969e6 / 0.256e3 * t663 + 0.945945e6 / 0.128e3 * t661 + 0.72765e5 / 0.256e3) * t660

        if Bindx == 60:
            t665 = np.cos(phi)
            t666 = t665 ** 2
            t667 = t666 ** 2
            t669 = t667 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2145e4) * (-638 * t667 - 1071 * t669 - 3 + (1278 * t667 + 323 * t669 + 111) * t666) * np.cos((6 * phi2))

        if Bindx == 61:
            t672 = np.cos(phi)
            t673 = t672 ** 2
            t674 = t673 ** 2
            t671 = np.sin(phi)
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.55e2) * t672 * t671 ** 2 * (-1092 * t673 + 63 + (-7956 * t673 + 4914 + 4199 * t674) * t674) * np.sin(phi1) * ((1 + t672) ** (-0.1e1 / 0.2e1)) * ((1 - t672) ** (-0.1e1 / 0.2e1))

        if Bindx == 62:
            t689 = np.cos(phi)
            t688 = t689 ** 2
            t691 = t688 ** 2
            t690 = t689 * t688
            t693 = t690 ** 2
            t695 = t691 ** 2
            t692 = t689 * t691
            t697 = t692 ** 2
            t700 = 9 - 333 * t688 + 1914 * t691 - 3834 * t693 + 3213 * t695 - 969 * t697
            t699 = 1387 * t690 - 5110 * t692 + (8118 * t693 - 5899 * t695 + 1615 * t697 - 111) * t689
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.78e2) * ((t699 + t700) * np.sin((phi1 - 6 * phi2)) + (t699 - t700) * np.sin((phi1 + 6 * phi2))) * ((1 + t689) ** (-0.1e1 / 0.2e1)) * ((1 - t689) ** (-0.1e1 / 0.2e1))

        if Bindx == 63:
            t701 = np.cos(phi)
            t702 = t701 ** 2
            t703 = t702 ** 2
            t705 = t703 ** 2
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.165e3) * (-3094 * t703 - 10387 * t705 - 7 + (8918 * t703 + 4199 * t705 + 371) * t702) * np.cos((2 * phi1))

        if Bindx == 64:
            t718 = np.cos(phi)
            t717 = t718 ** 2
            t720 = t718 * t717
            t721 = t717 ** 2
            t722 = t718 * t721
            t723 = t720 ** 2
            t725 = t721 ** 2
            t729 = 4888 * t720 - 14276 * t722 + (15640 * t723 - 5814 * t725 - 438) * t718
            t728 = 4845 * t722 ** 2 + 665 * t717 - 4486 * t721 + 11898 * t723 - 12903 * t725 - 19
            t719 = 2 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.26e2) * ((t728 + t729) * np.cos((-t719 + 6 * phi2)) + (t728 - t729) * np.cos((t719 + 6 * phi2)))

        if Bindx == 65:
            t736 = np.sin(phi)
            t734 = t736 ** 2
            t730 = np.cos(phi)
            t731 = t730 ** 2
            t732 = t731 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * t730 * t734 ** 2 * (-357 * t732 - 7 + (323 * t732 + 105) * t731) * np.sin((3 * phi1)) * ((1 + t730) ** (-0.1e1 / 0.2e1)) * ((1 - t730) ** (-0.1e1 / 0.2e1))

        if Bindx == 66:
            t749 = np.cos(phi)
            t748 = t749 ** 2
            t752 = t748 ** 2
            t751 = t749 * t748
            t754 = t751 ** 2
            t756 = t752 ** 2
            t753 = t749 * t752
            t758 = t753 ** 2
            t761 = 69 - 2277 * t748 + 12898 * t752 - 27962 * t754 + 25993 * t756 - 8721 * t758
            t760 = -1423 * t751 + 662 * t753 + (7122 * t754 - 11373 * t756 + 4845 * t758 + 167) * t749
            t750 = 3 * phi1
            tfunc[..., c] = 0.21e2 / 0.256e3 * (-(t760 + t761) * np.sin((-t750 + 6 * phi2)) + (t760 - t761) * np.sin((t750 + 6 * phi2))) * ((1 + t749) ** (-0.1e1 / 0.2e1)) * ((1 - t749) ** (-0.1e1 / 0.2e1))

        if Bindx == 67:
            t762 = np.cos(phi)
            t763 = t762 ** 2
            t764 = t763 ** 2
            t766 = t764 ** 2
            tfunc[..., c] = 0.21e2 / 0.128e3 * np.sqrt(0.2145e4) * (-346 * t764 - 901 * t766 - 1 + (878 * t764 + 323 * t766 + 47) * t763) * np.cos((4 * phi1))

        if Bindx == 68:
            t779 = np.cos(phi)
            t778 = t779 ** 2
            t781 = t779 * t778
            t782 = t778 ** 2
            t783 = t779 * t782
            t784 = t781 ** 2
            t786 = t782 ** 2
            t790 = 5032 * t781 - 18368 * t783 + (25432 * t784 - 11628 * t786 - 468) * t779
            t789 = 4845 * t783 ** 2 - 2407 * t778 + 8918 * t782 - 8022 * t784 - 3417 * t786 + 83
            t780 = 4 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * ((t789 + t790) * np.cos((-t780 + 6 * phi2)) + (t789 - t790) * np.cos((t780 + 6 * phi2)))

        if Bindx == 69:
            t797 = np.sin(phi)
            t794 = t797 ** 2
            t795 = t797 * t794
            t791 = np.cos(phi)
            t792 = t791 ** 2
            tfunc[..., c] = -0.21e2 / 0.128e3 * np.sqrt(0.2e1) * np.sqrt(0.429e3) * t791 * t795 ** 2 * (15 + (-170 + 323 * t792) * t792) * np.sin((5 * phi1)) * ((1 + t791) ** (-0.1e1 / 0.2e1)) * ((1 - t791) ** (-0.1e1 / 0.2e1))

        if Bindx == 70:
            t810 = np.cos(phi)
            t809 = t810 ** 2
            t813 = t809 ** 2
            t812 = t810 * t809
            t815 = t812 ** 2
            t817 = t813 ** 2
            t814 = t810 * t813
            t819 = t814 ** 2
            t822 = -1 + 25 * t809 + 1110 * t813 - 4942 * t815 + 6715 * t817 - 2907 * t819
            t821 = -2035 * t812 + 5278 * t814 + (-4710 * t815 + 255 * t817 + 969 * t819 + 243) * t810
            t811 = 5 * phi1
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.5e1) * (-(t821 + t822) * np.sin((-t811 + 6 * phi2)) + (t821 - t822) * np.sin((t811 + 6 * phi2))) * ((1 + t810) ** (-0.1e1 / 0.2e1)) * ((1 - t810) ** (-0.1e1 / 0.2e1))

        if Bindx == 71:
            t823 = np.cos(phi)
            t824 = t823 ** 2
            t825 = t824 ** 2
            t827 = t825 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.2145e4) * (-638 * t825 - 1071 * t827 - 3 + (1278 * t825 + 323 * t827 + 111) * t824) * np.cos((6 * phi1))

        if Bindx == 72:
            t840 = np.cos(phi)
            t839 = t840 ** 2
            t841 = t840 * t839
            t842 = t839 ** 2
            t843 = t840 * t842
            t844 = t841 ** 2
            t846 = t842 ** 2
            t850 = -0.16191e5 / 0.128e3 * t841 - 0.10143e5 / 0.256e3 * t843 + (0.61761e5 / 0.128e3 * t844 - 0.183141e6 / 0.512e3 * t846 + 0.15771e5 / 0.512e3) * t840
            t849 = 0.101745e6 / 0.1024e4 * t843 ** 2 - 0.94563e5 / 0.1024e4 * t839 + 0.235641e6 / 0.512e3 * t842 - 0.366471e6 / 0.512e3 * t844 + 0.260253e6 / 0.1024e4 * t846 + 0.4977e4 / 0.1024e4
            tfunc[..., c] = (t849 + t850) * np.cos((6 * phi1 - 6 * phi2)) + (t849 - t850) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 73:
            t855 = np.sin(phi)
            t852 = t855 ** 2
            t853 = t852 ** 2
            t851 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.36465e5) * t851 * t853 ** 2 * (19 * t851 ** 2 - 3) * np.sin((7 * phi1)) * ((1 + t851) ** (-0.1e1 / 0.2e1)) * ((1 - t851) ** (-0.1e1 / 0.2e1))

        if Bindx == 74:
            t868 = np.cos(phi)
            t867 = t868 ** 2
            t871 = t867 ** 2
            t870 = t868 * t867
            t873 = t870 ** 2
            t875 = t871 ** 2
            t872 = t868 * t871
            t877 = t872 ** 2
            t880 = -43 + 559 * t867 - 1566 * t871 + 686 * t873 + 1561 * t875 - 1197 * t877
            t879 = -511 * t870 + 2590 * t872 + (-3534 * t873 + 1191 * t875 + 285 * t877 - 21) * t868
            t869 = 7 * phi1
            tfunc[..., c] = 0.21e2 / 0.512e3 * np.sqrt(0.17e2) * (-(t879 + t880) * np.sin((-t869 + 6 * phi2)) + (t879 - t880) * np.sin((t869 + 6 * phi2))) * ((1 + t868) ** (-0.1e1 / 0.2e1)) * ((1 - t868) ** (-0.1e1 / 0.2e1))

        if Bindx == 75:
            t881 = np.cos(phi)
            t882 = t881 ** 2
            t883 = t882 ** 2
            t885 = t883 ** 2
            tfunc[..., c] = 0.21e2 / 0.256e3 * np.sqrt(0.12155e5) * (-82 * t883 - 77 * t885 - 1 + (118 * t883 + 19 * t885 + 23) * t882) * np.cos((8 * phi1))

        if Bindx == 76:
            t898 = np.cos(phi)
            t897 = t898 ** 2
            t900 = t898 * t897
            t901 = t897 ** 2
            t902 = t898 * t901
            t903 = t900 ** 2
            t905 = t901 ** 2
            t909 = -592 * t900 + 896 * t902 + (80 * t903 - 456 * t905 + 72) * t898
            t908 = 95 * t902 ** 2 + 155 * t897 + 266 * t901 - 1162 * t903 + 677 * t905 - 31
            t899 = 8 * phi1
            tfunc[..., c] = -0.21e2 / 0.1024e4 * np.sqrt(0.102e3) * ((t908 + t909) * np.cos((-t899 + 6 * phi2)) + (t908 - t909) * np.cos((t899 + 6 * phi2)))

        if Bindx == 77:
            t915 = np.sin(phi)
            t911 = t915 ** 2
            t913 = t915 * t911 ** 2
            t910 = np.cos(phi)
            tfunc[..., c] = -0.21e2 / 0.256e3 * np.sqrt(0.2e1) * np.sqrt(0.230945e6) * t910 * t913 ** 2 * np.sin((9 * phi1)) * ((1 + t910) ** (-0.1e1 / 0.2e1)) * ((1 - t910) ** (-0.1e1 / 0.2e1))

        if Bindx == 78:
            t928 = np.cos(phi)
            t927 = t928 ** 2
            t931 = t927 ** 2
            t930 = t928 * t927
            t933 = t930 ** 2
            t935 = t931 ** 2
            t932 = t928 * t931
            t937 = t932 ** 2
            t940 = 3 + 9 * t927 - 82 * t931 + 98 * t933 - t935 - 27 * t937
            t939 = 41 * t930 + 14 * t932 + (-94 * t933 + 47 * t935 + 5 * t937 - 13) * t928
            t929 = 9 * phi1
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.969e3) * (-(t939 + t940) * np.sin((-t929 + 6 * phi2)) + (t939 - t940) * np.sin((t929 + 6 * phi2))) * ((1 + t928) ** (-0.1e1 / 0.2e1)) * ((1 - t928) ** (-0.1e1 / 0.2e1))

        if Bindx == 79:
            t941 = np.cos(phi)
            t942 = t941 ** 2
            t943 = t942 ** 2
            t945 = t943 ** 2
            tfunc[..., c] = -0.21e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.46189e5) * np.cos((10 * phi1)) * (-10 * t943 - 5 * t945 - 1 + (10 * t943 + t945 + 5) * t942)

        if Bindx == 80:
            t958 = np.cos(phi)
            t970 = -6 * t958
            t957 = t958 ** 2
            t960 = t958 * t957
            t961 = t957 ** 2
            t962 = t958 * t961
            t963 = t960 ** 2
            t965 = t961 ** 2
            t969 = -8 * t958 * t963 + t965 * t970 - 8 * t960 + 28 * t962 + t970
            t968 = t962 ** 2 + 13 * t957 - 14 * t961 - 14 * t963 + 13 * t965 + 1
            t959 = 10 * phi1
            tfunc[..., c] = 0.21e2 / 0.1024e4 * np.sqrt(0.4845e4) * ((t968 + t969) * np.cos((-t959 + 6 * phi2)) + (t968 - t969) * np.cos((t959 + 6 * phi2)))

        if Bindx == 81:
            tfunc[..., c] = 0

        if Bindx == 82:
            t984 = np.cos(phi)
            t983 = t984 ** 2
            t985 = t984 * t983
            t986 = t983 ** 2
            t987 = t984 * t986
            t988 = t985 ** 2
            t990 = t986 ** 2
            t992 = t987 ** 2
            t996 = 470 * t985 - 2028 * t987 + (3564 * t988 - 2774 * t990 + 798 * t992 - 30) * t984
            t995 = 240 * t983 - 1925 * t986 - 8319 * t990 + 5624 * t992 - 5 + (5848 - 1463 * t988) * t988
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.221e3) * ((t995 + t996) * np.sin((phi1 - 6 * phi2)) + (-t995 + t996) * np.sin((phi1 + 6 * phi2))) * ((1 + t984) ** (-0.1e1 / 0.2e1)) * ((1 - t984) ** (-0.1e1 / 0.2e1))

        if Bindx == 83:
            t1009 = np.cos(phi)
            t1008 = t1009 ** 2
            t1012 = t1008 ** 2
            t1011 = t1009 * t1008
            t1014 = t1011 ** 2
            t1016 = t1012 ** 2
            t1013 = t1009 * t1012
            t1018 = t1013 ** 2
            t1021 = 6 - 276 * t1008 + 1940 * t1012 - 4672 * t1014 + 4598 * t1016 - 1596 * t1018
            t1020 = 459 * t1011 - 2218 * t1013 + (4638 * t1014 - 4313 * t1016 + 1463 * t1018 - 29) * t1009
            t1010 = 2 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.170e3) * ((t1020 + t1021) * np.cos((-t1010 + 6 * phi2)) + (-t1020 + t1021) * np.cos((t1010 + 6 * phi2)))

        if Bindx == 84:
            t1035 = np.cos(phi)
            t1034 = t1035 ** 2
            t1037 = t1035 * t1034
            t1038 = t1034 ** 2
            t1039 = t1035 * t1038
            t1040 = t1037 ** 2
            t1042 = t1038 ** 2
            t1044 = t1039 ** 2
            t1048 = -1502 * t1037 + 6460 * t1039 + (-11900 * t1040 + 9918 * t1042 - 3078 * t1044 + 102) * t1035
            t1047 = -44 * t1034 + 13 * t1038 - 4917 * t1042 + 5244 * t1044 + 1 + (1584 - 1881 * t1040) * t1040
            t1036 = 3 * phi1
            tfunc[..., c] = -0.23e2 / 0.1024e4 * np.sqrt(0.595e3) * (-(-t1047 + t1048) * np.sin((-t1036 + 6 * phi2)) + (t1047 + t1048) * np.sin((t1036 + 6 * phi2))) * ((1 + t1035) ** (-0.1e1 / 0.2e1)) * ((1 - t1035) ** (-0.1e1 / 0.2e1))

        if Bindx == 85:
            t1061 = np.cos(phi)
            t1060 = t1061 ** 2
            t1064 = t1060 ** 2
            t1063 = t1061 * t1060
            t1066 = t1063 ** 2
            t1068 = t1064 ** 2
            t1065 = t1061 * t1064
            t1070 = t1065 ** 2
            t1073 = 4 - 160 * t1060 + 1120 * t1064 - 3016 * t1066 + 3420 * t1068 - 1368 * t1070
            t1072 = 345 * t1063 - 874 * t1065 + (330 * t1066 + 855 * t1068 - 627 * t1070 - 29) * t1061
            t1062 = 4 * phi1
            tfunc[..., c] = 0.23e2 / 0.512e3 * np.sqrt(0.714e3) * ((-t1072 + t1073) * np.cos((-t1062 + 6 * phi2)) + (t1072 + t1073) * np.cos((t1062 + 6 * phi2)))

        if Bindx == 86:
            t1087 = np.cos(phi)
            t1086 = t1087 ** 2
            t1089 = t1087 * t1086
            t1090 = t1086 ** 2
            t1091 = t1087 * t1090
            t1092 = t1089 ** 2
            t1094 = t1090 ** 2
            t1096 = t1091 ** 2
            t1100 = 2090 * t1089 - 12852 * t1091 + (31412 * t1092 - 32490 * t1094 + 11970 * t1096 - 130) * t1087
            t1099 = -1908 * t1086 + 10745 * t1090 + 13815 * t1094 + 2964 * t1096 + 53 + (-21280 - 4389 * t1092) * t1092
            t1088 = 5 * phi1
            tfunc[..., c] = -0.23e2 / 0.2048e4 * np.sqrt(0.102e3) * (-(t1099 + t1100) * np.sin((-t1088 + 6 * phi2)) + (-t1099 + t1100) * np.sin((t1088 + 6 * phi2))) * ((1 + t1087) ** (-0.1e1 / 0.2e1)) * ((1 - t1087) ** (-0.1e1 / 0.2e1))

        if Bindx == 87:
            t1113 = np.cos(phi)
            t1112 = t1113 ** 2
            t1115 = t1112 ** 2
            t1114 = t1113 * t1112
            t1117 = t1114 ** 2
            t1119 = t1115 ** 2
            t1116 = t1113 * t1115
            t1121 = t1116 ** 2
            t1124 = -0.16215e5 / 0.256e3 * t1112 + 0.2415e4 / 0.256e3 * t1115 + 0.28819e5 / 0.32e2 * t1117 - 0.924255e6 / 0.512e3 * t1119 + 0.247779e6 / 0.256e3 * t1121 + 0.1081e4 / 0.512e3
            t1123 = 0.501515e6 / 0.1024e4 * t1114 - 0.803229e6 / 0.512e3 * t1116 + (0.915975e6 / 0.512e3 * t1117 - 0.386745e6 / 0.1024e4 * t1119 - 0.302841e6 / 0.1024e4 * t1121 - 0.49197e5 / 0.1024e4) * t1113
            tfunc[..., c] = (t1123 + t1124) * np.cos((6 * phi1 - 6 * phi2)) + (-t1123 + t1124) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 88:
            t1138 = np.cos(phi)
            t1137 = t1138 ** 2
            t1140 = t1138 * t1137
            t1141 = t1137 ** 2
            t1142 = t1138 * t1141
            t1143 = t1140 ** 2
            t1145 = t1141 ** 2
            t1147 = t1142 ** 2
            t1151 = -2694 * t1140 + 3948 * t1142 + (3668 * t1143 - 10906 * t1145 + 5586 * t1147 + 398) * t1138
            t1150 = -840 * t1137 + 6251 * t1141 + 15849 * t1145 - 3648 * t1147 + 35 + (-16184 - 1463 * t1143) * t1143
            t1139 = 7 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.10e2) * (-(t1150 + t1151) * np.sin((-t1139 + 6 * phi2)) + (-t1150 + t1151) * np.sin((t1139 + 6 * phi2))) * ((1 + t1138) ** (-0.1e1 / 0.2e1)) * ((1 - t1138) ** (-0.1e1 / 0.2e1))

        if Bindx == 89:
            t1164 = np.cos(phi)
            t1163 = t1164 ** 2
            t1167 = t1163 ** 2
            t1166 = t1164 * t1163
            t1169 = t1166 ** 2
            t1171 = t1167 ** 2
            t1168 = t1164 * t1167
            t1173 = t1168 ** 2
            t1176 = 8 - 128 * t1163 + 448 * t1167 - 336 * t1169 - 328 * t1171 + 336 * t1173
            t1175 = 63 * t1166 - 574 * t1168 + (958 * t1169 - 383 * t1171 - 77 * t1173 + 13) * t1164
            t1165 = 8 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.190e3) * ((t1175 + t1176) * np.cos((-t1165 + 6 * phi2)) + (-t1175 + t1176) * np.cos((t1165 + 6 * phi2)))

        if Bindx == 90:
            t1190 = np.cos(phi)
            t1189 = t1190 ** 2
            t1192 = t1190 * t1189
            t1193 = t1189 ** 2
            t1194 = t1190 * t1193
            t1195 = t1192 ** 2
            t1197 = t1193 ** 2
            t1199 = t1194 ** 2
            t1203 = 1402 * t1192 - 3668 * t1194 + (2452 * t1195 + 1062 * t1197 - 1134 * t1199 - 114) * t1190
            t1202 = 488 * t1189 - 133 * t1193 + 4457 * t1197 - 1552 * t1199 - 61 + (-2968 - 231 * t1195) * t1195
            t1191 = 9 * phi1
            tfunc[..., c] = 0.23e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(-t1202 + t1203) * np.sin((-t1191 + 6 * phi2)) + (t1202 + t1203) * np.sin((t1191 + 6 * phi2))) * ((1 + t1190) ** (-0.1e1 / 0.2e1)) * ((1 - t1190) ** (-0.1e1 / 0.2e1))

        if Bindx == 91:
            t1216 = np.cos(phi)
            t1215 = t1216 ** 2
            t1219 = t1215 ** 2
            t1218 = t1216 * t1215
            t1221 = t1218 ** 2
            t1223 = t1219 ** 2
            t1220 = t1216 * t1219
            t1225 = t1220 ** 2
            t1228 = 6 + 12 * t1215 - 172 * t1219 + 224 * t1221 - 10 * t1223 - 60 * t1225
            t1227 = -95 * t1218 - 14 * t1220 + (202 * t1221 - 107 * t1223 - 11 * t1225 + 25) * t1216
            t1217 = 10 * phi1
            tfunc[..., c] = -0.69e2 / 0.1024e4 * np.sqrt(0.133e3) * ((-t1227 + t1228) * np.cos((-t1217 + 6 * phi2)) + (t1227 + t1228) * np.cos((t1217 + 6 * phi2)))

        if Bindx == 92:
            t1240 = np.cos(phi)
            t1252 = -6 * t1240
            t1239 = t1240 ** 2
            t1242 = t1240 * t1239
            t1243 = t1239 ** 2
            t1244 = t1240 * t1243
            t1245 = t1242 ** 2
            t1247 = t1243 ** 2
            t1251 = -8 * t1240 * t1245 + t1247 * t1252 - 8 * t1242 + 28 * t1244 + t1252
            t1250 = -t1244 ** 2 - 13 * t1239 + 14 * t1243 + 14 * t1245 - 13 * t1247 - 1
            t1241 = 11 * phi1
            tfunc[..., c] = 0.69e2 / 0.2048e4 * np.sqrt(0.2926e4) * np.sqrt((1 - t1240)) * np.sqrt((1 + t1240)) * (-(-t1250 + t1251) * np.sin((-t1241 + 6 * phi2)) + (t1250 + t1251) * np.sin((t1241 + 6 * phi2)))

        if Bindx == 93:
            t1253 = np.cos(phi)
            t1254 = t1253 ** 2
            t1255 = t1254 ** 2
            t1257 = t1255 ** 2
            t1256 = t1254 * t1255
            tfunc[..., c] = 0.51962625e8 / 0.1024e4 * t1257 + 0.5630625e7 / 0.1024e4 * t1255 + 0.5775e4 / 0.1024e4 + (-0.6381375e7 / 0.256e3 + 0.16900975e8 / 0.1024e4 * t1256) * t1256 + (-0.24249225e8 / 0.512e3 * t1257 - 0.225225e6 / 0.512e3) * t1254

        if Bindx == 94:
            t1260 = np.cos(phi)
            t1261 = t1260 ** 2
            t1262 = t1261 ** 2
            t1264 = t1262 ** 2
            t1263 = t1261 * t1262
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2431e4) * (2865 * t1262 + 15447 * t1264 + 5 + (-9904 + 3059 * t1263) * t1263 + (-11172 * t1264 - 300) * t1261) * np.cos((6 * phi2))

        if Bindx == 95:
            t1267 = np.cos(phi)
            t1268 = t1267 ** 2
            t1274 = -6 * t1268
            t1269 = t1268 ** 2
            t1270 = t1268 * t1269
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.676039e6) * np.cos((12 * phi2)) * (t1274 + 1 + (-20 + t1270) * t1270 + (15 + (t1274 + 15) * t1269) * t1269)

        if Bindx == 96:
            t1276 = np.cos(phi)
            t1277 = t1276 ** 2
            t1278 = t1277 ** 2
            t1280 = t1278 ** 2
            t1275 = np.sin(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.39e2) * t1276 * t1275 ** 2 * (-39270 * t1278 - 124355 * t1280 - 231 + (106590 * t1278 + 52003 * t1280 + 5775) * t1277) * np.sin(phi1) * ((1 + t1276) ** (-0.1e1 / 0.2e1)) * ((1 - t1276) ** (-0.1e1 / 0.2e1))

        if Bindx == 97:
            t1296 = np.cos(phi)
            t1295 = t1296 ** 2
            t1298 = t1295 ** 2
            t1297 = t1296 * t1295
            t1300 = t1297 ** 2
            t1302 = t1298 ** 2
            t1299 = t1296 * t1298
            t1304 = t1299 ** 2
            t1306 = t1300 ** 2
            t1309 = -5 + 300 * t1295 - 2865 * t1298 + 9904 * t1300 - 15447 * t1302 + 11172 * t1304 - 3059 * t1306
            t1308 = -2010 * t1297 + 11814 * t1299 + (-30500 * t1300 + 39216 * t1302 - 24738 * t1304 + 6118 * t1306 + 100) * t1296
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.561e3) * ((t1308 + t1309) * np.sin((phi1 - 6 * phi2)) + (t1308 - t1309) * np.sin((phi1 + 6 * phi2))) * ((1 + t1296) ** (-0.1e1 / 0.2e1)) * ((1 - t1296) ** (-0.1e1 / 0.2e1))

        if Bindx == 98:
            t1322 = np.cos(phi)
            t1321 = t1322 ** 2
            t1323 = t1322 * t1321
            t1324 = t1321 ** 2
            t1325 = t1322 * t1324
            t1334 = 10 * t1323 ** 2 - 5 * t1324 ** 2 + t1325 ** 2 - 1
            t1333 = -5 * t1321 + 10 * t1324 - t1334
            t1332 = t1334 * t1322 + 5 * t1323 - 10 * t1325
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.156009e6) * np.sqrt((1 - t1322)) * np.sqrt((1 + t1322)) * ((t1332 + t1333) * np.sin((phi1 - 12 * phi2)) + (t1332 - t1333) * np.sin((phi1 + 12 * phi2)))

        if Bindx == 99:
            t1335 = np.cos(phi)
            t1336 = t1335 ** 2
            t1337 = t1336 ** 2
            t1339 = t1337 ** 2
            t1338 = t1336 * t1337
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.3003e4) * (2775 * t1337 + 24225 * t1339 + 3 + (-12240 + 7429 * t1338) * t1338 + (-21964 * t1339 - 228) * t1336) * np.cos((2 * phi1))

        if Bindx == 100:
            t1355 = np.cos(phi)
            t1354 = t1355 ** 2
            t1357 = t1355 * t1354
            t1358 = t1354 ** 2
            t1359 = t1355 * t1358
            t1360 = t1357 ** 2
            t1362 = t1358 ** 2
            t1364 = t1359 ** 2
            t1368 = -1595 * t1357 + 8122 * t1359 + (-16606 * t1360 + 14801 * t1362 - 4807 * t1364 + 85) * t1355
            t1367 = -290 * t1354 + 2845 * t1358 + 18791 * t1362 - 15466 * t1364 + 5 + (-10692 + 4807 * t1360) * t1360
            t1356 = 2 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.714e3) * ((t1367 + t1368) * np.cos((-t1356 + 6 * phi2)) + (t1367 - t1368) * np.cos((t1356 + 6 * phi2)))

        if Bindx == 101:
            t1381 = np.cos(phi)
            t1380 = t1381 ** 2
            t1384 = t1380 ** 2
            t1394 = 5 * t1384 ** 2
            t1385 = t1381 * t1384
            t1389 = t1385 ** 2
            t1390 = t1381 * t1389
            t1393 = t1381 * t1390 + 4 * t1380 - 5 * t1384 - 4 * t1389 + t1394 - 1
            t1392 = 2 * t1381 * t1394 + 2 * t1381 + 20 * t1385 - 2 * t1390 + 2 * (-5 * t1381 - 10 * t1385) * t1380
            t1382 = 2 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.490314e6) * ((t1392 + t1393) * np.cos((-t1382 + 12 * phi2)) + (-t1392 + t1393) * np.cos((t1382 + 12 * phi2)))

        if Bindx == 102:
            t1402 = np.sin(phi)
            t1400 = t1402 ** 2
            t1395 = np.cos(phi)
            t1396 = t1395 ** 2
            t1397 = t1396 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * t1395 * t1400 ** 2 * (-1020 * t1396 + 45 + (-11628 * t1396 + 5814 + 7429 * t1397) * t1397) * np.sin((3 * phi1)) * ((1 + t1395) ** (-0.1e1 / 0.2e1)) * ((1 - t1395) ** (-0.1e1 / 0.2e1))

        if Bindx == 103:
            t1417 = np.cos(phi)
            t1416 = t1417 ** 2
            t1420 = t1416 ** 2
            t1419 = t1417 * t1416
            t1422 = t1419 ** 2
            t1424 = t1420 ** 2
            t1421 = t1417 * t1420
            t1426 = t1421 ** 2
            t1428 = t1422 ** 2
            t1431 = -23 + 1288 * t1416 - 11855 * t1420 + 40952 * t1422 - 65797 * t1424 + 49856 * t1426 - 14421 * t1428
            t1430 = -362 * t1419 + 4222 * t1421 + (-18692 * t1422 + 35720 * t1424 - 30514 * t1426 + 9614 * t1428 + 12) * t1417
            t1418 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.119e3) * (-(t1430 + t1431) * np.sin((-t1418 + 6 * phi2)) + (t1430 - t1431) * np.sin((t1418 + 6 * phi2))) * ((1 + t1417) ** (-0.1e1 / 0.2e1)) * ((1 - t1417) ** (-0.1e1 / 0.2e1))

        if Bindx == 104:
            t1444 = np.cos(phi)
            t1443 = t1444 ** 2
            t1447 = t1443 ** 2
            t1446 = t1444 * t1443
            t1449 = t1446 ** 2
            t1451 = t1447 ** 2
            t1448 = t1444 * t1447
            t1453 = t1448 ** 2
            t1456 = -1 + t1443 + 6 * t1447 - 14 * t1449 + 11 * t1451 - 3 * t1453
            t1455 = -11 * t1446 + 14 * t1448 + (-6 * t1449 - t1451 + t1453 + 3) * t1444
            t1445 = 3 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.81719e5) * np.sqrt((1 - t1444)) * np.sqrt((1 + t1444)) * (-(t1455 + t1456) * np.sin((-t1445 + 12 * phi2)) + (t1455 - t1456) * np.sin((t1445 + 12 * phi2)))

        if Bindx == 105:
            t1457 = np.cos(phi)
            t1458 = t1457 ** 2
            t1459 = t1458 ** 2
            t1461 = t1459 ** 2
            t1460 = t1458 * t1459
            tfunc[..., c] = 0.75e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.1001e4) * (3915 * t1459 + 28747 * t1461 + 5 + (-15844 + 7429 * t1460) * t1460 + (-23902 * t1461 - 350) * t1458) * np.cos((4 * phi1))

        if Bindx == 106:
            t1477 = np.cos(phi)
            t1476 = t1477 ** 2
            t1479 = t1477 * t1476
            t1480 = t1476 ** 2
            t1481 = t1477 * t1480
            t1482 = t1479 ** 2
            t1484 = t1480 ** 2
            t1486 = t1481 ** 2
            t1490 = -2470 * t1479 + 12588 * t1481 + (-27436 * t1482 + 26790 * t1484 - 9614 * t1486 + 142) * t1477
            t1489 = 364 * t1476 - 2435 * t1480 + 2755 * t1484 - 9196 * t1486 - 7 + (3712 + 4807 * t1482) * t1482
            t1478 = 4 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.119e3) * ((t1489 + t1490) * np.cos((-t1478 + 6 * phi2)) + (t1489 - t1490) * np.cos((t1478 + 6 * phi2)))

        if Bindx == 107:
            t1504 = np.cos(phi)
            t1503 = t1504 ** 2
            t1506 = t1504 * t1503
            t1507 = t1503 ** 2
            t1508 = t1504 * t1507
            t1509 = t1506 ** 2
            t1511 = t1507 ** 2
            t1513 = t1508 ** 2
            t1517 = 12 * t1506 - 8 * t1508 + 4 * (-2 * t1509 + 3 * t1511 - t1513 - 1) * t1504
            t1516 = 2 * t1503 - 17 * t1507 - 17 * t1511 + 2 * t1513 + 1 + (28 + t1509) * t1509
            t1505 = 4 * phi1
            tfunc[..., c] = 0.75e2 / 0.4096e4 * np.sqrt(0.81719e5) * ((t1516 + t1517) * np.cos((-t1505 + 12 * phi2)) + (t1516 - t1517) * np.cos((t1505 + 12 * phi2)))

        if Bindx == 108:
            t1525 = np.sin(phi)
            t1522 = t1525 ** 2
            t1523 = t1525 * t1522
            t1518 = np.cos(phi)
            t1519 = t1518 ** 2
            t1520 = t1519 ** 2
            tfunc[..., c] = -0.75e2 / 0.512e3 * np.sqrt(0.17017e5) * t1518 * t1523 ** 2 * (-399 * t1520 - 5 + (437 * t1520 + 95) * t1519) * np.sin((5 * phi1)) * ((1 + t1518) ** (-0.1e1 / 0.2e1)) * ((1 - t1518) ** (-0.1e1 / 0.2e1))

        if Bindx == 109:
            t1540 = np.cos(phi)
            t1539 = t1540 ** 2
            t1543 = t1539 ** 2
            t1542 = t1540 * t1539
            t1545 = t1542 ** 2
            t1547 = t1543 ** 2
            t1544 = t1540 * t1543
            t1549 = t1544 ** 2
            t1551 = t1545 ** 2
            t1554 = -25 + 1200 * t1539 - 11465 * t1543 + 45592 * t1545 - 84987 * t1547 + 73720 * t1549 - 24035 * t1551
            t1553 = 5958 * t1542 - 24450 * t1544 + (37500 * t1545 - 14440 * t1547 - 13794 * t1549 + 9614 * t1551 - 388) * t1540
            t1541 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.14e2) * (-(t1553 + t1554) * np.sin((-t1541 + 6 * phi2)) + (t1553 - t1554) * np.sin((t1541 + 6 * phi2))) * ((1 + t1540) ** (-0.1e1 / 0.2e1)) * ((1 - t1540) ** (-0.1e1 / 0.2e1))

        if Bindx == 110:
            t1567 = np.cos(phi)
            t1566 = t1567 ** 2
            t1570 = t1566 ** 2
            t1569 = t1567 * t1566
            t1572 = t1569 ** 2
            t1574 = t1570 ** 2
            t1571 = t1567 * t1570
            t1576 = t1571 ** 2
            t1579 = 1 + 7 * t1566 - 22 * t1570 + 14 * t1572 + 5 * t1574 - 5 * t1576
            t1578 = 5 * t1569 + 14 * t1571 + (-22 * t1572 + 7 * t1574 + t1576 - 5) * t1567
            t1568 = 5 * phi1
            tfunc[..., c] = -0.75e2 / 0.2048e4 * np.sqrt(0.9614e4) * np.sqrt((1 - t1567)) * np.sqrt((1 + t1567)) * (-(t1578 + t1579) * np.sin((-t1568 + 12 * phi2)) + (t1578 - t1579) * np.sin((t1568 + 12 * phi2)))

        if Bindx == 111:
            t1580 = np.cos(phi)
            t1581 = t1580 ** 2
            t1582 = t1581 ** 2
            t1584 = t1582 ** 2
            t1583 = t1581 * t1582
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.2431e4) * (2865 * t1582 + 15447 * t1584 + 5 + (-9904 + 3059 * t1583) * t1583 + (-11172 * t1584 - 300) * t1581) * np.cos((6 * phi1))

        if Bindx == 112:
            t1600 = np.cos(phi)
            t1599 = t1600 ** 2
            t1601 = t1600 * t1599
            t1602 = t1599 ** 2
            t1603 = t1600 * t1602
            t1604 = t1601 ** 2
            t1606 = t1602 ** 2
            t1608 = t1603 ** 2
            t1612 = -0.67375e5 / 0.1024e4 * t1601 + 0.615825e6 / 0.512e3 * t1603 + (-0.2227275e7 / 0.512e3 * t1604 + 0.5802125e7 / 0.1024e4 * t1606 - 0.2523675e7 / 0.1024e4 * t1608 - 0.975e3 / 0.1024e4) * t1600
            t1611 = 0.141225e6 / 0.512e3 * t1599 - 0.1882125e7 / 0.1024e4 * t1602 - 0.3954375e7 / 0.1024e4 * t1606 + 0.109725e6 / 0.512e3 * t1608 - 0.6725e4 / 0.1024e4 + (0.1128225e7 / 0.256e3 + 0.841225e6 / 0.1024e4 * t1604) * t1604
            tfunc[..., c] = (t1611 + t1612) * np.cos((6 * phi1 - 6 * phi2)) + (t1611 - t1612) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 113:
            t1625 = np.cos(phi)
            t1624 = t1625 ** 2
            t1628 = t1624 ** 2
            t1631 = t1628 ** 2
            t1629 = t1625 * t1628
            t1633 = t1629 ** 2
            t1634 = t1625 * t1633
            t1637 = t1625 * t1634 - 12 * t1624 + 27 * t1628 - 27 * t1631 + 12 * t1633 - 1
            t1636 = -6 * t1634 + 2 * (18 * t1624 - 18) * t1629 + 2 * (t1624 - t1631 + 3) * t1625
            t1626 = 6 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1636 + t1637) * np.cos((-t1626 + 12 * phi2)) + (-t1636 + t1637) * np.cos((t1626 + 12 * phi2)))

        if Bindx == 114:
            t1644 = np.sin(phi)
            t1641 = t1644 ** 2
            t1642 = t1641 ** 2
            t1638 = np.cos(phi)
            t1639 = t1638 ** 2
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.138567e6) * t1638 * t1642 ** 2 * (5 + (-70 + 161 * t1639) * t1639) * np.sin((7 * phi1)) * ((1 + t1638) ** (-0.1e1 / 0.2e1)) * ((1 - t1638) ** (-0.1e1 / 0.2e1))

        if Bindx == 115:
            t1659 = np.cos(phi)
            t1658 = t1659 ** 2
            t1662 = t1658 ** 2
            t1661 = t1659 * t1658
            t1664 = t1661 ** 2
            t1666 = t1662 ** 2
            t1663 = t1659 * t1662
            t1668 = t1663 ** 2
            t1670 = t1664 ** 2
            t1673 = 29 - 1044 * t1658 + 3745 * t1662 + 2016 * t1664 - 23121 * t1666 + 30772 * t1668 - 12397 * t1670
            t1672 = 4774 * t1661 - 21546 * t1663 + (40956 * t1664 - 31520 * t1666 + 4158 * t1668 + 3542 * t1670 - 364) * t1659
            t1660 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * (-(t1672 + t1673) * np.sin((-t1660 + 6 * phi2)) + (t1672 - t1673) * np.sin((t1660 + 6 * phi2))) * ((1 + t1659) ** (-0.1e1 / 0.2e1)) * ((1 - t1659) ** (-0.1e1 / 0.2e1))

        if Bindx == 116:
            t1686 = np.cos(phi)
            t1685 = t1686 ** 2
            t1689 = t1685 ** 2
            t1688 = t1686 * t1685
            t1691 = t1688 ** 2
            t1693 = t1689 ** 2
            t1690 = t1686 * t1689
            t1695 = t1690 ** 2
            t1698 = -1 - 19 * t1685 + 6 * t1689 + 42 * t1691 - 21 * t1693 - 7 * t1695
            t1697 = 21 * t1688 - 42 * t1690 + (-6 * t1691 + 19 * t1693 + t1695 + 7) * t1686
            t1687 = 7 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.10626e5) * np.sqrt((1 - t1686)) * np.sqrt((1 + t1686)) * (-(t1697 + t1698) * np.sin((-t1687 + 12 * phi2)) + (t1697 - t1698) * np.sin((t1687 + 12 * phi2)))

        if Bindx == 117:
            t1699 = np.cos(phi)
            t1700 = t1699 ** 2
            t1701 = t1700 ** 2
            t1703 = t1701 ** 2
            t1702 = t1700 * t1701
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.138567e6) * (335 * t1701 + 1135 * t1703 + 1 + (-900 + 161 * t1702) * t1702 + (-686 * t1703 - 46) * t1700) * np.cos((8 * phi1))

        if Bindx == 118:
            t1719 = np.cos(phi)
            t1718 = t1719 ** 2
            t1721 = t1719 * t1718
            t1722 = t1718 ** 2
            t1723 = t1719 * t1722
            t1724 = t1721 ** 2
            t1726 = t1722 ** 2
            t1728 = t1723 ** 2
            t1732 = 3332 * t1721 - 6888 * t1723 + (-408 * t1724 + 11452 * t1726 - 7084 * t1728 - 404) * t1719
            t1731 = 532 * t1718 - 5607 * t1722 - 20337 * t1726 + 5852 * t1728 - 19 + (17808 + 1771 * t1724) * t1724
            t1720 = 8 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.114e3) * ((t1731 + t1732) * np.cos((-t1720 + 6 * phi2)) + (t1731 - t1732) * np.cos((t1720 + 6 * phi2)))

        if Bindx == 119:
            t1746 = np.cos(phi)
            t1745 = t1746 ** 2
            t1748 = t1746 * t1745
            t1749 = t1745 ** 2
            t1750 = t1746 * t1749
            t1751 = t1748 ** 2
            t1753 = t1749 ** 2
            t1755 = t1750 ** 2
            t1759 = -40 * t1748 + 48 * t1750 + 8 * (6 * t1751 - 5 * t1753 - t1755 - 1) * t1746
            t1758 = 26 * t1745 + 15 * t1749 + 15 * t1753 + 26 * t1755 + 1 + (-84 + t1751) * t1751
            t1747 = 8 * phi1
            tfunc[..., c] = 0.25e2 / 0.4096e4 * np.sqrt(0.10626e5) * ((t1758 + t1759) * np.cos((-t1747 + 12 * phi2)) + (t1758 - t1759) * np.cos((t1747 + 12 * phi2)))

        if Bindx == 120:
            t1765 = np.sin(phi)
            t1761 = t1765 ** 2
            t1763 = t1765 * t1761 ** 2
            t1760 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.323323e6) * t1760 * t1763 ** 2 * (23 * t1760 ** 2 - 3) * np.sin((9 * phi1)) * ((1 + t1760) ** (-0.1e1 / 0.2e1)) * ((1 - t1760) ** (-0.1e1 / 0.2e1))

        if Bindx == 121:
            t1780 = np.cos(phi)
            t1779 = t1780 ** 2
            t1783 = t1779 ** 2
            t1782 = t1780 * t1779
            t1785 = t1782 ** 2
            t1787 = t1783 ** 2
            t1784 = t1780 * t1783
            t1789 = t1784 ** 2
            t1791 = t1785 ** 2
            t1794 = 37 - 740 * t1779 + 3673 * t1783 - 5952 * t1785 + 1383 * t1787 + 3876 * t1789 - 2277 * t1791
            t1793 = -54 * t1782 - 3078 * t1784 + (9252 * t1785 - 9088 * t1787 + 2354 * t1789 + 506 * t1791 + 108) * t1780
            t1781 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.266e3) * (-(t1793 + t1794) * np.sin((-t1781 + 6 * phi2)) + (t1793 - t1794) * np.sin((t1781 + 6 * phi2))) * ((1 + t1780) ** (-0.1e1 / 0.2e1)) * ((1 - t1780) ** (-0.1e1 / 0.2e1))

        if Bindx == 122:
            t1807 = np.cos(phi)
            t1806 = t1807 ** 2
            t1810 = t1806 ** 2
            t1809 = t1807 * t1806
            t1812 = t1809 ** 2
            t1814 = t1810 ** 2
            t1811 = t1807 * t1810
            t1816 = t1811 ** 2
            t1819 = 1 + 35 * t1806 + 90 * t1810 - 42 * t1812 - 75 * t1814 - 9 * t1816
            t1818 = -75 * t1809 - 42 * t1811 + (90 * t1812 + 35 * t1814 + t1816 - 9) * t1807
            t1808 = 9 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.506e3) * np.sqrt((1 - t1807)) * np.sqrt((1 + t1807)) * (-(t1818 + t1819) * np.sin((-t1808 + 12 * phi2)) + (t1818 - t1819) * np.sin((t1808 + 12 * phi2)))

        if Bindx == 123:
            t1820 = np.cos(phi)
            t1821 = t1820 ** 2
            t1822 = t1821 ** 2
            t1824 = t1822 ** 2
            t1823 = t1821 * t1822
            tfunc[..., c] = -0.25e2 / 0.1024e4 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (125 * t1822 + 235 * t1824 + 1 + (-240 + 23 * t1823) * t1823 + (-116 * t1824 - 28) * t1821) * np.cos((10 * phi1))

        if Bindx == 124:
            t1840 = np.cos(phi)
            t1839 = t1840 ** 2
            t1842 = t1840 * t1839
            t1843 = t1839 ** 2
            t1844 = t1840 * t1843
            t1845 = t1842 ** 2
            t1847 = t1843 ** 2
            t1849 = t1844 ** 2
            t1853 = 121 * t1842 - 366 * t1844 + (282 * t1845 + 85 * t1847 - 115 * t1849 - 7) * t1840
            t1852 = -50 * t1839 + 45 * t1843 - 441 * t1847 + 166 * t1849 + 5 + (252 + 23 * t1845) * t1845
            t1841 = 10 * phi1
            tfunc[..., c] = 0.25e2 / 0.1024e4 * np.sqrt(0.4389e4) * ((t1852 + t1853) * np.cos((-t1841 + 6 * phi2)) + (t1852 - t1853) * np.cos((t1841 + 6 * phi2)))

        if Bindx == 125:
            t1866 = np.cos(phi)
            t1865 = t1866 ** 2
            t1869 = t1865 ** 2
            t1872 = t1869 ** 2
            t1870 = t1866 * t1869
            t1874 = t1870 ** 2
            t1875 = t1866 * t1874
            t1878 = t1866 * t1875 - 44 * t1865 - 165 * t1869 + 165 * t1872 + 44 * t1874 - 1
            t1877 = -10 * t1875 + (-132 * t1865 + 132) * t1870 + (110 * t1865 - 110 * t1872 + 10) * t1866
            t1867 = 10 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.69e2) * ((t1877 + t1878) * np.cos((-t1867 + 12 * phi2)) + (-t1877 + t1878) * np.cos((t1867 + 12 * phi2)))

        if Bindx == 126:
            t1884 = np.sin(phi)
            t1880 = t1884 ** 2
            t1881 = t1884 * t1880
            t1882 = t1881 ** 2
            t1879 = np.cos(phi)
            tfunc[..., c] = -0.25e2 / 0.512e3 * np.sqrt(0.2028117e7) * t1879 * t1882 ** 2 * np.sin((11 * phi1)) * ((1 + t1879) ** (-0.1e1 / 0.2e1)) * ((1 - t1879) ** (-0.1e1 / 0.2e1))

        if Bindx == 127:
            t1898 = np.cos(phi)
            t1900 = t1898 ** 2
            t1902 = t1900 ** 2
            t1901 = t1898 * t1900
            t1904 = t1901 ** 2
            t1906 = t1902 ** 2
            t1903 = t1898 * t1902
            t1908 = t1903 ** 2
            t1910 = t1904 ** 2
            t1913 = -1 + 31 * t1902 - 72 * t1904 + 45 * t1906 + 8 * t1908 - 11 * t1910
            t1912 = -22 * t1901 + 18 * t1903 + (36 * t1904 - 56 * t1906 + 18 * t1908 + 2 * t1910 + 4) * t1898
            t1899 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.201894e6) * (-(t1912 + t1913) * np.sin((-t1899 + 6 * phi2)) + (t1912 - t1913) * np.sin((t1899 + 6 * phi2))) * ((1 + t1898) ** (-0.1e1 / 0.2e1)) * ((1 - t1898) ** (-0.1e1 / 0.2e1))

        if Bindx == 128:
            t1926 = np.cos(phi)
            t1925 = t1926 ** 2
            t1929 = t1925 ** 2
            t1928 = t1926 * t1925
            t1931 = t1928 ** 2
            t1933 = t1929 ** 2
            t1930 = t1926 * t1929
            t1935 = t1930 ** 2
            t1938 = -1 - 55 * t1925 - 330 * t1929 - 462 * t1931 - 165 * t1933 - 11 * t1935
            t1937 = 165 * t1928 + 462 * t1930 + (330 * t1931 + 55 * t1933 + t1935 + 11) * t1926
            t1927 = 11 * phi1
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.6e1) * np.sqrt((1 - t1926)) * np.sqrt((1 + t1926)) * (-(t1937 + t1938) * np.sin((-t1927 + 12 * phi2)) + (t1937 - t1938) * np.sin((t1927 + 12 * phi2)))

        if Bindx == 129:
            t1939 = np.cos(phi)
            t1940 = t1939 ** 2
            t1946 = -6 * t1940
            t1941 = t1940 ** 2
            t1942 = t1940 * t1941
            tfunc[..., c] = 0.25e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.676039e6) * np.cos((12 * phi1)) * (t1946 + 1 + (-20 + t1942) * t1942 + (15 + (t1946 + 15) * t1941) * t1941)

        if Bindx == 130:
            t1959 = np.cos(phi)
            t1958 = t1959 ** 2
            t1962 = t1958 ** 2
            t1965 = t1962 ** 2
            t1963 = t1959 * t1962
            t1967 = t1963 ** 2
            t1968 = t1959 * t1967
            t1971 = t1959 * t1968 - 12 * t1958 + 27 * t1962 - 27 * t1965 + 12 * t1967 - 1
            t1970 = -6 * t1968 + 2 * (18 * t1958 - 18) * t1963 + 2 * (t1958 - t1965 + 3) * t1959
            t1960 = 12 * phi1
            tfunc[..., c] = -0.25e2 / 0.2048e4 * np.sqrt(0.33649e5) * ((t1970 + t1971) * np.cos((-t1960 + 6 * phi2)) + (-t1970 + t1971) * np.cos((t1960 + 6 * phi2)))

        if Bindx == 131:
            t1985 = np.cos(phi)
            t1984 = t1985 ** 2
            t1986 = t1985 * t1984
            t1987 = t1984 ** 2
            t1988 = t1985 * t1987
            t1989 = t1986 ** 2
            t1991 = t1987 ** 2
            t1993 = t1988 ** 2
            t1997 = -0.75e2 / 0.1024e4 * (t1993 + 1) * t1985 - 0.2475e4 / 0.512e3 * t1985 * t1989 - 0.2475e4 / 0.512e3 * t1988 - 0.1375e4 / 0.1024e4 * t1985 * t1991 - 0.1375e4 / 0.1024e4 * t1986
            t1996 = 0.25e2 / 0.4096e4 + 0.12375e5 / 0.4096e4 * t1991 + 0.12375e5 / 0.4096e4 * t1987 + 0.825e3 / 0.2048e4 * t1993 + 0.825e3 / 0.2048e4 * t1984 + (0.5775e4 / 0.1024e4 + 0.25e2 / 0.4096e4 * t1989) * t1989
            tfunc[..., c] = (t1996 + t1997) * np.cos((12 * phi1 - 12 * phi2)) + (t1996 - t1997) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 132:
            tfunc[..., c] = 0

        if Bindx == 133:
            tfunc[..., c] = 0

        if Bindx == 134:
            t2014 = np.cos(phi)
            t2013 = t2014 ** 2
            t2015 = t2014 * t2013
            t2016 = t2013 ** 2
            t2017 = t2014 * t2016
            t2018 = t2015 ** 2
            t2019 = t2014 * t2018
            t2020 = t2016 ** 2
            t2022 = t2017 ** 2
            t2024 = t2018 ** 2
            t2028 = 720 * t2015 - 4878 * t2017 + 14064 * t2019 + (-19674 * t2020 + 13248 * t2022 - 3450 * t2024 - 30) * t2014
            t2027 = -7475 * t2019 ** 2 - 365 * t2013 + 4425 * t2016 - 20473 * t2018 + 45919 * t2020 - 53799 * t2022 + 31763 * t2024 + 5
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.7106e4) * ((-t2027 + t2028) * np.sin((phi1 - 6 * phi2)) + (t2027 + t2028) * np.sin((phi1 + 6 * phi2))) * ((1 + t2014) ** (-0.1e1 / 0.2e1)) * ((1 - t2014) ** (-0.1e1 / 0.2e1))

        if Bindx == 135:
            t2044 = np.cos(phi)
            t2043 = t2044 ** 2
            t2045 = t2044 * t2043
            t2046 = t2043 ** 2
            t2047 = t2044 * t2046
            t2048 = t2045 ** 2
            t2049 = t2044 * t2048
            t2050 = t2046 ** 2
            t2052 = t2047 ** 2
            t2054 = t2048 ** 2
            t2058 = -72 * t2045 + 180 * t2047 - 240 * t2049 + 12 * (15 * t2050 - 6 * t2052 + t2054 + 1) * t2044
            t2057 = -13 * t2049 ** 2 - 19 * t2043 + 93 * t2046 - 215 * t2048 + 275 * t2050 - 201 * t2052 + 79 * t2054 + 1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.14858e5) * ((t2057 + t2058) * np.sin((phi1 - 12 * phi2)) + (-t2057 + t2058) * np.sin((phi1 + 12 * phi2))) * ((1 + t2044) ** (-0.1e1 / 0.2e1)) * ((1 - t2044) ** (-0.1e1 / 0.2e1))

        if Bindx == 136:
            t2073 = np.cos(phi)
            t2072 = t2073 ** 2
            t2076 = t2072 ** 2
            t2075 = t2073 * t2072
            t2078 = t2075 ** 2
            t2080 = t2076 ** 2
            t2077 = t2073 * t2076
            t2082 = t2077 ** 2
            t2084 = t2078 ** 2
            t2087 = 1 - 71 * t2072 + 790 * t2076 - 3142 * t2078 + 5573 * t2080 - 4531 * t2082 + 1380 * t2084
            t2086 = 214 * t2075 - 1493 * t2077 + (4588 * t2078 - 7003 * t2080 + 5198 * t2082 - 1495 * t2084 - 9) * t2073
            t2074 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.35530e5) * ((t2086 + t2087) * np.cos((-t2074 + 6 * phi2)) + (-t2086 + t2087) * np.cos((t2074 + 6 * phi2)))

        if Bindx == 137:
            t2102 = np.cos(phi)
            t2101 = t2102 ** 2
            t2105 = t2101 ** 2
            t2104 = t2102 * t2101
            t2107 = t2104 ** 2
            t2109 = t2105 ** 2
            t2106 = t2102 * t2105
            t2111 = t2106 ** 2
            t2113 = t2107 ** 2
            t2116 = -2 + 34 * t2101 - 140 * t2105 + 260 * t2107 - 250 * t2109 + 122 * t2111 - 24 * t2113
            t2115 = -32 * t2104 + 25 * t2106 + (40 * t2107 - 85 * t2109 + 56 * t2111 - 13 * t2113 + 9) * t2102
            t2103 = 2 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.74290e5) * ((-t2115 + t2116) * np.cos((-t2103 + 12 * phi2)) + (t2115 + t2116) * np.cos((t2103 + 12 * phi2)))

        if Bindx == 138:
            t2132 = np.cos(phi)
            t2131 = t2132 ** 2
            t2135 = t2131 ** 2
            t2134 = t2132 * t2131
            t2137 = t2134 ** 2
            t2138 = t2132 * t2137
            t2139 = t2135 ** 2
            t2136 = t2132 * t2135
            t2141 = t2136 ** 2
            t2143 = t2137 ** 2
            t2147 = -16445 * t2138 ** 2 - 207 * t2131 + 2939 * t2135 - 17743 * t2137 + 52529 * t2139 - 79013 * t2141 + 57937 * t2143 + 3
            t2146 = 4444 * t2134 - 29390 * t2136 + 84680 * t2138 + (-120766 * t2139 + 83996 * t2141 - 22770 * t2143 - 194) * t2132
            t2133 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.3230e4) * (-(t2146 - t2147) * np.sin((-t2133 + 6 * phi2)) + (t2146 + t2147) * np.sin((t2133 + 6 * phi2))) * ((1 + t2132) ** (-0.1e1 / 0.2e1)) * ((1 - t2132) ** (-0.1e1 / 0.2e1))

        if Bindx == 139:
            t2163 = np.cos(phi)
            t2162 = t2163 ** 2
            t2165 = t2163 * t2162
            t2166 = t2162 ** 2
            t2167 = t2163 * t2166
            t2168 = t2165 ** 2
            t2169 = t2163 * t2168
            t2170 = t2166 ** 2
            t2172 = t2167 ** 2
            t2174 = t2168 ** 2
            t2178 = -16 * t2165 + 140 * t2167 - 320 * t2169 + (340 * t2170 - 176 * t2172 + 36 * t2174 - 4) * t2163
            t2177 = -13 * t2169 ** 2 + 45 * t2162 - 167 * t2166 + 265 * t2168 - 185 * t2170 + 23 * t2172 + 35 * t2174 - 3
            t2164 = 3 * phi1
            tfunc[..., c] = -0.27e2 / 0.8192e4 * np.sqrt(0.817190e6) * (-(t2177 + t2178) * np.sin((-t2164 + 12 * phi2)) + (-t2177 + t2178) * np.sin((t2164 + 12 * phi2))) * ((1 + t2163) ** (-0.1e1 / 0.2e1)) * ((1 - t2163) ** (-0.1e1 / 0.2e1))

        if Bindx == 140:
            t2193 = np.cos(phi)
            t2192 = t2193 ** 2
            t2195 = t2193 * t2192
            t2196 = t2192 ** 2
            t2197 = t2193 * t2196
            t2198 = t2195 ** 2
            t2200 = t2196 ** 2
            t2202 = t2197 ** 2
            t2204 = t2198 ** 2
            t2207 = 7280 * t2195 - 27661 * t2197 + (-1480 * t2198 + 136345 * t2200 - 196328 * t2202 + 82225 * t2204 - 381) * t2193
            t2206 = 6890 * t2192 - 73180 * t2196 + 291124 * t2198 - 536930 * t2200 + 464002 * t2202 - 151800 * t2204 - 106
            t2194 = 4 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.19e2) * ((t2206 + t2207) * np.cos((-t2194 + 6 * phi2)) + (t2206 - t2207) * np.cos((t2194 + 6 * phi2)))

        if Bindx == 141:
            t2222 = np.cos(phi)
            t2221 = t2222 ** 2
            t2225 = t2221 ** 2
            t2224 = t2222 * t2221
            t2227 = t2224 ** 2
            t2229 = t2225 ** 2
            t2226 = t2222 * t2225
            t2231 = t2226 ** 2
            t2233 = t2227 ** 2
            t2236 = -4 + 44 * t2221 - 88 * t2225 - 8 * t2227 + 172 * t2229 - 164 * t2231 + 48 * t2233
            t2235 = -74 * t2224 + 253 * t2226 + (-332 * t2227 + 173 * t2229 - 10 * t2231 - 13 * t2233 + 3) * t2222
            t2223 = 4 * phi1
            tfunc[..., c] = 0.135e3 / 0.4096e4 * np.sqrt(0.4807e4) * ((t2235 + t2236) * np.cos((-t2223 + 12 * phi2)) + (-t2235 + t2236) * np.cos((t2223 + 12 * phi2)))

        if Bindx == 142:
            t2252 = np.cos(phi)
            t2251 = t2252 ** 2
            t2255 = t2251 ** 2
            t2254 = t2252 * t2251
            t2257 = t2254 ** 2
            t2258 = t2252 * t2257
            t2259 = t2255 ** 2
            t2256 = t2252 * t2255
            t2261 = t2256 ** 2
            t2263 = t2257 ** 2
            t2267 = 82225 * t2258 ** 2 - 6893 * t2251 + 63345 * t2255 - 196005 * t2257 + 221115 * t2259 + 6369 * t2261 - 170269 * t2263 + 113
            t2266 = -26140 * t2254 + 175642 * t2256 - 542952 * t2258 + (845090 * t2259 - 642620 * t2261 + 189750 * t2263 + 1230) * t2252
            t2253 = 5 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.38e2) * (-(t2266 - t2267) * np.sin((-t2253 + 6 * phi2)) + (t2266 + t2267) * np.sin((t2253 + 6 * phi2))) * ((1 + t2252) ** (-0.1e1 / 0.2e1)) * ((1 - t2252) ** (-0.1e1 / 0.2e1))

        if Bindx == 143:
            t2283 = np.cos(phi)
            t2282 = t2283 ** 2
            t2285 = t2283 * t2282
            t2286 = t2282 ** 2
            t2287 = t2283 * t2286
            t2288 = t2285 ** 2
            t2289 = t2283 * t2288
            t2290 = t2286 ** 2
            t2292 = t2287 ** 2
            t2294 = t2288 ** 2
            t2298 = -128 * t2285 + 332 * t2287 - 288 * t2289 + (-28 * t2290 + 160 * t2292 - 60 * t2294 + 12) * t2283
            t2297 = -13 * t2289 ** 2 - 35 * t2282 - 15 * t2286 + 297 * t2288 - 513 * t2290 + 327 * t2292 - 53 * t2294 + 5
            t2284 = 5 * phi1
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.9614e4) * (-(-t2297 + t2298) * np.sin((-t2284 + 12 * phi2)) + (t2297 + t2298) * np.sin((t2284 + 12 * phi2))) * ((1 + t2283) ** (-0.1e1 / 0.2e1)) * ((1 - t2283) ** (-0.1e1 / 0.2e1))

        if Bindx == 144:
            t2313 = np.cos(phi)
            t2312 = t2313 ** 2
            t2315 = t2312 ** 2
            t2314 = t2313 * t2312
            t2317 = t2314 ** 2
            t2319 = t2315 ** 2
            t2316 = t2313 * t2315
            t2321 = t2316 ** 2
            t2323 = t2317 ** 2
            t2326 = -0.102465e6 / 0.1024e4 * t2312 + 0.657045e6 / 0.512e3 * t2315 - 0.3475629e7 / 0.512e3 * t2317 + 0.16073235e8 / 0.1024e4 * t2319 - 0.16469541e8 / 0.1024e4 * t2321 + 0.1536975e7 / 0.256e3 * t2323 + 0.1863e4 / 0.1024e4
            t2325 = -0.611145e6 / 0.512e3 * t2314 + 0.5875983e7 / 0.1024e4 * t2316 + (-0.2772225e7 / 0.256e3 * t2317 + 0.7301745e7 / 0.1024e4 * t2319 + 0.635283e6 / 0.512e3 * t2321 - 0.2220075e7 / 0.1024e4 * t2323 + 0.69147e5 / 0.1024e4) * t2313
            tfunc[..., c] = (t2325 + t2326) * np.cos((6 * phi1 - 6 * phi2)) + (-t2325 + t2326) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 145:
            t2341 = np.cos(phi)
            t2340 = t2341 ** 2
            t2344 = t2340 ** 2
            t2343 = t2341 * t2340
            t2346 = t2343 ** 2
            t2348 = t2344 ** 2
            t2345 = t2341 * t2344
            t2350 = t2345 ** 2
            t2352 = t2346 ** 2
            t2355 = 6 - 6 * t2340 - 188 * t2344 + 468 * t2346 - 306 * t2348 - 46 * t2350 + 72 * t2352
            t2354 = 144 * t2343 - 135 * t2345 + (-216 * t2346 + 363 * t2348 - 120 * t2350 - 13 * t2352 - 23) * t2341
            t2342 = 6 * phi1
            tfunc[..., c] = -0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((t2354 + t2355) * np.cos((-t2342 + 12 * phi2)) + (-t2354 + t2355) * np.cos((t2342 + 12 * phi2)))

        if Bindx == 146:
            t2371 = np.cos(phi)
            t2370 = t2371 ** 2
            t2373 = t2371 * t2370
            t2374 = t2370 ** 2
            t2375 = t2371 * t2374
            t2376 = t2373 ** 2
            t2377 = t2371 * t2376
            t2378 = t2374 ** 2
            t2380 = t2375 ** 2
            t2382 = t2376 ** 2
            t2386 = 2632 * t2373 + 4046 * t2375 - 65664 * t2377 + (161938 * t2378 - 155848 * t2380 + 53130 * t2382 - 234) * t2371
            t2385 = 16445 * t2377 ** 2 - 4165 * t2370 + 35553 * t2374 - 120057 * t2376 + 183327 * t2378 - 112959 * t2380 + 1771 * t2382 + 85
            t2372 = 7 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.35e2) * (-(-t2385 + t2386) * np.sin((-t2372 + 6 * phi2)) + (t2385 + t2386) * np.sin((t2372 + 6 * phi2))) * ((1 - t2371) ** (-0.1e1 / 0.2e1)) * ((1 + t2371) ** (-0.1e1 / 0.2e1))

        if Bindx == 147:
            t2402 = np.cos(phi)
            t2401 = t2402 ** 2
            t2404 = t2402 * t2401
            t2405 = t2401 ** 2
            t2406 = t2402 * t2405
            t2407 = t2404 ** 2
            t2408 = t2402 * t2407
            t2409 = t2405 ** 2
            t2411 = t2406 ** 2
            t2413 = t2407 ** 2
            t2417 = -136 * t2404 - 116 * t2406 + 720 * t2408 + (-644 * t2409 + 56 * t2411 + 84 * t2413 + 36) * t2402
            t2416 = -13 * t2408 ** 2 - 35 * t2401 + 357 * t2405 - 567 * t2407 + 27 * t2409 + 423 * t2411 - 185 * t2413 - 7
            t2403 = 7 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.8855e4) * (-(t2416 + t2417) * np.sin((-t2403 + 12 * phi2)) + (-t2416 + t2417) * np.sin((t2403 + 12 * phi2))) * ((1 - t2402) ** (-0.1e1 / 0.2e1)) * ((1 + t2402) ** (-0.1e1 / 0.2e1))

        if Bindx == 148:
            t2432 = np.cos(phi)
            t2431 = t2432 ** 2
            t2435 = t2431 ** 2
            t2434 = t2432 * t2431
            t2437 = t2434 ** 2
            t2439 = t2435 ** 2
            t2436 = t2432 * t2435
            t2441 = t2436 ** 2
            t2443 = t2437 ** 2
            t2446 = -5084 * t2431 + 24904 * t2435 - 20568 * t2437 - 69204 * t2439 + 130548 * t2441 - 60720 * t2443 + 124
            t2445 = 15864 * t2434 - 84537 * t2436 + (185544 * t2437 - 164659 * t2439 + 32384 * t2441 + 16445 * t2443 - 1041) * t2432
            t2433 = 8 * phi1
            tfunc[..., c] = 0.27e2 / 0.2048e4 * np.sqrt(0.10e2) * ((t2445 + t2446) * np.cos((-t2433 + 6 * phi2)) + (-t2445 + t2446) * np.cos((t2433 + 6 * phi2)))

        if Bindx == 149:
            t2461 = np.cos(phi)
            t2460 = t2461 ** 2
            t2464 = t2460 ** 2
            t2463 = t2461 * t2460
            t2466 = t2463 ** 2
            t2468 = t2464 ** 2
            t2465 = t2461 * t2464
            t2470 = t2465 ** 2
            t2472 = t2466 ** 2
            t2475 = 8 + 104 * t2460 - 400 * t2464 - 48 * t2466 + 744 * t2468 - 312 * t2470 - 96 * t2472
            t2474 = -18 * t2463 - 579 * t2465 + (708 * t2466 + 125 * t2468 - 274 * t2470 - 13 * t2472 + 51) * t2461
            t2462 = 8 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.2530e4) * ((-t2474 + t2475) * np.cos((-t2462 + 12 * phi2)) + (t2474 + t2475) * np.cos((t2462 + 12 * phi2)))

        if Bindx == 150:
            t2491 = np.cos(phi)
            t2490 = t2491 ** 2
            t2493 = t2491 * t2490
            t2494 = t2490 ** 2
            t2495 = t2491 * t2494
            t2496 = t2493 ** 2
            t2497 = t2491 * t2496
            t2498 = t2494 ** 2
            t2500 = t2495 ** 2
            t2502 = t2496 ** 2
            t2506 = 14936 * t2493 - 48274 * t2495 + 47136 * t2497 + (28866 * t2498 - 72312 * t2500 + 31050 * t2502 - 1402) * t2491
            t2505 = -7475 * t2497 ** 2 + 891 * t2490 - 17631 * t2494 + 83799 * t2496 - 155601 * t2498 + 118561 * t2500 - 22517 * t2502 - 27
            t2492 = 9 * phi1
            tfunc[..., c] = -0.27e2 / 0.2048e4 * np.sqrt(0.11e2) * (-(t2505 + t2506) * np.sin((-t2492 + 6 * phi2)) + (-t2505 + t2506) * np.sin((t2492 + 6 * phi2))) * ((1 - t2491) ** (-0.1e1 / 0.2e1)) * ((1 + t2491) ** (-0.1e1 / 0.2e1))

        if Bindx == 151:
            t2522 = np.cos(phi)
            t2521 = t2522 ** 2
            t2524 = t2522 * t2521
            t2525 = t2521 ** 2
            t2526 = t2522 * t2525
            t2527 = t2524 ** 2
            t2528 = t2522 * t2527
            t2529 = t2525 ** 2
            t2531 = t2526 ** 2
            t2533 = t2527 ** 2
            t2537 = 152 * t2524 - 1012 * t2526 + 528 * t2528 + (924 * t2529 - 552 * t2531 - 108 * t2533 + 68) * t2522
            t2536 = -13 * t2528 ** 2 + 189 * t2521 - 363 * t2525 - 759 * t2527 + 1419 * t2529 - 121 * t2531 - 361 * t2533 + 9
            t2523 = 9 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.23e2) * (-(-t2536 + t2537) * np.sin((-t2523 + 12 * phi2)) + (t2536 + t2537) * np.sin((t2523 + 12 * phi2))) * ((1 + t2522) ** (-0.1e1 / 0.2e1)) * ((1 - t2522) ** (-0.1e1 / 0.2e1))

        if Bindx == 152:
            t2552 = np.cos(phi)
            t2551 = t2552 ** 2
            t2555 = t2551 ** 2
            t2554 = t2552 * t2551
            t2557 = t2554 ** 2
            t2559 = t2555 ** 2
            t2556 = t2552 * t2555
            t2561 = t2556 ** 2
            t2563 = t2557 ** 2
            t2566 = -17 + 391 * t2551 - 2246 * t2555 + 4182 * t2557 - 1605 * t2559 - 2205 * t2561 + 1500 * t2563
            t2565 = 210 * t2554 + 1377 * t2556 + (-5436 * t2557 + 5951 * t2559 - 1702 * t2561 - 325 * t2563 - 75) * t2552
            t2553 = 10 * phi1
            tfunc[..., c] = 0.27e2 / 0.1024e4 * np.sqrt(0.253e3) * ((t2565 + t2566) * np.cos((-t2553 + 6 * phi2)) + (-t2565 + t2566) * np.cos((t2553 + 6 * phi2)))

        if Bindx == 153:
            t2581 = np.cos(phi)
            t2580 = t2581 ** 2
            t2584 = t2580 ** 2
            t2583 = t2581 * t2580
            t2586 = t2583 ** 2
            t2588 = t2584 ** 2
            t2585 = t2581 * t2584
            t2590 = t2585 ** 2
            t2592 = t2586 ** 2
            t2595 = -0.20925e5 / 0.1024e4 * t2580 - 0.7425e4 / 0.512e3 * t2584 + 0.57915e5 / 0.512e3 * t2586 - 0.4455e4 / 0.1024e4 * t2588 - 0.66825e5 / 0.1024e4 * t2590 - 0.2025e4 / 0.256e3 * t2592 - 0.675e3 / 0.1024e4
            t2594 = -0.4455e4 / 0.128e3 * t2583 + 0.111375e6 / 0.2048e4 * t2585 + (0.22275e5 / 0.256e3 * t2586 - 0.141075e6 / 0.2048e4 * t2588 - 0.7965e4 / 0.256e3 * t2590 - 0.1755e4 / 0.2048e4 * t2592 - 0.11745e5 / 0.2048e4) * t2581
            t2582 = 10 * phi1
            tfunc[..., c] = (-t2594 + t2595) * np.cos((-t2582 + 12 * phi2)) + (t2594 + t2595) * np.cos((t2582 + 12 * phi2))

        if Bindx == 154:
            t2611 = np.cos(phi)
            t2610 = t2611 ** 2
            t2613 = t2611 * t2610
            t2614 = t2610 ** 2
            t2615 = t2611 * t2614
            t2616 = t2613 ** 2
            t2617 = t2611 * t2616
            t2618 = t2614 ** 2
            t2620 = t2615 ** 2
            t2622 = t2616 ** 2
            t2626 = -1532 * t2613 + 6626 * t2615 - 9576 * t2617 + (3482 * t2618 + 2596 * t2620 - 1650 * t2622 + 54) * t2611
            t2625 = -325 * t2617 ** 2 - 767 * t2610 + 1707 * t2614 + 2025 * t2616 - 9207 * t2618 + 8667 * t2620 - 2159 * t2622 + 59
            t2612 = 11 * phi1
            tfunc[..., c] = -0.27e2 / 0.4096e4 * np.sqrt(0.506e3) * (-(-t2625 + t2626) * np.sin((-t2612 + 6 * phi2)) + (t2625 + t2626) * np.sin((t2612 + 6 * phi2))) * ((1 - t2611) ** (-0.1e1 / 0.2e1)) * ((1 + t2611) ** (-0.1e1 / 0.2e1))

        if Bindx == 155:
            t2642 = np.cos(phi)
            t2641 = t2642 ** 2
            t2644 = t2642 * t2641
            t2645 = t2641 ** 2
            t2646 = t2642 * t2645
            t2647 = t2644 ** 2
            t2648 = t2642 * t2647
            t2649 = t2645 ** 2
            t2651 = t2646 ** 2
            t2653 = t2647 ** 2
            t2657 = 992 * t2644 - 308 * t2646 - 3168 * t2648 + (836 * t2649 + 1408 * t2651 + 132 * t2653 + 108) * t2642
            t2656 = -13 * t2648 ** 2 - 451 * t2641 - 1023 * t2645 + 2409 * t2647 + 1551 * t2649 - 1881 * t2651 - 581 * t2653 - 11
            t2643 = 11 * phi1
            tfunc[..., c] = -0.135e3 / 0.8192e4 * np.sqrt(0.2e1) * (-(t2656 + t2657) * np.sin((-t2643 + 12 * phi2)) + (-t2656 + t2657) * np.sin((t2643 + 12 * phi2))) * ((1 - t2642) ** (-0.1e1 / 0.2e1)) * ((1 + t2642) ** (-0.1e1 / 0.2e1))

        if Bindx == 156:
            t2672 = np.cos(phi)
            t2671 = t2672 ** 2
            t2675 = t2671 ** 2
            t2674 = t2672 * t2671
            t2677 = t2674 ** 2
            t2679 = t2675 ** 2
            t2676 = t2672 * t2675
            t2681 = t2676 ** 2
            t2683 = t2677 ** 2
            t2686 = -6 + 6 * t2671 + 188 * t2675 - 468 * t2677 + 306 * t2679 + 46 * t2681 - 72 * t2683
            t2685 = 144 * t2674 - 135 * t2676 + (-216 * t2677 + 363 * t2679 - 120 * t2681 - 13 * t2683 - 23) * t2672
            t2673 = 12 * phi1
            tfunc[..., c] = 0.135e3 / 0.2048e4 * np.sqrt(0.253e3) * ((-t2685 + t2686) * np.cos((-t2673 + 6 * phi2)) + (t2685 + t2686) * np.cos((t2673 + 6 * phi2)))

        if Bindx == 157:
            t2701 = np.cos(phi)
            t2700 = t2701 ** 2
            t2703 = t2700 ** 2
            t2702 = t2701 * t2700
            t2705 = t2702 ** 2
            t2707 = t2703 ** 2
            t2704 = t2701 * t2703
            t2709 = t2704 ** 2
            t2711 = t2705 ** 2
            t2714 = -0.4293e4 / 0.1024e4 * t2700 - 0.10395e5 / 0.512e3 * t2703 - 0.2673e4 / 0.512e3 * t2705 + 0.29403e5 / 0.1024e4 * t2707 + 0.13959e5 / 0.1024e4 * t2709 + 0.243e3 / 0.256e3 * t2711 - 0.81e2 / 0.1024e4
            t2713 = 0.24057e5 / 0.2048e4 * t2702 + 0.82863e5 / 0.4096e4 * t2704 + (-0.16929e5 / 0.1024e4 * t2705 - 0.102465e6 / 0.4096e4 * t2707 - 0.9639e4 / 0.2048e4 * t2709 - 0.351e3 / 0.4096e4 * t2711 + 0.3537e4 / 0.4096e4) * t2701
            tfunc[..., c] = (t2713 + t2714) * np.cos((12 * phi1 - 12 * phi2)) + (-t2713 + t2714) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 158:
            t2727 = np.cos(phi)
            t2726 = t2727 ** 2
            t2730 = t2726 ** 2
            t2733 = t2730 ** 2
            t2731 = t2727 * t2730
            t2735 = t2731 ** 2
            t2736 = t2727 * t2735
            t2739 = -t2727 * t2736 + 12 * t2726 - 27 * t2730 + 27 * t2733 - 12 * t2735 + 1
            t2738 = -6 * t2736 + 2 * (18 * t2726 - 18) * t2731 + 2 * (t2726 - t2733 + 3) * t2727
            t2728 = 13 * phi1
            tfunc[..., c] = -0.135e3 / 0.4096e4 * np.sqrt(0.6578e4) * np.sqrt((1 - t2727)) * np.sqrt((1 + t2727)) * (-(t2738 - t2739) * np.sin((-t2728 + 6 * phi2)) + (t2738 + t2739) * np.sin((t2728 + 6 * phi2)))

        if Bindx == 159:
            t2754 = np.cos(phi)
            t2753 = t2754 ** 2
            t2756 = t2754 * t2753
            t2757 = t2753 ** 2
            t2758 = t2754 * t2757
            t2760 = t2757 ** 2
            t2762 = t2758 ** 2
            t2759 = t2756 ** 2
            t2764 = t2759 ** 2
            t2765 = t2754 * t2764
            t2768 = -208 * t2756 - 572 * t2758 + 12 * t2765 + (572 * t2760 + 208 * t2762 - 12) * t2754
            t2767 = -t2754 * t2765 + 65 * t2753 + 429 * t2757 + 429 * t2759 - 429 * t2760 - 429 * t2762 - 65 * t2764 + 1
            t2755 = 13 * phi1
            tfunc[..., c] = 0.27e2 / 0.8192e4 * np.sqrt(0.26e2) * (-(t2767 + t2768) * np.sin((-t2755 + 12 * phi2)) + (-t2767 + t2768) * np.sin((t2755 + 12 * phi2))) * ((1 - t2754) ** (-0.1e1 / 0.2e1)) * ((1 + t2754) ** (-0.1e1 / 0.2e1))

        if Bindx == 160:
            t2769 = np.cos(phi)
            t2770 = t2769 ** 2
            t2771 = t2770 ** 2
            t2772 = t2770 * t2771
            t2775 = t2772 ** 2
            t2773 = t2771 ** 2
            tfunc[..., c] = -0.490128275e9 / 0.2048e4 * t2775 - 0.421936515e9 / 0.2048e4 * t2773 + 0.140645505e9 / 0.2048e4 * t2772 - 0.22207185e8 / 0.2048e4 * t2771 - 0.12441e5 / 0.2048e4 + (0.145422675e9 / 0.2048e4 * t2775 + 0.646969323e9 / 0.2048e4 * t2773 + 0.1306305e7 / 0.2048e4) * t2770

        if Bindx == 161:
            t2777 = np.cos(phi)
            t2778 = t2777 ** 2
            t2779 = t2778 ** 2
            t2780 = t2778 * t2779
            t2783 = t2780 ** 2
            t2781 = t2779 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.3233230e7) * (-1221 * t2779 + 6371 * t2780 - 15747 * t2781 - 12535 * t2783 - 1 + (19941 * t2781 + 3105 * t2783 + 87) * t2778) * np.cos((6 * phi2))

        if Bindx == 162:
            t2785 = np.cos(phi)
            t2786 = t2785 ** 2
            t2787 = t2786 ** 2
            t2788 = t2786 * t2787
            t2791 = t2788 ** 2
            t2789 = t2787 ** 2
            tfunc[..., c] = 0.145e3 / 0.2048e4 * np.sqrt(0.52003e5) * (-177 * t2787 + 425 * t2788 - 555 * t2789 - 163 * t2791 - 1 + (411 * t2789 + 27 * t2791 + 33) * t2786) * np.cos((12 * phi2))

        if Bindx == 163:
            t2794 = np.cos(phi)
            t2795 = t2794 ** 2
            t2796 = t2795 ** 2
            t2798 = t2796 ** 2
            t2797 = t2795 * t2796
            t2793 = np.sin(phi)
            tfunc[..., c] = -0.29e2 / 0.1024e4 * np.sqrt(0.105e3) * t2794 * t2793 ** 2 * (138567 * t2796 + 1062347 * t2798 + 429 + (-554268 + 334305 * t2797) * t2797 + (-965770 * t2798 - 14586) * t2795) * np.sin(phi1) * ((1 + t2794) ** (-0.1e1 / 0.2e1)) * ((1 - t2794) ** (-0.1e1 / 0.2e1))

        if Bindx == 164:
            t2817 = np.cos(phi)
            t2816 = t2817 ** 2
            t2819 = t2816 ** 2
            t2818 = t2817 * t2816
            t2821 = t2818 ** 2
            t2823 = t2819 ** 2
            t2820 = t2817 * t2819
            t2825 = t2820 ** 2
            t2827 = t2821 ** 2
            t2822 = t2817 * t2821
            t2829 = t2822 ** 2
            t2832 = 1 - 87 * t2816 + 1221 * t2819 - 6371 * t2821 + 15747 * t2823 - 19941 * t2825 + 12535 * t2827 - 3105 * t2829
            t2831 = 843 * t2818 - 7185 * t2820 + 27367 * t2822 + (-54231 * t2823 + 58305 * t2825 - 32315 * t2827 + 7245 * t2829 - 29) * t2817
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.138567e6) * ((t2831 + t2832) * np.sin((phi1 - 6 * phi2)) + (t2831 - t2832) * np.sin((phi1 + 6 * phi2))) * ((1 + t2817) ** (-0.1e1 / 0.2e1)) * ((1 - t2817) ** (-0.1e1 / 0.2e1))

        if Bindx == 165:
            t2849 = np.cos(phi)
            t2848 = t2849 ** 2
            t2851 = t2848 ** 2
            t2850 = t2849 * t2848
            t2853 = t2850 ** 2
            t2855 = t2851 ** 2
            t2852 = t2849 * t2851
            t2857 = t2852 ** 2
            t2859 = t2853 ** 2
            t2854 = t2849 * t2853
            t2861 = t2854 ** 2
            t2864 = 2 - 66 * t2848 + 354 * t2851 - 850 * t2853 + 1110 * t2855 - 822 * t2857 + 326 * t2859 - 54 * t2861
            t2863 = 129 * t2850 - 543 * t2852 + 1165 * t2854 + (-1425 * t2855 + 1011 * t2857 - 389 * t2859 + 63 * t2861 - 11) * t2849
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.222870e6) * ((t2863 + t2864) * np.sin((phi1 - 12 * phi2)) + (t2863 - t2864) * np.sin((phi1 + 12 * phi2))) * ((1 + t2849) ** (-0.1e1 / 0.2e1)) * ((1 - t2849) ** (-0.1e1 / 0.2e1))

        if Bindx == 166:
            t2865 = np.cos(phi)
            t2866 = t2865 ** 2
            t2867 = t2866 ** 2
            t2868 = t2866 * t2867
            t2871 = t2868 ** 2
            t2869 = t2867 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1365e4) * (-56661 * t2867 + 351747 * t2868 - 1033923 * t2869 - 1151495 * t2871 - 33 + (1552661 * t2869 + 334305 * t2871 + 3399) * t2866) * np.cos((2 * phi1))

        if Bindx == 167:
            t2888 = np.cos(phi)
            t2887 = t2888 ** 2
            t2890 = t2888 * t2887
            t2891 = t2887 ** 2
            t2892 = t2888 * t2891
            t2893 = t2890 ** 2
            t2894 = t2888 * t2893
            t2895 = t2891 ** 2
            t2897 = t2892 ** 2
            t2899 = t2893 ** 2
            t2903 = -9596 * t2890 + 74182 * t2892 - 241480 * t2894 + (377798 * t2895 - 281980 * t2897 + 80730 * t2899 + 346) * t2888
            t2902 = 94185 * t2894 ** 2 + 1955 * t2887 - 27487 * t2891 + 147411 * t2893 - 383021 * t2895 + 518305 * t2897 - 351325 * t2899 - 23
            t2889 = 2 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.10659e5) * ((t2902 - t2903) * np.cos((-t2889 + 6 * phi2)) + (t2902 + t2903) * np.cos((t2889 + 6 * phi2)))

        if Bindx == 168:
            t2919 = np.cos(phi)
            t2918 = t2919 ** 2
            t2922 = t2918 ** 2
            t2921 = t2919 * t2918
            t2924 = t2921 ** 2
            t2925 = t2919 * t2924
            t2926 = t2922 ** 2
            t2923 = t2919 * t2922
            t2928 = t2923 ** 2
            t2930 = t2924 ** 2
            t2934 = 63 * t2925 ** 2 - 31 * t2918 + 77 * t2922 + 45 * t2924 - 365 * t2926 + 499 * t2928 - 289 * t2930 + 1
            t2933 = 208 * t2921 - 740 * t2923 + 1280 * t2925 + (-1180 * t2926 + 560 * t2928 - 108 * t2930 - 20) * t2919
            t2920 = 2 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.2897310e7) * ((t2933 + t2934) * np.cos((-t2920 + 12 * phi2)) + (-t2933 + t2934) * np.cos((t2920 + 12 * phi2)))

        if Bindx == 169:
            t2943 = np.sin(phi)
            t2941 = t2943 ** 2
            t2935 = np.cos(phi)
            t2936 = t2935 ** 2
            t2937 = t2936 ** 2
            t2939 = t2937 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.7735e4) * t2935 * t2941 ** 2 * (-26334 * t2937 - 120175 * t2939 - 99 + (86526 * t2937 + 58995 * t2939 + 3135) * t2936) * np.sin((3 * phi1)) * ((1 + t2935) ** (-0.1e1 / 0.2e1)) * ((1 - t2935) ** (-0.1e1 / 0.2e1))

        if Bindx == 170:
            t2960 = np.cos(phi)
            t2959 = t2960 ** 2
            t2963 = t2959 ** 2
            t2962 = t2960 * t2959
            t2965 = t2962 ** 2
            t2967 = t2963 ** 2
            t2964 = t2960 * t2963
            t2969 = t2964 ** 2
            t2971 = t2965 ** 2
            t2966 = t2960 * t2965
            t2973 = t2966 ** 2
            t2976 = 10043 * t2959 - 136357 * t2963 + 699343 * t2965 - 1726427 * t2967 + 2214049 * t2969 - 1423815 * t2971 + 363285 * t2973 - 121
            t2975 = 13093 * t2962 - 123587 * t2964 + 551233 * t2966 + (-1303597 * t2967 + 1667615 * t2969 - 1086865 * t2971 + 282555 * t2973 - 447) * t2960
            t2961 = 3 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.209e3) * (-(t2975 - t2976) * np.sin((-t2961 + 6 * phi2)) + (t2975 + t2976) * np.sin((t2961 + 6 * phi2))) * ((1 + t2960) ** (-0.1e1 / 0.2e1)) * ((1 - t2960) ** (-0.1e1 / 0.2e1))

        if Bindx == 171:
            t2993 = np.cos(phi)
            t2992 = t2993 ** 2
            t2996 = t2992 ** 2
            t2995 = t2993 * t2992
            t2998 = t2995 ** 2
            t3000 = t2996 ** 2
            t2997 = t2993 * t2996
            t3002 = t2997 ** 2
            t3004 = t2998 ** 2
            t2999 = t2993 * t2998
            t3006 = t2999 ** 2
            t3009 = 2 - 58 * t2992 + 746 * t2996 - 2930 * t2998 + 5350 * t3000 - 5102 * t3002 + 2478 * t3004 - 486 * t3006
            t3008 = -701 * t2995 + 2191 * t2997 - 3065 * t2999 + (1745 * t3000 + 185 * t3002 - 619 * t3004 + 189 * t3006 + 75) * t2993
            t2994 = 3 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.56810e5) * (-(t3008 + t3009) * np.sin((-t2994 + 12 * phi2)) + (t3008 - t3009) * np.sin((t2994 + 12 * phi2))) * ((1 + t2993) ** (-0.1e1 / 0.2e1)) * ((1 - t2993) ** (-0.1e1 / 0.2e1))

        if Bindx == 172:
            t3010 = np.cos(phi)
            t3011 = t3010 ** 2
            t3012 = t3011 ** 2
            t3013 = t3011 * t3012
            t3016 = t3013 ** 2
            t3014 = t3012 ** 2
            tfunc[..., c] = 0.87e2 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.85085e5) * (-1521 * t3012 + 8873 * t3013 - 24491 * t3014 - 24035 * t3016 - 1 + (34523 * t3014 + 6555 * t3016 + 97) * t3011) * np.cos((4 * phi1))

        if Bindx == 173:
            t3033 = np.cos(phi)
            t3032 = t3033 ** 2
            t3036 = t3032 ** 2
            t3035 = t3033 * t3032
            t3038 = t3035 ** 2
            t3039 = t3033 * t3038
            t3040 = t3036 ** 2
            t3037 = t3033 * t3036
            t3042 = t3037 ** 2
            t3044 = t3038 ** 2
            t3048 = 345345 * t3039 ** 2 - 2449 * t3032 + 21251 * t3036 - 2509 * t3038 - 338899 * t3040 + 947485 * t3042 - 970255 * t3044 + 31
            t3047 = 64624 * t3035 - 483996 * t3037 + 1573504 * t3039 + (-2522916 * t3040 + 1963280 * t3042 - 592020 * t3044 - 2476) * t3033
            t3034 = 4 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.38e2) * ((t3047 + t3048) * np.cos((-t3034 + 6 * phi2)) + (-t3047 + t3048) * np.cos((t3034 + 6 * phi2)))

        if Bindx == 174:
            t3064 = np.cos(phi)
            t3063 = t3064 ** 2
            t3066 = t3064 * t3063
            t3067 = t3063 ** 2
            t3068 = t3064 * t3067
            t3069 = t3066 ** 2
            t3070 = t3064 * t3069
            t3071 = t3067 ** 2
            t3073 = t3068 ** 2
            t3075 = t3069 ** 2
            t3079 = -48 * t3066 + 40 * t3068 + 160 * t3070 + (-360 * t3071 + 272 * t3073 - 72 * t3075 + 8) * t3064
            t3078 = 21 * t3070 ** 2 - 25 * t3063 + 169 * t3067 - 425 * t3069 + 475 * t3071 - 211 * t3073 - 5 * t3075 + 1
            t3065 = 4 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.312455e6) * ((t3078 + t3079) * np.cos((-t3065 + 12 * phi2)) + (t3078 - t3079) * np.cos((t3065 + 12 * phi2)))

        if Bindx == 175:
            t3088 = np.sin(phi)
            t3085 = t3088 ** 2
            t3086 = t3088 * t3085
            t3080 = np.cos(phi)
            t3081 = t3080 ** 2
            t3082 = t3081 ** 2
            tfunc[..., c] = -0.87e2 / 0.2048e4 * np.sqrt(0.323323e6) * t3080 * t3086 ** 2 * (-140 * t3081 + 5 + (-2300 * t3081 + 966 + 1725 * t3082) * t3082) * np.sin((5 * phi1)) * ((1 + t3080) ** (-0.1e1 / 0.2e1)) * ((1 - t3080) ** (-0.1e1 / 0.2e1))

        if Bindx == 176:
            t3105 = np.cos(phi)
            t3104 = t3105 ** 2
            t3108 = t3104 ** 2
            t3107 = t3105 * t3104
            t3110 = t3107 ** 2
            t3112 = t3108 ** 2
            t3109 = t3105 * t3108
            t3114 = t3109 ** 2
            t3116 = t3110 ** 2
            t3111 = t3105 * t3110
            t3118 = t3111 ** 2
            t3121 = 17175 * t3104 - 222785 * t3108 + 1148347 * t3110 - 2946015 * t3112 + 3989557 * t3114 - 2726075 * t3116 + 740025 * t3118 - 229
            t3120 = -46785 * t3107 + 291903 * t3109 - 673485 * t3111 + (430705 * t3112 + 554829 * t3114 - 904475 * t3116 + 345345 * t3118 + 1963) * t3105
            t3106 = 5 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.5e1) * (-(t3120 - t3121) * np.sin((-t3106 + 6 * phi2)) + (t3120 + t3121) * np.sin((t3106 + 6 * phi2))) * ((1 + t3105) ** (-0.1e1 / 0.2e1)) * ((1 - t3105) ** (-0.1e1 / 0.2e1))

        if Bindx == 177:
            t3138 = np.cos(phi)
            t3137 = t3138 ** 2
            t3141 = t3137 ** 2
            t3140 = t3138 * t3137
            t3143 = t3140 ** 2
            t3145 = t3141 ** 2
            t3142 = t3138 * t3141
            t3147 = t3142 ** 2
            t3149 = t3143 ** 2
            t3144 = t3138 * t3143
            t3151 = t3144 ** 2
            t3154 = -2 + 42 * t3137 - 218 * t3141 + 402 * t3143 - 198 * t3145 - 226 * t3147 + 290 * t3149 - 90 * t3151
            t3153 = -5 * t3140 + 207 * t3142 - 657 * t3144 + (833 * t3145 - 447 * t3147 + 53 * t3149 + 21 * t3151 - 5) * t3138
            t3139 = 5 * phi1
            tfunc[..., c] = 0.435e3 / 0.8192e4 * np.sqrt(0.6578e4) * (-(t3153 + t3154) * np.sin((-t3139 + 12 * phi2)) + (t3153 - t3154) * np.sin((t3139 + 12 * phi2))) * ((1 + t3138) ** (-0.1e1 / 0.2e1)) * ((1 - t3138) ** (-0.1e1 / 0.2e1))

        if Bindx == 178:
            t3155 = np.cos(phi)
            t3156 = t3155 ** 2
            t3157 = t3156 ** 2
            t3158 = t3156 * t3157
            t3161 = t3158 ** 2
            t3159 = t3157 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.1616615e7) * (-1221 * t3157 + 6371 * t3158 - 15747 * t3159 - 12535 * t3161 - 1 + (19941 * t3159 + 3105 * t3161 + 87) * t3156) * np.cos((6 * phi1))

        if Bindx == 179:
            t3178 = np.cos(phi)
            t3177 = t3178 ** 2
            t3179 = t3178 * t3177
            t3180 = t3177 ** 2
            t3181 = t3178 * t3180
            t3182 = t3179 ** 2
            t3183 = t3178 * t3182
            t3184 = t3180 ** 2
            t3186 = t3181 ** 2
            t3188 = t3182 ** 2
            t3192 = 0.3773857e7 / 0.4096e4 * t3179 - 0.60502149e8 / 0.8192e4 * t3181 + 0.55660599e8 / 0.2048e4 * t3183 + (-0.403806469e9 / 0.8192e4 * t3184 + 0.175097505e9 / 0.4096e4 * t3186 - 0.115887915e9 / 0.8192e4 * t3188 - 0.307371e6 / 0.8192e4) * t3178
            t3191 = 0.90135045e8 / 0.16384e5 * t3183 ** 2 - 0.6677337e7 / 0.16384e5 * t3177 + 0.70342893e8 / 0.16384e5 * t3180 - 0.257721753e9 / 0.16384e5 * t3182 + 0.386829927e9 / 0.16384e5 * t3184 - 0.167833875e9 / 0.16384e5 * t3186 - 0.114934105e9 / 0.16384e5 * t3188 + 0.96773e5 / 0.16384e5
            tfunc[..., c] = (t3191 + t3192) * np.cos((6 * phi1 - 6 * phi2)) + (t3191 - t3192) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 180:
            t3208 = np.cos(phi)
            t3207 = t3208 ** 2
            t3210 = t3208 * t3207
            t3211 = t3207 ** 2
            t3212 = t3208 * t3211
            t3213 = t3210 ** 2
            t3214 = t3208 * t3213
            t3215 = t3211 ** 2
            t3217 = t3212 ** 2
            t3219 = t3213 ** 2
            t3223 = -752 * t3210 + 3708 * t3212 - 5760 * t3214 + (2372 * t3215 + 1392 * t3217 - 972 * t3219 + 12) * t3208
            t3222 = 189 * t3214 ** 2 + 435 * t3207 - 1161 * t3211 - 729 * t3213 + 5049 * t3215 - 5079 * t3217 + 1325 * t3219 - 29
            t3209 = 6 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3222 + t3223) * np.cos((-t3209 + 12 * phi2)) + (t3222 - t3223) * np.cos((t3209 + 12 * phi2)))

        if Bindx == 181:
            t3231 = np.sin(phi)
            t3228 = t3231 ** 2
            t3229 = t3228 ** 2
            t3224 = np.cos(phi)
            t3225 = t3224 ** 2
            t3226 = t3225 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.692835e6) * t3224 * t3229 ** 2 * (-805 * t3226 - 7 + (1035 * t3226 + 161) * t3225) * np.sin((7 * phi1)) * ((1 + t3224) ** (-0.1e1 / 0.2e1)) * ((1 - t3224) ** (-0.1e1 / 0.2e1))

        if Bindx == 182:
            t3248 = np.cos(phi)
            t3247 = t3248 ** 2
            t3251 = t3247 ** 2
            t3250 = t3248 * t3247
            t3253 = t3250 ** 2
            t3255 = t3251 ** 2
            t3252 = t3248 * t3251
            t3257 = t3252 ** 2
            t3259 = t3253 ** 2
            t3254 = t3248 * t3253
            t3261 = t3254 ** 2
            t3264 = -441 * t3247 + 28259 * t3251 - 297549 * t3253 + 1106901 * t3255 - 1871947 * t3257 + 1478785 * t3259 - 444015 * t3261 + 7
            t3263 = -70861 * t3250 + 437535 * t3252 - 1183569 * t3254 + (1497881 * t3255 - 717255 * t3257 - 115115 * t3259 + 148005 * t3261 + 3379) * t3248
            t3249 = 7 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.42e2) * (-(t3263 + t3264) * np.sin((-t3249 + 6 * phi2)) + (t3263 - t3264) * np.sin((t3249 + 6 * phi2))) * ((1 + t3248) ** (-0.1e1 / 0.2e1)) * ((1 - t3248) ** (-0.1e1 / 0.2e1))

        if Bindx == 183:
            t3281 = np.cos(phi)
            t3280 = t3281 ** 2
            t3284 = t3280 ** 2
            t3283 = t3281 * t3280
            t3286 = t3283 ** 2
            t3288 = t3284 ** 2
            t3285 = t3281 * t3284
            t3290 = t3285 ** 2
            t3292 = t3286 ** 2
            t3287 = t3281 * t3286
            t3294 = t3287 ** 2
            t3297 = 2 - 18 * t3280 - 14 * t3284 + 270 * t3286 - 522 * t3288 + 314 * t3290 + 22 * t3292 - 54 * t3294
            t3296 = 71 * t3283 - 225 * t3285 + 171 * t3287 + (193 * t3288 - 315 * t3290 + 101 * t3292 + 9 * t3294 - 5) * t3281
            t3282 = 7 * phi1
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.345345e6) * (-(t3296 + t3297) * np.sin((-t3282 + 12 * phi2)) + (t3296 - t3297) * np.sin((t3282 + 12 * phi2))) * ((1 + t3281) ** (-0.1e1 / 0.2e1)) * ((1 - t3281) ** (-0.1e1 / 0.2e1))

        if Bindx == 184:
            t3298 = np.cos(phi)
            t3299 = t3298 ** 2
            t3300 = t3299 ** 2
            t3301 = t3299 * t3300
            t3304 = t3301 ** 2
            t3302 = t3300 ** 2
            tfunc[..., c] = 0.29e2 / 0.2048e4 * np.sqrt(0.440895e6) * (-857 * t3300 + 3753 * t3301 - 7867 * t3302 - 4715 * t3304 - 1 + (8579 * t3302 + 1035 * t3304 + 73) * t3299) * np.cos((8 * phi1))

        if Bindx == 185:
            t3321 = np.cos(phi)
            t3320 = t3321 ** 2
            t3323 = t3321 * t3320
            t3324 = t3320 ** 2
            t3325 = t3321 * t3324
            t3326 = t3323 ** 2
            t3327 = t3321 * t3326
            t3328 = t3324 ** 2
            t3330 = t3325 ** 2
            t3332 = t3326 ** 2
            t3336 = -26848 * t3323 + 59784 * t3325 + 165120 * t3327 + (-719624 * t3328 + 842720 * t3330 - 322920 * t3332 + 1768) * t3321
            t3335 = 94185 * t3327 ** 2 - 17105 * t3320 + 164979 * t3324 - 631173 * t3326 + 1090533 * t3328 - 783955 * t3330 + 82225 * t3332 + 311
            t3322 = 8 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.33e2) * ((t3335 + t3336) * np.cos((-t3322 + 6 * phi2)) + (t3335 - t3336) * np.cos((t3322 + 6 * phi2)))

        if Bindx == 186:
            t3352 = np.cos(phi)
            t3351 = t3352 ** 2
            t3354 = t3352 * t3351
            t3355 = t3351 ** 2
            t3356 = t3352 * t3355
            t3357 = t3354 ** 2
            t3358 = t3352 * t3357
            t3359 = t3355 ** 2
            t3361 = t3356 ** 2
            t3363 = t3357 ** 2
            t3367 = 608 * t3354 - 528 * t3356 - 2112 * t3358 + (3344 * t3359 - 800 * t3361 - 432 * t3363 - 80) * t3352
            t3366 = 63 * t3358 ** 2 - 19 * t3351 - 957 * t3355 + 2805 * t3357 - 1551 * t3359 - 1441 * t3361 + 1081 * t3363 + 19
            t3353 = 8 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.8970e4) * ((t3366 + t3367) * np.cos((-t3353 + 12 * phi2)) + (t3366 - t3367) * np.cos((t3353 + 12 * phi2)))

        if Bindx == 187:
            t3375 = np.sin(phi)
            t3371 = t3375 ** 2
            t3373 = t3375 * t3371 ** 2
            t3368 = np.cos(phi)
            t3369 = t3368 ** 2
            tfunc[..., c] = -0.29e2 / 0.2048e4 * np.sqrt(0.2e1) * np.sqrt(0.3380195e7) * t3368 * t3373 ** 2 * (3 + (-50 + 135 * t3369) * t3369) * np.sin((9 * phi1)) * ((1 + t3368) ** (-0.1e1 / 0.2e1)) * ((1 - t3368) ** (-0.1e1 / 0.2e1))

        if Bindx == 188:
            t3392 = np.cos(phi)
            t3391 = t3392 ** 2
            t3395 = t3391 ** 2
            t3394 = t3392 * t3391
            t3397 = t3394 ** 2
            t3399 = t3395 ** 2
            t3396 = t3392 * t3395
            t3401 = t3396 ** 2
            t3403 = t3397 ** 2
            t3398 = t3392 * t3397
            t3405 = t3398 ** 2
            t3408 = 3713 * t3391 - 25099 * t3395 + 53301 * t3397 - 5037 * t3399 - 114909 * t3401 + 135495 * t3403 - 47385 * t3405 - 79
            t3407 = -8613 * t3394 + 60183 * t3396 - 183753 * t3398 + (264289 * t3399 - 165455 * t3401 + 20605 * t3403 + 12285 * t3405 + 459) * t3392
            t3393 = 9 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.506e3) * (-(t3407 + t3408) * np.sin((-t3393 + 6 * phi2)) + (t3407 - t3408) * np.sin((t3393 + 6 * phi2))) * ((1 - t3392) ** (-0.1e1 / 0.2e1)) * ((1 + t3392) ** (-0.1e1 / 0.2e1))

        if Bindx == 189:
            t3425 = np.cos(phi)
            t3424 = t3425 ** 2
            t3428 = t3424 ** 2
            t3427 = t3425 * t3424
            t3430 = t3427 ** 2
            t3432 = t3428 ** 2
            t3429 = t3425 * t3428
            t3434 = t3429 ** 2
            t3436 = t3430 ** 2
            t3431 = t3425 * t3430
            t3438 = t3431 ** 2
            t3441 = -74 - 518 * t3424 + 5542 * t3428 - 8646 * t3430 - 4686 * t3432 + 14718 * t3434 - 4878 * t3436 - 1458 * t3438
            t3440 = -1677 * t3427 - 3333 * t3429 + 16071 * t3431 + (-12859 * t3432 - 3127 * t3434 + 4313 * t3436 + 189 * t3438 + 423) * t3425
            t3426 = 9 * phi1
            tfunc[..., c] = 0.29e2 / 0.4096e4 * np.sqrt(0.65e2) * (-(t3440 + t3441) * np.sin((-t3426 + 12 * phi2)) + (t3440 - t3441) * np.sin((t3426 + 12 * phi2))) * ((1 - t3425) ** (-0.1e1 / 0.2e1)) * ((1 + t3425) ** (-0.1e1 / 0.2e1))

        if Bindx == 190:
            t3442 = np.cos(phi)
            t3443 = t3442 ** 2
            t3444 = t3443 ** 2
            t3445 = t3443 * t3444
            t3448 = t3445 ** 2
            t3446 = t3444 ** 2
            tfunc[..., c] = -0.29e2 / 0.4096e4 * np.sqrt(0.2028117e7) * (-485 * t3444 + 1635 * t3445 - 2755 * t3446 - 1175 * t3448 - 1 + (2501 * t3446 + 225 * t3448 + 55) * t3443) * np.cos((10 * phi1))

        if Bindx == 191:
            t3465 = np.cos(phi)
            t3464 = t3465 ** 2
            t3467 = t3465 * t3464
            t3468 = t3464 ** 2
            t3469 = t3465 * t3468
            t3470 = t3467 ** 2
            t3471 = t3465 * t3470
            t3472 = t3468 ** 2
            t3474 = t3469 ** 2
            t3476 = t3470 ** 2
            t3480 = -7532 * t3467 + 27822 * t3469 - 34152 * t3471 + (-5714 * t3472 + 36500 * t3474 - 17550 * t3476 + 626) * t3465
            t3479 = 4095 * t3471 ** 2 + 37 * t3464 + 6039 * t3468 - 38331 * t3470 + 81477 * t3472 - 68201 * t3474 + 14885 * t3476 - 1
            t3466 = 10 * phi1
            tfunc[..., c] = 0.29e2 / 0.16384e5 * np.sqrt(0.3795e4) * ((t3479 + t3480) * np.cos((-t3466 + 6 * phi2)) + (t3479 - t3480) * np.cos((t3466 + 6 * phi2)))

        if Bindx == 192:
            t3496 = np.cos(phi)
            t3495 = t3496 ** 2
            t3498 = t3496 * t3495
            t3499 = t3495 ** 2
            t3500 = t3496 * t3499
            t3501 = t3498 ** 2
            t3502 = t3496 * t3501
            t3503 = t3499 ** 2
            t3505 = t3500 ** 2
            t3507 = t3501 ** 2
            t3511 = 80 * t3498 - 3828 * t3500 + 4224 * t3502 + (3124 * t3503 - 3280 * t3505 - 540 * t3507 + 220) * t3496
            t3510 = 63 * t3502 ** 2 - 527 * t3495 + 2013 * t3499 + 1485 * t3501 - 6765 * t3503 + 1859 * t3505 + 1903 * t3507 - 31
            t3497 = 10 * phi1
            tfunc[..., c] = -0.145e3 / 0.16384e5 * np.sqrt(0.78e2) * ((t3510 + t3511) * np.cos((-t3497 + 12 * phi2)) + (t3510 - t3511) * np.cos((t3497 + 12 * phi2)))

        if Bindx == 193:
            t3517 = np.sin(phi)
            t3513 = t3517 ** 2
            t3514 = t3517 * t3513
            t3515 = t3514 ** 2
            t3512 = np.cos(phi)
            tfunc[..., c] = -0.145e3 / 0.2048e4 * np.sqrt(0.2028117e7) * t3512 * t3515 ** 2 * (9 * t3512 ** 2 - 1) * np.sin((11 * phi1)) * ((1 - t3512) ** (-0.1e1 / 0.2e1)) * ((1 + t3512) ** (-0.1e1 / 0.2e1))

        if Bindx == 194:
            t3534 = np.cos(phi)
            t3533 = t3534 ** 2
            t3537 = t3533 ** 2
            t3536 = t3534 * t3533
            t3539 = t3536 ** 2
            t3541 = t3537 ** 2
            t3538 = t3534 * t3537
            t3543 = t3538 ** 2
            t3545 = t3539 ** 2
            t3540 = t3534 * t3539
            t3547 = t3540 ** 2
            t3550 = -31 + 837 * t3533 - 6131 * t3537 + 16497 * t3539 - 16749 * t3541 + 671 * t3543 + 8767 * t3545 - 3861 * t3547
            t3549 = 1037 * t3536 + 1341 * t3538 - 14679 * t3540 + (27667 * t3541 - 19881 * t3543 + 3887 * t3545 + 819 * t3547 - 191) * t3534
            t3535 = 11 * phi1
            tfunc[..., c] = 0.29e2 / 0.8192e4 * np.sqrt(0.3795e4) * (-(t3549 + t3550) * np.sin((-t3535 + 6 * phi2)) + (t3549 - t3550) * np.sin((t3535 + 6 * phi2))) * ((1 - t3534) ** (-0.1e1 / 0.2e1)) * ((1 + t3534) ** (-0.1e1 / 0.2e1))

        if Bindx == 195:
            t3567 = np.cos(phi)
            t3566 = t3567 ** 2
            t3570 = t3566 ** 2
            t3569 = t3567 * t3566
            t3572 = t3569 ** 2
            t3574 = t3570 ** 2
            t3571 = t3567 * t3570
            t3576 = t3571 ** 2
            t3578 = t3572 ** 2
            t3573 = t3567 * t3572
            t3580 = t3573 ** 2
            t3583 = 38 + 1026 * t3566 - 1394 * t3570 - 7062 * t3572 + 10098 * t3574 + 2662 * t3576 - 4774 * t3578 - 594 * t3580
            t3582 = -1199 * t3569 + 6237 * t3571 - 627 * t3573 + (-10637 * t3574 + 4131 * t3576 + 2351 * t3578 + 63 * t3580 - 319) * t3567
            t3568 = 11 * phi1
            tfunc[..., c] = -0.29e2 / 0.8192e4 * np.sqrt(0.78e2) * (-(t3582 + t3583) * np.sin((-t3568 + 12 * phi2)) + (t3582 - t3583) * np.sin((t3568 + 12 * phi2))) * ((1 - t3567) ** (-0.1e1 / 0.2e1)) * ((1 + t3567) ** (-0.1e1 / 0.2e1))

        if Bindx == 196:
            t3584 = np.cos(phi)
            t3585 = t3584 ** 2
            t3586 = t3585 ** 2
            t3587 = t3585 * t3586
            t3590 = t3587 ** 2
            t3588 = t3586 ** 2
            tfunc[..., c] = 0.145e3 / 0.4096e4 * np.sqrt(0.2e1) * np.sqrt(0.52003e5) * (-177 * t3586 + 425 * t3587 - 555 * t3588 - 163 * t3590 - 1 + (411 * t3588 + 27 * t3590 + 33) * t3585) * np.cos((12 * phi1))

        if Bindx == 197:
            t3607 = np.cos(phi)
            t3606 = t3607 ** 2
            t3609 = t3607 * t3606
            t3610 = t3606 ** 2
            t3611 = t3607 * t3610
            t3612 = t3609 ** 2
            t3613 = t3607 * t3612
            t3614 = t3610 ** 2
            t3616 = t3611 ** 2
            t3618 = t3612 ** 2
            t3622 = -752 * t3609 + 3708 * t3611 - 5760 * t3613 + (2372 * t3614 + 1392 * t3616 - 972 * t3618 + 12) * t3607
            t3621 = 189 * t3613 ** 2 + 435 * t3606 - 1161 * t3610 - 729 * t3612 + 5049 * t3614 - 5079 * t3616 + 1325 * t3618 - 29
            t3608 = 12 * phi1
            tfunc[..., c] = -0.29e2 / 0.16384e5 * np.sqrt(0.32890e5) * ((t3621 + t3622) * np.cos((-t3608 + 6 * phi2)) + (t3621 - t3622) * np.cos((t3608 + 6 * phi2)))

        if Bindx == 198:
            t3638 = np.cos(phi)
            t3637 = t3638 ** 2
            t3639 = t3638 * t3637
            t3640 = t3637 ** 2
            t3641 = t3638 * t3640
            t3642 = t3639 ** 2
            t3643 = t3638 * t3642
            t3644 = t3640 ** 2
            t3646 = t3641 ** 2
            t3648 = t3642 ** 2
            t3652 = -0.19981e5 / 0.512e3 * t3639 + 0.37323e5 / 0.1024e4 * t3641 + 0.37323e5 / 0.256e3 * t3643 + (-0.70499e5 / 0.1024e4 * t3644 - 0.39585e5 / 0.512e3 * t3646 - 0.7047e4 / 0.1024e4 * t3648 - 0.4785e4 / 0.1024e4) * t3638
            t3651 = 0.5481e4 / 0.8192e4 * t3643 ** 2 + 0.154947e6 / 0.8192e4 * t3637 + 0.261261e6 / 0.8192e4 * t3640 - 0.1057485e7 / 0.8192e4 * t3642 - 0.410553e6 / 0.8192e4 * t3644 + 0.908193e6 / 0.8192e4 * t3646 + 0.252967e6 / 0.8192e4 * t3648 + 0.3973e4 / 0.8192e4
            tfunc[..., c] = (t3651 + t3652) * np.cos((12 * phi1 - 12 * phi2)) + (t3651 - t3652) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 199:
            t3659 = np.sin(phi)
            t3654 = t3659 ** 2
            t3655 = t3659 * t3654
            t3657 = t3659 * t3655 ** 2
            t3653 = np.cos(phi)
            tfunc[..., c] = -0.435e3 / 0.2048e4 * np.sqrt(0.156009e6) * t3653 * t3657 ** 2 * np.sin((13 * phi1)) * ((1 - t3653) ** (-0.1e1 / 0.2e1)) * ((1 + t3653) ** (-0.1e1 / 0.2e1))

        if Bindx == 200:
            t3676 = np.cos(phi)
            t3675 = t3676 ** 2
            t3679 = t3675 ** 2
            t3678 = t3676 * t3675
            t3681 = t3678 ** 2
            t3683 = t3679 ** 2
            t3680 = t3676 * t3679
            t3685 = t3680 ** 2
            t3687 = t3681 ** 2
            t3682 = t3676 * t3681
            t3689 = t3682 ** 2
            t3692 = 3 - 9 * t3675 - 89 * t3679 + 347 * t3681 - 423 * t3683 + 149 * t3685 + 61 * t3687 - 39 * t3689
            t3691 = 89 * t3678 - 159 * t3680 - 27 * t3682 + (303 * t3683 - 261 * t3685 + 59 * t3687 + 7 * t3689 - 11) * t3676
            t3677 = 13 * phi1
            tfunc[..., c] = -0.87e2 / 0.8192e4 * np.sqrt(0.49335e5) * (-(t3691 + t3692) * np.sin((-t3677 + 6 * phi2)) + (t3691 - t3692) * np.sin((t3677 + 6 * phi2))) * ((1 - t3676) ** (-0.1e1 / 0.2e1)) * ((1 + t3676) ** (-0.1e1 / 0.2e1))

        if Bindx == 201:
            t3709 = np.cos(phi)
            t3708 = t3709 ** 2
            t3712 = t3708 ** 2
            t3711 = t3709 * t3708
            t3714 = t3711 ** 2
            t3716 = t3712 ** 2
            t3713 = t3709 * t3712
            t3718 = t3713 ** 2
            t3720 = t3714 ** 2
            t3715 = t3709 * t3714
            t3722 = t3715 ** 2
            t3725 = -6 - 306 * t3708 - 1118 * t3712 + 1430 * t3714 + 2574 * t3716 - 1430 * t3718 - 1066 * t3720 - 78 * t3722
            t3724 = 793 * t3711 + 429 * t3713 - 3003 * t3715 + (-429 * t3716 + 1755 * t3718 + 383 * t3720 + 7 * t3722 + 65) * t3709
            t3710 = 13 * phi1
            tfunc[..., c] = 0.87e2 / 0.8192e4 * np.sqrt(0.6e1) * (-(t3724 + t3725) * np.sin((-t3710 + 12 * phi2)) + (t3724 - t3725) * np.sin((t3710 + 12 * phi2))) * ((1 - t3709) ** (-0.1e1 / 0.2e1)) * ((1 + t3709) ** (-0.1e1 / 0.2e1))

        if Bindx == 202:
            t3726 = np.cos(phi)
            t3727 = t3726 ** 2
            t3728 = t3727 ** 2
            t3729 = t3727 * t3728
            t3732 = t3729 ** 2
            t3730 = t3728 ** 2
            tfunc[..., c] = -0.435e3 / 0.4096e4 * np.sqrt(0.22287e5) * np.cos((14 * phi1)) * (-21 * t3728 + 35 * t3729 - 35 * t3730 - 7 * t3732 - 1 + (21 * t3730 + t3732 + 7) * t3727)

        if Bindx == 203:
            t3749 = np.cos(phi)
            t3765 = -6 * t3749
            t3748 = t3749 ** 2
            t3751 = t3749 * t3748
            t3752 = t3748 ** 2
            t3753 = t3749 * t3752
            t3754 = t3751 ** 2
            t3755 = t3749 * t3754
            t3756 = t3752 ** 2
            t3758 = t3753 ** 2
            t3760 = t3754 ** 2
            t3764 = t3760 * t3765 + 4 * t3751 + 38 * t3753 - 72 * t3755 + t3765 + (38 * t3756 + 4 * t3758) * t3749
            t3763 = t3755 ** 2 + 11 * t3748 - 39 * t3752 + 27 * t3754 + 27 * t3756 - 39 * t3758 + 11 * t3760 + 1
            t3750 = 14 * phi1
            tfunc[..., c] = 0.87e2 / 0.16384e5 * np.sqrt(0.345345e6) * ((t3763 + t3764) * np.cos((-t3750 + 6 * phi2)) + (t3763 - t3764) * np.cos((t3750 + 6 * phi2)))

        if Bindx == 204:
            t3780 = np.cos(phi)
            t3779 = t3780 ** 2
            t3782 = t3780 * t3779
            t3783 = t3779 ** 2
            t3784 = t3780 * t3783
            t3786 = t3783 ** 2
            t3788 = t3784 ** 2
            t3785 = t3782 ** 2
            t3790 = t3785 ** 2
            t3791 = t3780 * t3790
            t3794 = 208 * t3782 + 572 * t3784 - 12 * t3791 + (-572 * t3786 - 208 * t3788 + 12) * t3780
            t3793 = t3780 * t3791 - 65 * t3779 - 429 * t3783 - 429 * t3785 + 429 * t3786 + 429 * t3788 + 65 * t3790 - 1
            t3781 = 14 * phi1
            tfunc[..., c] = -0.87e2 / 0.16384e5 * np.sqrt(0.42e2) * ((t3793 + t3794) * np.cos((-t3781 + 12 * phi2)) + (t3793 - t3794) * np.cos((t3781 + 12 * phi2)))

        if Bindx == 205:
            tfunc[..., c] = 0

        if Bindx == 206:
            tfunc[..., c] = 0

        if Bindx == 207:
            t3812 = np.cos(phi)
            t3811 = t3812 ** 2
            t3813 = t3812 * t3811
            t3814 = t3811 ** 2
            t3815 = t3812 * t3814
            t3816 = t3813 ** 2
            t3817 = t3812 * t3816
            t3818 = t3814 ** 2
            t3820 = t3815 ** 2
            t3822 = t3816 ** 2
            t3824 = t3817 ** 2
            t3828 = -1414 * t3813 + 13650 * t3815 - 57726 * t3817 + (124798 * t3818 - 144210 * t3820 + 84870 * t3822 - 20010 * t3824 + 42) * t3812
            t3827 = 714 * t3811 - 12082 * t3814 + 78722 * t3816 + 451582 * t3820 - 448270 * t3822 + 233910 * t3824 - 7 + (-254544 - 50025 * t3818) * t3818
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.92378e5) * ((-t3827 + t3828) * np.sin((phi1 - 6 * phi2)) + (t3827 + t3828) * np.sin((phi1 + 6 * phi2))) * ((1 - t3812) ** (-0.1e1 / 0.2e1)) * ((1 + t3812) ** (-0.1e1 / 0.2e1))

        if Bindx == 208:
            t3846 = np.cos(phi)
            t3845 = t3846 ** 2
            t3847 = t3846 * t3845
            t3848 = t3845 ** 2
            t3849 = t3846 * t3848
            t3850 = t3847 ** 2
            t3851 = t3846 * t3850
            t3852 = t3848 ** 2
            t3854 = t3849 ** 2
            t3856 = t3850 ** 2
            t3858 = t3851 ** 2
            t3862 = 188 * t3847 - 876 * t3849 + 1980 * t3851 + (-2500 * t3852 + 1812 * t3854 - 708 * t3856 + 116 * t3858 - 12) * t3846
            t3861 = 48 * t3845 - 412 * t3848 + 1520 * t3850 + 3536 * t3854 - 2428 * t3856 + 912 * t3858 - 1 + (-3030 - 145 * t3852) * t3852
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.780045e6) * ((t3861 + t3862) * np.sin((phi1 - 12 * phi2)) + (-t3861 + t3862) * np.sin((phi1 + 12 * phi2))) * ((1 - t3846) ** (-0.1e1 / 0.2e1)) * ((1 + t3846) ** (-0.1e1 / 0.2e1))

        if Bindx == 209:
            t3879 = np.cos(phi)
            t3878 = t3879 ** 2
            t3882 = t3878 ** 2
            t3881 = t3879 * t3878
            t3884 = t3881 ** 2
            t3886 = t3882 ** 2
            t3883 = t3879 * t3882
            t3888 = t3883 ** 2
            t3890 = t3884 ** 2
            t3885 = t3879 * t3884
            t3892 = t3885 ** 2
            t3895 = 600 * t3878 - 9554 * t3882 + 55972 * t3884 - 153962 * t3886 + 215280 * t3888 - 148350 * t3890 + 40020 * t3892 - 6
            t3894 = 2763 * t3881 - 26851 * t3883 + 116355 * t3885 + (-261809 * t3886 + 318665 * t3888 - 199065 * t3890 + 50025 * t3892 - 83) * t3879
            t3880 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.19019e5) * ((-t3894 + t3895) * np.cos((-t3880 + 6 * phi2)) + (t3894 + t3895) * np.cos((t3880 + 6 * phi2)))

        if Bindx == 210:
            t3912 = np.cos(phi)
            t3911 = t3912 ** 2
            t3914 = t3912 * t3911
            t3915 = t3911 ** 2
            t3916 = t3912 * t3915
            t3917 = t3914 ** 2
            t3918 = t3912 * t3917
            t3919 = t3915 ** 2
            t3921 = t3916 ** 2
            t3923 = t3917 ** 2
            t3925 = t3918 ** 2
            t3928 = 279 * t3914 - 5 * t3916 - 3285 * t3918 + (8485 * t3919 - 9355 * t3921 + 4921 * t3923 - 1015 * t3925 - 25) * t3912
            t3927 = 12 - 552 * t3911 + 4204 * t3915 - 13160 * t3917 + 21220 * t3919 - 18712 * t3921 + 8612 * t3923 - 1624 * t3925
            t3913 = 2 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t3927 - t3928) * np.cos((-t3913 + 12 * phi2)) + (t3927 + t3928) * np.cos((t3913 + 12 * phi2)))

        if Bindx == 211:
            t3946 = np.cos(phi)
            t3945 = t3946 ** 2
            t3948 = t3946 * t3945
            t3949 = t3945 ** 2
            t3950 = t3946 * t3949
            t3951 = t3948 ** 2
            t3952 = t3946 * t3951
            t3953 = t3949 ** 2
            t3955 = t3950 ** 2
            t3957 = t3951 ** 2
            t3959 = t3952 ** 2
            t3963 = -54794 * t3948 + 516046 * t3950 - 2153714 * t3952 + (4647426 * t3953 - 5414430 * t3955 + 3238170 * t3957 - 780390 * t3959 + 1686) * t3946
            t3962 = 4606 * t3945 - 79694 * t3949 + 559206 * t3951 + 4046298 * t3955 - 4565730 * t3957 + 2699970 * t3959 - 47 + (-2014284 - 650325 * t3953) * t3953
            t3947 = 3 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.2926e4) * (-(-t3962 + t3963) * np.sin((-t3947 + 6 * phi2)) + (t3962 + t3963) * np.sin((t3947 + 6 * phi2))) * ((1 + t3946) ** (-0.1e1 / 0.2e1)) * ((1 - t3946) ** (-0.1e1 / 0.2e1))

        if Bindx == 212:
            t3981 = np.cos(phi)
            t3980 = t3981 ** 2
            t3983 = t3981 * t3980
            t3984 = t3980 ** 2
            t3985 = t3981 * t3984
            t3986 = t3983 ** 2
            t3987 = t3981 * t3986
            t3988 = t3984 ** 2
            t3990 = t3985 ** 2
            t3992 = t3986 ** 2
            t3994 = t3987 ** 2
            t3998 = -1036 * t3983 + 6716 * t3985 - 20140 * t3987 + (32020 * t3988 - 28100 * t3990 + 12916 * t3992 - 2436 * t3994 + 60) * t3981
            t3997 = -572 * t3980 + 3904 * t3984 - 10380 * t3986 - 4788 * t3990 - 3448 * t3992 + 3836 * t3994 + 13 + (12450 - 1015 * t3988) * t3988
            t3982 = 3 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.85215e5) * (-(-t3997 + t3998) * np.sin((-t3982 + 12 * phi2)) + (t3997 + t3998) * np.sin((t3982 + 12 * phi2))) * ((1 + t3981) ** (-0.1e1 / 0.2e1)) * ((1 - t3981) ** (-0.1e1 / 0.2e1))

        if Bindx == 213:
            t4015 = np.cos(phi)
            t4014 = t4015 ** 2
            t4017 = t4015 * t4014
            t4018 = t4014 ** 2
            t4019 = t4015 * t4018
            t4020 = t4017 ** 2
            t4021 = t4015 * t4020
            t4022 = t4018 ** 2
            t4024 = t4019 ** 2
            t4026 = t4020 ** 2
            t4028 = t4021 ** 2
            t4031 = 1509 * t4017 + 23089 * t4019 - 336111 * t4021 + (1383519 * t4022 - 2498145 * t4024 + 2076555 * t4026 - 650325 * t4028 - 91) * t4015
            t4030 = 15416 * t4014 - 234884 * t4018 + 1344056 * t4020 - 3687084 * t4022 + 5235720 * t4024 - 3713580 * t4026 + 1040520 * t4028 - 164
            t4016 = 4 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.462e3) * ((t4030 + t4031) * np.cos((-t4016 + 6 * phi2)) + (t4030 - t4031) * np.cos((t4016 + 6 * phi2)))

        if Bindx == 214:
            t4048 = np.cos(phi)
            t4047 = t4048 ** 2
            t4051 = t4047 ** 2
            t4050 = t4048 * t4047
            t4053 = t4050 ** 2
            t4055 = t4051 ** 2
            t4052 = t4048 * t4051
            t4057 = t4052 ** 2
            t4059 = t4053 ** 2
            t4054 = t4048 * t4053
            t4061 = t4054 ** 2
            t4064 = 8 - 320 * t4047 + 872 * t4051 + 2800 * t4053 - 13800 * t4055 + 20512 * t4057 - 13320 * t4059 + 3248 * t4061
            t4063 = 2091 * t4050 - 9815 * t4052 + 20355 * t4054 + (-19805 * t4055 + 7241 * t4057 + 1099 * t4059 - 1015 * t4061 - 151) * t4048
            t4049 = 4 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.1495e4) * ((t4063 + t4064) * np.cos((-t4049 + 12 * phi2)) + (-t4063 + t4064) * np.cos((t4049 + 12 * phi2)))

        if Bindx == 215:
            t4082 = np.cos(phi)
            t4081 = t4082 ** 2
            t4084 = t4082 * t4081
            t4085 = t4081 ** 2
            t4086 = t4082 * t4085
            t4087 = t4084 ** 2
            t4088 = t4082 * t4087
            t4089 = t4085 ** 2
            t4091 = t4086 ** 2
            t4093 = t4087 ** 2
            t4095 = t4088 ** 2
            t4099 = 179930 * t4084 - 1640574 * t4086 + 6840290 * t4088 + (-15081330 * t4089 + 18193230 * t4091 - 11347050 * t4093 + 2861430 * t4095 - 5926) * t4082
            t4098 = -19350 * t4081 + 258470 * t4085 - 1137694 * t4087 + 596574 * t4091 - 4440150 * t4093 + 4440150 * t4095 + 215 + (1732500 - 1430715 * t4089) * t4089
            t4083 = 5 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.210e3) * (-(t4098 + t4099) * np.sin((-t4083 + 6 * phi2)) + (-t4098 + t4099) * np.sin((t4083 + 6 * phi2))) * ((1 + t4082) ** (-0.1e1 / 0.2e1)) * ((1 - t4082) ** (-0.1e1 / 0.2e1))

        if Bindx == 216:
            t4117 = np.cos(phi)
            t4116 = t4117 ** 2
            t4119 = t4117 * t4116
            t4120 = t4116 ** 2
            t4121 = t4117 * t4120
            t4122 = t4119 ** 2
            t4123 = t4117 * t4122
            t4124 = t4120 ** 2
            t4126 = t4121 ** 2
            t4128 = t4122 ** 2
            t4130 = t4123 ** 2
            t4134 = 508 * t4119 - 1836 * t4121 + 2332 * t4123 + (412 * t4124 - 3564 * t4126 + 3004 * t4128 - 812 * t4130 - 44) * t4117
            t4133 = -36 * t4116 + 664 * t4120 - 3380 * t4122 - 7724 * t4126 + 3568 * t4128 - 252 * t4130 + 1 + (7362 - 203 * t4124) * t4124
            t4118 = 5 * phi1
            tfunc[..., c] = -0.465e3 / 0.16384e5 * np.sqrt(0.3289e4) * (-(-t4133 + t4134) * np.sin((-t4118 + 12 * phi2)) + (t4133 + t4134) * np.sin((t4118 + 12 * phi2))) * ((1 - t4117) ** (-0.1e1 / 0.2e1)) * ((1 + t4117) ** (-0.1e1 / 0.2e1))

        if Bindx == 217:
            t4151 = np.cos(phi)
            t4150 = t4151 ** 2
            t4153 = t4150 ** 2
            t4152 = t4151 * t4150
            t4155 = t4152 ** 2
            t4157 = t4153 ** 2
            t4154 = t4151 * t4153
            t4159 = t4154 ** 2
            t4161 = t4155 ** 2
            t4156 = t4151 * t4155
            t4163 = t4156 ** 2
            t4166 = 0.754509e6 / 0.2048e4 * t4150 - 0.44351979e8 / 0.8192e4 * t4153 + 0.130558267e9 / 0.4096e4 * t4155 - 0.763257231e9 / 0.8192e4 * t4157 + 0.145762155e9 / 0.1024e4 * t4159 - 0.888572685e9 / 0.8192e4 * t4161 + 0.133056495e9 / 0.4096e4 * t4163 - 0.35929e5 / 0.8192e4
            t4165 = 0.30427957e8 / 0.16384e5 * t4152 - 0.219938397e9 / 0.16384e5 * t4154 + 0.631038573e9 / 0.16384e5 * t4156 + (-0.732763647e9 / 0.16384e5 * t4157 + 0.96351255e8 / 0.16384e5 * t4159 + 0.417522105e9 / 0.16384e5 * t4161 - 0.221760825e9 / 0.16384e5 * t4163 - 0.1130973e7 / 0.16384e5) * t4151
            tfunc[..., c] = (t4165 + t4166) * np.cos((6 * phi1 - 6 * phi2)) + (-t4165 + t4166) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 218:
            t4183 = np.cos(phi)
            t4182 = t4183 ** 2
            t4186 = t4182 ** 2
            t4185 = t4183 * t4182
            t4188 = t4185 ** 2
            t4190 = t4186 ** 2
            t4187 = t4183 * t4186
            t4192 = t4187 ** 2
            t4194 = t4188 ** 2
            t4189 = t4183 * t4188
            t4196 = t4189 ** 2
            t4199 = 4 - 120 * t4182 + 996 * t4186 - 2936 * t4188 + 3276 * t4190 - 456 * t4192 - 1460 * t4194 + 696 * t4196
            t4198 = -223 * t4185 - 3 * t4187 + 2205 * t4189 + (-4717 * t4190 + 3603 * t4192 - 753 * t4194 - 145 * t4196 + 33) * t4183
            t4184 = 6 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((t4198 + t4199) * np.cos((-t4184 + 12 * phi2)) + (-t4198 + t4199) * np.cos((t4184 + 12 * phi2)))

        if Bindx == 219:
            t4217 = np.cos(phi)
            t4216 = t4217 ** 2
            t4219 = t4217 * t4216
            t4220 = t4216 ** 2
            t4221 = t4217 * t4220
            t4222 = t4219 ** 2
            t4223 = t4217 * t4222
            t4224 = t4220 ** 2
            t4226 = t4221 ** 2
            t4228 = t4222 ** 2
            t4230 = t4223 ** 2
            t4234 = 48258 * t4219 - 533190 * t4221 + 2745482 * t4223 + (-7161418 * t4224 + 9800070 * t4226 - 6718530 * t4228 + 1820910 * t4230 - 1582) * t4217
            t4233 = -39702 * t4216 + 501998 * t4220 - 2388638 * t4222 - 5621154 * t4226 + 1862770 * t4228 + 995670 * t4230 + 509 + (5338872 - 650325 * t4224) * t4224
            t4218 = 7 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.22e2) * (-(t4233 + t4234) * np.sin((-t4218 + 6 * phi2)) + (-t4233 + t4234) * np.sin((t4218 + 6 * phi2))) * ((1 - t4217) ** (-0.1e1 / 0.2e1)) * ((1 + t4217) ** (-0.1e1 / 0.2e1))

        if Bindx == 220:
            t4252 = np.cos(phi)
            t4251 = t4252 ** 2
            t4254 = t4252 * t4251
            t4255 = t4251 ** 2
            t4256 = t4252 * t4255
            t4257 = t4254 ** 2
            t4258 = t4252 * t4257
            t4259 = t4255 ** 2
            t4261 = t4256 ** 2
            t4263 = t4257 ** 2
            t4265 = t4258 ** 2
            t4269 = -92 * t4254 + 1740 * t4256 - 5852 * t4258 + (7524 * t4259 - 3060 * t4261 - 1052 * t4263 + 812 * t4265 - 20) * t4252
            t4268 = 216 * t4251 - 1252 * t4255 + 2200 * t4257 - 5368 * t4261 + 5036 * t4263 - 1272 * t4265 - 9 + (594 - 145 * t4259) * t4259
            t4253 = 7 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.31395e5) * (-(t4268 + t4269) * np.sin((-t4253 + 12 * phi2)) + (-t4268 + t4269) * np.sin((t4253 + 12 * phi2))) * ((1 - t4252) ** (-0.1e1 / 0.2e1)) * ((1 + t4252) ** (-0.1e1 / 0.2e1))

        if Bindx == 221:
            t4286 = np.cos(phi)
            t4285 = t4286 ** 2
            t4289 = t4285 ** 2
            t4288 = t4286 * t4285
            t4291 = t4288 ** 2
            t4293 = t4289 ** 2
            t4290 = t4286 * t4289
            t4295 = t4290 ** 2
            t4297 = t4291 ** 2
            t4292 = t4286 * t4291
            t4299 = t4292 ** 2
            t4302 = 560 * t4285 - 2632 * t4289 - 20496 * t4291 + 140776 * t4293 - 300720 * t4295 + 273000 * t4297 - 90480 * t4299 - 8
            t4301 = -10731 * t4288 + 73633 * t4290 - 222055 * t4292 + (316967 * t4293 - 185185 * t4295 - 1365 * t4297 + 28275 * t4299 + 461) * t4286
            t4287 = 8 * phi1
            tfunc[..., c] = 0.93e2 / 0.8192e4 * np.sqrt(0.253e3) * ((t4301 + t4302) * np.cos((-t4287 + 6 * phi2)) + (-t4301 + t4302) * np.cos((t4287 + 6 * phi2)))

        if Bindx == 222:
            t4319 = np.cos(phi)
            t4318 = t4319 ** 2
            t4322 = t4318 ** 2
            t4321 = t4319 * t4318
            t4324 = t4321 ** 2
            t4326 = t4322 ** 2
            t4323 = t4319 * t4322
            t4328 = t4323 ** 2
            t4330 = t4324 ** 2
            t4325 = t4319 * t4324
            t4332 = t4325 ** 2
            t4335 = 16 - 256 * t4318 + 592 * t4322 + 1760 * t4324 - 6864 * t4326 + 6336 * t4328 - 656 * t4330 - 928 * t4332
            t4334 = -587 * t4321 + 3047 * t4323 - 4587 * t4325 + (-11 * t4326 + 4295 * t4328 - 2027 * t4330 - 145 * t4332 + 15) * t4319
            t4320 = 8 * phi1
            tfunc[..., c] = -0.93e2 / 0.8192e4 * np.sqrt(0.2730e4) * ((-t4334 + t4335) * np.cos((-t4320 + 12 * phi2)) + (t4334 + t4335) * np.cos((t4320 + 12 * phi2)))

        if Bindx == 223:
            t4353 = np.cos(phi)
            t4352 = t4353 ** 2
            t4355 = t4353 * t4352
            t4356 = t4352 ** 2
            t4357 = t4353 * t4356
            t4358 = t4355 ** 2
            t4359 = t4353 * t4358
            t4360 = t4356 ** 2
            t4362 = t4357 ** 2
            t4364 = t4358 ** 2
            t4366 = t4359 ** 2
            t4370 = -10222 * t4355 + 44042 * t4357 - 35302 * t4359 + (-157914 * t4360 + 395190 * t4362 - 338130 * t4364 + 101790 * t4366 + 546) * t4353
            t4369 = -3658 * t4352 + 42674 * t4356 - 208066 * t4358 - 594046 * t4362 + 310830 * t4364 - 15990 * t4366 + 59 + (496472 - 28275 * t4360) * t4360
            t4354 = 9 * phi1
            tfunc[..., c] = -0.31e2 / 0.32768e5 * np.sqrt(0.10626e5) * (-(t4369 + t4370) * np.sin((-t4354 + 6 * phi2)) + (-t4369 + t4370) * np.sin((t4354 + 6 * phi2))) * ((1 - t4353) ** (-0.1e1 / 0.2e1)) * ((1 + t4353) ** (-0.1e1 / 0.2e1))

        if Bindx == 224:
            t4388 = np.cos(phi)
            t4387 = t4388 ** 2
            t4390 = t4388 * t4387
            t4391 = t4387 ** 2
            t4392 = t4388 * t4391
            t4393 = t4390 ** 2
            t4394 = t4388 * t4393
            t4395 = t4391 ** 2
            t4397 = t4392 ** 2
            t4399 = t4393 ** 2
            t4401 = t4394 ** 2
            t4405 = -7876 * t4390 + 23636 * t4392 - 3652 * t4394 + (-63492 * t4395 + 72084 * t4397 - 13956 * t4399 - 7308 * t4401 + 564) * t4388
            t4404 = -1416 * t4387 - 5196 * t4391 + 44088 * t4393 + 28776 * t4397 + 31364 * t4399 - 19096 * t4401 + 177 + (-77682 - 1015 * t4395) * t4395
            t4389 = 9 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(-t4404 + t4405) * np.sin((-t4389 + 12 * phi2)) + (t4404 + t4405) * np.sin((t4389 + 12 * phi2))) * ((1 - t4388) ** (-0.1e1 / 0.2e1)) * ((1 + t4388) ** (-0.1e1 / 0.2e1))

        if Bindx == 225:
            t4422 = np.cos(phi)
            t4421 = t4422 ** 2
            t4425 = t4421 ** 2
            t4424 = t4422 * t4421
            t4427 = t4424 ** 2
            t4429 = t4425 ** 2
            t4426 = t4422 * t4425
            t4431 = t4426 ** 2
            t4433 = t4427 ** 2
            t4428 = t4422 * t4427
            t4435 = t4428 ** 2
            t4438 = 6 - 312 * t4421 + 2386 * t4425 - 6116 * t4427 + 3562 * t4429 + 7728 * t4431 - 11778 * t4433 + 4524 * t4435
            t4437 = 511 * t4424 - 4343 * t4426 + 15175 * t4428 + (-24125 * t4429 + 16549 * t4431 - 2613 * t4433 - 1131 * t4435 - 23) * t4422
            t4423 = 10 * phi1
            tfunc[..., c] = 0.465e3 / 0.16384e5 * np.sqrt(0.1771e4) * ((t4437 + t4438) * np.cos((-t4423 + 6 * phi2)) + (-t4437 + t4438) * np.cos((t4423 + 6 * phi2)))

        if Bindx == 226:
            t4455 = np.cos(phi)
            t4454 = t4455 ** 2
            t4458 = t4454 ** 2
            t4457 = t4455 * t4454
            t4460 = t4457 ** 2
            t4462 = t4458 ** 2
            t4459 = t4455 * t4458
            t4464 = t4459 ** 2
            t4466 = t4460 ** 2
            t4461 = t4455 * t4460
            t4468 = t4461 ** 2
            t4471 = 52 + 104 * t4454 - 4076 * t4458 + 10472 * t4460 - 1188 * t4462 - 13992 * t4464 + 7004 * t4466 + 1624 * t4468
            t4470 = 1819 * t4457 + 143 * t4459 - 13233 * t4461 + (16577 * t4462 + 289 * t4464 - 5131 * t4466 - 203 * t4468 - 261) * t4455
            t4456 = 10 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.390e3) * ((t4470 + t4471) * np.cos((-t4456 + 12 * phi2)) + (-t4470 + t4471) * np.cos((t4456 + 12 * phi2)))

        if Bindx == 227:
            t4489 = np.cos(phi)
            t4488 = t4489 ** 2
            t4491 = t4489 * t4488
            t4492 = t4488 ** 2
            t4493 = t4489 * t4492
            t4494 = t4491 ** 2
            t4495 = t4489 * t4494
            t4496 = t4492 ** 2
            t4498 = t4493 ** 2
            t4500 = t4494 ** 2
            t4502 = t4495 ** 2
            t4506 = -778 * t4491 + 3726 * t4493 - 7314 * t4495 + (4642 * t4496 + 3234 * t4498 - 5478 * t4500 + 1914 * t4502 + 54) * t4489
            t4505 = 42 * t4488 + 294 * t4492 - 3678 * t4494 - 15714 * t4498 + 9322 * t4500 - 1386 * t4502 - 1 + (11556 - 435 * t4496) * t4496
            t4490 = 11 * phi1
            tfunc[..., c] = 0.93e2 / 0.32768e5 * np.sqrt(0.230230e6) * (-(t4505 + t4506) * np.sin((-t4490 + 6 * phi2)) + (-t4505 + t4506) * np.sin((t4490 + 6 * phi2))) * ((1 - t4489) ** (-0.1e1 / 0.2e1)) * ((1 + t4489) ** (-0.1e1 / 0.2e1))

        if Bindx == 228:
            t4524 = np.cos(phi)
            t4523 = t4524 ** 2
            t4526 = t4524 * t4523
            t4527 = t4523 ** 2
            t4528 = t4524 * t4527
            t4529 = t4526 ** 2
            t4530 = t4524 * t4529
            t4531 = t4527 ** 2
            t4533 = t4528 ** 2
            t4535 = t4529 ** 2
            t4537 = t4530 ** 2
            t4541 = -6356 * t4526 - 40092 * t4528 + 126412 * t4530 + (-56628 * t4531 - 87516 * t4533 + 52844 * t4535 + 8932 * t4537 + 2404) * t4524
            t4540 = 4356 * t4523 - 35464 * t4527 + 33748 * t4529 - 148148 * t4533 + 17056 * t4535 + 31836 * t4537 + 363 + (95238 + 1015 * t4531) * t4531
            t4525 = 11 * phi1
            tfunc[..., c] = -0.93e2 / 0.16384e5 * np.sqrt(0.3e1) * (-(-t4540 + t4541) * np.sin((-t4525 + 12 * phi2)) + (t4540 + t4541) * np.sin((t4525 + 12 * phi2))) * ((1 - t4524) ** (-0.1e1 / 0.2e1)) * ((1 + t4524) ** (-0.1e1 / 0.2e1))

        if Bindx == 229:
            t4558 = np.cos(phi)
            t4557 = t4558 ** 2
            t4561 = t4557 ** 2
            t4560 = t4558 * t4557
            t4563 = t4560 ** 2
            t4565 = t4561 ** 2
            t4562 = t4558 * t4561
            t4567 = t4562 ** 2
            t4569 = t4563 ** 2
            t4564 = t4558 * t4563
            t4571 = t4564 ** 2
            t4574 = -4 + 120 * t4557 - 996 * t4561 + 2936 * t4563 - 3276 * t4565 + 456 * t4567 + 1460 * t4569 - 696 * t4571
            t4573 = -223 * t4560 - 3 * t4562 + 2205 * t4564 + (-4717 * t4565 + 3603 * t4567 - 753 * t4569 - 145 * t4571 + 33) * t4558
            t4559 = 12 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.690690e6) * ((-t4573 + t4574) * np.cos((-t4559 + 6 * phi2)) + (t4573 + t4574) * np.cos((t4559 + 6 * phi2)))

        if Bindx == 230:
            t4591 = np.cos(phi)
            t4590 = t4591 ** 2
            t4593 = t4590 ** 2
            t4592 = t4591 * t4590
            t4595 = t4592 ** 2
            t4597 = t4593 ** 2
            t4594 = t4591 * t4593
            t4599 = t4594 ** 2
            t4601 = t4595 ** 2
            t4596 = t4591 * t4595
            t4603 = t4596 ** 2
            t4606 = -0.5673e4 / 0.128e3 * t4590 + 0.117273e6 / 0.1024e4 * t4593 + 0.155155e6 / 0.512e3 * t4595 - 0.678249e6 / 0.1024e4 * t4597 - 0.13299e5 / 0.256e3 * t4599 + 0.329251e6 / 0.1024e4 * t4601 + 0.18879e5 / 0.512e3 * t4603 - 0.1891e4 / 0.1024e4
            t4605 = 0.292981e6 / 0.8192e4 * t4592 - 0.2806089e7 / 0.8192e4 * t4594 + 0.1476189e7 / 0.8192e4 * t4596 + (0.4738877e7 / 0.8192e4 * t4597 - 0.2690025e7 / 0.8192e4 * t4599 - 0.1229739e7 / 0.8192e4 * t4601 - 0.31465e5 / 0.8192e4 * t4603 + 0.122295e6 / 0.8192e4) * t4591
            tfunc[..., c] = (t4605 + t4606) * np.cos((12 * phi1 - 12 * phi2)) + (-t4605 + t4606) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 231:
            t4624 = np.cos(phi)
            t4623 = t4624 ** 2
            t4626 = t4624 * t4623
            t4627 = t4623 ** 2
            t4628 = t4624 * t4627
            t4629 = t4626 ** 2
            t4630 = t4624 * t4629
            t4631 = t4627 ** 2
            t4633 = t4628 ** 2
            t4635 = t4629 ** 2
            t4637 = t4630 ** 2
            t4641 = -482 * t4626 + 3222 * t4628 - 7274 * t4630 + (6586 * t4631 - 1062 * t4633 - 1742 * t4635 + 754 * t4637 - 2) * t4624
            t4640 = 342 * t4623 - 1318 * t4627 + 734 * t4629 - 7582 * t4633 + 4982 * t4635 - 918 * t4637 - 19 + (3924 - 145 * t4631) * t4631
            t4625 = 13 * phi1
            tfunc[..., c] = -0.93e2 / 0.32768e5 * np.sqrt(0.32890e5) * (-(t4640 + t4641) * np.sin((-t4625 + 6 * phi2)) + (-t4640 + t4641) * np.sin((t4625 + 6 * phi2))) * ((1 - t4624) ** (-0.1e1 / 0.2e1)) * ((1 + t4624) ** (-0.1e1 / 0.2e1))

        if Bindx == 232:
            t4659 = np.cos(phi)
            t4658 = t4659 ** 2
            t4661 = t4659 * t4658
            t4662 = t4658 ** 2
            t4663 = t4659 * t4662
            t4664 = t4661 ** 2
            t4665 = t4659 * t4664
            t4666 = t4662 ** 2
            t4668 = t4663 ** 2
            t4670 = t4664 ** 2
            t4672 = t4665 ** 2
            t4676 = -5588 * t4661 + 17316 * t4663 + 16588 * t4665 + (-47476 * t4666 + 2340 * t4668 + 16172 * t4670 + 1508 * t4672 - 860) * t4659
            t4675 = 3276 * t4658 + 208 * t4662 - 31460 * t4664 + 31460 * t4668 - 19864 * t4670 - 6732 * t4672 + 91 + (23166 - 145 * t4666) * t4666
            t4660 = 13 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.21e2) * (-(t4675 + t4676) * np.sin((-t4660 + 12 * phi2)) + (-t4675 + t4676) * np.sin((t4660 + 12 * phi2))) * ((1 - t4659) ** (-0.1e1 / 0.2e1)) * ((1 + t4659) ** (-0.1e1 / 0.2e1))

        if Bindx == 233:
            t4693 = np.cos(phi)
            t4692 = t4693 ** 2
            t4696 = t4692 ** 2
            t4695 = t4693 * t4692
            t4698 = t4695 ** 2
            t4700 = t4696 ** 2
            t4697 = t4693 * t4696
            t4702 = t4697 ** 2
            t4704 = t4698 ** 2
            t4699 = t4693 * t4698
            t4706 = t4699 ** 2
            t4709 = -2 + 8 * t4692 + 58 * t4696 - 244 * t4698 + 306 * t4700 - 112 * t4702 - 42 * t4704 + 28 * t4706
            t4708 = -63 * t4695 + 119 * t4697 + 9 * t4699 + (-211 * t4700 + 187 * t4702 - 43 * t4704 - 5 * t4706 + 7) * t4693
            t4694 = 14 * phi1
            tfunc[..., c] = 0.93e2 / 0.16384e5 * np.sqrt(0.476905e6) * ((t4708 + t4709) * np.cos((-t4694 + 6 * phi2)) + (-t4708 + t4709) * np.cos((t4694 + 6 * phi2)))

        if Bindx == 234:
            t4726 = np.cos(phi)
            t4725 = t4726 ** 2
            t4729 = t4725 ** 2
            t4728 = t4726 * t4725
            t4731 = t4728 ** 2
            t4733 = t4729 ** 2
            t4730 = t4726 * t4729
            t4735 = t4730 ** 2
            t4737 = t4731 ** 2
            t4732 = t4726 * t4731
            t4739 = t4732 ** 2
            t4742 = -4 - 200 * t4725 - 676 * t4729 + 1144 * t4731 + 1716 * t4733 - 1144 * t4735 - 780 * t4737 - 56 * t4739
            t4741 = -507 * t4728 - 143 * t4730 + 2145 * t4732 + (143 * t4733 - 1313 * t4735 - 277 * t4737 - 5 * t4739 - 43) * t4726
            t4727 = 14 * phi1
            tfunc[..., c] = 0.31e2 / 0.16384e5 * np.sqrt(0.1218e4) * ((-t4741 + t4742) * np.cos((-t4727 + 12 * phi2)) + (t4741 + t4742) * np.cos((t4727 + 12 * phi2)))

        if Bindx == 235:
            t4758 = np.cos(phi)
            t4774 = -6 * t4758
            t4757 = t4758 ** 2
            t4760 = t4758 * t4757
            t4761 = t4757 ** 2
            t4762 = t4758 * t4761
            t4763 = t4760 ** 2
            t4764 = t4758 * t4763
            t4765 = t4761 ** 2
            t4767 = t4762 ** 2
            t4769 = t4763 ** 2
            t4773 = t4769 * t4774 + 4 * t4760 + 38 * t4762 - 72 * t4764 + t4774 + (38 * t4765 + 4 * t4767) * t4758
            t4772 = -t4764 ** 2 - 11 * t4757 + 39 * t4761 - 27 * t4763 - 27 * t4765 + 39 * t4767 - 11 * t4769 - 1
            t4759 = 15 * phi1
            tfunc[..., c] = 0.155e3 / 0.32768e5 * np.sqrt(0.572286e6) * np.sqrt((1 - t4758)) * np.sqrt((1 + t4758)) * (-(-t4772 + t4773) * np.sin((-t4759 + 6 * phi2)) + (t4772 + t4773) * np.sin((t4759 + 6 * phi2)))

        if Bindx == 236:
            t4789 = np.cos(phi)
            t4788 = t4789 ** 2
            t4791 = t4789 * t4788
            t4792 = t4788 ** 2
            t4793 = t4789 * t4792
            t4795 = t4792 ** 2
            t4797 = t4793 ** 2
            t4794 = t4791 ** 2
            t4799 = t4794 ** 2
            t4800 = t4789 * t4799
            t4803 = 208 * t4791 + 572 * t4793 - 12 * t4800 + (-572 * t4795 - 208 * t4797 + 12) * t4789
            t4802 = -t4789 * t4800 + 65 * t4788 + 429 * t4792 + 429 * t4794 - 429 * t4795 - 429 * t4797 - 65 * t4799 + 1
            t4790 = 15 * phi1
            tfunc[..., c] = -0.31e2 / 0.16384e5 * np.sqrt(0.1015e4) * np.sqrt((1 - t4789)) * np.sqrt((1 + t4789)) * (-(-t4802 + t4803) * np.sin((-t4790 + 12 * phi2)) + (t4802 + t4803) * np.sin((t4790 + 12 * phi2)))

        if Bindx == 237:
            t4804 = np.cos(phi)
            t4805 = t4804 ** 2
            t4806 = t4805 ** 2
            t4807 = t4805 * t4806
            t4810 = t4807 ** 2
            t4808 = t4806 ** 2
            tfunc[..., c] = 0.15058768725e11 / 0.8192e4 * t4810 - 0.672188517e9 / 0.4096e4 * t4807 + 0.160044885e9 / 0.8192e4 * t4806 + 0.212355e6 / 0.32768e5 + (0.11043097065e11 / 0.16384e5 + 0.9917826435e10 / 0.32768e5 * t4808) * t4808 + (-0.4798948275e10 / 0.4096e4 * t4810 - 0.6135053925e10 / 0.4096e4 * t4808 - 0.3610035e7 / 0.4096e4) * t4805

        if Bindx == 238:
            t4813 = np.cos(phi)
            t4814 = t4813 ** 2
            t4815 = t4814 ** 2
            t4816 = t4814 * t4815
            t4819 = t4816 ** 2
            t4817 = t4815 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.25194e5) * (47558 * t4815 - 345366 * t4816 + 2498490 * t4819 + 21 + (1225440 + 310155 * t4817) * t4817 + (-2353130 * t4817 - 1380690 * t4819 - 2478) * t4814) * np.cos((6 * phi2))

        if Bindx == 239:
            t4822 = np.cos(phi)
            t4823 = t4822 ** 2
            t4824 = t4823 ** 2
            t4825 = t4823 * t4824
            t4828 = t4825 ** 2
            t4826 = t4824 ** 2
            tfunc[..., c] = 0.495e3 / 0.8192e4 * np.sqrt(0.7429e4) * (1988 * t4824 - 8064 * t4825 + 14532 * t4828 + 3 + (17010 + 899 * t4826) * t4826 + (-20608 * t4826 - 5568 * t4828 - 192) * t4823) * np.cos((12 * phi2))

        if Bindx == 240:
            t4832 = np.cos(phi)
            t4833 = t4832 ** 2
            t4834 = t4833 ** 2
            t4835 = t4833 * t4834
            t4838 = t4835 ** 2
            t4836 = t4834 ** 2
            t4831 = np.sin(phi)
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.17e2) * t4832 * t4831 ** 2 * (-3594591 * t4834 + 19684665 * t4835 - 54679625 * t4836 - 59879925 * t4838 - 6435 + (80528175 * t4836 + 17678835 * t4838 + 285285) * t4833) * np.sin(phi1) * ((1 - t4832) ** (-0.1e1 / 0.2e1)) * ((1 + t4832) ** (-0.1e1 / 0.2e1))

        if Bindx == 241:
            t4858 = np.cos(phi)
            t4857 = t4858 ** 2
            t4860 = t4857 ** 2
            t4859 = t4858 * t4857
            t4862 = t4859 ** 2
            t4864 = t4860 ** 2
            t4861 = t4858 * t4860
            t4866 = t4861 ** 2
            t4868 = t4862 ** 2
            t4863 = t4858 * t4862
            t4870 = t4863 ** 2
            t4872 = t4864 ** 2
            t4875 = 7434 * t4857 - 142674 * t4860 + 1036098 * t4862 - 3676320 * t4864 + 7059390 * t4866 - 7495470 * t4868 + 4142070 * t4870 - 930465 * t4872 - 63
            t4874 = -97594 * t4859 + 1131214 * t4861 - 5937858 * t4863 + (16667410 * t4864 - 26756590 * t4866 + 24655770 * t4868 - 12146070 * t4870 + 2481240 * t4872 + 2478) * t4858
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.1482e4) * ((t4874 + t4875) * np.sin((phi1 - 6 * phi2)) + (t4874 - t4875) * np.sin((phi1 + 6 * phi2))) * ((1 - t4858) ** (-0.1e1 / 0.2e1)) * ((1 + t4858) ** (-0.1e1 / 0.2e1))

        if Bindx == 242:
            t4894 = np.cos(phi)
            t4893 = t4894 ** 2
            t4896 = t4893 ** 2
            t4895 = t4894 * t4893
            t4898 = t4895 ** 2
            t4900 = t4896 ** 2
            t4897 = t4894 * t4896
            t4902 = t4897 ** 2
            t4904 = t4898 ** 2
            t4899 = t4894 * t4898
            t4906 = t4899 ** 2
            t4908 = t4900 ** 2
            t4911 = -9 + 576 * t4893 - 5964 * t4896 + 24192 * t4898 - 51030 * t4900 + 61824 * t4902 - 43596 * t4904 + 16704 * t4906 - 2697 * t4908
            t4910 = -2084 * t4895 + 14084 * t4897 - 46116 * t4899 + (85540 * t4900 - 95116 * t4902 + 63084 * t4904 - 23084 * t4906 + 3596 * t4908 + 96) * t4894
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.437e3) * ((t4910 + t4911) * np.sin((phi1 - 12 * phi2)) + (t4910 - t4911) * np.sin((phi1 + 12 * phi2))) * ((1 - t4894) ** (-0.1e1 / 0.2e1)) * ((1 + t4894) ** (-0.1e1 / 0.2e1))

        if Bindx == 243:
            t4912 = np.cos(phi)
            t4913 = t4912 ** 2
            t4914 = t4913 ** 2
            t4915 = t4913 * t4914
            t4918 = t4915 ** 2
            t4916 = t4914 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.255e3) * (418418 * t4914 - 3461458 * t4915 + 36983310 * t4918 + 143 + (13997984 + 5892945 * t4916) * t4916 + (-30620590 * t4916 - 23191590 * t4918 - 19162) * t4913) * np.cos((2 * phi1))

        if Bindx == 244:
            t4938 = np.cos(phi)
            t4937 = t4938 ** 2
            t4940 = t4938 * t4937
            t4941 = t4937 ** 2
            t4942 = t4938 * t4941
            t4943 = t4940 ** 2
            t4944 = t4938 * t4943
            t4945 = t4941 ** 2
            t4947 = t4942 ** 2
            t4949 = t4943 ** 2
            t4951 = t4944 ** 2
            t4955 = -37555 * t4940 + 405419 * t4942 - 1900651 * t4944 + (4521225 * t4945 - 5710785 * t4947 + 3651825 * t4949 - 930465 * t4951 + 987) * t4938
            t4954 = -8120 * t4937 + 155134 * t4941 - 1136268 * t4943 - 8169600 * t4947 + 9042450 * t4949 - 5242620 * t4951 + 70 + (4118334 + 1240620 * t4945) * t4945
            t4939 = 2 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.1235e4) * ((t4954 + t4955) * np.cos((-t4939 + 6 * phi2)) + (t4954 - t4955) * np.cos((t4939 + 6 * phi2)))

        if Bindx == 245:
            t4973 = np.cos(phi)
            t4972 = t4973 ** 2
            t4976 = t4972 ** 2
            t4975 = t4973 * t4972
            t4978 = t4975 ** 2
            t4980 = t4976 ** 2
            t4977 = t4973 * t4976
            t4982 = t4977 ** 2
            t4984 = t4978 ** 2
            t4979 = t4973 * t4978
            t4986 = t4979 ** 2
            t4990 = 124 * t4972 + 280 * t4976 - 12180 * t4978 - 98028 * t4982 + 94136 * t4984 - 45820 * t4986 - 2 + (52500 + 8990 * t4980) * t4980
            t4989 = -7763 * t4975 + 46585 * t4977 - 129815 * t4979 + (195335 * t4980 - 164521 * t4982 + 73283 * t4984 - 13485 * t4986 + 381) * t4973
            t4974 = 2 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.13110e5) * ((t4989 + t4990) * np.cos((-t4974 + 12 * phi2)) + (-t4989 + t4990) * np.cos((t4974 + 12 * phi2)))

        if Bindx == 246:
            t5000 = np.sin(phi)
            t4998 = t5000 ** 2
            t4991 = np.cos(phi)
            t4992 = t4991 ** 2
            t4993 = t4992 ** 2
            t4995 = t4993 ** 2
            t4994 = t4992 * t4993
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33915e5) * t4991 * t4998 ** 2 * (69069 * t4993 + 740025 * t4995 + 143 + (-328900 + 310155 * t4994) * t4994 + (-780390 * t4995 - 6006) * t4992) * np.sin((3 * phi1)) * ((1 - t4991) ** (-0.1e1 / 0.2e1)) * ((1 + t4991) ** (-0.1e1 / 0.2e1))

        if Bindx == 247:
            t5019 = np.cos(phi)
            t5018 = t5019 ** 2
            t5022 = t5018 ** 2
            t5021 = t5019 * t5018
            t5024 = t5021 ** 2
            t5026 = t5022 ** 2
            t5023 = t5019 * t5022
            t5028 = t5023 ** 2
            t5030 = t5024 ** 2
            t5025 = t5019 * t5024
            t5032 = t5025 ** 2
            t5034 = t5026 ** 2
            t5037 = 22914 * t5018 - 427922 * t5022 + 3048346 * t5024 - 10700612 * t5026 + 20497830 * t5028 - 21875070 * t5030 + 12226110 * t5032 - 2791395 * t5034 - 201
            t5036 = -56458 * t5021 + 670766 * t5023 - 3726834 * t5025 + (11325522 * t5026 - 19943070 * t5028 + 20272890 * t5030 - 11025510 * t5032 + 2481240 * t5034 + 1454) * t5019
            t5020 = 3 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.910e3) * (-(t5036 + t5037) * np.sin((-t5020 + 6 * phi2)) + (t5036 - t5037) * np.sin((t5020 + 6 * phi2))) * ((1 - t5019) ** (-0.1e1 / 0.2e1)) * ((1 + t5019) ** (-0.1e1 / 0.2e1))

        if Bindx == 248:
            t5056 = np.cos(phi)
            t5055 = t5056 ** 2
            t5058 = t5056 * t5055
            t5059 = t5055 ** 2
            t5060 = t5056 * t5059
            t5061 = t5058 ** 2
            t5062 = t5056 * t5061
            t5063 = t5059 ** 2
            t5065 = t5060 ** 2
            t5067 = t5061 ** 2
            t5069 = t5062 ** 2
            t5071 = t5063 ** 2
            t5074 = 13148 * t5058 - 69340 * t5060 + 155580 * t5062 + (-149820 * t5063 + 8628 * t5065 + 100492 * t5067 - 75980 * t5069 + 17980 * t5071 - 688) * t5056
            t5073 = -3060 * t5055 + 34864 * t5059 - 170660 * t5061 + 433870 * t5063 - 621916 * t5065 + 509000 * t5067 - 222604 * t5069 + 40455 * t5071 + 51
            t5057 = 3 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.2415e4) * (-(-t5073 + t5074) * np.sin((-t5057 + 12 * phi2)) + (t5073 + t5074) * np.sin((t5057 + 12 * phi2))) * ((1 - t5056) ** (-0.1e1 / 0.2e1)) * ((1 + t5056) ** (-0.1e1 / 0.2e1))

        if Bindx == 249:
            t5075 = np.cos(phi)
            t5076 = t5075 ** 2
            t5077 = t5076 ** 2
            t5078 = t5076 * t5077
            t5081 = t5078 ** 2
            t5079 = t5077 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.88179e5) * (29348 * t5077 - 231616 * t5078 + 2143140 * t5081 + 11 + (893090 + 310155 * t5079) * t5079 + (-1862080 * t5079 - 1280640 * t5081 - 1408) * t5076) * np.cos((4 * phi1))

        if Bindx == 250:
            t5101 = np.cos(phi)
            t5100 = t5101 ** 2
            t5103 = t5101 * t5100
            t5104 = t5100 ** 2
            t5105 = t5101 * t5104
            t5106 = t5103 ** 2
            t5107 = t5101 * t5106
            t5108 = t5104 ** 2
            t5110 = t5105 ** 2
            t5112 = t5106 ** 2
            t5114 = t5107 ** 2
            t5118 = -487715 * t5103 + 5090953 * t5105 - 23424695 * t5107 + (55508775 * t5108 - 70777785 * t5110 + 46173075 * t5112 - 12096045 * t5114 + 13437) * t5101
            t5117 = -6820 * t5100 + 175640 * t5104 - 1941492 * t5106 - 27968460 * t5110 + 40006200 * t5112 - 28614300 * t5114 + 62 + (10285140 + 8064030 * t5108) * t5108
            t5102 = 4 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.14e2) * ((t5117 + t5118) * np.cos((-t5102 + 6 * phi2)) + (t5117 - t5118) * np.cos((t5102 + 6 * phi2)))

        if Bindx == 251:
            t5136 = np.cos(phi)
            t5135 = t5136 ** 2
            t5138 = t5136 * t5135
            t5139 = t5135 ** 2
            t5140 = t5136 * t5139
            t5141 = t5138 ** 2
            t5142 = t5136 * t5141
            t5143 = t5139 ** 2
            t5145 = t5140 ** 2
            t5147 = t5141 ** 2
            t5149 = t5142 ** 2
            t5153 = 85 * t5138 + 823 * t5140 - 6659 * t5142 + (17021 * t5143 - 20425 * t5145 + 11861 * t5147 - 2697 * t5149 - 9) * t5136
            t5152 = 280 * t5135 - 2612 * t5139 + 9720 * t5141 + 14664 * t5145 - 4036 * t5147 - 1624 * t5149 - 5 + (-17286 + 899 * t5143) * t5143
            t5137 = 4 * phi1
            tfunc[..., c] = 0.165e3 / 0.8192e4 * np.sqrt(0.6279e4) * ((t5152 + t5153) * np.cos((-t5137 + 12 * phi2)) + (t5152 - t5153) * np.cos((t5137 + 12 * phi2)))

        if Bindx == 252:
            t5163 = np.sin(phi)
            t5160 = t5163 ** 2
            t5161 = t5163 * t5160
            t5154 = np.cos(phi)
            t5155 = t5154 ** 2
            t5156 = t5155 ** 2
            t5158 = t5156 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.12597e5) * t5154 * t5161 ** 2 * (-88550 * t5156 - 550275 * t5158 - 231 + (341550 * t5156 + 310155 * t5158 + 8855) * t5155) * np.sin((5 * phi1)) * ((1 - t5154) ** (-0.1e1 / 0.2e1)) * ((1 + t5154) ** (-0.1e1 / 0.2e1))

        if Bindx == 253:
            t5182 = np.cos(phi)
            t5181 = t5182 ** 2
            t5185 = t5181 ** 2
            t5184 = t5182 * t5181
            t5187 = t5184 ** 2
            t5189 = t5185 ** 2
            t5186 = t5182 * t5185
            t5191 = t5186 ** 2
            t5193 = t5187 ** 2
            t5188 = t5182 * t5187
            t5195 = t5188 ** 2
            t5197 = t5189 ** 2
            t5200 = 487918 * t5181 - 8673630 * t5185 + 60237590 * t5187 - 210521300 * t5189 + 407970090 * t5191 - 445243890 * t5193 + 256228050 * t5195 - 60480225 * t5197 - 4603
            t5199 = 745790 * t5184 - 6298922 * t5186 + 18128022 * t5188 + (-4075830 * t5189 - 74406150 * t5191 + 147870450 * t5193 - 114197070 * t5195 + 32256120 * t5197 - 22410) * t5182
            t5183 = 5 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.2e1) * (-(t5199 + t5200) * np.sin((-t5183 + 6 * phi2)) + (t5199 - t5200) * np.sin((t5183 + 6 * phi2))) * ((1 + t5182) ** (-0.1e1 / 0.2e1)) * ((1 - t5182) ** (-0.1e1 / 0.2e1))

        if Bindx == 254:
            t5219 = np.cos(phi)
            t5218 = t5219 ** 2
            t5222 = t5218 ** 2
            t5221 = t5219 * t5218
            t5224 = t5221 ** 2
            t5226 = t5222 ** 2
            t5223 = t5219 * t5222
            t5228 = t5223 ** 2
            t5230 = t5224 ** 2
            t5225 = t5219 * t5224
            t5232 = t5225 ** 2
            t5234 = t5226 ** 2
            t5237 = 23 - 1196 * t5218 + 9048 * t5222 - 23068 * t5224 + 11422 * t5226 + 44604 * t5228 - 82912 * t5230 + 55564 * t5232 - 13485 * t5234
            t5236 = 2956 * t5221 - 22732 * t5223 + 79212 * t5225 + (-140012 * t5226 + 127172 * t5228 - 50628 * t5230 + 580 * t5232 + 3596 * t5234 - 144) * t5219
            t5220 = 5 * phi1
            tfunc[..., c] = 0.165e3 / 0.16384e5 * np.sqrt(0.897e3) * (-(t5236 + t5237) * np.sin((-t5220 + 12 * phi2)) + (t5236 - t5237) * np.sin((t5220 + 12 * phi2))) * ((1 + t5219) ** (-0.1e1 / 0.2e1)) * ((1 - t5219) ** (-0.1e1 / 0.2e1))

        if Bindx == 255:
            t5238 = np.cos(phi)
            t5239 = t5238 ** 2
            t5240 = t5239 ** 2
            t5241 = t5239 * t5240
            t5244 = t5241 ** 2
            t5242 = t5240 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.12597e5) * (47558 * t5240 - 345366 * t5241 + 2498490 * t5244 + 21 + (1225440 + 310155 * t5242) * t5242 + (-2353130 * t5242 - 1380690 * t5244 - 2478) * t5239) * np.cos((6 * phi1))

        if Bindx == 256:
            t5264 = np.cos(phi)
            t5263 = t5264 ** 2
            t5265 = t5264 * t5263
            t5266 = t5263 ** 2
            t5267 = t5264 * t5266
            t5268 = t5265 ** 2
            t5269 = t5264 * t5268
            t5270 = t5266 ** 2
            t5272 = t5267 ** 2
            t5274 = t5268 ** 2
            t5276 = t5269 ** 2
            t5280 = -0.41181525e8 / 0.16384e5 * t5265 + 0.418245597e9 / 0.16384e5 * t5267 - 0.1944857805e10 / 0.16384e5 * t5269 + (0.4769574975e10 / 0.16384e5 * t5270 - 0.6362290935e10 / 0.16384e5 * t5272 + 0.4356527175e10 / 0.16384e5 * t5274 - 0.1197508455e10 / 0.16384e5 * t5276 + 0.1220637e7 / 0.16384e5) * t5264
            t5279 = 0.938025e6 / 0.2048e4 * t5263 - 0.57222165e8 / 0.8192e4 * t5266 + 0.152147457e9 / 0.4096e4 * t5268 + 0.34189155e8 / 0.512e3 * t5272 + 0.264188925e9 / 0.8192e4 * t5274 - 0.321910875e9 / 0.4096e4 * t5276 - 0.37521e5 / 0.8192e4 + (-0.684158805e9 / 0.8192e4 + 0.133056495e9 / 0.4096e4 * t5270) * t5270
            tfunc[..., c] = (t5279 + t5280) * np.cos((6 * phi1 - 6 * phi2)) + (t5279 - t5280) * np.cos((6 * phi1 + 6 * phi2))

        if Bindx == 257:
            t5298 = np.cos(phi)
            t5297 = t5298 ** 2
            t5300 = t5298 * t5297
            t5301 = t5297 ** 2
            t5302 = t5298 * t5301
            t5303 = t5300 ** 2
            t5304 = t5298 * t5303
            t5305 = t5301 ** 2
            t5307 = t5302 ** 2
            t5309 = t5303 ** 2
            t5311 = t5304 ** 2
            t5315 = 2859 * t5300 - 15009 * t5302 + 32351 * t5304 + (-24783 * t5305 - 8751 * t5307 + 21605 * t5309 - 8091 * t5311 - 181) * t5298
            t5314 = -276 * t5297 - 104 * t5301 + 11484 * t5303 + 63844 * t5307 - 40200 * t5309 + 6612 * t5311 + 6 + (-43164 + 1798 * t5305) * t5305
            t5299 = 6 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5314 + t5315) * np.cos((-t5299 + 12 * phi2)) + (t5314 - t5315) * np.cos((t5299 + 12 * phi2)))

        if Bindx == 258:
            t5324 = np.sin(phi)
            t5321 = t5324 ** 2
            t5322 = t5321 ** 2
            t5316 = np.cos(phi)
            t5317 = t5316 ** 2
            t5318 = t5317 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.1448655e7) * t5316 * t5322 ** 2 * (-700 * t5317 + 21 + (-15660 * t5317 + 5670 + 13485 * t5318) * t5318) * np.sin((7 * phi1)) * ((1 + t5316) ** (-0.1e1 / 0.2e1)) * ((1 - t5316) ** (-0.1e1 / 0.2e1))

        if Bindx == 259:
            t5343 = np.cos(phi)
            t5342 = t5343 ** 2
            t5346 = t5342 ** 2
            t5345 = t5343 * t5342
            t5348 = t5345 ** 2
            t5350 = t5346 ** 2
            t5347 = t5343 * t5346
            t5352 = t5347 ** 2
            t5354 = t5348 ** 2
            t5349 = t5343 * t5348
            t5356 = t5349 ** 2
            t5358 = t5350 ** 2
            t5361 = 19082 * t5342 - 337554 * t5346 + 2514946 * t5348 - 9660376 * t5350 + 20482110 * t5352 - 24141390 * t5354 + 14804790 * t5356 - 3681405 * t5358 - 203
            t5360 = 177826 * t5345 - 1563142 * t5347 + 5959338 * t5349 + (-11144826 * t5350 + 9541350 * t5352 - 1302210 * t5354 - 3065010 * t5356 + 1402440 * t5358 - 5766) * t5343
            t5344 = 7 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.230e3) * (-(t5360 + t5361) * np.sin((-t5344 + 6 * phi2)) + (t5360 - t5361) * np.sin((t5344 + 6 * phi2))) * ((1 + t5343) ** (-0.1e1 / 0.2e1)) * ((1 - t5343) ** (-0.1e1 / 0.2e1))

        if Bindx == 260:
            t5380 = np.cos(phi)
            t5379 = t5380 ** 2
            t5383 = t5379 ** 2
            t5382 = t5380 * t5379
            t5385 = t5382 ** 2
            t5387 = t5383 ** 2
            t5384 = t5380 * t5383
            t5389 = t5384 ** 2
            t5391 = t5385 ** 2
            t5386 = t5380 * t5385
            t5393 = t5386 ** 2
            t5395 = t5387 ** 2
            t5398 = -4360 * t5379 + 67716 * t5383 - 349256 * t5385 + 773366 * t5387 - 744216 * t5389 + 157780 * t5391 + 193256 * t5393 - 94395 * t5395 + 109
            t5397 = -32788 * t5382 + 111412 * t5384 - 42900 * t5386 + (-427372 * t5387 + 842788 * t5389 - 593028 * t5391 + 121220 * t5393 + 17980 * t5395 + 2688) * t5380
            t5381 = 7 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.195e3) * (-(t5397 + t5398) * np.sin((-t5381 + 12 * phi2)) + (t5397 - t5398) * np.sin((t5381 + 12 * phi2))) * ((1 + t5380) ** (-0.1e1 / 0.2e1)) * ((1 - t5380) ** (-0.1e1 / 0.2e1))

        if Bindx == 261:
            t5399 = np.cos(phi)
            t5400 = t5399 ** 2
            t5401 = t5400 ** 2
            t5402 = t5400 * t5401
            t5405 = t5402 ** 2
            t5403 = t5401 ** 2
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.482885e6) * (12292 * t5401 - 78568 * t5402 + 398340 * t5405 + 7 + (246122 + 40455 * t5403) * t5403 + (-419560 * t5403 - 198360 * t5405 - 728) * t5400) * np.cos((8 * phi1))

        if Bindx == 262:
            t5425 = np.cos(phi)
            t5424 = t5425 ** 2
            t5427 = t5425 * t5424
            t5428 = t5424 ** 2
            t5429 = t5425 * t5428
            t5430 = t5427 ** 2
            t5431 = t5425 * t5430
            t5432 = t5428 ** 2
            t5434 = t5429 ** 2
            t5436 = t5430 ** 2
            t5438 = t5431 ** 2
            t5442 = -2317 * t5427 + 58247 * t5429 - 448657 * t5431 + (1467345 * t5432 - 2330055 * t5434 + 1781325 * t5436 - 525915 * t5438 + 27) * t5425
            t5441 = 8342 * t5424 - 115990 * t5428 + 607838 * t5430 + 1811810 * t5434 - 832650 * t5436 - 147030 * t5438 - 97 + (-1507528 + 175305 * t5432) * t5432
            t5426 = 8 * phi1
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.345e3) * ((t5441 + t5442) * np.cos((-t5426 + 6 * phi2)) + (t5441 - t5442) * np.cos((t5426 + 6 * phi2)))

        if Bindx == 263:
            t5460 = np.cos(phi)
            t5459 = t5460 ** 2
            t5463 = t5459 ** 2
            t5462 = t5460 * t5459
            t5465 = t5462 ** 2
            t5467 = t5463 ** 2
            t5464 = t5460 * t5463
            t5469 = t5464 ** 2
            t5471 = t5465 ** 2
            t5466 = t5460 * t5465
            t5473 = t5466 ** 2
            t5477 = -3552 * t5459 + 29940 * t5463 - 85536 * t5465 + 85536 * t5469 - 146252 * t5471 + 51040 * t5473 + 111 + (64218 + 4495 * t5467) * t5467
            t5476 = 3454 * t5462 + 17002 * t5464 - 121154 * t5466 + (228030 * t5467 - 146838 * t5469 - 6786 * t5471 + 26970 * t5473 - 678) * t5460
            t5461 = 8 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.130e3) * ((-t5476 + t5477) * np.cos((-t5461 + 12 * phi2)) + (t5476 + t5477) * np.cos((t5461 + 12 * phi2)))

        if Bindx == 264:
            t5486 = np.sin(phi)
            t5482 = t5486 ** 2
            t5484 = t5486 * t5482 ** 2
            t5478 = np.cos(phi)
            t5479 = t5478 ** 2
            t5480 = t5479 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.482885e6) * t5478 * t5484 ** 2 * (-5481 * t5480 - 35 + (8091 * t5480 + 945) * t5479) * np.sin((9 * phi1)) * ((1 - t5478) ** (-0.1e1 / 0.2e1)) * ((1 + t5478) ** (-0.1e1 / 0.2e1))

        if Bindx == 265:
            t5505 = np.cos(phi)
            t5504 = t5505 ** 2
            t5508 = t5504 ** 2
            t5507 = t5505 * t5504
            t5510 = t5507 ** 2
            t5512 = t5508 ** 2
            t5509 = t5505 * t5508
            t5514 = t5509 ** 2
            t5516 = t5510 ** 2
            t5511 = t5505 * t5510
            t5518 = t5511 ** 2
            t5520 = t5512 ** 2
            t5523 = -8658 * t5504 + 83258 * t5508 - 136234 * t5510 - 742456 * t5512 + 3245418 * t5514 - 5030298 * t5516 + 3535506 * t5518 - 946647 * t5520 + 111
            t5522 = 85562 * t5507 - 706510 * t5509 + 2707298 * t5511 + (-5384434 * t5512 + 5519150 * t5514 - 2392026 * t5516 - 106314 * t5518 + 280488 * t5520 - 3214) * t5505
            t5506 = 9 * phi1
            tfunc[..., c] = -0.33e2 / 0.32768e5 * np.sqrt(0.690e3) * (-(t5522 + t5523) * np.sin((-t5506 + 6 * phi2)) + (t5522 - t5523) * np.sin((t5506 + 6 * phi2))) * ((1 - t5505) ** (-0.1e1 / 0.2e1)) * ((1 + t5505) ** (-0.1e1 / 0.2e1))

        if Bindx == 266:
            t5542 = np.cos(phi)
            t5541 = t5542 ** 2
            t5545 = t5541 ** 2
            t5544 = t5542 * t5541
            t5547 = t5544 ** 2
            t5549 = t5545 ** 2
            t5546 = t5542 * t5545
            t5551 = t5546 ** 2
            t5553 = t5547 ** 2
            t5548 = t5542 * t5547
            t5555 = t5548 ** 2
            t5557 = t5549 ** 2
            t5560 = -4824 * t5541 + 25700 * t5545 - 22936 * t5547 - 116050 * t5549 + 286968 * t5551 - 210732 * t5553 + 17400 * t5555 + 24273 * t5557 + 201
            t5559 = -5700 * t5544 + 59748 * t5546 - 179652 * t5548 + (188100 * t5549 + 16404 * t5551 - 138100 * t5553 + 55796 * t5555 + 3596 * t5557 - 192) * t5542
            t5543 = 9 * phi1
            tfunc[..., c] = 0.99e2 / 0.16384e5 * np.sqrt(0.65e2) * (-(t5559 - t5560) * np.sin((-t5543 + 12 * phi2)) + (t5559 + t5560) * np.sin((t5543 + 12 * phi2))) * ((1 - t5542) ** (-0.1e1 / 0.2e1)) * ((1 + t5542) ** (-0.1e1 / 0.2e1))

        if Bindx == 267:
            t5561 = np.cos(phi)
            t5562 = t5561 ** 2
            t5563 = t5562 ** 2
            t5564 = t5562 * t5563
            t5567 = t5564 ** 2
            t5565 = t5563 ** 2
            tfunc[..., c] = -0.33e2 / 0.8192e4 * np.sqrt(0.260015e6) * (5990 * t5563 - 31766 * t5564 + 100890 * t5567 + 5 + (83680 + 8091 * t5565) * t5565 + (-122090 * t5565 - 44370 * t5567 - 430) * t5562) * np.cos((10 * phi1))

        if Bindx == 268:
            t5587 = np.cos(phi)
            t5586 = t5587 ** 2
            t5589 = t5587 * t5586
            t5590 = t5586 ** 2
            t5591 = t5587 * t5590
            t5592 = t5589 ** 2
            t5593 = t5587 * t5592
            t5594 = t5590 ** 2
            t5596 = t5591 ** 2
            t5598 = t5592 ** 2
            t5600 = t5593 ** 2
            t5604 = -4075 * t5589 + 20963 * t5591 - 32659 * t5593 + (-25311 * t5594 + 124407 * t5596 - 123975 * t5598 + 40455 * t5600 + 195) * t5587
            t5603 = 952 * t5586 - 12422 * t5590 + 67804 * t5592 + 232672 * t5596 - 134346 * t5598 + 12876 * t5600 - 14 + (-178310 + 10788 * t5594) * t5594
            t5588 = 10 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.31395e5) * ((t5603 - t5604) * np.cos((-t5588 + 6 * phi2)) + (t5603 + t5604) * np.cos((t5588 + 6 * phi2)))

        if Bindx == 269:
            t5622 = np.cos(phi)
            t5621 = t5622 ** 2
            t5624 = t5622 * t5621
            t5625 = t5621 ** 2
            t5626 = t5622 * t5625
            t5627 = t5624 ** 2
            t5628 = t5622 * t5627
            t5629 = t5625 ** 2
            t5631 = t5626 ** 2
            t5633 = t5627 ** 2
            t5635 = t5628 ** 2
            t5639 = 9091 * t5624 - 40937 * t5626 + 40183 * t5628 + (67353 * t5629 - 127335 * t5631 + 38541 * t5633 + 13485 * t5635 - 381) * t5622
            t5638 = 2604 * t5621 - 936 * t5625 - 49764 * t5627 - 87516 * t5631 - 36296 * t5633 + 38164 * t5635 - 186 + (132132 + 1798 * t5629) * t5629
            t5623 = 10 * phi1
            tfunc[..., c] = -0.99e2 / 0.16384e5 * np.sqrt(0.70e2) * ((t5638 - t5639) * np.cos((-t5623 + 12 * phi2)) + (t5638 + t5639) * np.cos((t5623 + 12 * phi2)))

        if Bindx == 270:
            t5647 = np.sin(phi)
            t5643 = t5647 ** 2
            t5644 = t5647 * t5643
            t5645 = t5644 ** 2
            t5640 = np.cos(phi)
            t5641 = t5640 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.260015e6) * t5640 * t5645 ** 2 * (15 + (-290 + 899 * t5641) * t5641) * np.sin((11 * phi1)) * ((1 - t5640) ** (-0.1e1 / 0.2e1)) * ((1 + t5640) ** (-0.1e1 / 0.2e1))

        if Bindx == 271:
            t5666 = np.cos(phi)
            t5665 = t5666 ** 2
            t5669 = t5665 ** 2
            t5668 = t5666 * t5665
            t5671 = t5668 ** 2
            t5673 = t5669 ** 2
            t5670 = t5666 * t5669
            t5675 = t5670 ** 2
            t5677 = t5671 ** 2
            t5672 = t5666 * t5671
            t5679 = t5672 ** 2
            t5681 = t5673 ** 2
            t5684 = -1798 * t5665 + 16758 * t5669 - 58958 * t5671 + 82676 * t5673 - 5874 * t5675 - 103334 * t5677 + 100166 * t5679 - 29667 * t5681 + 31
            t5683 = 1958 * t5668 - 22946 * t5670 + 106590 * t5672 + (-235774 * t5673 + 262066 * t5675 - 132534 * t5677 + 13514 * t5679 + 7192 * t5681 - 66) * t5666
            t5667 = 11 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.62790e5) * (-(t5683 + t5684) * np.sin((-t5667 + 6 * phi2)) + (t5683 - t5684) * np.sin((t5667 + 6 * phi2))) * ((1 - t5666) ** (-0.1e1 / 0.2e1)) * ((1 + t5666) ** (-0.1e1 / 0.2e1))

        if Bindx == 272:
            t5703 = np.cos(phi)
            t5702 = t5703 ** 2
            t5705 = t5703 * t5702
            t5706 = t5702 ** 2
            t5707 = t5703 * t5706
            t5708 = t5705 ** 2
            t5709 = t5703 * t5708
            t5710 = t5706 ** 2
            t5712 = t5707 ** 2
            t5714 = t5708 ** 2
            t5716 = t5709 ** 2
            t5718 = t5710 ** 2
            t5721 = 30668 * t5705 - 62348 * t5707 - 125268 * t5709 + (473044 * t5710 - 364156 * t5712 - 48132 * t5714 + 95236 * t5716 + 3596 * t5718 - 2640) * t5703
            t5720 = 2468 * t5702 + 43272 * t5706 - 224588 * t5708 + 286286 * t5710 + 94380 * t5712 - 354640 * t5714 + 123772 * t5716 + 29667 * t5718 - 617
            t5704 = 11 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.35e2) * (-(-t5720 + t5721) * np.sin((-t5704 + 12 * phi2)) + (t5720 + t5721) * np.sin((t5704 + 12 * phi2))) * ((1 - t5703) ** (-0.1e1 / 0.2e1)) * ((1 + t5703) ** (-0.1e1 / 0.2e1))

        if Bindx == 273:
            t5722 = np.cos(phi)
            t5723 = t5722 ** 2
            t5724 = t5723 ** 2
            t5725 = t5723 * t5724
            t5728 = t5725 ** 2
            t5726 = t5724 ** 2
            tfunc[..., c] = 0.495e3 / 0.16384e5 * np.sqrt(0.2e1) * np.sqrt(0.7429e4) * (1988 * t5724 - 8064 * t5725 + 14532 * t5728 + 3 + (17010 + 899 * t5726) * t5726 + (-20608 * t5726 - 5568 * t5728 - 192) * t5723) * np.cos((12 * phi1))

        if Bindx == 274:
            t5748 = np.cos(phi)
            t5747 = t5748 ** 2
            t5750 = t5748 * t5747
            t5751 = t5747 ** 2
            t5752 = t5748 * t5751
            t5753 = t5750 ** 2
            t5754 = t5748 * t5753
            t5755 = t5751 ** 2
            t5757 = t5752 ** 2
            t5759 = t5753 ** 2
            t5761 = t5754 ** 2
            t5765 = 2859 * t5750 - 15009 * t5752 + 32351 * t5754 + (-24783 * t5755 - 8751 * t5757 + 21605 * t5759 - 8091 * t5761 - 181) * t5748
            t5764 = -276 * t5747 - 104 * t5751 + 11484 * t5753 + 63844 * t5757 - 40200 * t5759 + 6612 * t5761 + 6 + (-43164 + 1798 * t5755) * t5755
            t5749 = 12 * phi1
            tfunc[..., c] = -0.165e3 / 0.16384e5 * np.sqrt(0.1794e4) * ((t5764 + t5765) * np.cos((-t5749 + 6 * phi2)) + (t5764 - t5765) * np.cos((t5749 + 6 * phi2)))

        if Bindx == 275:
            t5783 = np.cos(phi)
            t5782 = t5783 ** 2
            t5784 = t5783 * t5782
            t5785 = t5782 ** 2
            t5786 = t5783 * t5785
            t5787 = t5784 ** 2
            t5788 = t5783 * t5787
            t5789 = t5785 ** 2
            t5791 = t5786 ** 2
            t5793 = t5787 ** 2
            t5795 = t5788 ** 2
            t5799 = 0.1163547e7 / 0.8192e4 * t5784 + 0.3252249e7 / 0.8192e4 * t5786 - 0.16927053e8 / 0.8192e4 * t5788 + (0.12670515e8 / 0.8192e4 * t5789 + 0.10171161e8 / 0.8192e4 * t5791 - 0.8889573e7 / 0.8192e4 * t5793 - 0.1335015e7 / 0.8192e4 * t5795 - 0.240999e6 / 0.8192e4) * t5783
            t5798 = -0.1066065e7 / 0.2048e4 * t5785 + 0.891891e6 / 0.1024e4 * t5787 - 0.2741739e7 / 0.1024e4 * t5791 + 0.1252251e7 / 0.2048e4 * t5793 + 0.617265e6 / 0.1024e4 * t5795 + 0.39303e5 / 0.1024e4 * t5782 + 0.39303e5 / 0.8192e4 + (0.4374513e7 / 0.4096e4 + 0.148335e6 / 0.8192e4 * t5789) * t5789
            tfunc[..., c] = (t5798 + t5799) * np.cos((12 * phi1 - 12 * phi2)) + (t5798 - t5799) * np.cos((12 * phi1 + 12 * phi2))

        if Bindx == 276:
            t5806 = np.sin(phi)
            t5801 = t5806 ** 2
            t5802 = t5806 * t5801
            t5804 = t5806 * t5802 ** 2
            t5800 = np.cos(phi)
            tfunc[..., c] = -0.495e3 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.215441e6) * t5800 * t5804 ** 2 * (31 * t5800 ** 2 - 3) * np.sin((13 * phi1)) * ((1 - t5800) ** (-0.1e1 / 0.2e1)) * ((1 + t5800) ** (-0.1e1 / 0.2e1))

        if Bindx == 277:
            t5825 = np.cos(phi)
            t5824 = t5825 ** 2
            t5828 = t5824 ** 2
            t5827 = t5825 * t5824
            t5830 = t5827 ** 2
            t5832 = t5828 ** 2
            t5829 = t5825 * t5828
            t5834 = t5829 ** 2
            t5836 = t5830 ** 2
            t5831 = t5825 * t5830
            t5838 = t5831 ** 2
            t5840 = t5832 ** 2
            t5843 = 5 - 170 * t5824 + 1722 * t5828 - 6562 * t5830 + 11044 * t5832 - 7326 * t5834 - 1066 * t5836 + 3562 * t5838 - 1209 * t5840
            t5842 = -482 * t5827 + 758 * t5829 + 2838 * t5831 + (-10934 * t5832 + 14042 * t5834 - 7662 * t5836 + 1138 * t5838 + 248 * t5840 + 54) * t5825
            t5826 = 13 * phi1
            tfunc[..., c] = -0.165e3 / 0.32768e5 * np.sqrt(0.52026e5) * (-(t5842 + t5843) * np.sin((-t5826 + 6 * phi2)) + (t5842 - t5843) * np.sin((t5826 + 6 * phi2))) * ((1 - t5825) ** (-0.1e1 / 0.2e1)) * ((1 + t5825) ** (-0.1e1 / 0.2e1))

        if Bindx == 278:
            t5862 = np.cos(phi)
            t5861 = t5862 ** 2
            t5864 = t5862 * t5861
            t5865 = t5861 ** 2
            t5866 = t5862 * t5865
            t5867 = t5864 ** 2
            t5868 = t5862 * t5867
            t5869 = t5865 ** 2
            t5871 = t5866 ** 2
            t5873 = t5867 ** 2
            t5875 = t5868 ** 2
            t5877 = t5869 ** 2
            t5880 = -52 * t5864 - 49868 * t5866 + 94380 * t5868 + (33748 * t5869 - 144508 * t5871 + 39228 * t5873 + 24580 * t5875 + 620 * t5877 + 1872) * t5862
            t5879 = -4820 * t5861 + 25536 * t5865 + 10556 * t5867 - 140426 * t5869 + 118404 * t5871 + 47320 * t5873 - 50284 * t5875 - 6045 * t5877 - 241
            t5863 = 13 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.29e2) * (-(t5879 + t5880) * np.sin((-t5863 + 12 * phi2)) + (-t5879 + t5880) * np.sin((t5863 + 12 * phi2))) * ((1 - t5862) ** (-0.1e1 / 0.2e1)) * ((1 + t5862) ** (-0.1e1 / 0.2e1))

        if Bindx == 279:
            t5881 = np.cos(phi)
            t5882 = t5881 ** 2
            t5883 = t5882 ** 2
            t5884 = t5882 * t5883
            t5887 = t5884 ** 2
            t5885 = t5883 ** 2
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.1077205e7) * (238 * t5883 - 686 * t5884 + 658 * t5887 + 1 + (1120 + 31 * t5885) * t5885 + (-1106 * t5885 - 218 * t5887 - 38) * t5882) * np.cos((14 * phi1))

        if Bindx == 280:
            t5907 = np.cos(phi)
            t5906 = t5907 ** 2
            t5909 = t5907 * t5906
            t5910 = t5906 ** 2
            t5911 = t5907 * t5910
            t5912 = t5909 ** 2
            t5913 = t5907 * t5912
            t5914 = t5910 ** 2
            t5916 = t5911 ** 2
            t5918 = t5912 ** 2
            t5920 = t5913 ** 2
            t5924 = 335 * t5909 - 2599 * t5911 + 6215 * t5913 + (-5885 * t5914 + 1141 * t5916 + 1435 * t5918 - 651 * t5920 + 9) * t5907
            t5923 = -280 * t5906 + 1190 * t5910 - 924 * t5912 + 6336 * t5916 - 4310 * t5918 + 820 * t5920 + 14 + (-2970 + 124 * t5914) * t5914
            t5908 = 14 * phi1
            tfunc[..., c] = 0.33e2 / 0.16384e5 * np.sqrt(0.130065e6) * ((t5923 + t5924) * np.cos((-t5908 + 6 * phi2)) + (t5923 - t5924) * np.cos((t5908 + 6 * phi2)))

        if Bindx == 281:
            t5942 = np.cos(phi)
            t5941 = t5942 ** 2
            t5944 = t5942 * t5941
            t5945 = t5941 ** 2
            t5946 = t5942 * t5945
            t5947 = t5944 ** 2
            t5948 = t5942 * t5947
            t5949 = t5945 ** 2
            t5951 = t5946 ** 2
            t5953 = t5947 ** 2
            t5955 = t5948 ** 2
            t5959 = 1771 * t5944 - 7553 * t5946 - 4433 * t5948 + (20449 * t5949 - 2639 * t5951 - 7259 * t5953 - 651 * t5955 + 315) * t5942
            t5958 = -1156 * t5941 + 728 * t5945 + 12012 * t5947 - 12012 * t5951 + 9464 * t5953 + 2948 * t5955 - 34 + (-12012 + 62 * t5949) * t5949
            t5943 = 14 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.290e3) * ((t5958 + t5959) * np.cos((-t5943 + 12 * phi2)) + (t5958 - t5959) * np.cos((t5943 + 12 * phi2)))

        if Bindx == 282:
            t5965 = np.sin(phi)
            t5961 = t5965 ** 2
            t5962 = t5961 ** 2
            t5963 = t5962 ** 2
            t5960 = np.cos(phi)
            tfunc[..., c] = -0.99e2 / 0.8192e4 * np.sqrt(0.2e1) * np.sqrt(0.33393355e8) * t5960 * t5963 ** 2 * np.sin((15 * phi1)) * ((1 - t5960) ** (-0.1e1 / 0.2e1)) * ((1 + t5960) ** (-0.1e1 / 0.2e1))

        if Bindx == 283:
            t5984 = np.cos(phi)
            t5983 = t5984 ** 2
            t5987 = t5983 ** 2
            t5986 = t5984 * t5983
            t5989 = t5986 ** 2
            t5991 = t5987 ** 2
            t5988 = t5984 * t5987
            t5993 = t5988 ** 2
            t5995 = t5989 ** 2
            t5990 = t5984 * t5989
            t5997 = t5990 ** 2
            t5999 = t5991 ** 2
            t6002 = -3 + 18 * t5983 + 70 * t5987 - 470 * t5989 + 880 * t5991 - 682 * t5993 + 122 * t5995 + 110 * t5997 - 45 * t5999
            t6001 = -110 * t5986 + 298 * t5988 - 198 * t5990 + (-330 * t5991 + 630 * t5993 - 370 * t5995 + 62 * t5997 + 8 * t5999 + 10) * t5984
            t5985 = 15 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8064030e7) * (-(t6001 + t6002) * np.sin((-t5985 + 6 * phi2)) + (t6001 - t6002) * np.sin((t5985 + 6 * phi2))) * ((1 - t5984) ** (-0.1e1 / 0.2e1)) * ((1 + t5984) ** (-0.1e1 / 0.2e1))

        if Bindx == 284:
            t6021 = np.cos(phi)
            t6020 = t6021 ** 2
            t6024 = t6020 ** 2
            t6023 = t6021 * t6020
            t6026 = t6023 ** 2
            t6028 = t6024 ** 2
            t6025 = t6021 * t6024
            t6030 = t6025 ** 2
            t6032 = t6026 ** 2
            t6027 = t6021 * t6026
            t6034 = t6027 ** 2
            t6036 = t6028 ** 2
            t6039 = 3 + 144 * t6020 + 308 * t6024 - 1456 * t6026 - 286 * t6028 + 2288 * t6030 - 364 * t6032 - 592 * t6034 - 45 * t6036
            t6038 = -332 * t6023 + 364 * t6025 + 1716 * t6027 + (-1716 * t6028 - 1092 * t6030 + 868 * t6032 + 220 * t6034 + 4 * t6036 - 32) * t6021
            t6022 = 15 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4495e4) * (-(t6038 + t6039) * np.sin((-t6022 + 12 * phi2)) + (t6038 - t6039) * np.sin((t6022 + 12 * phi2))) * ((1 - t6021) ** (-0.1e1 / 0.2e1)) * ((1 + t6021) ** (-0.1e1 / 0.2e1))

        if Bindx == 285:
            t6040 = np.cos(phi)
            t6041 = t6040 ** 2
            t6049 = -8 * t6041
            t6042 = t6041 ** 2
            t6044 = t6042 ** 2
            t6043 = t6041 * t6042
            tfunc[..., c] = 0.99e2 / 0.32768e5 * np.sqrt(0.33393355e8) * np.cos((16 * phi1)) * (28 * t6042 + t6049 + 1 + (-56 * t6041 + 70 + t6044) * t6044 + (-56 + (t6049 + 28) * t6043) * t6043)

        if Bindx == 286:
            t6066 = np.cos(phi)
            t6065 = t6066 ** 2
            t6069 = t6065 ** 2
            t6068 = t6066 * t6065
            t6071 = t6068 ** 2
            t6070 = t6066 * t6069
            t6074 = t6070 ** 2
            t6076 = t6071 ** 2
            t6072 = t6066 * t6071
            t6078 = t6072 ** 2
            t6079 = t6066 * t6078
            t6082 = t6066 * t6079 - 10 * t6065 + 50 * t6069 - 66 * t6071 + 66 * t6074 - 50 * t6076 + 10 * t6078 - 1
            t6081 = -10 * t6068 - 34 * t6070 - 6 * t6079 + (-110 * t6065 + 110) * t6072 + (34 * t6074 + 10 * t6076 + 6) * t6066
            t6067 = 16 * phi1
            tfunc[..., c] = -0.33e2 / 0.16384e5 * np.sqrt(0.4032015e7) * ((t6081 + t6082) * np.cos((-t6067 + 6 * phi2)) + (-t6081 + t6082) * np.cos((t6067 + 6 * phi2)))

        if Bindx == 287:
            t6098 = np.cos(phi)
            t6115 = -12 * t6098
            t6097 = t6098 ** 2
            t6101 = t6097 ** 2
            t6104 = t6101 ** 2
            t6105 = t6098 * t6104
            t6106 = t6097 * t6105
            t6107 = t6098 * t6106
            t6102 = t6098 * t6101
            t6103 = t6097 * t6102
            t6109 = t6103 ** 2
            t6113 = 64 * t6097 + 364 * t6101 + 364 * t6107 + 64 * t6109 + 1 + (-858 + t6104) * t6104
            t6112 = t6109 * t6115 - 364 * t6102 + 572 * t6103 + 572 * t6105 - 364 * t6106 + t6115 - 196 * (t6097 + t6107) * t6098
            t6099 = 16 * phi1
            tfunc[..., c] = 0.33e2 / 0.32768e5 * np.sqrt(0.8990e4) * ((t6112 + t6113) * np.cos((-t6099 + 12 * phi2)) + (-t6112 + t6113) * np.cos((t6099 + 12 * phi2)))
	
        c += 1

    return tfunc


if __name__ == '__main__':
    X = np.zeros([2, 3])
    phi1 = np.array([0.1,0.2])
    X[:, 0] = phi1
    phi = np.array([0.0, 0.4])
    X[:, 1] = phi
    phi2 = np.array([0.3, 0.6])
    X[:, 2] = phi2

    indxvec = gsh_basis_info()
    print indxvec

    lte2 = indxvec[:, 0] <= 2
    print lte2

    Bvec = np.arange(indxvec.shape[0])[lte2]
    print Bvec

    out_tvalues = gsh_eval(X, Bvec)
    print out_tvalues
    print out_tvalues.shape

